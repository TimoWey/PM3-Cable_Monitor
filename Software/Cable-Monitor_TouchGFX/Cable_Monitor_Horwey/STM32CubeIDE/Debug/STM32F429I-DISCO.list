
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002adec  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017560  0802af9c  0802af9c  0003af9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  080424fc  080424fc  000524fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  0804523c  0804523c  0005523c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  080453ac  080453ac  000553ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045a20  08045a20  00055a20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815ea50  0815ea50  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815ea50  0815ea50  0016ea50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815ea58  0815ea58  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815ea58  0815ea58  0016ea58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815ea6c  0815ea6c  0016ea6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815ea70  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001392c  20000168  0815ebd8  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013a94  0815ebd8  00173a94  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00099cbc  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00209f86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00291ec4  00000000  00000000  0020a019  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000325f2  00000000  00000000  0049bedd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004720  00000000  00000000  004ce4d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120675  00000000  00000000  004d2bf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007f01  00000000  00000000  005f3265  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00030abd  00000000  00000000  005fb166  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c5bd  00000000  00000000  0062bc23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d074  00000000  00000000  006681e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00675254  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  006785cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802af84 	.word	0x0802af84

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802af84 	.word	0x0802af84

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fd01 	bl	800907c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f029 ff07 	bl	802a48c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fed5 	bl	800142c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815ea70 	.word	0x0815ea70
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013a94 	.word	0x20013a94

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fba9 	bl	8000dfc <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba4 	b.w	8000e00 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fdcd 	bl	802925e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 bfa1 	b.w	8009788 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 bf89 	b.w	8009788 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 bf7a 	b.w	8009790 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 ff5f 	bl	800977c <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012e5b 	.word	0x20012e5b

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4c 	bl	8000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f847 	bl	8001a08 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 f982 	bl	8010c94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0d 	b.w	8000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb11 	b.w	8000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb35 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badd 	b.w	8000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae3 	b.w	8000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3b 	b.w	800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae7 	b.w	8000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f bbd7 	b.w	801016c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 fc4b 	bl	802925e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012e54 	.word	0x20012e54
 8000a20:	20012e50 	.word	0x20012e50
 8000a24:	20012e52 	.word	0x20012e52

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f029 fa23 	bl	8029e84 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802aff4 	.word	0x0802aff4
 8000a5c:	0802b02c 	.word	0x0802b02c
 8000a60:	0802b07a 	.word	0x0802b07a
 8000a64:	20012e5a 	.word	0x20012e5a

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f029 f9ff 	bl	8029e84 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012e50 	.word	0x20012e50
 8000a94:	20012e52 	.word	0x20012e52
 8000a98:	0802b0bf 	.word	0x0802b0bf
 8000a9c:	0802b122 	.word	0x0802b122
 8000aa0:	0802b07a 	.word	0x0802b07a
 8000aa4:	20012e56 	.word	0x20012e56
 8000aa8:	20012e58 	.word	0x20012e58

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c f960 	bl	800cd78 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f029 f9dd 	bl	8029e84 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c fa06 	bl	800cee0 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802b240 	.word	0x0802b240
 8000aec:	0802b289 	.word	0x0802b289
 8000af0:	0802b2b8 	.word	0x0802b2b8
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802b332 	.word	0x0802b332

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c b98c 	b.w	800ce20 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c b9ba 	b.w	800ce88 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c b97f 	b.w	800ce20 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c ba0d 	b.w	800cf54 <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c fa36 	bl	800cfc0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c fa2f 	bl	800cfc0 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f029 f97d 	bl	8029e84 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802b397 	.word	0x0802b397
 8000b90:	0802b374 	.word	0x0802b374
 8000b94:	0802b3d5 	.word	0x0802b3d5

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f029 f96f 	bl	8029e84 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802b44d 	.word	0x0802b44d
 8000bac:	0802b374 	.word	0x0802b374
 8000bb0:	0802b3d5 	.word	0x0802b3d5

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 fb50 	bl	802925e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f010 f9b2 	bl	8010f44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802b494 	.word	0x0802b494

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f8 	movw	r0, #5112	; 0x13f8
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMeasurement_Single_Display_1PScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 bed6 	b.w	80039f4 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fe15 	bl	800f87e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b54c 	.word	0x0802b54c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 faf9 	bl	802925e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fe01 	bl	800f87e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802b518 	.word	0x0802b518

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8000c92:	f028 fae4 	bl	802925e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fdeb 	bl	800f87e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802b4e4 	.word	0x0802b4e4

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 facf 	bl	802925e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	300c      	adds	r0, #12
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b580 	.word	0x0802b580

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51d0 	movw	r1, #5584	; 0x15d0
 8000d0e:	f028 faa6 	bl	802925e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fc1c 	bl	8002558 <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fc1d 	bl	8002560 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 fe1b 	bl	801896c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 f9fa 	bl	8008138 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fd79 	bl	801883c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d437      	bmi.n	8000dc4 <touchgfx_init+0xac>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f028 fa84 	bl	8029262 <__cxa_guard_acquire>
 8000d5a:	b398      	cbz	r0, 8000dc4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d5e:	4b21      	ldr	r3, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
 8000d60:	6023      	str	r3, [r4, #0]
 8000d62:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d66:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8000d6a:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8000d6e:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8000d72:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d74:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d7a:	6126      	str	r6, [r4, #16]
 8000d7c:	f00e fd80 	bl	800f880 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d80:	4b19      	ldr	r3, [pc, #100]	; (8000de8 <touchgfx_init+0xd0>)
 8000d82:	6163      	str	r3, [r4, #20]
 8000d84:	4640      	mov	r0, r8
 8000d86:	f00e fd7b 	bl	800f880 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d8a:	4b18      	ldr	r3, [pc, #96]	; (8000dec <touchgfx_init+0xd4>)
 8000d8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8e:	4638      	mov	r0, r7
 8000d90:	f00e fd76 	bl	800f880 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d94:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d98:	4a15      	ldr	r2, [pc, #84]	; (8000df0 <touchgfx_init+0xd8>)
 8000d9a:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8000d9e:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8000da2:	f007 fe2b 	bl	80089fc <_ZN5ModelC1Ev>
 8000da6:	4622      	mov	r2, r4
 8000da8:	f1a6 0108 	sub.w	r1, r6, #8
 8000dac:	4630      	mov	r0, r6
 8000dae:	f007 fb1d 	bl	80083ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db2:	4630      	mov	r0, r6
 8000db4:	f002 fe1e 	bl	80039f4 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db8:	480e      	ldr	r0, [pc, #56]	; (8000df4 <touchgfx_init+0xdc>)
 8000dba:	f029 f881 	bl	8029ec0 <atexit>
 8000dbe:	4628      	mov	r0, r5
 8000dc0:	f028 fa5b 	bl	802927a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc4:	480c      	ldr	r0, [pc, #48]	; (8000df8 <touchgfx_init+0xe0>)
}
 8000dc6:	b002      	add	sp, #8
 8000dc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dcc:	f7ff bdb4 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dd0:	20012ec0 	.word	0x20012ec0
 8000dd4:	20001844 	.word	0x20001844
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	0802b580 	.word	0x0802b580
 8000de8:	0802b4e4 	.word	0x0802b4e4
 8000dec:	0802b518 	.word	0x0802b518
 8000df0:	0802b54c 	.word	0x0802b54c
 8000df4:	08000cf1 	.word	0x08000cf1
 8000df8:	200017c8 	.word	0x200017c8

08000dfc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000dfc:	4770      	bx	lr
	...

08000e00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e00:	4801      	ldr	r0, [pc, #4]	; (8000e08 <touchgfx_taskEntry+0x8>)
 8000e02:	f7ff bda7 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e06:	bf00      	nop
 8000e08:	200017c8 	.word	0x200017c8

08000e0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e0e:	4e22      	ldr	r6, [pc, #136]	; (8000e98 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e10:	4c22      	ldr	r4, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e12:	4d23      	ldr	r5, [pc, #140]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e14:	4b23      	ldr	r3, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e16:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f7ff fed3 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f01c f870 	bl	801cf04 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e24:	4b20      	ldr	r3, [pc, #128]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e26:	4821      	ldr	r0, [pc, #132]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e28:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e2c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e30:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e34:	491e      	ldr	r1, [pc, #120]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e36:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e38:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e3c:	491d      	ldr	r1, [pc, #116]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e3e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e42:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e46:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e48:	21f0      	movs	r1, #240	; 0xf0
 8000e4a:	8001      	strh	r1, [r0, #0]
 8000e4c:	481b      	ldr	r0, [pc, #108]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e4e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e50:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e52:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e54:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e58:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e5c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e60:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e64:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e68:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e70:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e74:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e78:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e7c:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e7e:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e82:	8001      	strh	r1, [r0, #0]
 8000e84:	480f      	ldr	r0, [pc, #60]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e86:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e88:	490f      	ldr	r1, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8a:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e8c:	2201      	movs	r2, #1
 8000e8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e92:	4a0e      	ldr	r2, [pc, #56]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e94:	601a      	str	r2, [r3, #0]
}
 8000e96:	bd70      	pop	{r4, r5, r6, pc}
 8000e98:	20001784 	.word	0x20001784
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	20001848 	.word	0x20001848
 8000ea4:	0802afe4 	.word	0x0802afe4
 8000ea8:	200017c8 	.word	0x200017c8
 8000eac:	20012e50 	.word	0x20012e50
 8000eb0:	01000001 	.word	0x01000001
 8000eb4:	01010000 	.word	0x01010000
 8000eb8:	20012e5c 	.word	0x20012e5c
 8000ebc:	20012e56 	.word	0x20012e56
 8000ec0:	20012e52 	.word	0x20012e52
 8000ec4:	20012e58 	.word	0x20012e58
 8000ec8:	20012e54 	.word	0x20012e54
 8000ecc:	0802b170 	.word	0x0802b170

08000ed0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	4770      	bx	lr

08000ed4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed4:	8081      	strh	r1, [r0, #4]
    }
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ed8:	80c1      	strh	r1, [r0, #6]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000edc:	8101      	strh	r1, [r0, #8]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee0:	8141      	strh	r1, [r0, #10]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee4:	4770      	bx	lr

08000ee6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000eee:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef0:	88c4      	ldrh	r4, [r0, #6]
 8000ef2:	6803      	ldr	r3, [r0, #0]
 8000ef4:	1b12      	subs	r2, r2, r4
 8000ef6:	8884      	ldrh	r4, [r0, #4]
 8000ef8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efa:	1b09      	subs	r1, r1, r4
 8000efc:	b212      	sxth	r2, r2
    }
 8000efe:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f02:	b209      	sxth	r1, r1
 8000f04:	4718      	bx	r3

08000f06 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8000f10:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f12:	6813      	ldr	r3, [r2, #0]
 8000f14:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f16:	6010      	str	r0, [r2, #0]
    }
 8000f18:	4770      	bx	lr

08000f1a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f1e:	b11a      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f20:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f24:	b102      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f26:	6018      	str	r0, [r3, #0]
        }
    }
 8000f28:	4770      	bx	lr

08000f2a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f2e:	888b      	ldrh	r3, [r1, #4]
 8000f30:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f32:	2001      	movs	r0, #1
 8000f34:	4770      	bx	lr

08000f36 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f36:	4770      	bx	lr

08000f38 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f38:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f3c:	4770      	bx	lr

08000f3e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f3e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f42:	4770      	bx	lr

08000f44 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f44:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f46:	2200      	movs	r2, #0
        return rect.width;
 8000f48:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f4c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f50:	8002      	strh	r2, [r0, #0]
 8000f52:	8042      	strh	r2, [r0, #2]
 8000f54:	8084      	strh	r4, [r0, #4]
 8000f56:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f58:	bd10      	pop	{r4, pc}

08000f5a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	8002      	strh	r2, [r0, #0]
 8000f5e:	8042      	strh	r2, [r0, #2]
 8000f60:	8082      	strh	r2, [r0, #4]
 8000f62:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f64:	4770      	bx	lr
	...

08000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f68:	4b02      	ldr	r3, [pc, #8]	; (8000f74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6a:	2290      	movs	r2, #144	; 0x90
 8000f6c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
 8000f74:	e000e100 	.word	0xe000e100

08000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f78:	4b02      	ldr	r3, [pc, #8]	; (8000f84 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f7e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000e100 	.word	0xe000e100

08000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f88:	4a09      	ldr	r2, [pc, #36]	; (8000fb0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8a:	490a      	ldr	r1, [pc, #40]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f8c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f8e:	480a      	ldr	r0, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f90:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f94:	3b01      	subs	r3, #1
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9a:	6911      	ldr	r1, [r2, #16]
 8000f9c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa0:	3901      	subs	r1, #1
 8000fa2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000fa6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fa8:	f043 0301 	orr.w	r3, r3, #1
 8000fac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fae:	4770      	bx	lr
 8000fb0:	40016800 	.word	0x40016800
 8000fb4:	200018ce 	.word	0x200018ce
 8000fb8:	200018cc 	.word	0x200018cc

08000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fbc:	4b01      	ldr	r3, [pc, #4]	; (8000fc4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fbe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc2:	4770      	bx	lr
 8000fc4:	40016800 	.word	0x40016800

08000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fc8:	4b02      	ldr	r3, [pc, #8]	; (8000fd4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fca:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd0:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd2:	4770      	bx	lr
 8000fd4:	40016800 	.word	0x40016800

08000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fd8:	b570      	push	{r4, r5, r6, lr}
 8000fda:	4604      	mov	r4, r0
    HAL::initialize();
 8000fdc:	f00f f91b 	bl	8010216 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe4:	f014 f8c4 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 8000fe8:	4601      	mov	r1, r0
 8000fea:	4620      	mov	r0, r4
 8000fec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000fee:	6823      	ldr	r3, [r4, #0]
 8000ff0:	4a05      	ldr	r2, [pc, #20]	; (8001008 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ff6:	4620      	mov	r0, r4
 8000ff8:	46ac      	mov	ip, r5
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001000:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001004:	4760      	bx	ip
 8001006:	bf00      	nop
 8001008:	d004b000 	.word	0xd004b000

0800100c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800100c:	f00f b8ea 	b.w	80101e4 <_ZN8touchgfx3HAL10beginFrameEv>

08001010 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001010:	f00f b8f4 	b.w	80101fc <_ZN8touchgfx3HAL8endFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001014:	f00f b8b0 	b.w	8010178 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001018 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001018:	f00f ba11 	b.w	801043e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800101c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001020:	b112      	cbz	r2, 8001028 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001022:	6803      	ldr	r3, [r0, #0]
 8001024:	695b      	ldr	r3, [r3, #20]
 8001026:	4718      	bx	r3
    }
 8001028:	4770      	bx	lr
	...

0800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800102c:	4b04      	ldr	r3, [pc, #16]	; (8001040 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800102e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001032:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001036:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103a:	f3bf 8f6f 	isb	sy
}
 800103e:	4770      	bx	lr
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001044:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001046:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001048:	4e12      	ldr	r6, [pc, #72]	; (8001094 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800104c:	4b12      	ldr	r3, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800104e:	6003      	str	r3, [r0, #0]
 8001050:	6833      	ldr	r3, [r6, #0]
 8001052:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001056:	4605      	mov	r5, r0
 8001058:	b10a      	cbz	r2, 800105e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800105c:	b900      	cbnz	r0, 8001060 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800105e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001060:	6803      	ldr	r3, [r0, #0]
 8001062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001064:	4798      	blx	r3
        return auxiliaryLCD;
 8001066:	6833      	ldr	r3, [r6, #0]
 8001068:	fab0 f480 	clz	r4, r0
 800106c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800106e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001070:	b130      	cbz	r0, 8001080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001072:	6803      	ldr	r3, [r0, #0]
 8001074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001076:	4798      	blx	r3
 8001078:	2800      	cmp	r0, #0
 800107a:	bf08      	it	eq
 800107c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001080:	b92c      	cbnz	r4, 800108e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001082:	4b06      	ldr	r3, [pc, #24]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001084:	4a06      	ldr	r2, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001086:	4807      	ldr	r0, [pc, #28]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001088:	212c      	movs	r1, #44	; 0x2c
 800108a:	f028 fefb 	bl	8029e84 <__assert_func>
    }
 800108e:	4628      	mov	r0, r5
 8001090:	bd70      	pop	{r4, r5, r6, pc}
 8001092:	bf00      	nop
 8001094:	20012e5c 	.word	0x20012e5c
 8001098:	0802b690 	.word	0x0802b690
 800109c:	0802b58c 	.word	0x0802b58c
 80010a0:	0802b5ea 	.word	0x0802b5ea
 80010a4:	0802b623 	.word	0x0802b623

080010a8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010a8:	4770      	bx	lr
	...

080010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b0:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010ba:	d105      	bne.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010bc:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c0:	4281      	cmp	r1, r0
 80010c2:	d8fb      	bhi.n	80010bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010c8:	4f17      	ldr	r7, [pc, #92]	; (8001128 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ca:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ce:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d2:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d6:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010da:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010dc:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010de:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e0:	b2db      	uxtb	r3, r3
 80010e2:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e4:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e8:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ec:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f0:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f4:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010f8:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010fc:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001100:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001104:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001106:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800110e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001112:	fbbe fef5 	udiv	lr, lr, r5
 8001116:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800111e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001122:	4281      	cmp	r1, r0
 8001124:	d8de      	bhi.n	80010e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001126:	e7cd      	b.n	80010c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001128:	fffff800 	.word	0xfffff800

0800112c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800112c:	b510      	push	{r4, lr}
        return instance;
 800112e:	4c14      	ldr	r4, [pc, #80]	; (8001180 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	b323      	cbz	r3, 800117e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001134:	4b13      	ldr	r3, [pc, #76]	; (8001184 <HAL_LTDC_LineEventCallback+0x58>)
 8001136:	4a14      	ldr	r2, [pc, #80]	; (8001188 <HAL_LTDC_LineEventCallback+0x5c>)
 8001138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113a:	8811      	ldrh	r1, [r2, #0]
 800113c:	428b      	cmp	r3, r1
 800113e:	d113      	bne.n	8001168 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001140:	4b12      	ldr	r3, [pc, #72]	; (800118c <HAL_LTDC_LineEventCallback+0x60>)
 8001142:	8819      	ldrh	r1, [r3, #0]
 8001144:	f00a f93c 	bl	800b3c0 <HAL_LTDC_ProgramLineEvent>
 8001148:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800114e:	3301      	adds	r3, #1
 8001150:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001154:	f7ff fcea 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001158:	6820      	ldr	r0, [r4, #0]
 800115a:	f00f fd9b 	bl	8010c94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800115e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff bb62 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001168:	f00a f92a 	bl	800b3c0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800116c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800116e:	6803      	ldr	r3, [r0, #0]
 8001170:	6a1b      	ldr	r3, [r3, #32]
 8001172:	4798      	blx	r3
    }
 8001174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001178:	2000      	movs	r0, #0
 800117a:	f7ff bb6f 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800117e:	bd10      	pop	{r4, pc}
 8001180:	20012e5c 	.word	0x20012e5c
 8001184:	40016800 	.word	0x40016800
 8001188:	200018ce 	.word	0x200018ce
 800118c:	200018cc 	.word	0x200018cc

08001190 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001194:	ed2d 8b02 	vpush	{d8}
 8001198:	b091      	sub	sp, #68	; 0x44
 800119a:	af00      	add	r7, sp, #0
 800119c:	4605      	mov	r5, r0
 800119e:	4688      	mov	r8, r1
 80011a0:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a2:	f000 fe17 	bl	8001dd4 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011a6:	b203      	sxth	r3, r0
 80011a8:	60bb      	str	r3, [r7, #8]
 80011aa:	009b      	lsls	r3, r3, #2
 80011ac:	607b      	str	r3, [r7, #4]
 80011ae:	3307      	adds	r3, #7
 80011b0:	f023 0307 	bic.w	r3, r3, #7
 80011b4:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011b8:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011ba:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011bc:	b1f0      	cbz	r0, 80011fc <calculate_freq_and_signalstrength+0x6c>
 80011be:	3d01      	subs	r5, #1
 80011c0:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c2:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c4:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	f000 fe03 	bl	8001dd0 <MEAS_get_num_of_chan>
 80011ca:	fb06 5000 	mla	r0, r6, r0, r5
 80011ce:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d2:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011d6:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011dc:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011de:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e2:	d1f0      	bne.n	80011c6 <calculate_freq_and_signalstrength+0x36>
 80011e4:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011e6:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001294 <calculate_freq_and_signalstrength+0x104>
 80011ea:	4456      	add	r6, sl
 80011ec:	edd9 7a00 	vldr	s15, [r9]
 80011f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f4:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011f8:	454e      	cmp	r6, r9
 80011fa:	d1f7      	bne.n	80011ec <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	466a      	mov	r2, sp
 8001200:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001204:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001206:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120a:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 800120c:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800120e:	b2a1      	uxth	r1, r4
 8001210:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001214:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001218:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800121c:	f026 ff5e 	bl	80280dc <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001220:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001222:	2300      	movs	r3, #0
 8001224:	4651      	mov	r1, sl
 8001226:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122a:	462a      	mov	r2, r5
 800122c:	f026 ffda 	bl	80281e4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001230:	4622      	mov	r2, r4
 8001232:	4629      	mov	r1, r5
 8001234:	4628      	mov	r0, r5
 8001236:	f027 fc43 	bl	8028ac0 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123a:	f000 fdcd 	bl	8001dd8 <MEAS_get_samp_freq>
 800123e:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001242:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8001246:	edd9 7a00 	vldr	s15, [r9]
 800124a:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800124e:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001252:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001256:	f107 021c 	add.w	r2, r7, #28
 800125a:	4621      	mov	r1, r4
 800125c:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800125e:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001262:	f026 fed3 	bl	802800c <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001266:	edd7 7a06 	vldr	s15, [r7, #24]
 800126a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800126e:	f000 fdb3 	bl	8001dd8 <MEAS_get_samp_freq>
 8001272:	ee07 0a90 	vmov	s15, r0
 8001276:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127a:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800127e:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001282:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001284:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8001288:	46bd      	mov	sp, r7
 800128a:	ecbd 8b02 	vpop	{d8}
 800128e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001292:	bf00      	nop
 8001294:	44fff000 	.word	0x44fff000

08001298 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001298:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129a:	2064      	movs	r0, #100	; 0x64
 800129c:	f00b fd5e 	bl	800cd5c <osDelay>
  for(;;)
 80012a0:	e7fb      	b.n	800129a <StartDefaultTask+0x2>
 80012a2:	bf00      	nop

080012a4 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	4c10      	ldr	r4, [pc, #64]	; (80012e8 <StartTimeoutTask+0x44>)
 80012a8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ac:	4f0f      	ldr	r7, [pc, #60]	; (80012ec <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012ae:	4e10      	ldr	r6, [pc, #64]	; (80012f0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012be:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c0:	f00b fe48 	bl	800cf54 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c8:	4638      	mov	r0, r7
 80012ca:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012cc:	b912      	cbnz	r2, 80012d4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012ce:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d0:	f008 fa5a 	bl	8009788 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d4:	4630      	mov	r0, r6
 80012d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012da:	f008 fa59 	bl	8009790 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012de:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e2:	f00b fd3b 	bl	800cd5c <osDelay>
	  sleep_timeout_value--;
 80012e6:	e7e3      	b.n	80012b0 <StartTimeoutTask+0xc>
 80012e8:	20000014 	.word	0x20000014
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40021800 	.word	0x40021800
 80012f4:	200018d8 	.word	0x200018d8

080012f8 <updateGUI_test>:
	return sleep_timeout_value;
 80012f8:	4b01      	ldr	r3, [pc, #4]	; (8001300 <updateGUI_test+0x8>)
}
 80012fa:	6818      	ldr	r0, [r3, #0]
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	20000014 	.word	0x20000014

08001304 <gyro_disable>:
{
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	4e1f      	ldr	r6, [pc, #124]	; (8001388 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800130a:	4d20      	ldr	r5, [pc, #128]	; (800138c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800130c:	4c20      	ldr	r4, [pc, #128]	; (8001390 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800130e:	2700      	movs	r7, #0
 8001310:	9700      	str	r7, [sp, #0]
 8001312:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001314:	f043 0304 	orr.w	r3, r3, #4
 8001318:	6333      	str	r3, [r6, #48]	; 0x30
 800131a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800131c:	f003 0304 	and.w	r3, r3, #4
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001324:	682b      	ldr	r3, [r5, #0]
 8001326:	f023 030c 	bic.w	r3, r3, #12
 800132a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800132c:	682b      	ldr	r3, [r5, #0]
 800132e:	f043 0304 	orr.w	r3, r3, #4
 8001332:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001334:	69ab      	ldr	r3, [r5, #24]
 8001336:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800133c:	200a      	movs	r0, #10
 800133e:	f007 fed7 	bl	80090f0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	f043 030c 	orr.w	r3, r3, #12
 8001348:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800134a:	9701      	str	r7, [sp, #4]
 800134c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800134e:	f043 0320 	orr.w	r3, r3, #32
 8001352:	6333      	str	r3, [r6, #48]	; 0x30
 8001354:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001356:	f003 0320 	and.w	r3, r3, #32
 800135a:	9301      	str	r3, [sp, #4]
 800135c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800135e:	68a3      	ldr	r3, [r4, #8]
 8001360:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001364:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001366:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001368:	f023 030f 	bic.w	r3, r3, #15
 800136c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800136e:	68e3      	ldr	r3, [r4, #12]
 8001370:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001374:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001376:	200a      	movs	r0, #10
 8001378:	f007 feba 	bl	80090f0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001382:	6023      	str	r3, [r4, #0]
}
 8001384:	b003      	add	sp, #12
 8001386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001388:	40023800 	.word	0x40023800
 800138c:	40020800 	.word	0x40020800
 8001390:	40021400 	.word	0x40021400

08001394 <SystemClock_Config>:
{
 8001394:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001396:	2400      	movs	r4, #0
{
 8001398:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800139e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013aa:	4a1e      	ldr	r2, [pc, #120]	; (8001424 <SystemClock_Config+0x90>)
 80013ac:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ae:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b2:	4b1d      	ldr	r3, [pc, #116]	; (8001428 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013b8:	6411      	str	r1, [r2, #64]	; 0x40
 80013ba:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013bc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013c0:	9201      	str	r2, [sp, #4]
 80013c2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013c4:	9402      	str	r4, [sp, #8]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013cc:	601a      	str	r2, [r3, #0]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013d4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013d6:	2201      	movs	r2, #1
 80013d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013dc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013e2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013e6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ea:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013ee:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013f2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013f4:	2202      	movs	r2, #2
 80013f6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013f8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013fa:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013fe:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001400:	f00a f800 	bl	800b404 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001404:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001406:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800140a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800140e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001412:	a803      	add	r0, sp, #12
 8001414:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001416:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800141c:	f00a fa0a 	bl	800b834 <HAL_RCC_ClockConfig>
}
 8001420:	b015      	add	sp, #84	; 0x54
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	40023800 	.word	0x40023800
 8001428:	40007000 	.word	0x40007000

0800142c <main>:
{
 800142c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001430:	2400      	movs	r4, #0
{
 8001432:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001434:	f007 fe30 	bl	8009098 <HAL_Init>
  SystemClock_Config();
 8001438:	f7ff ffac 	bl	8001394 <SystemClock_Config>
  gyro_disable();
 800143c:	f7ff ff62 	bl	8001304 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001440:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001444:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001448:	4bbe      	ldr	r3, [pc, #760]	; (8001744 <main+0x318>)
 800144a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800144c:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001450:	48bd      	ldr	r0, [pc, #756]	; (8001748 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001452:	4dbe      	ldr	r5, [pc, #760]	; (800174c <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001454:	f041 0110 	orr.w	r1, r1, #16
 8001458:	6319      	str	r1, [r3, #48]	; 0x30
 800145a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800145c:	f001 0110 	and.w	r1, r1, #16
 8001460:	9100      	str	r1, [sp, #0]
 8001462:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001464:	9401      	str	r4, [sp, #4]
 8001466:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001468:	f041 0120 	orr.w	r1, r1, #32
 800146c:	6319      	str	r1, [r3, #48]	; 0x30
 800146e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001470:	f001 0120 	and.w	r1, r1, #32
 8001474:	9101      	str	r1, [sp, #4]
 8001476:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001478:	9402      	str	r4, [sp, #8]
 800147a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800147c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001480:	6319      	str	r1, [r3, #48]	; 0x30
 8001482:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001484:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001488:	9102      	str	r1, [sp, #8]
 800148a:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800148c:	9403      	str	r4, [sp, #12]
 800148e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001490:	f041 0104 	orr.w	r1, r1, #4
 8001494:	6319      	str	r1, [r3, #48]	; 0x30
 8001496:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001498:	f001 0104 	and.w	r1, r1, #4
 800149c:	9103      	str	r1, [sp, #12]
 800149e:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014a0:	9404      	str	r4, [sp, #16]
 80014a2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014a4:	f041 0101 	orr.w	r1, r1, #1
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0101 	and.w	r1, r1, #1
 80014b0:	9104      	str	r1, [sp, #16]
 80014b2:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014b4:	9405      	str	r4, [sp, #20]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0102 	orr.w	r1, r1, #2
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0102 	and.w	r1, r1, #2
 80014c4:	9105      	str	r1, [sp, #20]
 80014c6:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014c8:	9406      	str	r4, [sp, #24]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80014d8:	9106      	str	r1, [sp, #24]
 80014da:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014dc:	9407      	str	r4, [sp, #28]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0108 	orr.w	r1, r1, #8
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014e8:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ec:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ee:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f0:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f2:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f4:	f008 f948 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014f8:	4893      	ldr	r0, [pc, #588]	; (8001748 <main+0x31c>)
 80014fa:	2120      	movs	r1, #32
 80014fc:	2201      	movs	r2, #1
 80014fe:	f008 f943 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001502:	4893      	ldr	r0, [pc, #588]	; (8001750 <main+0x324>)
 8001504:	4622      	mov	r2, r4
 8001506:	2114      	movs	r1, #20
 8001508:	f008 f93e 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 800150c:	4891      	ldr	r0, [pc, #580]	; (8001754 <main+0x328>)
 800150e:	4622      	mov	r2, r4
 8001510:	2180      	movs	r1, #128	; 0x80
 8001512:	f008 f939 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001516:	4890      	ldr	r0, [pc, #576]	; (8001758 <main+0x32c>)
 8001518:	4622      	mov	r2, r4
 800151a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800151e:	f008 f933 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001522:	488e      	ldr	r0, [pc, #568]	; (800175c <main+0x330>)
 8001524:	4622      	mov	r2, r4
 8001526:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800152a:	f008 f92d 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 800152e:	488c      	ldr	r0, [pc, #560]	; (8001760 <main+0x334>)
 8001530:	4622      	mov	r2, r4
 8001532:	2104      	movs	r1, #4
 8001534:	f008 f928 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001538:	2201      	movs	r2, #1
 800153a:	4889      	ldr	r0, [pc, #548]	; (8001760 <main+0x334>)
 800153c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001540:	f008 f922 	bl	8009788 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001544:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001546:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800154a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800154c:	487e      	ldr	r0, [pc, #504]	; (8001748 <main+0x31c>)
 800154e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001550:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001558:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800155c:	f007 ffd0 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001560:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001564:	4878      	ldr	r0, [pc, #480]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001566:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001568:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800156a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800156e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001570:	f007 ffc6 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001574:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001576:	4874      	ldr	r0, [pc, #464]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001578:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800157a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157c:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800157e:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001582:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001586:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001588:	f007 ffba 	bl	8009500 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158c:	4870      	ldr	r0, [pc, #448]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800158e:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001598:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159a:	f007 ffb1 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 800159e:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a0:	486c      	ldr	r0, [pc, #432]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80015a2:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015a6:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ae:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b0:	f007 ffa6 	bl	8009500 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b4:	4866      	ldr	r0, [pc, #408]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ba:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015be:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015c2:	f007 ff9d 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015c6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ca:	4863      	ldr	r0, [pc, #396]	; (8001758 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015cc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ce:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d4:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d6:	f007 ff93 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	485f      	ldr	r0, [pc, #380]	; (800175c <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	920d      	str	r2, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 ff89 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015ee:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f2:	485b      	ldr	r0, [pc, #364]	; (8001760 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015f4:	920d      	str	r2, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fc:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015fe:	f007 ff7f 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001602:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	4853      	ldr	r0, [pc, #332]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001608:	920d      	str	r2, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800160a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 800160c:	220f      	movs	r2, #15
 800160e:	9211      	str	r2, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001614:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001616:	f007 ff73 	bl	8009500 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161a:	2105      	movs	r1, #5
 800161c:	4622      	mov	r2, r4
 800161e:	2009      	movs	r0, #9
 8001620:	f007 fd8a 	bl	8009138 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001624:	2009      	movs	r0, #9
 8001626:	f007 fdc5 	bl	80091b4 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162a:	484e      	ldr	r0, [pc, #312]	; (8001764 <main+0x338>)
 800162c:	4a4e      	ldr	r2, [pc, #312]	; (8001768 <main+0x33c>)
 800162e:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001630:	f007 fdce 	bl	80091d0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001634:	494d      	ldr	r1, [pc, #308]	; (800176c <main+0x340>)
 8001636:	4a4e      	ldr	r2, [pc, #312]	; (8001770 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001638:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163a:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800163e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001642:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001644:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001648:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164c:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001650:	f008 fb00 	bl	8009c54 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001654:	4641      	mov	r1, r8
 8001656:	4628      	mov	r0, r5
 8001658:	f009 fcc8 	bl	800afec <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165c:	4621      	mov	r1, r4
 800165e:	4628      	mov	r0, r5
 8001660:	f009 fce4 	bl	800b02c <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f8df c118 	ldr.w	ip, [pc, #280]	; 8001780 <main+0x354>
  hspi5.Instance = SPI5;
 8001668:	4842      	ldr	r0, [pc, #264]	; (8001774 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166a:	4d43      	ldr	r5, [pc, #268]	; (8001778 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166e:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001672:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001676:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800167a:	2218      	movs	r2, #24
 800167c:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001680:	220a      	movs	r2, #10
 8001682:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001684:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001688:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001690:	f00a fbbe 	bl	800be10 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001694:	2207      	movs	r2, #7
 8001696:	920e      	str	r2, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001698:	9210      	str	r2, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169a:	4a38      	ldr	r2, [pc, #224]	; (800177c <main+0x350>)
 800169c:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800169e:	2040      	movs	r0, #64	; 0x40
 80016a0:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80016a4:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80016ac:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ae:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016b0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b4:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b6:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016ba:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016be:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 80016c0:	e9cd b711 	strd	fp, r7, [sp, #68]	; 0x44
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c4:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016c6:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c8:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
 80016cc:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 80016ce:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d0:	f00a faac 	bl	800bc2c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d8:	a909      	add	r1, sp, #36	; 0x24
 80016da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016dc:	e9cd 6909 	strd	r6, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016e0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 80016e4:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e6:	f00a fac3 	bl	800bc70 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016ea:	4630      	mov	r0, r6
 80016ec:	f007 fd00 	bl	80090f0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f4:	a909      	add	r1, sp, #36	; 0x24
 80016f6:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016fc:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f00a fab6 	bl	800bc70 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001704:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001708:	a909      	add	r1, sp, #36	; 0x24
 800170a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800170c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001710:	e9cd a40b 	strd	sl, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001714:	f00a faac 	bl	800bc70 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001718:	f44f 720c 	mov.w	r2, #560	; 0x230
 800171c:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171e:	9908      	ldr	r1, [sp, #32]
 8001720:	910c      	str	r1, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001722:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001726:	a909      	add	r1, sp, #36	; 0x24
 8001728:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800172a:	e9cd a909 	strd	sl, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800172e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001730:	f00a fa9e 	bl	800bc70 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001734:	4628      	mov	r0, r5
 8001736:	f240 516a 	movw	r1, #1386	; 0x56a
 800173a:	f00a fab7 	bl	800bcac <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800173e:	2234      	movs	r2, #52	; 0x34
 8001740:	e020      	b.n	8001784 <main+0x358>
 8001742:	bf00      	nop
 8001744:	40023800 	.word	0x40023800
 8001748:	40021000 	.word	0x40021000
 800174c:	2000194c 	.word	0x2000194c
 8001750:	40020800 	.word	0x40020800
 8001754:	40020000 	.word	0x40020000
 8001758:	40020400 	.word	0x40020400
 800175c:	40020c00 	.word	0x40020c00
 8001760:	40021800 	.word	0x40021800
 8001764:	200018e4 	.word	0x200018e4
 8001768:	40023000 	.word	0x40023000
 800176c:	40005c00 	.word	0x40005c00
 8001770:	000186a0 	.word	0x000186a0
 8001774:	20001a7c 	.word	0x20001a7c
 8001778:	20001a48 	.word	0x20001a48
 800177c:	a0000140 	.word	0xa0000140
 8001780:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001784:	4d4a      	ldr	r5, [pc, #296]	; (80018b0 <main+0x484>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001786:	4621      	mov	r1, r4
 8001788:	eb0d 0002 	add.w	r0, sp, r2
 800178c:	f028 fd7f 	bl	802a28e <memset>
  hltdc.Instance = LTDC;
 8001790:	4a48      	ldr	r2, [pc, #288]	; (80018b4 <main+0x488>)
 8001792:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8001794:	221d      	movs	r2, #29
 8001796:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001798:	f240 1a0d 	movw	sl, #269	; 0x10d
 800179c:	f240 1243 	movw	r2, #323	; 0x143
 80017a0:	e9c5 a209 	strd	sl, r2, [r5, #36]	; 0x24
  hltdc.Init.VerticalSync = 1;
 80017a4:	61ae      	str	r6, [r5, #24]
  hltdc.Init.AccumulatedVBP = 3;
 80017a6:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.TotalHeigh = 327;
 80017aa:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80017ae:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HorizontalSync = 9;
 80017b0:	2609      	movs	r6, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017b2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80017b4:	f240 1b17 	movw	fp, #279	; 0x117
 80017b8:	e9c5 b20b 	strd	fp, r2, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80017bc:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017c0:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 80017c4:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 80017c8:	616e      	str	r6, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ca:	f009 fc53 	bl	800b074 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017ce:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 80017d0:	25f0      	movs	r5, #240	; 0xf0
 80017d2:	950e      	str	r5, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80017d4:	9517      	str	r5, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80017d6:	f44f 75a0 	mov.w	r5, #320	; 0x140
 80017da:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80017dc:	9518      	str	r5, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80017de:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017e0:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e4:	a90d      	add	r1, sp, #52	; 0x34
 80017e6:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 80017e8:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017ea:	2505      	movs	r5, #5
 80017ec:	e9cd c514 	strd	ip, r5, [sp, #80]	; 0x50
  pLayerCfg.WindowX0 = 0;
 80017f0:	940d      	str	r4, [sp, #52]	; 0x34
  LcdDrv = &ili9341_drv;
 80017f2:	4d31      	ldr	r5, [pc, #196]	; (80018b8 <main+0x48c>)
  pLayerCfg.WindowY0 = 0;
 80017f4:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017f6:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80017f8:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80017fa:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80017fc:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001800:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001804:	f009 fd0c 	bl	800b220 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001808:	4a2c      	ldr	r2, [pc, #176]	; (80018bc <main+0x490>)
 800180a:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 800180c:	6812      	ldr	r2, [r2, #0]
 800180e:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8001810:	682a      	ldr	r2, [r5, #0]
  htim2.Instance = TIM2;
 8001812:	4d2b      	ldr	r5, [pc, #172]	; (80018c0 <main+0x494>)
  LcdDrv->DisplayOff();
 8001814:	68d2      	ldr	r2, [r2, #12]
 8001816:	4790      	blx	r2
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001818:	2380      	movs	r3, #128	; 0x80
  htim2.Init.Prescaler = 13124;
 800181a:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800181e:	61ab      	str	r3, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001820:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 13124;
 8001822:	f243 3344 	movw	r3, #13124	; 0x3344
 8001826:	e9c5 e300 	strd	lr, r3, [r5]
  htim2.Init.Period = 9;
 800182a:	60ee      	str	r6, [r5, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800182c:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800182e:	612c      	str	r4, [r5, #16]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001830:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001834:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001838:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800183c:	f00a fed8 	bl	800c5f0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001840:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001844:	a90d      	add	r1, sp, #52	; 0x34
 8001846:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001848:	930d      	str	r3, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800184a:	f00a ff9b 	bl	800c784 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800184e:	a909      	add	r1, sp, #36	; 0x24
 8001850:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001852:	e9cd 8409 	strd	r8, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001856:	f00b f8f7 	bl	800ca48 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800185a:	f7fe ff23 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800185e:	f7fe ff1f 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001862:	f000 f947 	bl	8001af4 <MEAS_GPIO_analog_init>
  	MEAS_timer_init();               // Configure the timer
 8001866:	f000 f979 	bl	8001b5c <MEAS_timer_init>
  osKernelInitialize();
 800186a:	f00b f9ff 	bl	800cc6c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800186e:	4a15      	ldr	r2, [pc, #84]	; (80018c4 <main+0x498>)
 8001870:	4639      	mov	r1, r7
 8001872:	4640      	mov	r0, r8
 8001874:	f00b fb34 	bl	800cee0 <osMessageQueueNew>
 8001878:	4b13      	ldr	r3, [pc, #76]	; (80018c8 <main+0x49c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800187a:	4a14      	ldr	r2, [pc, #80]	; (80018cc <main+0x4a0>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800187c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800187e:	4621      	mov	r1, r4
 8001880:	4813      	ldr	r0, [pc, #76]	; (80018d0 <main+0x4a4>)
 8001882:	f00b fa1f 	bl	800ccc4 <osThreadNew>
 8001886:	4b13      	ldr	r3, [pc, #76]	; (80018d4 <main+0x4a8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001888:	4a13      	ldr	r2, [pc, #76]	; (80018d8 <main+0x4ac>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800188a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800188c:	4621      	mov	r1, r4
 800188e:	4813      	ldr	r0, [pc, #76]	; (80018dc <main+0x4b0>)
 8001890:	f00b fa18 	bl	800ccc4 <osThreadNew>
 8001894:	4b12      	ldr	r3, [pc, #72]	; (80018e0 <main+0x4b4>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001896:	4a13      	ldr	r2, [pc, #76]	; (80018e4 <main+0x4b8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001898:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800189a:	4621      	mov	r1, r4
 800189c:	4812      	ldr	r0, [pc, #72]	; (80018e8 <main+0x4bc>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800189e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80018a0:	f00b fa10 	bl	800ccc4 <osThreadNew>
 80018a4:	4b11      	ldr	r3, [pc, #68]	; (80018ec <main+0x4c0>)
 80018a6:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018a8:	f00b f9f2 	bl	800cc90 <osKernelStart>
  while (1)
 80018ac:	e7fe      	b.n	80018ac <main+0x480>
 80018ae:	bf00      	nop
 80018b0:	200019a0 	.word	0x200019a0
 80018b4:	40016800 	.word	0x40016800
 80018b8:	200018d4 	.word	0x200018d4
 80018bc:	20000018 	.word	0x20000018
 80018c0:	20001ad4 	.word	0x20001ad4
 80018c4:	0802b700 	.word	0x0802b700
 80018c8:	200018d8 	.word	0x200018d8
 80018cc:	0802b73c 	.word	0x0802b73c
 80018d0:	08001299 	.word	0x08001299
 80018d4:	200018e0 	.word	0x200018e0
 80018d8:	0802b6dc 	.word	0x0802b6dc
 80018dc:	080006b5 	.word	0x080006b5
 80018e0:	200018d0 	.word	0x200018d0
 80018e4:	0802b718 	.word	0x0802b718
 80018e8:	080012a5 	.word	0x080012a5
 80018ec:	200018dc 	.word	0x200018dc

080018f0 <IOE_Init>:
 80018f0:	4770      	bx	lr
 80018f2:	bf00      	nop

080018f4 <IOE_ITConfig>:
 80018f4:	4770      	bx	lr
 80018f6:	bf00      	nop

080018f8 <IOE_Write>:
{
 80018f8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018fa:	4c09      	ldr	r4, [pc, #36]	; (8001920 <IOE_Write+0x28>)
{
 80018fc:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018fe:	6824      	ldr	r4, [r4, #0]
 8001900:	9402      	str	r4, [sp, #8]
{
 8001902:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001904:	2301      	movs	r3, #1
 8001906:	f88d 4017 	strb.w	r4, [sp, #23]
 800190a:	f10d 0417 	add.w	r4, sp, #23
 800190e:	460a      	mov	r2, r1
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	4601      	mov	r1, r0
 8001914:	9400      	str	r4, [sp, #0]
 8001916:	4803      	ldr	r0, [pc, #12]	; (8001924 <IOE_Write+0x2c>)
 8001918:	f008 fa64 	bl	8009de4 <HAL_I2C_Mem_Write>
}
 800191c:	b006      	add	sp, #24
 800191e:	bd10      	pop	{r4, pc}
 8001920:	2000000c 	.word	0x2000000c
 8001924:	2000194c 	.word	0x2000194c

08001928 <IOE_Read>:
{
 8001928:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800192a:	4b0b      	ldr	r3, [pc, #44]	; (8001958 <IOE_Read+0x30>)
{
 800192c:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	9302      	str	r3, [sp, #8]
{
 8001932:	4684      	mov	ip, r0
 8001934:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001936:	2301      	movs	r3, #1
 8001938:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 800193c:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800193e:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001942:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001946:	4661      	mov	r1, ip
 8001948:	4804      	ldr	r0, [pc, #16]	; (800195c <IOE_Read+0x34>)
 800194a:	f008 fb3d 	bl	8009fc8 <HAL_I2C_Mem_Read>
}
 800194e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001952:	b007      	add	sp, #28
 8001954:	f85d fb04 	ldr.w	pc, [sp], #4
 8001958:	2000000c 	.word	0x2000000c
 800195c:	2000194c 	.word	0x2000194c

08001960 <IOE_ReadMultiple>:
{
 8001960:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001962:	4c09      	ldr	r4, [pc, #36]	; (8001988 <IOE_ReadMultiple+0x28>)
{
 8001964:	b084      	sub	sp, #16
 8001966:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001968:	6820      	ldr	r0, [r4, #0]
 800196a:	9002      	str	r0, [sp, #8]
 800196c:	e9cd 2300 	strd	r2, r3, [sp]
 8001970:	4806      	ldr	r0, [pc, #24]	; (800198c <IOE_ReadMultiple+0x2c>)
 8001972:	460a      	mov	r2, r1
 8001974:	2301      	movs	r3, #1
 8001976:	4661      	mov	r1, ip
 8001978:	f008 fb26 	bl	8009fc8 <HAL_I2C_Mem_Read>
}
 800197c:	3800      	subs	r0, #0
 800197e:	bf18      	it	ne
 8001980:	2001      	movne	r0, #1
 8001982:	b004      	add	sp, #16
 8001984:	bd10      	pop	{r4, pc}
 8001986:	bf00      	nop
 8001988:	2000000c 	.word	0x2000000c
 800198c:	2000194c 	.word	0x2000194c

08001990 <IOE_Delay>:
 8001990:	f007 bbae 	b.w	80090f0 <HAL_Delay>

08001994 <LCD_IO_Init>:
{
 8001994:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001996:	4806      	ldr	r0, [pc, #24]	; (80019b0 <LCD_IO_Init+0x1c>)
 8001998:	2200      	movs	r2, #0
 800199a:	2104      	movs	r1, #4
 800199c:	f007 fef4 	bl	8009788 <HAL_GPIO_WritePin>
}
 80019a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a4:	4802      	ldr	r0, [pc, #8]	; (80019b0 <LCD_IO_Init+0x1c>)
 80019a6:	2201      	movs	r2, #1
 80019a8:	2104      	movs	r1, #4
 80019aa:	f007 beed 	b.w	8009788 <HAL_GPIO_WritePin>
 80019ae:	bf00      	nop
 80019b0:	40020800 	.word	0x40020800

080019b4 <LCD_IO_WriteData>:
{
 80019b4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b6:	4d10      	ldr	r5, [pc, #64]	; (80019f8 <LCD_IO_WriteData+0x44>)
{
 80019b8:	b083      	sub	sp, #12
 80019ba:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019bc:	2201      	movs	r2, #1
 80019be:	480f      	ldr	r0, [pc, #60]	; (80019fc <LCD_IO_WriteData+0x48>)
 80019c0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019c4:	f007 fee0 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c8:	4628      	mov	r0, r5
 80019ca:	2200      	movs	r2, #0
 80019cc:	2104      	movs	r1, #4
 80019ce:	f007 fedb 	bl	8009788 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019d2:	4b0b      	ldr	r3, [pc, #44]	; (8001a00 <LCD_IO_WriteData+0x4c>)
 80019d4:	480b      	ldr	r0, [pc, #44]	; (8001a04 <LCD_IO_WriteData+0x50>)
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	f8ad 4006 	strh.w	r4, [sp, #6]
 80019dc:	f10d 0106 	add.w	r1, sp, #6
 80019e0:	2201      	movs	r2, #1
 80019e2:	f00a fa77 	bl	800bed4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019e6:	2201      	movs	r2, #1
 80019e8:	2104      	movs	r1, #4
 80019ea:	4628      	mov	r0, r5
}
 80019ec:	b003      	add	sp, #12
 80019ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f2:	f007 bec9 	b.w	8009788 <HAL_GPIO_WritePin>
 80019f6:	bf00      	nop
 80019f8:	40020800 	.word	0x40020800
 80019fc:	40020c00 	.word	0x40020c00
 8001a00:	20000010 	.word	0x20000010
 8001a04:	20001a7c 	.word	0x20001a7c

08001a08 <LCD_IO_WriteReg>:
{
 8001a08:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a0a:	4d10      	ldr	r5, [pc, #64]	; (8001a4c <LCD_IO_WriteReg+0x44>)
{
 8001a0c:	b083      	sub	sp, #12
 8001a0e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a10:	2200      	movs	r2, #0
 8001a12:	480f      	ldr	r0, [pc, #60]	; (8001a50 <LCD_IO_WriteReg+0x48>)
 8001a14:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a18:	f007 feb6 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1c:	4628      	mov	r0, r5
 8001a1e:	2200      	movs	r2, #0
 8001a20:	2104      	movs	r1, #4
 8001a22:	f007 feb1 	bl	8009788 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a26:	4b0b      	ldr	r3, [pc, #44]	; (8001a54 <LCD_IO_WriteReg+0x4c>)
 8001a28:	480b      	ldr	r0, [pc, #44]	; (8001a58 <LCD_IO_WriteReg+0x50>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001a2c:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a30:	f10d 0106 	add.w	r1, sp, #6
 8001a34:	2201      	movs	r2, #1
 8001a36:	f00a fa4d 	bl	800bed4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a3a:	2201      	movs	r2, #1
 8001a3c:	2104      	movs	r1, #4
 8001a3e:	4628      	mov	r0, r5
}
 8001a40:	b003      	add	sp, #12
 8001a42:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a46:	f007 be9f 	b.w	8009788 <HAL_GPIO_WritePin>
 8001a4a:	bf00      	nop
 8001a4c:	40020800 	.word	0x40020800
 8001a50:	40020c00 	.word	0x40020c00
 8001a54:	20000010 	.word	0x20000010
 8001a58:	20001a7c 	.word	0x20001a7c

08001a5c <LCD_IO_ReadData>:
{
 8001a5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a60:	4e19      	ldr	r6, [pc, #100]	; (8001ac8 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a62:	4f1a      	ldr	r7, [pc, #104]	; (8001acc <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a64:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001ad0 <LCD_IO_ReadData+0x74>
 8001a68:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001ad4 <LCD_IO_ReadData+0x78>
{
 8001a6c:	b083      	sub	sp, #12
 8001a6e:	460c      	mov	r4, r1
 8001a70:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a72:	2200      	movs	r2, #0
 8001a74:	4630      	mov	r0, r6
 8001a76:	2104      	movs	r1, #4
 8001a78:	f007 fe86 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a7c:	4638      	mov	r0, r7
 8001a7e:	2200      	movs	r2, #0
 8001a80:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a84:	f007 fe80 	bl	8009788 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a88:	f8d9 3000 	ldr.w	r3, [r9]
 8001a8c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001a90:	a901      	add	r1, sp, #4
 8001a92:	2201      	movs	r2, #1
 8001a94:	4640      	mov	r0, r8
 8001a96:	f00a fa1d 	bl	800bed4 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a9a:	f8d9 3000 	ldr.w	r3, [r9]
 8001a9e:	4622      	mov	r2, r4
 8001aa0:	a901      	add	r1, sp, #4
 8001aa2:	4640      	mov	r0, r8
 8001aa4:	f00a fcbe 	bl	800c424 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001aa8:	4638      	mov	r0, r7
 8001aaa:	2201      	movs	r2, #1
 8001aac:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001ab0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ab2:	f007 fe69 	bl	8009788 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	4630      	mov	r0, r6
 8001ab8:	2201      	movs	r2, #1
 8001aba:	2104      	movs	r1, #4
 8001abc:	f007 fe64 	bl	8009788 <HAL_GPIO_WritePin>
}
 8001ac0:	4620      	mov	r0, r4
 8001ac2:	b003      	add	sp, #12
 8001ac4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	20001a7c 	.word	0x20001a7c

08001ad8 <LCD_Delay>:
  HAL_Delay(Delay);
 8001ad8:	f007 bb0a 	b.w	80090f0 <HAL_Delay>

08001adc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001adc:	4b03      	ldr	r3, [pc, #12]	; (8001aec <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001ade:	6802      	ldr	r2, [r0, #0]
 8001ae0:	429a      	cmp	r2, r3
 8001ae2:	d000      	beq.n	8001ae6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001ae4:	4770      	bx	lr
    HAL_IncTick();
 8001ae6:	f007 baf1 	b.w	80090cc <HAL_IncTick>
 8001aea:	bf00      	nop
 8001aec:	40001000 	.word	0x40001000

08001af0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001af0:	4770      	bx	lr
 8001af2:	bf00      	nop

08001af4 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001af4:	b410      	push	{r4}
 8001af6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001af8:	4b15      	ldr	r3, [pc, #84]	; (8001b50 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001afa:	4916      	ldr	r1, [pc, #88]	; (8001b54 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001afc:	2400      	movs	r4, #0
 8001afe:	9400      	str	r4, [sp, #0]
 8001b00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b02:	f042 0220 	orr.w	r2, r2, #32
 8001b06:	631a      	str	r2, [r3, #48]	; 0x30
 8001b08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b0a:	f002 0220 	and.w	r2, r2, #32
 8001b0e:	9200      	str	r2, [sp, #0]
 8001b10:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b12:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b14:	4a10      	ldr	r2, [pc, #64]	; (8001b58 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b16:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001b1a:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001b1c:	6808      	ldr	r0, [r1, #0]
 8001b1e:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001b22:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001b24:	9401      	str	r4, [sp, #4]
 8001b26:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b28:	f041 0104 	orr.w	r1, r1, #4
 8001b2c:	6319      	str	r1, [r3, #48]	; 0x30
 8001b2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b30:	f003 0304 	and.w	r3, r3, #4
 8001b34:	9301      	str	r3, [sp, #4]
 8001b36:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b38:	6813      	ldr	r3, [r2, #0]
 8001b3a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001b3e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001b40:	6813      	ldr	r3, [r2, #0]
 8001b42:	f043 030c 	orr.w	r3, r3, #12
 8001b46:	6013      	str	r3, [r2, #0]
}
 8001b48:	b003      	add	sp, #12
 8001b4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b4e:	4770      	bx	lr
 8001b50:	40023800 	.word	0x40023800
 8001b54:	40021400 	.word	0x40021400
 8001b58:	40020800 	.word	0x40020800

08001b5c <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001b5c:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b5e:	4a0c      	ldr	r2, [pc, #48]	; (8001b90 <MEAS_timer_init+0x34>)
 8001b60:	2300      	movs	r3, #0
 8001b62:	9301      	str	r3, [sp, #4]
 8001b64:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001b66:	f041 0101 	orr.w	r1, r1, #1
 8001b6a:	6411      	str	r1, [r2, #64]	; 0x40
 8001b6c:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b6e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b72:	f002 0201 	and.w	r2, r2, #1
 8001b76:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b78:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b7c:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b7e:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b80:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b82:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001b84:	685a      	ldr	r2, [r3, #4]
 8001b86:	f042 0220 	orr.w	r2, r2, #32
 8001b8a:	605a      	str	r2, [r3, #4]
}
 8001b8c:	b002      	add	sp, #8
 8001b8e:	4770      	bx	lr
 8001b90:	40023800 	.word	0x40023800

08001b94 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001b94:	b410      	push	{r4}
 8001b96:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b98:	4934      	ldr	r1, [pc, #208]	; (8001c6c <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b9a:	4a35      	ldr	r2, [pc, #212]	; (8001c70 <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b9c:	2400      	movs	r4, #0
 8001b9e:	9400      	str	r4, [sp, #0]
 8001ba0:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001ba2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001ba6:	644b      	str	r3, [r1, #68]	; 0x44
 8001ba8:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001baa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001bae:	9300      	str	r3, [sp, #0]
 8001bb0:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001bb2:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001bb4:	4b2f      	ldr	r3, [pc, #188]	; (8001c74 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001bb6:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001bba:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001bbc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bbe:	f040 0004 	orr.w	r0, r0, #4
 8001bc2:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001bc4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bc6:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001bca:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001bcc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bce:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001bd2:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001bd4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bd6:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001bda:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001bdc:	6850      	ldr	r0, [r2, #4]
 8001bde:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001be2:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001be4:	6890      	ldr	r0, [r2, #8]
 8001be6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001bea:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001bec:	6890      	ldr	r0, [r2, #8]
 8001bee:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001bf2:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001bf4:	6890      	ldr	r0, [r2, #8]
 8001bf6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001bfa:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001bfc:	9401      	str	r4, [sp, #4]
 8001bfe:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001c00:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001c04:	630a      	str	r2, [r1, #48]	; 0x30
 8001c06:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001c08:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001c0c:	9201      	str	r2, [sp, #4]
 8001c0e:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c10:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c12:	f022 0201 	bic.w	r2, r2, #1
 8001c16:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN){};  // Wait for DMA to finish
 8001c18:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c1a:	07d2      	lsls	r2, r2, #31
 8001c1c:	d4fc      	bmi.n	8001c18 <MEAS_ADC3_scan_init+0x84>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c1e:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c20:	4815      	ldr	r0, [pc, #84]	; (8001c78 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c22:	4916      	ldr	r1, [pc, #88]	; (8001c7c <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c24:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001c28:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001c2a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c2c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c30:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001c32:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c34:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001c38:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001c3a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c3c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001c40:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001c42:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c44:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c48:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001c4a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c4c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c50:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c52:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c54:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c58:	f042 0210 	orr.w	r2, r2, #16
 8001c5c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c5e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c60:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c62:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001c64:	b003      	add	sp, #12
 8001c66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c6a:	4770      	bx	lr
 8001c6c:	40023800 	.word	0x40023800
 8001c70:	40012200 	.word	0x40012200
 8001c74:	40026400 	.word	0x40026400
 8001c78:	4001224c 	.word	0x4001224c
 8001c7c:	20001b1c 	.word	0x20001b1c

08001c80 <DMA2_Stream1_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
 8001c80:	b508      	push	{r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
 8001c82:	2201      	movs	r2, #1
 8001c84:	2110      	movs	r1, #16
 8001c86:	4825      	ldr	r0, [pc, #148]	; (8001d1c <DMA2_Stream1_IRQHandler+0x9c>)
 8001c88:	f007 fd7e 	bl	8009788 <HAL_GPIO_WritePin>
	static int debug = 0;
    debug++;
 8001c8c:	4924      	ldr	r1, [pc, #144]	; (8001d20 <DMA2_Stream1_IRQHandler+0xa0>)
    //HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c8e:	4b25      	ldr	r3, [pc, #148]	; (8001d24 <DMA2_Stream1_IRQHandler+0xa4>)
    debug++;
 8001c90:	680a      	ldr	r2, [r1, #0]
 8001c92:	3201      	adds	r2, #1
 8001c94:	600a      	str	r2, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c96:	681a      	ldr	r2, [r3, #0]
 8001c98:	0511      	lsls	r1, r2, #20
 8001c9a:	d406      	bmi.n	8001caa <DMA2_Stream1_IRQHandler+0x2a>
        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
}
 8001c9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
 8001ca0:	481e      	ldr	r0, [pc, #120]	; (8001d1c <DMA2_Stream1_IRQHandler+0x9c>)
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	2110      	movs	r1, #16
 8001ca6:	f007 bd6f 	b.w	8009788 <HAL_GPIO_WritePin>
 8001caa:	4a1f      	ldr	r2, [pc, #124]	; (8001d28 <DMA2_Stream1_IRQHandler+0xa8>)
 8001cac:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001cb0:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001cb4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001cb8:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001cbc:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001cc0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cc2:	f022 0201 	bic.w	r2, r2, #1
 8001cc6:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001cc8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cca:	07d2      	lsls	r2, r2, #31
 8001ccc:	d4fc      	bmi.n	8001cc8 <DMA2_Stream1_IRQHandler+0x48>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cce:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cd0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cd4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001cd8:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cda:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cdc:	4913      	ldr	r1, [pc, #76]	; (8001d2c <DMA2_Stream1_IRQHandler+0xac>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cde:	f023 0301 	bic.w	r3, r3, #1
 8001ce2:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001ce4:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001ce6:	4b12      	ldr	r3, [pc, #72]	; (8001d30 <DMA2_Stream1_IRQHandler+0xb0>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001ce8:	f020 0001 	bic.w	r0, r0, #1
 8001cec:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001cee:	6888      	ldr	r0, [r1, #8]
 8001cf0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001cf4:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cf6:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001cf8:	480e      	ldr	r0, [pc, #56]	; (8001d34 <DMA2_Stream1_IRQHandler+0xb4>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cfa:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001cfe:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001d00:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001d02:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001d06:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d08:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001d0a:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d0e:	f023 0301 	bic.w	r3, r3, #1
 8001d12:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001d14:	f880 c000 	strb.w	ip, [r0]
 8001d18:	e7c0      	b.n	8001c9c <DMA2_Stream1_IRQHandler+0x1c>
 8001d1a:	bf00      	nop
 8001d1c:	40020800 	.word	0x40020800
 8001d20:	20001f20 	.word	0x20001f20
 8001d24:	40026400 	.word	0x40026400
 8001d28:	e000e100 	.word	0xe000e100
 8001d2c:	40012200 	.word	0x40012200
 8001d30:	40023800 	.word	0x40023800
 8001d34:	20001f1c 	.word	0x20001f1c

08001d38 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001d38:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001d3a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d3e:	2100      	movs	r1, #0
 8001d40:	481b      	ldr	r0, [pc, #108]	; (8001db0 <MEAS_start_measure+0x78>)
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d42:	4c1c      	ldr	r4, [pc, #112]	; (8001db4 <MEAS_start_measure+0x7c>)
        buffer[i] = 0;
 8001d44:	f028 faa3 	bl	802a28e <memset>

	//works
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    //
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_SET);
 8001d48:	2201      	movs	r2, #1
 8001d4a:	2104      	movs	r1, #4
 8001d4c:	481a      	ldr	r0, [pc, #104]	; (8001db8 <MEAS_start_measure+0x80>)
 8001d4e:	f007 fd1b 	bl	8009788 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001d52:	2001      	movs	r0, #1
 8001d54:	f007 f9cc 	bl	80090f0 <HAL_Delay>
	MEAS_ADC3_scan_init();
 8001d58:	f7ff ff1c 	bl	8001b94 <MEAS_ADC3_scan_init>
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d5c:	4816      	ldr	r0, [pc, #88]	; (8001db8 <MEAS_start_measure+0x80>)
 8001d5e:	2200      	movs	r2, #0
 8001d60:	2104      	movs	r1, #4
 8001d62:	f007 fd11 	bl	8009788 <HAL_GPIO_WritePin>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d66:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001d68:	4914      	ldr	r1, [pc, #80]	; (8001dbc <MEAS_start_measure+0x84>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d6a:	4a15      	ldr	r2, [pc, #84]	; (8001dc0 <MEAS_start_measure+0x88>)
 8001d6c:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d70:	f043 0301 	orr.w	r3, r3, #1
 8001d74:	62a3      	str	r3, [r4, #40]	; 0x28
 8001d76:	f8c1 0184 	str.w	r0, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d7a:	6048      	str	r0, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d7c:	6893      	ldr	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d7e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d82:	f043 0301 	orr.w	r3, r3, #1
 8001d86:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d88:	680b      	ldr	r3, [r1, #0]
	//
    MEAS_ADC3_scan_start();

    static int timeout = 0;
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001d8a:	4a0e      	ldr	r2, [pc, #56]	; (8001dc4 <MEAS_start_measure+0x8c>)
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d8c:	f043 0301 	orr.w	r3, r3, #1
 8001d90:	600b      	str	r3, [r1, #0]
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001d92:	6811      	ldr	r1, [r2, #0]
 8001d94:	4b0c      	ldr	r3, [pc, #48]	; (8001dc8 <MEAS_start_measure+0x90>)
 8001d96:	4299      	cmp	r1, r3
 8001d98:	490c      	ldr	r1, [pc, #48]	; (8001dcc <MEAS_start_measure+0x94>)
 8001d9a:	dd03      	ble.n	8001da4 <MEAS_start_measure+0x6c>
 8001d9c:	780b      	ldrb	r3, [r1, #0]
 8001d9e:	2b01      	cmp	r3, #1
 8001da0:	d000      	beq.n	8001da4 <MEAS_start_measure+0x6c>
 8001da2:	e7fe      	b.n	8001da2 <MEAS_start_measure+0x6a>
    {
    	// Wait for data
    	timeout++;
    }
    MEAS_data_ready = false;
 8001da4:	2300      	movs	r3, #0

//    HAL_Delay(100);


    return ADC_samples;
}
 8001da6:	4802      	ldr	r0, [pc, #8]	; (8001db0 <MEAS_start_measure+0x78>)
    MEAS_data_ready = false;
 8001da8:	700b      	strb	r3, [r1, #0]
    timeout=0;
 8001daa:	6013      	str	r3, [r2, #0]
}
 8001dac:	bd10      	pop	{r4, pc}
 8001dae:	bf00      	nop
 8001db0:	20001b1c 	.word	0x20001b1c
 8001db4:	40026400 	.word	0x40026400
 8001db8:	40021800 	.word	0x40021800
 8001dbc:	e000e100 	.word	0xe000e100
 8001dc0:	40012200 	.word	0x40012200
 8001dc4:	20001f24 	.word	0x20001f24
 8001dc8:	0001869f 	.word	0x0001869f
 8001dcc:	20001f1c 	.word	0x20001f1c

08001dd0 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001dd0:	2004      	movs	r0, #4
 8001dd2:	4770      	bx	lr

08001dd4 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001dd4:	2040      	movs	r0, #64	; 0x40
 8001dd6:	4770      	bx	lr

08001dd8 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001dd8:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001ddc:	4770      	bx	lr
 8001dde:	bf00      	nop

08001de0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001de0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001de2:	4b0e      	ldr	r3, [pc, #56]	; (8001e1c <HAL_MspInit+0x3c>)
 8001de4:	2200      	movs	r2, #0
 8001de6:	9200      	str	r2, [sp, #0]
 8001de8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001dea:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001dee:	6459      	str	r1, [r3, #68]	; 0x44
 8001df0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001df2:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001df6:	9000      	str	r0, [sp, #0]
 8001df8:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dfa:	9201      	str	r2, [sp, #4]
 8001dfc:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001dfe:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001e02:	6418      	str	r0, [r3, #64]	; 0x40
 8001e04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e0a:	9301      	str	r3, [sp, #4]
 8001e0c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e0e:	210f      	movs	r1, #15
 8001e10:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e14:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e16:	f007 b98f 	b.w	8009138 <HAL_NVIC_SetPriority>
 8001e1a:	bf00      	nop
 8001e1c:	40023800 	.word	0x40023800

08001e20 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001e20:	4b0b      	ldr	r3, [pc, #44]	; (8001e50 <HAL_CRC_MspInit+0x30>)
 8001e22:	6802      	ldr	r2, [r0, #0]
 8001e24:	429a      	cmp	r2, r3
 8001e26:	d000      	beq.n	8001e2a <HAL_CRC_MspInit+0xa>
 8001e28:	4770      	bx	lr
{
 8001e2a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e2c:	2200      	movs	r2, #0
 8001e2e:	9201      	str	r2, [sp, #4]
 8001e30:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e34:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e38:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001e3c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001e40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e42:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e46:	9301      	str	r3, [sp, #4]
 8001e48:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e4a:	b002      	add	sp, #8
 8001e4c:	4770      	bx	lr
 8001e4e:	bf00      	nop
 8001e50:	40023000 	.word	0x40023000

08001e54 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001e54:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001e58:	4b2e      	ldr	r3, [pc, #184]	; (8001f14 <HAL_I2C_MspInit+0xc0>)
 8001e5a:	6802      	ldr	r2, [r0, #0]
{
 8001e5c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e5e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001e60:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e62:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001e66:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001e6a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001e6c:	d002      	beq.n	8001e74 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e6e:	b00a      	add	sp, #40	; 0x28
 8001e70:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e74:	4d28      	ldr	r5, [pc, #160]	; (8001f18 <HAL_I2C_MspInit+0xc4>)
 8001e76:	9401      	str	r4, [sp, #4]
 8001e78:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7a:	4828      	ldr	r0, [pc, #160]	; (8001f1c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e7c:	f043 0304 	orr.w	r3, r3, #4
 8001e80:	632b      	str	r3, [r5, #48]	; 0x30
 8001e82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e84:	f003 0304 	and.w	r3, r3, #4
 8001e88:	9301      	str	r3, [sp, #4]
 8001e8a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e8c:	9402      	str	r4, [sp, #8]
 8001e8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e90:	f043 0301 	orr.w	r3, r3, #1
 8001e94:	632b      	str	r3, [r5, #48]	; 0x30
 8001e96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e98:	f003 0301 	and.w	r3, r3, #1
 8001e9c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001e9e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001ea2:	f04f 0801 	mov.w	r8, #1
 8001ea6:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eaa:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eac:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001eae:	2312      	movs	r3, #18
 8001eb0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001eb4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eb8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eba:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ebc:	f007 fb20 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec0:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ec2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ec6:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec8:	4815      	ldr	r0, [pc, #84]	; (8001f20 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eca:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ecc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ed0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ed4:	f007 fb14 	bl	8009500 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ed8:	9403      	str	r4, [sp, #12]
 8001eda:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001edc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ee0:	642b      	str	r3, [r5, #64]	; 0x40
 8001ee2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ee4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ee8:	4622      	mov	r2, r4
 8001eea:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001eec:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001eee:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef2:	f007 f921 	bl	8009138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001ef6:	2048      	movs	r0, #72	; 0x48
 8001ef8:	f007 f95c 	bl	80091b4 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001efc:	6a2b      	ldr	r3, [r5, #32]
 8001efe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f02:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f04:	6a2b      	ldr	r3, [r5, #32]
 8001f06:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f0a:	622b      	str	r3, [r5, #32]
}
 8001f0c:	b00a      	add	sp, #40	; 0x28
 8001f0e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001f12:	bf00      	nop
 8001f14:	40005c00 	.word	0x40005c00
 8001f18:	40023800 	.word	0x40023800
 8001f1c:	40020800 	.word	0x40020800
 8001f20:	40020000 	.word	0x40020000

08001f24 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f28:	4604      	mov	r4, r0
 8001f2a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f2c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f2e:	2230      	movs	r2, #48	; 0x30
 8001f30:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f32:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001f36:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001f3a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f3c:	f028 f9a7 	bl	802a28e <memset>
  if(hltdc->Instance==LTDC)
 8001f40:	4b67      	ldr	r3, [pc, #412]	; (80020e0 <HAL_LTDC_MspInit+0x1bc>)
 8001f42:	6822      	ldr	r2, [r4, #0]
 8001f44:	429a      	cmp	r2, r3
 8001f46:	d002      	beq.n	8001f4e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f48:	b01a      	add	sp, #104	; 0x68
 8001f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f4e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f50:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f52:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f54:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f56:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f58:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f5c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f5e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f60:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f62:	f009 fd37 	bl	800b9d4 <HAL_RCCEx_PeriphCLKConfig>
 8001f66:	2800      	cmp	r0, #0
 8001f68:	f040 80b7 	bne.w	80020da <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f6c:	4b5d      	ldr	r3, [pc, #372]	; (80020e4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f6e:	485e      	ldr	r0, [pc, #376]	; (80020e8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f70:	2400      	movs	r4, #0
 8001f72:	9401      	str	r4, [sp, #4]
 8001f74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f76:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f7a:	645a      	str	r2, [r3, #68]	; 0x44
 8001f7c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f7e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001f82:	9201      	str	r2, [sp, #4]
 8001f84:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f86:	9402      	str	r4, [sp, #8]
 8001f88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f8a:	f042 0220 	orr.w	r2, r2, #32
 8001f8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001f90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f92:	f002 0220 	and.w	r2, r2, #32
 8001f96:	9202      	str	r2, [sp, #8]
 8001f98:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f9a:	9403      	str	r4, [sp, #12]
 8001f9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f9e:	f042 0201 	orr.w	r2, r2, #1
 8001fa2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fa4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fa6:	f002 0201 	and.w	r2, r2, #1
 8001faa:	9203      	str	r2, [sp, #12]
 8001fac:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fae:	9404      	str	r4, [sp, #16]
 8001fb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fb2:	f042 0202 	orr.w	r2, r2, #2
 8001fb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001fb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fba:	f002 0202 	and.w	r2, r2, #2
 8001fbe:	9204      	str	r2, [sp, #16]
 8001fc0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001fc2:	9405      	str	r4, [sp, #20]
 8001fc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fc6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fca:	631a      	str	r2, [r3, #48]	; 0x30
 8001fcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fce:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001fd2:	9205      	str	r2, [sp, #20]
 8001fd4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fd6:	9406      	str	r4, [sp, #24]
 8001fd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fda:	f042 0204 	orr.w	r2, r2, #4
 8001fde:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe2:	f002 0204 	and.w	r2, r2, #4
 8001fe6:	9206      	str	r2, [sp, #24]
 8001fe8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fea:	9407      	str	r4, [sp, #28]
 8001fec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fee:	f042 0208 	orr.w	r2, r2, #8
 8001ff2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ff6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001ffa:	2600      	movs	r6, #0
 8001ffc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ffe:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002000:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002002:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002004:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002008:	2302      	movs	r3, #2
 800200a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800200e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002012:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002014:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002016:	f007 fa73 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800201a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800201c:	f641 0258 	movw	r2, #6232	; 0x1858
 8002020:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002022:	4832      	ldr	r0, [pc, #200]	; (80020ec <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002024:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002026:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800202a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800202e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002032:	f007 fa65 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002036:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002038:	2203      	movs	r2, #3
 800203a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	482c      	ldr	r0, [pc, #176]	; (80020f0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800203e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002042:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002046:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204a:	f007 fa59 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002050:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002054:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	4826      	ldr	r0, [pc, #152]	; (80020f0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002058:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800205a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800205e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002062:	f007 fa4d 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002066:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002068:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 800206c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800206e:	4821      	ldr	r0, [pc, #132]	; (80020f4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002070:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002072:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002076:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800207a:	f007 fa41 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002080:	22c0      	movs	r2, #192	; 0xc0
 8002082:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002084:	481c      	ldr	r0, [pc, #112]	; (80020f8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002086:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002088:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800208c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002090:	f007 fa36 	bl	8009500 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002094:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002096:	2208      	movs	r2, #8
 8002098:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800209a:	4818      	ldr	r0, [pc, #96]	; (80020fc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800209c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800209e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020a2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020a6:	f007 fa2b 	bl	8009500 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020aa:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020ac:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b2:	4810      	ldr	r0, [pc, #64]	; (80020f4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020b4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020b8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020bc:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c0:	f007 fa1e 	bl	8009500 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80020c4:	4622      	mov	r2, r4
 80020c6:	2105      	movs	r1, #5
 80020c8:	2058      	movs	r0, #88	; 0x58
 80020ca:	f007 f835 	bl	8009138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020ce:	2058      	movs	r0, #88	; 0x58
 80020d0:	f007 f870 	bl	80091b4 <HAL_NVIC_EnableIRQ>
}
 80020d4:	b01a      	add	sp, #104	; 0x68
 80020d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80020da:	f7ff fd09 	bl	8001af0 <Error_Handler>
 80020de:	e745      	b.n	8001f6c <HAL_LTDC_MspInit+0x48>
 80020e0:	40016800 	.word	0x40016800
 80020e4:	40023800 	.word	0x40023800
 80020e8:	40021400 	.word	0x40021400
 80020ec:	40020000 	.word	0x40020000
 80020f0:	40020400 	.word	0x40020400
 80020f4:	40021800 	.word	0x40021800
 80020f8:	40020800 	.word	0x40020800
 80020fc:	40020c00 	.word	0x40020c00

08002100 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002100:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002102:	4a1b      	ldr	r2, [pc, #108]	; (8002170 <HAL_SPI_MspInit+0x70>)
 8002104:	6801      	ldr	r1, [r0, #0]
{
 8002106:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002108:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800210a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800210c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002110:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002114:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002116:	d001      	beq.n	800211c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002118:	b008      	add	sp, #32
 800211a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800211c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002120:	9300      	str	r3, [sp, #0]
 8002122:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002124:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002128:	6450      	str	r0, [r2, #68]	; 0x44
 800212a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800212c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002130:	9000      	str	r0, [sp, #0]
 8002132:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002134:	9301      	str	r3, [sp, #4]
 8002136:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002138:	480e      	ldr	r0, [pc, #56]	; (8002174 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800213a:	f043 0320 	orr.w	r3, r3, #32
 800213e:	6313      	str	r3, [r2, #48]	; 0x30
 8002140:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002142:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002168 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002146:	f003 0320 	and.w	r3, r3, #32
 800214a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800214c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800214e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002150:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002152:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002156:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800215a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800215c:	f007 f9d0 	bl	8009500 <HAL_GPIO_Init>
}
 8002160:	b008      	add	sp, #32
 8002162:	bd10      	pop	{r4, pc}
 8002164:	f3af 8000 	nop.w
 8002168:	00000380 	.word	0x00000380
 800216c:	00000002 	.word	0x00000002
 8002170:	40015000 	.word	0x40015000
 8002174:	40021400 	.word	0x40021400

08002178 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002178:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM1)
 800217a:	4a31      	ldr	r2, [pc, #196]	; (8002240 <HAL_TIM_Base_MspInit+0xc8>)
 800217c:	6803      	ldr	r3, [r0, #0]
 800217e:	4293      	cmp	r3, r2
{
 8002180:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 8002182:	d007      	beq.n	8002194 <HAL_TIM_Base_MspInit+0x1c>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8002184:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002188:	d020      	beq.n	80021cc <HAL_TIM_Base_MspInit+0x54>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 800218a:	4a2e      	ldr	r2, [pc, #184]	; (8002244 <HAL_TIM_Base_MspInit+0xcc>)
 800218c:	4293      	cmp	r3, r2
 800218e:	d00f      	beq.n	80021b0 <HAL_TIM_Base_MspInit+0x38>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002190:	b005      	add	sp, #20
 8002192:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002194:	4b2c      	ldr	r3, [pc, #176]	; (8002248 <HAL_TIM_Base_MspInit+0xd0>)
 8002196:	2200      	movs	r2, #0
 8002198:	9201      	str	r2, [sp, #4]
 800219a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800219c:	f042 0201 	orr.w	r2, r2, #1
 80021a0:	645a      	str	r2, [r3, #68]	; 0x44
 80021a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021a4:	f003 0301 	and.w	r3, r3, #1
 80021a8:	9301      	str	r3, [sp, #4]
 80021aa:	9b01      	ldr	r3, [sp, #4]
}
 80021ac:	b005      	add	sp, #20
 80021ae:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM3_CLK_ENABLE();
 80021b0:	4b25      	ldr	r3, [pc, #148]	; (8002248 <HAL_TIM_Base_MspInit+0xd0>)
 80021b2:	2200      	movs	r2, #0
 80021b4:	9203      	str	r2, [sp, #12]
 80021b6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021b8:	f042 0202 	orr.w	r2, r2, #2
 80021bc:	641a      	str	r2, [r3, #64]	; 0x40
 80021be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021c0:	f003 0302 	and.w	r3, r3, #2
 80021c4:	9303      	str	r3, [sp, #12]
 80021c6:	9b03      	ldr	r3, [sp, #12]
}
 80021c8:	b005      	add	sp, #20
 80021ca:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021cc:	2300      	movs	r3, #0
 80021ce:	4a1e      	ldr	r2, [pc, #120]	; (8002248 <HAL_TIM_Base_MspInit+0xd0>)
 80021d0:	9302      	str	r3, [sp, #8]
 80021d2:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80021d4:	4d1d      	ldr	r5, [pc, #116]	; (800224c <HAL_TIM_Base_MspInit+0xd4>)
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021d6:	f041 0101 	orr.w	r1, r1, #1
 80021da:	6411      	str	r1, [r2, #64]	; 0x40
 80021dc:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80021de:	491c      	ldr	r1, [pc, #112]	; (8002250 <HAL_TIM_Base_MspInit+0xd8>)
    hdma_tim2_up_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 80021e0:	60eb      	str	r3, [r5, #12]
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021e2:	f002 0201 	and.w	r2, r2, #1
 80021e6:	9202      	str	r2, [sp, #8]
    hdma_tim2_up_ch3.Init.Channel = DMA_CHANNEL_3;
 80021e8:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80021ec:	e9c5 1200 	strd	r1, r2, [r5]
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021f0:	2140      	movs	r1, #64	; 0x40
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80021f2:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021f6:	60a9      	str	r1, [r5, #8]
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80021f8:	612a      	str	r2, [r5, #16]
    hdma_tim2_up_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 80021fa:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80021fe:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002202:	e9c5 1205 	strd	r1, r2, [r5, #20]
 8002206:	4604      	mov	r4, r0
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_HIGH;
 8002208:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    __HAL_RCC_TIM2_CLK_ENABLE();
 800220c:	9802      	ldr	r0, [sp, #8]
    hdma_tim2_up_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800220e:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 8002210:	4628      	mov	r0, r5
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_HIGH;
 8002212:	e9c5 3207 	strd	r3, r2, [r5, #28]
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 8002216:	f006 ffef 	bl	80091f8 <HAL_DMA_Init>
 800221a:	b968      	cbnz	r0, 8002238 <HAL_TIM_Base_MspInit+0xc0>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch3);
 800221c:	6225      	str	r5, [r4, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 800221e:	62e5      	str	r5, [r4, #44]	; 0x2c
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002220:	201c      	movs	r0, #28
 8002222:	2200      	movs	r2, #0
 8002224:	2105      	movs	r1, #5
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 8002226:	63ac      	str	r4, [r5, #56]	; 0x38
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002228:	f006 ff86 	bl	8009138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800222c:	201c      	movs	r0, #28
}
 800222e:	b005      	add	sp, #20
 8002230:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002234:	f006 bfbe 	b.w	80091b4 <HAL_NVIC_EnableIRQ>
      Error_Handler();
 8002238:	f7ff fc5a 	bl	8001af0 <Error_Handler>
 800223c:	e7ee      	b.n	800221c <HAL_TIM_Base_MspInit+0xa4>
 800223e:	bf00      	nop
 8002240:	40010000 	.word	0x40010000
 8002244:	40000400 	.word	0x40000400
 8002248:	40023800 	.word	0x40023800
 800224c:	200018ec 	.word	0x200018ec
 8002250:	40026028 	.word	0x40026028

08002254 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002254:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002256:	4b2b      	ldr	r3, [pc, #172]	; (8002304 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002258:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800225a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800225c:	2200      	movs	r2, #0
 800225e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002260:	2c00      	cmp	r4, #0
 8002262:	d14c      	bne.n	80022fe <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002264:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002266:	4a28      	ldr	r2, [pc, #160]	; (8002308 <HAL_SDRAM_MspInit+0xb4>)
 8002268:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800226a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800226c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800226e:	4827      	ldr	r0, [pc, #156]	; (800230c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002270:	433b      	orrs	r3, r7
 8002272:	6393      	str	r3, [r2, #56]	; 0x38
 8002274:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002276:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002278:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800227a:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800227c:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002280:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002282:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002284:	2302      	movs	r3, #2
 8002286:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800228a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800228e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002290:	f007 f936 	bl	8009500 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002294:	481e      	ldr	r0, [pc, #120]	; (8002310 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002296:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002298:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800229a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800229c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022a0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a4:	f007 f92c 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022a8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ac:	4819      	ldr	r0, [pc, #100]	; (8002314 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022ae:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022b2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022b6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ba:	f007 f921 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022be:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c2:	4815      	ldr	r0, [pc, #84]	; (8002318 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022c4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022c8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022cc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022d0:	f007 f916 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022d4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022d8:	4810      	ldr	r0, [pc, #64]	; (800231c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022da:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022dc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022de:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022e2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e6:	f007 f90b 	bl	8009500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022ea:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ec:	480c      	ldr	r0, [pc, #48]	; (8002320 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ee:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022f2:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022f6:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022f8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022fa:	f007 f901 	bl	8009500 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80022fe:	b009      	add	sp, #36	; 0x24
 8002300:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002302:	bf00      	nop
 8002304:	20001f28 	.word	0x20001f28
 8002308:	40023800 	.word	0x40023800
 800230c:	40021400 	.word	0x40021400
 8002310:	40020800 	.word	0x40020800
 8002314:	40021800 	.word	0x40021800
 8002318:	40021000 	.word	0x40021000
 800231c:	40020c00 	.word	0x40020c00
 8002320:	40020400 	.word	0x40020400

08002324 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002328:	4b23      	ldr	r3, [pc, #140]	; (80023b8 <HAL_InitTick+0x94>)
 800232a:	2200      	movs	r2, #0
 800232c:	9202      	str	r2, [sp, #8]
 800232e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002330:	f042 0210 	orr.w	r2, r2, #16
 8002334:	641a      	str	r2, [r3, #64]	; 0x40
 8002336:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002338:	f003 0310 	and.w	r3, r3, #16
 800233c:	9302      	str	r3, [sp, #8]
{
 800233e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002340:	a901      	add	r1, sp, #4
 8002342:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002344:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002346:	f009 fb23 	bl	800b990 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800234a:	9b06      	ldr	r3, [sp, #24]
 800234c:	b9d3      	cbnz	r3, 8002384 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800234e:	f009 fb0f 	bl	800b970 <HAL_RCC_GetPCLK1Freq>
 8002352:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002354:	4a19      	ldr	r2, [pc, #100]	; (80023bc <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002356:	4c1a      	ldr	r4, [pc, #104]	; (80023c0 <HAL_InitTick+0x9c>)
 8002358:	491a      	ldr	r1, [pc, #104]	; (80023c4 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800235a:	fba2 2303 	umull	r2, r3, r2, r3
 800235e:	0c9b      	lsrs	r3, r3, #18
 8002360:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002362:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002364:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002368:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800236a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800236e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002370:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002372:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002374:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002376:	f00a f93b 	bl	800c5f0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800237a:	4606      	mov	r6, r0
 800237c:	b130      	cbz	r0, 800238c <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800237e:	4630      	mov	r0, r6
 8002380:	b008      	add	sp, #32
 8002382:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002384:	f009 faf4 	bl	800b970 <HAL_RCC_GetPCLK1Freq>
 8002388:	0043      	lsls	r3, r0, #1
 800238a:	e7e3      	b.n	8002354 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 800238c:	4620      	mov	r0, r4
 800238e:	f00a f9bd 	bl	800c70c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002392:	4606      	mov	r6, r0
 8002394:	2800      	cmp	r0, #0
 8002396:	d1f2      	bne.n	800237e <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002398:	2036      	movs	r0, #54	; 0x36
 800239a:	f006 ff0b 	bl	80091b4 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800239e:	2d0f      	cmp	r5, #15
 80023a0:	d901      	bls.n	80023a6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80023a2:	2601      	movs	r6, #1
 80023a4:	e7eb      	b.n	800237e <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80023a6:	4632      	mov	r2, r6
 80023a8:	4629      	mov	r1, r5
 80023aa:	2036      	movs	r0, #54	; 0x36
 80023ac:	f006 fec4 	bl	8009138 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80023b0:	4b05      	ldr	r3, [pc, #20]	; (80023c8 <HAL_InitTick+0xa4>)
 80023b2:	601d      	str	r5, [r3, #0]
 80023b4:	e7e3      	b.n	800237e <HAL_InitTick+0x5a>
 80023b6:	bf00      	nop
 80023b8:	40023800 	.word	0x40023800
 80023bc:	431bde83 	.word	0x431bde83
 80023c0:	20001f2c 	.word	0x20001f2c
 80023c4:	40001000 	.word	0x40001000
 80023c8:	20000080 	.word	0x20000080

080023cc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023cc:	4770      	bx	lr
 80023ce:	bf00      	nop

080023d0 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023d0:	e7fe      	b.n	80023d0 <HardFault_Handler>
 80023d2:	bf00      	nop

080023d4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023d4:	e7fe      	b.n	80023d4 <MemManage_Handler>
 80023d6:	bf00      	nop

080023d8 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023d8:	e7fe      	b.n	80023d8 <BusFault_Handler>
 80023da:	bf00      	nop

080023dc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023dc:	e7fe      	b.n	80023dc <UsageFault_Handler>
 80023de:	bf00      	nop

080023e0 <DebugMon_Handler>:
 80023e0:	4770      	bx	lr
 80023e2:	bf00      	nop

080023e4 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80023e4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80023e6:	20c8      	movs	r0, #200	; 0xc8
 80023e8:	f006 fe82 	bl	80090f0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80023ec:	4804      	ldr	r0, [pc, #16]	; (8002400 <EXTI3_IRQHandler+0x1c>)
 80023ee:	2200      	movs	r2, #0
 80023f0:	2120      	movs	r1, #32
 80023f2:	f007 f9c9 	bl	8009788 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80023f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80023fa:	2008      	movs	r0, #8
 80023fc:	f007 b9d4 	b.w	80097a8 <HAL_GPIO_EXTI_IRQHandler>
 8002400:	40021000 	.word	0x40021000

08002404 <DMA1_Stream1_IRQHandler>:
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 8002404:	4801      	ldr	r0, [pc, #4]	; (800240c <DMA1_Stream1_IRQHandler+0x8>)
 8002406:	f006 bfa1 	b.w	800934c <HAL_DMA_IRQHandler>
 800240a:	bf00      	nop
 800240c:	200018ec 	.word	0x200018ec

08002410 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002410:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM2_IRQn 0 */
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 8002412:	4c0a      	ldr	r4, [pc, #40]	; (800243c <TIM2_IRQHandler+0x2c>)
 8002414:	2201      	movs	r2, #1
 8002416:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800241a:	4620      	mov	r0, r4
 800241c:	f007 f9b4 	bl	8009788 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8002420:	2001      	movs	r0, #1
 8002422:	f006 fe65 	bl	80090f0 <HAL_Delay>
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002426:	4806      	ldr	r0, [pc, #24]	; (8002440 <TIM2_IRQHandler+0x30>)
 8002428:	f00a fa64 	bl	800c8f4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800242c:	4620      	mov	r0, r4
 800242e:	2200      	movs	r2, #0
  /* USER CODE END TIM2_IRQn 1 */
}
 8002430:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8002434:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002438:	f007 b9a6 	b.w	8009788 <HAL_GPIO_WritePin>
 800243c:	40020400 	.word	0x40020400
 8002440:	20001ad4 	.word	0x20001ad4

08002444 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002444:	4801      	ldr	r0, [pc, #4]	; (800244c <TIM6_DAC_IRQHandler+0x8>)
 8002446:	f00a ba55 	b.w	800c8f4 <HAL_TIM_IRQHandler>
 800244a:	bf00      	nop
 800244c:	20001f2c 	.word	0x20001f2c

08002450 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002450:	4801      	ldr	r0, [pc, #4]	; (8002458 <I2C3_EV_IRQHandler+0x8>)
 8002452:	f008 b909 	b.w	800a668 <HAL_I2C_EV_IRQHandler>
 8002456:	bf00      	nop
 8002458:	2000194c 	.word	0x2000194c

0800245c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800245c:	4801      	ldr	r0, [pc, #4]	; (8002464 <LTDC_IRQHandler+0x8>)
 800245e:	f008 be7d 	b.w	800b15c <HAL_LTDC_IRQHandler>
 8002462:	bf00      	nop
 8002464:	200019a0 	.word	0x200019a0

08002468 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002468:	2001      	movs	r0, #1
 800246a:	4770      	bx	lr

0800246c <_kill>:

int _kill(int pid, int sig)
{
 800246c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800246e:	f028 f807 	bl	802a480 <__errno>
 8002472:	2316      	movs	r3, #22
 8002474:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002476:	f04f 30ff 	mov.w	r0, #4294967295
 800247a:	bd08      	pop	{r3, pc}

0800247c <_exit>:

void _exit (int status)
{
 800247c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800247e:	f027 ffff 	bl	802a480 <__errno>
 8002482:	2316      	movs	r3, #22
 8002484:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002486:	e7fe      	b.n	8002486 <_exit+0xa>

08002488 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002488:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800248a:	1e16      	subs	r6, r2, #0
 800248c:	dd07      	ble.n	800249e <_read+0x16>
 800248e:	460c      	mov	r4, r1
 8002490:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002492:	f3af 8000 	nop.w
 8002496:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800249a:	42a5      	cmp	r5, r4
 800249c:	d1f9      	bne.n	8002492 <_read+0xa>
	}

return len;
}
 800249e:	4630      	mov	r0, r6
 80024a0:	bd70      	pop	{r4, r5, r6, pc}
 80024a2:	bf00      	nop

080024a4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80024a4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024a6:	1e16      	subs	r6, r2, #0
 80024a8:	dd07      	ble.n	80024ba <_write+0x16>
 80024aa:	460c      	mov	r4, r1
 80024ac:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80024ae:	f814 0b01 	ldrb.w	r0, [r4], #1
 80024b2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024b6:	42ac      	cmp	r4, r5
 80024b8:	d1f9      	bne.n	80024ae <_write+0xa>
	}
	return len;
}
 80024ba:	4630      	mov	r0, r6
 80024bc:	bd70      	pop	{r4, r5, r6, pc}
 80024be:	bf00      	nop

080024c0 <_close>:

int _close(int file)
{
	return -1;
}
 80024c0:	f04f 30ff 	mov.w	r0, #4294967295
 80024c4:	4770      	bx	lr
 80024c6:	bf00      	nop

080024c8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80024c8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80024cc:	604b      	str	r3, [r1, #4]
	return 0;
}
 80024ce:	2000      	movs	r0, #0
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop

080024d4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80024d4:	2001      	movs	r0, #1
 80024d6:	4770      	bx	lr

080024d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80024d8:	2000      	movs	r0, #0
 80024da:	4770      	bx	lr

080024dc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80024dc:	4a0b      	ldr	r2, [pc, #44]	; (800250c <_sbrk+0x30>)
{
 80024de:	b508      	push	{r3, lr}
 80024e0:	4603      	mov	r3, r0
	if (heap_end == 0)
 80024e2:	6810      	ldr	r0, [r2, #0]
 80024e4:	b128      	cbz	r0, 80024f2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80024e6:	4403      	add	r3, r0
 80024e8:	4669      	mov	r1, sp
 80024ea:	428b      	cmp	r3, r1
 80024ec:	d807      	bhi.n	80024fe <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80024ee:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80024f0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80024f2:	4807      	ldr	r0, [pc, #28]	; (8002510 <_sbrk+0x34>)
 80024f4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80024f6:	4403      	add	r3, r0
 80024f8:	4669      	mov	r1, sp
 80024fa:	428b      	cmp	r3, r1
 80024fc:	d9f7      	bls.n	80024ee <_sbrk+0x12>
		errno = ENOMEM;
 80024fe:	f027 ffbf 	bl	802a480 <__errno>
 8002502:	230c      	movs	r3, #12
 8002504:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002506:	f04f 30ff 	mov.w	r0, #4294967295
}
 800250a:	bd08      	pop	{r3, pc}
 800250c:	20001f74 	.word	0x20001f74
 8002510:	20013a98 	.word	0x20013a98

08002514 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002514:	4770      	bx	lr

08002516 <_ZN23ApplicationFontProviderD0Ev>:
 8002516:	b510      	push	{r4, lr}
 8002518:	2104      	movs	r1, #4
 800251a:	4604      	mov	r4, r0
 800251c:	f026 fe9f 	bl	802925e <_ZdlPvj>
 8002520:	4620      	mov	r0, r4
 8002522:	bd10      	pop	{r4, pc}

08002524 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002524:	b508      	push	{r3, lr}
    switch (typography)
 8002526:	2903      	cmp	r1, #3
 8002528:	d813      	bhi.n	8002552 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800252a:	e8df f001 	tbb	[pc, r1]
 800252e:	0602      	.short	0x0602
 8002530:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002532:	f005 fe4d 	bl	80081d0 <_ZN17TypedTextDatabase8getFontsEv>
 8002536:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002538:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800253a:	f005 fe49 	bl	80081d0 <_ZN17TypedTextDatabase8getFontsEv>
 800253e:	6840      	ldr	r0, [r0, #4]
 8002540:	e7fa      	b.n	8002538 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002542:	f005 fe45 	bl	80081d0 <_ZN17TypedTextDatabase8getFontsEv>
 8002546:	6880      	ldr	r0, [r0, #8]
 8002548:	e7f6      	b.n	8002538 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800254a:	f005 fe41 	bl	80081d0 <_ZN17TypedTextDatabase8getFontsEv>
 800254e:	68c0      	ldr	r0, [r0, #12]
 8002550:	e7f2      	b.n	8002538 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002552:	2000      	movs	r0, #0
 8002554:	e7f0      	b.n	8002538 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002558 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002558:	4800      	ldr	r0, [pc, #0]	; (800255c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800255a:	4770      	bx	lr
 800255c:	0802b774 	.word	0x0802b774

08002560 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002560:	200d      	movs	r0, #13
 8002562:	4770      	bx	lr

08002564 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002564:	b513      	push	{r0, r1, r4, lr}
 8002566:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002568:	b151      	cbz	r1, 8002580 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800256a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800256c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800256e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002572:	aa01      	add	r2, sp, #4
 8002574:	689c      	ldr	r4, [r3, #8]
 8002576:	f10d 0303 	add.w	r3, sp, #3
 800257a:	47a0      	blx	r4
        return glyph;
    }
 800257c:	b002      	add	sp, #8
 800257e:	bd10      	pop	{r4, pc}
            return 0;
 8002580:	4608      	mov	r0, r1
 8002582:	e7fb      	b.n	800257c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002584 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002584:	89c0      	ldrh	r0, [r0, #14]
 8002586:	4770      	bx	lr

08002588 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002588:	8a00      	ldrh	r0, [r0, #16]
 800258a:	4770      	bx	lr

0800258c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800258c:	88c0      	ldrh	r0, [r0, #6]
 800258e:	4770      	bx	lr

08002590 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002590:	8880      	ldrh	r0, [r0, #4]
 8002592:	4770      	bx	lr

08002594 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002594:	7a80      	ldrb	r0, [r0, #10]
    }
 8002596:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800259a:	4770      	bx	lr

0800259c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800259c:	7a80      	ldrb	r0, [r0, #10]
    }
 800259e:	09c0      	lsrs	r0, r0, #7
 80025a0:	4770      	bx	lr

080025a2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80025a2:	4770      	bx	lr

080025a4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80025a4:	4770      	bx	lr

080025a6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80025a6:	4770      	bx	lr

080025a8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80025a8:	4770      	bx	lr

080025aa <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80025aa:	4770      	bx	lr

080025ac <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80025ac:	4770      	bx	lr

080025ae <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80025ae:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80025b0:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80025b2:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80025b4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80025b6:	466d      	mov	r5, sp
 80025b8:	4601      	mov	r1, r0
 80025ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80025be:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80025c0:	4628      	mov	r0, r5
 80025c2:	4798      	blx	r3
 80025c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80025c8:	343c      	adds	r4, #60	; 0x3c
 80025ca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025ce:	b005      	add	sp, #20
 80025d0:	bd30      	pop	{r4, r5, pc}

080025d2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80025d2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80025d4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80025d6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80025d8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80025da:	466d      	mov	r5, sp
 80025dc:	4601      	mov	r1, r0
 80025de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80025e2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80025e4:	4628      	mov	r0, r5
 80025e6:	4798      	blx	r3
 80025e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80025ec:	343c      	adds	r4, #60	; 0x3c
 80025ee:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025f2:	b005      	add	sp, #20
 80025f4:	bd30      	pop	{r4, r5, pc}

080025f6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80025f6:	2200      	movs	r2, #0
 80025f8:	8002      	strh	r2, [r0, #0]
 80025fa:	8042      	strh	r2, [r0, #2]
 80025fc:	8082      	strh	r2, [r0, #4]
 80025fe:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002600:	4770      	bx	lr

08002602 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002602:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002606:	4770      	bx	lr

08002608 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002608:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800260a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800260c:	4604      	mov	r4, r0
        setX(x);
 800260e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002610:	4615      	mov	r5, r2
        setX(x);
 8002612:	4798      	blx	r3
        setBaselineY(baselineY);
 8002614:	6823      	ldr	r3, [r4, #0]
 8002616:	4629      	mov	r1, r5
 8002618:	4620      	mov	r0, r4
 800261a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800261c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002620:	4718      	bx	r3

08002622 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002622:	2000      	movs	r0, #0
 8002624:	4770      	bx	lr

08002626 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002626:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002628:	4770      	bx	lr

0800262a <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800262a:	4770      	bx	lr

0800262c <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800262c:	4770      	bx	lr

0800262e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800262e:	4770      	bx	lr

08002630 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002630:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002632:	68c2      	ldr	r2, [r0, #12]
 8002634:	6844      	ldr	r4, [r0, #4]
 8002636:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002638:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800263a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800263e:	07d2      	lsls	r2, r2, #31
 8002640:	bf48      	it	mi
 8002642:	5962      	ldrmi	r2, [r4, r5]
 8002644:	689b      	ldr	r3, [r3, #8]
    }
 8002646:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002648:	bf48      	it	mi
 800264a:	58d3      	ldrmi	r3, [r2, r3]
 800264c:	4718      	bx	r3

0800264e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800264e:	6843      	ldr	r3, [r0, #4]
 8002650:	b12b      	cbz	r3, 800265e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002652:	6883      	ldr	r3, [r0, #8]
 8002654:	b92b      	cbnz	r3, 8002662 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002656:	68c0      	ldr	r0, [r0, #12]
 8002658:	f000 0001 	and.w	r0, r0, #1
 800265c:	4770      	bx	lr
 800265e:	4618      	mov	r0, r3
 8002660:	4770      	bx	lr
 8002662:	2001      	movs	r0, #1
    }
 8002664:	4770      	bx	lr

08002666 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002666:	b510      	push	{r4, lr}
    }
 8002668:	2108      	movs	r1, #8
    virtual ~TypedText()
 800266a:	4604      	mov	r4, r0
    }
 800266c:	f026 fdf7 	bl	802925e <_ZdlPvj>
 8002670:	4620      	mov	r0, r4
 8002672:	bd10      	pop	{r4, pc}

08002674 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002674:	b510      	push	{r4, lr}
 8002676:	214c      	movs	r1, #76	; 0x4c
 8002678:	4604      	mov	r4, r0
 800267a:	f026 fdf0 	bl	802925e <_ZdlPvj>
 800267e:	4620      	mov	r0, r4
 8002680:	bd10      	pop	{r4, pc}

08002682 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002682:	b510      	push	{r4, lr}
 8002684:	2110      	movs	r1, #16
 8002686:	4604      	mov	r4, r0
 8002688:	f026 fde9 	bl	802925e <_ZdlPvj>
 800268c:	4620      	mov	r0, r4
 800268e:	bd10      	pop	{r4, pc}

08002690 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002690:	b510      	push	{r4, lr}
 8002692:	4b03      	ldr	r3, [pc, #12]	; (80026a0 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002694:	6003      	str	r3, [r0, #0]
 8002696:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002698:	f011 f868 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800269c:	4620      	mov	r0, r4
 800269e:	bd10      	pop	{r4, pc}
 80026a0:	0802bae0 	.word	0x0802bae0

080026a4 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80026a4:	b507      	push	{r0, r1, r2, lr}
 80026a6:	4b07      	ldr	r3, [pc, #28]	; (80026c4 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80026a8:	6003      	str	r3, [r0, #0]
 80026aa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80026ac:	f011 f85e 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80026b0:	9801      	ldr	r0, [sp, #4]
 80026b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80026b6:	f026 fdd2 	bl	802925e <_ZdlPvj>
 80026ba:	9801      	ldr	r0, [sp, #4]
 80026bc:	b003      	add	sp, #12
 80026be:	f85d fb04 	ldr.w	pc, [sp], #4
 80026c2:	bf00      	nop
 80026c4:	0802bae0 	.word	0x0802bae0

080026c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80026c8:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80026ca:	f7fe fca7 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80026ce:	bd08      	pop	{r3, pc}

080026d0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026d0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026d2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026d4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80026d6:	4b12      	ldr	r3, [pc, #72]	; (8002720 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80026d8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026da:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026dc:	b28d      	uxth	r5, r1
 80026de:	b92b      	cbnz	r3, 80026ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80026e0:	4b10      	ldr	r3, [pc, #64]	; (8002724 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80026e2:	4a11      	ldr	r2, [pc, #68]	; (8002728 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026e4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026e6:	4811      	ldr	r0, [pc, #68]	; (800272c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80026e8:	f027 fbcc 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80026ec:	4910      	ldr	r1, [pc, #64]	; (8002730 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80026ee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026f0:	8809      	ldrh	r1, [r1, #0]
 80026f2:	4291      	cmp	r1, r2
 80026f4:	d803      	bhi.n	80026fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80026f6:	4b0f      	ldr	r3, [pc, #60]	; (8002734 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80026f8:	4a0b      	ldr	r2, [pc, #44]	; (8002728 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026fa:	216d      	movs	r1, #109	; 0x6d
 80026fc:	e7f3      	b.n	80026e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80026fe:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002702:	4b0d      	ldr	r3, [pc, #52]	; (8002738 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800270a:	6803      	ldr	r3, [r0, #0]
 800270c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800270e:	4798      	blx	r3
 8002710:	1a28      	subs	r0, r5, r0
 8002712:	b201      	sxth	r1, r0
 8002714:	4633      	mov	r3, r6
 8002716:	4620      	mov	r0, r4
    }
 8002718:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800271c:	4718      	bx	r3
 800271e:	bf00      	nop
 8002720:	20012eb4 	.word	0x20012eb4
 8002724:	0802b878 	.word	0x0802b878
 8002728:	0802b8ba 	.word	0x0802b8ba
 800272c:	0802b8f5 	.word	0x0802b8f5
 8002730:	20012eb8 	.word	0x20012eb8
 8002734:	0802b93c 	.word	0x0802b93c
 8002738:	20012ebc 	.word	0x20012ebc

0800273c <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800273c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800273e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002742:	4299      	cmp	r1, r3
{
 8002744:	4604      	mov	r4, r0
 8002746:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002748:	d103      	bne.n	8002752 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800274a:	f012 fd11 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800274e:	f001 f911 	bl	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002752:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002756:	429d      	cmp	r5, r3
 8002758:	d103      	bne.n	8002762 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800275a:	f012 fd09 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800275e:	f001 f9d9 	bl	8003b14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002762:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002766:	42a5      	cmp	r5, r4
 8002768:	d105      	bne.n	8002776 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800276a:	f012 fd01 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 800276e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002772:	f001 b9df 	b.w	8003b34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002776:	bd38      	pop	{r3, r4, r5, pc}

08002778 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002778:	2200      	movs	r2, #0
 800277a:	f04f 31ff 	mov.w	r1, #4294967295
 800277e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002782:	6082      	str	r2, [r0, #8]
    }
 8002784:	4770      	bx	lr

08002786 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002786:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002788:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800278a:	4604      	mov	r4, r0
        setX(x);
 800278c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800278e:	4615      	mov	r5, r2
        setX(x);
 8002790:	4798      	blx	r3
        setY(y);
 8002792:	6823      	ldr	r3, [r4, #0]
 8002794:	4629      	mov	r1, r5
 8002796:	4620      	mov	r0, r4
 8002798:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800279a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800279e:	4718      	bx	r3

080027a0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80027a0:	b570      	push	{r4, r5, r6, lr}
 80027a2:	4604      	mov	r4, r0
 80027a4:	461d      	mov	r5, r3
 80027a6:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80027aa:	f7ff ffec 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80027ae:	6823      	ldr	r3, [r4, #0]
 80027b0:	4629      	mov	r1, r5
 80027b2:	4620      	mov	r0, r4
 80027b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80027b6:	4798      	blx	r3
        setHeight(height);
 80027b8:	6823      	ldr	r3, [r4, #0]
 80027ba:	4631      	mov	r1, r6
 80027bc:	4620      	mov	r0, r4
 80027be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80027c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80027c4:	4718      	bx	r3
	...

080027c8 <_ZN8touchgfx6WidgetC1Ev>:
 80027c8:	2200      	movs	r2, #0
 80027ca:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80027ce:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80027d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80027d6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80027da:	f44f 7280 	mov.w	r2, #256	; 0x100
 80027de:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80027e0:	4a01      	ldr	r2, [pc, #4]	; (80027e8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80027e2:	6002      	str	r2, [r0, #0]
 80027e4:	4770      	bx	lr
 80027e6:	bf00      	nop
 80027e8:	0802b9c0 	.word	0x0802b9c0

080027ec <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80027ec:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027ee:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80027f0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027f2:	2100      	movs	r1, #0
 80027f4:	f027 fd4b 	bl	802a28e <memset>
 80027f8:	4620      	mov	r0, r4
 80027fa:	f7ff ffe5 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80027fe:	4b0a      	ldr	r3, [pc, #40]	; (8002828 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002800:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002802:	4b0a      	ldr	r3, [pc, #40]	; (800282c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002804:	62a3      	str	r3, [r4, #40]	; 0x28
 8002806:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800280a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800280c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002810:	2300      	movs	r3, #0
 8002812:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002816:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800281a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800281e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002820:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002822:	4620      	mov	r0, r4
 8002824:	bd10      	pop	{r4, pc}
 8002826:	bf00      	nop
 8002828:	0802e318 	.word	0x0802e318
 800282c:	0802ba28 	.word	0x0802ba28

08002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002830:	4b1a      	ldr	r3, [pc, #104]	; (800289c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002832:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002834:	881b      	ldrh	r3, [r3, #0]
 8002836:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002838:	428b      	cmp	r3, r1
    void updateTextPosition()
 800283a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800283c:	d92b      	bls.n	8002896 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800283e:	4b18      	ldr	r3, [pc, #96]	; (80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	b92b      	cbnz	r3, 8002850 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002844:	4b17      	ldr	r3, [pc, #92]	; (80028a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002846:	4a18      	ldr	r2, [pc, #96]	; (80028a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002848:	4818      	ldr	r0, [pc, #96]	; (80028ac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800284a:	216c      	movs	r1, #108	; 0x6c
 800284c:	f027 fb1a 	bl	8029e84 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002850:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002854:	4b16      	ldr	r3, [pc, #88]	; (80028b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800285c:	4b15      	ldr	r3, [pc, #84]	; (80028b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800285e:	6818      	ldr	r0, [r3, #0]
 8002860:	f005 fca6 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002864:	682b      	ldr	r3, [r5, #0]
 8002866:	9001      	str	r0, [sp, #4]
 8002868:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800286a:	4628      	mov	r0, r5
 800286c:	4798      	blx	r3
 800286e:	682b      	ldr	r3, [r5, #0]
 8002870:	9901      	ldr	r1, [sp, #4]
 8002872:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002874:	4604      	mov	r4, r0
 8002876:	4628      	mov	r0, r5
 8002878:	4798      	blx	r3
 800287a:	682b      	ldr	r3, [r5, #0]
 800287c:	9901      	ldr	r1, [sp, #4]
 800287e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002880:	fb14 f400 	smulbb	r4, r4, r0
 8002884:	4628      	mov	r0, r5
 8002886:	4798      	blx	r3
 8002888:	b2a4      	uxth	r4, r4
 800288a:	1823      	adds	r3, r4, r0
 800288c:	b21b      	sxth	r3, r3
 800288e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002892:	b002      	add	sp, #8
 8002894:	bd70      	pop	{r4, r5, r6, pc}
 8002896:	2300      	movs	r3, #0
 8002898:	e7f9      	b.n	800288e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800289a:	bf00      	nop
 800289c:	20012eb8 	.word	0x20012eb8
 80028a0:	20012eb4 	.word	0x20012eb4
 80028a4:	0802b878 	.word	0x0802b878
 80028a8:	0802b8ba 	.word	0x0802b8ba
 80028ac:	0802b8f5 	.word	0x0802b8f5
 80028b0:	20012ebc 	.word	0x20012ebc
 80028b4:	20012ec0 	.word	0x20012ec0

080028b8 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80028b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028bc:	ed2d 8b06 	vpush	{d8-d10}
 80028c0:	4604      	mov	r4, r0
 80028c2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80028c4:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80028c6:	2500      	movs	r5, #0
 80028c8:	f014 f8d2 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 80028cc:	4b66      	ldr	r3, [pc, #408]	; (8002a68 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80028ce:	63e5      	str	r5, [r4, #60]	; 0x3c
 80028d0:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80028d4:	2226      	movs	r2, #38	; 0x26
 80028d6:	4629      	mov	r1, r5
 80028d8:	4658      	mov	r0, fp
 80028da:	f027 fcd8 	bl	802a28e <memset>
 80028de:	4658      	mov	r0, fp
 80028e0:	f7ff ff72 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80028e4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80028e8:	26ff      	movs	r6, #255	; 0xff
 80028ea:	4b60      	ldr	r3, [pc, #384]	; (8002a6c <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80028ec:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80028ee:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028f4:	4629      	mov	r1, r5
 80028f6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80028fa:	4650      	mov	r0, sl
        : color(col)
 80028fc:	66a5      	str	r5, [r4, #104]	; 0x68
 80028fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002902:	f027 fcc4 	bl	802a28e <memset>
 8002906:	4650      	mov	r0, sl
 8002908:	f7ff ff5e 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 800290c:	4b58      	ldr	r3, [pc, #352]	; (8002a70 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 800290e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002910:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002914:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002918:	a90a      	add	r1, sp, #40	; 0x28
 800291a:	4650      	mov	r0, sl
 800291c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002920:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002924:	f00f ff1b 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002928:	4648      	mov	r0, r9
 800292a:	f7ff ff5f 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 800292e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002932:	4b50      	ldr	r3, [pc, #320]	; (8002a74 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002934:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002938:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800293c:	4638      	mov	r0, r7
 800293e:	f00e fdd7 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8002942:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002946:	4618      	mov	r0, r3
 8002948:	9303      	str	r3, [sp, #12]
 800294a:	f7fe fb7b 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800294e:	4b4a      	ldr	r3, [pc, #296]	; (8002a78 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002950:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002954:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002958:	3324      	adds	r3, #36	; 0x24
 800295a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800295e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002962:	4640      	mov	r0, r8
 8002964:	f7ff ff42 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8002968:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800296c:	4618      	mov	r0, r3
 800296e:	ee08 3a10 	vmov	s16, r3
 8002972:	f7ff ff3b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8002976:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800297a:	4618      	mov	r0, r3
 800297c:	ee08 3a90 	vmov	s17, r3
 8002980:	f7ff ff34 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8002984:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002988:	4618      	mov	r0, r3
 800298a:	ee09 3a10 	vmov	s18, r3
 800298e:	f010 f827 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002992:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002996:	4618      	mov	r0, r3
 8002998:	ee09 3a90 	vmov	s19, r3
 800299c:	f010 f820 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80029a0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80029a4:	4618      	mov	r0, r3
 80029a6:	ee0a 3a10 	vmov	s20, r3
 80029aa:	f010 f819 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80029ae:	4a33      	ldr	r2, [pc, #204]	; (8002a7c <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80029b0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80029b4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80029b8:	4a31      	ldr	r2, [pc, #196]	; (8002a80 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80029ba:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80029be:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80029c2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80029c6:	f010 fec7 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80029ca:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80029ce:	462a      	mov	r2, r5
 80029d0:	4658      	mov	r0, fp
 80029d2:	9300      	str	r3, [sp, #0]
 80029d4:	4629      	mov	r1, r5
 80029d6:	23f0      	movs	r3, #240	; 0xf0
 80029d8:	f7ff fee2 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029dc:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029de:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80029e2:	66a3      	str	r3, [r4, #104]	; 0x68
 80029e4:	4659      	mov	r1, fp
 80029e6:	4630      	mov	r0, r6
 80029e8:	f00d f92a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80029ec:	462a      	mov	r2, r5
 80029ee:	4650      	mov	r0, sl
 80029f0:	4629      	mov	r1, r5
 80029f2:	f7ff fec8 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80029f6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80029f8:	4650      	mov	r0, sl
 80029fa:	a90a      	add	r1, sp, #40	; 0x28
 80029fc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002a00:	f00f fead 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002a04:	4651      	mov	r1, sl
 8002a06:	4630      	mov	r0, r6
 8002a08:	f00d f91a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002a0c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002a10:	2159      	movs	r1, #89	; 0x59
 8002a12:	4648      	mov	r0, r9
 8002a14:	f7ff feb7 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002a18:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002a1c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002a20:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002a24:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002a28:	4650      	mov	r0, sl
 8002a2a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002a2e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002a32:	4649      	mov	r1, r9
 8002a34:	4798      	blx	r3
 8002a36:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002a3a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002a3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a42:	4b10      	ldr	r3, [pc, #64]	; (8002a84 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002a44:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002a46:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002a4a:	b92b      	cbnz	r3, 8002a58 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002a4c:	4b0e      	ldr	r3, [pc, #56]	; (8002a88 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002a4e:	4a0f      	ldr	r2, [pc, #60]	; (8002a8c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a50:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a52:	480f      	ldr	r0, [pc, #60]	; (8002a90 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002a54:	f027 fa16 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002a58:	4b0e      	ldr	r3, [pc, #56]	; (8002a94 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a5a:	881b      	ldrh	r3, [r3, #0]
 8002a5c:	2b14      	cmp	r3, #20
 8002a5e:	d81d      	bhi.n	8002a9c <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002a60:	4b0d      	ldr	r3, [pc, #52]	; (8002a98 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002a62:	4a0a      	ldr	r2, [pc, #40]	; (8002a8c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a64:	2161      	movs	r1, #97	; 0x61
 8002a66:	e7f4      	b.n	8002a52 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002a68:	0802bae0 	.word	0x0802bae0
 8002a6c:	0802e3a8 	.word	0x0802e3a8
 8002a70:	0802e570 	.word	0x0802e570
 8002a74:	0802ba38 	.word	0x0802ba38
 8002a78:	0802e0dc 	.word	0x0802e0dc
 8002a7c:	0802bac8 	.word	0x0802bac8
 8002a80:	0800273d 	.word	0x0800273d
 8002a84:	20012eb4 	.word	0x20012eb4
 8002a88:	0802b878 	.word	0x0802b878
 8002a8c:	0802b97a 	.word	0x0802b97a
 8002a90:	0802b8f5 	.word	0x0802b8f5
 8002a94:	20012eb8 	.word	0x20012eb8
 8002a98:	0802b93c 	.word	0x0802b93c
        return texts->getText(typedTextId);
 8002a9c:	4b93      	ldr	r3, [pc, #588]	; (8002cec <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002a9e:	2114      	movs	r1, #20
 8002aa0:	6818      	ldr	r0, [r3, #0]
 8002aa2:	f005 fb85 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8002aa6:	4a92      	ldr	r2, [pc, #584]	; (8002cf0 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002aa8:	4603      	mov	r3, r0
 8002aaa:	2104      	movs	r1, #4
 8002aac:	4650      	mov	r0, sl
 8002aae:	f015 fccf 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002ab2:	4648      	mov	r0, r9
        wc1 = value;
 8002ab4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002ab8:	f00f fa56 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002abc:	4b8d      	ldr	r3, [pc, #564]	; (8002cf4 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002abe:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002ac0:	a90a      	add	r1, sp, #40	; 0x28
 8002ac2:	2315      	movs	r3, #21
 8002ac4:	4648      	mov	r0, r9
 8002ac6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002aca:	f00f fa6d 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ace:	4649      	mov	r1, r9
 8002ad0:	4630      	mov	r0, r6
 8002ad2:	f00d f8b5 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002ad6:	230a      	movs	r3, #10
 8002ad8:	9300      	str	r3, [sp, #0]
 8002ada:	2232      	movs	r2, #50	; 0x32
 8002adc:	23f0      	movs	r3, #240	; 0xf0
 8002ade:	4629      	mov	r1, r5
 8002ae0:	4638      	mov	r0, r7
 8002ae2:	f7ff fe5d 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002ae6:	9b03      	ldr	r3, [sp, #12]
 8002ae8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002aec:	22a0      	movs	r2, #160	; 0xa0
 8002aee:	4611      	mov	r1, r2
 8002af0:	4638      	mov	r0, r7
 8002af2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002af6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002afa:	f00e fe0f 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002afe:	22a0      	movs	r2, #160	; 0xa0
 8002b00:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002b04:	4638      	mov	r0, r7
 8002b06:	f00e fe14 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002b0a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002b0e:	2b20      	cmp	r3, #32
 8002b10:	d005      	beq.n	8002b1e <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002b12:	2320      	movs	r3, #32
 8002b14:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002b18:	4638      	mov	r0, r7
 8002b1a:	f00e fd09 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002b1e:	4638      	mov	r0, r7
 8002b20:	2101      	movs	r1, #1
 8002b22:	f00e fe11 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002b26:	4639      	mov	r1, r7
 8002b28:	4630      	mov	r0, r6
 8002b2a:	ad04      	add	r5, sp, #16
        color = newColor;
 8002b2c:	f04f 37ff 	mov.w	r7, #4294967295
 8002b30:	f00d f886 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002b34:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002b38:	223c      	movs	r2, #60	; 0x3c
 8002b3a:	4640      	mov	r0, r8
 8002b3c:	2146      	movs	r1, #70	; 0x46
 8002b3e:	f7ff fe22 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002b42:	4641      	mov	r1, r8
 8002b44:	4628      	mov	r0, r5
        color = newColor;
 8002b46:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002b4a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002b4e:	f00e ff91 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b52:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b56:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002b5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b5e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002cf4 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002b62:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b66:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002b68:	a90a      	add	r1, sp, #40	; 0x28
 8002b6a:	4640      	mov	r0, r8
 8002b6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b70:	f00f fa1a 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b74:	4641      	mov	r1, r8
 8002b76:	4630      	mov	r0, r6
 8002b78:	f00d f862 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002b7c:	ee18 0a10 	vmov	r0, s16
 8002b80:	2223      	movs	r2, #35	; 0x23
 8002b82:	2145      	movs	r1, #69	; 0x45
 8002b84:	f7ff fdff 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002b88:	ee18 1a10 	vmov	r1, s16
 8002b8c:	4628      	mov	r0, r5
        color = newColor;
 8002b8e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002b92:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002b96:	f00e ff6d 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b9a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b9e:	ee18 3a10 	vmov	r3, s16
 8002ba2:	333c      	adds	r3, #60	; 0x3c
 8002ba4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ba8:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002baa:	ee18 0a10 	vmov	r0, s16
 8002bae:	a90a      	add	r1, sp, #40	; 0x28
 8002bb0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002bb4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002bb8:	f00f f9f6 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002bbc:	ee18 1a10 	vmov	r1, s16
 8002bc0:	4630      	mov	r0, r6
 8002bc2:	f00d f83d 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002bc6:	ee18 0a90 	vmov	r0, s17
 8002bca:	220c      	movs	r2, #12
 8002bcc:	2136      	movs	r1, #54	; 0x36
 8002bce:	f7ff fdda 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002bd2:	ee18 1a90 	vmov	r1, s17
 8002bd6:	4628      	mov	r0, r5
        color = newColor;
 8002bd8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002bdc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002be0:	f00e ff48 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002be4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002be8:	ee18 3a90 	vmov	r3, s17
 8002bec:	333c      	adds	r3, #60	; 0x3c
 8002bee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002bf2:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002bf4:	ee18 0a90 	vmov	r0, s17
 8002bf8:	a90a      	add	r1, sp, #40	; 0x28
 8002bfa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002bfe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c02:	f00f f9d1 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c06:	ee18 1a90 	vmov	r1, s17
 8002c0a:	4630      	mov	r0, r6
 8002c0c:	f00d f818 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002c10:	ee19 0a10 	vmov	r0, s18
 8002c14:	22f0      	movs	r2, #240	; 0xf0
 8002c16:	2121      	movs	r1, #33	; 0x21
 8002c18:	f7ff fdb5 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002c1c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c20:	aa0a      	add	r2, sp, #40	; 0x28
 8002c22:	f04f 0802 	mov.w	r8, #2
 8002c26:	a909      	add	r1, sp, #36	; 0x24
 8002c28:	ee19 0a10 	vmov	r0, s18
 8002c2c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c30:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002c34:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c38:	f00f fb9b 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002c3c:	2348      	movs	r3, #72	; 0x48
 8002c3e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002c42:	3510      	adds	r5, #16
        updateTextPosition();
 8002c44:	ee19 0a10 	vmov	r0, s18
 8002c48:	f7ff fdf2 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c4c:	ee19 1a10 	vmov	r1, s18
 8002c50:	4630      	mov	r0, r6
        colorPressed = col;
 8002c52:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c56:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002c5a:	f00c fff1 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002c5e:	ee19 0a90 	vmov	r0, s19
 8002c62:	22aa      	movs	r2, #170	; 0xaa
 8002c64:	2121      	movs	r1, #33	; 0x21
 8002c66:	f7ff fd8e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c6a:	aa0a      	add	r2, sp, #40	; 0x28
 8002c6c:	a909      	add	r1, sp, #36	; 0x24
 8002c6e:	ee19 0a90 	vmov	r0, s19
 8002c72:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c76:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c7a:	f00f fb7a 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c7e:	2347      	movs	r3, #71	; 0x47
 8002c80:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002c84:	ee19 0a90 	vmov	r0, s19
 8002c88:	f7ff fdd2 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c8c:	ee19 1a90 	vmov	r1, s19
 8002c90:	4630      	mov	r0, r6
        colorPressed = col;
 8002c92:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002c96:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002c9a:	f00c ffd1 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002c9e:	ee1a 0a10 	vmov	r0, s20
 8002ca2:	2264      	movs	r2, #100	; 0x64
 8002ca4:	2121      	movs	r1, #33	; 0x21
 8002ca6:	f7ff fd6e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002caa:	aa0a      	add	r2, sp, #40	; 0x28
 8002cac:	a909      	add	r1, sp, #36	; 0x24
 8002cae:	ee1a 0a10 	vmov	r0, s20
 8002cb2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002cb6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002cba:	f00f fb5a 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002cbe:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002cc0:	ee1a 0a10 	vmov	r0, s20
 8002cc4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002cc8:	f7ff fdb2 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ccc:	4630      	mov	r0, r6
        colorPressed = col;
 8002cce:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002cd2:	ee1a 1a10 	vmov	r1, s20
 8002cd6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002cda:	f00c ffb1 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002cde:	4620      	mov	r0, r4
 8002ce0:	b00d      	add	sp, #52	; 0x34
 8002ce2:	ecbd 8b06 	vpop	{d8-d10}
 8002ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cea:	bf00      	nop
 8002cec:	20012ec0 	.word	0x20012ec0
 8002cf0:	0802b9b2 	.word	0x0802b9b2
 8002cf4:	0802ba28 	.word	0x0802ba28

08002cf8 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002cf8:	4770      	bx	lr

08002cfa <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cfa:	4770      	bx	lr

08002cfc <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002cfc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002cfe:	68c2      	ldr	r2, [r0, #12]
 8002d00:	6844      	ldr	r4, [r0, #4]
 8002d02:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d04:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d06:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d0a:	07d2      	lsls	r2, r2, #31
 8002d0c:	bf48      	it	mi
 8002d0e:	5962      	ldrmi	r2, [r4, r5]
 8002d10:	689b      	ldr	r3, [r3, #8]
    }
 8002d12:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d14:	bf48      	it	mi
 8002d16:	58d3      	ldrmi	r3, [r2, r3]
 8002d18:	4718      	bx	r3

08002d1a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002d1a:	6843      	ldr	r3, [r0, #4]
 8002d1c:	b12b      	cbz	r3, 8002d2a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002d1e:	6883      	ldr	r3, [r0, #8]
 8002d20:	b92b      	cbnz	r3, 8002d2e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002d22:	68c0      	ldr	r0, [r0, #12]
 8002d24:	f000 0001 	and.w	r0, r0, #1
 8002d28:	4770      	bx	lr
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	4770      	bx	lr
 8002d2e:	2001      	movs	r0, #1
    }
 8002d30:	4770      	bx	lr

08002d32 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d32:	b510      	push	{r4, lr}
 8002d34:	2110      	movs	r1, #16
 8002d36:	4604      	mov	r4, r0
 8002d38:	f026 fa91 	bl	802925e <_ZdlPvj>
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	bd10      	pop	{r4, pc}

08002d40 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d40:	b510      	push	{r4, lr}
 8002d42:	4b03      	ldr	r3, [pc, #12]	; (8002d50 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002d44:	6003      	str	r3, [r0, #0]
 8002d46:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d48:	f010 fd10 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	bd10      	pop	{r4, pc}
 8002d50:	0802bb2c 	.word	0x0802bb2c

08002d54 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d54:	b507      	push	{r0, r1, r2, lr}
 8002d56:	4b07      	ldr	r3, [pc, #28]	; (8002d74 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002d58:	6003      	str	r3, [r0, #0]
 8002d5a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d5c:	f010 fd06 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d60:	9801      	ldr	r0, [sp, #4]
 8002d62:	f241 015c 	movw	r1, #4188	; 0x105c
 8002d66:	f026 fa7a 	bl	802925e <_ZdlPvj>
 8002d6a:	9801      	ldr	r0, [sp, #4]
 8002d6c:	b003      	add	sp, #12
 8002d6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d72:	bf00      	nop
 8002d74:	0802bb2c 	.word	0x0802bb2c

08002d78 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002d78:	3098      	adds	r0, #152	; 0x98
 8002d7a:	4288      	cmp	r0, r1
{
 8002d7c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002d7e:	d105      	bne.n	8002d8c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d80:	f012 f9f6 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002d84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002d88:	f000 beb4 	b.w	8003af4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002d8c:	bd08      	pop	{r3, pc}
	...

08002d90 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d94:	ed2d 8b02 	vpush	{d8}
 8002d98:	4604      	mov	r4, r0
 8002d9a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002d9c:	46a1      	mov	r9, r4
 8002d9e:	2500      	movs	r5, #0
 8002da0:	f013 fe66 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8002da4:	4ba5      	ldr	r3, [pc, #660]	; (800303c <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002da6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002da8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002dac:	2226      	movs	r2, #38	; 0x26
 8002dae:	4629      	mov	r1, r5
 8002db0:	4648      	mov	r0, r9
 8002db2:	f027 fa6c 	bl	802a28e <memset>
 8002db6:	4648      	mov	r0, r9
 8002db8:	f7ff fd06 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8002dbc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002dc0:	26ff      	movs	r6, #255	; 0xff
 8002dc2:	4b9f      	ldr	r3, [pc, #636]	; (8003040 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002dc4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002dc6:	2226      	movs	r2, #38	; 0x26
 8002dc8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dcc:	4629      	mov	r1, r5
 8002dce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002dd2:	4640      	mov	r0, r8
 8002dd4:	66a5      	str	r5, [r4, #104]	; 0x68
 8002dd6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002dda:	f027 fa58 	bl	802a28e <memset>
 8002dde:	4640      	mov	r0, r8
 8002de0:	f7ff fcf2 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8002de4:	4b97      	ldr	r3, [pc, #604]	; (8003044 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002de6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002de8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002dec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002df0:	a90a      	add	r1, sp, #40	; 0x28
 8002df2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002df6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002df8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002dfc:	f00f fcaf 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e00:	4658      	mov	r0, fp
 8002e02:	f00f fded 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002e06:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002e0a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002e0e:	4618      	mov	r0, r3
 8002e10:	ee08 3a90 	vmov	s17, r3
 8002e14:	f7ff fcea 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8002e18:	4638      	mov	r0, r7
 8002e1a:	f00e fb69 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8002e1e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002e22:	4618      	mov	r0, r3
 8002e24:	9303      	str	r3, [sp, #12]
 8002e26:	f7fe f90d 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e2a:	4b87      	ldr	r3, [pc, #540]	; (8003048 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002e2c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002e30:	3324      	adds	r3, #36	; 0x24
 8002e32:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002e36:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002e3a:	4618      	mov	r0, r3
 8002e3c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002e40:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002e44:	ee08 3a10 	vmov	s16, r3
 8002e48:	f7ff fcd0 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8002e4c:	4650      	mov	r0, sl
 8002e4e:	f7ff fccd 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002e52:	4a7e      	ldr	r2, [pc, #504]	; (800304c <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002e54:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002e58:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002e5c:	4a7c      	ldr	r2, [pc, #496]	; (8003050 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e5e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002e62:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002e66:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002e6a:	f010 fc75 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002e6e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002e72:	462a      	mov	r2, r5
 8002e74:	4648      	mov	r0, r9
 8002e76:	9300      	str	r3, [sp, #0]
 8002e78:	4629      	mov	r1, r5
 8002e7a:	23f0      	movs	r3, #240	; 0xf0
 8002e7c:	f7ff fc90 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e80:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002e82:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e86:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e88:	4649      	mov	r1, r9
 8002e8a:	4630      	mov	r0, r6
 8002e8c:	f00c fed8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002e90:	462a      	mov	r2, r5
 8002e92:	4640      	mov	r0, r8
 8002e94:	4629      	mov	r1, r5
 8002e96:	f7ff fc76 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002e9a:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002e9e:	4640      	mov	r0, r8
 8002ea0:	a90a      	add	r1, sp, #40	; 0x28
 8002ea2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002ea6:	f00f fc5a 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002eaa:	4641      	mov	r1, r8
 8002eac:	4630      	mov	r0, r6
 8002eae:	f00c fec7 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002eb2:	4658      	mov	r0, fp
 8002eb4:	f240 1201 	movw	r2, #257	; 0x101
 8002eb8:	2121      	movs	r1, #33	; 0x21
 8002eba:	f7ff fc64 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002ebe:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ec0:	aa0a      	add	r2, sp, #40	; 0x28
 8002ec2:	a909      	add	r1, sp, #36	; 0x24
 8002ec4:	4658      	mov	r0, fp
 8002ec6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002eca:	2302      	movs	r3, #2
 8002ecc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ed0:	f00f fa4f 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002ed4:	4658      	mov	r0, fp
 8002ed6:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002eda:	f7ff fca9 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002ede:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002ee2:	330c      	adds	r3, #12
        color = col;
 8002ee4:	f04f 39ff 	mov.w	r9, #4294967295
 8002ee8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002eec:	4659      	mov	r1, fp
 8002eee:	4630      	mov	r0, r6
        colorPressed = col;
 8002ef0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002ef4:	f00c fea4 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ef8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002efc:	223c      	movs	r2, #60	; 0x3c
 8002efe:	ee18 0a90 	vmov	r0, s17
 8002f02:	2120      	movs	r1, #32
 8002f04:	f7ff fc3f 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002f08:	ee18 1a90 	vmov	r1, s17
 8002f0c:	4640      	mov	r0, r8
        color = newColor;
 8002f0e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f12:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f16:	f00e fdad 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f1a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f1e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002f22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002f26:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003054 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002f2a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f2e:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002f30:	ee18 0a90 	vmov	r0, s17
 8002f34:	a90a      	add	r1, sp, #40	; 0x28
 8002f36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f3a:	f00f f835 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f3e:	ee18 1a90 	vmov	r1, s17
 8002f42:	4630      	mov	r0, r6
 8002f44:	f00c fe7c 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002f48:	230a      	movs	r3, #10
 8002f4a:	9300      	str	r3, [sp, #0]
 8002f4c:	2232      	movs	r2, #50	; 0x32
 8002f4e:	23f0      	movs	r3, #240	; 0xf0
 8002f50:	4629      	mov	r1, r5
 8002f52:	4638      	mov	r0, r7
 8002f54:	f7ff fc24 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f58:	9b03      	ldr	r3, [sp, #12]
 8002f5a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f5e:	22a0      	movs	r2, #160	; 0xa0
 8002f60:	4611      	mov	r1, r2
 8002f62:	4638      	mov	r0, r7
 8002f64:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002f68:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002f6c:	f00e fbd6 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f70:	22a0      	movs	r2, #160	; 0xa0
 8002f72:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002f76:	4638      	mov	r0, r7
 8002f78:	f00e fbdb 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002f7c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002f80:	2b20      	cmp	r3, #32
 8002f82:	d005      	beq.n	8002f90 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002f84:	2320      	movs	r3, #32
 8002f86:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002f8a:	4638      	mov	r0, r7
 8002f8c:	f00e fad0 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002f90:	4638      	mov	r0, r7
 8002f92:	2101      	movs	r1, #1
 8002f94:	f00e fbd8 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002f98:	4639      	mov	r1, r7
 8002f9a:	4630      	mov	r0, r6
 8002f9c:	f00c fe50 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002fa0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002fa4:	ee18 0a10 	vmov	r0, s16
 8002fa8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002faa:	2500      	movs	r5, #0
 8002fac:	2145      	movs	r1, #69	; 0x45
 8002fae:	f7ff fbea 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002fb2:	ee18 1a10 	vmov	r1, s16
 8002fb6:	4640      	mov	r0, r8
        color = newColor;
 8002fb8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002fbc:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002fc0:	f00e fd58 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fc4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fc8:	ee18 3a10 	vmov	r3, s16
 8002fcc:	333c      	adds	r3, #60	; 0x3c
 8002fce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002fd2:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002fd4:	ee18 0a10 	vmov	r0, s16
 8002fd8:	a90a      	add	r1, sp, #40	; 0x28
 8002fda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fde:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fe2:	f00e ffe1 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fe6:	ee18 1a10 	vmov	r1, s16
 8002fea:	4630      	mov	r0, r6
 8002fec:	f00c fe28 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002ff0:	220c      	movs	r2, #12
 8002ff2:	4650      	mov	r0, sl
 8002ff4:	2136      	movs	r1, #54	; 0x36
 8002ff6:	f7ff fbc6 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8002ffa:	4651      	mov	r1, sl
 8002ffc:	4640      	mov	r0, r8
        color = newColor;
 8002ffe:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003002:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8003006:	f00e fd35 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800300a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800300e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003012:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003016:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003018:	a90a      	add	r1, sp, #40	; 0x28
 800301a:	4650      	mov	r0, sl
 800301c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003020:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003024:	f00e ffc0 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003028:	4630      	mov	r0, r6
 800302a:	4651      	mov	r1, sl
 800302c:	f00c fe08 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003030:	4620      	mov	r0, r4
 8003032:	b00d      	add	sp, #52	; 0x34
 8003034:	ecbd 8b02 	vpop	{d8}
 8003038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800303c:	0802bb2c 	.word	0x0802bb2c
 8003040:	0802e3a8 	.word	0x0802e3a8
 8003044:	0802e570 	.word	0x0802e570
 8003048:	0802e0dc 	.word	0x0802e0dc
 800304c:	0802bb14 	.word	0x0802bb14
 8003050:	08002d79 	.word	0x08002d79
 8003054:	0802ba28 	.word	0x0802ba28

08003058 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003058:	4770      	bx	lr

0800305a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800305a:	4770      	bx	lr

0800305c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800305c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800305e:	68c2      	ldr	r2, [r0, #12]
 8003060:	6844      	ldr	r4, [r0, #4]
 8003062:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003064:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003066:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800306a:	07d2      	lsls	r2, r2, #31
 800306c:	bf48      	it	mi
 800306e:	5962      	ldrmi	r2, [r4, r5]
 8003070:	689b      	ldr	r3, [r3, #8]
    }
 8003072:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003074:	bf48      	it	mi
 8003076:	58d3      	ldrmi	r3, [r2, r3]
 8003078:	4718      	bx	r3

0800307a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800307a:	6843      	ldr	r3, [r0, #4]
 800307c:	b12b      	cbz	r3, 800308a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800307e:	6883      	ldr	r3, [r0, #8]
 8003080:	b92b      	cbnz	r3, 800308e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003082:	68c0      	ldr	r0, [r0, #12]
 8003084:	f000 0001 	and.w	r0, r0, #1
 8003088:	4770      	bx	lr
 800308a:	4618      	mov	r0, r3
 800308c:	4770      	bx	lr
 800308e:	2001      	movs	r0, #1
    }
 8003090:	4770      	bx	lr

08003092 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003092:	b510      	push	{r4, lr}
 8003094:	2110      	movs	r1, #16
 8003096:	4604      	mov	r4, r0
 8003098:	f026 f8e1 	bl	802925e <_ZdlPvj>
 800309c:	4620      	mov	r0, r4
 800309e:	bd10      	pop	{r4, pc}

080030a0 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80030a0:	b510      	push	{r4, lr}
 80030a2:	4b03      	ldr	r3, [pc, #12]	; (80030b0 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 80030a4:	6003      	str	r3, [r0, #0]
 80030a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80030a8:	f010 fb60 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80030ac:	4620      	mov	r0, r4
 80030ae:	bd10      	pop	{r4, pc}
 80030b0:	0802bb78 	.word	0x0802bb78

080030b4 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80030b4:	b507      	push	{r0, r1, r2, lr}
 80030b6:	4b07      	ldr	r3, [pc, #28]	; (80030d4 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 80030b8:	6003      	str	r3, [r0, #0]
 80030ba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80030bc:	f010 fb56 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80030c0:	9801      	ldr	r0, [sp, #4]
 80030c2:	f241 015c 	movw	r1, #4188	; 0x105c
 80030c6:	f026 f8ca 	bl	802925e <_ZdlPvj>
 80030ca:	9801      	ldr	r0, [sp, #4]
 80030cc:	b003      	add	sp, #12
 80030ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80030d2:	bf00      	nop
 80030d4:	0802bb78 	.word	0x0802bb78

080030d8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80030d8:	3098      	adds	r0, #152	; 0x98
 80030da:	4288      	cmp	r0, r1
{
 80030dc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80030de:	d105      	bne.n	80030ec <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030e0:	f012 f846 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 80030e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 80030e8:	f000 bd04 	b.w	8003af4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 80030ec:	bd08      	pop	{r3, pc}
	...

080030f0 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80030f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030f4:	ed2d 8b02 	vpush	{d8}
 80030f8:	4604      	mov	r4, r0
 80030fa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80030fc:	46a1      	mov	r9, r4
 80030fe:	2500      	movs	r5, #0
 8003100:	f013 fcb6 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8003104:	4ba5      	ldr	r3, [pc, #660]	; (800339c <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8003106:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003108:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800310c:	2226      	movs	r2, #38	; 0x26
 800310e:	4629      	mov	r1, r5
 8003110:	4648      	mov	r0, r9
 8003112:	f027 f8bc 	bl	802a28e <memset>
 8003116:	4648      	mov	r0, r9
 8003118:	f7ff fb56 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 800311c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003120:	26ff      	movs	r6, #255	; 0xff
 8003122:	4b9f      	ldr	r3, [pc, #636]	; (80033a0 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003124:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003126:	2226      	movs	r2, #38	; 0x26
 8003128:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800312c:	4629      	mov	r1, r5
 800312e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003132:	4640      	mov	r0, r8
 8003134:	66a5      	str	r5, [r4, #104]	; 0x68
 8003136:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800313a:	f027 f8a8 	bl	802a28e <memset>
 800313e:	4640      	mov	r0, r8
 8003140:	f7ff fb42 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8003144:	4b97      	ldr	r3, [pc, #604]	; (80033a4 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8003146:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003148:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800314c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003150:	a90a      	add	r1, sp, #40	; 0x28
 8003152:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003156:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8003158:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800315c:	f00f faff 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003160:	4658      	mov	r0, fp
 8003162:	f00f fc3d 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003166:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800316a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800316e:	4618      	mov	r0, r3
 8003170:	ee08 3a90 	vmov	s17, r3
 8003174:	f7ff fb3a 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8003178:	4638      	mov	r0, r7
 800317a:	f00e f9b9 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 800317e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003182:	4618      	mov	r0, r3
 8003184:	9303      	str	r3, [sp, #12]
 8003186:	f7fd ff5d 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800318a:	4b87      	ldr	r3, [pc, #540]	; (80033a8 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 800318c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003190:	3324      	adds	r3, #36	; 0x24
 8003192:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8003196:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800319a:	4618      	mov	r0, r3
 800319c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80031a0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80031a4:	ee08 3a10 	vmov	s16, r3
 80031a8:	f7ff fb20 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80031ac:	4650      	mov	r0, sl
 80031ae:	f7ff fb1d 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80031b2:	4a7e      	ldr	r2, [pc, #504]	; (80033ac <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 80031b4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80031b8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80031bc:	4a7c      	ldr	r2, [pc, #496]	; (80033b0 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80031be:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80031c2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80031c6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80031ca:	f010 fac5 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80031ce:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80031d2:	462a      	mov	r2, r5
 80031d4:	4648      	mov	r0, r9
 80031d6:	9300      	str	r3, [sp, #0]
 80031d8:	4629      	mov	r1, r5
 80031da:	23f0      	movs	r3, #240	; 0xf0
 80031dc:	f7ff fae0 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031e0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80031e2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80031e6:	66a3      	str	r3, [r4, #104]	; 0x68
 80031e8:	4649      	mov	r1, r9
 80031ea:	4630      	mov	r0, r6
 80031ec:	f00c fd28 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80031f0:	462a      	mov	r2, r5
 80031f2:	4640      	mov	r0, r8
 80031f4:	4629      	mov	r1, r5
 80031f6:	f7ff fac6 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80031fa:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80031fc:	4640      	mov	r0, r8
 80031fe:	a90a      	add	r1, sp, #40	; 0x28
 8003200:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003204:	f00f faab 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003208:	4641      	mov	r1, r8
 800320a:	4630      	mov	r0, r6
 800320c:	f00c fd18 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003210:	4658      	mov	r0, fp
 8003212:	f240 1201 	movw	r2, #257	; 0x101
 8003216:	2121      	movs	r1, #33	; 0x21
 8003218:	f7ff fab5 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800321c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800321e:	aa0a      	add	r2, sp, #40	; 0x28
 8003220:	a909      	add	r1, sp, #36	; 0x24
 8003222:	4658      	mov	r0, fp
 8003224:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003228:	2302      	movs	r3, #2
 800322a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800322e:	f00f f8a0 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003232:	230f      	movs	r3, #15
        updateTextPosition();
 8003234:	4658      	mov	r0, fp
 8003236:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800323a:	f7ff faf9 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800323e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003242:	330c      	adds	r3, #12
        color = col;
 8003244:	f04f 39ff 	mov.w	r9, #4294967295
 8003248:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800324c:	4659      	mov	r1, fp
 800324e:	4630      	mov	r0, r6
        colorPressed = col;
 8003250:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003254:	f00c fcf4 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003258:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 800325c:	223c      	movs	r2, #60	; 0x3c
 800325e:	ee18 0a90 	vmov	r0, s17
 8003262:	213a      	movs	r1, #58	; 0x3a
 8003264:	f7ff fa8f 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8003268:	ee18 1a90 	vmov	r1, s17
 800326c:	4640      	mov	r0, r8
        color = newColor;
 800326e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003272:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003276:	f00e fbfd 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800327a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800327e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003282:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003286:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80033b4 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 800328a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800328e:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003290:	ee18 0a90 	vmov	r0, s17
 8003294:	a90a      	add	r1, sp, #40	; 0x28
 8003296:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800329a:	f00e fe85 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800329e:	ee18 1a90 	vmov	r1, s17
 80032a2:	4630      	mov	r0, r6
 80032a4:	f00c fccc 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80032a8:	230a      	movs	r3, #10
 80032aa:	9300      	str	r3, [sp, #0]
 80032ac:	2232      	movs	r2, #50	; 0x32
 80032ae:	23f0      	movs	r3, #240	; 0xf0
 80032b0:	4629      	mov	r1, r5
 80032b2:	4638      	mov	r0, r7
 80032b4:	f7ff fa74 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032b8:	9b03      	ldr	r3, [sp, #12]
 80032ba:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032be:	22a0      	movs	r2, #160	; 0xa0
 80032c0:	4611      	mov	r1, r2
 80032c2:	4638      	mov	r0, r7
 80032c4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80032c8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80032cc:	f00e fa26 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032d0:	22a0      	movs	r2, #160	; 0xa0
 80032d2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80032d6:	4638      	mov	r0, r7
 80032d8:	f00e fa2b 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80032dc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80032e0:	2b20      	cmp	r3, #32
 80032e2:	d005      	beq.n	80032f0 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80032e4:	2320      	movs	r3, #32
 80032e6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80032ea:	4638      	mov	r0, r7
 80032ec:	f00e f920 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80032f0:	4638      	mov	r0, r7
 80032f2:	2101      	movs	r1, #1
 80032f4:	f00e fa28 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80032f8:	4639      	mov	r1, r7
 80032fa:	4630      	mov	r0, r6
 80032fc:	f00c fca0 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003300:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003304:	ee18 0a10 	vmov	r0, s16
 8003308:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800330a:	2500      	movs	r5, #0
 800330c:	2145      	movs	r1, #69	; 0x45
 800330e:	f7ff fa3a 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003312:	ee18 1a10 	vmov	r1, s16
 8003316:	4640      	mov	r0, r8
        color = newColor;
 8003318:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800331c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003320:	f00e fba8 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003324:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003328:	ee18 3a10 	vmov	r3, s16
 800332c:	333c      	adds	r3, #60	; 0x3c
 800332e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003332:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003334:	ee18 0a10 	vmov	r0, s16
 8003338:	a90a      	add	r1, sp, #40	; 0x28
 800333a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800333e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003342:	f00e fe31 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003346:	ee18 1a10 	vmov	r1, s16
 800334a:	4630      	mov	r0, r6
 800334c:	f00c fc78 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003350:	220c      	movs	r2, #12
 8003352:	4650      	mov	r0, sl
 8003354:	2136      	movs	r1, #54	; 0x36
 8003356:	f7ff fa16 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800335a:	4651      	mov	r1, sl
 800335c:	4640      	mov	r0, r8
        color = newColor;
 800335e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003362:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8003366:	f00e fb85 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800336a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800336e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003372:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003376:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003378:	a90a      	add	r1, sp, #40	; 0x28
 800337a:	4650      	mov	r0, sl
 800337c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003380:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003384:	f00e fe10 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003388:	4630      	mov	r0, r6
 800338a:	4651      	mov	r1, sl
 800338c:	f00c fc58 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003390:	4620      	mov	r0, r4
 8003392:	b00d      	add	sp, #52	; 0x34
 8003394:	ecbd 8b02 	vpop	{d8}
 8003398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800339c:	0802bb78 	.word	0x0802bb78
 80033a0:	0802e3a8 	.word	0x0802e3a8
 80033a4:	0802e570 	.word	0x0802e570
 80033a8:	0802e0dc 	.word	0x0802e0dc
 80033ac:	0802bb60 	.word	0x0802bb60
 80033b0:	080030d9 	.word	0x080030d9
 80033b4:	0802ba28 	.word	0x0802ba28

080033b8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80033b8:	4770      	bx	lr

080033ba <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80033ba:	4770      	bx	lr

080033bc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80033bc:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80033c0:	6808      	ldr	r0, [r1, #0]
 80033c2:	6849      	ldr	r1, [r1, #4]
 80033c4:	c303      	stmia	r3!, {r0, r1}
    }
 80033c6:	4770      	bx	lr

080033c8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80033c8:	4770      	bx	lr

080033ca <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80033ca:	4770      	bx	lr

080033cc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80033cc:	6041      	str	r1, [r0, #4]
    }
 80033ce:	4770      	bx	lr

080033d0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80033d0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033d2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80033d4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80033d8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80033dc:	8002      	strh	r2, [r0, #0]
 80033de:	8042      	strh	r2, [r0, #2]
 80033e0:	8084      	strh	r4, [r0, #4]
 80033e2:	80c1      	strh	r1, [r0, #6]
        }
 80033e4:	bd10      	pop	{r4, pc}

080033e6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80033e6:	4770      	bx	lr

080033e8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80033e8:	4770      	bx	lr
	...

080033ec <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80033ec:	4b06      	ldr	r3, [pc, #24]	; (8003408 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80033ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80033f2:	2300      	movs	r3, #0
 80033f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Measurement_Single_Display_1P

void FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80033f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80033fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003400:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMeasurement_Single_Display_1PScreenNoTransition();
    }
 8003404:	4770      	bx	lr
 8003406:	bf00      	nop
 8003408:	080037a9 	.word	0x080037a9

0800340c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800340c:	2301      	movs	r3, #1
 800340e:	7203      	strb	r3, [r0, #8]
    }
 8003410:	4770      	bx	lr

08003412 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003412:	4770      	bx	lr

08003414 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003414:	4770      	bx	lr

08003416 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003416:	4770      	bx	lr

08003418 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003418:	4770      	bx	lr

0800341a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800341a:	4770      	bx	lr

0800341c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800341c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800341e:	6840      	ldr	r0, [r0, #4]
 8003420:	6803      	ldr	r3, [r0, #0]
 8003422:	3110      	adds	r1, #16
 8003424:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003426:	4718      	bx	r3

08003428 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003428:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800342a:	6840      	ldr	r0, [r0, #4]
 800342c:	6803      	ldr	r3, [r0, #0]
 800342e:	3110      	adds	r1, #16
 8003430:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003432:	4718      	bx	r3

08003434 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003434:	4770      	bx	lr

08003436 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003436:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003438:	6840      	ldr	r0, [r0, #4]
 800343a:	6803      	ldr	r3, [r0, #0]
 800343c:	3110      	adds	r1, #16
 800343e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003440:	4718      	bx	r3

08003442 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003442:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003444:	6840      	ldr	r0, [r0, #4]
 8003446:	6803      	ldr	r3, [r0, #0]
 8003448:	3110      	adds	r1, #16
 800344a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800344c:	4718      	bx	r3

0800344e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800344e:	4770      	bx	lr

08003450 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003450:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003452:	68c2      	ldr	r2, [r0, #12]
 8003454:	6841      	ldr	r1, [r0, #4]
 8003456:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003458:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800345a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800345e:	07d2      	lsls	r2, r2, #31
 8003460:	bf48      	it	mi
 8003462:	590a      	ldrmi	r2, [r1, r4]
 8003464:	689b      	ldr	r3, [r3, #8]
    }
 8003466:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800346a:	bf48      	it	mi
 800346c:	58d3      	ldrmi	r3, [r2, r3]
 800346e:	4718      	bx	r3

08003470 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003470:	6843      	ldr	r3, [r0, #4]
 8003472:	b12b      	cbz	r3, 8003480 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003474:	6883      	ldr	r3, [r0, #8]
 8003476:	b92b      	cbnz	r3, 8003484 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003478:	68c0      	ldr	r0, [r0, #12]
 800347a:	f000 0001 	and.w	r0, r0, #1
 800347e:	4770      	bx	lr
 8003480:	4618      	mov	r0, r3
 8003482:	4770      	bx	lr
 8003484:	2001      	movs	r0, #1
    }
 8003486:	4770      	bx	lr

08003488 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003488:	b510      	push	{r4, lr}
 800348a:	210c      	movs	r1, #12
 800348c:	4604      	mov	r4, r0
 800348e:	f025 fee6 	bl	802925e <_ZdlPvj>
 8003492:	4620      	mov	r0, r4
 8003494:	bd10      	pop	{r4, pc}

08003496 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003496:	b510      	push	{r4, lr}
 8003498:	2110      	movs	r1, #16
 800349a:	4604      	mov	r4, r0
 800349c:	f025 fedf 	bl	802925e <_ZdlPvj>
 80034a0:	4620      	mov	r0, r4
 80034a2:	bd10      	pop	{r4, pc}

080034a4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80034a4:	b510      	push	{r4, lr}
 80034a6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80034aa:	4604      	mov	r4, r0
 80034ac:	f025 fed7 	bl	802925e <_ZdlPvj>
 80034b0:	4620      	mov	r0, r4
 80034b2:	bd10      	pop	{r4, pc}

080034b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80034b4:	b510      	push	{r4, lr}
 80034b6:	2138      	movs	r1, #56	; 0x38
 80034b8:	4604      	mov	r4, r0
 80034ba:	f025 fed0 	bl	802925e <_ZdlPvj>
 80034be:	4620      	mov	r0, r4
 80034c0:	bd10      	pop	{r4, pc}

080034c2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80034c2:	b510      	push	{r4, lr}
 80034c4:	2128      	movs	r1, #40	; 0x28
 80034c6:	4604      	mov	r4, r0
 80034c8:	f025 fec9 	bl	802925e <_ZdlPvj>
 80034cc:	4620      	mov	r0, r4
 80034ce:	bd10      	pop	{r4, pc}

080034d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80034d0:	b510      	push	{r4, lr}
 80034d2:	2138      	movs	r1, #56	; 0x38
 80034d4:	4604      	mov	r4, r0
 80034d6:	f025 fec2 	bl	802925e <_ZdlPvj>
 80034da:	4620      	mov	r0, r4
 80034dc:	bd10      	pop	{r4, pc}

080034de <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80034de:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80034e0:	f011 fe46 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 80034e4:	6803      	ldr	r3, [r0, #0]
    }
 80034e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80034ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80034ec:	4718      	bx	r3
	...

080034f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034f0:	b513      	push	{r0, r1, r4, lr}
 80034f2:	4604      	mov	r4, r0
        animationCounter++;
 80034f4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80034f6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80034f8:	3001      	adds	r0, #1
 80034fa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80034fc:	4298      	cmp	r0, r3
        animationCounter++;
 80034fe:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003500:	d905      	bls.n	800350e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003502:	2301      	movs	r3, #1
 8003504:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003506:	2300      	movs	r3, #0
 8003508:	72a3      	strb	r3, [r4, #10]
    }
 800350a:	b002      	add	sp, #8
 800350c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800350e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003512:	2100      	movs	r1, #0
 8003514:	f013 fc5e 	bl	8016dd4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003518:	f010 0201 	ands.w	r2, r0, #1
 800351c:	b283      	uxth	r3, r0
 800351e:	d12a      	bne.n	8003576 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003520:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003522:	4a19      	ldr	r2, [pc, #100]	; (8003588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003524:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003528:	89e3      	ldrh	r3, [r4, #14]
 800352a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800352c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003530:	82a0      	strh	r0, [r4, #20]
 8003532:	2000      	movs	r0, #0
 8003534:	1ad2      	subs	r2, r2, r3
 8003536:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800353a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800353c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800353e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003540:	4a12      	ldr	r2, [pc, #72]	; (800358c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003542:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003546:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003548:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800354c:	691b      	ldr	r3, [r3, #16]
 800354e:	f8ad 1000 	strh.w	r1, [sp]
 8003552:	f8ad 2006 	strh.w	r2, [sp, #6]
 8003556:	4669      	mov	r1, sp
 8003558:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800355a:	7aa3      	ldrb	r3, [r4, #10]
 800355c:	2b01      	cmp	r3, #1
 800355e:	d1d4      	bne.n	800350a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003560:	4b0b      	ldr	r3, [pc, #44]	; (8003590 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003562:	781b      	ldrb	r3, [r3, #0]
 8003564:	2b00      	cmp	r3, #0
 8003566:	d0d0      	beq.n	800350a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003568:	f011 fe02 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800356c:	b002      	add	sp, #8
 800356e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003572:	f011 be03 	b.w	801517c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003576:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800357a:	2800      	cmp	r0, #0
 800357c:	bfd8      	it	le
 800357e:	460a      	movle	r2, r1
 8003580:	4413      	add	r3, r2
 8003582:	81e3      	strh	r3, [r4, #14]
 8003584:	e7cd      	b.n	8003522 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8003586:	bf00      	nop
 8003588:	20012e50 	.word	0x20012e50
 800358c:	20012e52 	.word	0x20012e52
 8003590:	20012e5a 	.word	0x20012e5a

08003594 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003594:	b510      	push	{r4, lr}
 8003596:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003598:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800359c:	b158      	cbz	r0, 80035b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800359e:	6803      	ldr	r3, [r0, #0]
 80035a0:	68db      	ldr	r3, [r3, #12]
 80035a2:	4798      	blx	r3
 80035a4:	b138      	cbz	r0, 80035b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80035a6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80035aa:	6803      	ldr	r3, [r0, #0]
 80035ac:	689b      	ldr	r3, [r3, #8]
 80035ae:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80035b0:	2300      	movs	r3, #0
 80035b2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80035b6:	bd10      	pop	{r4, pc}

080035b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80035b8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80035bc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80035c0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80035c2:	68a8      	ldr	r0, [r5, #8]
 80035c4:	6803      	ldr	r3, [r0, #0]
 80035c6:	6a1b      	ldr	r3, [r3, #32]
 80035c8:	4798      	blx	r3
 80035ca:	2897      	cmp	r0, #151	; 0x97
 80035cc:	d805      	bhi.n	80035da <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80035ce:	4b46      	ldr	r3, [pc, #280]	; (80036e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80035d0:	4a46      	ldr	r2, [pc, #280]	; (80036ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80035d4:	4846      	ldr	r0, [pc, #280]	; (80036f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80035d6:	f026 fc55 	bl	8029e84 <__assert_func>
 80035da:	6868      	ldr	r0, [r5, #4]
 80035dc:	6803      	ldr	r3, [r0, #0]
 80035de:	6a1b      	ldr	r3, [r3, #32]
 80035e0:	4798      	blx	r3
 80035e2:	280f      	cmp	r0, #15
 80035e4:	d803      	bhi.n	80035ee <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80035e6:	4b43      	ldr	r3, [pc, #268]	; (80036f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80035e8:	4a40      	ldr	r2, [pc, #256]	; (80036ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035ea:	21a4      	movs	r1, #164	; 0xa4
 80035ec:	e7f2      	b.n	80035d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035ee:	68e8      	ldr	r0, [r5, #12]
 80035f0:	6803      	ldr	r3, [r0, #0]
 80035f2:	6a1b      	ldr	r3, [r3, #32]
 80035f4:	4798      	blx	r3
 80035f6:	280b      	cmp	r0, #11
 80035f8:	d803      	bhi.n	8003602 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80035fa:	4b3f      	ldr	r3, [pc, #252]	; (80036f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80035fc:	4a3b      	ldr	r2, [pc, #236]	; (80036ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035fe:	21a5      	movs	r1, #165	; 0xa5
 8003600:	e7e8      	b.n	80035d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003602:	f011 fdb5 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003606:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800360a:	3004      	adds	r0, #4
 800360c:	f011 fe16 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003610:	f8d9 0000 	ldr.w	r0, [r9]
 8003614:	b110      	cbz	r0, 800361c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003616:	6803      	ldr	r3, [r0, #0]
 8003618:	68db      	ldr	r3, [r3, #12]
 800361a:	4798      	blx	r3
    if (*currentTrans)
 800361c:	f8d9 0000 	ldr.w	r0, [r9]
 8003620:	b110      	cbz	r0, 8003628 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003622:	6803      	ldr	r3, [r0, #0]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	4798      	blx	r3
    if (*currentScreen)
 8003628:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003704 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800362c:	f8d8 0000 	ldr.w	r0, [r8]
 8003630:	b110      	cbz	r0, 8003638 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003632:	6803      	ldr	r3, [r0, #0]
 8003634:	695b      	ldr	r3, [r3, #20]
 8003636:	4798      	blx	r3
    if (*currentPresenter)
 8003638:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800363c:	b110      	cbz	r0, 8003644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800363e:	6803      	ldr	r3, [r0, #0]
 8003640:	685b      	ldr	r3, [r3, #4]
 8003642:	4798      	blx	r3
    if (*currentScreen)
 8003644:	f8d8 0000 	ldr.w	r0, [r8]
 8003648:	b110      	cbz	r0, 8003650 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800364a:	6803      	ldr	r3, [r0, #0]
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	4798      	blx	r3
    if (*currentPresenter)
 8003650:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003654:	b110      	cbz	r0, 800365c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003656:	6803      	ldr	r3, [r0, #0]
 8003658:	689b      	ldr	r3, [r3, #8]
 800365a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800365c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800365e:	6803      	ldr	r3, [r0, #0]
 8003660:	2100      	movs	r1, #0
 8003662:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003664:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003666:	f04f 0b00 	mov.w	fp, #0
 800366a:	4b24      	ldr	r3, [pc, #144]	; (80036fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800366c:	6003      	str	r3, [r0, #0]
 800366e:	4604      	mov	r4, r0
 8003670:	f8c0 b004 	str.w	fp, [r0, #4]
 8003674:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003678:	68a8      	ldr	r0, [r5, #8]
 800367a:	6803      	ldr	r3, [r0, #0]
 800367c:	4659      	mov	r1, fp
 800367e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003680:	4798      	blx	r3
 8003682:	4606      	mov	r6, r0
 8003684:	f005 fa6c 	bl	8008b60 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003688:	6868      	ldr	r0, [r5, #4]
 800368a:	6803      	ldr	r3, [r0, #0]
 800368c:	4659      	mov	r1, fp
 800368e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003690:	4798      	blx	r3
 8003692:	4631      	mov	r1, r6
 8003694:	4605      	mov	r5, r0
 8003696:	f005 fa3f 	bl	8008b18 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800369a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800369e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80036a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80036a6:	b1e5      	cbz	r5, 80036e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80036a8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80036aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80036ae:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80036b0:	f8c5 a008 	str.w	sl, [r5, #8]
 80036b4:	4630      	mov	r0, r6
 80036b6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80036b8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80036ba:	4798      	blx	r3
    newPresenter->activate();
 80036bc:	682b      	ldr	r3, [r5, #0]
 80036be:	4628      	mov	r0, r5
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80036c4:	4621      	mov	r1, r4
 80036c6:	4630      	mov	r0, r6
 80036c8:	f013 fb7e 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80036cc:	6823      	ldr	r3, [r4, #0]
 80036ce:	4620      	mov	r0, r4
 80036d0:	691b      	ldr	r3, [r3, #16]
 80036d2:	4798      	blx	r3
    newTransition->invalidate();
 80036d4:	6823      	ldr	r3, [r4, #0]
 80036d6:	695b      	ldr	r3, [r3, #20]
 80036d8:	4620      	mov	r0, r4
}
 80036da:	b001      	add	sp, #4
 80036dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036e0:	4718      	bx	r3
    model->bind(newPresenter);
 80036e2:	462b      	mov	r3, r5
 80036e4:	e7e1      	b.n	80036aa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80036e6:	bf00      	nop
 80036e8:	0802bba4 	.word	0x0802bba4
 80036ec:	0802bc32 	.word	0x0802bc32
 80036f0:	0802bd40 	.word	0x0802bd40
 80036f4:	0802bd87 	.word	0x0802bd87
 80036f8:	0802be2a 	.word	0x0802be2a
 80036fc:	0802d270 	.word	0x0802d270
 8003700:	20012ea4 	.word	0x20012ea4
 8003704:	20012ea0 	.word	0x20012ea0

08003708 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003708:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800370a:	4604      	mov	r4, r0
        animationCounter++;
 800370c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800370e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003710:	3001      	adds	r0, #1
 8003712:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003714:	4298      	cmp	r0, r3
        animationCounter++;
 8003716:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003718:	d905      	bls.n	8003726 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800371a:	2301      	movs	r3, #1
 800371c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800371e:	2300      	movs	r3, #0
 8003720:	72a3      	strb	r3, [r4, #10]
    }
 8003722:	b003      	add	sp, #12
 8003724:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003726:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800372a:	2100      	movs	r1, #0
 800372c:	f013 fb52 	bl	8016dd4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003730:	f010 0201 	ands.w	r2, r0, #1
 8003734:	b283      	uxth	r3, r0
 8003736:	d128      	bne.n	800378a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003738:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800373a:	4b18      	ldr	r3, [pc, #96]	; (800379c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800373c:	4818      	ldr	r0, [pc, #96]	; (80037a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800373e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003740:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003742:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003744:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003748:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800374c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800374e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003750:	442b      	add	r3, r5
 8003752:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003754:	b212      	sxth	r2, r2
 8003756:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800375a:	6803      	ldr	r3, [r0, #0]
 800375c:	8322      	strh	r2, [r4, #24]
 800375e:	f8ad 2000 	strh.w	r2, [sp]
 8003762:	2200      	movs	r2, #0
 8003764:	691b      	ldr	r3, [r3, #16]
 8003766:	f8ad 2002 	strh.w	r2, [sp, #2]
 800376a:	4669      	mov	r1, sp
 800376c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800376e:	7aa3      	ldrb	r3, [r4, #10]
 8003770:	2b01      	cmp	r3, #1
 8003772:	d1d6      	bne.n	8003722 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003774:	4b0b      	ldr	r3, [pc, #44]	; (80037a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003776:	781b      	ldrb	r3, [r3, #0]
 8003778:	2b00      	cmp	r3, #0
 800377a:	d0d2      	beq.n	8003722 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800377c:	f011 fcf8 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003780:	b003      	add	sp, #12
 8003782:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003786:	f011 bcf9 	b.w	801517c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800378a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800378e:	2800      	cmp	r0, #0
 8003790:	bfd8      	it	le
 8003792:	460a      	movle	r2, r1
 8003794:	4413      	add	r3, r2
 8003796:	81e3      	strh	r3, [r4, #14]
 8003798:	e7cf      	b.n	800373a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800379a:	bf00      	nop
 800379c:	20012e50 	.word	0x20012e50
 80037a0:	20012e52 	.word	0x20012e52
 80037a4:	20012e5a 	.word	0x20012e5a

080037a8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv>:
{
 80037a8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80037ac:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80037b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80037b2:	68a8      	ldr	r0, [r5, #8]
 80037b4:	6803      	ldr	r3, [r0, #0]
 80037b6:	6a1b      	ldr	r3, [r3, #32]
 80037b8:	4798      	blx	r3
 80037ba:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80037be:	4298      	cmp	r0, r3
 80037c0:	d805      	bhi.n	80037ce <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x26>
 80037c2:	4b46      	ldr	r3, [pc, #280]	; (80038dc <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x134>)
 80037c4:	4a46      	ldr	r2, [pc, #280]	; (80038e0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 80037c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80037c8:	4846      	ldr	r0, [pc, #280]	; (80038e4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x13c>)
 80037ca:	f026 fb5b 	bl	8029e84 <__assert_func>
 80037ce:	6868      	ldr	r0, [r5, #4]
 80037d0:	6803      	ldr	r3, [r0, #0]
 80037d2:	6a1b      	ldr	r3, [r3, #32]
 80037d4:	4798      	blx	r3
 80037d6:	280f      	cmp	r0, #15
 80037d8:	d803      	bhi.n	80037e2 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x3a>
 80037da:	4b43      	ldr	r3, [pc, #268]	; (80038e8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x140>)
 80037dc:	4a40      	ldr	r2, [pc, #256]	; (80038e0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 80037de:	21a4      	movs	r1, #164	; 0xa4
 80037e0:	e7f2      	b.n	80037c8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80037e2:	68e8      	ldr	r0, [r5, #12]
 80037e4:	6803      	ldr	r3, [r0, #0]
 80037e6:	6a1b      	ldr	r3, [r3, #32]
 80037e8:	4798      	blx	r3
 80037ea:	280b      	cmp	r0, #11
 80037ec:	d803      	bhi.n	80037f6 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x4e>
 80037ee:	4b3f      	ldr	r3, [pc, #252]	; (80038ec <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x144>)
 80037f0:	4a3b      	ldr	r2, [pc, #236]	; (80038e0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 80037f2:	21a5      	movs	r1, #165	; 0xa5
 80037f4:	e7e8      	b.n	80037c8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80037f6:	f011 fcbb 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037fa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80038f4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x14c>
 80037fe:	3004      	adds	r0, #4
 8003800:	f011 fd1c 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003804:	f8d9 0000 	ldr.w	r0, [r9]
 8003808:	b110      	cbz	r0, 8003810 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800380a:	6803      	ldr	r3, [r0, #0]
 800380c:	68db      	ldr	r3, [r3, #12]
 800380e:	4798      	blx	r3
    if (*currentTrans)
 8003810:	f8d9 0000 	ldr.w	r0, [r9]
 8003814:	b110      	cbz	r0, 800381c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003816:	6803      	ldr	r3, [r0, #0]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	4798      	blx	r3
    if (*currentScreen)
 800381c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80038f8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x150>
 8003820:	f8d8 0000 	ldr.w	r0, [r8]
 8003824:	b110      	cbz	r0, 800382c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003826:	6803      	ldr	r3, [r0, #0]
 8003828:	695b      	ldr	r3, [r3, #20]
 800382a:	4798      	blx	r3
    if (*currentPresenter)
 800382c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003830:	b110      	cbz	r0, 8003838 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003832:	6803      	ldr	r3, [r0, #0]
 8003834:	685b      	ldr	r3, [r3, #4]
 8003836:	4798      	blx	r3
    if (*currentScreen)
 8003838:	f8d8 0000 	ldr.w	r0, [r8]
 800383c:	b110      	cbz	r0, 8003844 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800383e:	6803      	ldr	r3, [r0, #0]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	4798      	blx	r3
    if (*currentPresenter)
 8003844:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003848:	b110      	cbz	r0, 8003850 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800384a:	6803      	ldr	r3, [r0, #0]
 800384c:	689b      	ldr	r3, [r3, #8]
 800384e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003850:	68e8      	ldr	r0, [r5, #12]
 8003852:	6803      	ldr	r3, [r0, #0]
 8003854:	2100      	movs	r1, #0
 8003856:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003858:	4798      	blx	r3
 800385a:	f04f 0b00 	mov.w	fp, #0
 800385e:	4b24      	ldr	r3, [pc, #144]	; (80038f0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x148>)
 8003860:	6003      	str	r3, [r0, #0]
 8003862:	4604      	mov	r4, r0
 8003864:	f8c0 b004 	str.w	fp, [r0, #4]
 8003868:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800386c:	68a8      	ldr	r0, [r5, #8]
 800386e:	6803      	ldr	r3, [r0, #0]
 8003870:	4659      	mov	r1, fp
 8003872:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003874:	4798      	blx	r3
 8003876:	4606      	mov	r6, r0
 8003878:	f005 f81e 	bl	80088b8 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800387c:	6868      	ldr	r0, [r5, #4]
 800387e:	6803      	ldr	r3, [r0, #0]
 8003880:	4659      	mov	r1, fp
 8003882:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003884:	4798      	blx	r3
 8003886:	4631      	mov	r1, r6
 8003888:	4605      	mov	r5, r0
 800388a:	f004 ffef 	bl	800886c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800388e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003892:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003896:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800389a:	b1e5      	cbz	r5, 80038d6 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x12e>
 800389c:	1d2b      	adds	r3, r5, #4
 800389e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80038a2:	6833      	ldr	r3, [r6, #0]
 80038a4:	f8c5 a008 	str.w	sl, [r5, #8]
 80038a8:	4630      	mov	r0, r6
 80038aa:	68db      	ldr	r3, [r3, #12]
 80038ac:	63f5      	str	r5, [r6, #60]	; 0x3c
 80038ae:	4798      	blx	r3
    newPresenter->activate();
 80038b0:	682b      	ldr	r3, [r5, #0]
 80038b2:	4628      	mov	r0, r5
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80038b8:	4621      	mov	r1, r4
 80038ba:	4630      	mov	r0, r6
 80038bc:	f013 fa84 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80038c0:	6823      	ldr	r3, [r4, #0]
 80038c2:	4620      	mov	r0, r4
 80038c4:	691b      	ldr	r3, [r3, #16]
 80038c6:	4798      	blx	r3
    newTransition->invalidate();
 80038c8:	6823      	ldr	r3, [r4, #0]
 80038ca:	695b      	ldr	r3, [r3, #20]
 80038cc:	4620      	mov	r0, r4
}
 80038ce:	b001      	add	sp, #4
 80038d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038d4:	4718      	bx	r3
    model->bind(newPresenter);
 80038d6:	462b      	mov	r3, r5
 80038d8:	e7e1      	b.n	800389e <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xf6>
 80038da:	bf00      	nop
 80038dc:	0802bba4 	.word	0x0802bba4
 80038e0:	0802becd 	.word	0x0802becd
 80038e4:	0802bd40 	.word	0x0802bd40
 80038e8:	0802bd87 	.word	0x0802bd87
 80038ec:	0802be2a 	.word	0x0802be2a
 80038f0:	0802d270 	.word	0x0802d270
 80038f4:	20012ea4 	.word	0x20012ea4
 80038f8:	20012ea0 	.word	0x20012ea0

080038fc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80038fc:	4b04      	ldr	r3, [pc, #16]	; (8003910 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003904:	b10a      	cbz	r2, 800390a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003906:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003908:	b900      	cbnz	r0, 800390c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800390a:	6898      	ldr	r0, [r3, #8]
    }
 800390c:	4770      	bx	lr
 800390e:	bf00      	nop
 8003910:	20012e5c 	.word	0x20012e5c

08003914 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003916:	4604      	mov	r4, r0
 8003918:	4617      	mov	r7, r2
 800391a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800391c:	f011 fd5c 	bl	80153d8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003920:	4b10      	ldr	r3, [pc, #64]	; (8003964 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003922:	601c      	str	r4, [r3, #0]
      model(m)
 8003924:	4b10      	ldr	r3, [pc, #64]	; (8003968 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003926:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003928:	4b10      	ldr	r3, [pc, #64]	; (800396c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800392a:	2500      	movs	r5, #0
 800392c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003930:	4b0f      	ldr	r3, [pc, #60]	; (8003970 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003932:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003936:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003938:	6803      	ldr	r3, [r0, #0]
 800393a:	2101      	movs	r1, #1
 800393c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800393e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003942:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003946:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003948:	4628      	mov	r0, r5
 800394a:	f004 fbf5 	bl	8008138 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800394e:	f7ff ffd5 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8003952:	f01b f906 	bl	801eb62 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003956:	f7ff ffd1 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 800395a:	f01b f97d 	bl	801ec58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800395e:	4620      	mov	r0, r4
 8003960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003962:	bf00      	nop
 8003964:	20012eb0 	.word	0x20012eb0
 8003968:	0802d21c 	.word	0x0802d21c
 800396c:	0802d204 	.word	0x0802d204
 8003970:	20012e5c 	.word	0x20012e5c

08003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003974:	4b06      	ldr	r3, [pc, #24]	; (8003990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003976:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800397a:	2300      	movs	r3, #0
 800397c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003980:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003984:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003988:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800398c:	4770      	bx	lr
 800398e:	bf00      	nop
 8003990:	08003fb9 	.word	0x08003fb9

08003994 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003994:	4b06      	ldr	r3, [pc, #24]	; (80039b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003996:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800399a:	2300      	movs	r3, #0
 800399c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ac:	4770      	bx	lr
 80039ae:	bf00      	nop
 80039b0:	08004ddd 	.word	0x08004ddd

080039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80039b4:	4b06      	ldr	r3, [pc, #24]	; (80039d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80039b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039ba:	2300      	movs	r3, #0
 80039bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039cc:	4770      	bx	lr
 80039ce:	bf00      	nop
 80039d0:	08003e79 	.word	0x08003e79

080039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80039d4:	4b06      	ldr	r3, [pc, #24]	; (80039f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80039d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039da:	2300      	movs	r3, #0
 80039dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ec:	4770      	bx	lr
 80039ee:	bf00      	nop
 80039f0:	08004c9d 	.word	0x08004c9d

080039f4 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>:
 80039f4:	4b06      	ldr	r3, [pc, #24]	; (8003a10 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv+0x1c>)
 80039f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039fa:	2300      	movs	r3, #0
 80039fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a0c:	4770      	bx	lr
 8003a0e:	bf00      	nop
 8003a10:	080037a9 	.word	0x080037a9

08003a14 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003a14:	4b06      	ldr	r3, [pc, #24]	; (8003a30 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003a16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a2c:	4770      	bx	lr
 8003a2e:	bf00      	nop
 8003a30:	08004b5d 	.word	0x08004b5d

08003a34 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003a34:	4b06      	ldr	r3, [pc, #24]	; (8003a50 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003a36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a3a:	2300      	movs	r3, #0
 8003a3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a4c:	4770      	bx	lr
 8003a4e:	bf00      	nop
 8003a50:	08004a1d 	.word	0x08004a1d

08003a54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003a54:	4b06      	ldr	r3, [pc, #24]	; (8003a70 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003a56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a5a:	2300      	movs	r3, #0
 8003a5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a6c:	4770      	bx	lr
 8003a6e:	bf00      	nop
 8003a70:	080048dd 	.word	0x080048dd

08003a74 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003a74:	4b06      	ldr	r3, [pc, #24]	; (8003a90 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003a76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop
 8003a90:	08003d39 	.word	0x08003d39

08003a94 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003a94:	4b06      	ldr	r3, [pc, #24]	; (8003ab0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003a96:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003aa0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003aa4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003aa8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aac:	4770      	bx	lr
 8003aae:	bf00      	nop
 8003ab0:	0800479d 	.word	0x0800479d

08003ab4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003ab4:	4b06      	ldr	r3, [pc, #24]	; (8003ad0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003ab6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aba:	2300      	movs	r3, #0
 8003abc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ac0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ac4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ac8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003acc:	4770      	bx	lr
 8003ace:	bf00      	nop
 8003ad0:	0800465d 	.word	0x0800465d

08003ad4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003ad4:	4b06      	ldr	r3, [pc, #24]	; (8003af0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003ad6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ada:	2300      	movs	r3, #0
 8003adc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ae0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ae4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ae8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aec:	4770      	bx	lr
 8003aee:	bf00      	nop
 8003af0:	0800451d 	.word	0x0800451d

08003af4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003af4:	4b06      	ldr	r3, [pc, #24]	; (8003b10 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003af6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003afa:	2300      	movs	r3, #0
 8003afc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b0c:	4770      	bx	lr
 8003b0e:	bf00      	nop
 8003b10:	08003bf9 	.word	0x08003bf9

08003b14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003b14:	4b06      	ldr	r3, [pc, #24]	; (8003b30 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003b16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b1a:	2300      	movs	r3, #0
 8003b1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b2c:	4770      	bx	lr
 8003b2e:	bf00      	nop
 8003b30:	080043dd 	.word	0x080043dd

08003b34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003b34:	4b06      	ldr	r3, [pc, #24]	; (8003b50 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003b36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b4c:	4770      	bx	lr
 8003b4e:	bf00      	nop
 8003b50:	0800429d 	.word	0x0800429d

08003b54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003b54:	4b06      	ldr	r3, [pc, #24]	; (8003b70 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003b56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b5a:	2300      	movs	r3, #0
 8003b5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b6c:	4770      	bx	lr
 8003b6e:	bf00      	nop
 8003b70:	0800415d 	.word	0x0800415d

08003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003b74:	4b06      	ldr	r3, [pc, #24]	; (8003b90 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003b76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b8c:	4770      	bx	lr
 8003b8e:	bf00      	nop
 8003b90:	080035b9 	.word	0x080035b9

08003b94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b98:	4718      	bx	r3
	...

08003b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003b9c:	4b12      	ldr	r3, [pc, #72]	; (8003be8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003b9e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003ba0:	6003      	str	r3, [r0, #0]
 8003ba2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003ba6:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003ba8:	4b10      	ldr	r3, [pc, #64]	; (8003bec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003baa:	7241      	strb	r1, [r0, #9]
 8003bac:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003bae:	4910      	ldr	r1, [pc, #64]	; (8003bf0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003bb0:	4b10      	ldr	r3, [pc, #64]	; (8003bf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003bb2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003bb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003bba:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	6042      	str	r2, [r0, #4]
 8003bc0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003bc2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003bc4:	81c2      	strh	r2, [r0, #14]
          solid()
 8003bc6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003bca:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003bce:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003bd2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003bd6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003bd8:	9100      	str	r1, [sp, #0]
 8003bda:	3010      	adds	r0, #16
 8003bdc:	4611      	mov	r1, r2
 8003bde:	f7fe fddf 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003be2:	4620      	mov	r0, r4
 8003be4:	b002      	add	sp, #8
 8003be6:	bd10      	pop	{r4, pc}
 8003be8:	0802d2b8 	.word	0x0802d2b8
 8003bec:	0802d19c 	.word	0x0802d19c
 8003bf0:	20012e52 	.word	0x20012e52
 8003bf4:	20012e50 	.word	0x20012e50

08003bf8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bfc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c02:	68a0      	ldr	r0, [r4, #8]
 8003c04:	6803      	ldr	r3, [r0, #0]
 8003c06:	6a1b      	ldr	r3, [r3, #32]
 8003c08:	4798      	blx	r3
 8003c0a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003c0e:	d205      	bcs.n	8003c1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003c10:	4b42      	ldr	r3, [pc, #264]	; (8003d1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003c12:	4a43      	ldr	r2, [pc, #268]	; (8003d20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c14:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c16:	4843      	ldr	r0, [pc, #268]	; (8003d24 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003c18:	f026 f934 	bl	8029e84 <__assert_func>
 8003c1c:	6860      	ldr	r0, [r4, #4]
 8003c1e:	6803      	ldr	r3, [r0, #0]
 8003c20:	6a1b      	ldr	r3, [r3, #32]
 8003c22:	4798      	blx	r3
 8003c24:	280f      	cmp	r0, #15
 8003c26:	d803      	bhi.n	8003c30 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003c28:	4b3f      	ldr	r3, [pc, #252]	; (8003d28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003c2a:	4a3d      	ldr	r2, [pc, #244]	; (8003d20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c2c:	21a4      	movs	r1, #164	; 0xa4
 8003c2e:	e7f2      	b.n	8003c16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c30:	68e0      	ldr	r0, [r4, #12]
 8003c32:	6803      	ldr	r3, [r0, #0]
 8003c34:	6a1b      	ldr	r3, [r3, #32]
 8003c36:	4798      	blx	r3
 8003c38:	2837      	cmp	r0, #55	; 0x37
 8003c3a:	d803      	bhi.n	8003c44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003c3c:	4b3b      	ldr	r3, [pc, #236]	; (8003d2c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003c3e:	4a38      	ldr	r2, [pc, #224]	; (8003d20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c40:	21a5      	movs	r1, #165	; 0xa5
 8003c42:	e7e8      	b.n	8003c16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c44:	f011 fa94 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c48:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d30 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003c4c:	3004      	adds	r0, #4
 8003c4e:	f011 faf5 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c52:	f8d9 0000 	ldr.w	r0, [r9]
 8003c56:	b110      	cbz	r0, 8003c5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	68db      	ldr	r3, [r3, #12]
 8003c5c:	4798      	blx	r3
    if (*currentTrans)
 8003c5e:	f8d9 0000 	ldr.w	r0, [r9]
 8003c62:	b110      	cbz	r0, 8003c6a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c64:	6803      	ldr	r3, [r0, #0]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	4798      	blx	r3
    if (*currentScreen)
 8003c6a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d34 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003c6e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c72:	b110      	cbz	r0, 8003c7a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c74:	6803      	ldr	r3, [r0, #0]
 8003c76:	695b      	ldr	r3, [r3, #20]
 8003c78:	4798      	blx	r3
    if (*currentPresenter)
 8003c7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c7e:	b110      	cbz	r0, 8003c86 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c80:	6803      	ldr	r3, [r0, #0]
 8003c82:	685b      	ldr	r3, [r3, #4]
 8003c84:	4798      	blx	r3
    if (*currentScreen)
 8003c86:	f8d8 0000 	ldr.w	r0, [r8]
 8003c8a:	b110      	cbz	r0, 8003c92 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	4798      	blx	r3
    if (*currentPresenter)
 8003c92:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c96:	b110      	cbz	r0, 8003c9e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c98:	6803      	ldr	r3, [r0, #0]
 8003c9a:	689b      	ldr	r3, [r3, #8]
 8003c9c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c9e:	68e0      	ldr	r0, [r4, #12]
 8003ca0:	2100      	movs	r1, #0
 8003ca2:	f7ff ff77 	bl	8003b94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003ca6:	2114      	movs	r1, #20
 8003ca8:	4605      	mov	r5, r0
 8003caa:	f7ff ff77 	bl	8003b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003cae:	68a0      	ldr	r0, [r4, #8]
 8003cb0:	6803      	ldr	r3, [r0, #0]
 8003cb2:	2100      	movs	r1, #0
 8003cb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cb6:	4798      	blx	r3
 8003cb8:	4606      	mov	r6, r0
 8003cba:	f004 fadb 	bl	8008274 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003cbe:	6860      	ldr	r0, [r4, #4]
 8003cc0:	6803      	ldr	r3, [r0, #0]
 8003cc2:	2100      	movs	r1, #0
 8003cc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cc6:	4798      	blx	r3
 8003cc8:	4631      	mov	r1, r6
 8003cca:	4604      	mov	r4, r0
 8003ccc:	f004 faac 	bl	8008228 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003cd0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003cd4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cd8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cdc:	b1dc      	cbz	r4, 8003d16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003cde:	1d23      	adds	r3, r4, #4
 8003ce0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ce4:	6833      	ldr	r3, [r6, #0]
 8003ce6:	f8c4 a008 	str.w	sl, [r4, #8]
 8003cea:	4630      	mov	r0, r6
 8003cec:	68db      	ldr	r3, [r3, #12]
 8003cee:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003cf0:	4798      	blx	r3
    newPresenter->activate();
 8003cf2:	6823      	ldr	r3, [r4, #0]
 8003cf4:	4620      	mov	r0, r4
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003cfa:	4629      	mov	r1, r5
 8003cfc:	4630      	mov	r0, r6
 8003cfe:	f013 f863 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d02:	682b      	ldr	r3, [r5, #0]
 8003d04:	4628      	mov	r0, r5
 8003d06:	691b      	ldr	r3, [r3, #16]
 8003d08:	4798      	blx	r3
    newTransition->invalidate();
 8003d0a:	682b      	ldr	r3, [r5, #0]
 8003d0c:	4628      	mov	r0, r5
 8003d0e:	695b      	ldr	r3, [r3, #20]
}
 8003d10:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d14:	4718      	bx	r3
    model->bind(newPresenter);
 8003d16:	4623      	mov	r3, r4
 8003d18:	e7e2      	b.n	8003ce0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003d1a:	bf00      	nop
 8003d1c:	0802bba4 	.word	0x0802bba4
 8003d20:	0802bffd 	.word	0x0802bffd
 8003d24:	0802bd40 	.word	0x0802bd40
 8003d28:	0802bd87 	.word	0x0802bd87
 8003d2c:	0802be2a 	.word	0x0802be2a
 8003d30:	20012ea4 	.word	0x20012ea4
 8003d34:	20012ea0 	.word	0x20012ea0

08003d38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003d38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d3c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d42:	68a0      	ldr	r0, [r4, #8]
 8003d44:	6803      	ldr	r3, [r0, #0]
 8003d46:	6a1b      	ldr	r3, [r3, #32]
 8003d48:	4798      	blx	r3
 8003d4a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003d4e:	d205      	bcs.n	8003d5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003d50:	4b42      	ldr	r3, [pc, #264]	; (8003e5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003d52:	4a43      	ldr	r2, [pc, #268]	; (8003e60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d54:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d56:	4843      	ldr	r0, [pc, #268]	; (8003e64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003d58:	f026 f894 	bl	8029e84 <__assert_func>
 8003d5c:	6860      	ldr	r0, [r4, #4]
 8003d5e:	6803      	ldr	r3, [r0, #0]
 8003d60:	6a1b      	ldr	r3, [r3, #32]
 8003d62:	4798      	blx	r3
 8003d64:	280f      	cmp	r0, #15
 8003d66:	d803      	bhi.n	8003d70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003d68:	4b3f      	ldr	r3, [pc, #252]	; (8003e68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003d6a:	4a3d      	ldr	r2, [pc, #244]	; (8003e60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d6c:	21a4      	movs	r1, #164	; 0xa4
 8003d6e:	e7f2      	b.n	8003d56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d70:	68e0      	ldr	r0, [r4, #12]
 8003d72:	6803      	ldr	r3, [r0, #0]
 8003d74:	6a1b      	ldr	r3, [r3, #32]
 8003d76:	4798      	blx	r3
 8003d78:	2837      	cmp	r0, #55	; 0x37
 8003d7a:	d803      	bhi.n	8003d84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003d7c:	4b3b      	ldr	r3, [pc, #236]	; (8003e6c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003d7e:	4a38      	ldr	r2, [pc, #224]	; (8003e60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d80:	21a5      	movs	r1, #165	; 0xa5
 8003d82:	e7e8      	b.n	8003d56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d84:	f011 f9f4 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d88:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003d8c:	3004      	adds	r0, #4
 8003d8e:	f011 fa55 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d92:	f8d9 0000 	ldr.w	r0, [r9]
 8003d96:	b110      	cbz	r0, 8003d9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003d98:	6803      	ldr	r3, [r0, #0]
 8003d9a:	68db      	ldr	r3, [r3, #12]
 8003d9c:	4798      	blx	r3
    if (*currentTrans)
 8003d9e:	f8d9 0000 	ldr.w	r0, [r9]
 8003da2:	b110      	cbz	r0, 8003daa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003da4:	6803      	ldr	r3, [r0, #0]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	4798      	blx	r3
    if (*currentScreen)
 8003daa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003dae:	f8d8 0000 	ldr.w	r0, [r8]
 8003db2:	b110      	cbz	r0, 8003dba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003db4:	6803      	ldr	r3, [r0, #0]
 8003db6:	695b      	ldr	r3, [r3, #20]
 8003db8:	4798      	blx	r3
    if (*currentPresenter)
 8003dba:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dbe:	b110      	cbz	r0, 8003dc6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003dc0:	6803      	ldr	r3, [r0, #0]
 8003dc2:	685b      	ldr	r3, [r3, #4]
 8003dc4:	4798      	blx	r3
    if (*currentScreen)
 8003dc6:	f8d8 0000 	ldr.w	r0, [r8]
 8003dca:	b110      	cbz	r0, 8003dd2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003dcc:	6803      	ldr	r3, [r0, #0]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	4798      	blx	r3
    if (*currentPresenter)
 8003dd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dd6:	b110      	cbz	r0, 8003dde <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003dd8:	6803      	ldr	r3, [r0, #0]
 8003dda:	689b      	ldr	r3, [r3, #8]
 8003ddc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003dde:	68e0      	ldr	r0, [r4, #12]
 8003de0:	2100      	movs	r1, #0
 8003de2:	f7ff fed7 	bl	8003b94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003de6:	2114      	movs	r1, #20
 8003de8:	4605      	mov	r5, r0
 8003dea:	f7ff fed7 	bl	8003b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003dee:	68a0      	ldr	r0, [r4, #8]
 8003df0:	6803      	ldr	r3, [r0, #0]
 8003df2:	2100      	movs	r1, #0
 8003df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003df6:	4798      	blx	r3
 8003df8:	4606      	mov	r6, r0
 8003dfa:	f004 fc1f 	bl	800863c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003dfe:	6860      	ldr	r0, [r4, #4]
 8003e00:	6803      	ldr	r3, [r0, #0]
 8003e02:	2100      	movs	r1, #0
 8003e04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e06:	4798      	blx	r3
 8003e08:	4631      	mov	r1, r6
 8003e0a:	4604      	mov	r4, r0
 8003e0c:	f004 fbf0 	bl	80085f0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003e10:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e14:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e18:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e1c:	b1dc      	cbz	r4, 8003e56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003e1e:	1d23      	adds	r3, r4, #4
 8003e20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e24:	6833      	ldr	r3, [r6, #0]
 8003e26:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e2a:	4630      	mov	r0, r6
 8003e2c:	68db      	ldr	r3, [r3, #12]
 8003e2e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e30:	4798      	blx	r3
    newPresenter->activate();
 8003e32:	6823      	ldr	r3, [r4, #0]
 8003e34:	4620      	mov	r0, r4
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e3a:	4629      	mov	r1, r5
 8003e3c:	4630      	mov	r0, r6
 8003e3e:	f012 ffc3 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e42:	682b      	ldr	r3, [r5, #0]
 8003e44:	4628      	mov	r0, r5
 8003e46:	691b      	ldr	r3, [r3, #16]
 8003e48:	4798      	blx	r3
    newTransition->invalidate();
 8003e4a:	682b      	ldr	r3, [r5, #0]
 8003e4c:	4628      	mov	r0, r5
 8003e4e:	695b      	ldr	r3, [r3, #20]
}
 8003e50:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e54:	4718      	bx	r3
    model->bind(newPresenter);
 8003e56:	4623      	mov	r3, r4
 8003e58:	e7e2      	b.n	8003e20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003e5a:	bf00      	nop
 8003e5c:	0802bba4 	.word	0x0802bba4
 8003e60:	0802c11b 	.word	0x0802c11b
 8003e64:	0802bd40 	.word	0x0802bd40
 8003e68:	0802bd87 	.word	0x0802bd87
 8003e6c:	0802be2a 	.word	0x0802be2a
 8003e70:	20012ea4 	.word	0x20012ea4
 8003e74:	20012ea0 	.word	0x20012ea0

08003e78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003e78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e7c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e82:	68a0      	ldr	r0, [r4, #8]
 8003e84:	6803      	ldr	r3, [r0, #0]
 8003e86:	6a1b      	ldr	r3, [r3, #32]
 8003e88:	4798      	blx	r3
 8003e8a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e8e:	d205      	bcs.n	8003e9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003e90:	4b42      	ldr	r3, [pc, #264]	; (8003f9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003e92:	4a43      	ldr	r2, [pc, #268]	; (8003fa0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e94:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e96:	4843      	ldr	r0, [pc, #268]	; (8003fa4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003e98:	f025 fff4 	bl	8029e84 <__assert_func>
 8003e9c:	6860      	ldr	r0, [r4, #4]
 8003e9e:	6803      	ldr	r3, [r0, #0]
 8003ea0:	6a1b      	ldr	r3, [r3, #32]
 8003ea2:	4798      	blx	r3
 8003ea4:	280f      	cmp	r0, #15
 8003ea6:	d803      	bhi.n	8003eb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003ea8:	4b3f      	ldr	r3, [pc, #252]	; (8003fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003eaa:	4a3d      	ldr	r2, [pc, #244]	; (8003fa0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003eac:	21a4      	movs	r1, #164	; 0xa4
 8003eae:	e7f2      	b.n	8003e96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003eb0:	68e0      	ldr	r0, [r4, #12]
 8003eb2:	6803      	ldr	r3, [r0, #0]
 8003eb4:	6a1b      	ldr	r3, [r3, #32]
 8003eb6:	4798      	blx	r3
 8003eb8:	2837      	cmp	r0, #55	; 0x37
 8003eba:	d803      	bhi.n	8003ec4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003ebc:	4b3b      	ldr	r3, [pc, #236]	; (8003fac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003ebe:	4a38      	ldr	r2, [pc, #224]	; (8003fa0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003ec0:	21a5      	movs	r1, #165	; 0xa5
 8003ec2:	e7e8      	b.n	8003e96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003ec4:	f011 f954 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ec8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003ecc:	3004      	adds	r0, #4
 8003ece:	f011 f9b5 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ed2:	f8d9 0000 	ldr.w	r0, [r9]
 8003ed6:	b110      	cbz	r0, 8003ede <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003ed8:	6803      	ldr	r3, [r0, #0]
 8003eda:	68db      	ldr	r3, [r3, #12]
 8003edc:	4798      	blx	r3
    if (*currentTrans)
 8003ede:	f8d9 0000 	ldr.w	r0, [r9]
 8003ee2:	b110      	cbz	r0, 8003eea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003ee4:	6803      	ldr	r3, [r0, #0]
 8003ee6:	681b      	ldr	r3, [r3, #0]
 8003ee8:	4798      	blx	r3
    if (*currentScreen)
 8003eea:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003fb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003eee:	f8d8 0000 	ldr.w	r0, [r8]
 8003ef2:	b110      	cbz	r0, 8003efa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ef4:	6803      	ldr	r3, [r0, #0]
 8003ef6:	695b      	ldr	r3, [r3, #20]
 8003ef8:	4798      	blx	r3
    if (*currentPresenter)
 8003efa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003efe:	b110      	cbz	r0, 8003f06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003f00:	6803      	ldr	r3, [r0, #0]
 8003f02:	685b      	ldr	r3, [r3, #4]
 8003f04:	4798      	blx	r3
    if (*currentScreen)
 8003f06:	f8d8 0000 	ldr.w	r0, [r8]
 8003f0a:	b110      	cbz	r0, 8003f12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003f0c:	6803      	ldr	r3, [r0, #0]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	4798      	blx	r3
    if (*currentPresenter)
 8003f12:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f16:	b110      	cbz	r0, 8003f1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003f18:	6803      	ldr	r3, [r0, #0]
 8003f1a:	689b      	ldr	r3, [r3, #8]
 8003f1c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f1e:	68e0      	ldr	r0, [r4, #12]
 8003f20:	2100      	movs	r1, #0
 8003f22:	f7ff fe37 	bl	8003b94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003f26:	2114      	movs	r1, #20
 8003f28:	4605      	mov	r5, r0
 8003f2a:	f7ff fe37 	bl	8003b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f2e:	68a0      	ldr	r0, [r4, #8]
 8003f30:	6803      	ldr	r3, [r0, #0]
 8003f32:	2100      	movs	r1, #0
 8003f34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f36:	4798      	blx	r3
 8003f38:	4606      	mov	r6, r0
 8003f3a:	f004 fb1f 	bl	800857c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f3e:	6860      	ldr	r0, [r4, #4]
 8003f40:	6803      	ldr	r3, [r0, #0]
 8003f42:	2100      	movs	r1, #0
 8003f44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f46:	4798      	blx	r3
 8003f48:	4631      	mov	r1, r6
 8003f4a:	4604      	mov	r4, r0
 8003f4c:	f004 faf0 	bl	8008530 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003f50:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f54:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f58:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f5c:	b1dc      	cbz	r4, 8003f96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003f5e:	1d23      	adds	r3, r4, #4
 8003f60:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f64:	6833      	ldr	r3, [r6, #0]
 8003f66:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f6a:	4630      	mov	r0, r6
 8003f6c:	68db      	ldr	r3, [r3, #12]
 8003f6e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f70:	4798      	blx	r3
    newPresenter->activate();
 8003f72:	6823      	ldr	r3, [r4, #0]
 8003f74:	4620      	mov	r0, r4
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f7a:	4629      	mov	r1, r5
 8003f7c:	4630      	mov	r0, r6
 8003f7e:	f012 ff23 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f82:	682b      	ldr	r3, [r5, #0]
 8003f84:	4628      	mov	r0, r5
 8003f86:	691b      	ldr	r3, [r3, #16]
 8003f88:	4798      	blx	r3
    newTransition->invalidate();
 8003f8a:	682b      	ldr	r3, [r5, #0]
 8003f8c:	4628      	mov	r0, r5
 8003f8e:	695b      	ldr	r3, [r3, #20]
}
 8003f90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f94:	4718      	bx	r3
    model->bind(newPresenter);
 8003f96:	4623      	mov	r3, r4
 8003f98:	e7e2      	b.n	8003f60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003f9a:	bf00      	nop
 8003f9c:	0802bba4 	.word	0x0802bba4
 8003fa0:	0802c24b 	.word	0x0802c24b
 8003fa4:	0802bd40 	.word	0x0802bd40
 8003fa8:	0802bd87 	.word	0x0802bd87
 8003fac:	0802be2a 	.word	0x0802be2a
 8003fb0:	20012ea4 	.word	0x20012ea4
 8003fb4:	20012ea0 	.word	0x20012ea0

08003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003fb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fbc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fc0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fc2:	68a0      	ldr	r0, [r4, #8]
 8003fc4:	6803      	ldr	r3, [r0, #0]
 8003fc6:	6a1b      	ldr	r3, [r3, #32]
 8003fc8:	4798      	blx	r3
 8003fca:	f241 137b 	movw	r3, #4475	; 0x117b
 8003fce:	4298      	cmp	r0, r3
 8003fd0:	d805      	bhi.n	8003fde <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003fd2:	4b42      	ldr	r3, [pc, #264]	; (80040dc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003fd4:	4a42      	ldr	r2, [pc, #264]	; (80040e0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003fd6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003fd8:	4842      	ldr	r0, [pc, #264]	; (80040e4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003fda:	f025 ff53 	bl	8029e84 <__assert_func>
 8003fde:	6860      	ldr	r0, [r4, #4]
 8003fe0:	6803      	ldr	r3, [r0, #0]
 8003fe2:	6a1b      	ldr	r3, [r3, #32]
 8003fe4:	4798      	blx	r3
 8003fe6:	280f      	cmp	r0, #15
 8003fe8:	d803      	bhi.n	8003ff2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003fea:	4b3f      	ldr	r3, [pc, #252]	; (80040e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003fec:	4a3c      	ldr	r2, [pc, #240]	; (80040e0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003fee:	21a4      	movs	r1, #164	; 0xa4
 8003ff0:	e7f2      	b.n	8003fd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ff2:	68e0      	ldr	r0, [r4, #12]
 8003ff4:	6803      	ldr	r3, [r0, #0]
 8003ff6:	6a1b      	ldr	r3, [r3, #32]
 8003ff8:	4798      	blx	r3
 8003ffa:	2837      	cmp	r0, #55	; 0x37
 8003ffc:	d803      	bhi.n	8004006 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003ffe:	4b3b      	ldr	r3, [pc, #236]	; (80040ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004000:	4a37      	ldr	r2, [pc, #220]	; (80040e0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004002:	21a5      	movs	r1, #165	; 0xa5
 8004004:	e7e8      	b.n	8003fd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004006:	f011 f8b3 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800400a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040f0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800400e:	3004      	adds	r0, #4
 8004010:	f011 f914 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004014:	f8d9 0000 	ldr.w	r0, [r9]
 8004018:	b110      	cbz	r0, 8004020 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800401a:	6803      	ldr	r3, [r0, #0]
 800401c:	68db      	ldr	r3, [r3, #12]
 800401e:	4798      	blx	r3
    if (*currentTrans)
 8004020:	f8d9 0000 	ldr.w	r0, [r9]
 8004024:	b110      	cbz	r0, 800402c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004026:	6803      	ldr	r3, [r0, #0]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	4798      	blx	r3
    if (*currentScreen)
 800402c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80040f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004030:	f8d8 0000 	ldr.w	r0, [r8]
 8004034:	b110      	cbz	r0, 800403c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004036:	6803      	ldr	r3, [r0, #0]
 8004038:	695b      	ldr	r3, [r3, #20]
 800403a:	4798      	blx	r3
    if (*currentPresenter)
 800403c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004040:	b110      	cbz	r0, 8004048 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004042:	6803      	ldr	r3, [r0, #0]
 8004044:	685b      	ldr	r3, [r3, #4]
 8004046:	4798      	blx	r3
    if (*currentScreen)
 8004048:	f8d8 0000 	ldr.w	r0, [r8]
 800404c:	b110      	cbz	r0, 8004054 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800404e:	6803      	ldr	r3, [r0, #0]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	4798      	blx	r3
    if (*currentPresenter)
 8004054:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004058:	b110      	cbz	r0, 8004060 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800405a:	6803      	ldr	r3, [r0, #0]
 800405c:	689b      	ldr	r3, [r3, #8]
 800405e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004060:	68e0      	ldr	r0, [r4, #12]
 8004062:	2100      	movs	r1, #0
 8004064:	f7ff fd96 	bl	8003b94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004068:	2114      	movs	r1, #20
 800406a:	4605      	mov	r5, r0
 800406c:	f7ff fd96 	bl	8003b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004070:	68a0      	ldr	r0, [r4, #8]
 8004072:	6803      	ldr	r3, [r0, #0]
 8004074:	2100      	movs	r1, #0
 8004076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004078:	4798      	blx	r3
 800407a:	4606      	mov	r6, r0
 800407c:	f004 fa1e 	bl	80084bc <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004080:	6860      	ldr	r0, [r4, #4]
 8004082:	6803      	ldr	r3, [r0, #0]
 8004084:	2100      	movs	r1, #0
 8004086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004088:	4798      	blx	r3
 800408a:	4631      	mov	r1, r6
 800408c:	4604      	mov	r4, r0
 800408e:	f004 f9ef 	bl	8008470 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004092:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004096:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800409a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800409e:	b1dc      	cbz	r4, 80040d8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80040a0:	1d23      	adds	r3, r4, #4
 80040a2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040a6:	6833      	ldr	r3, [r6, #0]
 80040a8:	f8c4 a008 	str.w	sl, [r4, #8]
 80040ac:	4630      	mov	r0, r6
 80040ae:	68db      	ldr	r3, [r3, #12]
 80040b0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040b2:	4798      	blx	r3
    newPresenter->activate();
 80040b4:	6823      	ldr	r3, [r4, #0]
 80040b6:	4620      	mov	r0, r4
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040bc:	4629      	mov	r1, r5
 80040be:	4630      	mov	r0, r6
 80040c0:	f012 fe82 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040c4:	682b      	ldr	r3, [r5, #0]
 80040c6:	4628      	mov	r0, r5
 80040c8:	691b      	ldr	r3, [r3, #16]
 80040ca:	4798      	blx	r3
    newTransition->invalidate();
 80040cc:	682b      	ldr	r3, [r5, #0]
 80040ce:	4628      	mov	r0, r5
 80040d0:	695b      	ldr	r3, [r3, #20]
}
 80040d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040d6:	4718      	bx	r3
    model->bind(newPresenter);
 80040d8:	4623      	mov	r3, r4
 80040da:	e7e2      	b.n	80040a2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 80040dc:	0802bba4 	.word	0x0802bba4
 80040e0:	0802c369 	.word	0x0802c369
 80040e4:	0802bd40 	.word	0x0802bd40
 80040e8:	0802bd87 	.word	0x0802bd87
 80040ec:	0802be2a 	.word	0x0802be2a
 80040f0:	20012ea4 	.word	0x20012ea4
 80040f4:	20012ea0 	.word	0x20012ea0

080040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80040f8:	6803      	ldr	r3, [r0, #0]
 80040fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040fc:	4718      	bx	r3
	...

08004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004100:	4b12      	ldr	r3, [pc, #72]	; (800414c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004102:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004104:	6003      	str	r3, [r0, #0]
 8004106:	f44f 7380 	mov.w	r3, #256	; 0x100
 800410a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800410c:	4b10      	ldr	r3, [pc, #64]	; (8004150 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800410e:	7241      	strb	r1, [r0, #9]
 8004110:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004112:	4910      	ldr	r1, [pc, #64]	; (8004154 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004114:	4b10      	ldr	r3, [pc, #64]	; (8004158 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004116:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800411a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800411e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004120:	2200      	movs	r2, #0
 8004122:	6042      	str	r2, [r0, #4]
 8004124:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004126:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004128:	81c2      	strh	r2, [r0, #14]
          solid()
 800412a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800412e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004132:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004136:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800413a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800413c:	9100      	str	r1, [sp, #0]
 800413e:	3010      	adds	r0, #16
 8004140:	4611      	mov	r1, r2
 8004142:	f7fe fb2d 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004146:	4620      	mov	r0, r4
 8004148:	b002      	add	sp, #8
 800414a:	bd10      	pop	{r4, pc}
 800414c:	0802d294 	.word	0x0802d294
 8004150:	0802d19c 	.word	0x0802d19c
 8004154:	20012e52 	.word	0x20012e52
 8004158:	20012e50 	.word	0x20012e50

0800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800415c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004160:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004164:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004166:	68a0      	ldr	r0, [r4, #8]
 8004168:	6803      	ldr	r3, [r0, #0]
 800416a:	6a1b      	ldr	r3, [r3, #32]
 800416c:	4798      	blx	r3
 800416e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004172:	4298      	cmp	r0, r3
 8004174:	d805      	bhi.n	8004182 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004176:	4b42      	ldr	r3, [pc, #264]	; (8004280 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004178:	4a42      	ldr	r2, [pc, #264]	; (8004284 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800417a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800417c:	4842      	ldr	r0, [pc, #264]	; (8004288 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 800417e:	f025 fe81 	bl	8029e84 <__assert_func>
 8004182:	6860      	ldr	r0, [r4, #4]
 8004184:	6803      	ldr	r3, [r0, #0]
 8004186:	6a1b      	ldr	r3, [r3, #32]
 8004188:	4798      	blx	r3
 800418a:	280f      	cmp	r0, #15
 800418c:	d803      	bhi.n	8004196 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 800418e:	4b3f      	ldr	r3, [pc, #252]	; (800428c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004190:	4a3c      	ldr	r2, [pc, #240]	; (8004284 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004192:	21a4      	movs	r1, #164	; 0xa4
 8004194:	e7f2      	b.n	800417c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004196:	68e0      	ldr	r0, [r4, #12]
 8004198:	6803      	ldr	r3, [r0, #0]
 800419a:	6a1b      	ldr	r3, [r3, #32]
 800419c:	4798      	blx	r3
 800419e:	2837      	cmp	r0, #55	; 0x37
 80041a0:	d803      	bhi.n	80041aa <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80041a2:	4b3b      	ldr	r3, [pc, #236]	; (8004290 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80041a4:	4a37      	ldr	r2, [pc, #220]	; (8004284 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80041a6:	21a5      	movs	r1, #165	; 0xa5
 80041a8:	e7e8      	b.n	800417c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80041aa:	f010 ffe1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004294 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80041b2:	3004      	adds	r0, #4
 80041b4:	f011 f842 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041b8:	f8d9 0000 	ldr.w	r0, [r9]
 80041bc:	b110      	cbz	r0, 80041c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80041be:	6803      	ldr	r3, [r0, #0]
 80041c0:	68db      	ldr	r3, [r3, #12]
 80041c2:	4798      	blx	r3
    if (*currentTrans)
 80041c4:	f8d9 0000 	ldr.w	r0, [r9]
 80041c8:	b110      	cbz	r0, 80041d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80041ca:	6803      	ldr	r3, [r0, #0]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	4798      	blx	r3
    if (*currentScreen)
 80041d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004298 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80041d4:	f8d8 0000 	ldr.w	r0, [r8]
 80041d8:	b110      	cbz	r0, 80041e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041da:	6803      	ldr	r3, [r0, #0]
 80041dc:	695b      	ldr	r3, [r3, #20]
 80041de:	4798      	blx	r3
    if (*currentPresenter)
 80041e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041e4:	b110      	cbz	r0, 80041ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80041e6:	6803      	ldr	r3, [r0, #0]
 80041e8:	685b      	ldr	r3, [r3, #4]
 80041ea:	4798      	blx	r3
    if (*currentScreen)
 80041ec:	f8d8 0000 	ldr.w	r0, [r8]
 80041f0:	b110      	cbz	r0, 80041f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80041f2:	6803      	ldr	r3, [r0, #0]
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	4798      	blx	r3
    if (*currentPresenter)
 80041f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041fc:	b110      	cbz	r0, 8004204 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	689b      	ldr	r3, [r3, #8]
 8004202:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004204:	68e0      	ldr	r0, [r4, #12]
 8004206:	2100      	movs	r1, #0
 8004208:	f7ff ff76 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800420c:	2114      	movs	r1, #20
 800420e:	4605      	mov	r5, r0
 8004210:	f7ff ff76 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004214:	68a0      	ldr	r0, [r4, #8]
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	2100      	movs	r1, #0
 800421a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800421c:	4798      	blx	r3
 800421e:	4606      	mov	r6, r0
 8004220:	f004 fc46 	bl	8008ab0 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004224:	6860      	ldr	r0, [r4, #4]
 8004226:	6803      	ldr	r3, [r0, #0]
 8004228:	2100      	movs	r1, #0
 800422a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800422c:	4798      	blx	r3
 800422e:	4631      	mov	r1, r6
 8004230:	4604      	mov	r4, r0
 8004232:	f004 fc17 	bl	8008a64 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004236:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800423a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800423e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004242:	b1dc      	cbz	r4, 800427c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004244:	1d23      	adds	r3, r4, #4
 8004246:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800424a:	6833      	ldr	r3, [r6, #0]
 800424c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004250:	4630      	mov	r0, r6
 8004252:	68db      	ldr	r3, [r3, #12]
 8004254:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004256:	4798      	blx	r3
    newPresenter->activate();
 8004258:	6823      	ldr	r3, [r4, #0]
 800425a:	4620      	mov	r0, r4
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004260:	4629      	mov	r1, r5
 8004262:	4630      	mov	r0, r6
 8004264:	f012 fdb0 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004268:	682b      	ldr	r3, [r5, #0]
 800426a:	4628      	mov	r0, r5
 800426c:	691b      	ldr	r3, [r3, #16]
 800426e:	4798      	blx	r3
    newTransition->invalidate();
 8004270:	682b      	ldr	r3, [r5, #0]
 8004272:	4628      	mov	r0, r5
 8004274:	695b      	ldr	r3, [r3, #20]
}
 8004276:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800427a:	4718      	bx	r3
    model->bind(newPresenter);
 800427c:	4623      	mov	r3, r4
 800427e:	e7e2      	b.n	8004246 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004280:	0802bba4 	.word	0x0802bba4
 8004284:	0802c483 	.word	0x0802c483
 8004288:	0802bd40 	.word	0x0802bd40
 800428c:	0802bd87 	.word	0x0802bd87
 8004290:	0802be2a 	.word	0x0802be2a
 8004294:	20012ea4 	.word	0x20012ea4
 8004298:	20012ea0 	.word	0x20012ea0

0800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800429c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80042a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80042a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80042a6:	68a0      	ldr	r0, [r4, #8]
 80042a8:	6803      	ldr	r3, [r0, #0]
 80042aa:	6a1b      	ldr	r3, [r3, #32]
 80042ac:	4798      	blx	r3
 80042ae:	f241 035b 	movw	r3, #4187	; 0x105b
 80042b2:	4298      	cmp	r0, r3
 80042b4:	d805      	bhi.n	80042c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 80042b6:	4b42      	ldr	r3, [pc, #264]	; (80043c0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 80042b8:	4a42      	ldr	r2, [pc, #264]	; (80043c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80042ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042bc:	4842      	ldr	r0, [pc, #264]	; (80043c8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80042be:	f025 fde1 	bl	8029e84 <__assert_func>
 80042c2:	6860      	ldr	r0, [r4, #4]
 80042c4:	6803      	ldr	r3, [r0, #0]
 80042c6:	6a1b      	ldr	r3, [r3, #32]
 80042c8:	4798      	blx	r3
 80042ca:	280f      	cmp	r0, #15
 80042cc:	d803      	bhi.n	80042d6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80042ce:	4b3f      	ldr	r3, [pc, #252]	; (80043cc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80042d0:	4a3c      	ldr	r2, [pc, #240]	; (80043c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80042d2:	21a4      	movs	r1, #164	; 0xa4
 80042d4:	e7f2      	b.n	80042bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042d6:	68e0      	ldr	r0, [r4, #12]
 80042d8:	6803      	ldr	r3, [r0, #0]
 80042da:	6a1b      	ldr	r3, [r3, #32]
 80042dc:	4798      	blx	r3
 80042de:	2837      	cmp	r0, #55	; 0x37
 80042e0:	d803      	bhi.n	80042ea <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 80042e2:	4b3b      	ldr	r3, [pc, #236]	; (80043d0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80042e4:	4a37      	ldr	r2, [pc, #220]	; (80043c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80042e6:	21a5      	movs	r1, #165	; 0xa5
 80042e8:	e7e8      	b.n	80042bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80042ea:	f010 ff41 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80042f2:	3004      	adds	r0, #4
 80042f4:	f010 ffa2 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042f8:	f8d9 0000 	ldr.w	r0, [r9]
 80042fc:	b110      	cbz	r0, 8004304 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80042fe:	6803      	ldr	r3, [r0, #0]
 8004300:	68db      	ldr	r3, [r3, #12]
 8004302:	4798      	blx	r3
    if (*currentTrans)
 8004304:	f8d9 0000 	ldr.w	r0, [r9]
 8004308:	b110      	cbz	r0, 8004310 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800430a:	6803      	ldr	r3, [r0, #0]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	4798      	blx	r3
    if (*currentScreen)
 8004310:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80043d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004314:	f8d8 0000 	ldr.w	r0, [r8]
 8004318:	b110      	cbz	r0, 8004320 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800431a:	6803      	ldr	r3, [r0, #0]
 800431c:	695b      	ldr	r3, [r3, #20]
 800431e:	4798      	blx	r3
    if (*currentPresenter)
 8004320:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004324:	b110      	cbz	r0, 800432c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004326:	6803      	ldr	r3, [r0, #0]
 8004328:	685b      	ldr	r3, [r3, #4]
 800432a:	4798      	blx	r3
    if (*currentScreen)
 800432c:	f8d8 0000 	ldr.w	r0, [r8]
 8004330:	b110      	cbz	r0, 8004338 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	4798      	blx	r3
    if (*currentPresenter)
 8004338:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800433c:	b110      	cbz	r0, 8004344 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800433e:	6803      	ldr	r3, [r0, #0]
 8004340:	689b      	ldr	r3, [r3, #8]
 8004342:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004344:	68e0      	ldr	r0, [r4, #12]
 8004346:	2100      	movs	r1, #0
 8004348:	f7ff fed6 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800434c:	2114      	movs	r1, #20
 800434e:	4605      	mov	r5, r0
 8004350:	f7ff fed6 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004354:	68a0      	ldr	r0, [r4, #8]
 8004356:	6803      	ldr	r3, [r0, #0]
 8004358:	2100      	movs	r1, #0
 800435a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800435c:	4798      	blx	r3
 800435e:	4606      	mov	r6, r0
 8004360:	f003 ffe2 	bl	8008328 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004364:	6860      	ldr	r0, [r4, #4]
 8004366:	6803      	ldr	r3, [r0, #0]
 8004368:	2100      	movs	r1, #0
 800436a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800436c:	4798      	blx	r3
 800436e:	4631      	mov	r1, r6
 8004370:	4604      	mov	r4, r0
 8004372:	f003 ffb3 	bl	80082dc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004376:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800437a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800437e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004382:	b1dc      	cbz	r4, 80043bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004384:	1d23      	adds	r3, r4, #4
 8004386:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800438a:	6833      	ldr	r3, [r6, #0]
 800438c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004390:	4630      	mov	r0, r6
 8004392:	68db      	ldr	r3, [r3, #12]
 8004394:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004396:	4798      	blx	r3
    newPresenter->activate();
 8004398:	6823      	ldr	r3, [r4, #0]
 800439a:	4620      	mov	r0, r4
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80043a0:	4629      	mov	r1, r5
 80043a2:	4630      	mov	r0, r6
 80043a4:	f012 fd10 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043a8:	682b      	ldr	r3, [r5, #0]
 80043aa:	4628      	mov	r0, r5
 80043ac:	691b      	ldr	r3, [r3, #16]
 80043ae:	4798      	blx	r3
    newTransition->invalidate();
 80043b0:	682b      	ldr	r3, [r5, #0]
 80043b2:	4628      	mov	r0, r5
 80043b4:	695b      	ldr	r3, [r3, #20]
}
 80043b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043ba:	4718      	bx	r3
    model->bind(newPresenter);
 80043bc:	4623      	mov	r3, r4
 80043be:	e7e2      	b.n	8004386 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80043c0:	0802bba4 	.word	0x0802bba4
 80043c4:	0802c5a3 	.word	0x0802c5a3
 80043c8:	0802bd40 	.word	0x0802bd40
 80043cc:	0802bd87 	.word	0x0802bd87
 80043d0:	0802be2a 	.word	0x0802be2a
 80043d4:	20012ea4 	.word	0x20012ea4
 80043d8:	20012ea0 	.word	0x20012ea0

080043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80043dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80043e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043e6:	68a0      	ldr	r0, [r4, #8]
 80043e8:	6803      	ldr	r3, [r0, #0]
 80043ea:	6a1b      	ldr	r3, [r3, #32]
 80043ec:	4798      	blx	r3
 80043ee:	f241 035b 	movw	r3, #4187	; 0x105b
 80043f2:	4298      	cmp	r0, r3
 80043f4:	d805      	bhi.n	8004402 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80043f6:	4b42      	ldr	r3, [pc, #264]	; (8004500 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80043f8:	4a42      	ldr	r2, [pc, #264]	; (8004504 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80043fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043fc:	4842      	ldr	r0, [pc, #264]	; (8004508 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80043fe:	f025 fd41 	bl	8029e84 <__assert_func>
 8004402:	6860      	ldr	r0, [r4, #4]
 8004404:	6803      	ldr	r3, [r0, #0]
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	4798      	blx	r3
 800440a:	280f      	cmp	r0, #15
 800440c:	d803      	bhi.n	8004416 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800440e:	4b3f      	ldr	r3, [pc, #252]	; (800450c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004410:	4a3c      	ldr	r2, [pc, #240]	; (8004504 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004412:	21a4      	movs	r1, #164	; 0xa4
 8004414:	e7f2      	b.n	80043fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004416:	68e0      	ldr	r0, [r4, #12]
 8004418:	6803      	ldr	r3, [r0, #0]
 800441a:	6a1b      	ldr	r3, [r3, #32]
 800441c:	4798      	blx	r3
 800441e:	2837      	cmp	r0, #55	; 0x37
 8004420:	d803      	bhi.n	800442a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004422:	4b3b      	ldr	r3, [pc, #236]	; (8004510 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004424:	4a37      	ldr	r2, [pc, #220]	; (8004504 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004426:	21a5      	movs	r1, #165	; 0xa5
 8004428:	e7e8      	b.n	80043fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800442a:	f010 fea1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800442e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004514 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004432:	3004      	adds	r0, #4
 8004434:	f010 ff02 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004438:	f8d9 0000 	ldr.w	r0, [r9]
 800443c:	b110      	cbz	r0, 8004444 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	68db      	ldr	r3, [r3, #12]
 8004442:	4798      	blx	r3
    if (*currentTrans)
 8004444:	f8d9 0000 	ldr.w	r0, [r9]
 8004448:	b110      	cbz	r0, 8004450 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4798      	blx	r3
    if (*currentScreen)
 8004450:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004518 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004454:	f8d8 0000 	ldr.w	r0, [r8]
 8004458:	b110      	cbz	r0, 8004460 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800445a:	6803      	ldr	r3, [r0, #0]
 800445c:	695b      	ldr	r3, [r3, #20]
 800445e:	4798      	blx	r3
    if (*currentPresenter)
 8004460:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004464:	b110      	cbz	r0, 800446c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004466:	6803      	ldr	r3, [r0, #0]
 8004468:	685b      	ldr	r3, [r3, #4]
 800446a:	4798      	blx	r3
    if (*currentScreen)
 800446c:	f8d8 0000 	ldr.w	r0, [r8]
 8004470:	b110      	cbz	r0, 8004478 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004472:	6803      	ldr	r3, [r0, #0]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	4798      	blx	r3
    if (*currentPresenter)
 8004478:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800447c:	b110      	cbz	r0, 8004484 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800447e:	6803      	ldr	r3, [r0, #0]
 8004480:	689b      	ldr	r3, [r3, #8]
 8004482:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004484:	68e0      	ldr	r0, [r4, #12]
 8004486:	2100      	movs	r1, #0
 8004488:	f7ff fe36 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800448c:	2114      	movs	r1, #20
 800448e:	4605      	mov	r5, r0
 8004490:	f7ff fe36 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004494:	68a0      	ldr	r0, [r4, #8]
 8004496:	6803      	ldr	r3, [r0, #0]
 8004498:	2100      	movs	r1, #0
 800449a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800449c:	4798      	blx	r3
 800449e:	4606      	mov	r6, r0
 80044a0:	f003 ff84 	bl	80083ac <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044a4:	6860      	ldr	r0, [r4, #4]
 80044a6:	6803      	ldr	r3, [r0, #0]
 80044a8:	2100      	movs	r1, #0
 80044aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044ac:	4798      	blx	r3
 80044ae:	4631      	mov	r1, r6
 80044b0:	4604      	mov	r4, r0
 80044b2:	f003 ff55 	bl	8008360 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80044b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044c2:	b1dc      	cbz	r4, 80044fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80044c4:	1d23      	adds	r3, r4, #4
 80044c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044ca:	6833      	ldr	r3, [r6, #0]
 80044cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80044d0:	4630      	mov	r0, r6
 80044d2:	68db      	ldr	r3, [r3, #12]
 80044d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80044d6:	4798      	blx	r3
    newPresenter->activate();
 80044d8:	6823      	ldr	r3, [r4, #0]
 80044da:	4620      	mov	r0, r4
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044e0:	4629      	mov	r1, r5
 80044e2:	4630      	mov	r0, r6
 80044e4:	f012 fc70 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044e8:	682b      	ldr	r3, [r5, #0]
 80044ea:	4628      	mov	r0, r5
 80044ec:	691b      	ldr	r3, [r3, #16]
 80044ee:	4798      	blx	r3
    newTransition->invalidate();
 80044f0:	682b      	ldr	r3, [r5, #0]
 80044f2:	4628      	mov	r0, r5
 80044f4:	695b      	ldr	r3, [r3, #20]
}
 80044f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044fa:	4718      	bx	r3
    model->bind(newPresenter);
 80044fc:	4623      	mov	r3, r4
 80044fe:	e7e2      	b.n	80044c6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004500:	0802bba4 	.word	0x0802bba4
 8004504:	0802c6cb 	.word	0x0802c6cb
 8004508:	0802bd40 	.word	0x0802bd40
 800450c:	0802bd87 	.word	0x0802bd87
 8004510:	0802be2a 	.word	0x0802be2a
 8004514:	20012ea4 	.word	0x20012ea4
 8004518:	20012ea0 	.word	0x20012ea0

0800451c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 800451c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004520:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004524:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004526:	68a0      	ldr	r0, [r4, #8]
 8004528:	6803      	ldr	r3, [r0, #0]
 800452a:	6a1b      	ldr	r3, [r3, #32]
 800452c:	4798      	blx	r3
 800452e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004532:	d205      	bcs.n	8004540 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004534:	4b42      	ldr	r3, [pc, #264]	; (8004640 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8004536:	4a43      	ldr	r2, [pc, #268]	; (8004644 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004538:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800453a:	4843      	ldr	r0, [pc, #268]	; (8004648 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 800453c:	f025 fca2 	bl	8029e84 <__assert_func>
 8004540:	6860      	ldr	r0, [r4, #4]
 8004542:	6803      	ldr	r3, [r0, #0]
 8004544:	6a1b      	ldr	r3, [r3, #32]
 8004546:	4798      	blx	r3
 8004548:	280f      	cmp	r0, #15
 800454a:	d803      	bhi.n	8004554 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 800454c:	4b3f      	ldr	r3, [pc, #252]	; (800464c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 800454e:	4a3d      	ldr	r2, [pc, #244]	; (8004644 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004550:	21a4      	movs	r1, #164	; 0xa4
 8004552:	e7f2      	b.n	800453a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004554:	68e0      	ldr	r0, [r4, #12]
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	6a1b      	ldr	r3, [r3, #32]
 800455a:	4798      	blx	r3
 800455c:	2837      	cmp	r0, #55	; 0x37
 800455e:	d803      	bhi.n	8004568 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004560:	4b3b      	ldr	r3, [pc, #236]	; (8004650 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004562:	4a38      	ldr	r2, [pc, #224]	; (8004644 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004564:	21a5      	movs	r1, #165	; 0xa5
 8004566:	e7e8      	b.n	800453a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004568:	f010 fe02 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800456c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004654 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004570:	3004      	adds	r0, #4
 8004572:	f010 fe63 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004576:	f8d9 0000 	ldr.w	r0, [r9]
 800457a:	b110      	cbz	r0, 8004582 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800457c:	6803      	ldr	r3, [r0, #0]
 800457e:	68db      	ldr	r3, [r3, #12]
 8004580:	4798      	blx	r3
    if (*currentTrans)
 8004582:	f8d9 0000 	ldr.w	r0, [r9]
 8004586:	b110      	cbz	r0, 800458e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004588:	6803      	ldr	r3, [r0, #0]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	4798      	blx	r3
    if (*currentScreen)
 800458e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004658 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004592:	f8d8 0000 	ldr.w	r0, [r8]
 8004596:	b110      	cbz	r0, 800459e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	695b      	ldr	r3, [r3, #20]
 800459c:	4798      	blx	r3
    if (*currentPresenter)
 800459e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045a2:	b110      	cbz	r0, 80045aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80045a4:	6803      	ldr	r3, [r0, #0]
 80045a6:	685b      	ldr	r3, [r3, #4]
 80045a8:	4798      	blx	r3
    if (*currentScreen)
 80045aa:	f8d8 0000 	ldr.w	r0, [r8]
 80045ae:	b110      	cbz	r0, 80045b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80045b0:	6803      	ldr	r3, [r0, #0]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	4798      	blx	r3
    if (*currentPresenter)
 80045b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045ba:	b110      	cbz	r0, 80045c2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80045bc:	6803      	ldr	r3, [r0, #0]
 80045be:	689b      	ldr	r3, [r3, #8]
 80045c0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045c2:	68e0      	ldr	r0, [r4, #12]
 80045c4:	2100      	movs	r1, #0
 80045c6:	f7ff fd97 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80045ca:	2114      	movs	r1, #20
 80045cc:	4605      	mov	r5, r0
 80045ce:	f7ff fd97 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045d2:	68a0      	ldr	r0, [r4, #8]
 80045d4:	6803      	ldr	r3, [r0, #0]
 80045d6:	2100      	movs	r1, #0
 80045d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045da:	4798      	blx	r3
 80045dc:	4606      	mov	r6, r0
 80045de:	f003 fe49 	bl	8008274 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045e2:	6860      	ldr	r0, [r4, #4]
 80045e4:	6803      	ldr	r3, [r0, #0]
 80045e6:	2100      	movs	r1, #0
 80045e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ea:	4798      	blx	r3
 80045ec:	4631      	mov	r1, r6
 80045ee:	4604      	mov	r4, r0
 80045f0:	f003 fe1a 	bl	8008228 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80045f4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80045f8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045fc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004600:	b1dc      	cbz	r4, 800463a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004602:	1d23      	adds	r3, r4, #4
 8004604:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004608:	6833      	ldr	r3, [r6, #0]
 800460a:	f8c4 a008 	str.w	sl, [r4, #8]
 800460e:	4630      	mov	r0, r6
 8004610:	68db      	ldr	r3, [r3, #12]
 8004612:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004614:	4798      	blx	r3
    newPresenter->activate();
 8004616:	6823      	ldr	r3, [r4, #0]
 8004618:	4620      	mov	r0, r4
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800461e:	4629      	mov	r1, r5
 8004620:	4630      	mov	r0, r6
 8004622:	f012 fbd1 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004626:	682b      	ldr	r3, [r5, #0]
 8004628:	4628      	mov	r0, r5
 800462a:	691b      	ldr	r3, [r3, #16]
 800462c:	4798      	blx	r3
    newTransition->invalidate();
 800462e:	682b      	ldr	r3, [r5, #0]
 8004630:	4628      	mov	r0, r5
 8004632:	695b      	ldr	r3, [r3, #20]
}
 8004634:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004638:	4718      	bx	r3
    model->bind(newPresenter);
 800463a:	4623      	mov	r3, r4
 800463c:	e7e2      	b.n	8004604 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 800463e:	bf00      	nop
 8004640:	0802bba4 	.word	0x0802bba4
 8004644:	0802c7f1 	.word	0x0802c7f1
 8004648:	0802bd40 	.word	0x0802bd40
 800464c:	0802bd87 	.word	0x0802bd87
 8004650:	0802be2a 	.word	0x0802be2a
 8004654:	20012ea4 	.word	0x20012ea4
 8004658:	20012ea0 	.word	0x20012ea0

0800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800465c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004660:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004664:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004666:	68a0      	ldr	r0, [r4, #8]
 8004668:	6803      	ldr	r3, [r0, #0]
 800466a:	6a1b      	ldr	r3, [r3, #32]
 800466c:	4798      	blx	r3
 800466e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004672:	4298      	cmp	r0, r3
 8004674:	d805      	bhi.n	8004682 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004676:	4b42      	ldr	r3, [pc, #264]	; (8004780 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004678:	4a42      	ldr	r2, [pc, #264]	; (8004784 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800467a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800467c:	4842      	ldr	r0, [pc, #264]	; (8004788 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800467e:	f025 fc01 	bl	8029e84 <__assert_func>
 8004682:	6860      	ldr	r0, [r4, #4]
 8004684:	6803      	ldr	r3, [r0, #0]
 8004686:	6a1b      	ldr	r3, [r3, #32]
 8004688:	4798      	blx	r3
 800468a:	280f      	cmp	r0, #15
 800468c:	d803      	bhi.n	8004696 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800468e:	4b3f      	ldr	r3, [pc, #252]	; (800478c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004690:	4a3c      	ldr	r2, [pc, #240]	; (8004784 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004692:	21a4      	movs	r1, #164	; 0xa4
 8004694:	e7f2      	b.n	800467c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004696:	68e0      	ldr	r0, [r4, #12]
 8004698:	6803      	ldr	r3, [r0, #0]
 800469a:	6a1b      	ldr	r3, [r3, #32]
 800469c:	4798      	blx	r3
 800469e:	2837      	cmp	r0, #55	; 0x37
 80046a0:	d803      	bhi.n	80046aa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80046a2:	4b3b      	ldr	r3, [pc, #236]	; (8004790 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80046a4:	4a37      	ldr	r2, [pc, #220]	; (8004784 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80046a6:	21a5      	movs	r1, #165	; 0xa5
 80046a8:	e7e8      	b.n	800467c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046aa:	f010 fd61 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004794 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80046b2:	3004      	adds	r0, #4
 80046b4:	f010 fdc2 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046b8:	f8d9 0000 	ldr.w	r0, [r9]
 80046bc:	b110      	cbz	r0, 80046c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80046be:	6803      	ldr	r3, [r0, #0]
 80046c0:	68db      	ldr	r3, [r3, #12]
 80046c2:	4798      	blx	r3
    if (*currentTrans)
 80046c4:	f8d9 0000 	ldr.w	r0, [r9]
 80046c8:	b110      	cbz	r0, 80046d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80046ca:	6803      	ldr	r3, [r0, #0]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	4798      	blx	r3
    if (*currentScreen)
 80046d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004798 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80046d4:	f8d8 0000 	ldr.w	r0, [r8]
 80046d8:	b110      	cbz	r0, 80046e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80046da:	6803      	ldr	r3, [r0, #0]
 80046dc:	695b      	ldr	r3, [r3, #20]
 80046de:	4798      	blx	r3
    if (*currentPresenter)
 80046e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046e4:	b110      	cbz	r0, 80046ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80046e6:	6803      	ldr	r3, [r0, #0]
 80046e8:	685b      	ldr	r3, [r3, #4]
 80046ea:	4798      	blx	r3
    if (*currentScreen)
 80046ec:	f8d8 0000 	ldr.w	r0, [r8]
 80046f0:	b110      	cbz	r0, 80046f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80046f2:	6803      	ldr	r3, [r0, #0]
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	4798      	blx	r3
    if (*currentPresenter)
 80046f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046fc:	b110      	cbz	r0, 8004704 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80046fe:	6803      	ldr	r3, [r0, #0]
 8004700:	689b      	ldr	r3, [r3, #8]
 8004702:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004704:	68e0      	ldr	r0, [r4, #12]
 8004706:	2100      	movs	r1, #0
 8004708:	f7ff fcf6 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800470c:	2114      	movs	r1, #20
 800470e:	4605      	mov	r5, r0
 8004710:	f7ff fcf6 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004714:	68a0      	ldr	r0, [r4, #8]
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	2100      	movs	r1, #0
 800471a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800471c:	4798      	blx	r3
 800471e:	4606      	mov	r6, r0
 8004720:	f004 f828 	bl	8008774 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004724:	6860      	ldr	r0, [r4, #4]
 8004726:	6803      	ldr	r3, [r0, #0]
 8004728:	2100      	movs	r1, #0
 800472a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800472c:	4798      	blx	r3
 800472e:	4631      	mov	r1, r6
 8004730:	4604      	mov	r4, r0
 8004732:	f003 fff9 	bl	8008728 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004736:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800473a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800473e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004742:	b1dc      	cbz	r4, 800477c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004744:	1d23      	adds	r3, r4, #4
 8004746:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800474a:	6833      	ldr	r3, [r6, #0]
 800474c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004750:	4630      	mov	r0, r6
 8004752:	68db      	ldr	r3, [r3, #12]
 8004754:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004756:	4798      	blx	r3
    newPresenter->activate();
 8004758:	6823      	ldr	r3, [r4, #0]
 800475a:	4620      	mov	r0, r4
 800475c:	681b      	ldr	r3, [r3, #0]
 800475e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004760:	4629      	mov	r1, r5
 8004762:	4630      	mov	r0, r6
 8004764:	f012 fb30 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004768:	682b      	ldr	r3, [r5, #0]
 800476a:	4628      	mov	r0, r5
 800476c:	691b      	ldr	r3, [r3, #16]
 800476e:	4798      	blx	r3
    newTransition->invalidate();
 8004770:	682b      	ldr	r3, [r5, #0]
 8004772:	4628      	mov	r0, r5
 8004774:	695b      	ldr	r3, [r3, #20]
}
 8004776:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800477a:	4718      	bx	r3
    model->bind(newPresenter);
 800477c:	4623      	mov	r3, r4
 800477e:	e7e2      	b.n	8004746 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004780:	0802bba4 	.word	0x0802bba4
 8004784:	0802c90f 	.word	0x0802c90f
 8004788:	0802bd40 	.word	0x0802bd40
 800478c:	0802bd87 	.word	0x0802bd87
 8004790:	0802be2a 	.word	0x0802be2a
 8004794:	20012ea4 	.word	0x20012ea4
 8004798:	20012ea0 	.word	0x20012ea0

0800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800479c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047a6:	68a0      	ldr	r0, [r4, #8]
 80047a8:	6803      	ldr	r3, [r0, #0]
 80047aa:	6a1b      	ldr	r3, [r3, #32]
 80047ac:	4798      	blx	r3
 80047ae:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80047b2:	4298      	cmp	r0, r3
 80047b4:	d805      	bhi.n	80047c2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80047b6:	4b42      	ldr	r3, [pc, #264]	; (80048c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80047b8:	4a42      	ldr	r2, [pc, #264]	; (80048c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047bc:	4842      	ldr	r0, [pc, #264]	; (80048c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80047be:	f025 fb61 	bl	8029e84 <__assert_func>
 80047c2:	6860      	ldr	r0, [r4, #4]
 80047c4:	6803      	ldr	r3, [r0, #0]
 80047c6:	6a1b      	ldr	r3, [r3, #32]
 80047c8:	4798      	blx	r3
 80047ca:	280f      	cmp	r0, #15
 80047cc:	d803      	bhi.n	80047d6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80047ce:	4b3f      	ldr	r3, [pc, #252]	; (80048cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80047d0:	4a3c      	ldr	r2, [pc, #240]	; (80048c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047d2:	21a4      	movs	r1, #164	; 0xa4
 80047d4:	e7f2      	b.n	80047bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047d6:	68e0      	ldr	r0, [r4, #12]
 80047d8:	6803      	ldr	r3, [r0, #0]
 80047da:	6a1b      	ldr	r3, [r3, #32]
 80047dc:	4798      	blx	r3
 80047de:	2837      	cmp	r0, #55	; 0x37
 80047e0:	d803      	bhi.n	80047ea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80047e2:	4b3b      	ldr	r3, [pc, #236]	; (80048d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80047e4:	4a37      	ldr	r2, [pc, #220]	; (80048c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047e6:	21a5      	movs	r1, #165	; 0xa5
 80047e8:	e7e8      	b.n	80047bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80047ea:	f010 fcc1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80048d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80047f2:	3004      	adds	r0, #4
 80047f4:	f010 fd22 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047f8:	f8d9 0000 	ldr.w	r0, [r9]
 80047fc:	b110      	cbz	r0, 8004804 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80047fe:	6803      	ldr	r3, [r0, #0]
 8004800:	68db      	ldr	r3, [r3, #12]
 8004802:	4798      	blx	r3
    if (*currentTrans)
 8004804:	f8d9 0000 	ldr.w	r0, [r9]
 8004808:	b110      	cbz	r0, 8004810 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800480a:	6803      	ldr	r3, [r0, #0]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	4798      	blx	r3
    if (*currentScreen)
 8004810:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80048d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004814:	f8d8 0000 	ldr.w	r0, [r8]
 8004818:	b110      	cbz	r0, 8004820 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800481a:	6803      	ldr	r3, [r0, #0]
 800481c:	695b      	ldr	r3, [r3, #20]
 800481e:	4798      	blx	r3
    if (*currentPresenter)
 8004820:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004824:	b110      	cbz	r0, 800482c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004826:	6803      	ldr	r3, [r0, #0]
 8004828:	685b      	ldr	r3, [r3, #4]
 800482a:	4798      	blx	r3
    if (*currentScreen)
 800482c:	f8d8 0000 	ldr.w	r0, [r8]
 8004830:	b110      	cbz	r0, 8004838 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004832:	6803      	ldr	r3, [r0, #0]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	4798      	blx	r3
    if (*currentPresenter)
 8004838:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800483c:	b110      	cbz	r0, 8004844 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800483e:	6803      	ldr	r3, [r0, #0]
 8004840:	689b      	ldr	r3, [r3, #8]
 8004842:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004844:	68e0      	ldr	r0, [r4, #12]
 8004846:	2100      	movs	r1, #0
 8004848:	f7ff fc56 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800484c:	2114      	movs	r1, #20
 800484e:	4605      	mov	r5, r0
 8004850:	f7ff fc56 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004854:	68a0      	ldr	r0, [r4, #8]
 8004856:	6803      	ldr	r3, [r0, #0]
 8004858:	2100      	movs	r1, #0
 800485a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800485c:	4798      	blx	r3
 800485e:	4606      	mov	r6, r0
 8004860:	f003 ff46 	bl	80086f0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004864:	6860      	ldr	r0, [r4, #4]
 8004866:	6803      	ldr	r3, [r0, #0]
 8004868:	2100      	movs	r1, #0
 800486a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800486c:	4798      	blx	r3
 800486e:	4631      	mov	r1, r6
 8004870:	4604      	mov	r4, r0
 8004872:	f003 ff17 	bl	80086a4 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8004876:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800487a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800487e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004882:	b1dc      	cbz	r4, 80048bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004884:	1d23      	adds	r3, r4, #4
 8004886:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800488a:	6833      	ldr	r3, [r6, #0]
 800488c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004890:	4630      	mov	r0, r6
 8004892:	68db      	ldr	r3, [r3, #12]
 8004894:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004896:	4798      	blx	r3
    newPresenter->activate();
 8004898:	6823      	ldr	r3, [r4, #0]
 800489a:	4620      	mov	r0, r4
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048a0:	4629      	mov	r1, r5
 80048a2:	4630      	mov	r0, r6
 80048a4:	f012 fa90 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048a8:	682b      	ldr	r3, [r5, #0]
 80048aa:	4628      	mov	r0, r5
 80048ac:	691b      	ldr	r3, [r3, #16]
 80048ae:	4798      	blx	r3
    newTransition->invalidate();
 80048b0:	682b      	ldr	r3, [r5, #0]
 80048b2:	4628      	mov	r0, r5
 80048b4:	695b      	ldr	r3, [r3, #20]
}
 80048b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048ba:	4718      	bx	r3
    model->bind(newPresenter);
 80048bc:	4623      	mov	r3, r4
 80048be:	e7e2      	b.n	8004886 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80048c0:	0802bba4 	.word	0x0802bba4
 80048c4:	0802ca53 	.word	0x0802ca53
 80048c8:	0802bd40 	.word	0x0802bd40
 80048cc:	0802bd87 	.word	0x0802bd87
 80048d0:	0802be2a 	.word	0x0802be2a
 80048d4:	20012ea4 	.word	0x20012ea4
 80048d8:	20012ea0 	.word	0x20012ea0

080048dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80048dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80048e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048e6:	68a0      	ldr	r0, [r4, #8]
 80048e8:	6803      	ldr	r3, [r0, #0]
 80048ea:	6a1b      	ldr	r3, [r3, #32]
 80048ec:	4798      	blx	r3
 80048ee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80048f2:	d205      	bcs.n	8004900 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80048f4:	4b42      	ldr	r3, [pc, #264]	; (8004a00 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80048f6:	4a43      	ldr	r2, [pc, #268]	; (8004a04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80048f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048fa:	4843      	ldr	r0, [pc, #268]	; (8004a08 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80048fc:	f025 fac2 	bl	8029e84 <__assert_func>
 8004900:	6860      	ldr	r0, [r4, #4]
 8004902:	6803      	ldr	r3, [r0, #0]
 8004904:	6a1b      	ldr	r3, [r3, #32]
 8004906:	4798      	blx	r3
 8004908:	280f      	cmp	r0, #15
 800490a:	d803      	bhi.n	8004914 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800490c:	4b3f      	ldr	r3, [pc, #252]	; (8004a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800490e:	4a3d      	ldr	r2, [pc, #244]	; (8004a04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004910:	21a4      	movs	r1, #164	; 0xa4
 8004912:	e7f2      	b.n	80048fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004914:	68e0      	ldr	r0, [r4, #12]
 8004916:	6803      	ldr	r3, [r0, #0]
 8004918:	6a1b      	ldr	r3, [r3, #32]
 800491a:	4798      	blx	r3
 800491c:	2837      	cmp	r0, #55	; 0x37
 800491e:	d803      	bhi.n	8004928 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004920:	4b3b      	ldr	r3, [pc, #236]	; (8004a10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004922:	4a38      	ldr	r2, [pc, #224]	; (8004a04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004924:	21a5      	movs	r1, #165	; 0xa5
 8004926:	e7e8      	b.n	80048fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004928:	f010 fc22 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800492c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004930:	3004      	adds	r0, #4
 8004932:	f010 fc83 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004936:	f8d9 0000 	ldr.w	r0, [r9]
 800493a:	b110      	cbz	r0, 8004942 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800493c:	6803      	ldr	r3, [r0, #0]
 800493e:	68db      	ldr	r3, [r3, #12]
 8004940:	4798      	blx	r3
    if (*currentTrans)
 8004942:	f8d9 0000 	ldr.w	r0, [r9]
 8004946:	b110      	cbz	r0, 800494e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004948:	6803      	ldr	r3, [r0, #0]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	4798      	blx	r3
    if (*currentScreen)
 800494e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004952:	f8d8 0000 	ldr.w	r0, [r8]
 8004956:	b110      	cbz	r0, 800495e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004958:	6803      	ldr	r3, [r0, #0]
 800495a:	695b      	ldr	r3, [r3, #20]
 800495c:	4798      	blx	r3
    if (*currentPresenter)
 800495e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004962:	b110      	cbz	r0, 800496a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004964:	6803      	ldr	r3, [r0, #0]
 8004966:	685b      	ldr	r3, [r3, #4]
 8004968:	4798      	blx	r3
    if (*currentScreen)
 800496a:	f8d8 0000 	ldr.w	r0, [r8]
 800496e:	b110      	cbz	r0, 8004976 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004970:	6803      	ldr	r3, [r0, #0]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	4798      	blx	r3
    if (*currentPresenter)
 8004976:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800497a:	b110      	cbz	r0, 8004982 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800497c:	6803      	ldr	r3, [r0, #0]
 800497e:	689b      	ldr	r3, [r3, #8]
 8004980:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004982:	68e0      	ldr	r0, [r4, #12]
 8004984:	2100      	movs	r1, #0
 8004986:	f7ff fbb7 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800498a:	2114      	movs	r1, #20
 800498c:	4605      	mov	r5, r0
 800498e:	f7ff fbb7 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004992:	68a0      	ldr	r0, [r4, #8]
 8004994:	6803      	ldr	r3, [r0, #0]
 8004996:	2100      	movs	r1, #0
 8004998:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800499a:	4798      	blx	r3
 800499c:	4606      	mov	r6, r0
 800499e:	f003 fe4d 	bl	800863c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049a2:	6860      	ldr	r0, [r4, #4]
 80049a4:	6803      	ldr	r3, [r0, #0]
 80049a6:	2100      	movs	r1, #0
 80049a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049aa:	4798      	blx	r3
 80049ac:	4631      	mov	r1, r6
 80049ae:	4604      	mov	r4, r0
 80049b0:	f003 fe1e 	bl	80085f0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80049b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049c0:	b1dc      	cbz	r4, 80049fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80049c2:	1d23      	adds	r3, r4, #4
 80049c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049c8:	6833      	ldr	r3, [r6, #0]
 80049ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80049ce:	4630      	mov	r0, r6
 80049d0:	68db      	ldr	r3, [r3, #12]
 80049d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049d4:	4798      	blx	r3
    newPresenter->activate();
 80049d6:	6823      	ldr	r3, [r4, #0]
 80049d8:	4620      	mov	r0, r4
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049de:	4629      	mov	r1, r5
 80049e0:	4630      	mov	r0, r6
 80049e2:	f012 f9f1 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049e6:	682b      	ldr	r3, [r5, #0]
 80049e8:	4628      	mov	r0, r5
 80049ea:	691b      	ldr	r3, [r3, #16]
 80049ec:	4798      	blx	r3
    newTransition->invalidate();
 80049ee:	682b      	ldr	r3, [r5, #0]
 80049f0:	4628      	mov	r0, r5
 80049f2:	695b      	ldr	r3, [r3, #20]
}
 80049f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049f8:	4718      	bx	r3
    model->bind(newPresenter);
 80049fa:	4623      	mov	r3, r4
 80049fc:	e7e2      	b.n	80049c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80049fe:	bf00      	nop
 8004a00:	0802bba4 	.word	0x0802bba4
 8004a04:	0802cb93 	.word	0x0802cb93
 8004a08:	0802bd40 	.word	0x0802bd40
 8004a0c:	0802bd87 	.word	0x0802bd87
 8004a10:	0802be2a 	.word	0x0802be2a
 8004a14:	20012ea4 	.word	0x20012ea4
 8004a18:	20012ea0 	.word	0x20012ea0

08004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004a1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a26:	68a0      	ldr	r0, [r4, #8]
 8004a28:	6803      	ldr	r3, [r0, #0]
 8004a2a:	6a1b      	ldr	r3, [r3, #32]
 8004a2c:	4798      	blx	r3
 8004a2e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004a32:	4298      	cmp	r0, r3
 8004a34:	d805      	bhi.n	8004a42 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004a36:	4b42      	ldr	r3, [pc, #264]	; (8004b40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004a38:	4a42      	ldr	r2, [pc, #264]	; (8004b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a3a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a3c:	4842      	ldr	r0, [pc, #264]	; (8004b48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004a3e:	f025 fa21 	bl	8029e84 <__assert_func>
 8004a42:	6860      	ldr	r0, [r4, #4]
 8004a44:	6803      	ldr	r3, [r0, #0]
 8004a46:	6a1b      	ldr	r3, [r3, #32]
 8004a48:	4798      	blx	r3
 8004a4a:	280f      	cmp	r0, #15
 8004a4c:	d803      	bhi.n	8004a56 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004a4e:	4b3f      	ldr	r3, [pc, #252]	; (8004b4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004a50:	4a3c      	ldr	r2, [pc, #240]	; (8004b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a52:	21a4      	movs	r1, #164	; 0xa4
 8004a54:	e7f2      	b.n	8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a56:	68e0      	ldr	r0, [r4, #12]
 8004a58:	6803      	ldr	r3, [r0, #0]
 8004a5a:	6a1b      	ldr	r3, [r3, #32]
 8004a5c:	4798      	blx	r3
 8004a5e:	2837      	cmp	r0, #55	; 0x37
 8004a60:	d803      	bhi.n	8004a6a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004a62:	4b3b      	ldr	r3, [pc, #236]	; (8004b50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004a64:	4a37      	ldr	r2, [pc, #220]	; (8004b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a66:	21a5      	movs	r1, #165	; 0xa5
 8004a68:	e7e8      	b.n	8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a6a:	f010 fb81 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a6e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004a72:	3004      	adds	r0, #4
 8004a74:	f010 fbe2 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a78:	f8d9 0000 	ldr.w	r0, [r9]
 8004a7c:	b110      	cbz	r0, 8004a84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a7e:	6803      	ldr	r3, [r0, #0]
 8004a80:	68db      	ldr	r3, [r3, #12]
 8004a82:	4798      	blx	r3
    if (*currentTrans)
 8004a84:	f8d9 0000 	ldr.w	r0, [r9]
 8004a88:	b110      	cbz	r0, 8004a90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a8a:	6803      	ldr	r3, [r0, #0]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	4798      	blx	r3
    if (*currentScreen)
 8004a90:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004a94:	f8d8 0000 	ldr.w	r0, [r8]
 8004a98:	b110      	cbz	r0, 8004aa0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a9a:	6803      	ldr	r3, [r0, #0]
 8004a9c:	695b      	ldr	r3, [r3, #20]
 8004a9e:	4798      	blx	r3
    if (*currentPresenter)
 8004aa0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004aa4:	b110      	cbz	r0, 8004aac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004aa6:	6803      	ldr	r3, [r0, #0]
 8004aa8:	685b      	ldr	r3, [r3, #4]
 8004aaa:	4798      	blx	r3
    if (*currentScreen)
 8004aac:	f8d8 0000 	ldr.w	r0, [r8]
 8004ab0:	b110      	cbz	r0, 8004ab8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ab2:	6803      	ldr	r3, [r0, #0]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	4798      	blx	r3
    if (*currentPresenter)
 8004ab8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004abc:	b110      	cbz	r0, 8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004abe:	6803      	ldr	r3, [r0, #0]
 8004ac0:	689b      	ldr	r3, [r3, #8]
 8004ac2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ac4:	68e0      	ldr	r0, [r4, #12]
 8004ac6:	2100      	movs	r1, #0
 8004ac8:	f7ff fb16 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004acc:	2114      	movs	r1, #20
 8004ace:	4605      	mov	r5, r0
 8004ad0:	f7ff fb16 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ad4:	68a0      	ldr	r0, [r4, #8]
 8004ad6:	6803      	ldr	r3, [r0, #0]
 8004ad8:	2100      	movs	r1, #0
 8004ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004adc:	4798      	blx	r3
 8004ade:	4606      	mov	r6, r0
 8004ae0:	f003 ff80 	bl	80089e4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ae4:	6860      	ldr	r0, [r4, #4]
 8004ae6:	6803      	ldr	r3, [r0, #0]
 8004ae8:	2100      	movs	r1, #0
 8004aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004aec:	4798      	blx	r3
 8004aee:	4631      	mov	r1, r6
 8004af0:	4604      	mov	r4, r0
 8004af2:	f003 ff51 	bl	8008998 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004af6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004afa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004afe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b02:	b1dc      	cbz	r4, 8004b3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004b04:	1d23      	adds	r3, r4, #4
 8004b06:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b0a:	6833      	ldr	r3, [r6, #0]
 8004b0c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b10:	4630      	mov	r0, r6
 8004b12:	68db      	ldr	r3, [r3, #12]
 8004b14:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b16:	4798      	blx	r3
    newPresenter->activate();
 8004b18:	6823      	ldr	r3, [r4, #0]
 8004b1a:	4620      	mov	r0, r4
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b20:	4629      	mov	r1, r5
 8004b22:	4630      	mov	r0, r6
 8004b24:	f012 f950 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b28:	682b      	ldr	r3, [r5, #0]
 8004b2a:	4628      	mov	r0, r5
 8004b2c:	691b      	ldr	r3, [r3, #16]
 8004b2e:	4798      	blx	r3
    newTransition->invalidate();
 8004b30:	682b      	ldr	r3, [r5, #0]
 8004b32:	4628      	mov	r0, r5
 8004b34:	695b      	ldr	r3, [r3, #20]
}
 8004b36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b3a:	4718      	bx	r3
    model->bind(newPresenter);
 8004b3c:	4623      	mov	r3, r4
 8004b3e:	e7e2      	b.n	8004b06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004b40:	0802bba4 	.word	0x0802bba4
 8004b44:	0802ccc3 	.word	0x0802ccc3
 8004b48:	0802bd40 	.word	0x0802bd40
 8004b4c:	0802bd87 	.word	0x0802bd87
 8004b50:	0802be2a 	.word	0x0802be2a
 8004b54:	20012ea4 	.word	0x20012ea4
 8004b58:	20012ea0 	.word	0x20012ea0

08004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b66:	68a0      	ldr	r0, [r4, #8]
 8004b68:	6803      	ldr	r3, [r0, #0]
 8004b6a:	6a1b      	ldr	r3, [r3, #32]
 8004b6c:	4798      	blx	r3
 8004b6e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004b72:	4298      	cmp	r0, r3
 8004b74:	d805      	bhi.n	8004b82 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004b76:	4b42      	ldr	r3, [pc, #264]	; (8004c80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004b78:	4a42      	ldr	r2, [pc, #264]	; (8004c84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b7a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b7c:	4842      	ldr	r0, [pc, #264]	; (8004c88 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004b7e:	f025 f981 	bl	8029e84 <__assert_func>
 8004b82:	6860      	ldr	r0, [r4, #4]
 8004b84:	6803      	ldr	r3, [r0, #0]
 8004b86:	6a1b      	ldr	r3, [r3, #32]
 8004b88:	4798      	blx	r3
 8004b8a:	280f      	cmp	r0, #15
 8004b8c:	d803      	bhi.n	8004b96 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004b8e:	4b3f      	ldr	r3, [pc, #252]	; (8004c8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004b90:	4a3c      	ldr	r2, [pc, #240]	; (8004c84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b92:	21a4      	movs	r1, #164	; 0xa4
 8004b94:	e7f2      	b.n	8004b7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b96:	68e0      	ldr	r0, [r4, #12]
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	6a1b      	ldr	r3, [r3, #32]
 8004b9c:	4798      	blx	r3
 8004b9e:	2837      	cmp	r0, #55	; 0x37
 8004ba0:	d803      	bhi.n	8004baa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004ba2:	4b3b      	ldr	r3, [pc, #236]	; (8004c90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004ba4:	4a37      	ldr	r2, [pc, #220]	; (8004c84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004ba6:	21a5      	movs	r1, #165	; 0xa5
 8004ba8:	e7e8      	b.n	8004b7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004baa:	f010 fae1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c94 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004bb2:	3004      	adds	r0, #4
 8004bb4:	f010 fb42 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bb8:	f8d9 0000 	ldr.w	r0, [r9]
 8004bbc:	b110      	cbz	r0, 8004bc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004bbe:	6803      	ldr	r3, [r0, #0]
 8004bc0:	68db      	ldr	r3, [r3, #12]
 8004bc2:	4798      	blx	r3
    if (*currentTrans)
 8004bc4:	f8d9 0000 	ldr.w	r0, [r9]
 8004bc8:	b110      	cbz	r0, 8004bd0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004bca:	6803      	ldr	r3, [r0, #0]
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	4798      	blx	r3
    if (*currentScreen)
 8004bd0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004bd4:	f8d8 0000 	ldr.w	r0, [r8]
 8004bd8:	b110      	cbz	r0, 8004be0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004bda:	6803      	ldr	r3, [r0, #0]
 8004bdc:	695b      	ldr	r3, [r3, #20]
 8004bde:	4798      	blx	r3
    if (*currentPresenter)
 8004be0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004be4:	b110      	cbz	r0, 8004bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004be6:	6803      	ldr	r3, [r0, #0]
 8004be8:	685b      	ldr	r3, [r3, #4]
 8004bea:	4798      	blx	r3
    if (*currentScreen)
 8004bec:	f8d8 0000 	ldr.w	r0, [r8]
 8004bf0:	b110      	cbz	r0, 8004bf8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004bf2:	6803      	ldr	r3, [r0, #0]
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	4798      	blx	r3
    if (*currentPresenter)
 8004bf8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bfc:	b110      	cbz	r0, 8004c04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004bfe:	6803      	ldr	r3, [r0, #0]
 8004c00:	689b      	ldr	r3, [r3, #8]
 8004c02:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c04:	68e0      	ldr	r0, [r4, #12]
 8004c06:	2100      	movs	r1, #0
 8004c08:	f7ff fa76 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c0c:	2114      	movs	r1, #20
 8004c0e:	4605      	mov	r5, r0
 8004c10:	f7ff fa76 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c14:	68a0      	ldr	r0, [r4, #8]
 8004c16:	6803      	ldr	r3, [r0, #0]
 8004c18:	2100      	movs	r1, #0
 8004c1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c1c:	4798      	blx	r3
 8004c1e:	4606      	mov	r6, r0
 8004c20:	f003 fe4a 	bl	80088b8 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c24:	6860      	ldr	r0, [r4, #4]
 8004c26:	6803      	ldr	r3, [r0, #0]
 8004c28:	2100      	movs	r1, #0
 8004c2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c2c:	4798      	blx	r3
 8004c2e:	4631      	mov	r1, r6
 8004c30:	4604      	mov	r4, r0
 8004c32:	f003 fe1b 	bl	800886c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004c36:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c3a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c3e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c42:	b1dc      	cbz	r4, 8004c7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004c44:	1d23      	adds	r3, r4, #4
 8004c46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c4a:	6833      	ldr	r3, [r6, #0]
 8004c4c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c50:	4630      	mov	r0, r6
 8004c52:	68db      	ldr	r3, [r3, #12]
 8004c54:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c56:	4798      	blx	r3
    newPresenter->activate();
 8004c58:	6823      	ldr	r3, [r4, #0]
 8004c5a:	4620      	mov	r0, r4
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c60:	4629      	mov	r1, r5
 8004c62:	4630      	mov	r0, r6
 8004c64:	f012 f8b0 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c68:	682b      	ldr	r3, [r5, #0]
 8004c6a:	4628      	mov	r0, r5
 8004c6c:	691b      	ldr	r3, [r3, #16]
 8004c6e:	4798      	blx	r3
    newTransition->invalidate();
 8004c70:	682b      	ldr	r3, [r5, #0]
 8004c72:	4628      	mov	r0, r5
 8004c74:	695b      	ldr	r3, [r3, #20]
}
 8004c76:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c7a:	4718      	bx	r3
    model->bind(newPresenter);
 8004c7c:	4623      	mov	r3, r4
 8004c7e:	e7e2      	b.n	8004c46 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004c80:	0802bba4 	.word	0x0802bba4
 8004c84:	0802ce05 	.word	0x0802ce05
 8004c88:	0802bd40 	.word	0x0802bd40
 8004c8c:	0802bd87 	.word	0x0802bd87
 8004c90:	0802be2a 	.word	0x0802be2a
 8004c94:	20012ea4 	.word	0x20012ea4
 8004c98:	20012ea0 	.word	0x20012ea0

08004c9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ca0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ca4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ca6:	68a0      	ldr	r0, [r4, #8]
 8004ca8:	6803      	ldr	r3, [r0, #0]
 8004caa:	6a1b      	ldr	r3, [r3, #32]
 8004cac:	4798      	blx	r3
 8004cae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004cb2:	d205      	bcs.n	8004cc0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004cb4:	4b42      	ldr	r3, [pc, #264]	; (8004dc0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004cb6:	4a43      	ldr	r2, [pc, #268]	; (8004dc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004cb8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cba:	4843      	ldr	r0, [pc, #268]	; (8004dc8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004cbc:	f025 f8e2 	bl	8029e84 <__assert_func>
 8004cc0:	6860      	ldr	r0, [r4, #4]
 8004cc2:	6803      	ldr	r3, [r0, #0]
 8004cc4:	6a1b      	ldr	r3, [r3, #32]
 8004cc6:	4798      	blx	r3
 8004cc8:	280f      	cmp	r0, #15
 8004cca:	d803      	bhi.n	8004cd4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004ccc:	4b3f      	ldr	r3, [pc, #252]	; (8004dcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004cce:	4a3d      	ldr	r2, [pc, #244]	; (8004dc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004cd0:	21a4      	movs	r1, #164	; 0xa4
 8004cd2:	e7f2      	b.n	8004cba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cd4:	68e0      	ldr	r0, [r4, #12]
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	6a1b      	ldr	r3, [r3, #32]
 8004cda:	4798      	blx	r3
 8004cdc:	2837      	cmp	r0, #55	; 0x37
 8004cde:	d803      	bhi.n	8004ce8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004ce0:	4b3b      	ldr	r3, [pc, #236]	; (8004dd0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004ce2:	4a38      	ldr	r2, [pc, #224]	; (8004dc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004ce4:	21a5      	movs	r1, #165	; 0xa5
 8004ce6:	e7e8      	b.n	8004cba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ce8:	f010 fa42 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004cec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004dd4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004cf0:	3004      	adds	r0, #4
 8004cf2:	f010 faa3 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004cf6:	f8d9 0000 	ldr.w	r0, [r9]
 8004cfa:	b110      	cbz	r0, 8004d02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	68db      	ldr	r3, [r3, #12]
 8004d00:	4798      	blx	r3
    if (*currentTrans)
 8004d02:	f8d9 0000 	ldr.w	r0, [r9]
 8004d06:	b110      	cbz	r0, 8004d0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d08:	6803      	ldr	r3, [r0, #0]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	4798      	blx	r3
    if (*currentScreen)
 8004d0e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004dd8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004d12:	f8d8 0000 	ldr.w	r0, [r8]
 8004d16:	b110      	cbz	r0, 8004d1e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d18:	6803      	ldr	r3, [r0, #0]
 8004d1a:	695b      	ldr	r3, [r3, #20]
 8004d1c:	4798      	blx	r3
    if (*currentPresenter)
 8004d1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d22:	b110      	cbz	r0, 8004d2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d24:	6803      	ldr	r3, [r0, #0]
 8004d26:	685b      	ldr	r3, [r3, #4]
 8004d28:	4798      	blx	r3
    if (*currentScreen)
 8004d2a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d2e:	b110      	cbz	r0, 8004d36 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d30:	6803      	ldr	r3, [r0, #0]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	4798      	blx	r3
    if (*currentPresenter)
 8004d36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d3a:	b110      	cbz	r0, 8004d42 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d3c:	6803      	ldr	r3, [r0, #0]
 8004d3e:	689b      	ldr	r3, [r3, #8]
 8004d40:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d42:	68e0      	ldr	r0, [r4, #12]
 8004d44:	2100      	movs	r1, #0
 8004d46:	f7ff f9d7 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d4a:	2114      	movs	r1, #20
 8004d4c:	4605      	mov	r5, r0
 8004d4e:	f7ff f9d7 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d52:	68a0      	ldr	r0, [r4, #8]
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	2100      	movs	r1, #0
 8004d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d5a:	4798      	blx	r3
 8004d5c:	4606      	mov	r6, r0
 8004d5e:	f003 fd51 	bl	8008804 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d62:	6860      	ldr	r0, [r4, #4]
 8004d64:	6803      	ldr	r3, [r0, #0]
 8004d66:	2100      	movs	r1, #0
 8004d68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d6a:	4798      	blx	r3
 8004d6c:	4631      	mov	r1, r6
 8004d6e:	4604      	mov	r4, r0
 8004d70:	f003 fd22 	bl	80087b8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004d74:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d78:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d7c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d80:	b1dc      	cbz	r4, 8004dba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004d82:	1d23      	adds	r3, r4, #4
 8004d84:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d88:	6833      	ldr	r3, [r6, #0]
 8004d8a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d8e:	4630      	mov	r0, r6
 8004d90:	68db      	ldr	r3, [r3, #12]
 8004d92:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d94:	4798      	blx	r3
    newPresenter->activate();
 8004d96:	6823      	ldr	r3, [r4, #0]
 8004d98:	4620      	mov	r0, r4
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d9e:	4629      	mov	r1, r5
 8004da0:	4630      	mov	r0, r6
 8004da2:	f012 f811 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004da6:	682b      	ldr	r3, [r5, #0]
 8004da8:	4628      	mov	r0, r5
 8004daa:	691b      	ldr	r3, [r3, #16]
 8004dac:	4798      	blx	r3
    newTransition->invalidate();
 8004dae:	682b      	ldr	r3, [r5, #0]
 8004db0:	4628      	mov	r0, r5
 8004db2:	695b      	ldr	r3, [r3, #20]
}
 8004db4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004db8:	4718      	bx	r3
    model->bind(newPresenter);
 8004dba:	4623      	mov	r3, r4
 8004dbc:	e7e2      	b.n	8004d84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004dbe:	bf00      	nop
 8004dc0:	0802bba4 	.word	0x0802bba4
 8004dc4:	0802cf47 	.word	0x0802cf47
 8004dc8:	0802bd40 	.word	0x0802bd40
 8004dcc:	0802bd87 	.word	0x0802bd87
 8004dd0:	0802be2a 	.word	0x0802be2a
 8004dd4:	20012ea4 	.word	0x20012ea4
 8004dd8:	20012ea0 	.word	0x20012ea0

08004ddc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004ddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004de0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004de4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004de6:	68a0      	ldr	r0, [r4, #8]
 8004de8:	6803      	ldr	r3, [r0, #0]
 8004dea:	6a1b      	ldr	r3, [r3, #32]
 8004dec:	4798      	blx	r3
 8004dee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004df2:	d205      	bcs.n	8004e00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004df4:	4b42      	ldr	r3, [pc, #264]	; (8004f00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004df6:	4a43      	ldr	r2, [pc, #268]	; (8004f04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004df8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004dfa:	4843      	ldr	r0, [pc, #268]	; (8004f08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004dfc:	f025 f842 	bl	8029e84 <__assert_func>
 8004e00:	6860      	ldr	r0, [r4, #4]
 8004e02:	6803      	ldr	r3, [r0, #0]
 8004e04:	6a1b      	ldr	r3, [r3, #32]
 8004e06:	4798      	blx	r3
 8004e08:	280f      	cmp	r0, #15
 8004e0a:	d803      	bhi.n	8004e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004e0c:	4b3f      	ldr	r3, [pc, #252]	; (8004f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004e0e:	4a3d      	ldr	r2, [pc, #244]	; (8004f04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e10:	21a4      	movs	r1, #164	; 0xa4
 8004e12:	e7f2      	b.n	8004dfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e14:	68e0      	ldr	r0, [r4, #12]
 8004e16:	6803      	ldr	r3, [r0, #0]
 8004e18:	6a1b      	ldr	r3, [r3, #32]
 8004e1a:	4798      	blx	r3
 8004e1c:	2837      	cmp	r0, #55	; 0x37
 8004e1e:	d803      	bhi.n	8004e28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004e20:	4b3b      	ldr	r3, [pc, #236]	; (8004f10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004e22:	4a38      	ldr	r2, [pc, #224]	; (8004f04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e24:	21a5      	movs	r1, #165	; 0xa5
 8004e26:	e7e8      	b.n	8004dfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e28:	f010 f9a2 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e2c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004e30:	3004      	adds	r0, #4
 8004e32:	f010 fa03 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e36:	f8d9 0000 	ldr.w	r0, [r9]
 8004e3a:	b110      	cbz	r0, 8004e42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e3c:	6803      	ldr	r3, [r0, #0]
 8004e3e:	68db      	ldr	r3, [r3, #12]
 8004e40:	4798      	blx	r3
    if (*currentTrans)
 8004e42:	f8d9 0000 	ldr.w	r0, [r9]
 8004e46:	b110      	cbz	r0, 8004e4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e48:	6803      	ldr	r3, [r0, #0]
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	4798      	blx	r3
    if (*currentScreen)
 8004e4e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004e52:	f8d8 0000 	ldr.w	r0, [r8]
 8004e56:	b110      	cbz	r0, 8004e5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e58:	6803      	ldr	r3, [r0, #0]
 8004e5a:	695b      	ldr	r3, [r3, #20]
 8004e5c:	4798      	blx	r3
    if (*currentPresenter)
 8004e5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e62:	b110      	cbz	r0, 8004e6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e64:	6803      	ldr	r3, [r0, #0]
 8004e66:	685b      	ldr	r3, [r3, #4]
 8004e68:	4798      	blx	r3
    if (*currentScreen)
 8004e6a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e6e:	b110      	cbz	r0, 8004e76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e70:	6803      	ldr	r3, [r0, #0]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	4798      	blx	r3
    if (*currentPresenter)
 8004e76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e7a:	b110      	cbz	r0, 8004e82 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e7c:	6803      	ldr	r3, [r0, #0]
 8004e7e:	689b      	ldr	r3, [r3, #8]
 8004e80:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e82:	68e0      	ldr	r0, [r4, #12]
 8004e84:	2100      	movs	r1, #0
 8004e86:	f7ff f937 	bl	80040f8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e8a:	2114      	movs	r1, #20
 8004e8c:	4605      	mov	r5, r0
 8004e8e:	f7ff f937 	bl	8004100 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e92:	68a0      	ldr	r0, [r4, #8]
 8004e94:	6803      	ldr	r3, [r0, #0]
 8004e96:	2100      	movs	r1, #0
 8004e98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e9a:	4798      	blx	r3
 8004e9c:	4606      	mov	r6, r0
 8004e9e:	f003 fb6d 	bl	800857c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ea2:	6860      	ldr	r0, [r4, #4]
 8004ea4:	6803      	ldr	r3, [r0, #0]
 8004ea6:	2100      	movs	r1, #0
 8004ea8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eaa:	4798      	blx	r3
 8004eac:	4631      	mov	r1, r6
 8004eae:	4604      	mov	r4, r0
 8004eb0:	f003 fb3e 	bl	8008530 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004eb4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004eb8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ebc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ec0:	b1dc      	cbz	r4, 8004efa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004ec2:	1d23      	adds	r3, r4, #4
 8004ec4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ec8:	6833      	ldr	r3, [r6, #0]
 8004eca:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ece:	4630      	mov	r0, r6
 8004ed0:	68db      	ldr	r3, [r3, #12]
 8004ed2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ed4:	4798      	blx	r3
    newPresenter->activate();
 8004ed6:	6823      	ldr	r3, [r4, #0]
 8004ed8:	4620      	mov	r0, r4
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ede:	4629      	mov	r1, r5
 8004ee0:	4630      	mov	r0, r6
 8004ee2:	f011 ff71 	bl	8016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ee6:	682b      	ldr	r3, [r5, #0]
 8004ee8:	4628      	mov	r0, r5
 8004eea:	691b      	ldr	r3, [r3, #16]
 8004eec:	4798      	blx	r3
    newTransition->invalidate();
 8004eee:	682b      	ldr	r3, [r5, #0]
 8004ef0:	4628      	mov	r0, r5
 8004ef2:	695b      	ldr	r3, [r3, #20]
}
 8004ef4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ef8:	4718      	bx	r3
    model->bind(newPresenter);
 8004efa:	4623      	mov	r3, r4
 8004efc:	e7e2      	b.n	8004ec4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004efe:	bf00      	nop
 8004f00:	0802bba4 	.word	0x0802bba4
 8004f04:	0802d073 	.word	0x0802d073
 8004f08:	0802bd40 	.word	0x0802bd40
 8004f0c:	0802bd87 	.word	0x0802bd87
 8004f10:	0802be2a 	.word	0x0802be2a
 8004f14:	20012ea4 	.word	0x20012ea4
 8004f18:	20012ea0 	.word	0x20012ea0

08004f1c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004f1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f1e:	4770      	bx	lr

08004f20 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004f20:	4770      	bx	lr

08004f22 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004f22:	4770      	bx	lr

08004f24 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f24:	b510      	push	{r4, lr}
}
 8004f26:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f2a:	4604      	mov	r4, r0
}
 8004f2c:	f024 f997 	bl	802925e <_ZdlPvj>
 8004f30:	4620      	mov	r0, r4
 8004f32:	bd10      	pop	{r4, pc}

08004f34 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004f38:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f3c:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004f3e:	2600      	movs	r6, #0
 8004f40:	ed2d 8b02 	vpush	{d8}
 8004f44:	8483      	strh	r3, [r0, #36]	; 0x24
 8004f46:	4bb2      	ldr	r3, [pc, #712]	; (8005210 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004f48:	6286      	str	r6, [r0, #40]	; 0x28
 8004f4a:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004f4e:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004f52:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004f56:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004f5a:	f848 3b2c 	str.w	r3, [r8], #44
 8004f5e:	b08b      	sub	sp, #44	; 0x2c
 8004f60:	4604      	mov	r4, r0
 8004f62:	4640      	mov	r0, r8
 8004f64:	f7fd fc42 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8004f68:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004f6c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004f70:	4618      	mov	r0, r3
 8004f72:	9303      	str	r3, [sp, #12]
 8004f74:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004f78:	f7fd fc38 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8004f7c:	4658      	mov	r0, fp
 8004f7e:	f7fd fc35 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8004f82:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004f86:	4da3      	ldr	r5, [pc, #652]	; (8005214 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004f88:	4650      	mov	r0, sl
 8004f8a:	f7fd fc2f 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004f8e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004f92:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004f96:	4648      	mov	r0, r9
 8004f98:	f7fd fc28 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8004f9c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004fa0:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004fa4:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004fa6:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004faa:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004fae:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004fb2:	f7fd fc1b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004fb6:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004fba:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004fbe:	4638      	mov	r0, r7
 8004fc0:	f00d f890 	bl	80120e4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004fc4:	4a94      	ldr	r2, [pc, #592]	; (8005218 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004fc6:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004fc8:	4640      	mov	r0, r8
 8004fca:	226d      	movs	r2, #109	; 0x6d
 8004fcc:	21d9      	movs	r1, #217	; 0xd9
 8004fce:	ad04      	add	r5, sp, #16
 8004fd0:	f7fd fbd9 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004fd4:	f04f 33ff 	mov.w	r3, #4294967295
 8004fd8:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004fda:	4641      	mov	r1, r8
 8004fdc:	4628      	mov	r0, r5
        linespace = space;
 8004fde:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004fe2:	f00c fd47 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004fe6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004fea:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004fee:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004ff2:	4b8a      	ldr	r3, [pc, #552]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ff4:	9308      	str	r3, [sp, #32]
 8004ff6:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004ff8:	a908      	add	r1, sp, #32
 8004ffa:	4640      	mov	r0, r8
 8004ffc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005000:	f00c ffd2 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005004:	4641      	mov	r1, r8
 8005006:	4620      	mov	r0, r4
 8005008:	f00a fe1a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 800500c:	9b03      	ldr	r3, [sp, #12]
 800500e:	4631      	mov	r1, r6
 8005010:	4618      	mov	r0, r3
 8005012:	226d      	movs	r2, #109	; 0x6d
 8005014:	f7fd fbb7 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005018:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 800501a:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 800501e:	f04f 32ff 	mov.w	r2, #4294967295
 8005022:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005026:	4619      	mov	r1, r3
 8005028:	4628      	mov	r0, r5
 800502a:	f00c fd23 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800502e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005032:	4b7a      	ldr	r3, [pc, #488]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005034:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005036:	9b03      	ldr	r3, [sp, #12]
 8005038:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 800503c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005040:	2230      	movs	r2, #48	; 0x30
 8005042:	a908      	add	r1, sp, #32
 8005044:	4618      	mov	r0, r3
 8005046:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800504a:	f00c ffad 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 800504e:	9b03      	ldr	r3, [sp, #12]
 8005050:	4620      	mov	r0, r4
 8005052:	4619      	mov	r1, r3
 8005054:	f00a fdf4 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005058:	4632      	mov	r2, r6
 800505a:	4658      	mov	r0, fp
 800505c:	2171      	movs	r1, #113	; 0x71
 800505e:	f7fd fb92 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005062:	f04f 32ff 	mov.w	r2, #4294967295
 8005066:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800506a:	4659      	mov	r1, fp
 800506c:	4628      	mov	r0, r5
        linespace = space;
 800506e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005072:	f00c fcff 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005076:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800507a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 800507e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005082:	4b66      	ldr	r3, [pc, #408]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005084:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005086:	a908      	add	r1, sp, #32
 8005088:	2331      	movs	r3, #49	; 0x31
 800508a:	4658      	mov	r0, fp
 800508c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005090:	f00c ff8a 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005094:	4659      	mov	r1, fp
 8005096:	4620      	mov	r0, r4
 8005098:	f00a fdd2 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800509c:	4650      	mov	r0, sl
 800509e:	227c      	movs	r2, #124	; 0x7c
 80050a0:	214c      	movs	r1, #76	; 0x4c
 80050a2:	f7fd fb70 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80050a6:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 80050aa:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 80050ae:	f04f 32ff 	mov.w	r2, #4294967295
 80050b2:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 80050b6:	4651      	mov	r1, sl
 80050b8:	4628      	mov	r0, r5
 80050ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80050be:	4798      	blx	r3
 80050c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050c4:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80050c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050cc:	4b53      	ldr	r3, [pc, #332]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050ce:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80050d0:	a908      	add	r1, sp, #32
 80050d2:	232e      	movs	r3, #46	; 0x2e
 80050d4:	4650      	mov	r0, sl
 80050d6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80050da:	f00c ff65 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 80050de:	4651      	mov	r1, sl
 80050e0:	4620      	mov	r0, r4
 80050e2:	f00a fdad 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 80050e6:	4648      	mov	r0, r9
 80050e8:	228b      	movs	r2, #139	; 0x8b
 80050ea:	2156      	movs	r1, #86	; 0x56
 80050ec:	f7fd fb4b 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80050f0:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80050f4:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80050f8:	f04f 32ff 	mov.w	r2, #4294967295
 80050fc:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005100:	4649      	mov	r1, r9
 8005102:	4628      	mov	r0, r5
 8005104:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005108:	4798      	blx	r3
 800510a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800510e:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005112:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005116:	4b41      	ldr	r3, [pc, #260]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005118:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800511a:	a908      	add	r1, sp, #32
 800511c:	232d      	movs	r3, #45	; 0x2d
 800511e:	4648      	mov	r0, r9
 8005120:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005124:	f00c ff40 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005128:	4649      	mov	r1, r9
 800512a:	4620      	mov	r0, r4
 800512c:	f00a fd88 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005130:	ee18 0a10 	vmov	r0, s16
 8005134:	229a      	movs	r2, #154	; 0x9a
 8005136:	2156      	movs	r1, #86	; 0x56
 8005138:	f7fd fb25 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800513c:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005140:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005144:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005148:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800514c:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005150:	4628      	mov	r0, r5
 8005152:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005156:	4798      	blx	r3
 8005158:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800515c:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005160:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005164:	4b2d      	ldr	r3, [pc, #180]	; (800521c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005166:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005168:	ee18 0a10 	vmov	r0, s16
 800516c:	232c      	movs	r3, #44	; 0x2c
 800516e:	a908      	add	r1, sp, #32
 8005170:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005174:	f00c ff18 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005178:	ee18 1a10 	vmov	r1, s16
 800517c:	4620      	mov	r0, r4
 800517e:	f00a fd5f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005182:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005184:	a908      	add	r1, sp, #32
 8005186:	4638      	mov	r0, r7
 8005188:	f8ad 3020 	strh.w	r3, [sp, #32]
 800518c:	f00a fcea 	bl	800fb64 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005190:	2212      	movs	r2, #18
 8005192:	4638      	mov	r0, r7
 8005194:	211c      	movs	r1, #28
 8005196:	f7fd faf6 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800519a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800519e:	4638      	mov	r0, r7
 80051a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051a2:	21b8      	movs	r1, #184	; 0xb8
 80051a4:	4798      	blx	r3
        setHeight(height);
 80051a6:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80051aa:	4638      	mov	r0, r7
 80051ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051ae:	216a      	movs	r1, #106	; 0x6a
 80051b0:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 80051b2:	225c      	movs	r2, #92	; 0x5c
 80051b4:	4611      	mov	r1, r2
 80051b6:	4638      	mov	r0, r7
 80051b8:	f00d f83f 	bl	801223a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80051bc:	4638      	mov	r0, r7
 80051be:	225a      	movs	r2, #90	; 0x5a
 80051c0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80051c4:	f00d f8be 	bl	8012344 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80051c8:	4633      	mov	r3, r6
 80051ca:	225a      	movs	r2, #90	; 0x5a
 80051cc:	4638      	mov	r0, r7
 80051ce:	9600      	str	r6, [sp, #0]
 80051d0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80051d4:	f00a fb73 	bl	800f8be <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80051d8:	4631      	mov	r1, r6
 80051da:	4638      	mov	r0, r7
 80051dc:	f00d f85c 	bl	8012298 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80051e0:	2335      	movs	r3, #53	; 0x35
 80051e2:	2208      	movs	r2, #8
 80051e4:	4638      	mov	r0, r7
 80051e6:	2105      	movs	r1, #5
 80051e8:	f00d f812 	bl	8012210 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051ec:	4638      	mov	r0, r7
 80051ee:	2101      	movs	r1, #1
 80051f0:	f00c ffb0 	bl	8012154 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051f4:	4638      	mov	r0, r7
 80051f6:	2101      	movs	r1, #1
 80051f8:	f00c ffaf 	bl	801215a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80051fc:	4620      	mov	r0, r4
 80051fe:	4639      	mov	r1, r7
 8005200:	f00a fd1e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005204:	4620      	mov	r0, r4
 8005206:	b00b      	add	sp, #44	; 0x2c
 8005208:	ecbd 8b02 	vpop	{d8}
 800520c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005210:	0802d2dc 	.word	0x0802d2dc
 8005214:	0802ba38 	.word	0x0802ba38
 8005218:	00a900f0 	.word	0x00a900f0
 800521c:	0802ba28 	.word	0x0802ba28

08005220 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005220:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005222:	4770      	bx	lr

08005224 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005224:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005226:	4770      	bx	lr

08005228 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005228:	4770      	bx	lr

0800522a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800522a:	888b      	ldrh	r3, [r1, #4]
 800522c:	69c0      	ldr	r0, [r0, #28]
 800522e:	680a      	ldr	r2, [r1, #0]
 8005230:	0adb      	lsrs	r3, r3, #11
 8005232:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005236:	4410      	add	r0, r2
 8005238:	4770      	bx	lr

0800523a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800523a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800523c:	b1c2      	cbz	r2, 8005270 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800523e:	7b13      	ldrb	r3, [r2, #12]
 8005240:	b1b3      	cbz	r3, 8005270 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005242:	7b54      	ldrb	r4, [r2, #13]
 8005244:	7ad2      	ldrb	r2, [r2, #11]
 8005246:	0224      	lsls	r4, r4, #8
 8005248:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800524c:	4314      	orrs	r4, r2
 800524e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005250:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005252:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005256:	8813      	ldrh	r3, [r2, #0]
 8005258:	428b      	cmp	r3, r1
 800525a:	d102      	bne.n	8005262 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800525c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005260:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005262:	d805      	bhi.n	8005270 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005264:	3801      	subs	r0, #1
 8005266:	b280      	uxth	r0, r0
 8005268:	3204      	adds	r2, #4
 800526a:	2800      	cmp	r0, #0
 800526c:	d1f3      	bne.n	8005256 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800526e:	e7f7      	b.n	8005260 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005270:	2000      	movs	r0, #0
 8005272:	e7f5      	b.n	8005260 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005274 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005274:	b510      	push	{r4, lr}
 8005276:	212c      	movs	r1, #44	; 0x2c
 8005278:	4604      	mov	r4, r0
 800527a:	f023 fff0 	bl	802925e <_ZdlPvj>
 800527e:	4620      	mov	r0, r4
 8005280:	bd10      	pop	{r4, pc}
	...

08005284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005284:	b530      	push	{r4, r5, lr}
 8005286:	b08b      	sub	sp, #44	; 0x2c
 8005288:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800528a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800528e:	9508      	str	r5, [sp, #32]
 8005290:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005294:	9507      	str	r5, [sp, #28]
 8005296:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800529a:	9506      	str	r5, [sp, #24]
 800529c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80052a0:	9505      	str	r5, [sp, #20]
 80052a2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80052a6:	9504      	str	r5, [sp, #16]
 80052a8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80052ac:	9503      	str	r5, [sp, #12]
 80052ae:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80052b2:	9502      	str	r5, [sp, #8]
 80052b4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80052b8:	9501      	str	r5, [sp, #4]
 80052ba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80052be:	9500      	str	r5, [sp, #0]
 80052c0:	f011 f8ec 	bl	801649c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80052c4:	4b06      	ldr	r3, [pc, #24]	; (80052e0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80052c6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80052c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80052ca:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80052cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80052ce:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80052d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80052d2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80052d4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80052d6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80052d8:	4620      	mov	r0, r4
 80052da:	b00b      	add	sp, #44	; 0x2c
 80052dc:	bd30      	pop	{r4, r5, pc}
 80052de:	bf00      	nop
 80052e0:	0802d370 	.word	0x0802d370

080052e4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80052e4:	4770      	bx	lr

080052e6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80052e6:	4770      	bx	lr

080052e8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80052e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80052ea:	68c2      	ldr	r2, [r0, #12]
 80052ec:	6844      	ldr	r4, [r0, #4]
 80052ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80052f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80052f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80052f6:	07d2      	lsls	r2, r2, #31
 80052f8:	bf48      	it	mi
 80052fa:	5962      	ldrmi	r2, [r4, r5]
 80052fc:	689b      	ldr	r3, [r3, #8]
    }
 80052fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005300:	bf48      	it	mi
 8005302:	58d3      	ldrmi	r3, [r2, r3]
 8005304:	4718      	bx	r3

08005306 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005306:	6843      	ldr	r3, [r0, #4]
 8005308:	b12b      	cbz	r3, 8005316 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800530a:	6883      	ldr	r3, [r0, #8]
 800530c:	b92b      	cbnz	r3, 800531a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800530e:	68c0      	ldr	r0, [r0, #12]
 8005310:	f000 0001 	and.w	r0, r0, #1
 8005314:	4770      	bx	lr
 8005316:	4618      	mov	r0, r3
 8005318:	4770      	bx	lr
 800531a:	2001      	movs	r0, #1
    }
 800531c:	4770      	bx	lr

0800531e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800531e:	b510      	push	{r4, lr}
 8005320:	2110      	movs	r1, #16
 8005322:	4604      	mov	r4, r0
 8005324:	f023 ff9b 	bl	802925e <_ZdlPvj>
 8005328:	4620      	mov	r0, r4
 800532a:	bd10      	pop	{r4, pc}

0800532c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800532c:	b510      	push	{r4, lr}
 800532e:	4b03      	ldr	r3, [pc, #12]	; (800533c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005330:	6003      	str	r3, [r0, #0]
 8005332:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005334:	f00e fa1a 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005338:	4620      	mov	r0, r4
 800533a:	bd10      	pop	{r4, pc}
 800533c:	0802d3e8 	.word	0x0802d3e8

08005340 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005340:	b507      	push	{r0, r1, r2, lr}
 8005342:	4b07      	ldr	r3, [pc, #28]	; (8005360 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005344:	6003      	str	r3, [r0, #0]
 8005346:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005348:	f00e fa10 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800534c:	9801      	ldr	r0, [sp, #4]
 800534e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005352:	f023 ff84 	bl	802925e <_ZdlPvj>
 8005356:	9801      	ldr	r0, [sp, #4]
 8005358:	b003      	add	sp, #12
 800535a:	f85d fb04 	ldr.w	pc, [sp], #4
 800535e:	bf00      	nop
 8005360:	0802d3e8 	.word	0x0802d3e8

08005364 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005364:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005366:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800536a:	4299      	cmp	r1, r3
{
 800536c:	4604      	mov	r4, r0
 800536e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005370:	d103      	bne.n	800537a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005372:	f00f fefd 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005376:	f7fe fb0d 	bl	8003994 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800537a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800537e:	429d      	cmp	r5, r3
 8005380:	d103      	bne.n	800538a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005382:	f00f fef5 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005386:	f7fe fba5 	bl	8003ad4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800538a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800538e:	429d      	cmp	r5, r3
 8005390:	d103      	bne.n	800539a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005392:	f00f feed 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005396:	f7fe fbdd 	bl	8003b54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800539a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800539e:	42a5      	cmp	r5, r4
 80053a0:	d10a      	bne.n	80053b8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80053a2:	4806      	ldr	r0, [pc, #24]	; (80053bc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80053a4:	2200      	movs	r2, #0
 80053a6:	2120      	movs	r1, #32
 80053a8:	f004 f9ee 	bl	8009788 <HAL_GPIO_WritePin>
 80053ac:	f00f fee0 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80053b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80053b4:	f7fe bbde 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80053b8:	bd38      	pop	{r3, r4, r5, pc}
 80053ba:	bf00      	nop
 80053bc:	40021000 	.word	0x40021000

080053c0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80053c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053c4:	ed2d 8b06 	vpush	{d8-d10}
 80053c8:	4604      	mov	r4, r0
 80053ca:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80053cc:	46a3      	mov	fp, r4
        : presenter(0)
 80053ce:	2500      	movs	r5, #0
 80053d0:	f011 fb4e 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 80053d4:	4b6a      	ldr	r3, [pc, #424]	; (8005580 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80053d6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80053d8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80053dc:	2226      	movs	r2, #38	; 0x26
 80053de:	4629      	mov	r1, r5
 80053e0:	4658      	mov	r0, fp
 80053e2:	f024 ff54 	bl	802a28e <memset>
 80053e6:	4658      	mov	r0, fp
 80053e8:	f7fd f9ee 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80053ec:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80053f0:	26ff      	movs	r6, #255	; 0xff
 80053f2:	4b64      	ldr	r3, [pc, #400]	; (8005584 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80053f4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80053f6:	2226      	movs	r2, #38	; 0x26
 80053f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80053fc:	4629      	mov	r1, r5
 80053fe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005402:	4650      	mov	r0, sl
        : color(col)
 8005404:	66a5      	str	r5, [r4, #104]	; 0x68
 8005406:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800540a:	f024 ff40 	bl	802a28e <memset>
 800540e:	4650      	mov	r0, sl
 8005410:	f7fd f9da 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8005414:	4b5c      	ldr	r3, [pc, #368]	; (8005588 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005416:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005418:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800541c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005420:	a90c      	add	r1, sp, #48	; 0x30
 8005422:	4650      	mov	r0, sl
 8005424:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005428:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800542c:	f00d f997 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005430:	4648      	mov	r0, r9
 8005432:	f7fd f9db 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005436:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800543a:	4b54      	ldr	r3, [pc, #336]	; (800558c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 800543c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005440:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005444:	4638      	mov	r0, r7
 8005446:	f00c f853 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 800544a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800544e:	4618      	mov	r0, r3
 8005450:	9303      	str	r3, [sp, #12]
 8005452:	f7fb fdf7 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005456:	4b4e      	ldr	r3, [pc, #312]	; (8005590 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005458:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800545c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005460:	3324      	adds	r3, #36	; 0x24
 8005462:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005466:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800546a:	4640      	mov	r0, r8
 800546c:	f7fd f9be 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005470:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005474:	4618      	mov	r0, r3
 8005476:	ee08 3a10 	vmov	s16, r3
 800547a:	f7fd f9b7 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 800547e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005482:	4618      	mov	r0, r3
 8005484:	ee08 3a90 	vmov	s17, r3
 8005488:	f7fd f9b0 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 800548c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005490:	4618      	mov	r0, r3
 8005492:	ee09 3a10 	vmov	s18, r3
 8005496:	f00d faa3 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800549a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800549e:	4618      	mov	r0, r3
 80054a0:	ee09 3a90 	vmov	s19, r3
 80054a4:	f00d fa9c 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80054a8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80054ac:	4618      	mov	r0, r3
 80054ae:	ee0a 3a10 	vmov	s20, r3
 80054b2:	f00d fa95 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80054b6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80054ba:	4618      	mov	r0, r3
 80054bc:	ee0a 3a90 	vmov	s21, r3
 80054c0:	f00d f926 	bl	8012710 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80054c4:	4a33      	ldr	r2, [pc, #204]	; (8005594 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80054c6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80054ca:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80054ce:	4a32      	ldr	r2, [pc, #200]	; (8005598 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80054d0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80054d4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80054d8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80054dc:	f00e f93c 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80054e0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80054e4:	462a      	mov	r2, r5
 80054e6:	4658      	mov	r0, fp
 80054e8:	9300      	str	r3, [sp, #0]
 80054ea:	4629      	mov	r1, r5
 80054ec:	23f0      	movs	r3, #240	; 0xf0
 80054ee:	f7fd f957 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80054f2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80054f4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80054f8:	66a3      	str	r3, [r4, #104]	; 0x68
 80054fa:	4659      	mov	r1, fp
 80054fc:	4630      	mov	r0, r6
 80054fe:	f00a fb9f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005502:	462a      	mov	r2, r5
 8005504:	4650      	mov	r0, sl
 8005506:	4629      	mov	r1, r5
 8005508:	f7fd f93d 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800550c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800550e:	4650      	mov	r0, sl
 8005510:	a90c      	add	r1, sp, #48	; 0x30
 8005512:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005516:	f00d f922 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800551a:	4651      	mov	r1, sl
 800551c:	4630      	mov	r0, r6
 800551e:	f00a fb8f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005522:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005526:	2156      	movs	r1, #86	; 0x56
 8005528:	4648      	mov	r0, r9
 800552a:	f7fd f92c 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800552e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005532:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005536:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800553a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800553e:	4650      	mov	r0, sl
 8005540:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005544:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005548:	4649      	mov	r1, r9
 800554a:	4798      	blx	r3
 800554c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005550:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005554:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005558:	4b10      	ldr	r3, [pc, #64]	; (800559c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800555a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 800555c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005560:	b92b      	cbnz	r3, 800556e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005562:	4b0f      	ldr	r3, [pc, #60]	; (80055a0 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005564:	4a0f      	ldr	r2, [pc, #60]	; (80055a4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005566:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005568:	480f      	ldr	r0, [pc, #60]	; (80055a8 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800556a:	f024 fc8b 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800556e:	4b0f      	ldr	r3, [pc, #60]	; (80055ac <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005570:	881b      	ldrh	r3, [r3, #0]
 8005572:	2b2a      	cmp	r3, #42	; 0x2a
 8005574:	d81e      	bhi.n	80055b4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005576:	4b0e      	ldr	r3, [pc, #56]	; (80055b0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005578:	4a0a      	ldr	r2, [pc, #40]	; (80055a4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800557a:	2161      	movs	r1, #97	; 0x61
 800557c:	e7f4      	b.n	8005568 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 800557e:	bf00      	nop
 8005580:	0802d3e8 	.word	0x0802d3e8
 8005584:	0802e3a8 	.word	0x0802e3a8
 8005588:	0802e570 	.word	0x0802e570
 800558c:	0802ba38 	.word	0x0802ba38
 8005590:	0802e0dc 	.word	0x0802e0dc
 8005594:	0802d3d0 	.word	0x0802d3d0
 8005598:	08005365 	.word	0x08005365
 800559c:	20012eb4 	.word	0x20012eb4
 80055a0:	0802b878 	.word	0x0802b878
 80055a4:	0802b97a 	.word	0x0802b97a
 80055a8:	0802b8f5 	.word	0x0802b8f5
 80055ac:	20012eb8 	.word	0x20012eb8
 80055b0:	0802b93c 	.word	0x0802b93c
        return texts->getText(typedTextId);
 80055b4:	4ba5      	ldr	r3, [pc, #660]	; (800584c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80055b6:	212a      	movs	r1, #42	; 0x2a
 80055b8:	6818      	ldr	r0, [r3, #0]
 80055ba:	f002 fdf9 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 80055be:	4aa4      	ldr	r2, [pc, #656]	; (8005850 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80055c0:	4603      	mov	r3, r0
 80055c2:	2104      	movs	r1, #4
 80055c4:	4650      	mov	r0, sl
 80055c6:	f012 ff43 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80055ca:	4648      	mov	r0, r9
        wc1 = value;
 80055cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80055d0:	f00c fcca 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80055d4:	4b9f      	ldr	r3, [pc, #636]	; (8005854 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80055d6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80055d8:	a90c      	add	r1, sp, #48	; 0x30
 80055da:	232b      	movs	r3, #43	; 0x2b
 80055dc:	4648      	mov	r0, r9
 80055de:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055e2:	f00c fce1 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055e6:	4649      	mov	r1, r9
 80055e8:	4630      	mov	r0, r6
 80055ea:	f00a fb29 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80055ee:	230a      	movs	r3, #10
 80055f0:	9300      	str	r3, [sp, #0]
 80055f2:	2232      	movs	r2, #50	; 0x32
 80055f4:	23f0      	movs	r3, #240	; 0xf0
 80055f6:	4629      	mov	r1, r5
 80055f8:	4638      	mov	r0, r7
 80055fa:	f7fd f8d1 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80055fe:	9b03      	ldr	r3, [sp, #12]
 8005600:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005604:	22a0      	movs	r2, #160	; 0xa0
 8005606:	4611      	mov	r1, r2
 8005608:	4638      	mov	r0, r7
 800560a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800560e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005612:	f00c f883 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005616:	22a0      	movs	r2, #160	; 0xa0
 8005618:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800561c:	4638      	mov	r0, r7
 800561e:	f00c f888 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005622:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005626:	2b20      	cmp	r3, #32
 8005628:	d005      	beq.n	8005636 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800562a:	2320      	movs	r3, #32
 800562c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005630:	4638      	mov	r0, r7
 8005632:	f00b ff7d 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005636:	4638      	mov	r0, r7
 8005638:	2101      	movs	r1, #1
 800563a:	f00c f885 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800563e:	4639      	mov	r1, r7
 8005640:	4630      	mov	r0, r6
 8005642:	ad04      	add	r5, sp, #16
        color = newColor;
 8005644:	f04f 37ff 	mov.w	r7, #4294967295
 8005648:	f00a fafa 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800564c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005650:	2223      	movs	r2, #35	; 0x23
 8005652:	4640      	mov	r0, r8
 8005654:	2145      	movs	r1, #69	; 0x45
 8005656:	f7fd f896 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800565a:	4641      	mov	r1, r8
 800565c:	4628      	mov	r0, r5
        color = newColor;
 800565e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005662:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005666:	f00c fa05 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800566a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800566e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005672:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005676:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800567a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005854 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800567e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005682:	2350      	movs	r3, #80	; 0x50
 8005684:	4649      	mov	r1, r9
 8005686:	4640      	mov	r0, r8
 8005688:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800568c:	f00c fc8c 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005690:	4641      	mov	r1, r8
 8005692:	4630      	mov	r0, r6
 8005694:	f00a fad4 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005698:	ee18 0a10 	vmov	r0, s16
 800569c:	220c      	movs	r2, #12
 800569e:	2136      	movs	r1, #54	; 0x36
 80056a0:	f7fd f871 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80056a4:	ee18 1a10 	vmov	r1, s16
 80056a8:	4628      	mov	r0, r5
        color = newColor;
 80056aa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80056ae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80056b2:	f00c f9df 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80056b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80056ba:	ee18 3a10 	vmov	r3, s16
 80056be:	333c      	adds	r3, #60	; 0x3c
 80056c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80056c4:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80056c6:	ee18 0a10 	vmov	r0, s16
 80056ca:	4649      	mov	r1, r9
 80056cc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056d0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80056d4:	f00c fc68 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80056d8:	ee18 1a10 	vmov	r1, s16
 80056dc:	4630      	mov	r0, r6
 80056de:	f00a faaf 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80056e2:	ee18 0a90 	vmov	r0, s17
 80056e6:	223c      	movs	r2, #60	; 0x3c
 80056e8:	2158      	movs	r1, #88	; 0x58
 80056ea:	f7fd f84c 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80056ee:	ee18 1a90 	vmov	r1, s17
 80056f2:	4628      	mov	r0, r5
        color = newColor;
 80056f4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80056f8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80056fc:	f00c f9ba 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005700:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005704:	ee18 3a90 	vmov	r3, s17
 8005708:	333c      	adds	r3, #60	; 0x3c
 800570a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800570e:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005710:	ee18 0a90 	vmov	r0, s17
 8005714:	4649      	mov	r1, r9
 8005716:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800571a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800571e:	f00c fc43 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005722:	ee18 1a90 	vmov	r1, s17
 8005726:	4630      	mov	r0, r6
 8005728:	f00a fa8a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800572c:	ee19 0a10 	vmov	r0, s18
 8005730:	22f0      	movs	r2, #240	; 0xf0
 8005732:	2121      	movs	r1, #33	; 0x21
 8005734:	f7fd f827 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005738:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800573c:	464a      	mov	r2, r9
 800573e:	f04f 0802 	mov.w	r8, #2
 8005742:	a90b      	add	r1, sp, #44	; 0x2c
 8005744:	ee19 0a10 	vmov	r0, s18
 8005748:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800574c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005750:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005754:	f00c fe0d 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005758:	2352      	movs	r3, #82	; 0x52
 800575a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800575e:	350c      	adds	r5, #12
        updateTextPosition();
 8005760:	ee19 0a10 	vmov	r0, s18
 8005764:	f7fd f864 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005768:	ee19 1a10 	vmov	r1, s18
 800576c:	4630      	mov	r0, r6
        colorPressed = col;
 800576e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005772:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005776:	f00a fa63 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800577a:	ee19 0a90 	vmov	r0, s19
 800577e:	22aa      	movs	r2, #170	; 0xaa
 8005780:	2121      	movs	r1, #33	; 0x21
 8005782:	f7fd f800 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005786:	464a      	mov	r2, r9
 8005788:	a90b      	add	r1, sp, #44	; 0x2c
 800578a:	ee19 0a90 	vmov	r0, s19
 800578e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005792:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005796:	f00c fdec 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800579a:	2353      	movs	r3, #83	; 0x53
 800579c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80057a0:	ee19 0a90 	vmov	r0, s19
 80057a4:	f7fd f844 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80057a8:	ee19 1a90 	vmov	r1, s19
 80057ac:	4630      	mov	r0, r6
        colorPressed = col;
 80057ae:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80057b2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80057b6:	f00a fa43 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80057ba:	ee1a 0a10 	vmov	r0, s20
 80057be:	2264      	movs	r2, #100	; 0x64
 80057c0:	2121      	movs	r1, #33	; 0x21
 80057c2:	f7fc ffe0 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057c6:	464a      	mov	r2, r9
 80057c8:	a90b      	add	r1, sp, #44	; 0x2c
 80057ca:	ee1a 0a10 	vmov	r0, s20
 80057ce:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80057d2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80057d6:	f00c fdcc 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80057da:	2354      	movs	r3, #84	; 0x54
 80057dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80057e0:	ee1a 0a10 	vmov	r0, s20
 80057e4:	f7fd f824 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80057e8:	ee1a 1a10 	vmov	r1, s20
 80057ec:	4630      	mov	r0, r6
        colorPressed = col;
 80057ee:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80057f2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80057f6:	f00a fa23 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80057fa:	ee1a 0a90 	vmov	r0, s21
 80057fe:	2205      	movs	r2, #5
 8005800:	21c6      	movs	r1, #198	; 0xc6
 8005802:	f7fc ffc0 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005806:	2301      	movs	r3, #1
 8005808:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800580c:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800580e:	ee1a 0a90 	vmov	r0, s21
 8005812:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005816:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800581a:	aa0a      	add	r2, sp, #40	; 0x28
 800581c:	ab0b      	add	r3, sp, #44	; 0x2c
 800581e:	a909      	add	r1, sp, #36	; 0x24
 8005820:	f8cd 9000 	str.w	r9, [sp]
 8005824:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005828:	f00c fedd 	bl	80125e6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800582c:	4630      	mov	r0, r6
 800582e:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005832:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005836:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800583a:	f00a fa01 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800583e:	4620      	mov	r0, r4
 8005840:	b00f      	add	sp, #60	; 0x3c
 8005842:	ecbd 8b06 	vpop	{d8-d10}
 8005846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800584a:	bf00      	nop
 800584c:	20012ec0 	.word	0x20012ec0
 8005850:	0802b9b2 	.word	0x0802b9b2
 8005854:	0802ba28 	.word	0x0802ba28

08005858 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005858:	4770      	bx	lr

0800585a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800585a:	4770      	bx	lr

0800585c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800585c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800585e:	68c2      	ldr	r2, [r0, #12]
 8005860:	6844      	ldr	r4, [r0, #4]
 8005862:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005864:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005866:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800586a:	07d2      	lsls	r2, r2, #31
 800586c:	bf48      	it	mi
 800586e:	5962      	ldrmi	r2, [r4, r5]
 8005870:	689b      	ldr	r3, [r3, #8]
    }
 8005872:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005874:	bf48      	it	mi
 8005876:	58d3      	ldrmi	r3, [r2, r3]
 8005878:	4718      	bx	r3

0800587a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800587a:	6843      	ldr	r3, [r0, #4]
 800587c:	b12b      	cbz	r3, 800588a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800587e:	6883      	ldr	r3, [r0, #8]
 8005880:	b92b      	cbnz	r3, 800588e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005882:	68c0      	ldr	r0, [r0, #12]
 8005884:	f000 0001 	and.w	r0, r0, #1
 8005888:	4770      	bx	lr
 800588a:	4618      	mov	r0, r3
 800588c:	4770      	bx	lr
 800588e:	2001      	movs	r0, #1
    }
 8005890:	4770      	bx	lr

08005892 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005892:	b510      	push	{r4, lr}
 8005894:	2110      	movs	r1, #16
 8005896:	4604      	mov	r4, r0
 8005898:	f023 fce1 	bl	802925e <_ZdlPvj>
 800589c:	4620      	mov	r0, r4
 800589e:	bd10      	pop	{r4, pc}

080058a0 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80058a0:	b510      	push	{r4, lr}
 80058a2:	4b03      	ldr	r3, [pc, #12]	; (80058b0 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80058a4:	6003      	str	r3, [r0, #0]
 80058a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80058a8:	f00d ff60 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80058ac:	4620      	mov	r0, r4
 80058ae:	bd10      	pop	{r4, pc}
 80058b0:	0802d434 	.word	0x0802d434

080058b4 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80058b4:	b507      	push	{r0, r1, r2, lr}
 80058b6:	4b07      	ldr	r3, [pc, #28]	; (80058d4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80058b8:	6003      	str	r3, [r0, #0]
 80058ba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80058bc:	f00d ff56 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80058c0:	9801      	ldr	r0, [sp, #4]
 80058c2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80058c6:	f023 fcca 	bl	802925e <_ZdlPvj>
 80058ca:	9801      	ldr	r0, [sp, #4]
 80058cc:	b003      	add	sp, #12
 80058ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80058d2:	bf00      	nop
 80058d4:	0802d434 	.word	0x0802d434

080058d8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80058d8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80058da:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80058de:	4299      	cmp	r1, r3
{
 80058e0:	4604      	mov	r4, r0
 80058e2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80058e4:	d103      	bne.n	80058ee <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80058e6:	f00f fc43 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80058ea:	f7fe f843 	bl	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80058ee:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80058f2:	429d      	cmp	r5, r3
 80058f4:	d103      	bne.n	80058fe <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80058f6:	f00f fc3b 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80058fa:	f7fe f86b 	bl	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80058fe:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005902:	42a5      	cmp	r5, r4
 8005904:	d105      	bne.n	8005912 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005906:	f00f fc33 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800590a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800590e:	f7fe b8a1 	b.w	8003a54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005912:	bd38      	pop	{r3, r4, r5, pc}

08005914 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005918:	ed2d 8b06 	vpush	{d8-d10}
 800591c:	4604      	mov	r4, r0
 800591e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005920:	46a3      	mov	fp, r4
 8005922:	2500      	movs	r5, #0
 8005924:	f011 f8a4 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8005928:	4b66      	ldr	r3, [pc, #408]	; (8005ac4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800592a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800592c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005930:	2226      	movs	r2, #38	; 0x26
 8005932:	4629      	mov	r1, r5
 8005934:	4658      	mov	r0, fp
 8005936:	f024 fcaa 	bl	802a28e <memset>
 800593a:	4658      	mov	r0, fp
 800593c:	f7fc ff44 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8005940:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005944:	26ff      	movs	r6, #255	; 0xff
 8005946:	4b60      	ldr	r3, [pc, #384]	; (8005ac8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005948:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800594a:	2226      	movs	r2, #38	; 0x26
 800594c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005950:	4629      	mov	r1, r5
 8005952:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005956:	4650      	mov	r0, sl
 8005958:	66a5      	str	r5, [r4, #104]	; 0x68
 800595a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800595e:	f024 fc96 	bl	802a28e <memset>
 8005962:	4650      	mov	r0, sl
 8005964:	f7fc ff30 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8005968:	4b58      	ldr	r3, [pc, #352]	; (8005acc <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800596a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800596c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005970:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005974:	a90a      	add	r1, sp, #40	; 0x28
 8005976:	4650      	mov	r0, sl
 8005978:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800597c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005980:	f00c feed 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005984:	4648      	mov	r0, r9
 8005986:	f7fc ff31 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800598a:	4b51      	ldr	r3, [pc, #324]	; (8005ad0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800598c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005990:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005994:	4618      	mov	r0, r3
 8005996:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800599a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800599e:	ee08 3a90 	vmov	s17, r3
 80059a2:	f7fc ff23 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80059a6:	4638      	mov	r0, r7
 80059a8:	f00b fda2 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 80059ac:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80059b0:	4618      	mov	r0, r3
 80059b2:	9303      	str	r3, [sp, #12]
 80059b4:	f7fb fb46 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80059b8:	4b46      	ldr	r3, [pc, #280]	; (8005ad4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80059ba:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80059be:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80059c2:	3324      	adds	r3, #36	; 0x24
 80059c4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80059c8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80059cc:	4640      	mov	r0, r8
 80059ce:	f7fc ff0d 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80059d2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80059d6:	4618      	mov	r0, r3
 80059d8:	ee08 3a10 	vmov	s16, r3
 80059dc:	f7fc ff06 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80059e0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80059e4:	4618      	mov	r0, r3
 80059e6:	ee09 3a10 	vmov	s18, r3
 80059ea:	f00c fff9 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059ee:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80059f2:	4618      	mov	r0, r3
 80059f4:	ee09 3a90 	vmov	s19, r3
 80059f8:	f00c fff2 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059fc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005a00:	4618      	mov	r0, r3
 8005a02:	ee0a 3a10 	vmov	s20, r3
 8005a06:	f00c ffeb 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005a0a:	4a33      	ldr	r2, [pc, #204]	; (8005ad8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005a0c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005a10:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005a14:	4a31      	ldr	r2, [pc, #196]	; (8005adc <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005a16:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005a1a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005a1e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005a22:	f00d fe99 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005a26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005a2a:	462a      	mov	r2, r5
 8005a2c:	4658      	mov	r0, fp
 8005a2e:	9300      	str	r3, [sp, #0]
 8005a30:	4629      	mov	r1, r5
 8005a32:	23f0      	movs	r3, #240	; 0xf0
 8005a34:	f7fc feb4 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a38:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005a3a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005a3e:	66a3      	str	r3, [r4, #104]	; 0x68
 8005a40:	4659      	mov	r1, fp
 8005a42:	4630      	mov	r0, r6
 8005a44:	f00a f8fc 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005a48:	462a      	mov	r2, r5
 8005a4a:	4650      	mov	r0, sl
 8005a4c:	4629      	mov	r1, r5
 8005a4e:	f7fc fe9a 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005a52:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005a54:	4650      	mov	r0, sl
 8005a56:	a90a      	add	r1, sp, #40	; 0x28
 8005a58:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a5c:	f00c fe7f 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005a60:	4651      	mov	r1, sl
 8005a62:	4630      	mov	r0, r6
 8005a64:	f00a f8ec 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005a68:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005a6c:	2156      	movs	r1, #86	; 0x56
 8005a6e:	4648      	mov	r0, r9
 8005a70:	f7fc fe89 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a74:	f04f 33ff 	mov.w	r3, #4294967295
 8005a78:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005a7c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005a80:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005a84:	f10d 0b10 	add.w	fp, sp, #16
 8005a88:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a8c:	4649      	mov	r1, r9
 8005a8e:	4658      	mov	r0, fp
 8005a90:	4798      	blx	r3
 8005a92:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005a96:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005a9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a9e:	4b10      	ldr	r3, [pc, #64]	; (8005ae0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005aa0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005aa2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005aa6:	b92b      	cbnz	r3, 8005ab4 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005aa8:	4b0e      	ldr	r3, [pc, #56]	; (8005ae4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005aaa:	4a0f      	ldr	r2, [pc, #60]	; (8005ae8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005aac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005aae:	480f      	ldr	r0, [pc, #60]	; (8005aec <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005ab0:	f024 f9e8 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005ab4:	4b0e      	ldr	r3, [pc, #56]	; (8005af0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ab6:	881b      	ldrh	r3, [r3, #0]
 8005ab8:	2b1b      	cmp	r3, #27
 8005aba:	d81d      	bhi.n	8005af8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005abc:	4b0d      	ldr	r3, [pc, #52]	; (8005af4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005abe:	4a0a      	ldr	r2, [pc, #40]	; (8005ae8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005ac0:	2161      	movs	r1, #97	; 0x61
 8005ac2:	e7f4      	b.n	8005aae <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005ac4:	0802d434 	.word	0x0802d434
 8005ac8:	0802e3a8 	.word	0x0802e3a8
 8005acc:	0802e570 	.word	0x0802e570
 8005ad0:	0802ba38 	.word	0x0802ba38
 8005ad4:	0802e0dc 	.word	0x0802e0dc
 8005ad8:	0802d41c 	.word	0x0802d41c
 8005adc:	080058d9 	.word	0x080058d9
 8005ae0:	20012eb4 	.word	0x20012eb4
 8005ae4:	0802b878 	.word	0x0802b878
 8005ae8:	0802b97a 	.word	0x0802b97a
 8005aec:	0802b8f5 	.word	0x0802b8f5
 8005af0:	20012eb8 	.word	0x20012eb8
 8005af4:	0802b93c 	.word	0x0802b93c
        return texts->getText(typedTextId);
 8005af8:	4b95      	ldr	r3, [pc, #596]	; (8005d50 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005afa:	211b      	movs	r1, #27
 8005afc:	6818      	ldr	r0, [r3, #0]
 8005afe:	f002 fb57 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8005b02:	4a94      	ldr	r2, [pc, #592]	; (8005d54 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005b04:	4603      	mov	r3, r0
 8005b06:	2104      	movs	r1, #4
 8005b08:	4650      	mov	r0, sl
 8005b0a:	f012 fca1 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005b0e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005b12:	4648      	mov	r0, r9
 8005b14:	f00c fa28 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b18:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005d58 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005b1c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b20:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005b22:	a90a      	add	r1, sp, #40	; 0x28
 8005b24:	4648      	mov	r0, r9
 8005b26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b2a:	f00c fa3d 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b2e:	4649      	mov	r1, r9
 8005b30:	4630      	mov	r0, r6
 8005b32:	f00a f885 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005b36:	223c      	movs	r2, #60	; 0x3c
 8005b38:	ee18 0a90 	vmov	r0, s17
 8005b3c:	213d      	movs	r1, #61	; 0x3d
 8005b3e:	f7fc fe22 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005b42:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005b46:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005b4a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005b4e:	4658      	mov	r0, fp
        linespace = space;
 8005b50:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005b54:	f00b ff8e 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b58:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005b5c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005b60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b64:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005b66:	ee18 0a90 	vmov	r0, s17
 8005b6a:	a90a      	add	r1, sp, #40	; 0x28
 8005b6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b70:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b74:	f00c fa18 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b78:	ee18 1a90 	vmov	r1, s17
 8005b7c:	4630      	mov	r0, r6
 8005b7e:	f00a f85f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005b82:	230a      	movs	r3, #10
 8005b84:	9300      	str	r3, [sp, #0]
 8005b86:	2232      	movs	r2, #50	; 0x32
 8005b88:	23f0      	movs	r3, #240	; 0xf0
 8005b8a:	4629      	mov	r1, r5
 8005b8c:	4638      	mov	r0, r7
 8005b8e:	f7fc fe07 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b92:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b96:	22a0      	movs	r2, #160	; 0xa0
 8005b98:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005b9c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005ba0:	9b03      	ldr	r3, [sp, #12]
 8005ba2:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005ba6:	4611      	mov	r1, r2
 8005ba8:	4638      	mov	r0, r7
 8005baa:	f00b fdb7 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005bae:	22a0      	movs	r2, #160	; 0xa0
 8005bb0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005bb4:	4638      	mov	r0, r7
 8005bb6:	f00b fdbc 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005bba:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005bbe:	2b20      	cmp	r3, #32
 8005bc0:	d005      	beq.n	8005bce <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005bc2:	2320      	movs	r3, #32
 8005bc4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005bc8:	4638      	mov	r0, r7
 8005bca:	f00b fcb1 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005bce:	4638      	mov	r0, r7
 8005bd0:	2101      	movs	r1, #1
 8005bd2:	f00b fdb9 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005bd6:	4639      	mov	r1, r7
 8005bd8:	4630      	mov	r0, r6
 8005bda:	f00a f831 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005bde:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005be2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005be4:	2223      	movs	r2, #35	; 0x23
 8005be6:	4640      	mov	r0, r8
        linespace = space;
 8005be8:	f04f 0a00 	mov.w	sl, #0
 8005bec:	2145      	movs	r1, #69	; 0x45
 8005bee:	f7fc fdca 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005bf2:	4641      	mov	r1, r8
 8005bf4:	4638      	mov	r0, r7
        color = newColor;
 8005bf6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005bfa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005bfe:	f00b ff39 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c06:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005c0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c0e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005d58 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005c12:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c16:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005c18:	a90a      	add	r1, sp, #40	; 0x28
 8005c1a:	4640      	mov	r0, r8
 8005c1c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c20:	f00c f9c2 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c24:	4641      	mov	r1, r8
 8005c26:	4630      	mov	r0, r6
 8005c28:	f00a f80a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005c2c:	ee18 0a10 	vmov	r0, s16
 8005c30:	220c      	movs	r2, #12
 8005c32:	2136      	movs	r1, #54	; 0x36
 8005c34:	f7fc fda7 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005c38:	ee18 1a10 	vmov	r1, s16
 8005c3c:	4638      	mov	r0, r7
        color = newColor;
 8005c3e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005c42:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005c46:	f00b ff15 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c4a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c4e:	ee18 3a10 	vmov	r3, s16
 8005c52:	333c      	adds	r3, #60	; 0x3c
 8005c54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c58:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005c5a:	ee18 0a10 	vmov	r0, s16
 8005c5e:	a90a      	add	r1, sp, #40	; 0x28
 8005c60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c64:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c68:	f00c f99e 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c6c:	ee18 1a10 	vmov	r1, s16
 8005c70:	4630      	mov	r0, r6
 8005c72:	f009 ffe5 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005c76:	ee19 0a10 	vmov	r0, s18
 8005c7a:	22f0      	movs	r2, #240	; 0xf0
 8005c7c:	2121      	movs	r1, #33	; 0x21
 8005c7e:	f7fc fd82 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005c82:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c86:	aa0a      	add	r2, sp, #40	; 0x28
 8005c88:	f04f 0802 	mov.w	r8, #2
 8005c8c:	a909      	add	r1, sp, #36	; 0x24
 8005c8e:	ee19 0a10 	vmov	r0, s18
 8005c92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005c9a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c9e:	f00c fb68 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005ca2:	234d      	movs	r3, #77	; 0x4d
 8005ca4:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005ca8:	3710      	adds	r7, #16
        updateTextPosition();
 8005caa:	ee19 0a10 	vmov	r0, s18
 8005cae:	f7fc fdbf 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cb2:	ee19 1a10 	vmov	r1, s18
 8005cb6:	4630      	mov	r0, r6
        colorPressed = col;
 8005cb8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005cbc:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005cc0:	f009 ffbe 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005cc4:	ee19 0a90 	vmov	r0, s19
 8005cc8:	22aa      	movs	r2, #170	; 0xaa
 8005cca:	2121      	movs	r1, #33	; 0x21
 8005ccc:	f7fc fd5b 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cd0:	aa0a      	add	r2, sp, #40	; 0x28
 8005cd2:	a909      	add	r1, sp, #36	; 0x24
 8005cd4:	ee19 0a90 	vmov	r0, s19
 8005cd8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005cdc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005ce0:	f00c fb47 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005ce4:	234c      	movs	r3, #76	; 0x4c
 8005ce6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005cea:	ee19 0a90 	vmov	r0, s19
 8005cee:	f7fc fd9f 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cf2:	ee19 1a90 	vmov	r1, s19
 8005cf6:	4630      	mov	r0, r6
        colorPressed = col;
 8005cf8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005cfc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005d00:	f009 ff9e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005d04:	ee1a 0a10 	vmov	r0, s20
 8005d08:	2264      	movs	r2, #100	; 0x64
 8005d0a:	2121      	movs	r1, #33	; 0x21
 8005d0c:	f7fc fd3b 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d10:	aa0a      	add	r2, sp, #40	; 0x28
 8005d12:	a909      	add	r1, sp, #36	; 0x24
 8005d14:	ee1a 0a10 	vmov	r0, s20
 8005d18:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d1c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005d20:	f00c fb27 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d24:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005d26:	ee1a 0a10 	vmov	r0, s20
 8005d2a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005d2e:	f7fc fd7f 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d32:	4630      	mov	r0, r6
        colorPressed = col;
 8005d34:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005d38:	ee1a 1a10 	vmov	r1, s20
 8005d3c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005d40:	f009 ff7e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005d44:	4620      	mov	r0, r4
 8005d46:	b00d      	add	sp, #52	; 0x34
 8005d48:	ecbd 8b06 	vpop	{d8-d10}
 8005d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d50:	20012ec0 	.word	0x20012ec0
 8005d54:	0802b9b2 	.word	0x0802b9b2
 8005d58:	0802ba28 	.word	0x0802ba28

08005d5c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005d5c:	4770      	bx	lr

08005d5e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d5e:	4770      	bx	lr

08005d60 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d60:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d62:	68c2      	ldr	r2, [r0, #12]
 8005d64:	6844      	ldr	r4, [r0, #4]
 8005d66:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d68:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005d6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d6e:	07d2      	lsls	r2, r2, #31
 8005d70:	bf48      	it	mi
 8005d72:	5962      	ldrmi	r2, [r4, r5]
 8005d74:	689b      	ldr	r3, [r3, #8]
    }
 8005d76:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d78:	bf48      	it	mi
 8005d7a:	58d3      	ldrmi	r3, [r2, r3]
 8005d7c:	4718      	bx	r3

08005d7e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005d7e:	6843      	ldr	r3, [r0, #4]
 8005d80:	b12b      	cbz	r3, 8005d8e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005d82:	6883      	ldr	r3, [r0, #8]
 8005d84:	b92b      	cbnz	r3, 8005d92 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005d86:	68c0      	ldr	r0, [r0, #12]
 8005d88:	f000 0001 	and.w	r0, r0, #1
 8005d8c:	4770      	bx	lr
 8005d8e:	4618      	mov	r0, r3
 8005d90:	4770      	bx	lr
 8005d92:	2001      	movs	r0, #1
    }
 8005d94:	4770      	bx	lr

08005d96 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d96:	b510      	push	{r4, lr}
 8005d98:	2110      	movs	r1, #16
 8005d9a:	4604      	mov	r4, r0
 8005d9c:	f023 fa5f 	bl	802925e <_ZdlPvj>
 8005da0:	4620      	mov	r0, r4
 8005da2:	bd10      	pop	{r4, pc}

08005da4 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005da4:	b510      	push	{r4, lr}
 8005da6:	4b03      	ldr	r3, [pc, #12]	; (8005db4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005da8:	6003      	str	r3, [r0, #0]
 8005daa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005dac:	f00d fcde 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005db0:	4620      	mov	r0, r4
 8005db2:	bd10      	pop	{r4, pc}
 8005db4:	0802d480 	.word	0x0802d480

08005db8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005db8:	b507      	push	{r0, r1, r2, lr}
 8005dba:	4b07      	ldr	r3, [pc, #28]	; (8005dd8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005dbc:	6003      	str	r3, [r0, #0]
 8005dbe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005dc0:	f00d fcd4 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005dc4:	9801      	ldr	r0, [sp, #4]
 8005dc6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005dca:	f023 fa48 	bl	802925e <_ZdlPvj>
 8005dce:	9801      	ldr	r0, [sp, #4]
 8005dd0:	b003      	add	sp, #12
 8005dd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8005dd6:	bf00      	nop
 8005dd8:	0802d480 	.word	0x0802d480

08005ddc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005ddc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005dde:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005de2:	4299      	cmp	r1, r3
{
 8005de4:	4604      	mov	r4, r0
 8005de6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005de8:	d103      	bne.n	8005df2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005dea:	f00f f9c1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005dee:	f7fd fde1 	bl	80039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005df2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005df6:	429d      	cmp	r5, r3
 8005df8:	d103      	bne.n	8005e02 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005dfa:	f00f f9b9 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005dfe:	f7fd fe59 	bl	8003ab4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005e02:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005e06:	42a5      	cmp	r5, r4
 8005e08:	d105      	bne.n	8005e16 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005e0a:	f00f f9b1 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005e0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005e12:	f7fd be3f 	b.w	8003a94 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005e16:	bd38      	pop	{r3, r4, r5, pc}

08005e18 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e1c:	ed2d 8b06 	vpush	{d8-d10}
 8005e20:	4604      	mov	r4, r0
 8005e22:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005e24:	46a3      	mov	fp, r4
 8005e26:	2500      	movs	r5, #0
 8005e28:	f010 fe22 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8005e2c:	4b66      	ldr	r3, [pc, #408]	; (8005fc8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005e2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005e30:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005e34:	2226      	movs	r2, #38	; 0x26
 8005e36:	4629      	mov	r1, r5
 8005e38:	4658      	mov	r0, fp
 8005e3a:	f024 fa28 	bl	802a28e <memset>
 8005e3e:	4658      	mov	r0, fp
 8005e40:	f7fc fcc2 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8005e44:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005e48:	26ff      	movs	r6, #255	; 0xff
 8005e4a:	4b60      	ldr	r3, [pc, #384]	; (8005fcc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005e4c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005e4e:	2226      	movs	r2, #38	; 0x26
 8005e50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005e54:	4629      	mov	r1, r5
 8005e56:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005e5a:	4650      	mov	r0, sl
 8005e5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005e5e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e62:	f024 fa14 	bl	802a28e <memset>
 8005e66:	4650      	mov	r0, sl
 8005e68:	f7fc fcae 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8005e6c:	4b58      	ldr	r3, [pc, #352]	; (8005fd0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005e6e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005e70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005e74:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005e78:	a90a      	add	r1, sp, #40	; 0x28
 8005e7a:	4650      	mov	r0, sl
 8005e7c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005e80:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005e84:	f00c fc6b 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005e88:	4648      	mov	r0, r9
 8005e8a:	f7fc fcaf 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005e8e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005e92:	4b50      	ldr	r3, [pc, #320]	; (8005fd4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005e94:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005e98:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005e9c:	4638      	mov	r0, r7
 8005e9e:	f00b fb27 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8005ea2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005ea6:	4618      	mov	r0, r3
 8005ea8:	9303      	str	r3, [sp, #12]
 8005eaa:	f7fb f8cb 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005eae:	4b4a      	ldr	r3, [pc, #296]	; (8005fd8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005eb0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005eb4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005eb8:	3324      	adds	r3, #36	; 0x24
 8005eba:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005ebe:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005ec2:	4640      	mov	r0, r8
 8005ec4:	f7fc fc92 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005ec8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005ecc:	4618      	mov	r0, r3
 8005ece:	ee08 3a10 	vmov	s16, r3
 8005ed2:	f7fc fc8b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005ed6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005eda:	4618      	mov	r0, r3
 8005edc:	ee08 3a90 	vmov	s17, r3
 8005ee0:	f7fc fc84 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8005ee4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005ee8:	4618      	mov	r0, r3
 8005eea:	ee09 3a10 	vmov	s18, r3
 8005eee:	f00c fd77 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ef2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	ee09 3a90 	vmov	s19, r3
 8005efc:	f00c fd70 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f00:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005f04:	4618      	mov	r0, r3
 8005f06:	ee0a 3a10 	vmov	s20, r3
 8005f0a:	f00c fd69 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f0e:	4a33      	ldr	r2, [pc, #204]	; (8005fdc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005f10:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005f14:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005f18:	4a31      	ldr	r2, [pc, #196]	; (8005fe0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005f1a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005f1e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005f22:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005f26:	f00d fc17 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005f2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005f2e:	462a      	mov	r2, r5
 8005f30:	4658      	mov	r0, fp
 8005f32:	9300      	str	r3, [sp, #0]
 8005f34:	4629      	mov	r1, r5
 8005f36:	23f0      	movs	r3, #240	; 0xf0
 8005f38:	f7fc fc32 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f3c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005f3e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005f42:	66a3      	str	r3, [r4, #104]	; 0x68
 8005f44:	4659      	mov	r1, fp
 8005f46:	4630      	mov	r0, r6
 8005f48:	f009 fe7a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005f4c:	462a      	mov	r2, r5
 8005f4e:	4650      	mov	r0, sl
 8005f50:	4629      	mov	r1, r5
 8005f52:	f7fc fc18 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005f56:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005f58:	4650      	mov	r0, sl
 8005f5a:	a90a      	add	r1, sp, #40	; 0x28
 8005f5c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f60:	f00c fbfd 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005f64:	4651      	mov	r1, sl
 8005f66:	4630      	mov	r0, r6
 8005f68:	f009 fe6a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005f6c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005f70:	2156      	movs	r1, #86	; 0x56
 8005f72:	4648      	mov	r0, r9
 8005f74:	f7fc fc07 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8005f78:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005f7c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f80:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005f84:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005f88:	4650      	mov	r0, sl
 8005f8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005f8e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005f92:	4649      	mov	r1, r9
 8005f94:	4798      	blx	r3
 8005f96:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005f9a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005fa2:	4b10      	ldr	r3, [pc, #64]	; (8005fe4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005fa4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005fa6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005faa:	b92b      	cbnz	r3, 8005fb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005fac:	4b0e      	ldr	r3, [pc, #56]	; (8005fe8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005fae:	4a0f      	ldr	r2, [pc, #60]	; (8005fec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005fb0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005fb2:	480f      	ldr	r0, [pc, #60]	; (8005ff0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005fb4:	f023 ff66 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005fb8:	4b0e      	ldr	r3, [pc, #56]	; (8005ff4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005fba:	881b      	ldrh	r3, [r3, #0]
 8005fbc:	2b16      	cmp	r3, #22
 8005fbe:	d81d      	bhi.n	8005ffc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005fc0:	4b0d      	ldr	r3, [pc, #52]	; (8005ff8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005fc2:	4a0a      	ldr	r2, [pc, #40]	; (8005fec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005fc4:	2161      	movs	r1, #97	; 0x61
 8005fc6:	e7f4      	b.n	8005fb2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005fc8:	0802d480 	.word	0x0802d480
 8005fcc:	0802e3a8 	.word	0x0802e3a8
 8005fd0:	0802e570 	.word	0x0802e570
 8005fd4:	0802ba38 	.word	0x0802ba38
 8005fd8:	0802e0dc 	.word	0x0802e0dc
 8005fdc:	0802d468 	.word	0x0802d468
 8005fe0:	08005ddd 	.word	0x08005ddd
 8005fe4:	20012eb4 	.word	0x20012eb4
 8005fe8:	0802b878 	.word	0x0802b878
 8005fec:	0802b97a 	.word	0x0802b97a
 8005ff0:	0802b8f5 	.word	0x0802b8f5
 8005ff4:	20012eb8 	.word	0x20012eb8
 8005ff8:	0802b93c 	.word	0x0802b93c
        return texts->getText(typedTextId);
 8005ffc:	4b93      	ldr	r3, [pc, #588]	; (800624c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005ffe:	2116      	movs	r1, #22
 8006000:	6818      	ldr	r0, [r3, #0]
 8006002:	f002 f8d5 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8006006:	4a92      	ldr	r2, [pc, #584]	; (8006250 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006008:	4603      	mov	r3, r0
 800600a:	2104      	movs	r1, #4
 800600c:	4650      	mov	r0, sl
 800600e:	f012 fa1f 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006012:	4648      	mov	r0, r9
        wc1 = value;
 8006014:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006018:	f00b ffa6 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800601c:	4b8d      	ldr	r3, [pc, #564]	; (8006254 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800601e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006020:	a90a      	add	r1, sp, #40	; 0x28
 8006022:	2317      	movs	r3, #23
 8006024:	4648      	mov	r0, r9
 8006026:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800602a:	f00b ffbd 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800602e:	4649      	mov	r1, r9
 8006030:	4630      	mov	r0, r6
 8006032:	f009 fe05 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006036:	230a      	movs	r3, #10
 8006038:	9300      	str	r3, [sp, #0]
 800603a:	2232      	movs	r2, #50	; 0x32
 800603c:	23f0      	movs	r3, #240	; 0xf0
 800603e:	4629      	mov	r1, r5
 8006040:	4638      	mov	r0, r7
 8006042:	f7fc fbad 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006046:	9b03      	ldr	r3, [sp, #12]
 8006048:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800604c:	22a0      	movs	r2, #160	; 0xa0
 800604e:	4611      	mov	r1, r2
 8006050:	4638      	mov	r0, r7
 8006052:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006056:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800605a:	f00b fb5f 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800605e:	22a0      	movs	r2, #160	; 0xa0
 8006060:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006064:	4638      	mov	r0, r7
 8006066:	f00b fb64 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800606a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800606e:	2b20      	cmp	r3, #32
 8006070:	d005      	beq.n	800607e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006072:	2320      	movs	r3, #32
 8006074:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006078:	4638      	mov	r0, r7
 800607a:	f00b fa59 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800607e:	4638      	mov	r0, r7
 8006080:	2101      	movs	r1, #1
 8006082:	f00b fb61 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006086:	4639      	mov	r1, r7
 8006088:	4630      	mov	r0, r6
 800608a:	ad04      	add	r5, sp, #16
        color = newColor;
 800608c:	f04f 37ff 	mov.w	r7, #4294967295
 8006090:	f009 fdd6 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006094:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006098:	2223      	movs	r2, #35	; 0x23
 800609a:	4640      	mov	r0, r8
 800609c:	2145      	movs	r1, #69	; 0x45
 800609e:	f7fc fb72 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80060a2:	4641      	mov	r1, r8
 80060a4:	4628      	mov	r0, r5
        color = newColor;
 80060a6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80060aa:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80060ae:	f00b fce1 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060b6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80060ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060be:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 80060c2:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8006254 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80060c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80060ca:	a90a      	add	r1, sp, #40	; 0x28
 80060cc:	4640      	mov	r0, r8
 80060ce:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060d2:	f00b ff69 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060d6:	4641      	mov	r1, r8
 80060d8:	4630      	mov	r0, r6
 80060da:	f009 fdb1 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80060de:	ee18 0a10 	vmov	r0, s16
 80060e2:	220c      	movs	r2, #12
 80060e4:	2136      	movs	r1, #54	; 0x36
 80060e6:	f7fc fb4e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80060ea:	ee18 1a10 	vmov	r1, s16
 80060ee:	4628      	mov	r0, r5
        color = newColor;
 80060f0:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80060f4:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80060f8:	f00b fcbc 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006100:	ee18 3a10 	vmov	r3, s16
 8006104:	445b      	add	r3, fp
 8006106:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800610a:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800610c:	ee18 0a10 	vmov	r0, s16
 8006110:	a90a      	add	r1, sp, #40	; 0x28
 8006112:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006116:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800611a:	f00b ff45 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800611e:	ee18 1a10 	vmov	r1, s16
 8006122:	4630      	mov	r0, r6
 8006124:	f009 fd8c 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006128:	465a      	mov	r2, fp
 800612a:	ee18 0a90 	vmov	r0, s17
 800612e:	2121      	movs	r1, #33	; 0x21
 8006130:	f7fc fb29 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006134:	ee18 1a90 	vmov	r1, s17
 8006138:	4628      	mov	r0, r5
        color = newColor;
 800613a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800613e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006142:	f00b fc97 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006146:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800614a:	ee18 3a90 	vmov	r3, s17
 800614e:	445b      	add	r3, fp
 8006150:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006154:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006156:	ee18 0a90 	vmov	r0, s17
 800615a:	a90a      	add	r1, sp, #40	; 0x28
 800615c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006160:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006164:	f00b ff20 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006168:	ee18 1a90 	vmov	r1, s17
 800616c:	4630      	mov	r0, r6
 800616e:	f009 fd67 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006172:	ee19 0a10 	vmov	r0, s18
 8006176:	22f0      	movs	r2, #240	; 0xf0
 8006178:	2121      	movs	r1, #33	; 0x21
 800617a:	f7fc fb04 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800617e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006182:	aa0a      	add	r2, sp, #40	; 0x28
 8006184:	f04f 0802 	mov.w	r8, #2
 8006188:	a909      	add	r1, sp, #36	; 0x24
 800618a:	ee19 0a10 	vmov	r0, s18
 800618e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006192:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006196:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800619a:	f00c f8ea 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800619e:	233a      	movs	r3, #58	; 0x3a
 80061a0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80061a4:	3510      	adds	r5, #16
        updateTextPosition();
 80061a6:	ee19 0a10 	vmov	r0, s18
 80061aa:	f7fc fb41 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061ae:	ee19 1a10 	vmov	r1, s18
 80061b2:	4630      	mov	r0, r6
        colorPressed = col;
 80061b4:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80061b8:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80061bc:	f009 fd40 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80061c0:	ee19 0a90 	vmov	r0, s19
 80061c4:	22aa      	movs	r2, #170	; 0xaa
 80061c6:	2121      	movs	r1, #33	; 0x21
 80061c8:	f7fc fadd 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061cc:	aa0a      	add	r2, sp, #40	; 0x28
 80061ce:	a909      	add	r1, sp, #36	; 0x24
 80061d0:	ee19 0a90 	vmov	r0, s19
 80061d4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80061d8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80061dc:	f00c f8c9 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061e0:	2339      	movs	r3, #57	; 0x39
 80061e2:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80061e6:	ee19 0a90 	vmov	r0, s19
 80061ea:	f7fc fb21 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061ee:	ee19 1a90 	vmov	r1, s19
 80061f2:	4630      	mov	r0, r6
        colorPressed = col;
 80061f4:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80061f8:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80061fc:	f009 fd20 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006200:	ee1a 0a10 	vmov	r0, s20
 8006204:	2264      	movs	r2, #100	; 0x64
 8006206:	2121      	movs	r1, #33	; 0x21
 8006208:	f7fc fabd 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800620c:	aa0a      	add	r2, sp, #40	; 0x28
 800620e:	a909      	add	r1, sp, #36	; 0x24
 8006210:	ee1a 0a10 	vmov	r0, s20
 8006214:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006218:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800621c:	f00c f8a9 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006220:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006222:	ee1a 0a10 	vmov	r0, s20
 8006226:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800622a:	f7fc fb01 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800622e:	4630      	mov	r0, r6
        colorPressed = col;
 8006230:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006234:	ee1a 1a10 	vmov	r1, s20
 8006238:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800623c:	f009 fd00 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006240:	4620      	mov	r0, r4
 8006242:	b00d      	add	sp, #52	; 0x34
 8006244:	ecbd 8b06 	vpop	{d8-d10}
 8006248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800624c:	20012ec0 	.word	0x20012ec0
 8006250:	0802b9b2 	.word	0x0802b9b2
 8006254:	0802ba28 	.word	0x0802ba28

08006258 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006258:	4770      	bx	lr

0800625a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800625a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800625c:	68c2      	ldr	r2, [r0, #12]
 800625e:	6844      	ldr	r4, [r0, #4]
 8006260:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006262:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006264:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006268:	07d2      	lsls	r2, r2, #31
 800626a:	bf48      	it	mi
 800626c:	5962      	ldrmi	r2, [r4, r5]
 800626e:	689b      	ldr	r3, [r3, #8]
    }
 8006270:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006272:	bf48      	it	mi
 8006274:	58d3      	ldrmi	r3, [r2, r3]
 8006276:	4718      	bx	r3

08006278 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006278:	6843      	ldr	r3, [r0, #4]
 800627a:	b12b      	cbz	r3, 8006288 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800627c:	6883      	ldr	r3, [r0, #8]
 800627e:	b92b      	cbnz	r3, 800628c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006280:	68c0      	ldr	r0, [r0, #12]
 8006282:	f000 0001 	and.w	r0, r0, #1
 8006286:	4770      	bx	lr
 8006288:	4618      	mov	r0, r3
 800628a:	4770      	bx	lr
 800628c:	2001      	movs	r0, #1
    }
 800628e:	4770      	bx	lr

08006290 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006290:	b510      	push	{r4, lr}
 8006292:	2110      	movs	r1, #16
 8006294:	4604      	mov	r4, r0
 8006296:	f022 ffe2 	bl	802925e <_ZdlPvj>
 800629a:	4620      	mov	r0, r4
 800629c:	bd10      	pop	{r4, pc}

0800629e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800629e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80062a2:	f002 b8cd 	b.w	8008440 <_ZN17Gauge_with_Values10initializeEv>

080062a6 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80062a6:	3098      	adds	r0, #152	; 0x98
 80062a8:	4288      	cmp	r0, r1
{
 80062aa:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80062ac:	d105      	bne.n	80062ba <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80062ae:	f00e ff5f 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80062b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80062b6:	f7fd bbdd 	b.w	8003a74 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80062ba:	bd08      	pop	{r3, pc}

080062bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80062bc:	b510      	push	{r4, lr}
 80062be:	4b07      	ldr	r3, [pc, #28]	; (80062dc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80062c0:	6003      	str	r3, [r0, #0]
 80062c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80062c4:	f00d fa52 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80062c8:	4b05      	ldr	r3, [pc, #20]	; (80062e0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80062ca:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80062ce:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80062d2:	f7fe fe25 	bl	8004f20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80062d6:	4620      	mov	r0, r4
 80062d8:	bd10      	pop	{r4, pc}
 80062da:	bf00      	nop
 80062dc:	0802d4cc 	.word	0x0802d4cc
 80062e0:	0802da24 	.word	0x0802da24

080062e4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80062e4:	b510      	push	{r4, lr}
 80062e6:	4604      	mov	r4, r0
}
 80062e8:	f7ff ffe8 	bl	80062bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80062ec:	4620      	mov	r0, r4
 80062ee:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80062f2:	f022 ffb4 	bl	802925e <_ZdlPvj>
 80062f6:	4620      	mov	r0, r4
 80062f8:	bd10      	pop	{r4, pc}
	...

080062fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80062fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006300:	ed2d 8b04 	vpush	{d8-d9}
 8006304:	4604      	mov	r4, r0
 8006306:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006308:	46a1      	mov	r9, r4
 800630a:	2500      	movs	r5, #0
 800630c:	f010 fbb0 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8006310:	4bac      	ldr	r3, [pc, #688]	; (80065c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 8006312:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006314:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006318:	2226      	movs	r2, #38	; 0x26
 800631a:	4629      	mov	r1, r5
 800631c:	4648      	mov	r0, r9
 800631e:	f023 ffb6 	bl	802a28e <memset>
 8006322:	4648      	mov	r0, r9
 8006324:	f7fc fa50 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006328:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800632c:	26ff      	movs	r6, #255	; 0xff
 800632e:	4ba6      	ldr	r3, [pc, #664]	; (80065c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006330:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006332:	2226      	movs	r2, #38	; 0x26
 8006334:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006338:	4629      	mov	r1, r5
 800633a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800633e:	4640      	mov	r0, r8
 8006340:	66a5      	str	r5, [r4, #104]	; 0x68
 8006342:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006346:	f023 ffa2 	bl	802a28e <memset>
 800634a:	4640      	mov	r0, r8
 800634c:	f7fc fa3c 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006350:	4b9e      	ldr	r3, [pc, #632]	; (80065cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8006352:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006354:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006358:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800635c:	a90a      	add	r1, sp, #40	; 0x28
 800635e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006360:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006364:	f00c f9fb 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006368:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800636c:	4618      	mov	r0, r3
 800636e:	ee08 3a10 	vmov	s16, r3
 8006372:	f00c fb35 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006376:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800637a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800637e:	4618      	mov	r0, r3
 8006380:	ee08 3a90 	vmov	s17, r3
 8006384:	f7fc fa32 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006388:	4638      	mov	r0, r7
 800638a:	f00b f8b1 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 800638e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006392:	4618      	mov	r0, r3
 8006394:	9303      	str	r3, [sp, #12]
 8006396:	f7fa fe55 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800639a:	4b8d      	ldr	r3, [pc, #564]	; (80065d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 800639c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80063a0:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80063a4:	3324      	adds	r3, #36	; 0x24
 80063a6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80063aa:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80063ae:	4658      	mov	r0, fp
 80063b0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80063b4:	f7fc fa1a 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80063b8:	4650      	mov	r0, sl
 80063ba:	f7fc fa17 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80063be:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80063c2:	4618      	mov	r0, r3
 80063c4:	ee09 3a10 	vmov	s18, r3
 80063c8:	f002 f830 	bl	800842c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80063cc:	4a81      	ldr	r2, [pc, #516]	; (80065d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80063ce:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80063d2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80063d6:	4a80      	ldr	r2, [pc, #512]	; (80065d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80063d8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80063dc:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80063e0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80063e4:	f00d f9b8 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80063e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80063ec:	462a      	mov	r2, r5
 80063ee:	4648      	mov	r0, r9
 80063f0:	9300      	str	r3, [sp, #0]
 80063f2:	4629      	mov	r1, r5
 80063f4:	23f0      	movs	r3, #240	; 0xf0
 80063f6:	f7fc f9d3 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063fa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80063fc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006400:	66a3      	str	r3, [r4, #104]	; 0x68
 8006402:	4649      	mov	r1, r9
 8006404:	4630      	mov	r0, r6
 8006406:	f009 fc1b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800640a:	462a      	mov	r2, r5
 800640c:	4640      	mov	r0, r8
 800640e:	4629      	mov	r1, r5
 8006410:	f7fc f9b9 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006414:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006416:	4640      	mov	r0, r8
 8006418:	a90a      	add	r1, sp, #40	; 0x28
 800641a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800641e:	f00c f99e 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006422:	4641      	mov	r1, r8
 8006424:	4630      	mov	r0, r6
 8006426:	f009 fc0b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800642a:	ee18 0a10 	vmov	r0, s16
 800642e:	f240 1201 	movw	r2, #257	; 0x101
 8006432:	2121      	movs	r1, #33	; 0x21
 8006434:	f7fc f9a7 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006438:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800643a:	aa0a      	add	r2, sp, #40	; 0x28
 800643c:	a909      	add	r1, sp, #36	; 0x24
 800643e:	ee18 0a10 	vmov	r0, s16
 8006442:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006446:	2302      	movs	r3, #2
 8006448:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800644c:	f00b ff91 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006450:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 8006452:	ee18 0a10 	vmov	r0, s16
 8006456:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800645a:	f7fc f9e9 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800645e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006462:	3314      	adds	r3, #20
        color = col;
 8006464:	f04f 39ff 	mov.w	r9, #4294967295
 8006468:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800646c:	ee18 1a10 	vmov	r1, s16
 8006470:	4630      	mov	r0, r6
        colorPressed = col;
 8006472:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006476:	f009 fbe3 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800647a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800647e:	223c      	movs	r2, #60	; 0x3c
 8006480:	ee18 0a90 	vmov	r0, s17
 8006484:	2117      	movs	r1, #23
 8006486:	f7fc f97e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800648a:	ee18 1a90 	vmov	r1, s17
 800648e:	4640      	mov	r0, r8
        color = newColor;
 8006490:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006494:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006498:	f00b faec 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800649c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80064a0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80064a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80064a8:	4b4c      	ldr	r3, [pc, #304]	; (80065dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80064aa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80064ac:	ee18 0a90 	vmov	r0, s17
 80064b0:	2322      	movs	r3, #34	; 0x22
 80064b2:	a90a      	add	r1, sp, #40	; 0x28
 80064b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064b8:	f00b fd76 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064bc:	ee18 1a90 	vmov	r1, s17
 80064c0:	4630      	mov	r0, r6
 80064c2:	f009 fbbd 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80064c6:	230a      	movs	r3, #10
 80064c8:	9300      	str	r3, [sp, #0]
 80064ca:	2232      	movs	r2, #50	; 0x32
 80064cc:	23f0      	movs	r3, #240	; 0xf0
 80064ce:	4629      	mov	r1, r5
 80064d0:	4638      	mov	r0, r7
 80064d2:	f7fc f965 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064d6:	9b03      	ldr	r3, [sp, #12]
 80064d8:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064dc:	22a0      	movs	r2, #160	; 0xa0
 80064de:	4611      	mov	r1, r2
 80064e0:	4638      	mov	r0, r7
 80064e2:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80064e6:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80064ea:	f00b f917 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064ee:	22a0      	movs	r2, #160	; 0xa0
 80064f0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80064f4:	4638      	mov	r0, r7
 80064f6:	f00b f91c 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80064fa:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80064fe:	2b20      	cmp	r3, #32
 8006500:	d005      	beq.n	800650e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006502:	2320      	movs	r3, #32
 8006504:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006508:	4638      	mov	r0, r7
 800650a:	f00b f811 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800650e:	4638      	mov	r0, r7
 8006510:	2101      	movs	r1, #1
 8006512:	f00b f919 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006516:	4639      	mov	r1, r7
 8006518:	4630      	mov	r0, r6
 800651a:	f009 fb91 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800651e:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006520:	2223      	movs	r2, #35	; 0x23
 8006522:	4658      	mov	r0, fp
        color = newColor;
 8006524:	f04f 39ff 	mov.w	r9, #4294967295
 8006528:	2145      	movs	r1, #69	; 0x45
 800652a:	f7fc f92c 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800652e:	4659      	mov	r1, fp
 8006530:	4640      	mov	r0, r8
        color = newColor;
 8006532:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006536:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800653a:	f00b fa9b 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800653e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006542:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006546:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800654a:	4f24      	ldr	r7, [pc, #144]	; (80065dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800654c:	970a      	str	r7, [sp, #40]	; 0x28
 800654e:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006550:	a90a      	add	r1, sp, #40	; 0x28
 8006552:	4658      	mov	r0, fp
 8006554:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006558:	f00b fd26 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800655c:	4659      	mov	r1, fp
 800655e:	4630      	mov	r0, r6
 8006560:	f009 fb6e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006564:	220c      	movs	r2, #12
 8006566:	4650      	mov	r0, sl
 8006568:	2136      	movs	r1, #54	; 0x36
 800656a:	f7fc f90c 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800656e:	4651      	mov	r1, sl
 8006570:	4640      	mov	r0, r8
        color = newColor;
 8006572:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006576:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800657a:	f00b fa7b 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800657e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006582:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006586:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800658a:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 800658c:	a90a      	add	r1, sp, #40	; 0x28
 800658e:	4650      	mov	r0, sl
 8006590:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006594:	970a      	str	r7, [sp, #40]	; 0x28
 8006596:	f00b fd07 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800659a:	4651      	mov	r1, sl
 800659c:	4630      	mov	r0, r6
 800659e:	f009 fb4f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80065a2:	ee19 0a10 	vmov	r0, s18
 80065a6:	224e      	movs	r2, #78	; 0x4e
 80065a8:	4629      	mov	r1, r5
 80065aa:	f7fc f8ec 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80065ae:	4630      	mov	r0, r6
 80065b0:	ee19 1a10 	vmov	r1, s18
 80065b4:	f009 fb44 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80065b8:	4620      	mov	r0, r4
 80065ba:	b00d      	add	sp, #52	; 0x34
 80065bc:	ecbd 8b04 	vpop	{d8-d9}
 80065c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065c4:	0802d4cc 	.word	0x0802d4cc
 80065c8:	0802e3a8 	.word	0x0802e3a8
 80065cc:	0802e570 	.word	0x0802e570
 80065d0:	0802e0dc 	.word	0x0802e0dc
 80065d4:	0802d4b4 	.word	0x0802d4b4
 80065d8:	080062a7 	.word	0x080062a7
 80065dc:	0802ba28 	.word	0x0802ba28

080065e0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065e0:	4770      	bx	lr

080065e2 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80065e2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065e4:	68c2      	ldr	r2, [r0, #12]
 80065e6:	6844      	ldr	r4, [r0, #4]
 80065e8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80065ea:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80065ec:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80065f0:	07d2      	lsls	r2, r2, #31
 80065f2:	bf48      	it	mi
 80065f4:	5962      	ldrmi	r2, [r4, r5]
 80065f6:	689b      	ldr	r3, [r3, #8]
    }
 80065f8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065fa:	bf48      	it	mi
 80065fc:	58d3      	ldrmi	r3, [r2, r3]
 80065fe:	4718      	bx	r3

08006600 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006600:	6843      	ldr	r3, [r0, #4]
 8006602:	b12b      	cbz	r3, 8006610 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006604:	6883      	ldr	r3, [r0, #8]
 8006606:	b92b      	cbnz	r3, 8006614 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006608:	68c0      	ldr	r0, [r0, #12]
 800660a:	f000 0001 	and.w	r0, r0, #1
 800660e:	4770      	bx	lr
 8006610:	4618      	mov	r0, r3
 8006612:	4770      	bx	lr
 8006614:	2001      	movs	r0, #1
    }
 8006616:	4770      	bx	lr

08006618 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006618:	b510      	push	{r4, lr}
 800661a:	2110      	movs	r1, #16
 800661c:	4604      	mov	r4, r0
 800661e:	f022 fe1e 	bl	802925e <_ZdlPvj>
 8006622:	4620      	mov	r0, r4
 8006624:	bd10      	pop	{r4, pc}

08006626 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006626:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800662a:	f001 bf09 	b.w	8008440 <_ZN17Gauge_with_Values10initializeEv>

0800662e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800662e:	3098      	adds	r0, #152	; 0x98
 8006630:	4288      	cmp	r0, r1
{
 8006632:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006634:	d105      	bne.n	8006642 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006636:	f00e fd9b 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800663a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800663e:	f7fd ba19 	b.w	8003a74 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006642:	bd08      	pop	{r3, pc}

08006644 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006644:	b510      	push	{r4, lr}
 8006646:	4b07      	ldr	r3, [pc, #28]	; (8006664 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006648:	6003      	str	r3, [r0, #0]
 800664a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800664c:	f00d f88e 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006650:	4b05      	ldr	r3, [pc, #20]	; (8006668 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8006652:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006656:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800665a:	f7fe fc61 	bl	8004f20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800665e:	4620      	mov	r0, r4
 8006660:	bd10      	pop	{r4, pc}
 8006662:	bf00      	nop
 8006664:	0802d518 	.word	0x0802d518
 8006668:	0802da24 	.word	0x0802da24

0800666c <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800666c:	b510      	push	{r4, lr}
 800666e:	4604      	mov	r4, r0
}
 8006670:	f7ff ffe8 	bl	8006644 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8006674:	4620      	mov	r0, r4
 8006676:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800667a:	f022 fdf0 	bl	802925e <_ZdlPvj>
 800667e:	4620      	mov	r0, r4
 8006680:	bd10      	pop	{r4, pc}
	...

08006684 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006688:	ed2d 8b04 	vpush	{d8-d9}
 800668c:	4604      	mov	r4, r0
 800668e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006690:	46a1      	mov	r9, r4
 8006692:	2500      	movs	r5, #0
 8006694:	f010 f9ec 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8006698:	4bac      	ldr	r3, [pc, #688]	; (800694c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800669a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800669c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80066a0:	2226      	movs	r2, #38	; 0x26
 80066a2:	4629      	mov	r1, r5
 80066a4:	4648      	mov	r0, r9
 80066a6:	f023 fdf2 	bl	802a28e <memset>
 80066aa:	4648      	mov	r0, r9
 80066ac:	f7fc f88c 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80066b0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80066b4:	26ff      	movs	r6, #255	; 0xff
 80066b6:	4ba6      	ldr	r3, [pc, #664]	; (8006950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80066b8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80066ba:	2226      	movs	r2, #38	; 0x26
 80066bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066c0:	4629      	mov	r1, r5
 80066c2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80066c6:	4640      	mov	r0, r8
 80066c8:	66a5      	str	r5, [r4, #104]	; 0x68
 80066ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066ce:	f023 fdde 	bl	802a28e <memset>
 80066d2:	4640      	mov	r0, r8
 80066d4:	f7fc f878 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80066d8:	4b9e      	ldr	r3, [pc, #632]	; (8006954 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80066da:	66e3      	str	r3, [r4, #108]	; 0x6c
 80066dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80066e0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80066e4:	a90a      	add	r1, sp, #40	; 0x28
 80066e6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80066e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80066ec:	f00c f837 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80066f0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80066f4:	4618      	mov	r0, r3
 80066f6:	ee08 3a10 	vmov	s16, r3
 80066fa:	f00c f971 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80066fe:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006702:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006706:	4618      	mov	r0, r3
 8006708:	ee08 3a90 	vmov	s17, r3
 800670c:	f7fc f86e 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006710:	4638      	mov	r0, r7
 8006712:	f00a feed 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8006716:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800671a:	4618      	mov	r0, r3
 800671c:	9303      	str	r3, [sp, #12]
 800671e:	f7fa fc91 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006722:	4b8d      	ldr	r3, [pc, #564]	; (8006958 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006724:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006728:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800672c:	3324      	adds	r3, #36	; 0x24
 800672e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006732:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006736:	4658      	mov	r0, fp
 8006738:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800673c:	f7fc f856 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006740:	4650      	mov	r0, sl
 8006742:	f7fc f853 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006746:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800674a:	4618      	mov	r0, r3
 800674c:	ee09 3a10 	vmov	s18, r3
 8006750:	f001 fe6c 	bl	800842c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006754:	4a81      	ldr	r2, [pc, #516]	; (800695c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 8006756:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800675a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800675e:	4a80      	ldr	r2, [pc, #512]	; (8006960 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006760:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006764:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006768:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800676c:	f00c fff4 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006770:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006774:	462a      	mov	r2, r5
 8006776:	4648      	mov	r0, r9
 8006778:	9300      	str	r3, [sp, #0]
 800677a:	4629      	mov	r1, r5
 800677c:	23f0      	movs	r3, #240	; 0xf0
 800677e:	f7fc f80f 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006782:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006784:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006788:	66a3      	str	r3, [r4, #104]	; 0x68
 800678a:	4649      	mov	r1, r9
 800678c:	4630      	mov	r0, r6
 800678e:	f009 fa57 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006792:	462a      	mov	r2, r5
 8006794:	4640      	mov	r0, r8
 8006796:	4629      	mov	r1, r5
 8006798:	f7fb fff5 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800679c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800679e:	4640      	mov	r0, r8
 80067a0:	a90a      	add	r1, sp, #40	; 0x28
 80067a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067a6:	f00b ffda 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80067aa:	4641      	mov	r1, r8
 80067ac:	4630      	mov	r0, r6
 80067ae:	f009 fa47 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80067b2:	ee18 0a10 	vmov	r0, s16
 80067b6:	f240 1201 	movw	r2, #257	; 0x101
 80067ba:	2121      	movs	r1, #33	; 0x21
 80067bc:	f7fb ffe3 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80067c0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067c2:	aa0a      	add	r2, sp, #40	; 0x28
 80067c4:	a909      	add	r1, sp, #36	; 0x24
 80067c6:	ee18 0a10 	vmov	r0, s16
 80067ca:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80067ce:	2302      	movs	r3, #2
 80067d0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067d4:	f00b fdcd 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80067d8:	231d      	movs	r3, #29
        updateTextPosition();
 80067da:	ee18 0a10 	vmov	r0, s16
 80067de:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80067e2:	f7fc f825 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80067e6:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80067ea:	3314      	adds	r3, #20
        color = col;
 80067ec:	f04f 39ff 	mov.w	r9, #4294967295
 80067f0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80067f4:	ee18 1a10 	vmov	r1, s16
 80067f8:	4630      	mov	r0, r6
        colorPressed = col;
 80067fa:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80067fe:	f009 fa1f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006802:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006806:	223c      	movs	r2, #60	; 0x3c
 8006808:	ee18 0a90 	vmov	r0, s17
 800680c:	2117      	movs	r1, #23
 800680e:	f7fb ffba 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006812:	ee18 1a90 	vmov	r1, s17
 8006816:	4640      	mov	r0, r8
        color = newColor;
 8006818:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800681c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006820:	f00b f928 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006824:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006828:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800682c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006830:	4b4c      	ldr	r3, [pc, #304]	; (8006964 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006832:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006834:	ee18 0a90 	vmov	r0, s17
 8006838:	231e      	movs	r3, #30
 800683a:	a90a      	add	r1, sp, #40	; 0x28
 800683c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006840:	f00b fbb2 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006844:	ee18 1a90 	vmov	r1, s17
 8006848:	4630      	mov	r0, r6
 800684a:	f009 f9f9 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800684e:	230a      	movs	r3, #10
 8006850:	9300      	str	r3, [sp, #0]
 8006852:	2232      	movs	r2, #50	; 0x32
 8006854:	23f0      	movs	r3, #240	; 0xf0
 8006856:	4629      	mov	r1, r5
 8006858:	4638      	mov	r0, r7
 800685a:	f7fb ffa1 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800685e:	9b03      	ldr	r3, [sp, #12]
 8006860:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006864:	22a0      	movs	r2, #160	; 0xa0
 8006866:	4611      	mov	r1, r2
 8006868:	4638      	mov	r0, r7
 800686a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800686e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006872:	f00a ff53 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006876:	22a0      	movs	r2, #160	; 0xa0
 8006878:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800687c:	4638      	mov	r0, r7
 800687e:	f00a ff58 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006882:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006886:	2b20      	cmp	r3, #32
 8006888:	d005      	beq.n	8006896 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800688a:	2320      	movs	r3, #32
 800688c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006890:	4638      	mov	r0, r7
 8006892:	f00a fe4d 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006896:	4638      	mov	r0, r7
 8006898:	2101      	movs	r1, #1
 800689a:	f00a ff55 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800689e:	4639      	mov	r1, r7
 80068a0:	4630      	mov	r0, r6
 80068a2:	f009 f9cd 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80068a6:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80068a8:	2223      	movs	r2, #35	; 0x23
 80068aa:	4658      	mov	r0, fp
        color = newColor;
 80068ac:	f04f 39ff 	mov.w	r9, #4294967295
 80068b0:	2145      	movs	r1, #69	; 0x45
 80068b2:	f7fb ff68 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80068b6:	4659      	mov	r1, fp
 80068b8:	4640      	mov	r0, r8
        color = newColor;
 80068ba:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80068be:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80068c2:	f00b f8d7 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068c6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80068ca:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80068ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068d2:	4f24      	ldr	r7, [pc, #144]	; (8006964 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80068d4:	970a      	str	r7, [sp, #40]	; 0x28
 80068d6:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80068d8:	a90a      	add	r1, sp, #40	; 0x28
 80068da:	4658      	mov	r0, fp
 80068dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068e0:	f00b fb62 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068e4:	4659      	mov	r1, fp
 80068e6:	4630      	mov	r0, r6
 80068e8:	f009 f9aa 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80068ec:	220c      	movs	r2, #12
 80068ee:	4650      	mov	r0, sl
 80068f0:	2136      	movs	r1, #54	; 0x36
 80068f2:	f7fb ff48 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80068f6:	4651      	mov	r1, sl
 80068f8:	4640      	mov	r0, r8
        color = newColor;
 80068fa:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80068fe:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006902:	f00b f8b7 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006906:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800690a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800690e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006912:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006914:	a90a      	add	r1, sp, #40	; 0x28
 8006916:	4650      	mov	r0, sl
 8006918:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800691c:	970a      	str	r7, [sp, #40]	; 0x28
 800691e:	f00b fb43 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006922:	4651      	mov	r1, sl
 8006924:	4630      	mov	r0, r6
 8006926:	f009 f98b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800692a:	ee19 0a10 	vmov	r0, s18
 800692e:	224e      	movs	r2, #78	; 0x4e
 8006930:	4629      	mov	r1, r5
 8006932:	f7fb ff28 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006936:	4630      	mov	r0, r6
 8006938:	ee19 1a10 	vmov	r1, s18
 800693c:	f009 f980 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006940:	4620      	mov	r0, r4
 8006942:	b00d      	add	sp, #52	; 0x34
 8006944:	ecbd 8b04 	vpop	{d8-d9}
 8006948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800694c:	0802d518 	.word	0x0802d518
 8006950:	0802e3a8 	.word	0x0802e3a8
 8006954:	0802e570 	.word	0x0802e570
 8006958:	0802e0dc 	.word	0x0802e0dc
 800695c:	0802d500 	.word	0x0802d500
 8006960:	0800662f 	.word	0x0800662f
 8006964:	0802ba28 	.word	0x0802ba28

08006968 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006968:	4770      	bx	lr

0800696a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800696a:	4770      	bx	lr

0800696c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800696c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800696e:	68c2      	ldr	r2, [r0, #12]
 8006970:	6844      	ldr	r4, [r0, #4]
 8006972:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006974:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006976:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800697a:	07d2      	lsls	r2, r2, #31
 800697c:	bf48      	it	mi
 800697e:	5962      	ldrmi	r2, [r4, r5]
 8006980:	689b      	ldr	r3, [r3, #8]
    }
 8006982:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006984:	bf48      	it	mi
 8006986:	58d3      	ldrmi	r3, [r2, r3]
 8006988:	4718      	bx	r3

0800698a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800698a:	6843      	ldr	r3, [r0, #4]
 800698c:	b12b      	cbz	r3, 800699a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800698e:	6883      	ldr	r3, [r0, #8]
 8006990:	b92b      	cbnz	r3, 800699e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006992:	68c0      	ldr	r0, [r0, #12]
 8006994:	f000 0001 	and.w	r0, r0, #1
 8006998:	4770      	bx	lr
 800699a:	4618      	mov	r0, r3
 800699c:	4770      	bx	lr
 800699e:	2001      	movs	r0, #1
    }
 80069a0:	4770      	bx	lr

080069a2 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80069a2:	b510      	push	{r4, lr}
 80069a4:	2110      	movs	r1, #16
 80069a6:	4604      	mov	r4, r0
 80069a8:	f022 fc59 	bl	802925e <_ZdlPvj>
 80069ac:	4620      	mov	r0, r4
 80069ae:	bd10      	pop	{r4, pc}

080069b0 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80069b0:	b510      	push	{r4, lr}
 80069b2:	4b03      	ldr	r3, [pc, #12]	; (80069c0 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80069b4:	6003      	str	r3, [r0, #0]
 80069b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80069b8:	f00c fed8 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80069bc:	4620      	mov	r0, r4
 80069be:	bd10      	pop	{r4, pc}
 80069c0:	0802d564 	.word	0x0802d564

080069c4 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80069c4:	b507      	push	{r0, r1, r2, lr}
 80069c6:	4b07      	ldr	r3, [pc, #28]	; (80069e4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80069c8:	6003      	str	r3, [r0, #0]
 80069ca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80069cc:	f00c fece 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80069d0:	9801      	ldr	r0, [sp, #4]
 80069d2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80069d6:	f022 fc42 	bl	802925e <_ZdlPvj>
 80069da:	9801      	ldr	r0, [sp, #4]
 80069dc:	b003      	add	sp, #12
 80069de:	f85d fb04 	ldr.w	pc, [sp], #4
 80069e2:	bf00      	nop
 80069e4:	0802d564 	.word	0x0802d564

080069e8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80069e8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80069ea:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80069ee:	4299      	cmp	r1, r3
{
 80069f0:	4604      	mov	r4, r0
 80069f2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80069f4:	d103      	bne.n	80069fe <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80069f6:	f00e fbbb 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80069fa:	f7fc ffdb 	bl	80039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80069fe:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006a02:	429d      	cmp	r5, r3
 8006a04:	d103      	bne.n	8006a0e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006a06:	f00e fbb3 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006a0a:	f7fd f803 	bl	8003a14 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006a0e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006a12:	42a5      	cmp	r5, r4
 8006a14:	d105      	bne.n	8006a22 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006a16:	f00e fbab 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006a1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006a1e:	f7fd b809 	b.w	8003a34 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006a22:	bd38      	pop	{r3, r4, r5, pc}

08006a24 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a28:	ed2d 8b06 	vpush	{d8-d10}
 8006a2c:	4604      	mov	r4, r0
 8006a2e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006a30:	46a3      	mov	fp, r4
 8006a32:	2500      	movs	r5, #0
 8006a34:	f010 f81c 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8006a38:	4b66      	ldr	r3, [pc, #408]	; (8006bd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006a3a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006a3c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006a40:	2226      	movs	r2, #38	; 0x26
 8006a42:	4629      	mov	r1, r5
 8006a44:	4658      	mov	r0, fp
 8006a46:	f023 fc22 	bl	802a28e <memset>
 8006a4a:	4658      	mov	r0, fp
 8006a4c:	f7fb febc 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006a50:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006a54:	26ff      	movs	r6, #255	; 0xff
 8006a56:	4b60      	ldr	r3, [pc, #384]	; (8006bd8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006a58:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006a5a:	2226      	movs	r2, #38	; 0x26
 8006a5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006a60:	4629      	mov	r1, r5
 8006a62:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006a66:	4650      	mov	r0, sl
 8006a68:	66a5      	str	r5, [r4, #104]	; 0x68
 8006a6a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a6e:	f023 fc0e 	bl	802a28e <memset>
 8006a72:	4650      	mov	r0, sl
 8006a74:	f7fb fea8 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006a78:	4b58      	ldr	r3, [pc, #352]	; (8006bdc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006a7a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006a7c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006a80:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006a84:	a90a      	add	r1, sp, #40	; 0x28
 8006a86:	4650      	mov	r0, sl
 8006a88:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006a8c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006a90:	f00b fe65 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006a94:	4648      	mov	r0, r9
 8006a96:	f7fb fea9 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006a9a:	4b51      	ldr	r3, [pc, #324]	; (8006be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006a9c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006aa0:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006aa4:	4618      	mov	r0, r3
 8006aa6:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006aaa:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006aae:	ee08 3a90 	vmov	s17, r3
 8006ab2:	f7fb fe9b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006ab6:	4638      	mov	r0, r7
 8006ab8:	f00a fd1a 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8006abc:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	9303      	str	r3, [sp, #12]
 8006ac4:	f7fa fabe 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006ac8:	4b46      	ldr	r3, [pc, #280]	; (8006be4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006aca:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006ace:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006ad2:	3324      	adds	r3, #36	; 0x24
 8006ad4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006ad8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006adc:	4640      	mov	r0, r8
 8006ade:	f7fb fe85 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006ae2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006ae6:	4618      	mov	r0, r3
 8006ae8:	ee08 3a10 	vmov	s16, r3
 8006aec:	f7fb fe7e 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006af0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006af4:	4618      	mov	r0, r3
 8006af6:	ee09 3a10 	vmov	s18, r3
 8006afa:	f00b ff71 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006afe:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006b02:	4618      	mov	r0, r3
 8006b04:	ee09 3a90 	vmov	s19, r3
 8006b08:	f00b ff6a 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b0c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006b10:	4618      	mov	r0, r3
 8006b12:	ee0a 3a10 	vmov	s20, r3
 8006b16:	f00b ff63 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006b1a:	4a33      	ldr	r2, [pc, #204]	; (8006be8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006b1c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006b20:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006b24:	4a31      	ldr	r2, [pc, #196]	; (8006bec <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006b26:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006b2a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006b2e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006b32:	f00c fe11 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006b36:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006b3a:	462a      	mov	r2, r5
 8006b3c:	4658      	mov	r0, fp
 8006b3e:	9300      	str	r3, [sp, #0]
 8006b40:	4629      	mov	r1, r5
 8006b42:	23f0      	movs	r3, #240	; 0xf0
 8006b44:	f7fb fe2c 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b48:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006b4a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006b4e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006b50:	4659      	mov	r1, fp
 8006b52:	4630      	mov	r0, r6
 8006b54:	f009 f874 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006b58:	462a      	mov	r2, r5
 8006b5a:	4650      	mov	r0, sl
 8006b5c:	4629      	mov	r1, r5
 8006b5e:	f7fb fe12 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006b62:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006b64:	4650      	mov	r0, sl
 8006b66:	a90a      	add	r1, sp, #40	; 0x28
 8006b68:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b6c:	f00b fdf7 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b70:	4651      	mov	r1, sl
 8006b72:	4630      	mov	r0, r6
 8006b74:	f009 f864 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006b78:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006b7c:	2156      	movs	r1, #86	; 0x56
 8006b7e:	4648      	mov	r0, r9
 8006b80:	f7fb fe01 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b84:	f04f 33ff 	mov.w	r3, #4294967295
 8006b88:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006b8c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006b90:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006b94:	f10d 0b10 	add.w	fp, sp, #16
 8006b98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006b9c:	4649      	mov	r1, r9
 8006b9e:	4658      	mov	r0, fp
 8006ba0:	4798      	blx	r3
 8006ba2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006ba6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006baa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006bae:	4b10      	ldr	r3, [pc, #64]	; (8006bf0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006bb0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006bb2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006bb6:	b92b      	cbnz	r3, 8006bc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006bb8:	4b0e      	ldr	r3, [pc, #56]	; (8006bf4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006bba:	4a0f      	ldr	r2, [pc, #60]	; (8006bf8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006bbc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006bbe:	480f      	ldr	r0, [pc, #60]	; (8006bfc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006bc0:	f023 f960 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006bc4:	4b0e      	ldr	r3, [pc, #56]	; (8006c00 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006bc6:	881b      	ldrh	r3, [r3, #0]
 8006bc8:	2b18      	cmp	r3, #24
 8006bca:	d81d      	bhi.n	8006c08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006bcc:	4b0d      	ldr	r3, [pc, #52]	; (8006c04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006bce:	4a0a      	ldr	r2, [pc, #40]	; (8006bf8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006bd0:	2161      	movs	r1, #97	; 0x61
 8006bd2:	e7f4      	b.n	8006bbe <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006bd4:	0802d564 	.word	0x0802d564
 8006bd8:	0802e3a8 	.word	0x0802e3a8
 8006bdc:	0802e570 	.word	0x0802e570
 8006be0:	0802ba38 	.word	0x0802ba38
 8006be4:	0802e0dc 	.word	0x0802e0dc
 8006be8:	0802d54c 	.word	0x0802d54c
 8006bec:	080069e9 	.word	0x080069e9
 8006bf0:	20012eb4 	.word	0x20012eb4
 8006bf4:	0802b878 	.word	0x0802b878
 8006bf8:	0802b97a 	.word	0x0802b97a
 8006bfc:	0802b8f5 	.word	0x0802b8f5
 8006c00:	20012eb8 	.word	0x20012eb8
 8006c04:	0802b93c 	.word	0x0802b93c
        return texts->getText(typedTextId);
 8006c08:	4b96      	ldr	r3, [pc, #600]	; (8006e64 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006c0a:	2118      	movs	r1, #24
 8006c0c:	6818      	ldr	r0, [r3, #0]
 8006c0e:	f001 facf 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8006c12:	4a95      	ldr	r2, [pc, #596]	; (8006e68 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006c14:	4603      	mov	r3, r0
 8006c16:	2104      	movs	r1, #4
 8006c18:	4650      	mov	r0, sl
 8006c1a:	f011 fc19 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006c1e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006c22:	4648      	mov	r0, r9
 8006c24:	f00b f9a0 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006c28:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006e6c <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006c2c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006c30:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006c32:	a90a      	add	r1, sp, #40	; 0x28
 8006c34:	4648      	mov	r0, r9
 8006c36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c3a:	f00b f9b5 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c3e:	4649      	mov	r1, r9
 8006c40:	4630      	mov	r0, r6
 8006c42:	f008 fffd 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006c46:	223c      	movs	r2, #60	; 0x3c
 8006c48:	ee18 0a90 	vmov	r0, s17
 8006c4c:	2129      	movs	r1, #41	; 0x29
 8006c4e:	f7fb fd9a 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006c52:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006c56:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006c5a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006c5e:	4658      	mov	r0, fp
        linespace = space;
 8006c60:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006c64:	f00a ff06 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c68:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006c6c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006c70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c74:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006c76:	eb0d 0103 	add.w	r1, sp, r3
 8006c7a:	ee18 0a90 	vmov	r0, s17
 8006c7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c82:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006c86:	f00b f98f 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c8a:	ee18 1a90 	vmov	r1, s17
 8006c8e:	4630      	mov	r0, r6
 8006c90:	f008 ffd6 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c94:	230a      	movs	r3, #10
 8006c96:	9300      	str	r3, [sp, #0]
 8006c98:	2232      	movs	r2, #50	; 0x32
 8006c9a:	23f0      	movs	r3, #240	; 0xf0
 8006c9c:	4629      	mov	r1, r5
 8006c9e:	4638      	mov	r0, r7
 8006ca0:	f7fb fd7e 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ca4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ca8:	22a0      	movs	r2, #160	; 0xa0
 8006caa:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006cae:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006cb2:	9b03      	ldr	r3, [sp, #12]
 8006cb4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006cb8:	4611      	mov	r1, r2
 8006cba:	4638      	mov	r0, r7
 8006cbc:	f00a fd2e 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cc0:	22a0      	movs	r2, #160	; 0xa0
 8006cc2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006cc6:	4638      	mov	r0, r7
 8006cc8:	f00a fd33 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006ccc:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006cd0:	2b20      	cmp	r3, #32
 8006cd2:	d005      	beq.n	8006ce0 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006cd4:	2320      	movs	r3, #32
 8006cd6:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006cda:	4638      	mov	r0, r7
 8006cdc:	f00a fc28 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ce0:	4638      	mov	r0, r7
 8006ce2:	2101      	movs	r1, #1
 8006ce4:	f00a fd30 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006ce8:	4639      	mov	r1, r7
 8006cea:	4630      	mov	r0, r6
 8006cec:	f008 ffa8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006cf0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006cf4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006cf6:	2223      	movs	r2, #35	; 0x23
 8006cf8:	4640      	mov	r0, r8
        linespace = space;
 8006cfa:	f04f 0a00 	mov.w	sl, #0
 8006cfe:	2145      	movs	r1, #69	; 0x45
 8006d00:	f7fb fd41 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006d04:	4641      	mov	r1, r8
 8006d06:	4638      	mov	r0, r7
        color = newColor;
 8006d08:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006d0c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006d10:	f00a feb0 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d14:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d18:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006d1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d20:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006e6c <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006d24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006d28:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006d2a:	a90a      	add	r1, sp, #40	; 0x28
 8006d2c:	4640      	mov	r0, r8
 8006d2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d32:	f00b f939 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d36:	4641      	mov	r1, r8
 8006d38:	4630      	mov	r0, r6
 8006d3a:	f008 ff81 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d3e:	ee18 0a10 	vmov	r0, s16
 8006d42:	220c      	movs	r2, #12
 8006d44:	2136      	movs	r1, #54	; 0x36
 8006d46:	f7fb fd1e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006d4a:	ee18 1a10 	vmov	r1, s16
 8006d4e:	4638      	mov	r0, r7
        color = newColor;
 8006d50:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006d54:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006d58:	f00a fe8c 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d5c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d60:	ee18 3a10 	vmov	r3, s16
 8006d64:	333c      	adds	r3, #60	; 0x3c
 8006d66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d6a:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006d6c:	ee18 0a10 	vmov	r0, s16
 8006d70:	a90a      	add	r1, sp, #40	; 0x28
 8006d72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d76:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006d7a:	f00b f915 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d7e:	ee18 1a10 	vmov	r1, s16
 8006d82:	4630      	mov	r0, r6
 8006d84:	f008 ff5c 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006d88:	ee19 0a10 	vmov	r0, s18
 8006d8c:	22f0      	movs	r2, #240	; 0xf0
 8006d8e:	2121      	movs	r1, #33	; 0x21
 8006d90:	f7fb fcf9 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8006d94:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d98:	aa0a      	add	r2, sp, #40	; 0x28
 8006d9a:	f04f 0802 	mov.w	r8, #2
 8006d9e:	a909      	add	r1, sp, #36	; 0x24
 8006da0:	ee19 0a10 	vmov	r0, s18
 8006da4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006da8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006dac:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006db0:	f00b fadf 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006db4:	233f      	movs	r3, #63	; 0x3f
 8006db6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006dba:	3710      	adds	r7, #16
        updateTextPosition();
 8006dbc:	ee19 0a10 	vmov	r0, s18
 8006dc0:	f7fb fd36 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006dc4:	ee19 1a10 	vmov	r1, s18
 8006dc8:	4630      	mov	r0, r6
        colorPressed = col;
 8006dca:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006dce:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006dd2:	f008 ff35 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006dd6:	ee19 0a90 	vmov	r0, s19
 8006dda:	22aa      	movs	r2, #170	; 0xaa
 8006ddc:	2121      	movs	r1, #33	; 0x21
 8006dde:	f7fb fcd2 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006de2:	aa0a      	add	r2, sp, #40	; 0x28
 8006de4:	a909      	add	r1, sp, #36	; 0x24
 8006de6:	ee19 0a90 	vmov	r0, s19
 8006dea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006dee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006df2:	f00b fabe 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006df6:	233e      	movs	r3, #62	; 0x3e
 8006df8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006dfc:	ee19 0a90 	vmov	r0, s19
 8006e00:	f7fb fd16 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e04:	ee19 1a90 	vmov	r1, s19
 8006e08:	4630      	mov	r0, r6
        colorPressed = col;
 8006e0a:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006e0e:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006e12:	f008 ff15 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006e16:	ee1a 0a10 	vmov	r0, s20
 8006e1a:	2264      	movs	r2, #100	; 0x64
 8006e1c:	2121      	movs	r1, #33	; 0x21
 8006e1e:	f7fb fcb2 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e22:	aa0a      	add	r2, sp, #40	; 0x28
 8006e24:	a909      	add	r1, sp, #36	; 0x24
 8006e26:	ee1a 0a10 	vmov	r0, s20
 8006e2a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e2e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006e32:	f00b fa9e 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e36:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006e38:	ee1a 0a10 	vmov	r0, s20
 8006e3c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006e40:	f7fb fcf6 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e44:	4630      	mov	r0, r6
        colorPressed = col;
 8006e46:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006e4a:	ee1a 1a10 	vmov	r1, s20
 8006e4e:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006e52:	f008 fef5 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e56:	4620      	mov	r0, r4
 8006e58:	b00d      	add	sp, #52	; 0x34
 8006e5a:	ecbd 8b06 	vpop	{d8-d10}
 8006e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e62:	bf00      	nop
 8006e64:	20012ec0 	.word	0x20012ec0
 8006e68:	0802b9b2 	.word	0x0802b9b2
 8006e6c:	0802ba28 	.word	0x0802ba28

08006e70 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006e70:	4770      	bx	lr

08006e72 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006e72:	4770      	bx	lr

08006e74 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e74:	4770      	bx	lr

08006e76 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006e76:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e78:	68c2      	ldr	r2, [r0, #12]
 8006e7a:	6844      	ldr	r4, [r0, #4]
 8006e7c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006e7e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006e80:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006e84:	07d2      	lsls	r2, r2, #31
 8006e86:	bf48      	it	mi
 8006e88:	5962      	ldrmi	r2, [r4, r5]
 8006e8a:	689b      	ldr	r3, [r3, #8]
    }
 8006e8c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e8e:	bf48      	it	mi
 8006e90:	58d3      	ldrmi	r3, [r2, r3]
 8006e92:	4718      	bx	r3

08006e94 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e94:	6843      	ldr	r3, [r0, #4]
 8006e96:	b12b      	cbz	r3, 8006ea4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e98:	6883      	ldr	r3, [r0, #8]
 8006e9a:	b92b      	cbnz	r3, 8006ea8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e9c:	68c0      	ldr	r0, [r0, #12]
 8006e9e:	f000 0001 	and.w	r0, r0, #1
 8006ea2:	4770      	bx	lr
 8006ea4:	4618      	mov	r0, r3
 8006ea6:	4770      	bx	lr
 8006ea8:	2001      	movs	r0, #1
    }
 8006eaa:	4770      	bx	lr

08006eac <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eac:	b510      	push	{r4, lr}
 8006eae:	2110      	movs	r1, #16
 8006eb0:	4604      	mov	r4, r0
 8006eb2:	f022 f9d4 	bl	802925e <_ZdlPvj>
 8006eb6:	4620      	mov	r0, r4
 8006eb8:	bd10      	pop	{r4, pc}
	...

08006ebc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006ebc:	b510      	push	{r4, lr}
 8006ebe:	4b03      	ldr	r3, [pc, #12]	; (8006ecc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006ec0:	6003      	str	r3, [r0, #0]
 8006ec2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ec4:	f00c fc52 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ec8:	4620      	mov	r0, r4
 8006eca:	bd10      	pop	{r4, pc}
 8006ecc:	0802d5b0 	.word	0x0802d5b0

08006ed0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006ed0:	b507      	push	{r0, r1, r2, lr}
 8006ed2:	4b07      	ldr	r3, [pc, #28]	; (8006ef0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006ed4:	6003      	str	r3, [r0, #0]
 8006ed6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ed8:	f00c fc48 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006edc:	9801      	ldr	r0, [sp, #4]
 8006ede:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006ee2:	f022 f9bc 	bl	802925e <_ZdlPvj>
 8006ee6:	9801      	ldr	r0, [sp, #4]
 8006ee8:	b003      	add	sp, #12
 8006eea:	f85d fb04 	ldr.w	pc, [sp], #4
 8006eee:	bf00      	nop
 8006ef0:	0802d5b0 	.word	0x0802d5b0

08006ef4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006ef4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006ef6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006efa:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006efe:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006f00:	2a0a      	cmp	r2, #10
    frameCountInteraction2Interval++;
 8006f02:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006f06:	d105      	bne.n	8006f14 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006f08:	6803      	ldr	r3, [r0, #0]
 8006f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f0c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006f0e:	2300      	movs	r3, #0
 8006f10:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006f14:	bd10      	pop	{r4, pc}

08006f16 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006f16:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006f1a:	4288      	cmp	r0, r1
{
 8006f1c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f1e:	d105      	bne.n	8006f2c <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f20:	f00e f926 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006f24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006f28:	f7fc bd54 	b.w	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006f2c:	bd08      	pop	{r3, pc}
	...

08006f30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f34:	ed2d 8b0a 	vpush	{d8-d12}
 8006f38:	4604      	mov	r4, r0
 8006f3a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006f3c:	46a1      	mov	r9, r4
 8006f3e:	2500      	movs	r5, #0
 8006f40:	f00f fd96 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8006f44:	4ba9      	ldr	r3, [pc, #676]	; (80071ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006f46:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f48:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f4c:	2226      	movs	r2, #38	; 0x26
 8006f4e:	4629      	mov	r1, r5
 8006f50:	4648      	mov	r0, r9
 8006f52:	f023 f99c 	bl	802a28e <memset>
 8006f56:	4648      	mov	r0, r9
 8006f58:	f7fb fc36 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006f5c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f60:	26ff      	movs	r6, #255	; 0xff
 8006f62:	4ba3      	ldr	r3, [pc, #652]	; (80071f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006f64:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f66:	2226      	movs	r2, #38	; 0x26
 8006f68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f6c:	4629      	mov	r1, r5
 8006f6e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f72:	4640      	mov	r0, r8
 8006f74:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f76:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f7a:	f023 f988 	bl	802a28e <memset>
 8006f7e:	4640      	mov	r0, r8
 8006f80:	f7fb fc22 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8006f84:	4b9b      	ldr	r3, [pc, #620]	; (80071f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8006f86:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006f90:	a90a      	add	r1, sp, #40	; 0x28
 8006f92:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006f96:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006f98:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006f9c:	f00b fbdf 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fa0:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006fa4:	4658      	mov	r0, fp
 8006fa6:	f7fb fc21 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006faa:	4638      	mov	r0, r7
 8006fac:	f00b f89a 	bl	80120e4 <_ZN8touchgfx5GaugeC1Ev>
 8006fb0:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006fb4:	4618      	mov	r0, r3
 8006fb6:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006fba:	4e8f      	ldr	r6, [pc, #572]	; (80071f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8006fbc:	f7fb fc16 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006fc0:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006fc4:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006fc8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006fca:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006fce:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006fd2:	f7fb fc0b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006fd6:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006fda:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006fde:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006fe0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006fe4:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006fe8:	f7fb fc00 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8006fec:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006ff0:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006ff4:	4618      	mov	r0, r3
 8006ff6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006ffa:	ee0a 3a90 	vmov	s21, r3
 8006ffe:	f7fb fbf5 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007002:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007006:	4618      	mov	r0, r3
 8007008:	ee0b 3a10 	vmov	s22, r3
 800700c:	f7fb fbee 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007010:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007014:	4618      	mov	r0, r3
 8007016:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 800701a:	ee0b 3a90 	vmov	s23, r3
 800701e:	f7fb fbe5 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007022:	4650      	mov	r0, sl
 8007024:	f00a fa64 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8007028:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800702c:	4618      	mov	r0, r3
 800702e:	9303      	str	r3, [sp, #12]
 8007030:	f7fa f808 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007034:	4b71      	ldr	r3, [pc, #452]	; (80071fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007036:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800703a:	3324      	adds	r3, #36	; 0x24
 800703c:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007040:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007044:	4618      	mov	r0, r3
 8007046:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800704a:	ee08 3a10 	vmov	s16, r3
 800704e:	f7fb fbcd 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007052:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007056:	4618      	mov	r0, r3
 8007058:	ee08 3a90 	vmov	s17, r3
 800705c:	f7fb fbc6 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007060:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007064:	4618      	mov	r0, r3
 8007066:	ee0c 3a10 	vmov	s24, r3
 800706a:	f00b fcb9 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800706e:	4a64      	ldr	r2, [pc, #400]	; (8007200 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007070:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007074:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007078:	4a62      	ldr	r2, [pc, #392]	; (8007204 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 800707a:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800707e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007082:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007086:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800708a:	f00c fb65 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800708e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007092:	462a      	mov	r2, r5
 8007094:	4648      	mov	r0, r9
 8007096:	9300      	str	r3, [sp, #0]
 8007098:	4629      	mov	r1, r5
 800709a:	23f0      	movs	r3, #240	; 0xf0
 800709c:	f7fb fb80 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80070a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80070a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80070a8:	4649      	mov	r1, r9
 80070aa:	4630      	mov	r0, r6
 80070ac:	f008 fdc8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80070b0:	462a      	mov	r2, r5
 80070b2:	4640      	mov	r0, r8
 80070b4:	4629      	mov	r1, r5
 80070b6:	f7fb fb66 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80070ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80070bc:	4640      	mov	r0, r8
 80070be:	a90a      	add	r1, sp, #40	; 0x28
 80070c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070c4:	f00b fb4b 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80070c8:	4641      	mov	r1, r8
 80070ca:	4630      	mov	r0, r6
 80070cc:	f008 fdb8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80070d0:	223c      	movs	r2, #60	; 0x3c
 80070d2:	211f      	movs	r1, #31
 80070d4:	4658      	mov	r0, fp
 80070d6:	f7fb fb56 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80070da:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 80070de:	f04f 33ff 	mov.w	r3, #4294967295
 80070e2:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80070e6:	4659      	mov	r1, fp
 80070e8:	4640      	mov	r0, r8
        linespace = space;
 80070ea:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80070ee:	f00a fcc1 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070f6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80070fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070fe:	4b42      	ldr	r3, [pc, #264]	; (8007208 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007100:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007102:	a90a      	add	r1, sp, #40	; 0x28
 8007104:	2327      	movs	r3, #39	; 0x27
 8007106:	4658      	mov	r0, fp
 8007108:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800710c:	f00a ff4c 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007110:	4659      	mov	r1, fp
 8007112:	4630      	mov	r0, r6
 8007114:	f008 fd94 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007118:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800711c:	4638      	mov	r0, r7
 800711e:	a90a      	add	r1, sp, #40	; 0x28
 8007120:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007124:	f008 fd1e 	bl	800fb64 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007128:	236a      	movs	r3, #106	; 0x6a
 800712a:	4638      	mov	r0, r7
 800712c:	9300      	str	r3, [sp, #0]
 800712e:	225e      	movs	r2, #94	; 0x5e
 8007130:	23b8      	movs	r3, #184	; 0xb8
 8007132:	211c      	movs	r1, #28
 8007134:	f7fb fb34 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007138:	225c      	movs	r2, #92	; 0x5c
 800713a:	4611      	mov	r1, r2
 800713c:	4638      	mov	r0, r7
 800713e:	f00b f87c 	bl	801223a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007142:	4638      	mov	r0, r7
 8007144:	225a      	movs	r2, #90	; 0x5a
 8007146:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800714a:	f00b f8fb 	bl	8012344 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800714e:	462b      	mov	r3, r5
 8007150:	225a      	movs	r2, #90	; 0x5a
 8007152:	4638      	mov	r0, r7
 8007154:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007158:	9500      	str	r5, [sp, #0]
 800715a:	f008 fbb0 	bl	800f8be <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800715e:	4638      	mov	r0, r7
 8007160:	4629      	mov	r1, r5
 8007162:	f00b f899 	bl	8012298 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007166:	2335      	movs	r3, #53	; 0x35
 8007168:	2208      	movs	r2, #8
 800716a:	4638      	mov	r0, r7
 800716c:	2105      	movs	r1, #5
 800716e:	f00b f84f 	bl	8012210 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007172:	4638      	mov	r0, r7
 8007174:	2101      	movs	r1, #1
 8007176:	f00a ffed 	bl	8012154 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800717a:	4638      	mov	r0, r7
 800717c:	2101      	movs	r1, #1
 800717e:	f00a ffec 	bl	801215a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007182:	4639      	mov	r1, r7
 8007184:	4630      	mov	r0, r6
 8007186:	f008 fd5b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800718a:	230f      	movs	r3, #15
 800718c:	22e6      	movs	r2, #230	; 0xe6
 800718e:	ee19 0a10 	vmov	r0, s18
 8007192:	9300      	str	r3, [sp, #0]
 8007194:	4629      	mov	r1, r5
 8007196:	23f0      	movs	r3, #240	; 0xf0
 8007198:	f7fb fb02 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800719c:	f04f 33ff 	mov.w	r3, #4294967295
 80071a0:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80071a4:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80071a8:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80071ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071b0:	4f16      	ldr	r7, [pc, #88]	; (800720c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80071b2:	ee19 1a10 	vmov	r1, s18
 80071b6:	4640      	mov	r0, r8
 80071b8:	4798      	blx	r3
 80071ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071be:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80071c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071c6:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80071c8:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 80071cc:	b92b      	cbnz	r3, 80071da <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 80071ce:	4b10      	ldr	r3, [pc, #64]	; (8007210 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80071d0:	4a10      	ldr	r2, [pc, #64]	; (8007214 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80071d2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80071d4:	4810      	ldr	r0, [pc, #64]	; (8007218 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80071d6:	f022 fe55 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80071da:	f8df b044 	ldr.w	fp, [pc, #68]	; 8007220 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80071de:	f8bb 3000 	ldrh.w	r3, [fp]
 80071e2:	b9fb      	cbnz	r3, 8007224 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 80071e4:	4b0d      	ldr	r3, [pc, #52]	; (800721c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80071e6:	4a0b      	ldr	r2, [pc, #44]	; (8007214 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80071e8:	2161      	movs	r1, #97	; 0x61
 80071ea:	e7f3      	b.n	80071d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
 80071ec:	0802d5b0 	.word	0x0802d5b0
 80071f0:	0802e3a8 	.word	0x0802e3a8
 80071f4:	0802e570 	.word	0x0802e570
 80071f8:	0802ba38 	.word	0x0802ba38
 80071fc:	0802e0dc 	.word	0x0802e0dc
 8007200:	0802d598 	.word	0x0802d598
 8007204:	08006f17 	.word	0x08006f17
 8007208:	0802ba28 	.word	0x0802ba28
 800720c:	20012eb4 	.word	0x20012eb4
 8007210:	0802b878 	.word	0x0802b878
 8007214:	0802b97a 	.word	0x0802b97a
 8007218:	0802b8f5 	.word	0x0802b8f5
 800721c:	0802b93c 	.word	0x0802b93c
 8007220:	20012eb8 	.word	0x20012eb8
        return texts->getText(typedTextId);
 8007224:	4bdf      	ldr	r3, [pc, #892]	; (80075a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007226:	4629      	mov	r1, r5
 8007228:	6818      	ldr	r0, [r3, #0]
 800722a:	f000 ffc1 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 800722e:	4ade      	ldr	r2, [pc, #888]	; (80075a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007230:	4603      	mov	r3, r0
 8007232:	210a      	movs	r1, #10
 8007234:	4648      	mov	r0, r9
 8007236:	f011 f90b 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800723a:	4bdc      	ldr	r3, [pc, #880]	; (80075ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        wc1 = value;
 800723c:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007240:	ee19 0a10 	vmov	r0, s18
 8007244:	930a      	str	r3, [sp, #40]	; 0x28
 8007246:	a90a      	add	r1, sp, #40	; 0x28
 8007248:	2303      	movs	r3, #3
 800724a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800724e:	f00a feab 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007252:	ee19 1a10 	vmov	r1, s18
 8007256:	4630      	mov	r0, r6
 8007258:	f008 fcf2 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 800725c:	210f      	movs	r1, #15
 800725e:	22d7      	movs	r2, #215	; 0xd7
 8007260:	ee19 0a90 	vmov	r0, s19
 8007264:	9100      	str	r1, [sp, #0]
 8007266:	23f0      	movs	r3, #240	; 0xf0
 8007268:	4629      	mov	r1, r5
 800726a:	f7fb fa99 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800726e:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007272:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007276:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800727a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800727e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007282:	4640      	mov	r0, r8
 8007284:	ee19 1a90 	vmov	r1, s19
 8007288:	4798      	blx	r3
 800728a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800728e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007292:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007296:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007298:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 800729c:	2b00      	cmp	r3, #0
 800729e:	d096      	beq.n	80071ce <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072a0:	f8bb 3000 	ldrh.w	r3, [fp]
 80072a4:	2b01      	cmp	r3, #1
 80072a6:	d99d      	bls.n	80071e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 80072a8:	4abe      	ldr	r2, [pc, #760]	; (80075a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80072aa:	2101      	movs	r1, #1
 80072ac:	6810      	ldr	r0, [r2, #0]
 80072ae:	f000 ff7f 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 80072b2:	4abd      	ldr	r2, [pc, #756]	; (80075a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80072b4:	4603      	mov	r3, r0
 80072b6:	210a      	movs	r1, #10
 80072b8:	4648      	mov	r0, r9
 80072ba:	f011 f8c9 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80072be:	f04f 0104 	mov.w	r1, #4
 80072c2:	4bba      	ldr	r3, [pc, #744]	; (80075ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 80072c4:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80072c8:	ee19 0a90 	vmov	r0, s19
 80072cc:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80072d0:	a90a      	add	r1, sp, #40	; 0x28
 80072d2:	930a      	str	r3, [sp, #40]	; 0x28
 80072d4:	f00a fe68 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072d8:	ee19 1a90 	vmov	r1, s19
 80072dc:	4630      	mov	r0, r6
 80072de:	f008 fcaf 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80072e2:	210f      	movs	r1, #15
 80072e4:	22c8      	movs	r2, #200	; 0xc8
 80072e6:	ee1a 0a10 	vmov	r0, s20
 80072ea:	9100      	str	r1, [sp, #0]
 80072ec:	23f0      	movs	r3, #240	; 0xf0
 80072ee:	4629      	mov	r1, r5
 80072f0:	f7fb fa56 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072f4:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80072f8:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80072fc:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007300:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007304:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007308:	4640      	mov	r0, r8
 800730a:	ee1a 1a10 	vmov	r1, s20
 800730e:	4798      	blx	r3
 8007310:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007314:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007318:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800731c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800731e:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007322:	2b00      	cmp	r3, #0
 8007324:	f43f af53 	beq.w	80071ce <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007328:	f8bb 3000 	ldrh.w	r3, [fp]
 800732c:	2b02      	cmp	r3, #2
 800732e:	f67f af59 	bls.w	80071e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8007332:	4a9c      	ldr	r2, [pc, #624]	; (80075a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
        : typedTextId(id)
 8007334:	4f9d      	ldr	r7, [pc, #628]	; (80075ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        return texts->getText(typedTextId);
 8007336:	6810      	ldr	r0, [r2, #0]
 8007338:	2102      	movs	r1, #2
 800733a:	f000 ff39 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 800733e:	4a9a      	ldr	r2, [pc, #616]	; (80075a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007340:	4603      	mov	r3, r0
 8007342:	210a      	movs	r1, #10
 8007344:	4648      	mov	r0, r9
 8007346:	f011 f883 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800734a:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800734c:	ee1a 0a10 	vmov	r0, s20
 8007350:	a90a      	add	r1, sp, #40	; 0x28
 8007352:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007356:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800735a:	970a      	str	r7, [sp, #40]	; 0x28
 800735c:	f00a fe24 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007360:	ee1a 1a10 	vmov	r1, s20
 8007364:	4630      	mov	r0, r6
 8007366:	f008 fc6b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800736a:	224c      	movs	r2, #76	; 0x4c
 800736c:	ee1a 0a90 	vmov	r0, s21
 8007370:	2171      	movs	r1, #113	; 0x71
 8007372:	f7fb fa08 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007376:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800737a:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800737e:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007382:	4640      	mov	r0, r8
        linespace = space;
 8007384:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007388:	f00a fb74 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800738c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007390:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007394:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007398:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800739a:	ee1a 0a90 	vmov	r0, s21
 800739e:	a90a      	add	r1, sp, #40	; 0x28
 80073a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073a4:	970a      	str	r7, [sp, #40]	; 0x28
 80073a6:	f00a fdff 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073aa:	ee1a 1a90 	vmov	r1, s21
 80073ae:	4630      	mov	r0, r6
 80073b0:	f008 fc46 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80073b4:	22b9      	movs	r2, #185	; 0xb9
 80073b6:	ee1b 0a10 	vmov	r0, s22
 80073ba:	4629      	mov	r1, r5
 80073bc:	f7fb f9e3 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80073c0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80073c4:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80073c8:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80073cc:	4640      	mov	r0, r8
        linespace = space;
 80073ce:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80073d2:	f00a fb4f 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073d6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073da:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80073de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073e2:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80073e4:	ee1b 0a10 	vmov	r0, s22
 80073e8:	a90a      	add	r1, sp, #40	; 0x28
 80073ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073ee:	970a      	str	r7, [sp, #40]	; 0x28
 80073f0:	f00a fdda 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073f4:	ee1b 1a10 	vmov	r1, s22
 80073f8:	4630      	mov	r0, r6
 80073fa:	f008 fc21 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80073fe:	22b9      	movs	r2, #185	; 0xb9
 8007400:	ee1b 0a90 	vmov	r0, s23
 8007404:	21d9      	movs	r1, #217	; 0xd9
 8007406:	f7fb f9be 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800740a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800740e:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8007412:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007416:	4640      	mov	r0, r8
        linespace = space;
 8007418:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 800741c:	f00a fb2a 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007420:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007424:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007428:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800742c:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800742e:	ee1b 0a90 	vmov	r0, s23
 8007432:	a90a      	add	r1, sp, #40	; 0x28
 8007434:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007438:	970a      	str	r7, [sp, #40]	; 0x28
 800743a:	f00a fdb5 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800743e:	ee1b 1a90 	vmov	r1, s23
 8007442:	4630      	mov	r0, r6
 8007444:	f008 fbfc 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007448:	230a      	movs	r3, #10
 800744a:	9300      	str	r3, [sp, #0]
 800744c:	2232      	movs	r2, #50	; 0x32
 800744e:	23f0      	movs	r3, #240	; 0xf0
 8007450:	4629      	mov	r1, r5
 8007452:	4650      	mov	r0, sl
 8007454:	f7fb f9a4 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007458:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800745c:	22a0      	movs	r2, #160	; 0xa0
 800745e:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007462:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007466:	9b03      	ldr	r3, [sp, #12]
 8007468:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 800746c:	4611      	mov	r1, r2
 800746e:	4650      	mov	r0, sl
 8007470:	f00a f954 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007474:	22a0      	movs	r2, #160	; 0xa0
 8007476:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800747a:	4650      	mov	r0, sl
 800747c:	f00a f959 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007480:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007484:	2b20      	cmp	r3, #32
 8007486:	d005      	beq.n	8007494 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x564>
        lineWidthQ5 = widthQ5;
 8007488:	2320      	movs	r3, #32
 800748a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800748e:	4650      	mov	r0, sl
 8007490:	f00a f84e 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007494:	4650      	mov	r0, sl
 8007496:	2101      	movs	r1, #1
 8007498:	f00a f956 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800749c:	4651      	mov	r1, sl
 800749e:	4630      	mov	r0, r6
 80074a0:	f008 fbce 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80074a4:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 80074a8:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80074aa:	ee18 0a10 	vmov	r0, s16
 80074ae:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80074b0:	f04f 0900 	mov.w	r9, #0
 80074b4:	2145      	movs	r1, #69	; 0x45
 80074b6:	f7fb f966 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80074ba:	ee18 1a10 	vmov	r1, s16
 80074be:	4628      	mov	r0, r5
        color = newColor;
 80074c0:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80074c4:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80074c8:	f00a fad4 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80074d0:	ee18 3a10 	vmov	r3, s16
 80074d4:	333c      	adds	r3, #60	; 0x3c
 80074d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074da:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80075ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>
 80074de:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80074e2:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80074e4:	ee18 0a10 	vmov	r0, s16
 80074e8:	a90a      	add	r1, sp, #40	; 0x28
 80074ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074ee:	f00a fd5b 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074f2:	ee18 1a10 	vmov	r1, s16
 80074f6:	4630      	mov	r0, r6
 80074f8:	f008 fba2 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80074fc:	ee18 0a90 	vmov	r0, s17
 8007500:	220c      	movs	r2, #12
 8007502:	2136      	movs	r1, #54	; 0x36
 8007504:	f7fb f93f 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007508:	ee18 1a90 	vmov	r1, s17
 800750c:	4628      	mov	r0, r5
        color = newColor;
 800750e:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007512:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007516:	f00a faad 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800751a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800751e:	ee18 3a90 	vmov	r3, s17
 8007522:	333c      	adds	r3, #60	; 0x3c
 8007524:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007528:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800752a:	ee18 0a90 	vmov	r0, s17
 800752e:	a90a      	add	r1, sp, #40	; 0x28
 8007530:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007534:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007538:	f00a fd36 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800753c:	ee18 1a90 	vmov	r1, s17
 8007540:	4630      	mov	r0, r6
 8007542:	f008 fb7d 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007546:	ee1c 0a10 	vmov	r0, s24
 800754a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800754e:	2121      	movs	r1, #33	; 0x21
 8007550:	f7fb f919 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007554:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007556:	aa0a      	add	r2, sp, #40	; 0x28
 8007558:	a909      	add	r1, sp, #36	; 0x24
 800755a:	ee1c 0a10 	vmov	r0, s24
 800755e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007562:	2302      	movs	r3, #2
 8007564:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007568:	f00a ff03 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800756c:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 800756e:	ee1c 0a10 	vmov	r0, s24
 8007572:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007576:	f7fb f95b 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800757a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800757e:	3304      	adds	r3, #4
 8007580:	4630      	mov	r0, r6
 8007582:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007586:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800758a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800758e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007592:	f008 fb55 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007596:	4620      	mov	r0, r4
 8007598:	b00d      	add	sp, #52	; 0x34
 800759a:	ecbd 8b0a 	vpop	{d8-d12}
 800759e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075a2:	bf00      	nop
 80075a4:	20012ec0 	.word	0x20012ec0
 80075a8:	0802b9b2 	.word	0x0802b9b2
 80075ac:	0802ba28 	.word	0x0802ba28

080075b0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075b0:	4770      	bx	lr

080075b2 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80075b2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80075b4:	68c2      	ldr	r2, [r0, #12]
 80075b6:	6844      	ldr	r4, [r0, #4]
 80075b8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80075ba:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80075bc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80075c0:	07d2      	lsls	r2, r2, #31
 80075c2:	bf48      	it	mi
 80075c4:	5962      	ldrmi	r2, [r4, r5]
 80075c6:	689b      	ldr	r3, [r3, #8]
    }
 80075c8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80075ca:	bf48      	it	mi
 80075cc:	58d3      	ldrmi	r3, [r2, r3]
 80075ce:	4718      	bx	r3

080075d0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80075d0:	6843      	ldr	r3, [r0, #4]
 80075d2:	b12b      	cbz	r3, 80075e0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80075d4:	6883      	ldr	r3, [r0, #8]
 80075d6:	b92b      	cbnz	r3, 80075e4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80075d8:	68c0      	ldr	r0, [r0, #12]
 80075da:	f000 0001 	and.w	r0, r0, #1
 80075de:	4770      	bx	lr
 80075e0:	4618      	mov	r0, r3
 80075e2:	4770      	bx	lr
 80075e4:	2001      	movs	r0, #1
    }
 80075e6:	4770      	bx	lr

080075e8 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075e8:	b510      	push	{r4, lr}
 80075ea:	2110      	movs	r1, #16
 80075ec:	4604      	mov	r4, r0
 80075ee:	f021 fe36 	bl	802925e <_ZdlPvj>
 80075f2:	4620      	mov	r0, r4
 80075f4:	bd10      	pop	{r4, pc}

080075f6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80075f6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80075fa:	f000 bf21 	b.w	8008440 <_ZN17Gauge_with_Values10initializeEv>

080075fe <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80075fe:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007602:	4288      	cmp	r0, r1
{
 8007604:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007606:	d105      	bne.n	8007614 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007608:	f00d fdb2 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 800760c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007610:	f7fc b9e0 	b.w	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007614:	bd08      	pop	{r3, pc}
	...

08007618 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007618:	b510      	push	{r4, lr}
 800761a:	4b07      	ldr	r3, [pc, #28]	; (8007638 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 800761c:	6003      	str	r3, [r0, #0]
 800761e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007620:	f00c f8a4 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007624:	4b05      	ldr	r3, [pc, #20]	; (800763c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8007626:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800762a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800762e:	f7fd fc77 	bl	8004f20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007632:	4620      	mov	r0, r4
 8007634:	bd10      	pop	{r4, pc}
 8007636:	bf00      	nop
 8007638:	0802d600 	.word	0x0802d600
 800763c:	0802da24 	.word	0x0802da24

08007640 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007640:	b510      	push	{r4, lr}
 8007642:	4604      	mov	r4, r0
}
 8007644:	f7ff ffe8 	bl	8007618 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007648:	4620      	mov	r0, r4
 800764a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800764e:	f021 fe06 	bl	802925e <_ZdlPvj>
 8007652:	4620      	mov	r0, r4
 8007654:	bd10      	pop	{r4, pc}
	...

08007658 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800765c:	ed2d 8b04 	vpush	{d8-d9}
 8007660:	4604      	mov	r4, r0
 8007662:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007664:	46a3      	mov	fp, r4
 8007666:	2500      	movs	r5, #0
 8007668:	f00f fa02 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 800766c:	4bae      	ldr	r3, [pc, #696]	; (8007928 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800766e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007670:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007674:	2226      	movs	r2, #38	; 0x26
 8007676:	4629      	mov	r1, r5
 8007678:	4658      	mov	r0, fp
 800767a:	f022 fe08 	bl	802a28e <memset>
 800767e:	4658      	mov	r0, fp
 8007680:	f7fb f8a2 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8007684:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007688:	26ff      	movs	r6, #255	; 0xff
 800768a:	4ba8      	ldr	r3, [pc, #672]	; (800792c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 800768c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800768e:	2226      	movs	r2, #38	; 0x26
 8007690:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007694:	4629      	mov	r1, r5
 8007696:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800769a:	66a5      	str	r5, [r4, #104]	; 0x68
 800769c:	4650      	mov	r0, sl
 800769e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076a2:	f022 fdf4 	bl	802a28e <memset>
 80076a6:	4650      	mov	r0, sl
 80076a8:	f7fb f88e 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 80076ac:	4ba0      	ldr	r3, [pc, #640]	; (8007930 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80076ae:	66e3      	str	r3, [r4, #108]	; 0x6c
 80076b0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80076b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80076b8:	a90a      	add	r1, sp, #40	; 0x28
 80076ba:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80076be:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80076c2:	4650      	mov	r0, sl
 80076c4:	f00b f84b 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076c8:	4638      	mov	r0, r7
 80076ca:	f009 ff11 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 80076ce:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80076d2:	4618      	mov	r0, r3
 80076d4:	9303      	str	r3, [sp, #12]
 80076d6:	f7f9 fcb5 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80076da:	4b96      	ldr	r3, [pc, #600]	; (8007934 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80076dc:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80076e0:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80076e4:	3324      	adds	r3, #36	; 0x24
 80076e6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80076ea:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80076ee:	4648      	mov	r0, r9
 80076f0:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80076f4:	f7fb f87a 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80076f8:	4640      	mov	r0, r8
 80076fa:	f7fb f877 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 80076fe:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007702:	4618      	mov	r0, r3
 8007704:	ee08 3a10 	vmov	s16, r3
 8007708:	f7fb f870 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 800770c:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007710:	4618      	mov	r0, r3
 8007712:	ee08 3a90 	vmov	s17, r3
 8007716:	f00b f963 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800771a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800771e:	4618      	mov	r0, r3
 8007720:	ee09 3a10 	vmov	s18, r3
 8007724:	f000 fe82 	bl	800842c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007728:	4a83      	ldr	r2, [pc, #524]	; (8007938 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800772a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800772e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007732:	4a82      	ldr	r2, [pc, #520]	; (800793c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007734:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007738:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800773c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007740:	f00c f80a 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007744:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007748:	462a      	mov	r2, r5
 800774a:	9300      	str	r3, [sp, #0]
 800774c:	4629      	mov	r1, r5
 800774e:	23f0      	movs	r3, #240	; 0xf0
 8007750:	4658      	mov	r0, fp
 8007752:	f7fb f825 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007756:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007758:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800775c:	66a3      	str	r3, [r4, #104]	; 0x68
 800775e:	4659      	mov	r1, fp
 8007760:	4630      	mov	r0, r6
 8007762:	f008 fa6d 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007766:	462a      	mov	r2, r5
 8007768:	4629      	mov	r1, r5
 800776a:	4650      	mov	r0, sl
 800776c:	f7fb f80b 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007770:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007772:	a90a      	add	r1, sp, #40	; 0x28
 8007774:	4650      	mov	r0, sl
 8007776:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800777a:	f00a fff0 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800777e:	4651      	mov	r1, sl
 8007780:	4630      	mov	r0, r6
 8007782:	f008 fa5d 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007786:	230a      	movs	r3, #10
 8007788:	9300      	str	r3, [sp, #0]
 800778a:	2232      	movs	r2, #50	; 0x32
 800778c:	23f0      	movs	r3, #240	; 0xf0
 800778e:	4629      	mov	r1, r5
 8007790:	4638      	mov	r0, r7
 8007792:	f7fb f805 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007796:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800779a:	22a0      	movs	r2, #160	; 0xa0
 800779c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80077a0:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80077a4:	9b03      	ldr	r3, [sp, #12]
 80077a6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80077aa:	4611      	mov	r1, r2
 80077ac:	4638      	mov	r0, r7
 80077ae:	f009 ffb5 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077b2:	22a0      	movs	r2, #160	; 0xa0
 80077b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80077b8:	4638      	mov	r0, r7
 80077ba:	f009 ffba 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80077be:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80077c2:	2b20      	cmp	r3, #32
 80077c4:	d005      	beq.n	80077d2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80077c6:	2320      	movs	r3, #32
 80077c8:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80077cc:	4638      	mov	r0, r7
 80077ce:	f009 feaf 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80077d2:	4638      	mov	r0, r7
 80077d4:	2101      	movs	r1, #1
 80077d6:	f009 ffb7 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80077da:	4639      	mov	r1, r7
 80077dc:	4630      	mov	r0, r6
 80077de:	ad04      	add	r5, sp, #16
 80077e0:	f008 fa2e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80077e4:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80077e8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80077ec:	2223      	movs	r2, #35	; 0x23
 80077ee:	4648      	mov	r0, r9
 80077f0:	2145      	movs	r1, #69	; 0x45
 80077f2:	f7fa ffc8 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80077f6:	4649      	mov	r1, r9
 80077f8:	4628      	mov	r0, r5
        color = newColor;
 80077fa:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80077fe:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007802:	f00a f937 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007806:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800780a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800780e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007812:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007940 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8007816:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800781a:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800781c:	a90a      	add	r1, sp, #40	; 0x28
 800781e:	4648      	mov	r0, r9
 8007820:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007824:	f00a fbc0 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007828:	4649      	mov	r1, r9
 800782a:	4630      	mov	r0, r6
 800782c:	f008 fa08 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007830:	223c      	movs	r2, #60	; 0x3c
 8007832:	4640      	mov	r0, r8
 8007834:	211f      	movs	r1, #31
 8007836:	f7fa ffa6 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800783a:	4641      	mov	r1, r8
 800783c:	4628      	mov	r0, r5
        color = newColor;
 800783e:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007842:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007846:	f00a f915 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800784a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800784e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007852:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007856:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007858:	a90a      	add	r1, sp, #40	; 0x28
 800785a:	4640      	mov	r0, r8
 800785c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007860:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007864:	f00a fba0 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007868:	4641      	mov	r1, r8
 800786a:	4630      	mov	r0, r6
 800786c:	f008 f9e8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007870:	ee18 0a10 	vmov	r0, s16
 8007874:	220c      	movs	r2, #12
 8007876:	2136      	movs	r1, #54	; 0x36
 8007878:	f7fa ff85 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 800787c:	ee18 1a10 	vmov	r1, s16
 8007880:	4628      	mov	r0, r5
        color = newColor;
 8007882:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007886:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800788a:	f00a f8f3 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800788e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007892:	ee18 3a10 	vmov	r3, s16
 8007896:	333c      	adds	r3, #60	; 0x3c
 8007898:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800789c:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800789e:	ee18 0a10 	vmov	r0, s16
 80078a2:	a90a      	add	r1, sp, #40	; 0x28
 80078a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078a8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80078ac:	f00a fb7c 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078b0:	ee18 1a10 	vmov	r1, s16
 80078b4:	4630      	mov	r0, r6
 80078b6:	f008 f9c3 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80078ba:	ee18 0a90 	vmov	r0, s17
 80078be:	f240 1201 	movw	r2, #257	; 0x101
 80078c2:	2121      	movs	r1, #33	; 0x21
 80078c4:	f7fa ff5f 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80078c8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80078ca:	aa0a      	add	r2, sp, #40	; 0x28
 80078cc:	a909      	add	r1, sp, #36	; 0x24
 80078ce:	ee18 0a90 	vmov	r0, s17
 80078d2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80078d6:	2302      	movs	r3, #2
 80078d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078dc:	f00a fd49 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80078e0:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80078e2:	ee18 0a90 	vmov	r0, s17
 80078e6:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80078ea:	f7fa ffa1 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80078ee:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80078f2:	3314      	adds	r3, #20
 80078f4:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80078f8:	ee18 1a90 	vmov	r1, s17
 80078fc:	4630      	mov	r0, r6
        colorPressed = col;
 80078fe:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007902:	f008 f99d 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007906:	ee19 0a10 	vmov	r0, s18
 800790a:	224e      	movs	r2, #78	; 0x4e
 800790c:	4651      	mov	r1, sl
 800790e:	f7fa ff3a 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007912:	4630      	mov	r0, r6
 8007914:	ee19 1a10 	vmov	r1, s18
 8007918:	f008 f992 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800791c:	4620      	mov	r0, r4
 800791e:	b00d      	add	sp, #52	; 0x34
 8007920:	ecbd 8b04 	vpop	{d8-d9}
 8007924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007928:	0802d600 	.word	0x0802d600
 800792c:	0802e3a8 	.word	0x0802e3a8
 8007930:	0802e570 	.word	0x0802e570
 8007934:	0802e0dc 	.word	0x0802e0dc
 8007938:	0802d5e8 	.word	0x0802d5e8
 800793c:	080075ff 	.word	0x080075ff
 8007940:	0802ba28 	.word	0x0802ba28

08007944 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007944:	4770      	bx	lr

08007946 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007946:	4770      	bx	lr

08007948 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007948:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800794a:	68c2      	ldr	r2, [r0, #12]
 800794c:	6844      	ldr	r4, [r0, #4]
 800794e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007950:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007952:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007956:	07d2      	lsls	r2, r2, #31
 8007958:	bf48      	it	mi
 800795a:	5962      	ldrmi	r2, [r4, r5]
 800795c:	689b      	ldr	r3, [r3, #8]
    }
 800795e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007960:	bf48      	it	mi
 8007962:	58d3      	ldrmi	r3, [r2, r3]
 8007964:	4718      	bx	r3

08007966 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007966:	6843      	ldr	r3, [r0, #4]
 8007968:	b12b      	cbz	r3, 8007976 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800796a:	6883      	ldr	r3, [r0, #8]
 800796c:	b92b      	cbnz	r3, 800797a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800796e:	68c0      	ldr	r0, [r0, #12]
 8007970:	f000 0001 	and.w	r0, r0, #1
 8007974:	4770      	bx	lr
 8007976:	4618      	mov	r0, r3
 8007978:	4770      	bx	lr
 800797a:	2001      	movs	r0, #1
    }
 800797c:	4770      	bx	lr

0800797e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800797e:	b510      	push	{r4, lr}
 8007980:	2110      	movs	r1, #16
 8007982:	4604      	mov	r4, r0
 8007984:	f021 fc6b 	bl	802925e <_ZdlPvj>
 8007988:	4620      	mov	r0, r4
 800798a:	bd10      	pop	{r4, pc}

0800798c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800798c:	b510      	push	{r4, lr}
 800798e:	4b03      	ldr	r3, [pc, #12]	; (800799c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007990:	6003      	str	r3, [r0, #0]
 8007992:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007994:	f00b feea 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007998:	4620      	mov	r0, r4
 800799a:	bd10      	pop	{r4, pc}
 800799c:	0802d64c 	.word	0x0802d64c

080079a0 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80079a0:	b507      	push	{r0, r1, r2, lr}
 80079a2:	4b07      	ldr	r3, [pc, #28]	; (80079c0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80079a4:	6003      	str	r3, [r0, #0]
 80079a6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80079a8:	f00b fee0 	bl	801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80079ac:	9801      	ldr	r0, [sp, #4]
 80079ae:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80079b2:	f021 fc54 	bl	802925e <_ZdlPvj>
 80079b6:	9801      	ldr	r0, [sp, #4]
 80079b8:	b003      	add	sp, #12
 80079ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80079be:	bf00      	nop
 80079c0:	0802d64c 	.word	0x0802d64c

080079c4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80079c4:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80079c8:	4288      	cmp	r0, r1
{
 80079ca:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80079cc:	d105      	bne.n	80079da <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80079ce:	f00d fbcf 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80079d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80079d6:	f7fb bfcd 	b.w	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80079da:	bd08      	pop	{r3, pc}

080079dc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80079dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079e0:	ed2d 8b04 	vpush	{d8-d9}
 80079e4:	4604      	mov	r4, r0
 80079e6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80079e8:	46a3      	mov	fp, r4
 80079ea:	2500      	movs	r5, #0
 80079ec:	f00f f840 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 80079f0:	4bd1      	ldr	r3, [pc, #836]	; (8007d38 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80079f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80079f4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80079f8:	2226      	movs	r2, #38	; 0x26
 80079fa:	4629      	mov	r1, r5
 80079fc:	4658      	mov	r0, fp
 80079fe:	f022 fc46 	bl	802a28e <memset>
 8007a02:	4658      	mov	r0, fp
 8007a04:	f7fa fee0 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8007a08:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007a0c:	26ff      	movs	r6, #255	; 0xff
 8007a0e:	4bcb      	ldr	r3, [pc, #812]	; (8007d3c <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007a10:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007a12:	2226      	movs	r2, #38	; 0x26
 8007a14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007a18:	4629      	mov	r1, r5
 8007a1a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007a1e:	4650      	mov	r0, sl
 8007a20:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a26:	f022 fc32 	bl	802a28e <memset>
 8007a2a:	4650      	mov	r0, sl
 8007a2c:	f7fa fecc 	bl	80027c8 <_ZN8touchgfx6WidgetC1Ev>
 8007a30:	4bc3      	ldr	r3, [pc, #780]	; (8007d40 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007a32:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007a34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007a38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007a3c:	a90a      	add	r1, sp, #40	; 0x28
 8007a3e:	4650      	mov	r0, sl
 8007a40:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007a44:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007a48:	f00a fe89 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007a4c:	4648      	mov	r0, r9
 8007a4e:	f7fa fecd 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007a52:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007a56:	4bbb      	ldr	r3, [pc, #748]	; (8007d44 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007a58:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007a5c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007a60:	4638      	mov	r0, r7
 8007a62:	f009 fd45 	bl	80114f0 <_ZN8touchgfx4LineC1Ev>
 8007a66:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a6a:	4618      	mov	r0, r3
 8007a6c:	9303      	str	r3, [sp, #12]
 8007a6e:	f7f9 fae9 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a72:	4bb5      	ldr	r3, [pc, #724]	; (8007d48 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007a74:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007a78:	3324      	adds	r3, #36	; 0x24
 8007a7a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007a7e:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007a82:	4618      	mov	r0, r3
 8007a84:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007a88:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007a8c:	ee09 3a10 	vmov	s18, r3
 8007a90:	f00a ffa6 	bl	80129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a94:	4640      	mov	r0, r8
 8007a96:	f7fa fea9 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007a9a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007a9e:	4618      	mov	r0, r3
 8007aa0:	ee08 3a10 	vmov	s16, r3
 8007aa4:	f7fa fea2 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
 8007aa8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007aac:	4618      	mov	r0, r3
 8007aae:	ee08 3a90 	vmov	s17, r3
 8007ab2:	f7fa fe9b 	bl	80027ec <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ab6:	4aa5      	ldr	r2, [pc, #660]	; (8007d4c <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007ab8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007abc:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007ac0:	4aa3      	ldr	r2, [pc, #652]	; (8007d50 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007ac2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007ac6:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007aca:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007ace:	f00b fe43 	bl	8013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007ad2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007ad6:	462a      	mov	r2, r5
 8007ad8:	4658      	mov	r0, fp
 8007ada:	9300      	str	r3, [sp, #0]
 8007adc:	4629      	mov	r1, r5
 8007ade:	23f0      	movs	r3, #240	; 0xf0
 8007ae0:	f7fa fe5e 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ae4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007ae6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007aea:	66a3      	str	r3, [r4, #104]	; 0x68
 8007aec:	4659      	mov	r1, fp
 8007aee:	4630      	mov	r0, r6
 8007af0:	f008 f8a6 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007af4:	462a      	mov	r2, r5
 8007af6:	4650      	mov	r0, sl
 8007af8:	4629      	mov	r1, r5
 8007afa:	f7fa fe44 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007afe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b00:	4650      	mov	r0, sl
 8007b02:	a90a      	add	r1, sp, #40	; 0x28
 8007b04:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b08:	f00a fe29 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b0c:	4651      	mov	r1, sl
 8007b0e:	4630      	mov	r0, r6
 8007b10:	f008 f896 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007b14:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007b18:	2156      	movs	r1, #86	; 0x56
 8007b1a:	4648      	mov	r0, r9
 8007b1c:	f7fa fe33 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007b20:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007b24:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007b28:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007b2c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007b30:	4650      	mov	r0, sl
 8007b32:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007b36:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007b3a:	4649      	mov	r1, r9
 8007b3c:	4798      	blx	r3
 8007b3e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007b42:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b4a:	4b82      	ldr	r3, [pc, #520]	; (8007d54 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007b4c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007b4e:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007b52:	b92b      	cbnz	r3, 8007b60 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007b54:	4b80      	ldr	r3, [pc, #512]	; (8007d58 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007b56:	4a81      	ldr	r2, [pc, #516]	; (8007d5c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007b58:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b5a:	4881      	ldr	r0, [pc, #516]	; (8007d60 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007b5c:	f022 f992 	bl	8029e84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007b60:	4b80      	ldr	r3, [pc, #512]	; (8007d64 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b62:	881b      	ldrh	r3, [r3, #0]
 8007b64:	2b12      	cmp	r3, #18
 8007b66:	d803      	bhi.n	8007b70 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007b68:	4b7f      	ldr	r3, [pc, #508]	; (8007d68 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007b6a:	4a7c      	ldr	r2, [pc, #496]	; (8007d5c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007b6c:	2161      	movs	r1, #97	; 0x61
 8007b6e:	e7f4      	b.n	8007b5a <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007b70:	4b7e      	ldr	r3, [pc, #504]	; (8007d6c <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007b72:	2112      	movs	r1, #18
 8007b74:	6818      	ldr	r0, [r3, #0]
 8007b76:	f000 fb1b 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8007b7a:	4a7d      	ldr	r2, [pc, #500]	; (8007d70 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007b7c:	4603      	mov	r3, r0
 8007b7e:	2104      	movs	r1, #4
 8007b80:	4650      	mov	r0, sl
 8007b82:	f010 fc65 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007b86:	4648      	mov	r0, r9
        wc1 = value;
 8007b88:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007b8c:	f00a f9ec 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b90:	4b78      	ldr	r3, [pc, #480]	; (8007d74 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007b92:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007b94:	a90a      	add	r1, sp, #40	; 0x28
 8007b96:	2313      	movs	r3, #19
 8007b98:	4648      	mov	r0, r9
 8007b9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b9e:	f00a fa03 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ba2:	4649      	mov	r1, r9
 8007ba4:	4630      	mov	r0, r6
 8007ba6:	f008 f84b 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007baa:	230a      	movs	r3, #10
 8007bac:	9300      	str	r3, [sp, #0]
 8007bae:	2232      	movs	r2, #50	; 0x32
 8007bb0:	23f0      	movs	r3, #240	; 0xf0
 8007bb2:	4629      	mov	r1, r5
 8007bb4:	4638      	mov	r0, r7
 8007bb6:	f7fa fdf3 	bl	80027a0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bba:	9b03      	ldr	r3, [sp, #12]
 8007bbc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bc0:	22a0      	movs	r2, #160	; 0xa0
 8007bc2:	4611      	mov	r1, r2
 8007bc4:	4638      	mov	r0, r7
 8007bc6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007bca:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007bce:	f009 fda5 	bl	801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bd2:	22a0      	movs	r2, #160	; 0xa0
 8007bd4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007bd8:	4638      	mov	r0, r7
 8007bda:	f009 fdaa 	bl	8011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007bde:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007be2:	2b20      	cmp	r3, #32
 8007be4:	d005      	beq.n	8007bf2 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007be6:	2320      	movs	r3, #32
 8007be8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007bec:	4638      	mov	r0, r7
 8007bee:	f009 fc9f 	bl	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007bf2:	4638      	mov	r0, r7
 8007bf4:	2101      	movs	r1, #1
 8007bf6:	f009 fda7 	bl	8011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007bfa:	4639      	mov	r1, r7
 8007bfc:	4630      	mov	r0, r6
 8007bfe:	f008 f81f 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007c02:	ee19 0a10 	vmov	r0, s18
 8007c06:	22f0      	movs	r2, #240	; 0xf0
 8007c08:	2121      	movs	r1, #33	; 0x21
 8007c0a:	f7fa fdbc 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007c0e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c10:	aa0a      	add	r2, sp, #40	; 0x28
 8007c12:	a909      	add	r1, sp, #36	; 0x24
 8007c14:	ee19 0a10 	vmov	r0, s18
 8007c18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007c1c:	2302      	movs	r3, #2
 8007c1e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c22:	f00a fba6 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007c26:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007c28:	ee19 0a10 	vmov	r0, s18
 8007c2c:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007c30:	f7fa fdfe 	bl	8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007c34:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007c38:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007c3c:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007c40:	ee19 1a10 	vmov	r1, s18
 8007c44:	4630      	mov	r0, r6
        colorPressed = col;
 8007c46:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007c4a:	ad04      	add	r5, sp, #16
 8007c4c:	f007 fff8 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007c50:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007c54:	225b      	movs	r2, #91	; 0x5b
 8007c56:	4640      	mov	r0, r8
 8007c58:	2105      	movs	r1, #5
 8007c5a:	f7fa fd94 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c5e:	4641      	mov	r1, r8
 8007c60:	4628      	mov	r0, r5
        color = newColor;
 8007c62:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007c66:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007c6a:	f009 ff03 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c6e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c72:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007c76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007c7a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007d74 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007c7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c82:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007c84:	a90a      	add	r1, sp, #40	; 0x28
 8007c86:	4640      	mov	r0, r8
 8007c88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c8c:	f00a f98c 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c90:	4641      	mov	r1, r8
 8007c92:	4630      	mov	r0, r6
 8007c94:	f007 ffd4 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007c98:	ee18 0a10 	vmov	r0, s16
 8007c9c:	2223      	movs	r2, #35	; 0x23
 8007c9e:	2145      	movs	r1, #69	; 0x45
 8007ca0:	f7fa fd71 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007ca4:	ee18 1a10 	vmov	r1, s16
 8007ca8:	4628      	mov	r0, r5
        color = newColor;
 8007caa:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007cae:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007cb2:	f009 fedf 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cb6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cba:	ee18 3a10 	vmov	r3, s16
 8007cbe:	333c      	adds	r3, #60	; 0x3c
 8007cc0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cc4:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007cc6:	ee18 0a10 	vmov	r0, s16
 8007cca:	a90a      	add	r1, sp, #40	; 0x28
 8007ccc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cd0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007cd4:	f00a f968 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cd8:	ee18 1a10 	vmov	r1, s16
 8007cdc:	4630      	mov	r0, r6
 8007cde:	f007 ffaf 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007ce2:	ee18 0a90 	vmov	r0, s17
 8007ce6:	220c      	movs	r2, #12
 8007ce8:	2136      	movs	r1, #54	; 0x36
 8007cea:	f7fa fd4c 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007cee:	ee18 1a90 	vmov	r1, s17
 8007cf2:	4628      	mov	r0, r5
        color = newColor;
 8007cf4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007cf8:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007cfc:	f009 feba 	bl	8011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d04:	ee18 3a90 	vmov	r3, s17
 8007d08:	333c      	adds	r3, #60	; 0x3c
 8007d0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d0e:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007d10:	ee18 0a90 	vmov	r0, s17
 8007d14:	a90a      	add	r1, sp, #40	; 0x28
 8007d16:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d1a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d1e:	f00a f943 	bl	8011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d22:	4630      	mov	r0, r6
 8007d24:	ee18 1a90 	vmov	r1, s17
 8007d28:	f007 ff8a 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d2c:	4620      	mov	r0, r4
 8007d2e:	b00d      	add	sp, #52	; 0x34
 8007d30:	ecbd 8b04 	vpop	{d8-d9}
 8007d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d38:	0802d64c 	.word	0x0802d64c
 8007d3c:	0802e3a8 	.word	0x0802e3a8
 8007d40:	0802e570 	.word	0x0802e570
 8007d44:	0802ba38 	.word	0x0802ba38
 8007d48:	0802e0dc 	.word	0x0802e0dc
 8007d4c:	0802d634 	.word	0x0802d634
 8007d50:	080079c5 	.word	0x080079c5
 8007d54:	20012eb4 	.word	0x20012eb4
 8007d58:	0802b878 	.word	0x0802b878
 8007d5c:	0802b97a 	.word	0x0802b97a
 8007d60:	0802b8f5 	.word	0x0802b8f5
 8007d64:	20012eb8 	.word	0x20012eb8
 8007d68:	0802b93c 	.word	0x0802b93c
 8007d6c:	20012ec0 	.word	0x20012ec0
 8007d70:	0802b9b2 	.word	0x0802b9b2
 8007d74:	0802ba28 	.word	0x0802ba28

08007d78 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007d78:	4770      	bx	lr

08007d7a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007d7a:	4770      	bx	lr

08007d7c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007d7c:	b510      	push	{r4, lr}
}
 8007d7e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007d80:	4604      	mov	r4, r0
}
 8007d82:	f021 fa6c 	bl	802925e <_ZdlPvj>
 8007d86:	4620      	mov	r0, r4
 8007d88:	bd10      	pop	{r4, pc}
	...

08007d8c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007d8c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007d90:	4604      	mov	r4, r0
 8007d92:	4626      	mov	r6, r4
 8007d94:	f00e fe6c 	bl	8016a70 <_ZN8touchgfx6ScreenC1Ev>
 8007d98:	2500      	movs	r5, #0
 8007d9a:	4b2e      	ldr	r3, [pc, #184]	; (8007e54 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007d9c:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007d9e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007da2:	4b2d      	ldr	r3, [pc, #180]	; (8007e58 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007da4:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007da6:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007daa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007dae:	23ff      	movs	r3, #255	; 0xff
 8007db0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007db4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007db8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007dbc:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007dc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007dc4:	4a25      	ldr	r2, [pc, #148]	; (8007e5c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007dc6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007dca:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007dce:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007dd0:	a901      	add	r1, sp, #4
 8007dd2:	4638      	mov	r0, r7
 8007dd4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007dd8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007ddc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007de0:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007de4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007de8:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007dec:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007df0:	66a5      	str	r5, [r4, #104]	; 0x68
 8007df2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007df6:	f00a fcb2 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007dfa:	462a      	mov	r2, r5
 8007dfc:	4629      	mov	r1, r5
 8007dfe:	4630      	mov	r0, r6
 8007e00:	f7fa fcc1 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007e04:	4630      	mov	r0, r6
 8007e06:	21f0      	movs	r1, #240	; 0xf0
 8007e08:	f7f9 f868 	bl	8000edc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007e0c:	4630      	mov	r0, r6
 8007e0e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007e12:	f7f9 f865 	bl	8000ee0 <_ZN8touchgfx8Drawable9setHeightEs>
 8007e16:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007e1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007e1e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007e20:	4631      	mov	r1, r6
 8007e22:	4640      	mov	r0, r8
 8007e24:	f007 ff0c 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007e28:	462a      	mov	r2, r5
 8007e2a:	4638      	mov	r0, r7
 8007e2c:	f06f 0102 	mvn.w	r1, #2
 8007e30:	f7fa fca9 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8007e34:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007e36:	a901      	add	r1, sp, #4
 8007e38:	4638      	mov	r0, r7
 8007e3a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007e3e:	f00a fc8e 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e42:	4640      	mov	r0, r8
 8007e44:	4639      	mov	r1, r7
 8007e46:	f007 fefb 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	b002      	add	sp, #8
 8007e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e52:	bf00      	nop
 8007e54:	0802d680 	.word	0x0802d680
 8007e58:	0802e3a8 	.word	0x0802e3a8
 8007e5c:	0802e570 	.word	0x0802e570

08007e60 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e60:	4770      	bx	lr
	...

08007e64 <_Z23getFont_verdana_10_4bppv>:
{
 8007e64:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e66:	4d17      	ldr	r5, [pc, #92]	; (8007ec4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007e68:	682c      	ldr	r4, [r5, #0]
 8007e6a:	f3bf 8f5b 	dmb	ish
 8007e6e:	f014 0401 	ands.w	r4, r4, #1
{
 8007e72:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e74:	d122      	bne.n	8007ebc <_Z23getFont_verdana_10_4bppv+0x58>
 8007e76:	4628      	mov	r0, r5
 8007e78:	f021 f9f3 	bl	8029262 <__cxa_guard_acquire>
 8007e7c:	b1f0      	cbz	r0, 8007ebc <_Z23getFont_verdana_10_4bppv+0x58>
 8007e7e:	233f      	movs	r3, #63	; 0x3f
 8007e80:	9309      	str	r3, [sp, #36]	; 0x24
 8007e82:	4b11      	ldr	r3, [pc, #68]	; (8007ec8 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007e84:	9308      	str	r3, [sp, #32]
 8007e86:	4b11      	ldr	r3, [pc, #68]	; (8007ecc <_Z23getFont_verdana_10_4bppv+0x68>)
 8007e88:	9307      	str	r3, [sp, #28]
 8007e8a:	2301      	movs	r3, #1
 8007e8c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e90:	9304      	str	r3, [sp, #16]
 8007e92:	2304      	movs	r3, #4
 8007e94:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e98:	230a      	movs	r3, #10
 8007e9a:	490d      	ldr	r1, [pc, #52]	; (8007ed0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007e9c:	9300      	str	r3, [sp, #0]
 8007e9e:	225f      	movs	r2, #95	; 0x5f
 8007ea0:	230c      	movs	r3, #12
 8007ea2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ea6:	480b      	ldr	r0, [pc, #44]	; (8007ed4 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007ea8:	940a      	str	r4, [sp, #40]	; 0x28
 8007eaa:	9401      	str	r4, [sp, #4]
 8007eac:	f7fd f9ea 	bl	8005284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007eb0:	4809      	ldr	r0, [pc, #36]	; (8007ed8 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007eb2:	f022 f805 	bl	8029ec0 <atexit>
 8007eb6:	4628      	mov	r0, r5
 8007eb8:	f021 f9df 	bl	802927a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007ebc:	4805      	ldr	r0, [pc, #20]	; (8007ed4 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007ebe:	b00f      	add	sp, #60	; 0x3c
 8007ec0:	bd30      	pop	{r4, r5, pc}
 8007ec2:	bf00      	nop
 8007ec4:	20001f78 	.word	0x20001f78
 8007ec8:	0804523c 	.word	0x0804523c
 8007ecc:	0804539c 	.word	0x0804539c
 8007ed0:	08044524 	.word	0x08044524
 8007ed4:	20001f7c 	.word	0x20001f7c
 8007ed8:	08007e61 	.word	0x08007e61

08007edc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007edc:	4770      	bx	lr
	...

08007ee0 <_Z23getFont_verdana_12_4bppv>:
{
 8007ee0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007ee2:	4d17      	ldr	r5, [pc, #92]	; (8007f40 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007ee4:	682c      	ldr	r4, [r5, #0]
 8007ee6:	f3bf 8f5b 	dmb	ish
 8007eea:	f014 0401 	ands.w	r4, r4, #1
{
 8007eee:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007ef0:	d122      	bne.n	8007f38 <_Z23getFont_verdana_12_4bppv+0x58>
 8007ef2:	4628      	mov	r0, r5
 8007ef4:	f021 f9b5 	bl	8029262 <__cxa_guard_acquire>
 8007ef8:	b1f0      	cbz	r0, 8007f38 <_Z23getFont_verdana_12_4bppv+0x58>
 8007efa:	233f      	movs	r3, #63	; 0x3f
 8007efc:	9309      	str	r3, [sp, #36]	; 0x24
 8007efe:	4b11      	ldr	r3, [pc, #68]	; (8007f44 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007f00:	9308      	str	r3, [sp, #32]
 8007f02:	4b11      	ldr	r3, [pc, #68]	; (8007f48 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007f04:	9307      	str	r3, [sp, #28]
 8007f06:	2301      	movs	r3, #1
 8007f08:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f0c:	9304      	str	r3, [sp, #16]
 8007f0e:	2304      	movs	r3, #4
 8007f10:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f14:	230c      	movs	r3, #12
 8007f16:	490d      	ldr	r1, [pc, #52]	; (8007f4c <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007f18:	9300      	str	r3, [sp, #0]
 8007f1a:	2260      	movs	r2, #96	; 0x60
 8007f1c:	230f      	movs	r3, #15
 8007f1e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f22:	480b      	ldr	r0, [pc, #44]	; (8007f50 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007f24:	940a      	str	r4, [sp, #40]	; 0x28
 8007f26:	9401      	str	r4, [sp, #4]
 8007f28:	f7fd f9ac 	bl	8005284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f2c:	4809      	ldr	r0, [pc, #36]	; (8007f54 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007f2e:	f021 ffc7 	bl	8029ec0 <atexit>
 8007f32:	4628      	mov	r0, r5
 8007f34:	f021 f9a1 	bl	802927a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007f38:	4805      	ldr	r0, [pc, #20]	; (8007f50 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007f3a:	b00f      	add	sp, #60	; 0x3c
 8007f3c:	bd30      	pop	{r4, r5, pc}
 8007f3e:	bf00      	nop
 8007f40:	20001fa8 	.word	0x20001fa8
 8007f44:	08045270 	.word	0x08045270
 8007f48:	080453a0 	.word	0x080453a0
 8007f4c:	08044a58 	.word	0x08044a58
 8007f50:	20001fac 	.word	0x20001fac
 8007f54:	08007edd 	.word	0x08007edd

08007f58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f58:	4770      	bx	lr
	...

08007f5c <_Z23getFont_verdana_19_4bppv>:
{
 8007f5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f5e:	4d17      	ldr	r5, [pc, #92]	; (8007fbc <_Z23getFont_verdana_19_4bppv+0x60>)
 8007f60:	682c      	ldr	r4, [r5, #0]
 8007f62:	f3bf 8f5b 	dmb	ish
 8007f66:	f014 0401 	ands.w	r4, r4, #1
{
 8007f6a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f6c:	d122      	bne.n	8007fb4 <_Z23getFont_verdana_19_4bppv+0x58>
 8007f6e:	4628      	mov	r0, r5
 8007f70:	f021 f977 	bl	8029262 <__cxa_guard_acquire>
 8007f74:	b1f0      	cbz	r0, 8007fb4 <_Z23getFont_verdana_19_4bppv+0x58>
 8007f76:	233f      	movs	r3, #63	; 0x3f
 8007f78:	9309      	str	r3, [sp, #36]	; 0x24
 8007f7a:	4b11      	ldr	r3, [pc, #68]	; (8007fc0 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007f7c:	9308      	str	r3, [sp, #32]
 8007f7e:	4b11      	ldr	r3, [pc, #68]	; (8007fc4 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007f80:	9307      	str	r3, [sp, #28]
 8007f82:	2301      	movs	r3, #1
 8007f84:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f88:	9304      	str	r3, [sp, #16]
 8007f8a:	2304      	movs	r3, #4
 8007f8c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f90:	2313      	movs	r3, #19
 8007f92:	490d      	ldr	r1, [pc, #52]	; (8007fc8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007f94:	9300      	str	r3, [sp, #0]
 8007f96:	222f      	movs	r2, #47	; 0x2f
 8007f98:	2317      	movs	r3, #23
 8007f9a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f9e:	480b      	ldr	r0, [pc, #44]	; (8007fcc <_Z23getFont_verdana_19_4bppv+0x70>)
 8007fa0:	940a      	str	r4, [sp, #40]	; 0x28
 8007fa2:	9401      	str	r4, [sp, #4]
 8007fa4:	f7fd f96e 	bl	8005284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fa8:	4809      	ldr	r0, [pc, #36]	; (8007fd0 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007faa:	f021 ff89 	bl	8029ec0 <atexit>
 8007fae:	4628      	mov	r0, r5
 8007fb0:	f021 f963 	bl	802927a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007fb4:	4805      	ldr	r0, [pc, #20]	; (8007fcc <_Z23getFont_verdana_19_4bppv+0x70>)
 8007fb6:	b00f      	add	sp, #60	; 0x3c
 8007fb8:	bd30      	pop	{r4, r5, pc}
 8007fba:	bf00      	nop
 8007fbc:	20001fd8 	.word	0x20001fd8
 8007fc0:	080452f4 	.word	0x080452f4
 8007fc4:	080453a4 	.word	0x080453a4
 8007fc8:	08044f98 	.word	0x08044f98
 8007fcc:	20001fdc 	.word	0x20001fdc
 8007fd0:	08007f59 	.word	0x08007f59

08007fd4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007fd4:	4770      	bx	lr
	...

08007fd8 <_Z23getFont_verdana_40_4bppv>:
{
 8007fd8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007fda:	4d16      	ldr	r5, [pc, #88]	; (8008034 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007fdc:	682c      	ldr	r4, [r5, #0]
 8007fde:	f3bf 8f5b 	dmb	ish
 8007fe2:	f014 0401 	ands.w	r4, r4, #1
{
 8007fe6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007fe8:	d120      	bne.n	800802c <_Z23getFont_verdana_40_4bppv+0x54>
 8007fea:	4628      	mov	r0, r5
 8007fec:	f021 f939 	bl	8029262 <__cxa_guard_acquire>
 8007ff0:	b1e0      	cbz	r0, 800802c <_Z23getFont_verdana_40_4bppv+0x54>
 8007ff2:	233f      	movs	r3, #63	; 0x3f
 8007ff4:	9309      	str	r3, [sp, #36]	; 0x24
 8007ff6:	4b10      	ldr	r3, [pc, #64]	; (8008038 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007ff8:	9308      	str	r3, [sp, #32]
 8007ffa:	4b10      	ldr	r3, [pc, #64]	; (800803c <_Z23getFont_verdana_40_4bppv+0x64>)
 8007ffc:	4910      	ldr	r1, [pc, #64]	; (8008040 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007ffe:	4811      	ldr	r0, [pc, #68]	; (8008044 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008000:	940a      	str	r4, [sp, #40]	; 0x28
 8008002:	2201      	movs	r2, #1
 8008004:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008008:	2304      	movs	r3, #4
 800800a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800800e:	2328      	movs	r3, #40	; 0x28
 8008010:	9300      	str	r3, [sp, #0]
 8008012:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008016:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800801a:	9405      	str	r4, [sp, #20]
 800801c:	f7fd f932 	bl	8005284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008020:	4809      	ldr	r0, [pc, #36]	; (8008048 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008022:	f021 ff4d 	bl	8029ec0 <atexit>
 8008026:	4628      	mov	r0, r5
 8008028:	f021 f927 	bl	802927a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800802c:	4805      	ldr	r0, [pc, #20]	; (8008044 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800802e:	b00f      	add	sp, #60	; 0x3c
 8008030:	bd30      	pop	{r4, r5, pc}
 8008032:	bf00      	nop
 8008034:	20002008 	.word	0x20002008
 8008038:	08045398 	.word	0x08045398
 800803c:	080453a8 	.word	0x080453a8
 8008040:	0804522c 	.word	0x0804522c
 8008044:	2000200c 	.word	0x2000200c
 8008048:	08007fd5 	.word	0x08007fd5

0800804c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800804c:	2000      	movs	r0, #0
 800804e:	4770      	bx	lr

08008050 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008050:	2000      	movs	r0, #0
 8008052:	4770      	bx	lr

08008054 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008054:	b40e      	push	{r1, r2, r3}
 8008056:	b503      	push	{r0, r1, lr}
 8008058:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800805a:	2100      	movs	r1, #0
{
 800805c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008060:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008062:	f00e f843 	bl	80160ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008066:	b002      	add	sp, #8
 8008068:	f85d eb04 	ldr.w	lr, [sp], #4
 800806c:	b003      	add	sp, #12
 800806e:	4770      	bx	lr

08008070 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008070:	b40c      	push	{r2, r3}
 8008072:	b507      	push	{r0, r1, r2, lr}
 8008074:	ab04      	add	r3, sp, #16
 8008076:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800807a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800807c:	f00e f836 	bl	80160ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008080:	b003      	add	sp, #12
 8008082:	f85d eb04 	ldr.w	lr, [sp], #4
 8008086:	b002      	add	sp, #8
 8008088:	4770      	bx	lr
	...

0800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800808c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800808e:	b510      	push	{r4, lr}
 8008090:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008092:	b373      	cbz	r3, 80080f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008094:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008096:	b92b      	cbnz	r3, 80080a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008098:	4b18      	ldr	r3, [pc, #96]	; (80080fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800809a:	4a19      	ldr	r2, [pc, #100]	; (8008100 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800809c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800809e:	4819      	ldr	r0, [pc, #100]	; (8008104 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80080a0:	f021 fef0 	bl	8029e84 <__assert_func>
            return buffer[pos];
 80080a4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80080a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80080aa:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80080ac:	b30b      	cbz	r3, 80080f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80080ae:	f00f fc1a 	bl	80178e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80080b2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80080b4:	2b01      	cmp	r3, #1
 80080b6:	d803      	bhi.n	80080c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80080b8:	4b13      	ldr	r3, [pc, #76]	; (8008108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80080ba:	4a14      	ldr	r2, [pc, #80]	; (800810c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80080bc:	21cb      	movs	r1, #203	; 0xcb
 80080be:	e7ee      	b.n	800809e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80080c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80080c2:	1c53      	adds	r3, r2, #1
 80080c4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80080c6:	2b09      	cmp	r3, #9
 80080c8:	4619      	mov	r1, r3
 80080ca:	bf88      	it	hi
 80080cc:	f1a3 010a 	subhi.w	r1, r3, #10
 80080d0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80080d4:	f640 103f 	movw	r0, #2367	; 0x93f
 80080d8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80080da:	4281      	cmp	r1, r0
 80080dc:	d109      	bne.n	80080f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80080de:	2b0a      	cmp	r3, #10
 80080e0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80080e4:	bf28      	it	cs
 80080e6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80080e8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80080ec:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80080ee:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80080f0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80080f2:	4620      	mov	r0, r4
}
 80080f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80080f8:	f00f baf8 	b.w	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 80080fc:	0802d6ac 	.word	0x0802d6ac
 8008100:	0802d6b5 	.word	0x0802d6b5
 8008104:	0802d760 	.word	0x0802d760
 8008108:	0802d7aa 	.word	0x0802d7aa
 800810c:	0802d7b8 	.word	0x0802d7b8

08008110 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008110:	f00f bab3 	b.w	801767a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008114:	b510      	push	{r4, lr}
 8008116:	b086      	sub	sp, #24
 8008118:	ac02      	add	r4, sp, #8
 800811a:	e884 0006 	stmia.w	r4, {r1, r2}
 800811e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008120:	ab0a      	add	r3, sp, #40	; 0x28
 8008122:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008124:	9301      	str	r3, [sp, #4]
 8008126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008128:	9300      	str	r3, [sp, #0]
 800812a:	4621      	mov	r1, r4
 800812c:	9b08      	ldr	r3, [sp, #32]
 800812e:	f00c fba1 	bl	8014874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008132:	b006      	add	sp, #24
 8008134:	bd10      	pop	{r4, pc}
	...

08008138 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008138:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800813a:	bb18      	cbnz	r0, 8008184 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800813c:	4b12      	ldr	r3, [pc, #72]	; (8008188 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800813e:	4813      	ldr	r0, [pc, #76]	; (800818c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008140:	681c      	ldr	r4, [r3, #0]
 8008142:	4913      	ldr	r1, [pc, #76]	; (8008190 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008144:	b1b4      	cbz	r4, 8008174 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008146:	6822      	ldr	r2, [r4, #0]
 8008148:	4422      	add	r2, r4
 800814a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800814c:	6862      	ldr	r2, [r4, #4]
 800814e:	4422      	add	r2, r4
 8008150:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008152:	68a2      	ldr	r2, [r4, #8]
 8008154:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008156:	4b0f      	ldr	r3, [pc, #60]	; (8008194 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008158:	2200      	movs	r2, #0
 800815a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800815c:	f000 f838 	bl	80081d0 <_ZN17TypedTextDatabase8getFontsEv>
 8008160:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008162:	f000 f833 	bl	80081cc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008166:	4b0c      	ldr	r3, [pc, #48]	; (8008198 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008168:	601c      	str	r4, [r3, #0]
        fonts = f;
 800816a:	4b0c      	ldr	r3, [pc, #48]	; (800819c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800816c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800816e:	4b0c      	ldr	r3, [pc, #48]	; (80081a0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008170:	8018      	strh	r0, [r3, #0]
    }
}
 8008172:	e007      	b.n	8008184 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008174:	4b0b      	ldr	r3, [pc, #44]	; (80081a4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008176:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008178:	4b0b      	ldr	r3, [pc, #44]	; (80081a8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800817a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800817c:	4b0b      	ldr	r3, [pc, #44]	; (80081ac <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800817e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008180:	2c00      	cmp	r4, #0
 8008182:	d1e8      	bne.n	8008156 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008184:	bd38      	pop	{r3, r4, r5, pc}
 8008186:	bf00      	nop
 8008188:	20002038 	.word	0x20002038
 800818c:	2000203c 	.word	0x2000203c
 8008190:	20002040 	.word	0x20002040
 8008194:	20002044 	.word	0x20002044
 8008198:	20012eb4 	.word	0x20012eb4
 800819c:	20012ebc 	.word	0x20012ebc
 80081a0:	20012eb8 	.word	0x20012eb8
 80081a4:	08045500 	.word	0x08045500
 80081a8:	080453ac 	.word	0x080453ac
 80081ac:	08045a1c 	.word	0x08045a1c

080081b0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80081b0:	4b04      	ldr	r3, [pc, #16]	; (80081c4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80081b2:	681b      	ldr	r3, [r3, #0]
 80081b4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80081b8:	4b03      	ldr	r3, [pc, #12]	; (80081c8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80081ba:	681b      	ldr	r3, [r3, #0]
}
 80081bc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80081c0:	4770      	bx	lr
 80081c2:	bf00      	nop
 80081c4:	20002040 	.word	0x20002040
 80081c8:	2000203c 	.word	0x2000203c

080081cc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80081cc:	2055      	movs	r0, #85	; 0x55
 80081ce:	4770      	bx	lr

080081d0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80081d0:	4800      	ldr	r0, [pc, #0]	; (80081d4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80081d2:	4770      	bx	lr
 80081d4:	20002048 	.word	0x20002048

080081d8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80081d8:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80081da:	f7ff febf 	bl	8007f5c <_Z23getFont_verdana_19_4bppv>
};
 80081de:	4c06      	ldr	r4, [pc, #24]	; (80081f8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80081e0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80081e2:	f7ff fef9 	bl	8007fd8 <_Z23getFont_verdana_40_4bppv>
};
 80081e6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80081e8:	f7ff fe3c 	bl	8007e64 <_Z23getFont_verdana_10_4bppv>
};
 80081ec:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80081ee:	f7ff fe77 	bl	8007ee0 <_Z23getFont_verdana_12_4bppv>
};
 80081f2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80081f4:	bd10      	pop	{r4, pc}
 80081f6:	bf00      	nop
 80081f8:	20002048 	.word	0x20002048

080081fc <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80081fc:	4770      	bx	lr

080081fe <_ZThn4_N20CalibrationPresenterD1Ev>:
 80081fe:	3804      	subs	r0, #4
 8008200:	4770      	bx	lr

08008202 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8008202:	4770      	bx	lr

08008204 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008204:	68c0      	ldr	r0, [r0, #12]
 8008206:	6803      	ldr	r3, [r0, #0]
 8008208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800820a:	4718      	bx	r3

0800820c <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800820c:	f1a0 0004 	sub.w	r0, r0, #4
 8008210:	f7ff bff8 	b.w	8008204 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008214 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008214:	b510      	push	{r4, lr}
 8008216:	2110      	movs	r1, #16
 8008218:	4604      	mov	r4, r0
 800821a:	f021 f820 	bl	802925e <_ZdlPvj>
 800821e:	4620      	mov	r0, r4
 8008220:	bd10      	pop	{r4, pc}

08008222 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008222:	f1a0 0004 	sub.w	r0, r0, #4
 8008226:	e7f5      	b.n	8008214 <_ZN20CalibrationPresenterD0Ev>

08008228 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008228:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800822a:	2200      	movs	r2, #0
 800822c:	6082      	str	r2, [r0, #8]
    : view(v)
 800822e:	4a04      	ldr	r2, [pc, #16]	; (8008240 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008230:	60c1      	str	r1, [r0, #12]
 8008232:	f102 0408 	add.w	r4, r2, #8
 8008236:	3224      	adds	r2, #36	; 0x24
 8008238:	6004      	str	r4, [r0, #0]
 800823a:	6042      	str	r2, [r0, #4]
}
 800823c:	bd10      	pop	{r4, pc}
 800823e:	bf00      	nop
 8008240:	0802d88c 	.word	0x0802d88c

08008244 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008244:	4770      	bx	lr
	...

08008248 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008248:	b510      	push	{r4, lr}
 800824a:	4b03      	ldr	r3, [pc, #12]	; (8008258 <_ZN15CalibrationViewD1Ev+0x10>)
 800824c:	6003      	str	r3, [r0, #0]
 800824e:	4604      	mov	r4, r0
 8008250:	f7fa fa1e 	bl	8002690 <_ZN19CalibrationViewBaseD1Ev>
 8008254:	4620      	mov	r0, r4
 8008256:	bd10      	pop	{r4, pc}
 8008258:	0802d8c8 	.word	0x0802d8c8

0800825c <_ZN15CalibrationViewD0Ev>:
 800825c:	b510      	push	{r4, lr}
 800825e:	4604      	mov	r4, r0
 8008260:	f7ff fff2 	bl	8008248 <_ZN15CalibrationViewD1Ev>
 8008264:	4620      	mov	r0, r4
 8008266:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800826a:	f020 fff8 	bl	802925e <_ZdlPvj>
 800826e:	4620      	mov	r0, r4
 8008270:	bd10      	pop	{r4, pc}
	...

08008274 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008274:	b510      	push	{r4, lr}
 8008276:	4604      	mov	r4, r0
 8008278:	f7fa fb1e 	bl	80028b8 <_ZN19CalibrationViewBaseC1Ev>
 800827c:	4b01      	ldr	r3, [pc, #4]	; (8008284 <_ZN15CalibrationViewC1Ev+0x10>)
 800827e:	6023      	str	r3, [r4, #0]
}
 8008280:	4620      	mov	r0, r4
 8008282:	bd10      	pop	{r4, pc}
 8008284:	0802d8c8 	.word	0x0802d8c8

08008288 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008288:	f7fa b9cf 	b.w	800262a <_ZN19CalibrationViewBase11setupScreenEv>

0800828c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800828c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800828e:	4a0a      	ldr	r2, [pc, #40]	; (80082b8 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008290:	4605      	mov	r5, r0
 8008292:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008294:	460b      	mov	r3, r1
 8008296:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800829a:	2104      	movs	r1, #4
 800829c:	f010 f8d8 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80082a0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80082a4:	f00e f84c 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80082a8:	b92c      	cbnz	r4, 80082b6 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 80082aa:	f00c ff61 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80082ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80082b2:	f7fb bc5f 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80082b6:	bd38      	pop	{r3, r4, r5, pc}
 80082b8:	0802d8bc 	.word	0x0802d8bc

080082bc <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 80082bc:	4770      	bx	lr

080082be <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 80082be:	3804      	subs	r0, #4
 80082c0:	4770      	bx	lr

080082c2 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80082c2:	4770      	bx	lr

080082c4 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80082c4:	4770      	bx	lr

080082c6 <_ZN25Calibration_HallPresenterD0Ev>:
 80082c6:	b510      	push	{r4, lr}
 80082c8:	2110      	movs	r1, #16
 80082ca:	4604      	mov	r4, r0
 80082cc:	f020 ffc7 	bl	802925e <_ZdlPvj>
 80082d0:	4620      	mov	r0, r4
 80082d2:	bd10      	pop	{r4, pc}

080082d4 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80082d4:	f1a0 0004 	sub.w	r0, r0, #4
 80082d8:	e7f5      	b.n	80082c6 <_ZN25Calibration_HallPresenterD0Ev>

080082da <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80082da:	4770      	bx	lr

080082dc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80082dc:	b510      	push	{r4, lr}
 80082de:	2200      	movs	r2, #0
 80082e0:	6082      	str	r2, [r0, #8]
    : view(v)
 80082e2:	4a04      	ldr	r2, [pc, #16]	; (80082f4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80082e4:	60c1      	str	r1, [r0, #12]
 80082e6:	f102 0408 	add.w	r4, r2, #8
 80082ea:	3224      	adds	r2, #36	; 0x24
 80082ec:	6004      	str	r4, [r0, #0]
 80082ee:	6042      	str	r2, [r0, #4]
}
 80082f0:	bd10      	pop	{r4, pc}
 80082f2:	bf00      	nop
 80082f4:	0802d8f8 	.word	0x0802d8f8

080082f8 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80082f8:	4770      	bx	lr

080082fa <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80082fa:	4770      	bx	lr

080082fc <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80082fc:	b510      	push	{r4, lr}
 80082fe:	4b03      	ldr	r3, [pc, #12]	; (800830c <_ZN20Calibration_HallViewD1Ev+0x10>)
 8008300:	6003      	str	r3, [r0, #0]
 8008302:	4604      	mov	r4, r0
 8008304:	f7fa fd1c 	bl	8002d40 <_ZN24Calibration_HallViewBaseD1Ev>
 8008308:	4620      	mov	r0, r4
 800830a:	bd10      	pop	{r4, pc}
 800830c:	0802d930 	.word	0x0802d930

08008310 <_ZN20Calibration_HallViewD0Ev>:
 8008310:	b510      	push	{r4, lr}
 8008312:	4604      	mov	r4, r0
 8008314:	f7ff fff2 	bl	80082fc <_ZN20Calibration_HallViewD1Ev>
 8008318:	4620      	mov	r0, r4
 800831a:	f241 015c 	movw	r1, #4188	; 0x105c
 800831e:	f020 ff9e 	bl	802925e <_ZdlPvj>
 8008322:	4620      	mov	r0, r4
 8008324:	bd10      	pop	{r4, pc}
	...

08008328 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008328:	b510      	push	{r4, lr}
 800832a:	4604      	mov	r4, r0
 800832c:	f7fa fd30 	bl	8002d90 <_ZN24Calibration_HallViewBaseC1Ev>
 8008330:	4b01      	ldr	r3, [pc, #4]	; (8008338 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008332:	6023      	str	r3, [r4, #0]
}
 8008334:	4620      	mov	r0, r4
 8008336:	bd10      	pop	{r4, pc}
 8008338:	0802d930 	.word	0x0802d930

0800833c <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 800833c:	f7fa bcdc 	b.w	8002cf8 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008340 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008340:	4770      	bx	lr

08008342 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008342:	3804      	subs	r0, #4
 8008344:	4770      	bx	lr

08008346 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008346:	4770      	bx	lr

08008348 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008348:	4770      	bx	lr

0800834a <_ZN24Calibration_PadPresenterD0Ev>:
 800834a:	b510      	push	{r4, lr}
 800834c:	2110      	movs	r1, #16
 800834e:	4604      	mov	r4, r0
 8008350:	f020 ff85 	bl	802925e <_ZdlPvj>
 8008354:	4620      	mov	r0, r4
 8008356:	bd10      	pop	{r4, pc}

08008358 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008358:	f1a0 0004 	sub.w	r0, r0, #4
 800835c:	e7f5      	b.n	800834a <_ZN24Calibration_PadPresenterD0Ev>

0800835e <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800835e:	4770      	bx	lr

08008360 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008360:	b510      	push	{r4, lr}
 8008362:	2200      	movs	r2, #0
 8008364:	6082      	str	r2, [r0, #8]
    : view(v)
 8008366:	4a04      	ldr	r2, [pc, #16]	; (8008378 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008368:	60c1      	str	r1, [r0, #12]
 800836a:	f102 0408 	add.w	r4, r2, #8
 800836e:	3224      	adds	r2, #36	; 0x24
 8008370:	6004      	str	r4, [r0, #0]
 8008372:	6042      	str	r2, [r0, #4]
}
 8008374:	bd10      	pop	{r4, pc}
 8008376:	bf00      	nop
 8008378:	0802d960 	.word	0x0802d960

0800837c <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800837c:	4770      	bx	lr

0800837e <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800837e:	4770      	bx	lr

08008380 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008380:	b510      	push	{r4, lr}
 8008382:	4b03      	ldr	r3, [pc, #12]	; (8008390 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008384:	6003      	str	r3, [r0, #0]
 8008386:	4604      	mov	r4, r0
 8008388:	f7fa fe8a 	bl	80030a0 <_ZN23Calibration_PadViewBaseD1Ev>
 800838c:	4620      	mov	r0, r4
 800838e:	bd10      	pop	{r4, pc}
 8008390:	0802d998 	.word	0x0802d998

08008394 <_ZN19Calibration_PadViewD0Ev>:
 8008394:	b510      	push	{r4, lr}
 8008396:	4604      	mov	r4, r0
 8008398:	f7ff fff2 	bl	8008380 <_ZN19Calibration_PadViewD1Ev>
 800839c:	4620      	mov	r0, r4
 800839e:	f241 015c 	movw	r1, #4188	; 0x105c
 80083a2:	f020 ff5c 	bl	802925e <_ZdlPvj>
 80083a6:	4620      	mov	r0, r4
 80083a8:	bd10      	pop	{r4, pc}
	...

080083ac <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 80083ac:	b510      	push	{r4, lr}
 80083ae:	4604      	mov	r4, r0
 80083b0:	f7fa fe9e 	bl	80030f0 <_ZN23Calibration_PadViewBaseC1Ev>
 80083b4:	4b01      	ldr	r3, [pc, #4]	; (80083bc <_ZN19Calibration_PadViewC1Ev+0x10>)
 80083b6:	6023      	str	r3, [r4, #0]
}
 80083b8:	4620      	mov	r0, r4
 80083ba:	bd10      	pop	{r4, pc}
 80083bc:	0802d998 	.word	0x0802d998

080083c0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80083c0:	f7fa be4a 	b.w	8003058 <_ZN23Calibration_PadViewBase11setupScreenEv>

080083c4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80083c4:	4770      	bx	lr

080083c6 <_ZN19FrontendApplicationD0Ev>:
 80083c6:	b510      	push	{r4, lr}
 80083c8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80083cc:	4604      	mov	r4, r0
 80083ce:	f020 ff46 	bl	802925e <_ZdlPvj>
 80083d2:	4620      	mov	r0, r4
 80083d4:	bd10      	pop	{r4, pc}

080083d6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80083d6:	b510      	push	{r4, lr}
 80083d8:	4604      	mov	r4, r0
    {
        model.tick();
 80083da:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80083de:	f000 fb13 	bl	8008a08 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80083e2:	4620      	mov	r0, r4
    }
 80083e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80083e8:	f00c bf86 	b.w	80152f8 <_ZN8touchgfx11Application15handleTickEventEv>

080083ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80083ec:	b510      	push	{r4, lr}
 80083ee:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80083f0:	f7fb fa90 	bl	8003914 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80083f4:	4b01      	ldr	r3, [pc, #4]	; (80083fc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80083f6:	6023      	str	r3, [r4, #0]
{

}
 80083f8:	4620      	mov	r0, r4
 80083fa:	bd10      	pop	{r4, pc}
 80083fc:	0802d9d0 	.word	0x0802d9d0

08008400 <_ZN17Gauge_with_ValuesD1Ev>:
 8008400:	b510      	push	{r4, lr}
 8008402:	4b03      	ldr	r3, [pc, #12]	; (8008410 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8008404:	6003      	str	r3, [r0, #0]
 8008406:	4604      	mov	r4, r0
 8008408:	f7fc fd8a 	bl	8004f20 <_ZN21Gauge_with_ValuesBaseD1Ev>
 800840c:	4620      	mov	r0, r4
 800840e:	bd10      	pop	{r4, pc}
 8008410:	0802da24 	.word	0x0802da24

08008414 <_ZN17Gauge_with_ValuesD0Ev>:
 8008414:	b510      	push	{r4, lr}
 8008416:	4604      	mov	r4, r0
 8008418:	f7ff fff2 	bl	8008400 <_ZN17Gauge_with_ValuesD1Ev>
 800841c:	4620      	mov	r0, r4
 800841e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8008422:	f020 ff1c 	bl	802925e <_ZdlPvj>
 8008426:	4620      	mov	r0, r4
 8008428:	bd10      	pop	{r4, pc}
	...

0800842c <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 800842c:	b510      	push	{r4, lr}
 800842e:	4604      	mov	r4, r0
 8008430:	f7fc fd80 	bl	8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8008434:	4b01      	ldr	r3, [pc, #4]	; (800843c <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8008436:	6023      	str	r3, [r4, #0]
{

}
 8008438:	4620      	mov	r0, r4
 800843a:	bd10      	pop	{r4, pc}
 800843c:	0802da24 	.word	0x0802da24

08008440 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008440:	f7fc bd6f 	b.w	8004f22 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008444 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008444:	4770      	bx	lr

08008446 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008446:	3804      	subs	r0, #4
 8008448:	4770      	bx	lr

0800844a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800844a:	4770      	bx	lr

0800844c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800844c:	68c0      	ldr	r0, [r0, #12]
 800844e:	6803      	ldr	r3, [r0, #0]
 8008450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008452:	4718      	bx	r3

08008454 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008454:	f1a0 0004 	sub.w	r0, r0, #4
 8008458:	f7ff bff8 	b.w	800844c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800845c <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800845c:	b510      	push	{r4, lr}
 800845e:	2110      	movs	r1, #16
 8008460:	4604      	mov	r4, r0
 8008462:	f020 fefc 	bl	802925e <_ZdlPvj>
 8008466:	4620      	mov	r0, r4
 8008468:	bd10      	pop	{r4, pc}

0800846a <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800846a:	f1a0 0004 	sub.w	r0, r0, #4
 800846e:	e7f5      	b.n	800845c <_ZN18Main_MenuPresenterD0Ev>

08008470 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008470:	b510      	push	{r4, lr}
 8008472:	2200      	movs	r2, #0
 8008474:	6082      	str	r2, [r0, #8]
    : view(v)
 8008476:	4a04      	ldr	r2, [pc, #16]	; (8008488 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008478:	60c1      	str	r1, [r0, #12]
 800847a:	f102 0408 	add.w	r4, r2, #8
 800847e:	3224      	adds	r2, #36	; 0x24
 8008480:	6004      	str	r4, [r0, #0]
 8008482:	6042      	str	r2, [r0, #4]
}
 8008484:	bd10      	pop	{r4, pc}
 8008486:	bf00      	nop
 8008488:	0802dab0 	.word	0x0802dab0

0800848c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800848c:	4770      	bx	lr
	...

08008490 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008490:	b510      	push	{r4, lr}
 8008492:	4b03      	ldr	r3, [pc, #12]	; (80084a0 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008494:	6003      	str	r3, [r0, #0]
 8008496:	4604      	mov	r4, r0
 8008498:	f7fc ff48 	bl	800532c <_ZN17Main_MenuViewBaseD1Ev>
 800849c:	4620      	mov	r0, r4
 800849e:	bd10      	pop	{r4, pc}
 80084a0:	0802dae8 	.word	0x0802dae8

080084a4 <_ZN13Main_MenuViewD0Ev>:
 80084a4:	b510      	push	{r4, lr}
 80084a6:	4604      	mov	r4, r0
 80084a8:	f7ff fff2 	bl	8008490 <_ZN13Main_MenuViewD1Ev>
 80084ac:	4620      	mov	r0, r4
 80084ae:	f241 117c 	movw	r1, #4476	; 0x117c
 80084b2:	f020 fed4 	bl	802925e <_ZdlPvj>
 80084b6:	4620      	mov	r0, r4
 80084b8:	bd10      	pop	{r4, pc}
	...

080084bc <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80084bc:	b510      	push	{r4, lr}
 80084be:	4604      	mov	r4, r0
 80084c0:	f7fc ff7e 	bl	80053c0 <_ZN17Main_MenuViewBaseC1Ev>
 80084c4:	4b01      	ldr	r3, [pc, #4]	; (80084cc <_ZN13Main_MenuViewC1Ev+0x10>)
 80084c6:	6023      	str	r3, [r4, #0]
}
 80084c8:	4620      	mov	r0, r4
 80084ca:	bd10      	pop	{r4, pc}
 80084cc:	0802dae8 	.word	0x0802dae8

080084d0 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80084d0:	f7fc bf08 	b.w	80052e4 <_ZN17Main_MenuViewBase11setupScreenEv>

080084d4 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80084d4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80084d6:	4a0a      	ldr	r2, [pc, #40]	; (8008500 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80084d8:	4605      	mov	r5, r0
 80084da:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80084dc:	460b      	mov	r3, r1
 80084de:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80084e2:	2104      	movs	r1, #4
 80084e4:	f00f ffb4 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80084e8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80084ec:	f00d ff28 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80084f0:	b92c      	cbnz	r4, 80084fe <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80084f2:	f00c fe3d 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80084f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80084fa:	f7fb bb3b 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80084fe:	bd38      	pop	{r3, r4, r5, pc}
 8008500:	0802d8bc 	.word	0x0802d8bc

08008504 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008504:	4770      	bx	lr

08008506 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008506:	3804      	subs	r0, #4
 8008508:	4770      	bx	lr

0800850a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800850a:	4770      	bx	lr

0800850c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800850c:	68c0      	ldr	r0, [r0, #12]
 800850e:	6803      	ldr	r3, [r0, #0]
 8008510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008512:	4718      	bx	r3

08008514 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008514:	f1a0 0004 	sub.w	r0, r0, #4
 8008518:	f7ff bff8 	b.w	800850c <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800851c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800851c:	b510      	push	{r4, lr}
 800851e:	2110      	movs	r1, #16
 8008520:	4604      	mov	r4, r0
 8008522:	f020 fe9c 	bl	802925e <_ZdlPvj>
 8008526:	4620      	mov	r0, r4
 8008528:	bd10      	pop	{r4, pc}

0800852a <_ZThn4_N20MeasurementPresenterD0Ev>:
 800852a:	f1a0 0004 	sub.w	r0, r0, #4
 800852e:	e7f5      	b.n	800851c <_ZN20MeasurementPresenterD0Ev>

08008530 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008530:	b510      	push	{r4, lr}
 8008532:	2200      	movs	r2, #0
 8008534:	6082      	str	r2, [r0, #8]
    : view(v)
 8008536:	4a04      	ldr	r2, [pc, #16]	; (8008548 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008538:	60c1      	str	r1, [r0, #12]
 800853a:	f102 0408 	add.w	r4, r2, #8
 800853e:	3224      	adds	r2, #36	; 0x24
 8008540:	6004      	str	r4, [r0, #0]
 8008542:	6042      	str	r2, [r0, #4]
}
 8008544:	bd10      	pop	{r4, pc}
 8008546:	bf00      	nop
 8008548:	0802db18 	.word	0x0802db18

0800854c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800854c:	4770      	bx	lr
	...

08008550 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008550:	b510      	push	{r4, lr}
 8008552:	4b03      	ldr	r3, [pc, #12]	; (8008560 <_ZN15MeasurementViewD1Ev+0x10>)
 8008554:	6003      	str	r3, [r0, #0]
 8008556:	4604      	mov	r4, r0
 8008558:	f7fd f9a2 	bl	80058a0 <_ZN19MeasurementViewBaseD1Ev>
 800855c:	4620      	mov	r0, r4
 800855e:	bd10      	pop	{r4, pc}
 8008560:	0802db50 	.word	0x0802db50

08008564 <_ZN15MeasurementViewD0Ev>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4604      	mov	r4, r0
 8008568:	f7ff fff2 	bl	8008550 <_ZN15MeasurementViewD1Ev>
 800856c:	4620      	mov	r0, r4
 800856e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008572:	f020 fe74 	bl	802925e <_ZdlPvj>
 8008576:	4620      	mov	r0, r4
 8008578:	bd10      	pop	{r4, pc}
	...

0800857c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800857c:	b510      	push	{r4, lr}
 800857e:	4604      	mov	r4, r0
 8008580:	f7fd f9c8 	bl	8005914 <_ZN19MeasurementViewBaseC1Ev>
 8008584:	4b01      	ldr	r3, [pc, #4]	; (800858c <_ZN15MeasurementViewC1Ev+0x10>)
 8008586:	6023      	str	r3, [r4, #0]
}
 8008588:	4620      	mov	r0, r4
 800858a:	bd10      	pop	{r4, pc}
 800858c:	0802db50 	.word	0x0802db50

08008590 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008590:	f7fd b962 	b.w	8005858 <_ZN19MeasurementViewBase11setupScreenEv>

08008594 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008594:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008596:	4a0a      	ldr	r2, [pc, #40]	; (80085c0 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008598:	4605      	mov	r5, r0
 800859a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800859c:	460b      	mov	r3, r1
 800859e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80085a2:	2104      	movs	r1, #4
 80085a4:	f00f ff54 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80085a8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80085ac:	f00d fec8 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80085b0:	b92c      	cbnz	r4, 80085be <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80085b2:	f00c fddd 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80085b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80085ba:	f7fb badb 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80085be:	bd38      	pop	{r3, r4, r5, pc}
 80085c0:	0802d8bc 	.word	0x0802d8bc

080085c4 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80085c4:	4770      	bx	lr

080085c6 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80085c6:	3804      	subs	r0, #4
 80085c8:	4770      	bx	lr

080085ca <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80085ca:	4770      	bx	lr

080085cc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80085cc:	68c0      	ldr	r0, [r0, #12]
 80085ce:	6803      	ldr	r3, [r0, #0]
 80085d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085d2:	4718      	bx	r3

080085d4 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80085d4:	f1a0 0004 	sub.w	r0, r0, #4
 80085d8:	f7ff bff8 	b.w	80085cc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080085dc <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80085dc:	b510      	push	{r4, lr}
 80085de:	2110      	movs	r1, #16
 80085e0:	4604      	mov	r4, r0
 80085e2:	f020 fe3c 	bl	802925e <_ZdlPvj>
 80085e6:	4620      	mov	r0, r4
 80085e8:	bd10      	pop	{r4, pc}

080085ea <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80085ea:	f1a0 0004 	sub.w	r0, r0, #4
 80085ee:	e7f5      	b.n	80085dc <_ZN29Measurement_AccuratePresenterD0Ev>

080085f0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80085f0:	b510      	push	{r4, lr}
 80085f2:	2200      	movs	r2, #0
 80085f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80085f6:	4a04      	ldr	r2, [pc, #16]	; (8008608 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80085f8:	60c1      	str	r1, [r0, #12]
 80085fa:	f102 0408 	add.w	r4, r2, #8
 80085fe:	3224      	adds	r2, #36	; 0x24
 8008600:	6004      	str	r4, [r0, #0]
 8008602:	6042      	str	r2, [r0, #4]
}
 8008604:	bd10      	pop	{r4, pc}
 8008606:	bf00      	nop
 8008608:	0802db80 	.word	0x0802db80

0800860c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800860c:	4770      	bx	lr
	...

08008610 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008610:	b510      	push	{r4, lr}
 8008612:	4b03      	ldr	r3, [pc, #12]	; (8008620 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008614:	6003      	str	r3, [r0, #0]
 8008616:	4604      	mov	r4, r0
 8008618:	f7fd fbc4 	bl	8005da4 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800861c:	4620      	mov	r0, r4
 800861e:	bd10      	pop	{r4, pc}
 8008620:	0802dbb8 	.word	0x0802dbb8

08008624 <_ZN24Measurement_AccurateViewD0Ev>:
 8008624:	b510      	push	{r4, lr}
 8008626:	4604      	mov	r4, r0
 8008628:	f7ff fff2 	bl	8008610 <_ZN24Measurement_AccurateViewD1Ev>
 800862c:	4620      	mov	r0, r4
 800862e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008632:	f020 fe14 	bl	802925e <_ZdlPvj>
 8008636:	4620      	mov	r0, r4
 8008638:	bd10      	pop	{r4, pc}
	...

0800863c <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800863c:	b510      	push	{r4, lr}
 800863e:	4604      	mov	r4, r0
 8008640:	f7fd fbea 	bl	8005e18 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008644:	4b01      	ldr	r3, [pc, #4]	; (800864c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008646:	6023      	str	r3, [r4, #0]
}
 8008648:	4620      	mov	r0, r4
 800864a:	bd10      	pop	{r4, pc}
 800864c:	0802dbb8 	.word	0x0802dbb8

08008650 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008650:	f7fd bb84 	b.w	8005d5c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008654 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008654:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008656:	4a0a      	ldr	r2, [pc, #40]	; (8008680 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008658:	4605      	mov	r5, r0
 800865a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800865c:	460b      	mov	r3, r1
 800865e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008662:	2104      	movs	r1, #4
 8008664:	f00f fef4 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008668:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800866c:	f00d fe68 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008670:	b92c      	cbnz	r4, 800867e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008672:	f00c fd7d 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008676:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800867a:	f7fb ba7b 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800867e:	bd38      	pop	{r3, r4, r5, pc}
 8008680:	0802d8bc 	.word	0x0802d8bc

08008684 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008684:	4770      	bx	lr

08008686 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008686:	3804      	subs	r0, #4
 8008688:	4770      	bx	lr

0800868a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800868a:	4770      	bx	lr

0800868c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800868c:	4770      	bx	lr

0800868e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800868e:	b510      	push	{r4, lr}
 8008690:	2110      	movs	r1, #16
 8008692:	4604      	mov	r4, r0
 8008694:	f020 fde3 	bl	802925e <_ZdlPvj>
 8008698:	4620      	mov	r0, r4
 800869a:	bd10      	pop	{r4, pc}

0800869c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800869c:	f1a0 0004 	sub.w	r0, r0, #4
 80086a0:	e7f5      	b.n	800868e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

080086a2 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 80086a2:	4770      	bx	lr

080086a4 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 80086a4:	b510      	push	{r4, lr}
 80086a6:	2200      	movs	r2, #0
 80086a8:	6082      	str	r2, [r0, #8]
    : view(v)
 80086aa:	4a04      	ldr	r2, [pc, #16]	; (80086bc <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 80086ac:	60c1      	str	r1, [r0, #12]
 80086ae:	f102 0408 	add.w	r4, r2, #8
 80086b2:	3224      	adds	r2, #36	; 0x24
 80086b4:	6004      	str	r4, [r0, #0]
 80086b6:	6042      	str	r2, [r0, #4]
}
 80086b8:	bd10      	pop	{r4, pc}
 80086ba:	bf00      	nop
 80086bc:	0802dbe8 	.word	0x0802dbe8

080086c0 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80086c0:	4770      	bx	lr
	...

080086c4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80086c4:	b510      	push	{r4, lr}
 80086c6:	4b03      	ldr	r3, [pc, #12]	; (80086d4 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80086c8:	6003      	str	r3, [r0, #0]
 80086ca:	4604      	mov	r4, r0
 80086cc:	f7fd fdf6 	bl	80062bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80086d0:	4620      	mov	r0, r4
 80086d2:	bd10      	pop	{r4, pc}
 80086d4:	0802dc20 	.word	0x0802dc20

080086d8 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80086d8:	b510      	push	{r4, lr}
 80086da:	4604      	mov	r4, r0
 80086dc:	f7ff fff2 	bl	80086c4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80086e0:	4620      	mov	r0, r4
 80086e2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80086e6:	f020 fdba 	bl	802925e <_ZdlPvj>
 80086ea:	4620      	mov	r0, r4
 80086ec:	bd10      	pop	{r4, pc}
	...

080086f0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80086f0:	b510      	push	{r4, lr}
 80086f2:	4604      	mov	r4, r0
 80086f4:	f7fd fe02 	bl	80062fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80086f8:	4b01      	ldr	r3, [pc, #4]	; (8008700 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80086fa:	6023      	str	r3, [r4, #0]
}
 80086fc:	4620      	mov	r0, r4
 80086fe:	bd10      	pop	{r4, pc}
 8008700:	0802dc20 	.word	0x0802dc20

08008704 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008704:	f7fd bdcb 	b.w	800629e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008708 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008708:	4770      	bx	lr

0800870a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800870a:	3804      	subs	r0, #4
 800870c:	4770      	bx	lr

0800870e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800870e:	4770      	bx	lr

08008710 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008710:	4770      	bx	lr

08008712 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008712:	b510      	push	{r4, lr}
 8008714:	2110      	movs	r1, #16
 8008716:	4604      	mov	r4, r0
 8008718:	f020 fda1 	bl	802925e <_ZdlPvj>
 800871c:	4620      	mov	r0, r4
 800871e:	bd10      	pop	{r4, pc}

08008720 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008720:	f1a0 0004 	sub.w	r0, r0, #4
 8008724:	e7f5      	b.n	8008712 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008726 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008726:	4770      	bx	lr

08008728 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008728:	b510      	push	{r4, lr}
 800872a:	2200      	movs	r2, #0
 800872c:	6082      	str	r2, [r0, #8]
    : view(v)
 800872e:	4a04      	ldr	r2, [pc, #16]	; (8008740 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008730:	60c1      	str	r1, [r0, #12]
 8008732:	f102 0408 	add.w	r4, r2, #8
 8008736:	3224      	adds	r2, #36	; 0x24
 8008738:	6004      	str	r4, [r0, #0]
 800873a:	6042      	str	r2, [r0, #4]
}
 800873c:	bd10      	pop	{r4, pc}
 800873e:	bf00      	nop
 8008740:	0802dc4c 	.word	0x0802dc4c

08008744 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008744:	4770      	bx	lr
	...

08008748 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008748:	b510      	push	{r4, lr}
 800874a:	4b03      	ldr	r3, [pc, #12]	; (8008758 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800874c:	6003      	str	r3, [r0, #0]
 800874e:	4604      	mov	r4, r0
 8008750:	f7fd ff78 	bl	8006644 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008754:	4620      	mov	r0, r4
 8008756:	bd10      	pop	{r4, pc}
 8008758:	0802dc84 	.word	0x0802dc84

0800875c <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800875c:	b510      	push	{r4, lr}
 800875e:	4604      	mov	r4, r0
 8008760:	f7ff fff2 	bl	8008748 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008764:	4620      	mov	r0, r4
 8008766:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800876a:	f020 fd78 	bl	802925e <_ZdlPvj>
 800876e:	4620      	mov	r0, r4
 8008770:	bd10      	pop	{r4, pc}
	...

08008774 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008774:	b510      	push	{r4, lr}
 8008776:	4604      	mov	r4, r0
 8008778:	f7fd ff84 	bl	8006684 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800877c:	4b01      	ldr	r3, [pc, #4]	; (8008784 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800877e:	6023      	str	r3, [r4, #0]
}
 8008780:	4620      	mov	r0, r4
 8008782:	bd10      	pop	{r4, pc}
 8008784:	0802dc84 	.word	0x0802dc84

08008788 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008788:	f7fd bf4d 	b.w	8006626 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800878c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800878c:	4770      	bx	lr

0800878e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800878e:	3804      	subs	r0, #4
 8008790:	4770      	bx	lr

08008792 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008792:	4770      	bx	lr

08008794 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008794:	68c0      	ldr	r0, [r0, #12]
 8008796:	6803      	ldr	r3, [r0, #0]
 8008798:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800879a:	4718      	bx	r3

0800879c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800879c:	f1a0 0004 	sub.w	r0, r0, #4
 80087a0:	f7ff bff8 	b.w	8008794 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

080087a4 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 80087a4:	b510      	push	{r4, lr}
 80087a6:	2110      	movs	r1, #16
 80087a8:	4604      	mov	r4, r0
 80087aa:	f020 fd58 	bl	802925e <_ZdlPvj>
 80087ae:	4620      	mov	r0, r4
 80087b0:	bd10      	pop	{r4, pc}

080087b2 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80087b2:	f1a0 0004 	sub.w	r0, r0, #4
 80087b6:	e7f5      	b.n	80087a4 <_ZN27Measurement_SinglePresenterD0Ev>

080087b8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80087b8:	b510      	push	{r4, lr}
 80087ba:	2200      	movs	r2, #0
 80087bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80087be:	4a04      	ldr	r2, [pc, #16]	; (80087d0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80087c0:	60c1      	str	r1, [r0, #12]
 80087c2:	f102 0408 	add.w	r4, r2, #8
 80087c6:	3224      	adds	r2, #36	; 0x24
 80087c8:	6004      	str	r4, [r0, #0]
 80087ca:	6042      	str	r2, [r0, #4]
}
 80087cc:	bd10      	pop	{r4, pc}
 80087ce:	bf00      	nop
 80087d0:	0802dcb0 	.word	0x0802dcb0

080087d4 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80087d4:	4770      	bx	lr
	...

080087d8 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80087d8:	b510      	push	{r4, lr}
 80087da:	4b03      	ldr	r3, [pc, #12]	; (80087e8 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80087dc:	6003      	str	r3, [r0, #0]
 80087de:	4604      	mov	r4, r0
 80087e0:	f7fe f8e6 	bl	80069b0 <_ZN26Measurement_SingleViewBaseD1Ev>
 80087e4:	4620      	mov	r0, r4
 80087e6:	bd10      	pop	{r4, pc}
 80087e8:	0802dce8 	.word	0x0802dce8

080087ec <_ZN22Measurement_SingleViewD0Ev>:
 80087ec:	b510      	push	{r4, lr}
 80087ee:	4604      	mov	r4, r0
 80087f0:	f7ff fff2 	bl	80087d8 <_ZN22Measurement_SingleViewD1Ev>
 80087f4:	4620      	mov	r0, r4
 80087f6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80087fa:	f020 fd30 	bl	802925e <_ZdlPvj>
 80087fe:	4620      	mov	r0, r4
 8008800:	bd10      	pop	{r4, pc}
	...

08008804 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008804:	b510      	push	{r4, lr}
 8008806:	4604      	mov	r4, r0
 8008808:	f7fe f90c 	bl	8006a24 <_ZN26Measurement_SingleViewBaseC1Ev>
 800880c:	4b01      	ldr	r3, [pc, #4]	; (8008814 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800880e:	6023      	str	r3, [r4, #0]
}
 8008810:	4620      	mov	r0, r4
 8008812:	bd10      	pop	{r4, pc}
 8008814:	0802dce8 	.word	0x0802dce8

08008818 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008818:	f7fe b8a6 	b.w	8006968 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800881c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800881c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800881e:	4a0a      	ldr	r2, [pc, #40]	; (8008848 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008820:	4605      	mov	r5, r0
 8008822:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008824:	460b      	mov	r3, r1
 8008826:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800882a:	2104      	movs	r1, #4
 800882c:	f00f fe10 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008830:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008834:	f00d fd84 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008838:	b92c      	cbnz	r4, 8008846 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800883a:	f00c fc99 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800883e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008842:	f7fb b997 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008846:	bd38      	pop	{r3, r4, r5, pc}
 8008848:	0802d8bc 	.word	0x0802d8bc

0800884c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800884c:	4770      	bx	lr

0800884e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800884e:	3804      	subs	r0, #4
 8008850:	4770      	bx	lr

08008852 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008852:	4770      	bx	lr

08008854 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008854:	4770      	bx	lr

08008856 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008856:	b510      	push	{r4, lr}
 8008858:	2110      	movs	r1, #16
 800885a:	4604      	mov	r4, r0
 800885c:	f020 fcff 	bl	802925e <_ZdlPvj>
 8008860:	4620      	mov	r0, r4
 8008862:	bd10      	pop	{r4, pc}

08008864 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008864:	f1a0 0004 	sub.w	r0, r0, #4
 8008868:	e7f5      	b.n	8008856 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800886a <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800886a:	4770      	bx	lr

0800886c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800886c:	b510      	push	{r4, lr}
 800886e:	2200      	movs	r2, #0
 8008870:	6082      	str	r2, [r0, #8]
    : view(v)
 8008872:	4a04      	ldr	r2, [pc, #16]	; (8008884 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008874:	60c1      	str	r1, [r0, #12]
 8008876:	f102 0408 	add.w	r4, r2, #8
 800887a:	3224      	adds	r2, #36	; 0x24
 800887c:	6004      	str	r4, [r0, #0]
 800887e:	6042      	str	r2, [r0, #4]
}
 8008880:	bd10      	pop	{r4, pc}
 8008882:	bf00      	nop
 8008884:	0802dd18 	.word	0x0802dd18

08008888 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008888:	4770      	bx	lr
	...

0800888c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800888c:	b510      	push	{r4, lr}
 800888e:	4b03      	ldr	r3, [pc, #12]	; (800889c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008890:	6003      	str	r3, [r0, #0]
 8008892:	4604      	mov	r4, r0
 8008894:	f7fe fb12 	bl	8006ebc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008898:	4620      	mov	r0, r4
 800889a:	bd10      	pop	{r4, pc}
 800889c:	0802dd58 	.word	0x0802dd58

080088a0 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80088a0:	b510      	push	{r4, lr}
 80088a2:	4604      	mov	r4, r0
 80088a4:	f7ff fff2 	bl	800888c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80088a8:	4620      	mov	r0, r4
 80088aa:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80088ae:	f020 fcd6 	bl	802925e <_ZdlPvj>
 80088b2:	4620      	mov	r0, r4
 80088b4:	bd10      	pop	{r4, pc}
	...

080088b8 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80088b8:	b510      	push	{r4, lr}
 80088ba:	4604      	mov	r4, r0
 80088bc:	f7fe fb38 	bl	8006f30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80088c0:	4b01      	ldr	r3, [pc, #4]	; (80088c8 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80088c2:	6023      	str	r3, [r4, #0]
}
 80088c4:	4620      	mov	r0, r4
 80088c6:	bd10      	pop	{r4, pc}
 80088c8:	0802dd58 	.word	0x0802dd58

080088cc <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80088cc:	f7fe bad1 	b.w	8006e72 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080088d0 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80088d0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR
	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80088d2:	4e26      	ldr	r6, [pc, #152]	; (800896c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x9c>)
{
 80088d4:	b086      	sub	sp, #24
 80088d6:	4604      	mov	r4, r0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80088d8:	2201      	movs	r2, #1
 80088da:	2180      	movs	r1, #128	; 0x80
 80088dc:	4630      	mov	r0, r6
 80088de:	f000 ff53 	bl	8009788 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 80088e2:	f7f8 fd09 	bl	80012f8 <updateGUI_test>
 80088e6:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 80088e8:	f7f9 fa26 	bl	8001d38 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80088ec:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80088ee:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80088f0:	2001      	movs	r0, #1
 80088f2:	f7f8 fc4d 	bl	8001190 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80088f6:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80088fa:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80088fc:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008900:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008904:	9001      	str	r0, [sp, #4]
 8008906:	f009 fcc7 	bl	8012298 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800890a:	9801      	ldr	r0, [sp, #4]
 800890c:	f00d fd18 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008910:	462b      	mov	r3, r5
 8008912:	4a17      	ldr	r2, [pc, #92]	; (8008970 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa0>)
 8008914:	210a      	movs	r1, #10
 8008916:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 800891a:	f00f fd99 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 800891e:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008922:	f00d fd0d 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008926:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008928:	4a12      	ldr	r2, [pc, #72]	; (8008974 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa4>)
 800892a:	9303      	str	r3, [sp, #12]
 800892c:	210a      	movs	r1, #10
 800892e:	ab03      	add	r3, sp, #12
 8008930:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008934:	f00f ff78 	bl	8018828 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008938:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800893c:	f00d fd00 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008940:	9b05      	ldr	r3, [sp, #20]
 8008942:	4a0c      	ldr	r2, [pc, #48]	; (8008974 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa4>)
 8008944:	9303      	str	r3, [sp, #12]
 8008946:	210a      	movs	r1, #10
 8008948:	ab03      	add	r3, sp, #12
 800894a:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800894e:	f00f ff6b 	bl	8018828 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008952:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008956:	f00d fcf3 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 800895a:	2200      	movs	r2, #0
 800895c:	2180      	movs	r1, #128	; 0x80
 800895e:	4630      	mov	r0, r6

#endif
}
 8008960:	b006      	add	sp, #24
 8008962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008966:	f000 bf0f 	b.w	8009788 <HAL_GPIO_WritePin>
 800896a:	bf00      	nop
 800896c:	40020000 	.word	0x40020000
 8008970:	0802d8bc 	.word	0x0802d8bc
 8008974:	0802dd48 	.word	0x0802dd48

08008978 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008978:	4770      	bx	lr

0800897a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800897a:	3804      	subs	r0, #4
 800897c:	4770      	bx	lr

0800897e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800897e:	4770      	bx	lr

08008980 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008980:	4770      	bx	lr

08008982 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008982:	b510      	push	{r4, lr}
 8008984:	2110      	movs	r1, #16
 8008986:	4604      	mov	r4, r0
 8008988:	f020 fc69 	bl	802925e <_ZdlPvj>
 800898c:	4620      	mov	r0, r4
 800898e:	bd10      	pop	{r4, pc}

08008990 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008990:	f1a0 0004 	sub.w	r0, r0, #4
 8008994:	e7f5      	b.n	8008982 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008996 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008996:	4770      	bx	lr

08008998 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008998:	b510      	push	{r4, lr}
 800899a:	2200      	movs	r2, #0
 800899c:	6082      	str	r2, [r0, #8]
    : view(v)
 800899e:	4a04      	ldr	r2, [pc, #16]	; (80089b0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80089a0:	60c1      	str	r1, [r0, #12]
 80089a2:	f102 0408 	add.w	r4, r2, #8
 80089a6:	3224      	adds	r2, #36	; 0x24
 80089a8:	6004      	str	r4, [r0, #0]
 80089aa:	6042      	str	r2, [r0, #4]
}
 80089ac:	bd10      	pop	{r4, pc}
 80089ae:	bf00      	nop
 80089b0:	0802dd88 	.word	0x0802dd88

080089b4 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80089b4:	4770      	bx	lr
	...

080089b8 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80089b8:	b510      	push	{r4, lr}
 80089ba:	4b03      	ldr	r3, [pc, #12]	; (80089c8 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80089bc:	6003      	str	r3, [r0, #0]
 80089be:	4604      	mov	r4, r0
 80089c0:	f7fe fe2a 	bl	8007618 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80089c4:	4620      	mov	r0, r4
 80089c6:	bd10      	pop	{r4, pc}
 80089c8:	0802ddc0 	.word	0x0802ddc0

080089cc <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80089cc:	b510      	push	{r4, lr}
 80089ce:	4604      	mov	r4, r0
 80089d0:	f7ff fff2 	bl	80089b8 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80089d4:	4620      	mov	r0, r4
 80089d6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80089da:	f020 fc40 	bl	802925e <_ZdlPvj>
 80089de:	4620      	mov	r0, r4
 80089e0:	bd10      	pop	{r4, pc}
	...

080089e4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80089e4:	b510      	push	{r4, lr}
 80089e6:	4604      	mov	r4, r0
 80089e8:	f7fe fe36 	bl	8007658 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80089ec:	4b01      	ldr	r3, [pc, #4]	; (80089f4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80089ee:	6023      	str	r3, [r4, #0]
}
 80089f0:	4620      	mov	r0, r4
 80089f2:	bd10      	pop	{r4, pc}
 80089f4:	0802ddc0 	.word	0x0802ddc0

080089f8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80089f8:	f7fe bdfd 	b.w	80075f6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080089fc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80089fc:	2100      	movs	r1, #0
 80089fe:	223c      	movs	r2, #60	; 0x3c
 8008a00:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008a04:	4770      	bx	lr
	...

08008a08 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008a08:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008a0a:	4d0a      	ldr	r5, [pc, #40]	; (8008a34 <_ZN5Model4tickEv+0x2c>)
{
 8008a0c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008a0e:	6828      	ldr	r0, [r5, #0]
 8008a10:	f004 fb0a 	bl	800d028 <osMessageQueueGetCount>
 8008a14:	b168      	cbz	r0, 8008a32 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008a16:	2300      	movs	r3, #0
 8008a18:	6828      	ldr	r0, [r5, #0]
 8008a1a:	461a      	mov	r2, r3
 8008a1c:	1d21      	adds	r1, r4, #4
 8008a1e:	f004 facf 	bl	800cfc0 <osMessageQueueGet>
 8008a22:	b930      	cbnz	r0, 8008a32 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008a24:	6820      	ldr	r0, [r4, #0]
 8008a26:	6861      	ldr	r1, [r4, #4]
 8008a28:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008a2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008a2e:	689b      	ldr	r3, [r3, #8]
 8008a30:	4718      	bx	r3
}
 8008a32:	bd70      	pop	{r4, r5, r6, pc}
 8008a34:	200018d8 	.word	0x200018d8

08008a38 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008a38:	4770      	bx	lr

08008a3a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008a3a:	3804      	subs	r0, #4
 8008a3c:	4770      	bx	lr

08008a3e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008a3e:	4770      	bx	lr

08008a40 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008a40:	68c0      	ldr	r0, [r0, #12]
 8008a42:	6803      	ldr	r3, [r0, #0]
 8008a44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a46:	4718      	bx	r3

08008a48 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008a48:	f1a0 0004 	sub.w	r0, r0, #4
 8008a4c:	f7ff bff8 	b.w	8008a40 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008a50 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008a50:	b510      	push	{r4, lr}
 8008a52:	2110      	movs	r1, #16
 8008a54:	4604      	mov	r4, r0
 8008a56:	f020 fc02 	bl	802925e <_ZdlPvj>
 8008a5a:	4620      	mov	r0, r4
 8008a5c:	bd10      	pop	{r4, pc}

08008a5e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008a5e:	f1a0 0004 	sub.w	r0, r0, #4
 8008a62:	e7f5      	b.n	8008a50 <_ZN21Project_InfoPresenterD0Ev>

08008a64 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008a64:	b510      	push	{r4, lr}
 8008a66:	2200      	movs	r2, #0
 8008a68:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a6a:	4a04      	ldr	r2, [pc, #16]	; (8008a7c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008a6c:	60c1      	str	r1, [r0, #12]
 8008a6e:	f102 0408 	add.w	r4, r2, #8
 8008a72:	3224      	adds	r2, #36	; 0x24
 8008a74:	6004      	str	r4, [r0, #0]
 8008a76:	6042      	str	r2, [r0, #4]
}
 8008a78:	bd10      	pop	{r4, pc}
 8008a7a:	bf00      	nop
 8008a7c:	0802ddec 	.word	0x0802ddec

08008a80 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008a80:	4770      	bx	lr
	...

08008a84 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008a84:	b510      	push	{r4, lr}
 8008a86:	4b03      	ldr	r3, [pc, #12]	; (8008a94 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008a88:	6003      	str	r3, [r0, #0]
 8008a8a:	4604      	mov	r4, r0
 8008a8c:	f7fe ff7e 	bl	800798c <_ZN20Project_InfoViewBaseD1Ev>
 8008a90:	4620      	mov	r0, r4
 8008a92:	bd10      	pop	{r4, pc}
 8008a94:	0802de24 	.word	0x0802de24

08008a98 <_ZN16Project_InfoViewD0Ev>:
 8008a98:	b510      	push	{r4, lr}
 8008a9a:	4604      	mov	r4, r0
 8008a9c:	f7ff fff2 	bl	8008a84 <_ZN16Project_InfoViewD1Ev>
 8008aa0:	4620      	mov	r0, r4
 8008aa2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008aa6:	f020 fbda 	bl	802925e <_ZdlPvj>
 8008aaa:	4620      	mov	r0, r4
 8008aac:	bd10      	pop	{r4, pc}
	...

08008ab0 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008ab0:	b510      	push	{r4, lr}
 8008ab2:	4604      	mov	r4, r0
 8008ab4:	f7fe ff92 	bl	80079dc <_ZN20Project_InfoViewBaseC1Ev>
 8008ab8:	4b01      	ldr	r3, [pc, #4]	; (8008ac0 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008aba:	6023      	str	r3, [r4, #0]
}
 8008abc:	4620      	mov	r0, r4
 8008abe:	bd10      	pop	{r4, pc}
 8008ac0:	0802de24 	.word	0x0802de24

08008ac4 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008ac4:	f7fe bf3e 	b.w	8007944 <_ZN20Project_InfoViewBase11setupScreenEv>

08008ac8 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008ac8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008aca:	4a0a      	ldr	r2, [pc, #40]	; (8008af4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008acc:	4605      	mov	r5, r0
 8008ace:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ad0:	460b      	mov	r3, r1
 8008ad2:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008ad6:	2104      	movs	r1, #4
 8008ad8:	f00f fcba 	bl	8018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008adc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008ae0:	f00d fc2e 	bl	8016340 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008ae4:	b92c      	cbnz	r4, 8008af2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008ae6:	f00c fb43 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008aea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008aee:	f7fb b841 	b.w	8003b74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008af2:	bd38      	pop	{r3, r4, r5, pc}
 8008af4:	0802d8bc 	.word	0x0802d8bc

08008af8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008af8:	4770      	bx	lr

08008afa <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008afa:	3804      	subs	r0, #4
 8008afc:	4770      	bx	lr

08008afe <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008afe:	4770      	bx	lr

08008b00 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008b00:	4770      	bx	lr

08008b02 <_ZN21Shutting_OffPresenterD0Ev>:
 8008b02:	b510      	push	{r4, lr}
 8008b04:	2110      	movs	r1, #16
 8008b06:	4604      	mov	r4, r0
 8008b08:	f020 fba9 	bl	802925e <_ZdlPvj>
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	bd10      	pop	{r4, pc}

08008b10 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008b10:	f1a0 0004 	sub.w	r0, r0, #4
 8008b14:	e7f5      	b.n	8008b02 <_ZN21Shutting_OffPresenterD0Ev>

08008b16 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008b16:	4770      	bx	lr

08008b18 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008b18:	b510      	push	{r4, lr}
 8008b1a:	2200      	movs	r2, #0
 8008b1c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b1e:	4a04      	ldr	r2, [pc, #16]	; (8008b30 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008b20:	60c1      	str	r1, [r0, #12]
 8008b22:	f102 0408 	add.w	r4, r2, #8
 8008b26:	3224      	adds	r2, #36	; 0x24
 8008b28:	6004      	str	r4, [r0, #0]
 8008b2a:	6042      	str	r2, [r0, #4]
}
 8008b2c:	bd10      	pop	{r4, pc}
 8008b2e:	bf00      	nop
 8008b30:	0802de54 	.word	0x0802de54

08008b34 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008b34:	4770      	bx	lr
	...

08008b38 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008b38:	b510      	push	{r4, lr}
 8008b3a:	4b03      	ldr	r3, [pc, #12]	; (8008b48 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008b3c:	6003      	str	r3, [r0, #0]
 8008b3e:	4604      	mov	r4, r0
 8008b40:	f7ff f91a 	bl	8007d78 <_ZN20Shutting_OffViewBaseD1Ev>
 8008b44:	4620      	mov	r0, r4
 8008b46:	bd10      	pop	{r4, pc}
 8008b48:	0802de8c 	.word	0x0802de8c

08008b4c <_ZN16Shutting_OffViewD0Ev>:
 8008b4c:	b510      	push	{r4, lr}
 8008b4e:	4604      	mov	r4, r0
 8008b50:	f7ff fff2 	bl	8008b38 <_ZN16Shutting_OffViewD1Ev>
 8008b54:	4620      	mov	r0, r4
 8008b56:	2198      	movs	r1, #152	; 0x98
 8008b58:	f020 fb81 	bl	802925e <_ZdlPvj>
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	bd10      	pop	{r4, pc}

08008b60 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008b60:	b510      	push	{r4, lr}
 8008b62:	4604      	mov	r4, r0
 8008b64:	f7ff f912 	bl	8007d8c <_ZN20Shutting_OffViewBaseC1Ev>
 8008b68:	4b01      	ldr	r3, [pc, #4]	; (8008b70 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008b6a:	6023      	str	r3, [r4, #0]
}
 8008b6c:	4620      	mov	r0, r4
 8008b6e:	bd10      	pop	{r4, pc}
 8008b70:	0802de8c 	.word	0x0802de8c

08008b74 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008b74:	f7ff b901 	b.w	8007d7a <_ZN20Shutting_OffViewBase11setupScreenEv>

08008b78 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008b78:	20f0      	movs	r0, #240	; 0xf0
 8008b7a:	4770      	bx	lr

08008b7c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008b7c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008b80:	4770      	bx	lr
 8008b82:	bf00      	nop

08008b84 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008b84:	2029      	movs	r0, #41	; 0x29
 8008b86:	f7f8 bf3f 	b.w	8001a08 <LCD_IO_WriteReg>
 8008b8a:	bf00      	nop

08008b8c <ili9341_DisplayOff>:
 8008b8c:	2028      	movs	r0, #40	; 0x28
 8008b8e:	f7f8 bf3b 	b.w	8001a08 <LCD_IO_WriteReg>
 8008b92:	bf00      	nop

08008b94 <ili9341_Init>:
{
 8008b94:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008b96:	f7f8 fefd 	bl	8001994 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008b9a:	20ca      	movs	r0, #202	; 0xca
 8008b9c:	f7f8 ff34 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ba0:	20c3      	movs	r0, #195	; 0xc3
 8008ba2:	f7f8 ff07 	bl	80019b4 <LCD_IO_WriteData>
 8008ba6:	2008      	movs	r0, #8
 8008ba8:	f7f8 ff04 	bl	80019b4 <LCD_IO_WriteData>
 8008bac:	2050      	movs	r0, #80	; 0x50
 8008bae:	f7f8 ff01 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bb2:	20cf      	movs	r0, #207	; 0xcf
 8008bb4:	f7f8 ff28 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bb8:	2000      	movs	r0, #0
 8008bba:	f7f8 fefb 	bl	80019b4 <LCD_IO_WriteData>
 8008bbe:	20c1      	movs	r0, #193	; 0xc1
 8008bc0:	f7f8 fef8 	bl	80019b4 <LCD_IO_WriteData>
 8008bc4:	2030      	movs	r0, #48	; 0x30
 8008bc6:	f7f8 fef5 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bca:	20ed      	movs	r0, #237	; 0xed
 8008bcc:	f7f8 ff1c 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bd0:	2064      	movs	r0, #100	; 0x64
 8008bd2:	f7f8 feef 	bl	80019b4 <LCD_IO_WriteData>
 8008bd6:	2003      	movs	r0, #3
 8008bd8:	f7f8 feec 	bl	80019b4 <LCD_IO_WriteData>
 8008bdc:	2012      	movs	r0, #18
 8008bde:	f7f8 fee9 	bl	80019b4 <LCD_IO_WriteData>
 8008be2:	2081      	movs	r0, #129	; 0x81
 8008be4:	f7f8 fee6 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008be8:	20e8      	movs	r0, #232	; 0xe8
 8008bea:	f7f8 ff0d 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bee:	2085      	movs	r0, #133	; 0x85
 8008bf0:	f7f8 fee0 	bl	80019b4 <LCD_IO_WriteData>
 8008bf4:	2000      	movs	r0, #0
 8008bf6:	f7f8 fedd 	bl	80019b4 <LCD_IO_WriteData>
 8008bfa:	2078      	movs	r0, #120	; 0x78
 8008bfc:	f7f8 feda 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c00:	20cb      	movs	r0, #203	; 0xcb
 8008c02:	f7f8 ff01 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c06:	2039      	movs	r0, #57	; 0x39
 8008c08:	f7f8 fed4 	bl	80019b4 <LCD_IO_WriteData>
 8008c0c:	202c      	movs	r0, #44	; 0x2c
 8008c0e:	f7f8 fed1 	bl	80019b4 <LCD_IO_WriteData>
 8008c12:	2000      	movs	r0, #0
 8008c14:	f7f8 fece 	bl	80019b4 <LCD_IO_WriteData>
 8008c18:	2034      	movs	r0, #52	; 0x34
 8008c1a:	f7f8 fecb 	bl	80019b4 <LCD_IO_WriteData>
 8008c1e:	2002      	movs	r0, #2
 8008c20:	f7f8 fec8 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c24:	20f7      	movs	r0, #247	; 0xf7
 8008c26:	f7f8 feef 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c2a:	2020      	movs	r0, #32
 8008c2c:	f7f8 fec2 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c30:	20ea      	movs	r0, #234	; 0xea
 8008c32:	f7f8 fee9 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c36:	2000      	movs	r0, #0
 8008c38:	f7f8 febc 	bl	80019b4 <LCD_IO_WriteData>
 8008c3c:	2000      	movs	r0, #0
 8008c3e:	f7f8 feb9 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c42:	20b1      	movs	r0, #177	; 0xb1
 8008c44:	f7f8 fee0 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c48:	2000      	movs	r0, #0
 8008c4a:	f7f8 feb3 	bl	80019b4 <LCD_IO_WriteData>
 8008c4e:	201b      	movs	r0, #27
 8008c50:	f7f8 feb0 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c54:	20b6      	movs	r0, #182	; 0xb6
 8008c56:	f7f8 fed7 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c5a:	200a      	movs	r0, #10
 8008c5c:	f7f8 feaa 	bl	80019b4 <LCD_IO_WriteData>
 8008c60:	20a2      	movs	r0, #162	; 0xa2
 8008c62:	f7f8 fea7 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c66:	20c0      	movs	r0, #192	; 0xc0
 8008c68:	f7f8 fece 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c6c:	2010      	movs	r0, #16
 8008c6e:	f7f8 fea1 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c72:	20c1      	movs	r0, #193	; 0xc1
 8008c74:	f7f8 fec8 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c78:	2010      	movs	r0, #16
 8008c7a:	f7f8 fe9b 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c7e:	20c5      	movs	r0, #197	; 0xc5
 8008c80:	f7f8 fec2 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c84:	2045      	movs	r0, #69	; 0x45
 8008c86:	f7f8 fe95 	bl	80019b4 <LCD_IO_WriteData>
 8008c8a:	2015      	movs	r0, #21
 8008c8c:	f7f8 fe92 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c90:	20c7      	movs	r0, #199	; 0xc7
 8008c92:	f7f8 feb9 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c96:	2090      	movs	r0, #144	; 0x90
 8008c98:	f7f8 fe8c 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c9c:	2036      	movs	r0, #54	; 0x36
 8008c9e:	f7f8 feb3 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ca2:	20c8      	movs	r0, #200	; 0xc8
 8008ca4:	f7f8 fe86 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ca8:	20f2      	movs	r0, #242	; 0xf2
 8008caa:	f7f8 fead 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cae:	2000      	movs	r0, #0
 8008cb0:	f7f8 fe80 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cb4:	20b0      	movs	r0, #176	; 0xb0
 8008cb6:	f7f8 fea7 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cba:	20c2      	movs	r0, #194	; 0xc2
 8008cbc:	f7f8 fe7a 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cc0:	20b6      	movs	r0, #182	; 0xb6
 8008cc2:	f7f8 fea1 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cc6:	200a      	movs	r0, #10
 8008cc8:	f7f8 fe74 	bl	80019b4 <LCD_IO_WriteData>
 8008ccc:	20a7      	movs	r0, #167	; 0xa7
 8008cce:	f7f8 fe71 	bl	80019b4 <LCD_IO_WriteData>
 8008cd2:	2027      	movs	r0, #39	; 0x27
 8008cd4:	f7f8 fe6e 	bl	80019b4 <LCD_IO_WriteData>
 8008cd8:	2004      	movs	r0, #4
 8008cda:	f7f8 fe6b 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cde:	202a      	movs	r0, #42	; 0x2a
 8008ce0:	f7f8 fe92 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ce4:	2000      	movs	r0, #0
 8008ce6:	f7f8 fe65 	bl	80019b4 <LCD_IO_WriteData>
 8008cea:	2000      	movs	r0, #0
 8008cec:	f7f8 fe62 	bl	80019b4 <LCD_IO_WriteData>
 8008cf0:	2000      	movs	r0, #0
 8008cf2:	f7f8 fe5f 	bl	80019b4 <LCD_IO_WriteData>
 8008cf6:	20ef      	movs	r0, #239	; 0xef
 8008cf8:	f7f8 fe5c 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cfc:	202b      	movs	r0, #43	; 0x2b
 8008cfe:	f7f8 fe83 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d02:	2000      	movs	r0, #0
 8008d04:	f7f8 fe56 	bl	80019b4 <LCD_IO_WriteData>
 8008d08:	2000      	movs	r0, #0
 8008d0a:	f7f8 fe53 	bl	80019b4 <LCD_IO_WriteData>
 8008d0e:	2001      	movs	r0, #1
 8008d10:	f7f8 fe50 	bl	80019b4 <LCD_IO_WriteData>
 8008d14:	203f      	movs	r0, #63	; 0x3f
 8008d16:	f7f8 fe4d 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d1a:	20f6      	movs	r0, #246	; 0xf6
 8008d1c:	f7f8 fe74 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d20:	2001      	movs	r0, #1
 8008d22:	f7f8 fe47 	bl	80019b4 <LCD_IO_WriteData>
 8008d26:	2000      	movs	r0, #0
 8008d28:	f7f8 fe44 	bl	80019b4 <LCD_IO_WriteData>
 8008d2c:	2006      	movs	r0, #6
 8008d2e:	f7f8 fe41 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d32:	202c      	movs	r0, #44	; 0x2c
 8008d34:	f7f8 fe68 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008d38:	20c8      	movs	r0, #200	; 0xc8
 8008d3a:	f7f8 fecd 	bl	8001ad8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008d3e:	2026      	movs	r0, #38	; 0x26
 8008d40:	f7f8 fe62 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d44:	2001      	movs	r0, #1
 8008d46:	f7f8 fe35 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d4a:	20e0      	movs	r0, #224	; 0xe0
 8008d4c:	f7f8 fe5c 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d50:	200f      	movs	r0, #15
 8008d52:	f7f8 fe2f 	bl	80019b4 <LCD_IO_WriteData>
 8008d56:	2029      	movs	r0, #41	; 0x29
 8008d58:	f7f8 fe2c 	bl	80019b4 <LCD_IO_WriteData>
 8008d5c:	2024      	movs	r0, #36	; 0x24
 8008d5e:	f7f8 fe29 	bl	80019b4 <LCD_IO_WriteData>
 8008d62:	200c      	movs	r0, #12
 8008d64:	f7f8 fe26 	bl	80019b4 <LCD_IO_WriteData>
 8008d68:	200e      	movs	r0, #14
 8008d6a:	f7f8 fe23 	bl	80019b4 <LCD_IO_WriteData>
 8008d6e:	2009      	movs	r0, #9
 8008d70:	f7f8 fe20 	bl	80019b4 <LCD_IO_WriteData>
 8008d74:	204e      	movs	r0, #78	; 0x4e
 8008d76:	f7f8 fe1d 	bl	80019b4 <LCD_IO_WriteData>
 8008d7a:	2078      	movs	r0, #120	; 0x78
 8008d7c:	f7f8 fe1a 	bl	80019b4 <LCD_IO_WriteData>
 8008d80:	203c      	movs	r0, #60	; 0x3c
 8008d82:	f7f8 fe17 	bl	80019b4 <LCD_IO_WriteData>
 8008d86:	2009      	movs	r0, #9
 8008d88:	f7f8 fe14 	bl	80019b4 <LCD_IO_WriteData>
 8008d8c:	2013      	movs	r0, #19
 8008d8e:	f7f8 fe11 	bl	80019b4 <LCD_IO_WriteData>
 8008d92:	2005      	movs	r0, #5
 8008d94:	f7f8 fe0e 	bl	80019b4 <LCD_IO_WriteData>
 8008d98:	2017      	movs	r0, #23
 8008d9a:	f7f8 fe0b 	bl	80019b4 <LCD_IO_WriteData>
 8008d9e:	2011      	movs	r0, #17
 8008da0:	f7f8 fe08 	bl	80019b4 <LCD_IO_WriteData>
 8008da4:	2000      	movs	r0, #0
 8008da6:	f7f8 fe05 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008daa:	20e1      	movs	r0, #225	; 0xe1
 8008dac:	f7f8 fe2c 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008db0:	2000      	movs	r0, #0
 8008db2:	f7f8 fdff 	bl	80019b4 <LCD_IO_WriteData>
 8008db6:	2016      	movs	r0, #22
 8008db8:	f7f8 fdfc 	bl	80019b4 <LCD_IO_WriteData>
 8008dbc:	201b      	movs	r0, #27
 8008dbe:	f7f8 fdf9 	bl	80019b4 <LCD_IO_WriteData>
 8008dc2:	2004      	movs	r0, #4
 8008dc4:	f7f8 fdf6 	bl	80019b4 <LCD_IO_WriteData>
 8008dc8:	2011      	movs	r0, #17
 8008dca:	f7f8 fdf3 	bl	80019b4 <LCD_IO_WriteData>
 8008dce:	2007      	movs	r0, #7
 8008dd0:	f7f8 fdf0 	bl	80019b4 <LCD_IO_WriteData>
 8008dd4:	2031      	movs	r0, #49	; 0x31
 8008dd6:	f7f8 fded 	bl	80019b4 <LCD_IO_WriteData>
 8008dda:	2033      	movs	r0, #51	; 0x33
 8008ddc:	f7f8 fdea 	bl	80019b4 <LCD_IO_WriteData>
 8008de0:	2042      	movs	r0, #66	; 0x42
 8008de2:	f7f8 fde7 	bl	80019b4 <LCD_IO_WriteData>
 8008de6:	2005      	movs	r0, #5
 8008de8:	f7f8 fde4 	bl	80019b4 <LCD_IO_WriteData>
 8008dec:	200c      	movs	r0, #12
 8008dee:	f7f8 fde1 	bl	80019b4 <LCD_IO_WriteData>
 8008df2:	200a      	movs	r0, #10
 8008df4:	f7f8 fdde 	bl	80019b4 <LCD_IO_WriteData>
 8008df8:	2028      	movs	r0, #40	; 0x28
 8008dfa:	f7f8 fddb 	bl	80019b4 <LCD_IO_WriteData>
 8008dfe:	202f      	movs	r0, #47	; 0x2f
 8008e00:	f7f8 fdd8 	bl	80019b4 <LCD_IO_WriteData>
 8008e04:	200f      	movs	r0, #15
 8008e06:	f7f8 fdd5 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e0a:	2011      	movs	r0, #17
 8008e0c:	f7f8 fdfc 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008e10:	20c8      	movs	r0, #200	; 0xc8
 8008e12:	f7f8 fe61 	bl	8001ad8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008e16:	2029      	movs	r0, #41	; 0x29
 8008e18:	f7f8 fdf6 	bl	8001a08 <LCD_IO_WriteReg>
}
 8008e1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008e20:	202c      	movs	r0, #44	; 0x2c
 8008e22:	f7f8 bdf1 	b.w	8001a08 <LCD_IO_WriteReg>
 8008e26:	bf00      	nop

08008e28 <ili9341_ReadID>:
{
 8008e28:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008e2a:	f7f8 fdb3 	bl	8001994 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008e2e:	2103      	movs	r1, #3
 8008e30:	20d3      	movs	r0, #211	; 0xd3
 8008e32:	f7f8 fe13 	bl	8001a5c <LCD_IO_ReadData>
}
 8008e36:	b280      	uxth	r0, r0
 8008e38:	bd08      	pop	{r3, pc}
 8008e3a:	bf00      	nop

08008e3c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008e3c:	221f      	movs	r2, #31
 8008e3e:	210b      	movs	r1, #11
 8008e40:	b2c0      	uxtb	r0, r0
 8008e42:	f7f8 bd59 	b.w	80018f8 <IOE_Write>
 8008e46:	bf00      	nop

08008e48 <stmpe811_Reset>:
{
 8008e48:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008e4a:	b2c4      	uxtb	r4, r0
 8008e4c:	2202      	movs	r2, #2
 8008e4e:	2103      	movs	r1, #3
 8008e50:	4620      	mov	r0, r4
 8008e52:	f7f8 fd51 	bl	80018f8 <IOE_Write>
  IOE_Delay(10); 
 8008e56:	200a      	movs	r0, #10
 8008e58:	f7f8 fd9a 	bl	8001990 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008e5c:	4620      	mov	r0, r4
 8008e5e:	2200      	movs	r2, #0
 8008e60:	2103      	movs	r1, #3
 8008e62:	f7f8 fd49 	bl	80018f8 <IOE_Write>
}
 8008e66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008e6a:	2002      	movs	r0, #2
 8008e6c:	f7f8 bd90 	b.w	8001990 <IOE_Delay>

08008e70 <stmpe811_ReadID>:
{
 8008e70:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e72:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008e74:	f7f8 fd3c 	bl	80018f0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e78:	2100      	movs	r1, #0
 8008e7a:	4620      	mov	r0, r4
 8008e7c:	f7f8 fd54 	bl	8001928 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e80:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e82:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e84:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e86:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e88:	f7f8 fd4e 	bl	8001928 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e8c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008e90:	b280      	uxth	r0, r0
 8008e92:	bd10      	pop	{r4, pc}

08008e94 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008e94:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008e96:	b2c4      	uxtb	r4, r0
 8008e98:	2140      	movs	r1, #64	; 0x40
 8008e9a:	4620      	mov	r0, r4
 8008e9c:	f7f8 fd44 	bl	8001928 <IOE_Read>
  
  if(state > 0)
 8008ea0:	0603      	lsls	r3, r0, #24
 8008ea2:	d40b      	bmi.n	8008ebc <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ea4:	4620      	mov	r0, r4
 8008ea6:	2201      	movs	r2, #1
 8008ea8:	214b      	movs	r1, #75	; 0x4b
 8008eaa:	f7f8 fd25 	bl	80018f8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008eae:	4620      	mov	r0, r4
 8008eb0:	2200      	movs	r2, #0
 8008eb2:	214b      	movs	r1, #75	; 0x4b
 8008eb4:	f7f8 fd20 	bl	80018f8 <IOE_Write>
  uint8_t ret = 0;
 8008eb8:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008eba:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008ebc:	214c      	movs	r1, #76	; 0x4c
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	f7f8 fd32 	bl	8001928 <IOE_Read>
      ret = 1;
 8008ec4:	3800      	subs	r0, #0
 8008ec6:	bf18      	it	ne
 8008ec8:	2001      	movne	r0, #1
}
 8008eca:	bd10      	pop	{r4, pc}

08008ecc <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008ecc:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008ece:	210b      	movs	r1, #11
 8008ed0:	b2c0      	uxtb	r0, r0
 8008ed2:	f7f8 fd29 	bl	8001928 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008ed6:	f000 001f 	and.w	r0, r0, #31
 8008eda:	bd08      	pop	{r3, pc}

08008edc <stmpe811_TS_GetXY>:
{
 8008edc:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008ede:	2304      	movs	r3, #4
{
 8008ee0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008ee2:	b2c4      	uxtb	r4, r0
{
 8008ee4:	4615      	mov	r5, r2
 8008ee6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008ee8:	eb0d 0203 	add.w	r2, sp, r3
 8008eec:	21d7      	movs	r1, #215	; 0xd7
 8008eee:	4620      	mov	r0, r4
 8008ef0:	f7f8 fd36 	bl	8001960 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008ef4:	9b01      	ldr	r3, [sp, #4]
 8008ef6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008ef8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008efa:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008efe:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f00:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008f02:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f04:	2201      	movs	r2, #1
 8008f06:	214b      	movs	r1, #75	; 0x4b
 8008f08:	f7f8 fcf6 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f0c:	2200      	movs	r2, #0
 8008f0e:	214b      	movs	r1, #75	; 0x4b
 8008f10:	4620      	mov	r0, r4
 8008f12:	f7f8 fcf1 	bl	80018f8 <IOE_Write>
}
 8008f16:	b002      	add	sp, #8
 8008f18:	bd70      	pop	{r4, r5, r6, pc}
 8008f1a:	bf00      	nop

08008f1c <stmpe811_TS_Start>:
{
 8008f1c:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008f1e:	b2c4      	uxtb	r4, r0
 8008f20:	2104      	movs	r1, #4
 8008f22:	4620      	mov	r0, r4
 8008f24:	f7f8 fd00 	bl	8001928 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f28:	2104      	movs	r1, #4
 8008f2a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008f2e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f30:	4620      	mov	r0, r4
 8008f32:	f7f8 fce1 	bl	80018f8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008f36:	2117      	movs	r1, #23
 8008f38:	4620      	mov	r0, r4
 8008f3a:	f7f8 fcf5 	bl	8001928 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008f3e:	2117      	movs	r1, #23
 8008f40:	f000 020f 	and.w	r2, r0, #15
 8008f44:	4620      	mov	r0, r4
 8008f46:	f7f8 fcd7 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f4a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008f4e:	4620      	mov	r0, r4
 8008f50:	2104      	movs	r1, #4
 8008f52:	f7f8 fcd1 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008f56:	2249      	movs	r2, #73	; 0x49
 8008f58:	2120      	movs	r1, #32
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	f7f8 fccc 	bl	80018f8 <IOE_Write>
  IOE_Delay(2); 
 8008f60:	2002      	movs	r0, #2
 8008f62:	f7f8 fd15 	bl	8001990 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008f66:	4620      	mov	r0, r4
 8008f68:	2201      	movs	r2, #1
 8008f6a:	2121      	movs	r1, #33	; 0x21
 8008f6c:	f7f8 fcc4 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008f70:	4620      	mov	r0, r4
 8008f72:	229a      	movs	r2, #154	; 0x9a
 8008f74:	2141      	movs	r1, #65	; 0x41
 8008f76:	f7f8 fcbf 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008f7a:	4620      	mov	r0, r4
 8008f7c:	2201      	movs	r2, #1
 8008f7e:	214a      	movs	r1, #74	; 0x4a
 8008f80:	f7f8 fcba 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f84:	4620      	mov	r0, r4
 8008f86:	2201      	movs	r2, #1
 8008f88:	214b      	movs	r1, #75	; 0x4b
 8008f8a:	f7f8 fcb5 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f8e:	4620      	mov	r0, r4
 8008f90:	2200      	movs	r2, #0
 8008f92:	214b      	movs	r1, #75	; 0x4b
 8008f94:	f7f8 fcb0 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008f98:	4620      	mov	r0, r4
 8008f9a:	2201      	movs	r2, #1
 8008f9c:	2156      	movs	r1, #86	; 0x56
 8008f9e:	f7f8 fcab 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008fa2:	4620      	mov	r0, r4
 8008fa4:	2201      	movs	r2, #1
 8008fa6:	2158      	movs	r1, #88	; 0x58
 8008fa8:	f7f8 fca6 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008fac:	4620      	mov	r0, r4
 8008fae:	2201      	movs	r2, #1
 8008fb0:	2140      	movs	r1, #64	; 0x40
 8008fb2:	f7f8 fca1 	bl	80018f8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008fb6:	4620      	mov	r0, r4
 8008fb8:	22ff      	movs	r2, #255	; 0xff
 8008fba:	210b      	movs	r1, #11
 8008fbc:	f7f8 fc9c 	bl	80018f8 <IOE_Write>
}
 8008fc0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008fc4:	2002      	movs	r0, #2
 8008fc6:	f7f8 bce3 	b.w	8001990 <IOE_Delay>
 8008fca:	bf00      	nop

08008fcc <stmpe811_TS_DisableIT>:
{
 8008fcc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008fce:	b2c4      	uxtb	r4, r0
 8008fd0:	2109      	movs	r1, #9
 8008fd2:	4620      	mov	r0, r4
 8008fd4:	f7f8 fca8 	bl	8001928 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008fd8:	2109      	movs	r1, #9
 8008fda:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008fde:	4620      	mov	r0, r4
 8008fe0:	f7f8 fc8a 	bl	80018f8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008fe4:	210a      	movs	r1, #10
 8008fe6:	4620      	mov	r0, r4
 8008fe8:	f7f8 fc9e 	bl	8001928 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008fec:	210a      	movs	r1, #10
 8008fee:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008ff2:	4620      	mov	r0, r4
}
 8008ff4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008ff8:	f7f8 bc7e 	b.w	80018f8 <IOE_Write>

08008ffc <stmpe811_TS_EnableIT>:
{
 8008ffc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ffe:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009000:	f7f8 fc78 	bl	80018f4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009004:	210a      	movs	r1, #10
 8009006:	4620      	mov	r0, r4
 8009008:	f7f8 fc8e 	bl	8001928 <IOE_Read>
  tmp |= Source; 
 800900c:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009010:	b2c2      	uxtb	r2, r0
 8009012:	210a      	movs	r1, #10
 8009014:	4620      	mov	r0, r4
 8009016:	f7f8 fc6f 	bl	80018f8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800901a:	2109      	movs	r1, #9
 800901c:	4620      	mov	r0, r4
 800901e:	f7f8 fc83 	bl	8001928 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009022:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009026:	b2c2      	uxtb	r2, r0
 8009028:	2109      	movs	r1, #9
 800902a:	4620      	mov	r0, r4
}
 800902c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009030:	f7f8 bc62 	b.w	80018f8 <IOE_Write>

08009034 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009034:	4a10      	ldr	r2, [pc, #64]	; (8009078 <stmpe811_Init+0x44>)
 8009036:	7813      	ldrb	r3, [r2, #0]
 8009038:	4298      	cmp	r0, r3
 800903a:	d004      	beq.n	8009046 <stmpe811_Init+0x12>
 800903c:	7851      	ldrb	r1, [r2, #1]
 800903e:	4288      	cmp	r0, r1
 8009040:	d001      	beq.n	8009046 <stmpe811_Init+0x12>
 8009042:	b113      	cbz	r3, 800904a <stmpe811_Init+0x16>
 8009044:	b101      	cbz	r1, 8009048 <stmpe811_Init+0x14>
 8009046:	4770      	bx	lr
 8009048:	2301      	movs	r3, #1
{
 800904a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800904c:	b2c4      	uxtb	r4, r0
 800904e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009050:	f7f8 fc4e 	bl	80018f0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009054:	2202      	movs	r2, #2
 8009056:	2103      	movs	r1, #3
 8009058:	4620      	mov	r0, r4
 800905a:	f7f8 fc4d 	bl	80018f8 <IOE_Write>
  IOE_Delay(10); 
 800905e:	200a      	movs	r0, #10
 8009060:	f7f8 fc96 	bl	8001990 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009064:	4620      	mov	r0, r4
 8009066:	2200      	movs	r2, #0
 8009068:	2103      	movs	r1, #3
 800906a:	f7f8 fc45 	bl	80018f8 <IOE_Write>
}
 800906e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009072:	2002      	movs	r0, #2
 8009074:	f7f8 bc8c 	b.w	8001990 <IOE_Delay>
 8009078:	20002058 	.word	0x20002058

0800907c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800907c:	4b05      	ldr	r3, [pc, #20]	; (8009094 <SystemInit+0x18>)
 800907e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009082:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009086:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800908a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800908e:	6099      	str	r1, [r3, #8]
#endif
}
 8009090:	4770      	bx	lr
 8009092:	bf00      	nop
 8009094:	e000ed00 	.word	0xe000ed00

08009098 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009098:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800909a:	4b0b      	ldr	r3, [pc, #44]	; (80090c8 <HAL_Init+0x30>)
 800909c:	681a      	ldr	r2, [r3, #0]
 800909e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80090a2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80090a4:	681a      	ldr	r2, [r3, #0]
 80090a6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80090aa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80090ac:	681a      	ldr	r2, [r3, #0]
 80090ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80090b2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80090b4:	2003      	movs	r0, #3
 80090b6:	f000 f82d 	bl	8009114 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80090ba:	2000      	movs	r0, #0
 80090bc:	f7f9 f932 	bl	8002324 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80090c0:	f7f8 fe8e 	bl	8001de0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80090c4:	2000      	movs	r0, #0
 80090c6:	bd08      	pop	{r3, pc}
 80090c8:	40023c00 	.word	0x40023c00

080090cc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80090cc:	4a03      	ldr	r2, [pc, #12]	; (80090dc <HAL_IncTick+0x10>)
 80090ce:	4b04      	ldr	r3, [pc, #16]	; (80090e0 <HAL_IncTick+0x14>)
 80090d0:	6811      	ldr	r1, [r2, #0]
 80090d2:	781b      	ldrb	r3, [r3, #0]
 80090d4:	440b      	add	r3, r1
 80090d6:	6013      	str	r3, [r2, #0]
}
 80090d8:	4770      	bx	lr
 80090da:	bf00      	nop
 80090dc:	2000205c 	.word	0x2000205c
 80090e0:	2000007c 	.word	0x2000007c

080090e4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80090e4:	4b01      	ldr	r3, [pc, #4]	; (80090ec <HAL_GetTick+0x8>)
 80090e6:	6818      	ldr	r0, [r3, #0]
}
 80090e8:	4770      	bx	lr
 80090ea:	bf00      	nop
 80090ec:	2000205c 	.word	0x2000205c

080090f0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80090f0:	b538      	push	{r3, r4, r5, lr}
 80090f2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80090f4:	f7ff fff6 	bl	80090e4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80090f8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80090fa:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80090fc:	d002      	beq.n	8009104 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80090fe:	4b04      	ldr	r3, [pc, #16]	; (8009110 <HAL_Delay+0x20>)
 8009100:	781b      	ldrb	r3, [r3, #0]
 8009102:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009104:	f7ff ffee 	bl	80090e4 <HAL_GetTick>
 8009108:	1b43      	subs	r3, r0, r5
 800910a:	42a3      	cmp	r3, r4
 800910c:	d3fa      	bcc.n	8009104 <HAL_Delay+0x14>
  {
  }
}
 800910e:	bd38      	pop	{r3, r4, r5, pc}
 8009110:	2000007c 	.word	0x2000007c

08009114 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009114:	4907      	ldr	r1, [pc, #28]	; (8009134 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009116:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009118:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800911a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800911e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009122:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009124:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009126:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800912a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800912e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009130:	4770      	bx	lr
 8009132:	bf00      	nop
 8009134:	e000ed00 	.word	0xe000ed00

08009138 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009138:	4b1c      	ldr	r3, [pc, #112]	; (80091ac <HAL_NVIC_SetPriority+0x74>)
 800913a:	68db      	ldr	r3, [r3, #12]
 800913c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009140:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009142:	f1c3 0e07 	rsb	lr, r3, #7
 8009146:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800914a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800914e:	bf28      	it	cs
 8009150:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009154:	f1bc 0f06 	cmp.w	ip, #6
 8009158:	d91b      	bls.n	8009192 <HAL_NVIC_SetPriority+0x5a>
 800915a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800915c:	f04f 3cff 	mov.w	ip, #4294967295
 8009160:	fa0c fc03 	lsl.w	ip, ip, r3
 8009164:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009168:	f04f 3cff 	mov.w	ip, #4294967295
 800916c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009170:	ea21 010c 	bic.w	r1, r1, ip
 8009174:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009176:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009178:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800917c:	db0c      	blt.n	8009198 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800917e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009182:	0109      	lsls	r1, r1, #4
 8009184:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009188:	b2c9      	uxtb	r1, r1
 800918a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800918e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009192:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009194:	4613      	mov	r3, r2
 8009196:	e7e7      	b.n	8009168 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009198:	4b05      	ldr	r3, [pc, #20]	; (80091b0 <HAL_NVIC_SetPriority+0x78>)
 800919a:	f000 000f 	and.w	r0, r0, #15
 800919e:	0109      	lsls	r1, r1, #4
 80091a0:	4403      	add	r3, r0
 80091a2:	b2c9      	uxtb	r1, r1
 80091a4:	7619      	strb	r1, [r3, #24]
 80091a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80091aa:	bf00      	nop
 80091ac:	e000ed00 	.word	0xe000ed00
 80091b0:	e000ecfc 	.word	0xe000ecfc

080091b4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80091b4:	2800      	cmp	r0, #0
 80091b6:	db07      	blt.n	80091c8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80091b8:	0941      	lsrs	r1, r0, #5
 80091ba:	4a04      	ldr	r2, [pc, #16]	; (80091cc <HAL_NVIC_EnableIRQ+0x18>)
 80091bc:	f000 001f 	and.w	r0, r0, #31
 80091c0:	2301      	movs	r3, #1
 80091c2:	4083      	lsls	r3, r0
 80091c4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80091c8:	4770      	bx	lr
 80091ca:	bf00      	nop
 80091cc:	e000e100 	.word	0xe000e100

080091d0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80091d0:	b180      	cbz	r0, 80091f4 <HAL_CRC_Init+0x24>
{
 80091d2:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80091d4:	7943      	ldrb	r3, [r0, #5]
 80091d6:	4604      	mov	r4, r0
 80091d8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80091dc:	b11b      	cbz	r3, 80091e6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80091de:	2301      	movs	r3, #1
 80091e0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80091e2:	2000      	movs	r0, #0
}
 80091e4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80091e6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80091e8:	f7f8 fe1a 	bl	8001e20 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80091ec:	2301      	movs	r3, #1
 80091ee:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80091f0:	2000      	movs	r0, #0
}
 80091f2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80091f4:	2001      	movs	r0, #1
}
 80091f6:	4770      	bx	lr

080091f8 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80091f8:	b538      	push	{r3, r4, r5, lr}
 80091fa:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 80091fc:	f7ff ff72 	bl	80090e4 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8009200:	2c00      	cmp	r4, #0
 8009202:	d052      	beq.n	80092aa <HAL_DMA_Init+0xb2>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8009204:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009206:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 8009208:	2102      	movs	r1, #2
 800920a:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 800920e:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8009212:	681a      	ldr	r2, [r3, #0]
 8009214:	f022 0201 	bic.w	r2, r2, #1
 8009218:	4605      	mov	r5, r0
 800921a:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800921c:	e005      	b.n	800922a <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800921e:	f7ff ff61 	bl	80090e4 <HAL_GetTick>
 8009222:	1b43      	subs	r3, r0, r5
 8009224:	2b05      	cmp	r3, #5
 8009226:	d839      	bhi.n	800929c <HAL_DMA_Init+0xa4>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009228:	6823      	ldr	r3, [r4, #0]
 800922a:	681a      	ldr	r2, [r3, #0]
 800922c:	07d1      	lsls	r1, r2, #31
 800922e:	d4f6      	bmi.n	800921e <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009230:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8009234:	68e1      	ldr	r1, [r4, #12]
 8009236:	4302      	orrs	r2, r0
 8009238:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800923a:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800923e:	69a0      	ldr	r0, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009240:	432a      	orrs	r2, r5
 8009242:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009244:	69e1      	ldr	r1, [r4, #28]
  tmp = hdma->Instance->CR;
 8009246:	681d      	ldr	r5, [r3, #0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009248:	4302      	orrs	r2, r0
 800924a:	430a      	orrs	r2, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800924c:	4933      	ldr	r1, [pc, #204]	; (800931c <HAL_DMA_Init+0x124>)
 800924e:	4029      	ands	r1, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 8009250:	6a25      	ldr	r5, [r4, #32]
 8009252:	432a      	orrs	r2, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009254:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009256:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009258:	2904      	cmp	r1, #4
 800925a:	d028      	beq.n	80092ae <HAL_DMA_Init+0xb6>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800925c:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800925e:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8009260:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8009264:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009266:	b2d8      	uxtb	r0, r3
 8009268:	4a2d      	ldr	r2, [pc, #180]	; (8009320 <HAL_DMA_Init+0x128>)
  hdma->Instance->FCR = tmp;
 800926a:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800926c:	3810      	subs	r0, #16
 800926e:	fba2 5200 	umull	r5, r2, r2, r0
 8009272:	0912      	lsrs	r2, r2, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009274:	492b      	ldr	r1, [pc, #172]	; (8009324 <HAL_DMA_Init+0x12c>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009276:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800927a:	5c89      	ldrb	r1, [r1, r2]
 800927c:	65e1      	str	r1, [r4, #92]	; 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800927e:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 8009282:	285f      	cmp	r0, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009284:	bf88      	it	hi
 8009286:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009288:	223f      	movs	r2, #63	; 0x3f
 800928a:	408a      	lsls	r2, r1
 800928c:	65a3      	str	r3, [r4, #88]	; 0x58
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800928e:	2000      	movs	r0, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009290:	609a      	str	r2, [r3, #8]
  hdma->State = HAL_DMA_STATE_READY;
 8009292:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009294:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8009296:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 800929a:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800929c:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800929e:	2220      	movs	r2, #32
 80092a0:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80092a2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      return HAL_TIMEOUT;
 80092a6:	4618      	mov	r0, r3
}
 80092a8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80092aa:	2001      	movs	r0, #1
}
 80092ac:	bd38      	pop	{r3, r4, r5, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80092ae:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
 80092b2:	4329      	orrs	r1, r5
 80092b4:	4311      	orrs	r1, r2
  hdma->Instance->CR = tmp;  
 80092b6:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 80092b8:	6959      	ldr	r1, [r3, #20]
    tmp |= hdma->Init.FIFOThreshold;
 80092ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80092bc:	f021 0107 	bic.w	r1, r1, #7
 80092c0:	4311      	orrs	r1, r2
    tmp |= hdma->Init.FIFOThreshold;
 80092c2:	f041 0104 	orr.w	r1, r1, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80092c6:	2d00      	cmp	r5, #0
 80092c8:	d0cd      	beq.n	8009266 <HAL_DMA_Init+0x6e>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80092ca:	b178      	cbz	r0, 80092ec <HAL_DMA_Init+0xf4>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80092cc:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 80092d0:	d016      	beq.n	8009300 <HAL_DMA_Init+0x108>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80092d2:	2a02      	cmp	r2, #2
 80092d4:	d903      	bls.n	80092de <HAL_DMA_Init+0xe6>
 80092d6:	2a03      	cmp	r2, #3
 80092d8:	d1c5      	bne.n	8009266 <HAL_DMA_Init+0x6e>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80092da:	01ea      	lsls	r2, r5, #7
 80092dc:	d5c3      	bpl.n	8009266 <HAL_DMA_Init+0x6e>
        hdma->State = HAL_DMA_STATE_READY;
 80092de:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80092e0:	2240      	movs	r2, #64	; 0x40
 80092e2:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80092e4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        return HAL_ERROR; 
 80092e8:	4618      	mov	r0, r3
}
 80092ea:	bd38      	pop	{r3, r4, r5, pc}
    switch (tmp)
 80092ec:	2a01      	cmp	r2, #1
 80092ee:	d003      	beq.n	80092f8 <HAL_DMA_Init+0x100>
 80092f0:	f032 0202 	bics.w	r2, r2, #2
 80092f4:	d1b7      	bne.n	8009266 <HAL_DMA_Init+0x6e>
 80092f6:	e7f0      	b.n	80092da <HAL_DMA_Init+0xe2>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80092f8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80092fc:	d1b3      	bne.n	8009266 <HAL_DMA_Init+0x6e>
 80092fe:	e7ee      	b.n	80092de <HAL_DMA_Init+0xe6>
    switch (tmp)
 8009300:	2a03      	cmp	r2, #3
 8009302:	d8b0      	bhi.n	8009266 <HAL_DMA_Init+0x6e>
 8009304:	a001      	add	r0, pc, #4	; (adr r0, 800930c <HAL_DMA_Init+0x114>)
 8009306:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800930a:	bf00      	nop
 800930c:	080092df 	.word	0x080092df
 8009310:	080092db 	.word	0x080092db
 8009314:	080092df 	.word	0x080092df
 8009318:	080092f9 	.word	0x080092f9
 800931c:	f010803f 	.word	0xf010803f
 8009320:	aaaaaaab 	.word	0xaaaaaaab
 8009324:	0802ded0 	.word	0x0802ded0

08009328 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009328:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800932c:	2b02      	cmp	r3, #2
 800932e:	d003      	beq.n	8009338 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009330:	2380      	movs	r3, #128	; 0x80
 8009332:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009334:	2001      	movs	r0, #1
 8009336:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 8009338:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800933a:	2305      	movs	r3, #5
 800933c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009340:	6813      	ldr	r3, [r2, #0]
 8009342:	f023 0301 	bic.w	r3, r3, #1
  return HAL_OK;
 8009346:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009348:	6013      	str	r3, [r2, #0]
}
 800934a:	4770      	bx	lr

0800934c <HAL_DMA_IRQHandler>:
{
 800934c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800934e:	b083      	sub	sp, #12
  uint32_t timeout = SystemCoreClock / 9600U;
 8009350:	4a67      	ldr	r2, [pc, #412]	; (80094f0 <HAL_DMA_IRQHandler+0x1a4>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8009352:	6d87      	ldr	r7, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 8009354:	6816      	ldr	r6, [r2, #0]
  __IO uint32_t count = 0U;
 8009356:	2300      	movs	r3, #0
 8009358:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800935a:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 800935c:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800935e:	2208      	movs	r2, #8
 8009360:	409a      	lsls	r2, r3
 8009362:	422a      	tst	r2, r5
{
 8009364:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8009366:	d003      	beq.n	8009370 <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8009368:	6801      	ldr	r1, [r0, #0]
 800936a:	6808      	ldr	r0, [r1, #0]
 800936c:	0740      	lsls	r0, r0, #29
 800936e:	d478      	bmi.n	8009462 <HAL_DMA_IRQHandler+0x116>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8009370:	2201      	movs	r2, #1
 8009372:	409a      	lsls	r2, r3
 8009374:	422a      	tst	r2, r5
 8009376:	d003      	beq.n	8009380 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8009378:	6821      	ldr	r1, [r4, #0]
 800937a:	6949      	ldr	r1, [r1, #20]
 800937c:	0608      	lsls	r0, r1, #24
 800937e:	d46a      	bmi.n	8009456 <HAL_DMA_IRQHandler+0x10a>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8009380:	2204      	movs	r2, #4
 8009382:	409a      	lsls	r2, r3
 8009384:	422a      	tst	r2, r5
 8009386:	d003      	beq.n	8009390 <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8009388:	6821      	ldr	r1, [r4, #0]
 800938a:	6809      	ldr	r1, [r1, #0]
 800938c:	0789      	lsls	r1, r1, #30
 800938e:	d45c      	bmi.n	800944a <HAL_DMA_IRQHandler+0xfe>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8009390:	2210      	movs	r2, #16
 8009392:	409a      	lsls	r2, r3
 8009394:	422a      	tst	r2, r5
 8009396:	d003      	beq.n	80093a0 <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8009398:	6821      	ldr	r1, [r4, #0]
 800939a:	6808      	ldr	r0, [r1, #0]
 800939c:	0700      	lsls	r0, r0, #28
 800939e:	d441      	bmi.n	8009424 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80093a0:	2220      	movs	r2, #32
 80093a2:	409a      	lsls	r2, r3
 80093a4:	422a      	tst	r2, r5
 80093a6:	d014      	beq.n	80093d2 <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80093a8:	6821      	ldr	r1, [r4, #0]
 80093aa:	6808      	ldr	r0, [r1, #0]
 80093ac:	06c0      	lsls	r0, r0, #27
 80093ae:	d510      	bpl.n	80093d2 <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80093b0:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80093b2:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 80093b6:	2a05      	cmp	r2, #5
 80093b8:	d063      	beq.n	8009482 <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093ba:	680b      	ldr	r3, [r1, #0]
 80093bc:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80093c0:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093c2:	d07e      	beq.n	80094c2 <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80093c4:	0319      	lsls	r1, r3, #12
 80093c6:	f140 8089 	bpl.w	80094dc <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 80093ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093cc:	b10b      	cbz	r3, 80093d2 <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 80093ce:	4620      	mov	r0, r4
 80093d0:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80093d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80093d4:	b323      	cbz	r3, 8009420 <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80093d6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80093d8:	07da      	lsls	r2, r3, #31
 80093da:	d51a      	bpl.n	8009412 <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 80093dc:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 80093de:	4945      	ldr	r1, [pc, #276]	; (80094f4 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 80093e0:	2305      	movs	r3, #5
 80093e2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 80093e6:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 80093e8:	fba1 1606 	umull	r1, r6, r1, r6
      __HAL_DMA_DISABLE(hdma);
 80093ec:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
 80093f0:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 80093f2:	6013      	str	r3, [r2, #0]
 80093f4:	e002      	b.n	80093fc <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80093f6:	6813      	ldr	r3, [r2, #0]
 80093f8:	07db      	lsls	r3, r3, #31
 80093fa:	d504      	bpl.n	8009406 <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 80093fc:	9b01      	ldr	r3, [sp, #4]
 80093fe:	3301      	adds	r3, #1
 8009400:	42b3      	cmp	r3, r6
 8009402:	9301      	str	r3, [sp, #4]
 8009404:	d9f7      	bls.n	80093f6 <HAL_DMA_IRQHandler+0xaa>
      hdma->State = HAL_DMA_STATE_READY;
 8009406:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 8009408:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 800940a:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 800940e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 8009412:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009414:	b123      	cbz	r3, 8009420 <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 8009416:	4620      	mov	r0, r4
}
 8009418:	b003      	add	sp, #12
 800941a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800941e:	4718      	bx	r3
}
 8009420:	b003      	add	sp, #12
 8009422:	bdf0      	pop	{r4, r5, r6, r7, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8009424:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8009426:	680a      	ldr	r2, [r1, #0]
 8009428:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800942c:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800942e:	d122      	bne.n	8009476 <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8009430:	05d2      	lsls	r2, r2, #23
 8009432:	d403      	bmi.n	800943c <HAL_DMA_IRQHandler+0xf0>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009434:	680a      	ldr	r2, [r1, #0]
 8009436:	f022 0208 	bic.w	r2, r2, #8
 800943a:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 800943c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800943e:	2a00      	cmp	r2, #0
 8009440:	d0ae      	beq.n	80093a0 <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 8009442:	4620      	mov	r0, r4
 8009444:	4790      	blx	r2
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8009446:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8009448:	e7aa      	b.n	80093a0 <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800944a:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 800944c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800944e:	f042 0204 	orr.w	r2, r2, #4
 8009452:	6562      	str	r2, [r4, #84]	; 0x54
 8009454:	e79c      	b.n	8009390 <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8009456:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8009458:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800945a:	f042 0202 	orr.w	r2, r2, #2
 800945e:	6562      	str	r2, [r4, #84]	; 0x54
 8009460:	e78e      	b.n	8009380 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8009462:	6808      	ldr	r0, [r1, #0]
 8009464:	f020 0004 	bic.w	r0, r0, #4
 8009468:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800946a:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800946c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800946e:	f042 0201 	orr.w	r2, r2, #1
 8009472:	6562      	str	r2, [r4, #84]	; 0x54
 8009474:	e77c      	b.n	8009370 <HAL_DMA_IRQHandler+0x24>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009476:	0311      	lsls	r1, r2, #12
 8009478:	d5e0      	bpl.n	800943c <HAL_DMA_IRQHandler+0xf0>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800947a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800947c:	2a00      	cmp	r2, #0
 800947e:	d1e0      	bne.n	8009442 <HAL_DMA_IRQHandler+0xf6>
 8009480:	e78e      	b.n	80093a0 <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8009482:	680a      	ldr	r2, [r1, #0]
 8009484:	f022 0216 	bic.w	r2, r2, #22
 8009488:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800948a:	694a      	ldr	r2, [r1, #20]
 800948c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009490:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009492:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009494:	b33a      	cbz	r2, 80094e6 <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009496:	680a      	ldr	r2, [r1, #0]
 8009498:	f022 0208 	bic.w	r2, r2, #8
 800949c:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800949e:	223f      	movs	r2, #63	; 0x3f
 80094a0:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 80094a4:	6d21      	ldr	r1, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80094a6:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 80094a8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hdma);
 80094aa:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_READY;
 80094ac:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80094b0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 80094b4:	2900      	cmp	r1, #0
 80094b6:	d0b3      	beq.n	8009420 <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 80094b8:	4620      	mov	r0, r4
}
 80094ba:	b003      	add	sp, #12
 80094bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 80094c0:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80094c2:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80094c6:	d180      	bne.n	80093ca <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80094c8:	680a      	ldr	r2, [r1, #0]
 80094ca:	f022 0210 	bic.w	r2, r2, #16
 80094ce:	600a      	str	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 80094d0:	2201      	movs	r2, #1
 80094d2:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 80094d6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 80094da:	e776      	b.n	80093ca <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 80094dc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80094de:	2b00      	cmp	r3, #0
 80094e0:	f47f af75 	bne.w	80093ce <HAL_DMA_IRQHandler+0x82>
 80094e4:	e775      	b.n	80093d2 <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80094e6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80094e8:	2a00      	cmp	r2, #0
 80094ea:	d1d4      	bne.n	8009496 <HAL_DMA_IRQHandler+0x14a>
 80094ec:	e7d7      	b.n	800949e <HAL_DMA_IRQHandler+0x152>
 80094ee:	bf00      	nop
 80094f0:	20000078 	.word	0x20000078
 80094f4:	1b4e81b5 	.word	0x1b4e81b5

080094f8 <HAL_DMA_GetState>:
  return hdma->State;
 80094f8:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80094fc:	4770      	bx	lr
 80094fe:	bf00      	nop

08009500 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009504:	2200      	movs	r2, #0
 8009506:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009508:	f8df a260 	ldr.w	sl, [pc, #608]	; 800976c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800950c:	4e90      	ldr	r6, [pc, #576]	; (8009750 <HAL_GPIO_Init+0x250>)
{
 800950e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009510:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009512:	4689      	mov	r9, r1
 8009514:	e005      	b.n	8009522 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009516:	3301      	adds	r3, #1
 8009518:	2b10      	cmp	r3, #16
 800951a:	f102 0202 	add.w	r2, r2, #2
 800951e:	f000 8095 	beq.w	800964c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009522:	2101      	movs	r1, #1
 8009524:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009526:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800952a:	43a1      	bics	r1, r4
 800952c:	d1f3      	bne.n	8009516 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800952e:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009532:	f00c 0103 	and.w	r1, ip, #3
 8009536:	1e4d      	subs	r5, r1, #1
 8009538:	2d01      	cmp	r5, #1
 800953a:	f240 808a 	bls.w	8009652 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800953e:	2903      	cmp	r1, #3
 8009540:	f040 80ca 	bne.w	80096d8 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009544:	4091      	lsls	r1, r2
 8009546:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009548:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800954a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800954c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800954e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009552:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009554:	d0df      	beq.n	8009516 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009556:	2100      	movs	r1, #0
 8009558:	9103      	str	r1, [sp, #12]
 800955a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800955e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009562:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009566:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800956a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800956e:	9103      	str	r1, [sp, #12]
 8009570:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009572:	f023 0103 	bic.w	r1, r3, #3
 8009576:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800957a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800957e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009582:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009584:	00bf      	lsls	r7, r7, #2
 8009586:	f04f 0e0f 	mov.w	lr, #15
 800958a:	fa0e fe07 	lsl.w	lr, lr, r7
 800958e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009592:	4d70      	ldr	r5, [pc, #448]	; (8009754 <HAL_GPIO_Init+0x254>)
 8009594:	42a8      	cmp	r0, r5
 8009596:	d02e      	beq.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009598:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800959c:	42a8      	cmp	r0, r5
 800959e:	f000 809f 	beq.w	80096e0 <HAL_GPIO_Init+0x1e0>
 80095a2:	4d6d      	ldr	r5, [pc, #436]	; (8009758 <HAL_GPIO_Init+0x258>)
 80095a4:	42a8      	cmp	r0, r5
 80095a6:	f000 80a2 	beq.w	80096ee <HAL_GPIO_Init+0x1ee>
 80095aa:	4d6c      	ldr	r5, [pc, #432]	; (800975c <HAL_GPIO_Init+0x25c>)
 80095ac:	42a8      	cmp	r0, r5
 80095ae:	f000 80a5 	beq.w	80096fc <HAL_GPIO_Init+0x1fc>
 80095b2:	4d6b      	ldr	r5, [pc, #428]	; (8009760 <HAL_GPIO_Init+0x260>)
 80095b4:	42a8      	cmp	r0, r5
 80095b6:	f000 80a8 	beq.w	800970a <HAL_GPIO_Init+0x20a>
 80095ba:	4d6a      	ldr	r5, [pc, #424]	; (8009764 <HAL_GPIO_Init+0x264>)
 80095bc:	42a8      	cmp	r0, r5
 80095be:	f000 80b2 	beq.w	8009726 <HAL_GPIO_Init+0x226>
 80095c2:	4d69      	ldr	r5, [pc, #420]	; (8009768 <HAL_GPIO_Init+0x268>)
 80095c4:	42a8      	cmp	r0, r5
 80095c6:	f000 80b5 	beq.w	8009734 <HAL_GPIO_Init+0x234>
 80095ca:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009770 <HAL_GPIO_Init+0x270>
 80095ce:	4570      	cmp	r0, lr
 80095d0:	f000 80a2 	beq.w	8009718 <HAL_GPIO_Init+0x218>
 80095d4:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009774 <HAL_GPIO_Init+0x274>
 80095d8:	4570      	cmp	r0, lr
 80095da:	f000 80b2 	beq.w	8009742 <HAL_GPIO_Init+0x242>
 80095de:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009778 <HAL_GPIO_Init+0x278>
 80095e2:	4570      	cmp	r0, lr
 80095e4:	bf0c      	ite	eq
 80095e6:	f04f 0e09 	moveq.w	lr, #9
 80095ea:	f04f 0e0a 	movne.w	lr, #10
 80095ee:	fa0e f707 	lsl.w	r7, lr, r7
 80095f2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80095f6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80095fa:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80095fc:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009600:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009604:	bf0c      	ite	eq
 8009606:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009608:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800960c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800960e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009610:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009614:	bf0c      	ite	eq
 8009616:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009618:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800961c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800961e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009620:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009624:	bf0c      	ite	eq
 8009626:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009628:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800962c:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800962e:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009630:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009634:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009638:	bf0c      	ite	eq
 800963a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800963c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009640:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009642:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009644:	f102 0202 	add.w	r2, r2, #2
 8009648:	f47f af6b 	bne.w	8009522 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800964c:	b005      	add	sp, #20
 800964e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009652:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009656:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800965a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800965e:	2503      	movs	r5, #3
 8009660:	fa05 f802 	lsl.w	r8, r5, r2
 8009664:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009668:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800966c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800966e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009670:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009674:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009678:	409f      	lsls	r7, r3
 800967a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800967e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009682:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009684:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009686:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800968a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800968e:	4097      	lsls	r7, r2
 8009690:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009694:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009696:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009698:	fa01 f102 	lsl.w	r1, r1, r2
 800969c:	f47f af54 	bne.w	8009548 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80096a0:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80096a4:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096a8:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80096ac:	f8de 7020 	ldr.w	r7, [lr, #32]
 80096b0:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096b2:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096b6:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096ba:	fa07 f708 	lsl.w	r7, r7, r8
 80096be:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096c0:	270f      	movs	r7, #15
 80096c2:	fa07 f808 	lsl.w	r8, r7, r8
 80096c6:	9f00      	ldr	r7, [sp, #0]
 80096c8:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096cc:	9f01      	ldr	r7, [sp, #4]
 80096ce:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80096d2:	f8ce 7020 	str.w	r7, [lr, #32]
 80096d6:	e737      	b.n	8009548 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80096d8:	2503      	movs	r5, #3
 80096da:	4095      	lsls	r5, r2
 80096dc:	43ed      	mvns	r5, r5
 80096de:	e7d1      	b.n	8009684 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80096e0:	f04f 0e01 	mov.w	lr, #1
 80096e4:	fa0e f707 	lsl.w	r7, lr, r7
 80096e8:	ea48 0807 	orr.w	r8, r8, r7
 80096ec:	e783      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 80096ee:	f04f 0e02 	mov.w	lr, #2
 80096f2:	fa0e f707 	lsl.w	r7, lr, r7
 80096f6:	ea48 0807 	orr.w	r8, r8, r7
 80096fa:	e77c      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 80096fc:	f04f 0e03 	mov.w	lr, #3
 8009700:	fa0e f707 	lsl.w	r7, lr, r7
 8009704:	ea48 0807 	orr.w	r8, r8, r7
 8009708:	e775      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 800970a:	f04f 0e04 	mov.w	lr, #4
 800970e:	fa0e f707 	lsl.w	r7, lr, r7
 8009712:	ea48 0807 	orr.w	r8, r8, r7
 8009716:	e76e      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009718:	f04f 0e07 	mov.w	lr, #7
 800971c:	fa0e f707 	lsl.w	r7, lr, r7
 8009720:	ea48 0807 	orr.w	r8, r8, r7
 8009724:	e767      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009726:	f04f 0e05 	mov.w	lr, #5
 800972a:	fa0e f707 	lsl.w	r7, lr, r7
 800972e:	ea48 0807 	orr.w	r8, r8, r7
 8009732:	e760      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009734:	f04f 0e06 	mov.w	lr, #6
 8009738:	fa0e f707 	lsl.w	r7, lr, r7
 800973c:	ea48 0807 	orr.w	r8, r8, r7
 8009740:	e759      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009742:	f04f 0e08 	mov.w	lr, #8
 8009746:	fa0e f707 	lsl.w	r7, lr, r7
 800974a:	ea48 0807 	orr.w	r8, r8, r7
 800974e:	e752      	b.n	80095f6 <HAL_GPIO_Init+0xf6>
 8009750:	40013c00 	.word	0x40013c00
 8009754:	40020000 	.word	0x40020000
 8009758:	40020800 	.word	0x40020800
 800975c:	40020c00 	.word	0x40020c00
 8009760:	40021000 	.word	0x40021000
 8009764:	40021400 	.word	0x40021400
 8009768:	40021800 	.word	0x40021800
 800976c:	40023800 	.word	0x40023800
 8009770:	40021c00 	.word	0x40021c00
 8009774:	40022000 	.word	0x40022000
 8009778:	40022400 	.word	0x40022400

0800977c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800977c:	6903      	ldr	r3, [r0, #16]
 800977e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009780:	bf14      	ite	ne
 8009782:	2001      	movne	r0, #1
 8009784:	2000      	moveq	r0, #0
 8009786:	4770      	bx	lr

08009788 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009788:	b902      	cbnz	r2, 800978c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800978a:	0409      	lsls	r1, r1, #16
 800978c:	6181      	str	r1, [r0, #24]
  }
}
 800978e:	4770      	bx	lr

08009790 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009790:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009792:	ea01 0203 	and.w	r2, r1, r3
 8009796:	ea21 0103 	bic.w	r1, r1, r3
 800979a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800979e:	6181      	str	r1, [r0, #24]
}
 80097a0:	4770      	bx	lr
 80097a2:	bf00      	nop

080097a4 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80097a4:	4770      	bx	lr
 80097a6:	bf00      	nop

080097a8 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80097a8:	4a04      	ldr	r2, [pc, #16]	; (80097bc <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80097aa:	6951      	ldr	r1, [r2, #20]
 80097ac:	4201      	tst	r1, r0
 80097ae:	d100      	bne.n	80097b2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80097b0:	4770      	bx	lr
{
 80097b2:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80097b4:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80097b6:	f7ff fff5 	bl	80097a4 <HAL_GPIO_EXTI_Callback>
}
 80097ba:	bd08      	pop	{r3, pc}
 80097bc:	40013c00 	.word	0x40013c00

080097c0 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80097c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097c4:	6804      	ldr	r4, [r0, #0]
{
 80097c6:	b083      	sub	sp, #12
 80097c8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097ca:	6823      	ldr	r3, [r4, #0]
{
 80097cc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80097d0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80097d8:	4606      	mov	r6, r0
 80097da:	468a      	mov	sl, r1
 80097dc:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097de:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80097e0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80097e4:	d136      	bne.n	8009854 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80097e6:	6965      	ldr	r5, [r4, #20]
 80097e8:	07e8      	lsls	r0, r5, #31
 80097ea:	d5fc      	bpl.n	80097e6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80097ec:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80097f0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80097f2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80097f6:	d003      	beq.n	8009800 <I2C_RequestMemoryWrite+0x40>
 80097f8:	e04f      	b.n	800989a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097fa:	6961      	ldr	r1, [r4, #20]
 80097fc:	054d      	lsls	r5, r1, #21
 80097fe:	d45d      	bmi.n	80098bc <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009800:	6961      	ldr	r1, [r4, #20]
 8009802:	078b      	lsls	r3, r1, #30
 8009804:	d5f9      	bpl.n	80097fa <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009806:	2300      	movs	r3, #0
 8009808:	9301      	str	r3, [sp, #4]
 800980a:	6963      	ldr	r3, [r4, #20]
 800980c:	9301      	str	r3, [sp, #4]
 800980e:	69a3      	ldr	r3, [r4, #24]
 8009810:	9301      	str	r3, [sp, #4]
 8009812:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009814:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009818:	f040 8088 	bne.w	800992c <I2C_RequestMemoryWrite+0x16c>
 800981c:	6963      	ldr	r3, [r4, #20]
 800981e:	061a      	lsls	r2, r3, #24
 8009820:	d464      	bmi.n	80098ec <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009822:	6963      	ldr	r3, [r4, #20]
 8009824:	055b      	lsls	r3, r3, #21
 8009826:	d5f9      	bpl.n	800981c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009828:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800982a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800982e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009830:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009832:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009834:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009838:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800983c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800983e:	f043 0304 	orr.w	r3, r3, #4
 8009842:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009844:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009846:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009848:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800984a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800984e:	d066      	beq.n	800991e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009850:	2001      	movs	r0, #1
 8009852:	e01f      	b.n	8009894 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009854:	6963      	ldr	r3, [r4, #20]
 8009856:	07d9      	lsls	r1, r3, #31
 8009858:	d4c8      	bmi.n	80097ec <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800985a:	f7ff fc43 	bl	80090e4 <HAL_GetTick>
 800985e:	eba0 000b 	sub.w	r0, r0, fp
 8009862:	4581      	cmp	r9, r0
 8009864:	d304      	bcc.n	8009870 <I2C_RequestMemoryWrite+0xb0>
 8009866:	f1b9 0f00 	cmp.w	r9, #0
 800986a:	d001      	beq.n	8009870 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800986c:	6834      	ldr	r4, [r6, #0]
 800986e:	e7b7      	b.n	80097e0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009870:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009872:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009874:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009876:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800987a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800987e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009880:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009882:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009886:	f042 0220 	orr.w	r2, r2, #32
 800988a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800988c:	680b      	ldr	r3, [r1, #0]
 800988e:	05dc      	lsls	r4, r3, #23
 8009890:	d435      	bmi.n	80098fe <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009892:	2003      	movs	r0, #3
}
 8009894:	b003      	add	sp, #12
 8009896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800989a:	6963      	ldr	r3, [r4, #20]
 800989c:	0798      	lsls	r0, r3, #30
 800989e:	d4b2      	bmi.n	8009806 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098a0:	6963      	ldr	r3, [r4, #20]
 80098a2:	055a      	lsls	r2, r3, #21
 80098a4:	d40a      	bmi.n	80098bc <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098a6:	f7ff fc1d 	bl	80090e4 <HAL_GetTick>
 80098aa:	eba0 000b 	sub.w	r0, r0, fp
 80098ae:	4581      	cmp	r9, r0
 80098b0:	d34e      	bcc.n	8009950 <I2C_RequestMemoryWrite+0x190>
 80098b2:	f1b9 0f00 	cmp.w	r9, #0
 80098b6:	d04b      	beq.n	8009950 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098b8:	6834      	ldr	r4, [r6, #0]
 80098ba:	e79a      	b.n	80097f2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098bc:	6823      	ldr	r3, [r4, #0]
 80098be:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80098c2:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098c4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098c6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80098ca:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098cc:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098ce:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80098d0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098d4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098d8:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80098da:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098de:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80098e2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098e4:	6433      	str	r3, [r6, #64]	; 0x40
}
 80098e6:	b003      	add	sp, #12
 80098e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80098ec:	f1b8 0f01 	cmp.w	r8, #1
 80098f0:	d109      	bne.n	8009906 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80098f2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80098f4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80098f6:	6127      	str	r7, [r4, #16]
}
 80098f8:	b003      	add	sp, #12
 80098fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80098fe:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009902:	6433      	str	r3, [r6, #64]	; 0x40
 8009904:	e7c5      	b.n	8009892 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009906:	0a3b      	lsrs	r3, r7, #8
 8009908:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800990a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800990e:	d12e      	bne.n	800996e <I2C_RequestMemoryWrite+0x1ae>
 8009910:	6963      	ldr	r3, [r4, #20]
 8009912:	0619      	lsls	r1, r3, #24
 8009914:	d4ed      	bmi.n	80098f2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009916:	6963      	ldr	r3, [r4, #20]
 8009918:	055a      	lsls	r2, r3, #21
 800991a:	d5f9      	bpl.n	8009910 <I2C_RequestMemoryWrite+0x150>
 800991c:	e784      	b.n	8009828 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800991e:	6832      	ldr	r2, [r6, #0]
 8009920:	6813      	ldr	r3, [r2, #0]
 8009922:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009926:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009928:	6013      	str	r3, [r2, #0]
 800992a:	e7b3      	b.n	8009894 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800992c:	6963      	ldr	r3, [r4, #20]
 800992e:	061d      	lsls	r5, r3, #24
 8009930:	d4dc      	bmi.n	80098ec <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009932:	6963      	ldr	r3, [r4, #20]
 8009934:	0559      	lsls	r1, r3, #21
 8009936:	f53f af77 	bmi.w	8009828 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800993a:	f7ff fbd3 	bl	80090e4 <HAL_GetTick>
 800993e:	eba0 000b 	sub.w	r0, r0, fp
 8009942:	4581      	cmp	r9, r0
 8009944:	d325      	bcc.n	8009992 <I2C_RequestMemoryWrite+0x1d2>
 8009946:	f1b9 0f00 	cmp.w	r9, #0
 800994a:	d022      	beq.n	8009992 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800994c:	6834      	ldr	r4, [r6, #0]
 800994e:	e761      	b.n	8009814 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009950:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009952:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009954:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009956:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800995a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800995e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009960:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009964:	f043 0320 	orr.w	r3, r3, #32
 8009968:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800996a:	2001      	movs	r0, #1
 800996c:	e792      	b.n	8009894 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800996e:	6963      	ldr	r3, [r4, #20]
 8009970:	061b      	lsls	r3, r3, #24
 8009972:	d4be      	bmi.n	80098f2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009974:	6963      	ldr	r3, [r4, #20]
 8009976:	0558      	lsls	r0, r3, #21
 8009978:	f53f af56 	bmi.w	8009828 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800997c:	f7ff fbb2 	bl	80090e4 <HAL_GetTick>
 8009980:	eba0 000b 	sub.w	r0, r0, fp
 8009984:	4581      	cmp	r9, r0
 8009986:	d304      	bcc.n	8009992 <I2C_RequestMemoryWrite+0x1d2>
 8009988:	f1b9 0f00 	cmp.w	r9, #0
 800998c:	d001      	beq.n	8009992 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800998e:	6834      	ldr	r4, [r6, #0]
 8009990:	e7bb      	b.n	800990a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009992:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009994:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009996:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009998:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800999c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099a0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80099a2:	4313      	orrs	r3, r2
 80099a4:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80099a6:	e74d      	b.n	8009844 <I2C_RequestMemoryWrite+0x84>

080099a8 <I2C_RequestMemoryRead>:
{
 80099a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099ac:	6804      	ldr	r4, [r0, #0]
{
 80099ae:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099b0:	6823      	ldr	r3, [r4, #0]
 80099b2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80099b6:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099b8:	6823      	ldr	r3, [r4, #0]
{
 80099ba:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80099c0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80099c4:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099c8:	6023      	str	r3, [r4, #0]
{
 80099ca:	4606      	mov	r6, r0
 80099cc:	468b      	mov	fp, r1
 80099ce:	4617      	mov	r7, r2
 80099d0:	f1ba 3fff 	cmp.w	sl, #4294967295
 80099d4:	d13a      	bne.n	8009a4c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80099d6:	6965      	ldr	r5, [r4, #20]
 80099d8:	07eb      	lsls	r3, r5, #31
 80099da:	d5fc      	bpl.n	80099d6 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80099dc:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80099e0:	6123      	str	r3, [r4, #16]
 80099e2:	fa5f fb8b 	uxtb.w	fp, fp
 80099e6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80099ea:	d003      	beq.n	80099f4 <I2C_RequestMemoryRead+0x4c>
 80099ec:	e069      	b.n	8009ac2 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099ee:	6965      	ldr	r5, [r4, #20]
 80099f0:	056a      	lsls	r2, r5, #21
 80099f2:	d44e      	bmi.n	8009a92 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099f4:	6965      	ldr	r5, [r4, #20]
 80099f6:	07a9      	lsls	r1, r5, #30
 80099f8:	d5f9      	bpl.n	80099ee <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80099fa:	2300      	movs	r3, #0
 80099fc:	9301      	str	r3, [sp, #4]
 80099fe:	6963      	ldr	r3, [r4, #20]
 8009a00:	9301      	str	r3, [sp, #4]
 8009a02:	69a3      	ldr	r3, [r4, #24]
 8009a04:	9301      	str	r3, [sp, #4]
 8009a06:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a08:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009a0c:	f040 80bd 	bne.w	8009b8a <I2C_RequestMemoryRead+0x1e2>
 8009a10:	6963      	ldr	r3, [r4, #20]
 8009a12:	0618      	lsls	r0, r3, #24
 8009a14:	d468      	bmi.n	8009ae8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a16:	6963      	ldr	r3, [r4, #20]
 8009a18:	0559      	lsls	r1, r3, #21
 8009a1a:	d5f9      	bpl.n	8009a10 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a1c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a1e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a22:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a24:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a26:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a28:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a2c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a30:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a32:	f043 0304 	orr.w	r3, r3, #4
 8009a36:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a38:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009a3a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a3c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009a3e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a42:	d070      	beq.n	8009b26 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009a44:	2001      	movs	r0, #1
}
 8009a46:	b003      	add	sp, #12
 8009a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a4c:	6963      	ldr	r3, [r4, #20]
 8009a4e:	07dd      	lsls	r5, r3, #31
 8009a50:	d4c4      	bmi.n	80099dc <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a52:	f7ff fb47 	bl	80090e4 <HAL_GetTick>
 8009a56:	eba0 0009 	sub.w	r0, r0, r9
 8009a5a:	4582      	cmp	sl, r0
 8009a5c:	d304      	bcc.n	8009a68 <I2C_RequestMemoryRead+0xc0>
 8009a5e:	f1ba 0f00 	cmp.w	sl, #0
 8009a62:	d001      	beq.n	8009a68 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a64:	6834      	ldr	r4, [r6, #0]
 8009a66:	e7b3      	b.n	80099d0 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a68:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a6a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a6c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a6e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a72:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a76:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a78:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009a7a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a7e:	f042 0220 	orr.w	r2, r2, #32
 8009a82:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a84:	680b      	ldr	r3, [r1, #0]
 8009a86:	05dc      	lsls	r4, r3, #23
 8009a88:	d43d      	bmi.n	8009b06 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009a8a:	2003      	movs	r0, #3
}
 8009a8c:	b003      	add	sp, #12
 8009a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a92:	6823      	ldr	r3, [r4, #0]
 8009a94:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009a98:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009a9a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a9c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009aa0:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009aa2:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009aa4:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009aa6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009aaa:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009aae:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009ab0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ab4:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009ab8:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009aba:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009abc:	b003      	add	sp, #12
 8009abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ac2:	6963      	ldr	r3, [r4, #20]
 8009ac4:	079b      	lsls	r3, r3, #30
 8009ac6:	d498      	bmi.n	80099fa <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ac8:	6963      	ldr	r3, [r4, #20]
 8009aca:	0558      	lsls	r0, r3, #21
 8009acc:	d4e1      	bmi.n	8009a92 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ace:	f7ff fb09 	bl	80090e4 <HAL_GetTick>
 8009ad2:	eba0 0009 	sub.w	r0, r0, r9
 8009ad6:	4582      	cmp	sl, r0
 8009ad8:	f0c0 808f 	bcc.w	8009bfa <I2C_RequestMemoryRead+0x252>
 8009adc:	f1ba 0f00 	cmp.w	sl, #0
 8009ae0:	f000 808b 	beq.w	8009bfa <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ae4:	6834      	ldr	r4, [r6, #0]
 8009ae6:	e77e      	b.n	80099e6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009ae8:	f1b8 0f01 	cmp.w	r8, #1
 8009aec:	d10f      	bne.n	8009b0e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009aee:	b2ff      	uxtb	r7, r7
 8009af0:	6127      	str	r7, [r4, #16]
 8009af2:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009af6:	d16e      	bne.n	8009bd6 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009af8:	6963      	ldr	r3, [r4, #20]
 8009afa:	061b      	lsls	r3, r3, #24
 8009afc:	d41a      	bmi.n	8009b34 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009afe:	6963      	ldr	r3, [r4, #20]
 8009b00:	055f      	lsls	r7, r3, #21
 8009b02:	d5f9      	bpl.n	8009af8 <I2C_RequestMemoryRead+0x150>
 8009b04:	e78a      	b.n	8009a1c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009b06:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b0a:	6433      	str	r3, [r6, #64]	; 0x40
 8009b0c:	e7bd      	b.n	8009a8a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009b0e:	0a3b      	lsrs	r3, r7, #8
 8009b10:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b12:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b16:	d17e      	bne.n	8009c16 <I2C_RequestMemoryRead+0x26e>
 8009b18:	6963      	ldr	r3, [r4, #20]
 8009b1a:	061d      	lsls	r5, r3, #24
 8009b1c:	d4e7      	bmi.n	8009aee <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b1e:	6963      	ldr	r3, [r4, #20]
 8009b20:	0558      	lsls	r0, r3, #21
 8009b22:	d5f9      	bpl.n	8009b18 <I2C_RequestMemoryRead+0x170>
 8009b24:	e77a      	b.n	8009a1c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b26:	6832      	ldr	r2, [r6, #0]
 8009b28:	6813      	ldr	r3, [r2, #0]
 8009b2a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009b2e:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b30:	6013      	str	r3, [r2, #0]
 8009b32:	e7ab      	b.n	8009a8c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009b34:	6823      	ldr	r3, [r4, #0]
 8009b36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009b3a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009b3c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b40:	d113      	bne.n	8009b6a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b42:	6963      	ldr	r3, [r4, #20]
 8009b44:	07d8      	lsls	r0, r3, #31
 8009b46:	d5fc      	bpl.n	8009b42 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009b48:	f04b 0301 	orr.w	r3, fp, #1
 8009b4c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009b4e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b52:	d003      	beq.n	8009b5c <I2C_RequestMemoryRead+0x1b4>
 8009b54:	e02b      	b.n	8009bae <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b56:	6963      	ldr	r3, [r4, #20]
 8009b58:	055b      	lsls	r3, r3, #21
 8009b5a:	d49a      	bmi.n	8009a92 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009b5c:	6963      	ldr	r3, [r4, #20]
 8009b5e:	43db      	mvns	r3, r3
 8009b60:	f013 0302 	ands.w	r3, r3, #2
 8009b64:	d1f7      	bne.n	8009b56 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009b66:	4618      	mov	r0, r3
 8009b68:	e790      	b.n	8009a8c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b6a:	6963      	ldr	r3, [r4, #20]
 8009b6c:	07d9      	lsls	r1, r3, #31
 8009b6e:	d4eb      	bmi.n	8009b48 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b70:	f7ff fab8 	bl	80090e4 <HAL_GetTick>
 8009b74:	eba0 0009 	sub.w	r0, r0, r9
 8009b78:	4582      	cmp	sl, r0
 8009b7a:	f4ff af75 	bcc.w	8009a68 <I2C_RequestMemoryRead+0xc0>
 8009b7e:	f1ba 0f00 	cmp.w	sl, #0
 8009b82:	f43f af71 	beq.w	8009a68 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b86:	6834      	ldr	r4, [r6, #0]
 8009b88:	e7d8      	b.n	8009b3c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b8a:	6963      	ldr	r3, [r4, #20]
 8009b8c:	061a      	lsls	r2, r3, #24
 8009b8e:	d4ab      	bmi.n	8009ae8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b90:	6963      	ldr	r3, [r4, #20]
 8009b92:	055d      	lsls	r5, r3, #21
 8009b94:	f53f af42 	bmi.w	8009a1c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b98:	f7ff faa4 	bl	80090e4 <HAL_GetTick>
 8009b9c:	eba0 0009 	sub.w	r0, r0, r9
 8009ba0:	4582      	cmp	sl, r0
 8009ba2:	d34b      	bcc.n	8009c3c <I2C_RequestMemoryRead+0x294>
 8009ba4:	f1ba 0f00 	cmp.w	sl, #0
 8009ba8:	d048      	beq.n	8009c3c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009baa:	6834      	ldr	r4, [r6, #0]
 8009bac:	e72c      	b.n	8009a08 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009bae:	6963      	ldr	r3, [r4, #20]
 8009bb0:	43db      	mvns	r3, r3
 8009bb2:	f013 0302 	ands.w	r3, r3, #2
 8009bb6:	d0d6      	beq.n	8009b66 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bb8:	6963      	ldr	r3, [r4, #20]
 8009bba:	055a      	lsls	r2, r3, #21
 8009bbc:	f53f af69 	bmi.w	8009a92 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bc0:	f7ff fa90 	bl	80090e4 <HAL_GetTick>
 8009bc4:	eba0 0009 	sub.w	r0, r0, r9
 8009bc8:	4582      	cmp	sl, r0
 8009bca:	d316      	bcc.n	8009bfa <I2C_RequestMemoryRead+0x252>
 8009bcc:	f1ba 0f00 	cmp.w	sl, #0
 8009bd0:	d013      	beq.n	8009bfa <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009bd2:	6834      	ldr	r4, [r6, #0]
 8009bd4:	e7bb      	b.n	8009b4e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bd6:	6963      	ldr	r3, [r4, #20]
 8009bd8:	061d      	lsls	r5, r3, #24
 8009bda:	d4ab      	bmi.n	8009b34 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bdc:	6963      	ldr	r3, [r4, #20]
 8009bde:	055a      	lsls	r2, r3, #21
 8009be0:	f53f af1c 	bmi.w	8009a1c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009be4:	f7ff fa7e 	bl	80090e4 <HAL_GetTick>
 8009be8:	eba0 0009 	sub.w	r0, r0, r9
 8009bec:	4582      	cmp	sl, r0
 8009bee:	d325      	bcc.n	8009c3c <I2C_RequestMemoryRead+0x294>
 8009bf0:	f1ba 0f00 	cmp.w	sl, #0
 8009bf4:	d022      	beq.n	8009c3c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bf6:	6834      	ldr	r4, [r6, #0]
 8009bf8:	e77b      	b.n	8009af2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009bfa:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009bfc:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009bfe:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009c00:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c04:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009c08:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009c0a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009c0e:	f043 0320 	orr.w	r3, r3, #32
 8009c12:	6433      	str	r3, [r6, #64]	; 0x40
 8009c14:	e716      	b.n	8009a44 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c16:	6963      	ldr	r3, [r4, #20]
 8009c18:	0619      	lsls	r1, r3, #24
 8009c1a:	f53f af68 	bmi.w	8009aee <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c1e:	6963      	ldr	r3, [r4, #20]
 8009c20:	055b      	lsls	r3, r3, #21
 8009c22:	f53f aefb 	bmi.w	8009a1c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c26:	f7ff fa5d 	bl	80090e4 <HAL_GetTick>
 8009c2a:	eba0 0009 	sub.w	r0, r0, r9
 8009c2e:	4582      	cmp	sl, r0
 8009c30:	d304      	bcc.n	8009c3c <I2C_RequestMemoryRead+0x294>
 8009c32:	f1ba 0f00 	cmp.w	sl, #0
 8009c36:	d001      	beq.n	8009c3c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c38:	6834      	ldr	r4, [r6, #0]
 8009c3a:	e76a      	b.n	8009b12 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c3c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c3e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c40:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c42:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c46:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c4a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009c4c:	4313      	orrs	r3, r2
 8009c4e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009c50:	e6f2      	b.n	8009a38 <I2C_RequestMemoryRead+0x90>
 8009c52:	bf00      	nop

08009c54 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009c54:	2800      	cmp	r0, #0
 8009c56:	f000 80b9 	beq.w	8009dcc <HAL_I2C_Init+0x178>
{
 8009c5a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009c5c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009c60:	4604      	mov	r4, r0
 8009c62:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009c66:	2b00      	cmp	r3, #0
 8009c68:	f000 8098 	beq.w	8009d9c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009c6c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009c6e:	2224      	movs	r2, #36	; 0x24
 8009c70:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009c74:	681a      	ldr	r2, [r3, #0]
 8009c76:	f022 0201 	bic.w	r2, r2, #1
 8009c7a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009c7c:	681a      	ldr	r2, [r3, #0]
 8009c7e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009c82:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009c84:	681a      	ldr	r2, [r3, #0]
 8009c86:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009c8a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009c8c:	f001 fe70 	bl	800b970 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009c90:	6865      	ldr	r5, [r4, #4]
 8009c92:	4b4f      	ldr	r3, [pc, #316]	; (8009dd0 <HAL_I2C_Init+0x17c>)
 8009c94:	429d      	cmp	r5, r3
 8009c96:	d84f      	bhi.n	8009d38 <HAL_I2C_Init+0xe4>
 8009c98:	4b4e      	ldr	r3, [pc, #312]	; (8009dd4 <HAL_I2C_Init+0x180>)
 8009c9a:	4298      	cmp	r0, r3
 8009c9c:	d97c      	bls.n	8009d98 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009c9e:	4b4e      	ldr	r3, [pc, #312]	; (8009dd8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ca0:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009ca2:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ca6:	1e43      	subs	r3, r0, #1
 8009ca8:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009cac:	6822      	ldr	r2, [r4, #0]
 8009cae:	6851      	ldr	r1, [r2, #4]
 8009cb0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009cb4:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009cb8:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009cba:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009cbc:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009cc0:	f10c 0c01 	add.w	ip, ip, #1
 8009cc4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009cc8:	ea41 010c 	orr.w	r1, r1, ip
 8009ccc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009cce:	69d1      	ldr	r1, [r2, #28]
 8009cd0:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009cd4:	3301      	adds	r3, #1
 8009cd6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009cda:	4203      	tst	r3, r0
 8009cdc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009ce0:	d161      	bne.n	8009da6 <HAL_I2C_Init+0x152>
 8009ce2:	2304      	movs	r3, #4
 8009ce4:	430b      	orrs	r3, r1
 8009ce6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009ce8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009cec:	6811      	ldr	r1, [r2, #0]
 8009cee:	4303      	orrs	r3, r0
 8009cf0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009cf4:	430b      	orrs	r3, r1
 8009cf6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009cf8:	6891      	ldr	r1, [r2, #8]
 8009cfa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009cfe:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009d02:	4303      	orrs	r3, r0
 8009d04:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d08:	430b      	orrs	r3, r1
 8009d0a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009d0c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009d10:	68d1      	ldr	r1, [r2, #12]
 8009d12:	4303      	orrs	r3, r0
 8009d14:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d18:	430b      	orrs	r3, r1
 8009d1a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009d1c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d1e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009d20:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009d24:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009d26:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d28:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009d2a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009d2e:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009d34:	4618      	mov	r0, r3
}
 8009d36:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009d38:	4b28      	ldr	r3, [pc, #160]	; (8009ddc <HAL_I2C_Init+0x188>)
 8009d3a:	4298      	cmp	r0, r3
 8009d3c:	d92c      	bls.n	8009d98 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d3e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009d40:	4b25      	ldr	r3, [pc, #148]	; (8009dd8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d42:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d44:	4e26      	ldr	r6, [pc, #152]	; (8009de0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009d46:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d4a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d4e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009d52:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009d54:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d58:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009d5c:	fb01 f303 	mul.w	r3, r1, r3
 8009d60:	fba6 6303 	umull	r6, r3, r6, r3
 8009d64:	6a11      	ldr	r1, [r2, #32]
 8009d66:	099b      	lsrs	r3, r3, #6
 8009d68:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d6c:	3301      	adds	r3, #1
 8009d6e:	430b      	orrs	r3, r1
 8009d70:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009d72:	69d1      	ldr	r1, [r2, #28]
 8009d74:	68a3      	ldr	r3, [r4, #8]
 8009d76:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009d7a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d7e:	b9ab      	cbnz	r3, 8009dac <HAL_I2C_Init+0x158>
 8009d80:	1e43      	subs	r3, r0, #1
 8009d82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009d86:	fbb3 f3f5 	udiv	r3, r3, r5
 8009d8a:	3301      	adds	r3, #1
 8009d8c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009d90:	b1d3      	cbz	r3, 8009dc8 <HAL_I2C_Init+0x174>
 8009d92:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009d96:	e7a5      	b.n	8009ce4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009d98:	2001      	movs	r0, #1
}
 8009d9a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009d9c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009da0:	f7f8 f858 	bl	8001e54 <HAL_I2C_MspInit>
 8009da4:	e762      	b.n	8009c6c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009da6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009daa:	e79b      	b.n	8009ce4 <HAL_I2C_Init+0x90>
 8009dac:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009db0:	1e43      	subs	r3, r0, #1
 8009db2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009db6:	fbb3 f3f5 	udiv	r3, r3, r5
 8009dba:	3301      	adds	r3, #1
 8009dbc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009dc0:	b113      	cbz	r3, 8009dc8 <HAL_I2C_Init+0x174>
 8009dc2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009dc6:	e78d      	b.n	8009ce4 <HAL_I2C_Init+0x90>
 8009dc8:	2301      	movs	r3, #1
 8009dca:	e78b      	b.n	8009ce4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009dcc:	2001      	movs	r0, #1
}
 8009dce:	4770      	bx	lr
 8009dd0:	000186a0 	.word	0x000186a0
 8009dd4:	001e847f 	.word	0x001e847f
 8009dd8:	431bde83 	.word	0x431bde83
 8009ddc:	003d08ff 	.word	0x003d08ff
 8009de0:	10624dd3 	.word	0x10624dd3

08009de4 <HAL_I2C_Mem_Write>:
{
 8009de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009de8:	4604      	mov	r4, r0
 8009dea:	b083      	sub	sp, #12
 8009dec:	4699      	mov	r9, r3
 8009dee:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009df2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009df4:	460f      	mov	r7, r1
 8009df6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009df8:	f7ff f974 	bl	80090e4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009dfc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009e00:	2b20      	cmp	r3, #32
 8009e02:	d004      	beq.n	8009e0e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009e04:	2702      	movs	r7, #2
}
 8009e06:	4638      	mov	r0, r7
 8009e08:	b003      	add	sp, #12
 8009e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e0e:	4605      	mov	r5, r0
 8009e10:	e005      	b.n	8009e1e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e12:	f7ff f967 	bl	80090e4 <HAL_GetTick>
 8009e16:	1b40      	subs	r0, r0, r5
 8009e18:	2819      	cmp	r0, #25
 8009e1a:	f200 80a8 	bhi.w	8009f6e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e1e:	6820      	ldr	r0, [r4, #0]
 8009e20:	6983      	ldr	r3, [r0, #24]
 8009e22:	ea6f 0c03 	mvn.w	ip, r3
 8009e26:	f01c 0b02 	ands.w	fp, ip, #2
 8009e2a:	d0f2      	beq.n	8009e12 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009e2c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009e30:	2b01      	cmp	r3, #1
 8009e32:	d0e7      	beq.n	8009e04 <HAL_I2C_Mem_Write+0x20>
 8009e34:	2301      	movs	r3, #1
 8009e36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009e3a:	6803      	ldr	r3, [r0, #0]
 8009e3c:	07db      	lsls	r3, r3, #31
 8009e3e:	d572      	bpl.n	8009f26 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e40:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009e42:	6807      	ldr	r7, [r0, #0]
 8009e44:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009e48:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009e4a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009e4c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009e4e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e50:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009e54:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009e58:	2040      	movs	r0, #64	; 0x40
 8009e5a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e5e:	2000      	movs	r0, #0
 8009e60:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009e62:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009e66:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009e68:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009e6a:	4856      	ldr	r0, [pc, #344]	; (8009fc4 <HAL_I2C_Mem_Write+0x1e0>)
 8009e6c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e6e:	464b      	mov	r3, r9
 8009e70:	4642      	mov	r2, r8
 8009e72:	4620      	mov	r0, r4
 8009e74:	f7ff fca4 	bl	80097c0 <I2C_RequestMemoryWrite>
 8009e78:	4607      	mov	r7, r0
 8009e7a:	bb00      	cbnz	r0, 8009ebe <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009e7c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009e7e:	2b00      	cmp	r3, #0
 8009e80:	f000 809e 	beq.w	8009fc0 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009e84:	6823      	ldr	r3, [r4, #0]
 8009e86:	1c72      	adds	r2, r6, #1
 8009e88:	d159      	bne.n	8009f3e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e8a:	695a      	ldr	r2, [r3, #20]
 8009e8c:	0610      	lsls	r0, r2, #24
 8009e8e:	d41b      	bmi.n	8009ec8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e90:	695a      	ldr	r2, [r3, #20]
 8009e92:	0551      	lsls	r1, r2, #21
 8009e94:	d5f9      	bpl.n	8009e8a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009e96:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e98:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009e9c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e9e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ea0:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009ea2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ea6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009eaa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009eac:	f043 0304 	orr.w	r3, r3, #4
 8009eb0:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009eb2:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009eb4:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009eb6:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009eb8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ebc:	d038      	beq.n	8009f30 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009ebe:	2701      	movs	r7, #1
}
 8009ec0:	4638      	mov	r0, r7
 8009ec2:	b003      	add	sp, #12
 8009ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ec8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009ecc:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ed0:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009ed2:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ed6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009eda:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009edc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009ede:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009ee0:	3a01      	subs	r2, #1
 8009ee2:	b292      	uxth	r2, r2
 8009ee4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009ee6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ee8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009eea:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009eec:	0740      	lsls	r0, r0, #29
 8009eee:	d517      	bpl.n	8009f20 <HAL_I2C_Mem_Write+0x13c>
 8009ef0:	b942      	cbnz	r2, 8009f04 <HAL_I2C_Mem_Write+0x120>
 8009ef2:	1c72      	adds	r2, r6, #1
 8009ef4:	d156      	bne.n	8009fa4 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009ef6:	695a      	ldr	r2, [r3, #20]
 8009ef8:	0750      	lsls	r0, r2, #29
 8009efa:	d446      	bmi.n	8009f8a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009efc:	695a      	ldr	r2, [r3, #20]
 8009efe:	0551      	lsls	r1, r2, #21
 8009f00:	d5f9      	bpl.n	8009ef6 <HAL_I2C_Mem_Write+0x112>
 8009f02:	e7c8      	b.n	8009e96 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009f04:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009f08:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009f0a:	f10c 0102 	add.w	r1, ip, #2
 8009f0e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009f10:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009f12:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009f16:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009f18:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009f1a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009f1c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009f1e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009f20:	2a00      	cmp	r2, #0
 8009f22:	d1b0      	bne.n	8009e86 <HAL_I2C_Mem_Write+0xa2>
 8009f24:	e7e5      	b.n	8009ef2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009f26:	6803      	ldr	r3, [r0, #0]
 8009f28:	f043 0301 	orr.w	r3, r3, #1
 8009f2c:	6003      	str	r3, [r0, #0]
 8009f2e:	e787      	b.n	8009e40 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f30:	6822      	ldr	r2, [r4, #0]
 8009f32:	6813      	ldr	r3, [r2, #0]
 8009f34:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009f38:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f3a:	6013      	str	r3, [r2, #0]
 8009f3c:	e763      	b.n	8009e06 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009f3e:	695a      	ldr	r2, [r3, #20]
 8009f40:	0612      	lsls	r2, r2, #24
 8009f42:	d4c1      	bmi.n	8009ec8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f44:	695a      	ldr	r2, [r3, #20]
 8009f46:	0551      	lsls	r1, r2, #21
 8009f48:	d4a5      	bmi.n	8009e96 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f4a:	f7ff f8cb 	bl	80090e4 <HAL_GetTick>
 8009f4e:	1b40      	subs	r0, r0, r5
 8009f50:	4286      	cmp	r6, r0
 8009f52:	d301      	bcc.n	8009f58 <HAL_I2C_Mem_Write+0x174>
 8009f54:	2e00      	cmp	r6, #0
 8009f56:	d195      	bne.n	8009e84 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f58:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f5a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f5c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f5e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f62:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f66:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f68:	4313      	orrs	r3, r2
 8009f6a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009f6c:	e7a1      	b.n	8009eb2 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f6e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f70:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f74:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f78:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f7e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f82:	f043 0320 	orr.w	r3, r3, #32
 8009f86:	6423      	str	r3, [r4, #64]	; 0x40
 8009f88:	e73c      	b.n	8009e04 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f8a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f8c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f8e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009f92:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f94:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009f96:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009f9a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f9e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009fa2:	e730      	b.n	8009e06 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009fa4:	695a      	ldr	r2, [r3, #20]
 8009fa6:	0752      	lsls	r2, r2, #29
 8009fa8:	d4ef      	bmi.n	8009f8a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009faa:	695a      	ldr	r2, [r3, #20]
 8009fac:	0551      	lsls	r1, r2, #21
 8009fae:	f53f af72 	bmi.w	8009e96 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fb2:	f7ff f897 	bl	80090e4 <HAL_GetTick>
 8009fb6:	1b40      	subs	r0, r0, r5
 8009fb8:	4286      	cmp	r6, r0
 8009fba:	d3cd      	bcc.n	8009f58 <HAL_I2C_Mem_Write+0x174>
 8009fbc:	2e00      	cmp	r6, #0
 8009fbe:	d0cb      	beq.n	8009f58 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009fc0:	6823      	ldr	r3, [r4, #0]
 8009fc2:	e796      	b.n	8009ef2 <HAL_I2C_Mem_Write+0x10e>
 8009fc4:	ffff0000 	.word	0xffff0000

08009fc8 <HAL_I2C_Mem_Read>:
{
 8009fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fcc:	4604      	mov	r4, r0
 8009fce:	b087      	sub	sp, #28
 8009fd0:	4699      	mov	r9, r3
 8009fd2:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009fd6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009fd8:	460f      	mov	r7, r1
 8009fda:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009fdc:	f7ff f882 	bl	80090e4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009fe0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009fe4:	2b20      	cmp	r3, #32
 8009fe6:	d004      	beq.n	8009ff2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009fe8:	2702      	movs	r7, #2
}
 8009fea:	4638      	mov	r0, r7
 8009fec:	b007      	add	sp, #28
 8009fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ff2:	4606      	mov	r6, r0
 8009ff4:	e005      	b.n	800a002 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ff6:	f7ff f875 	bl	80090e4 <HAL_GetTick>
 8009ffa:	1b80      	subs	r0, r0, r6
 8009ffc:	2819      	cmp	r0, #25
 8009ffe:	f200 80d2 	bhi.w	800a1a6 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a002:	f8d4 c000 	ldr.w	ip, [r4]
 800a006:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a00a:	43c0      	mvns	r0, r0
 800a00c:	f010 0b02 	ands.w	fp, r0, #2
 800a010:	d0f1      	beq.n	8009ff6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a012:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a016:	2b01      	cmp	r3, #1
 800a018:	d0e6      	beq.n	8009fe8 <HAL_I2C_Mem_Read+0x20>
 800a01a:	2301      	movs	r3, #1
 800a01c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a020:	f8dc 3000 	ldr.w	r3, [ip]
 800a024:	07d9      	lsls	r1, r3, #31
 800a026:	d537      	bpl.n	800a098 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a028:	f8dc 0000 	ldr.w	r0, [ip]
 800a02c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a030:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a034:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a036:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a038:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a03a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a03e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a042:	2040      	movs	r0, #64	; 0x40
 800a044:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a048:	2000      	movs	r0, #0
 800a04a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a04c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a050:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a052:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a054:	4893      	ldr	r0, [pc, #588]	; (800a2a4 <HAL_I2C_Mem_Read+0x2dc>)
 800a056:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a058:	4639      	mov	r1, r7
 800a05a:	464b      	mov	r3, r9
 800a05c:	4642      	mov	r2, r8
 800a05e:	4620      	mov	r0, r4
 800a060:	f7ff fca2 	bl	80099a8 <I2C_RequestMemoryRead>
 800a064:	4607      	mov	r7, r0
 800a066:	2800      	cmp	r0, #0
 800a068:	f040 80ab 	bne.w	800a1c2 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a06c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a06e:	b9d2      	cbnz	r2, 800a0a6 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a070:	6823      	ldr	r3, [r4, #0]
 800a072:	9002      	str	r0, [sp, #8]
 800a074:	695a      	ldr	r2, [r3, #20]
 800a076:	9202      	str	r2, [sp, #8]
 800a078:	699a      	ldr	r2, [r3, #24]
 800a07a:	9202      	str	r2, [sp, #8]
 800a07c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a07e:	681a      	ldr	r2, [r3, #0]
 800a080:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a084:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a086:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a088:	2220      	movs	r2, #32
 800a08a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a08e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a092:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a096:	e7a8      	b.n	8009fea <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a098:	f8dc 3000 	ldr.w	r3, [ip]
 800a09c:	f043 0301 	orr.w	r3, r3, #1
 800a0a0:	f8cc 3000 	str.w	r3, [ip]
 800a0a4:	e7c0      	b.n	800a028 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a0a6:	2a01      	cmp	r2, #1
 800a0a8:	f000 812c 	beq.w	800a304 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a0ac:	2a02      	cmp	r2, #2
 800a0ae:	f000 80bd 	beq.w	800a22c <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0b2:	6823      	ldr	r3, [r4, #0]
 800a0b4:	9005      	str	r0, [sp, #20]
 800a0b6:	6959      	ldr	r1, [r3, #20]
 800a0b8:	9105      	str	r1, [sp, #20]
 800a0ba:	6999      	ldr	r1, [r3, #24]
 800a0bc:	9105      	str	r1, [sp, #20]
 800a0be:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a0c0:	2a03      	cmp	r2, #3
 800a0c2:	d849      	bhi.n	800a158 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a0c4:	2a01      	cmp	r2, #1
 800a0c6:	f000 80eb 	beq.w	800a2a0 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a0ca:	2a02      	cmp	r2, #2
 800a0cc:	f000 8089 	beq.w	800a1e2 <HAL_I2C_Mem_Read+0x21a>
 800a0d0:	1c69      	adds	r1, r5, #1
 800a0d2:	f040 80bb 	bne.w	800a24c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0d6:	695a      	ldr	r2, [r3, #20]
 800a0d8:	0752      	lsls	r2, r2, #29
 800a0da:	d5fc      	bpl.n	800a0d6 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0dc:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0de:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a0e4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0e6:	691b      	ldr	r3, [r3, #16]
 800a0e8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a0ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a0ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a0ee:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a0f0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a0f2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a0f4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a0f6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a0f8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a0fa:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a0fc:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a0fe:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a100:	6822      	ldr	r2, [r4, #0]
 800a102:	f040 80af 	bne.w	800a264 <HAL_I2C_Mem_Read+0x29c>
 800a106:	6953      	ldr	r3, [r2, #20]
 800a108:	075b      	lsls	r3, r3, #29
 800a10a:	d5fc      	bpl.n	800a106 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a10c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a10e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a110:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a114:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a116:	6913      	ldr	r3, [r2, #16]
 800a118:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a11a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a11c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a11e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a120:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a122:	3b01      	subs	r3, #1
 800a124:	b29b      	uxth	r3, r3
 800a126:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a128:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a12a:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a12c:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a130:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a132:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a136:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a138:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a13a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a13c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a13e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a140:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a142:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a144:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a146:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a148:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a14a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a14c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a14e:	2a00      	cmp	r2, #0
 800a150:	d099      	beq.n	800a086 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a152:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a154:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a156:	d9b5      	bls.n	800a0c4 <HAL_I2C_Mem_Read+0xfc>
 800a158:	b95d      	cbnz	r5, 800a172 <HAL_I2C_Mem_Read+0x1aa>
 800a15a:	e0c5      	b.n	800a2e8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a15c:	695a      	ldr	r2, [r3, #20]
 800a15e:	06d0      	lsls	r0, r2, #27
 800a160:	f100 80b2 	bmi.w	800a2c8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a164:	f7fe ffbe 	bl	80090e4 <HAL_GetTick>
 800a168:	1b80      	subs	r0, r0, r6
 800a16a:	4285      	cmp	r5, r0
 800a16c:	f0c0 8086 	bcc.w	800a27c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a170:	6823      	ldr	r3, [r4, #0]
 800a172:	695a      	ldr	r2, [r3, #20]
 800a174:	0652      	lsls	r2, r2, #25
 800a176:	d5f1      	bpl.n	800a15c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a178:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a17a:	691b      	ldr	r3, [r3, #16]
 800a17c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a17e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a180:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a182:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a184:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a186:	3b01      	subs	r3, #1
 800a188:	b29b      	uxth	r3, r3
 800a18a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a18c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a18e:	3a01      	subs	r2, #1
 800a190:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a192:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a196:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a198:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a19a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a19e:	d5d6      	bpl.n	800a14e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1a0:	6903      	ldr	r3, [r0, #16]
 800a1a2:	704b      	strb	r3, [r1, #1]
 800a1a4:	e036      	b.n	800a214 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1a6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a1a8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1ac:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a1b0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a1b6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1ba:	f043 0320 	orr.w	r3, r3, #32
 800a1be:	6423      	str	r3, [r4, #64]	; 0x40
 800a1c0:	e712      	b.n	8009fe8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a1c2:	2701      	movs	r7, #1
}
 800a1c4:	4638      	mov	r0, r7
 800a1c6:	b007      	add	sp, #28
 800a1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1cc:	695a      	ldr	r2, [r3, #20]
 800a1ce:	0750      	lsls	r0, r2, #29
 800a1d0:	d40c      	bmi.n	800a1ec <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1d2:	f7fe ff87 	bl	80090e4 <HAL_GetTick>
 800a1d6:	1b80      	subs	r0, r0, r6
 800a1d8:	4285      	cmp	r5, r0
 800a1da:	d34f      	bcc.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
 800a1dc:	2d00      	cmp	r5, #0
 800a1de:	d04d      	beq.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1e0:	6823      	ldr	r3, [r4, #0]
 800a1e2:	1c69      	adds	r1, r5, #1
 800a1e4:	d1f2      	bne.n	800a1cc <HAL_I2C_Mem_Read+0x204>
 800a1e6:	695a      	ldr	r2, [r3, #20]
 800a1e8:	0752      	lsls	r2, r2, #29
 800a1ea:	d5fc      	bpl.n	800a1e6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1ec:	681a      	ldr	r2, [r3, #0]
 800a1ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a1f2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1f4:	691a      	ldr	r2, [r3, #16]
 800a1f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a1f8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a1fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a1fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a1fe:	3b01      	subs	r3, #1
 800a200:	b29b      	uxth	r3, r3
 800a202:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a204:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a206:	3b01      	subs	r3, #1
 800a208:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a20a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a20c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a20e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a210:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a212:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a214:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a216:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a218:	3301      	adds	r3, #1
 800a21a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a21c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a21e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a220:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a222:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a224:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a226:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a228:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a22a:	e790      	b.n	800a14e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a22c:	6823      	ldr	r3, [r4, #0]
 800a22e:	6819      	ldr	r1, [r3, #0]
 800a230:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a234:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a236:	6819      	ldr	r1, [r3, #0]
 800a238:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a23c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a23e:	9004      	str	r0, [sp, #16]
 800a240:	6959      	ldr	r1, [r3, #20]
 800a242:	9104      	str	r1, [sp, #16]
 800a244:	6999      	ldr	r1, [r3, #24]
 800a246:	9104      	str	r1, [sp, #16]
 800a248:	9904      	ldr	r1, [sp, #16]
 800a24a:	e739      	b.n	800a0c0 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a24c:	695a      	ldr	r2, [r3, #20]
 800a24e:	0750      	lsls	r0, r2, #29
 800a250:	f53f af44 	bmi.w	800a0dc <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a254:	f7fe ff46 	bl	80090e4 <HAL_GetTick>
 800a258:	1b80      	subs	r0, r0, r6
 800a25a:	4285      	cmp	r5, r0
 800a25c:	d30e      	bcc.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
 800a25e:	b16d      	cbz	r5, 800a27c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a260:	6823      	ldr	r3, [r4, #0]
 800a262:	e735      	b.n	800a0d0 <HAL_I2C_Mem_Read+0x108>
 800a264:	6953      	ldr	r3, [r2, #20]
 800a266:	0758      	lsls	r0, r3, #29
 800a268:	f53f af50 	bmi.w	800a10c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a26c:	f7fe ff3a 	bl	80090e4 <HAL_GetTick>
 800a270:	1b80      	subs	r0, r0, r6
 800a272:	4285      	cmp	r5, r0
 800a274:	d302      	bcc.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
 800a276:	2d00      	cmp	r5, #0
 800a278:	f47f af41 	bne.w	800a0fe <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a27c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a27e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a280:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a282:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a286:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a28a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a28c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a290:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a292:	f043 0320 	orr.w	r3, r3, #32
}
 800a296:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a298:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a29a:	b007      	add	sp, #28
 800a29c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2a0:	b95d      	cbnz	r5, 800a2ba <HAL_I2C_Mem_Read+0x2f2>
 800a2a2:	e02b      	b.n	800a2fc <HAL_I2C_Mem_Read+0x334>
 800a2a4:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a2a8:	695a      	ldr	r2, [r3, #20]
 800a2aa:	06d2      	lsls	r2, r2, #27
 800a2ac:	d40c      	bmi.n	800a2c8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2ae:	f7fe ff19 	bl	80090e4 <HAL_GetTick>
 800a2b2:	1b80      	subs	r0, r0, r6
 800a2b4:	4285      	cmp	r5, r0
 800a2b6:	d3e1      	bcc.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2b8:	6823      	ldr	r3, [r4, #0]
 800a2ba:	695a      	ldr	r2, [r3, #20]
 800a2bc:	0651      	lsls	r1, r2, #25
 800a2be:	d5f3      	bpl.n	800a2a8 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2c0:	691a      	ldr	r2, [r3, #16]
 800a2c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a2c4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a2c6:	e7a5      	b.n	800a214 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a2c8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a2ca:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a2ce:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a2d0:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a2d2:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a2d4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2d8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a2dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a2de:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a2e0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a2e4:	2701      	movs	r7, #1
 800a2e6:	e680      	b.n	8009fea <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2e8:	695a      	ldr	r2, [r3, #20]
 800a2ea:	0652      	lsls	r2, r2, #25
 800a2ec:	f53f af44 	bmi.w	800a178 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a2f0:	695a      	ldr	r2, [r3, #20]
 800a2f2:	06d1      	lsls	r1, r2, #27
 800a2f4:	d4e8      	bmi.n	800a2c8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2f6:	f7fe fef5 	bl	80090e4 <HAL_GetTick>
 800a2fa:	e7bf      	b.n	800a27c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2fc:	695a      	ldr	r2, [r3, #20]
 800a2fe:	0650      	lsls	r0, r2, #25
 800a300:	d5f6      	bpl.n	800a2f0 <HAL_I2C_Mem_Read+0x328>
 800a302:	e7dd      	b.n	800a2c0 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a304:	6823      	ldr	r3, [r4, #0]
 800a306:	6819      	ldr	r1, [r3, #0]
 800a308:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a30c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a30e:	9003      	str	r0, [sp, #12]
 800a310:	6959      	ldr	r1, [r3, #20]
 800a312:	9103      	str	r1, [sp, #12]
 800a314:	6999      	ldr	r1, [r3, #24]
 800a316:	9103      	str	r1, [sp, #12]
 800a318:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a31a:	6819      	ldr	r1, [r3, #0]
 800a31c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a320:	6019      	str	r1, [r3, #0]
 800a322:	e6cd      	b.n	800a0c0 <HAL_I2C_Mem_Read+0xf8>

0800a324 <HAL_I2C_MasterTxCpltCallback>:
 800a324:	4770      	bx	lr
 800a326:	bf00      	nop

0800a328 <HAL_I2C_MasterRxCpltCallback>:
 800a328:	4770      	bx	lr
 800a32a:	bf00      	nop

0800a32c <HAL_I2C_SlaveTxCpltCallback>:
 800a32c:	4770      	bx	lr
 800a32e:	bf00      	nop

0800a330 <HAL_I2C_SlaveRxCpltCallback>:
 800a330:	4770      	bx	lr
 800a332:	bf00      	nop

0800a334 <HAL_I2C_AddrCallback>:
}
 800a334:	4770      	bx	lr
 800a336:	bf00      	nop

0800a338 <HAL_I2C_ListenCpltCallback>:
 800a338:	4770      	bx	lr
 800a33a:	bf00      	nop

0800a33c <HAL_I2C_MemTxCpltCallback>:
 800a33c:	4770      	bx	lr
 800a33e:	bf00      	nop

0800a340 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a340:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a344:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a346:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a348:	b959      	cbnz	r1, 800a362 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a34a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a34c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a34e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a350:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a352:	d00d      	beq.n	800a370 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a354:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a358:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a35a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a35c:	3201      	adds	r2, #1
 800a35e:	6502      	str	r2, [r0, #80]	; 0x50
 800a360:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a362:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a364:	2901      	cmp	r1, #1
 800a366:	d009      	beq.n	800a37c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a368:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a36a:	2902      	cmp	r1, #2
 800a36c:	d00e      	beq.n	800a38c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a36e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a370:	b2d2      	uxtb	r2, r2
 800a372:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a374:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a376:	3202      	adds	r2, #2
 800a378:	6502      	str	r2, [r0, #80]	; 0x50
 800a37a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a37c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a37e:	6801      	ldr	r1, [r0, #0]
 800a380:	b2d2      	uxtb	r2, r2
 800a382:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a384:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a386:	3201      	adds	r2, #1
 800a388:	6502      	str	r2, [r0, #80]	; 0x50
 800a38a:	4770      	bx	lr
 800a38c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a38e:	2a22      	cmp	r2, #34	; 0x22
 800a390:	d01f      	beq.n	800a3d2 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a392:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a394:	b289      	uxth	r1, r1
 800a396:	b9c1      	cbnz	r1, 800a3ca <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a398:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a39a:	b289      	uxth	r1, r1
 800a39c:	2900      	cmp	r1, #0
 800a39e:	d1e6      	bne.n	800a36e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a3a0:	2a21      	cmp	r2, #33	; 0x21
 800a3a2:	d1e4      	bne.n	800a36e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a3a4:	6802      	ldr	r2, [r0, #0]
{
 800a3a6:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a3a8:	6854      	ldr	r4, [r2, #4]
 800a3aa:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a3ae:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3b0:	6814      	ldr	r4, [r2, #0]
 800a3b2:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a3b6:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a3b8:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a3ba:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a3bc:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a3c0:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a3c4:	f7ff ffba 	bl	800a33c <HAL_I2C_MemTxCpltCallback>
}
 800a3c8:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a3ca:	2a21      	cmp	r2, #33	; 0x21
 800a3cc:	d00a      	beq.n	800a3e4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a3ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a3d0:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a3d2:	6801      	ldr	r1, [r0, #0]
 800a3d4:	680a      	ldr	r2, [r1, #0]
 800a3d6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a3da:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a3dc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a3de:	3201      	adds	r2, #1
 800a3e0:	6502      	str	r2, [r0, #80]	; 0x50
 800a3e2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a3e4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a3e6:	6802      	ldr	r2, [r0, #0]
 800a3e8:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a3ec:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a3ee:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a3f0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a3f2:	3a01      	subs	r2, #1
 800a3f4:	b292      	uxth	r2, r2
 800a3f6:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a3f8:	4770      	bx	lr
 800a3fa:	bf00      	nop

0800a3fc <HAL_I2C_MemRxCpltCallback>:
 800a3fc:	4770      	bx	lr
 800a3fe:	bf00      	nop

0800a400 <HAL_I2C_ErrorCallback>:
 800a400:	4770      	bx	lr
 800a402:	bf00      	nop

0800a404 <HAL_I2C_AbortCpltCallback>:
 800a404:	4770      	bx	lr
 800a406:	bf00      	nop

0800a408 <I2C_DMAAbort>:
{
 800a408:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a40a:	4b3a      	ldr	r3, [pc, #232]	; (800a4f4 <I2C_DMAAbort+0xec>)
 800a40c:	4a3a      	ldr	r2, [pc, #232]	; (800a4f8 <I2C_DMAAbort+0xf0>)
 800a40e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a410:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a412:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a414:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a416:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a418:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a41c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a41e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a420:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a424:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a426:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a42a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a42e:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a430:	9301      	str	r3, [sp, #4]
 800a432:	e005      	b.n	800a440 <I2C_DMAAbort+0x38>
    count--;
 800a434:	9b01      	ldr	r3, [sp, #4]
 800a436:	3b01      	subs	r3, #1
 800a438:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a43a:	6813      	ldr	r3, [r2, #0]
 800a43c:	059b      	lsls	r3, r3, #22
 800a43e:	d506      	bpl.n	800a44e <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a440:	9b01      	ldr	r3, [sp, #4]
 800a442:	2b00      	cmp	r3, #0
 800a444:	d1f6      	bne.n	800a434 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a446:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a448:	f043 0320 	orr.w	r3, r3, #32
 800a44c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a44e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a450:	b34c      	cbz	r4, 800a4a6 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a452:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a454:	2500      	movs	r5, #0
 800a456:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a458:	b1f3      	cbz	r3, 800a498 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a45a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a45c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a45e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a462:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a464:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a466:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a468:	2400      	movs	r4, #0
 800a46a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a46c:	6813      	ldr	r3, [r2, #0]
 800a46e:	f023 0301 	bic.w	r3, r3, #1
 800a472:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a474:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a478:	2b60      	cmp	r3, #96	; 0x60
 800a47a:	d02a      	beq.n	800a4d2 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a47c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a480:	2928      	cmp	r1, #40	; 0x28
 800a482:	d019      	beq.n	800a4b8 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a484:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a486:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a488:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a48c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a490:	f7ff ffb6 	bl	800a400 <HAL_I2C_ErrorCallback>
}
 800a494:	b002      	add	sp, #8
 800a496:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a498:	6815      	ldr	r5, [r2, #0]
 800a49a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a49e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a4a0:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a4a2:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a4a4:	e7e2      	b.n	800a46c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a4a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a4a8:	b1f3      	cbz	r3, 800a4e8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4aa:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a4ac:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4ae:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a4b2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a4b4:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a4b6:	e7d7      	b.n	800a468 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a4b8:	6813      	ldr	r3, [r2, #0]
 800a4ba:	f043 0301 	orr.w	r3, r3, #1
 800a4be:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4c0:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a4c2:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4c4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a4c8:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a4ca:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a4cc:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a4d0:	e7de      	b.n	800a490 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a4d2:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a4d4:	2220      	movs	r2, #32
 800a4d6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a4da:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a4de:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a4e0:	f7ff ff90 	bl	800a404 <HAL_I2C_AbortCpltCallback>
}
 800a4e4:	b002      	add	sp, #8
 800a4e6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4e8:	6814      	ldr	r4, [r2, #0]
 800a4ea:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a4ee:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a4f0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a4f2:	e7bb      	b.n	800a46c <I2C_DMAAbort+0x64>
 800a4f4:	20000078 	.word	0x20000078
 800a4f8:	14f8b589 	.word	0x14f8b589

0800a4fc <I2C_ITError>:
{
 800a4fc:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4fe:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a502:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a506:	2b10      	cmp	r3, #16
{
 800a508:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a50a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a50c:	d039      	beq.n	800a582 <I2C_ITError+0x86>
 800a50e:	b2d9      	uxtb	r1, r3
 800a510:	2940      	cmp	r1, #64	; 0x40
 800a512:	d036      	beq.n	800a582 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a514:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a518:	2928      	cmp	r1, #40	; 0x28
 800a51a:	d03d      	beq.n	800a598 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a51c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a51e:	6859      	ldr	r1, [r3, #4]
 800a520:	0508      	lsls	r0, r1, #20
 800a522:	d407      	bmi.n	800a534 <I2C_ITError+0x38>
 800a524:	2a60      	cmp	r2, #96	; 0x60
 800a526:	d005      	beq.n	800a534 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a528:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a52a:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a52c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a530:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a534:	2200      	movs	r2, #0
 800a536:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a538:	685a      	ldr	r2, [r3, #4]
 800a53a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a53e:	d134      	bne.n	800a5aa <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a540:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a544:	2960      	cmp	r1, #96	; 0x60
 800a546:	d075      	beq.n	800a634 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a548:	695a      	ldr	r2, [r3, #20]
 800a54a:	0650      	lsls	r0, r2, #25
 800a54c:	d505      	bpl.n	800a55a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a54e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a550:	691b      	ldr	r3, [r3, #16]
 800a552:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a554:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a556:	3301      	adds	r3, #1
 800a558:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a55a:	4620      	mov	r0, r4
 800a55c:	f7ff ff50 	bl	800a400 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a560:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a562:	0719      	lsls	r1, r3, #28
 800a564:	d004      	beq.n	800a570 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a566:	6822      	ldr	r2, [r4, #0]
 800a568:	6853      	ldr	r3, [r2, #4]
 800a56a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a56e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a570:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a574:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a576:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a578:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a57a:	d501      	bpl.n	800a580 <I2C_ITError+0x84>
 800a57c:	2b28      	cmp	r3, #40	; 0x28
 800a57e:	d02f      	beq.n	800a5e0 <I2C_ITError+0xe4>
}
 800a580:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a582:	2a22      	cmp	r2, #34	; 0x22
 800a584:	d1c6      	bne.n	800a514 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a586:	6823      	ldr	r3, [r4, #0]
 800a588:	681a      	ldr	r2, [r3, #0]
 800a58a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a58e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a590:	685a      	ldr	r2, [r3, #4]
 800a592:	0512      	lsls	r2, r2, #20
 800a594:	d5c8      	bpl.n	800a528 <I2C_ITError+0x2c>
 800a596:	e7cd      	b.n	800a534 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a598:	2300      	movs	r3, #0
 800a59a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a59c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a59e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a5a2:	685a      	ldr	r2, [r3, #4]
 800a5a4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a5a8:	d0ca      	beq.n	800a540 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a5aa:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a5ac:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a5ae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a5b2:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a5b4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a5b8:	2b01      	cmp	r3, #1
 800a5ba:	d01e      	beq.n	800a5fa <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a5bc:	4b28      	ldr	r3, [pc, #160]	; (800a660 <I2C_ITError+0x164>)
 800a5be:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a5c0:	f7fe feb2 	bl	8009328 <HAL_DMA_Abort_IT>
 800a5c4:	2800      	cmp	r0, #0
 800a5c6:	d0cb      	beq.n	800a560 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a5c8:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a5ca:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a5cc:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a5ce:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a5d0:	f023 0301 	bic.w	r3, r3, #1
 800a5d4:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a5d6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a5da:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a5dc:	4798      	blx	r3
 800a5de:	e7bf      	b.n	800a560 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a5e0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a5e2:	4920      	ldr	r1, [pc, #128]	; (800a664 <I2C_ITError+0x168>)
 800a5e4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a5e6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a5e8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a5ea:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a5ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a5f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a5f4:	f7ff fea0 	bl	800a338 <HAL_I2C_ListenCpltCallback>
}
 800a5f8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a5fa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a5fc:	4b18      	ldr	r3, [pc, #96]	; (800a660 <I2C_ITError+0x164>)
 800a5fe:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a600:	f7fe fe92 	bl	8009328 <HAL_DMA_Abort_IT>
 800a604:	2800      	cmp	r0, #0
 800a606:	d0ab      	beq.n	800a560 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a608:	6823      	ldr	r3, [r4, #0]
 800a60a:	695a      	ldr	r2, [r3, #20]
 800a60c:	0651      	lsls	r1, r2, #25
 800a60e:	d506      	bpl.n	800a61e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a610:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a612:	691b      	ldr	r3, [r3, #16]
 800a614:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a616:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a618:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a61a:	3201      	adds	r2, #1
 800a61c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a61e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a620:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a622:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a626:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a628:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a62a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a62e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a630:	4798      	blx	r3
 800a632:	e795      	b.n	800a560 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a634:	2120      	movs	r1, #32
 800a636:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a63a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a63c:	695a      	ldr	r2, [r3, #20]
 800a63e:	0652      	lsls	r2, r2, #25
 800a640:	d506      	bpl.n	800a650 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a642:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a644:	691b      	ldr	r3, [r3, #16]
 800a646:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a648:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a64a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a64c:	3201      	adds	r2, #1
 800a64e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a650:	681a      	ldr	r2, [r3, #0]
 800a652:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a656:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a658:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a65a:	f7ff fed3 	bl	800a404 <HAL_I2C_AbortCpltCallback>
 800a65e:	e77f      	b.n	800a560 <I2C_ITError+0x64>
 800a660:	0800a409 	.word	0x0800a409
 800a664:	ffff0000 	.word	0xffff0000

0800a668 <HAL_I2C_EV_IRQHandler>:
{
 800a668:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a66a:	6803      	ldr	r3, [r0, #0]
{
 800a66c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a66e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a670:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a672:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a676:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a67a:	2910      	cmp	r1, #16
{
 800a67c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a67e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a680:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a684:	d022      	beq.n	800a6cc <HAL_I2C_EV_IRQHandler+0x64>
 800a686:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a68a:	d01f      	beq.n	800a6cc <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a68c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a68e:	2900      	cmp	r1, #0
 800a690:	f000 8094 	beq.w	800a7bc <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a694:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a696:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a698:	f011 0602 	ands.w	r6, r1, #2
 800a69c:	d059      	beq.n	800a752 <HAL_I2C_EV_IRQHandler+0xea>
 800a69e:	0586      	lsls	r6, r0, #22
 800a6a0:	d559      	bpl.n	800a756 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a6a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a6a4:	b102      	cbz	r2, 800a6a8 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a6a6:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a6a8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a6ac:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a6b0:	2a28      	cmp	r2, #40	; 0x28
 800a6b2:	f000 821e 	beq.w	800aaf2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a6b6:	2200      	movs	r2, #0
 800a6b8:	920c      	str	r2, [sp, #48]	; 0x30
 800a6ba:	6959      	ldr	r1, [r3, #20]
 800a6bc:	910c      	str	r1, [sp, #48]	; 0x30
 800a6be:	699b      	ldr	r3, [r3, #24]
 800a6c0:	930c      	str	r3, [sp, #48]	; 0x30
 800a6c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a6c4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a6c8:	b00e      	add	sp, #56	; 0x38
 800a6ca:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a6cc:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a6ce:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a6d0:	f011 0f01 	tst.w	r1, #1
 800a6d4:	d11a      	bne.n	800a70c <HAL_I2C_EV_IRQHandler+0xa4>
 800a6d6:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a6da:	d0f5      	beq.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a6dc:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a6e0:	d0f2      	beq.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6e2:	070d      	lsls	r5, r1, #28
 800a6e4:	d56d      	bpl.n	800a7c2 <HAL_I2C_EV_IRQHandler+0x15a>
 800a6e6:	0585      	lsls	r5, r0, #22
 800a6e8:	f140 8083 	bpl.w	800a7f2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a6ec:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a6f0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a6f2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6f4:	2900      	cmp	r1, #0
 800a6f6:	f000 81e3 	beq.w	800aac0 <HAL_I2C_EV_IRQHandler+0x458>
 800a6fa:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a6fc:	2a00      	cmp	r2, #0
 800a6fe:	f000 81df 	beq.w	800aac0 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a702:	685a      	ldr	r2, [r3, #4]
 800a704:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a708:	605a      	str	r2, [r3, #4]
 800a70a:	e7dd      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a70c:	0585      	lsls	r5, r0, #22
 800a70e:	d56e      	bpl.n	800a7ee <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a710:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a712:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a716:	f000 81e9 	beq.w	800aaec <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a71a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a71c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a720:	bf04      	itt	eq
 800a722:	2208      	moveq	r2, #8
 800a724:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a726:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a72a:	2a40      	cmp	r2, #64	; 0x40
 800a72c:	f000 81d7 	beq.w	800aade <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a730:	6922      	ldr	r2, [r4, #16]
 800a732:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a736:	f000 81b2 	beq.w	800aa9e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a73a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a73c:	2a00      	cmp	r2, #0
 800a73e:	f040 81ef 	bne.w	800ab20 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a742:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a744:	11d2      	asrs	r2, r2, #7
 800a746:	f002 0206 	and.w	r2, r2, #6
 800a74a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a74e:	611a      	str	r2, [r3, #16]
 800a750:	e7ba      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a752:	06cd      	lsls	r5, r1, #27
 800a754:	d47c      	bmi.n	800a850 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a756:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a75a:	2a21      	cmp	r2, #33	; 0x21
 800a75c:	f000 80f5 	beq.w	800a94a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a760:	064e      	lsls	r6, r1, #25
 800a762:	f140 8132 	bpl.w	800a9ca <HAL_I2C_EV_IRQHandler+0x362>
 800a766:	0545      	lsls	r5, r0, #21
 800a768:	f140 812f 	bpl.w	800a9ca <HAL_I2C_EV_IRQHandler+0x362>
 800a76c:	0749      	lsls	r1, r1, #29
 800a76e:	f100 812f 	bmi.w	800a9d0 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a772:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a776:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a778:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a77a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a77c:	2a00      	cmp	r2, #0
 800a77e:	d0a3      	beq.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a780:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a782:	691b      	ldr	r3, [r3, #16]
 800a784:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a786:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a788:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a78a:	3b01      	subs	r3, #1
 800a78c:	b29b      	uxth	r3, r3
 800a78e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a790:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a792:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a794:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a796:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a798:	2b00      	cmp	r3, #0
 800a79a:	d195      	bne.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a79c:	292a      	cmp	r1, #42	; 0x2a
 800a79e:	d193      	bne.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a7a0:	6822      	ldr	r2, [r4, #0]
 800a7a2:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a7a4:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7a6:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a7a8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a7ac:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7ae:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a7b0:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7b2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7b6:	f7ff fdbb 	bl	800a330 <HAL_I2C_SlaveRxCpltCallback>
 800a7ba:	e785      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a7bc:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a7be:	6959      	ldr	r1, [r3, #20]
 800a7c0:	e76a      	b.n	800a698 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7c2:	078d      	lsls	r5, r1, #30
 800a7c4:	d515      	bpl.n	800a7f2 <HAL_I2C_EV_IRQHandler+0x18a>
 800a7c6:	0585      	lsls	r5, r0, #22
 800a7c8:	d513      	bpl.n	800a7f2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a7ca:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a7ce:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a7d0:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a7d2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a7d6:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a7d8:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a7da:	f000 81b3 	beq.w	800ab44 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a7de:	2200      	movs	r2, #0
 800a7e0:	920a      	str	r2, [sp, #40]	; 0x28
 800a7e2:	695a      	ldr	r2, [r3, #20]
 800a7e4:	920a      	str	r2, [sp, #40]	; 0x28
 800a7e6:	699b      	ldr	r3, [r3, #24]
 800a7e8:	930a      	str	r3, [sp, #40]	; 0x28
 800a7ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a7ec:	e76c      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7ee:	070d      	lsls	r5, r1, #28
 800a7f0:	d5e7      	bpl.n	800a7c2 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a7f2:	0776      	lsls	r6, r6, #29
 800a7f4:	f140 80f5 	bpl.w	800a9e2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a7f8:	685d      	ldr	r5, [r3, #4]
 800a7fa:	052d      	lsls	r5, r5, #20
 800a7fc:	f53f af64 	bmi.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a800:	060e      	lsls	r6, r1, #24
 800a802:	f140 8115 	bpl.w	800aa30 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a806:	0545      	lsls	r5, r0, #21
 800a808:	f140 8112 	bpl.w	800aa30 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a80c:	074e      	lsls	r6, r1, #29
 800a80e:	f100 8112 	bmi.w	800aa36 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a812:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a816:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a818:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a81c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a81e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a820:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a822:	2800      	cmp	r0, #0
 800a824:	f040 8235 	bne.w	800ac92 <HAL_I2C_EV_IRQHandler+0x62a>
 800a828:	2a21      	cmp	r2, #33	; 0x21
 800a82a:	f000 8347 	beq.w	800aebc <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a82e:	2940      	cmp	r1, #64	; 0x40
 800a830:	f47f af4a 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a834:	2a22      	cmp	r2, #34	; 0x22
 800a836:	f47f af47 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a83a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a83c:	b292      	uxth	r2, r2
 800a83e:	2a00      	cmp	r2, #0
 800a840:	f000 8268 	beq.w	800ad14 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a844:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a848:	2a40      	cmp	r2, #64	; 0x40
 800a84a:	f040 80b4 	bne.w	800a9b6 <HAL_I2C_EV_IRQHandler+0x34e>
 800a84e:	e0fc      	b.n	800aa4a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a850:	0585      	lsls	r5, r0, #22
 800a852:	d580      	bpl.n	800a756 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a854:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a858:	685a      	ldr	r2, [r3, #4]
 800a85a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a85e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a860:	960d      	str	r6, [sp, #52]	; 0x34
 800a862:	695a      	ldr	r2, [r3, #20]
 800a864:	920d      	str	r2, [sp, #52]	; 0x34
 800a866:	681a      	ldr	r2, [r3, #0]
 800a868:	f042 0201 	orr.w	r2, r2, #1
 800a86c:	601a      	str	r2, [r3, #0]
 800a86e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a870:	681a      	ldr	r2, [r3, #0]
 800a872:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a876:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a878:	685a      	ldr	r2, [r3, #4]
 800a87a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a87c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a87e:	d521      	bpl.n	800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a880:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a884:	2a22      	cmp	r2, #34	; 0x22
 800a886:	f000 817a 	beq.w	800ab7e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a88a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a88c:	6802      	ldr	r2, [r0, #0]
 800a88e:	6852      	ldr	r2, [r2, #4]
 800a890:	b292      	uxth	r2, r2
 800a892:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a894:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a896:	b292      	uxth	r2, r2
 800a898:	b11a      	cbz	r2, 800a8a2 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a89a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a89c:	f042 0204 	orr.w	r2, r2, #4
 800a8a0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a8a2:	685a      	ldr	r2, [r3, #4]
 800a8a4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a8a8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a8aa:	f7fe fe25 	bl	80094f8 <HAL_DMA_GetState>
 800a8ae:	2801      	cmp	r0, #1
 800a8b0:	d008      	beq.n	800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a8b2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a8b4:	4b99      	ldr	r3, [pc, #612]	; (800ab1c <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a8b6:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a8b8:	f7fe fd36 	bl	8009328 <HAL_DMA_Abort_IT>
 800a8bc:	b110      	cbz	r0, 800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a8be:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a8c0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a8c2:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a8c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a8c6:	b29b      	uxth	r3, r3
 800a8c8:	b313      	cbz	r3, 800a910 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a8ca:	6823      	ldr	r3, [r4, #0]
 800a8cc:	695a      	ldr	r2, [r3, #20]
 800a8ce:	0752      	lsls	r2, r2, #29
 800a8d0:	d50a      	bpl.n	800a8e8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8d4:	691b      	ldr	r3, [r3, #16]
 800a8d6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a8d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a8da:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8dc:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a8de:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a8e0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a8e2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a8e4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8e6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a8e8:	695a      	ldr	r2, [r3, #20]
 800a8ea:	0656      	lsls	r6, r2, #25
 800a8ec:	d509      	bpl.n	800a902 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8f0:	691b      	ldr	r3, [r3, #16]
 800a8f2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a8f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a8f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8f8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a8fa:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a8fc:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a8fe:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a900:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a902:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a904:	b29b      	uxth	r3, r3
 800a906:	b11b      	cbz	r3, 800a910 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a908:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a90a:	f043 0304 	orr.w	r3, r3, #4
 800a90e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a910:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a912:	2b00      	cmp	r3, #0
 800a914:	f040 80dd 	bne.w	800aad2 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a918:	2d2a      	cmp	r5, #42	; 0x2a
 800a91a:	f000 8151 	beq.w	800abc0 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a91e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a922:	2b28      	cmp	r3, #40	; 0x28
 800a924:	f000 8154 	beq.w	800abd0 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a928:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a92a:	2b22      	cmp	r3, #34	; 0x22
 800a92c:	d002      	beq.n	800a934 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a92e:	2d22      	cmp	r5, #34	; 0x22
 800a930:	f47f aeca 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a934:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a936:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a938:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a93a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a93c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a940:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a944:	f7ff fcf4 	bl	800a330 <HAL_I2C_SlaveRxCpltCallback>
 800a948:	e6be      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a94a:	060d      	lsls	r5, r1, #24
 800a94c:	d528      	bpl.n	800a9a0 <HAL_I2C_EV_IRQHandler+0x338>
 800a94e:	0546      	lsls	r6, r0, #21
 800a950:	d526      	bpl.n	800a9a0 <HAL_I2C_EV_IRQHandler+0x338>
 800a952:	074d      	lsls	r5, r1, #29
 800a954:	d427      	bmi.n	800a9a6 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a956:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a95a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a95c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a95e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a960:	2900      	cmp	r1, #0
 800a962:	f43f aeb1 	beq.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a966:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a968:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a96c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a96e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a970:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a972:	3901      	subs	r1, #1
 800a974:	b289      	uxth	r1, r1
 800a976:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a978:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a97a:	b289      	uxth	r1, r1
 800a97c:	2900      	cmp	r1, #0
 800a97e:	f47f aea3 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a982:	2829      	cmp	r0, #41	; 0x29
 800a984:	f47f aea0 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a988:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a98a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a98c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a990:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a992:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a994:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a996:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a99a:	f7ff fcc7 	bl	800a32c <HAL_I2C_SlaveTxCpltCallback>
 800a99e:	e693      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9a0:	0749      	lsls	r1, r1, #29
 800a9a2:	f57f ae91 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a9a6:	0582      	lsls	r2, r0, #22
 800a9a8:	f57f ae8e 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a9ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9ae:	b292      	uxth	r2, r2
 800a9b0:	2a00      	cmp	r2, #0
 800a9b2:	f43f ae89 	beq.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a9b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a9b8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a9bc:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a9be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a9c0:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a9c2:	3b01      	subs	r3, #1
 800a9c4:	b29b      	uxth	r3, r3
 800a9c6:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a9c8:	e67e      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9ca:	074a      	lsls	r2, r1, #29
 800a9cc:	f57f ae7c 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a9d0:	0586      	lsls	r6, r0, #22
 800a9d2:	f57f ae79 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a9d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9d8:	b292      	uxth	r2, r2
 800a9da:	2a00      	cmp	r2, #0
 800a9dc:	f43f ae74 	beq.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a9e0:	e01b      	b.n	800aa1a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a9e2:	685a      	ldr	r2, [r3, #4]
 800a9e4:	0512      	lsls	r2, r2, #20
 800a9e6:	f53f ae6f 	bmi.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a9ea:	064e      	lsls	r6, r1, #25
 800a9ec:	d433      	bmi.n	800aa56 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9ee:	0749      	lsls	r1, r1, #29
 800a9f0:	f57f ae6a 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800a9f4:	0582      	lsls	r2, r0, #22
 800a9f6:	f57f ae67 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a9fa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a9fc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9fe:	b292      	uxth	r2, r2
 800aa00:	2a04      	cmp	r2, #4
 800aa02:	f000 8113 	beq.w	800ac2c <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800aa06:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa08:	b292      	uxth	r2, r2
 800aa0a:	2a03      	cmp	r2, #3
 800aa0c:	f000 8153 	beq.w	800acb6 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800aa10:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa12:	b292      	uxth	r2, r2
 800aa14:	2a02      	cmp	r2, #2
 800aa16:	f000 8182 	beq.w	800ad1e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa1a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa1c:	691b      	ldr	r3, [r3, #16]
 800aa1e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800aa20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aa22:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa24:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800aa26:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800aa28:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800aa2a:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa2c:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800aa2e:	e64b      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa30:	074d      	lsls	r5, r1, #29
 800aa32:	f57f ae49 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800aa36:	0581      	lsls	r1, r0, #22
 800aa38:	f57f ae46 	bpl.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800aa3c:	2a21      	cmp	r2, #33	; 0x21
 800aa3e:	f000 80fd 	beq.w	800ac3c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800aa42:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800aa46:	f47f ae3f 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aa4a:	4620      	mov	r0, r4
}
 800aa4c:	b00e      	add	sp, #56	; 0x38
 800aa4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aa52:	f7ff bc75 	b.w	800a340 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa56:	0545      	lsls	r5, r0, #21
 800aa58:	d5c9      	bpl.n	800a9ee <HAL_I2C_EV_IRQHandler+0x386>
 800aa5a:	f011 0104 	ands.w	r1, r1, #4
 800aa5e:	d1c9      	bne.n	800a9f4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800aa60:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aa64:	2a22      	cmp	r2, #34	; 0x22
 800aa66:	f47f ae2f 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800aa6a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa6c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800aa6e:	2a03      	cmp	r2, #3
 800aa70:	f240 81ec 	bls.w	800ae4c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa74:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa76:	691b      	ldr	r3, [r3, #16]
 800aa78:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aa7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aa7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa7e:	3b01      	subs	r3, #1
 800aa80:	b29b      	uxth	r3, r3
 800aa82:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800aa84:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800aa86:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800aa88:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800aa8a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800aa8c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800aa8e:	f47f ae1b 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa92:	6822      	ldr	r2, [r4, #0]
 800aa94:	6853      	ldr	r3, [r2, #4]
 800aa96:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800aa9a:	6053      	str	r3, [r2, #4]
 800aa9c:	e614      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800aa9e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aaa2:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aaa4:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800aaa6:	bf16      	itet	ne
 800aaa8:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aaac:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800aab0:	b2d2      	uxtbne	r2, r2
 800aab2:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800aab4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800aab6:	b11a      	cbz	r2, 800aac0 <HAL_I2C_EV_IRQHandler+0x458>
 800aab8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800aaba:	2a00      	cmp	r2, #0
 800aabc:	f47f ae21 	bne.w	800a702 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800aac0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800aac2:	2a00      	cmp	r2, #0
 800aac4:	f43f ae00 	beq.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800aac8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800aaca:	2a00      	cmp	r2, #0
 800aacc:	f47f ae19 	bne.w	800a702 <HAL_I2C_EV_IRQHandler+0x9a>
 800aad0:	e5fa      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800aad2:	4620      	mov	r0, r4
}
 800aad4:	b00e      	add	sp, #56	; 0x38
 800aad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800aada:	f7ff bd0f 	b.w	800a4fc <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800aade:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800aae0:	bb52      	cbnz	r2, 800ab38 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aae2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800aae4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800aae8:	611a      	str	r2, [r3, #16]
 800aaea:	e5ed      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800aaec:	2201      	movs	r2, #1
 800aaee:	62e2      	str	r2, [r4, #44]	; 0x2c
 800aaf0:	e619      	b.n	800a726 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800aaf2:	685a      	ldr	r2, [r3, #4]
 800aaf4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aaf8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800aafa:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800aafc:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800ab00:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800ab04:	bf54      	ite	pl
 800ab06:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800ab08:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800ab0a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800ab0e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800ab12:	4620      	mov	r0, r4
 800ab14:	f7ff fc0e 	bl	800a334 <HAL_I2C_AddrCallback>
 800ab18:	e5d6      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800ab1a:	bf00      	nop
 800ab1c:	0800a409 	.word	0x0800a409
      else if (hi2c->EventCount == 1U)
 800ab20:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ab22:	2a01      	cmp	r2, #1
 800ab24:	f47f add0 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800ab28:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ab2a:	11d2      	asrs	r2, r2, #7
 800ab2c:	f002 0206 	and.w	r2, r2, #6
 800ab30:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800ab34:	611a      	str	r2, [r3, #16]
 800ab36:	e5c7      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ab38:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ab3a:	f042 0201 	orr.w	r2, r2, #1
 800ab3e:	b2d2      	uxtb	r2, r2
 800ab40:	611a      	str	r2, [r3, #16]
 800ab42:	e5c1      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800ab44:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800ab46:	b911      	cbnz	r1, 800ab4e <HAL_I2C_EV_IRQHandler+0x4e6>
 800ab48:	2a40      	cmp	r2, #64	; 0x40
 800ab4a:	f000 809b 	beq.w	800ac84 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800ab4e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ab50:	b922      	cbnz	r2, 800ab5c <HAL_I2C_EV_IRQHandler+0x4f4>
 800ab52:	6921      	ldr	r1, [r4, #16]
 800ab54:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ab58:	f000 809f 	beq.w	800ac9a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ab5c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab5e:	b292      	uxth	r2, r2
 800ab60:	2a00      	cmp	r2, #0
 800ab62:	d142      	bne.n	800abea <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab64:	9203      	str	r2, [sp, #12]
 800ab66:	695a      	ldr	r2, [r3, #20]
 800ab68:	9203      	str	r2, [sp, #12]
 800ab6a:	699a      	ldr	r2, [r3, #24]
 800ab6c:	9203      	str	r2, [sp, #12]
 800ab6e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab70:	681a      	ldr	r2, [r3, #0]
 800ab72:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab76:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800ab78:	2300      	movs	r3, #0
 800ab7a:	6523      	str	r3, [r4, #80]	; 0x50
 800ab7c:	e5a4      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800ab7e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ab80:	6802      	ldr	r2, [r0, #0]
 800ab82:	6852      	ldr	r2, [r2, #4]
 800ab84:	b292      	uxth	r2, r2
 800ab86:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ab88:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab8a:	b292      	uxth	r2, r2
 800ab8c:	b11a      	cbz	r2, 800ab96 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ab8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ab90:	f042 0204 	orr.w	r2, r2, #4
 800ab94:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ab96:	685a      	ldr	r2, [r3, #4]
 800ab98:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ab9c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800ab9e:	f7fe fcab 	bl	80094f8 <HAL_DMA_GetState>
 800aba2:	2801      	cmp	r0, #1
 800aba4:	f43f ae8e 	beq.w	800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800aba8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800abaa:	4b98      	ldr	r3, [pc, #608]	; (800ae0c <HAL_I2C_EV_IRQHandler+0x7a4>)
 800abac:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800abae:	f7fe fbbb 	bl	8009328 <HAL_DMA_Abort_IT>
 800abb2:	2800      	cmp	r0, #0
 800abb4:	f43f ae86 	beq.w	800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800abb8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800abba:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800abbc:	4798      	blx	r3
 800abbe:	e681      	b.n	800a8c4 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800abc0:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800abc2:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800abc4:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800abc6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800abca:	f7ff fbb1 	bl	800a330 <HAL_I2C_SlaveRxCpltCallback>
 800abce:	e6a6      	b.n	800a91e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800abd0:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800abd2:	498f      	ldr	r1, [pc, #572]	; (800ae10 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800abd4:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800abd6:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800abd8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800abda:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800abdc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abe0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800abe4:	f7ff fba8 	bl	800a338 <HAL_I2C_ListenCpltCallback>
 800abe8:	e56e      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800abea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abec:	b292      	uxth	r2, r2
 800abee:	2a01      	cmp	r2, #1
 800abf0:	d070      	beq.n	800acd4 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800abf2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abf4:	b292      	uxth	r2, r2
 800abf6:	2a02      	cmp	r2, #2
 800abf8:	f000 80d6 	beq.w	800ada8 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abfc:	681a      	ldr	r2, [r3, #0]
 800abfe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ac02:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ac04:	685a      	ldr	r2, [r3, #4]
 800ac06:	0511      	lsls	r1, r2, #20
 800ac08:	d508      	bpl.n	800ac1c <HAL_I2C_EV_IRQHandler+0x5b4>
 800ac0a:	2820      	cmp	r0, #32
 800ac0c:	f200 80f8 	bhi.w	800ae00 <HAL_I2C_EV_IRQHandler+0x798>
 800ac10:	2807      	cmp	r0, #7
 800ac12:	f200 80ea 	bhi.w	800adea <HAL_I2C_EV_IRQHandler+0x782>
 800ac16:	2801      	cmp	r0, #1
 800ac18:	f000 80ed 	beq.w	800adf6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac1c:	2200      	movs	r2, #0
 800ac1e:	9209      	str	r2, [sp, #36]	; 0x24
 800ac20:	695a      	ldr	r2, [r3, #20]
 800ac22:	9209      	str	r2, [sp, #36]	; 0x24
 800ac24:	699b      	ldr	r3, [r3, #24]
 800ac26:	9309      	str	r3, [sp, #36]	; 0x24
 800ac28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac2a:	e7a5      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ac2c:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac2e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ac30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac34:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac36:	691b      	ldr	r3, [r3, #16]
 800ac38:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ac3a:	e6f1      	b.n	800aa20 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ac3c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ac3e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ac42:	2a21      	cmp	r2, #33	; 0x21
 800ac44:	f47f ad40 	bne.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ac48:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac4a:	b292      	uxth	r2, r2
 800ac4c:	2a00      	cmp	r2, #0
 800ac4e:	f47f aeb2 	bne.w	800a9b6 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ac52:	2908      	cmp	r1, #8
 800ac54:	f000 80e2 	beq.w	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac58:	2920      	cmp	r1, #32
 800ac5a:	f000 80df 	beq.w	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac5e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ac62:	f000 80db 	beq.w	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac66:	6859      	ldr	r1, [r3, #4]
 800ac68:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac6c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac6e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ac70:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac72:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac74:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac78:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ac7a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac7e:	f7ff fb51 	bl	800a324 <HAL_I2C_MasterTxCpltCallback>
 800ac82:	e521      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac84:	9101      	str	r1, [sp, #4]
 800ac86:	695a      	ldr	r2, [r3, #20]
 800ac88:	9201      	str	r2, [sp, #4]
 800ac8a:	699b      	ldr	r3, [r3, #24]
 800ac8c:	9301      	str	r3, [sp, #4]
 800ac8e:	9b01      	ldr	r3, [sp, #4]
 800ac90:	e51a      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ac92:	2a21      	cmp	r2, #33	; 0x21
 800ac94:	f43f add1 	beq.w	800a83a <HAL_I2C_EV_IRQHandler+0x1d2>
 800ac98:	e5c9      	b.n	800a82e <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac9a:	9202      	str	r2, [sp, #8]
 800ac9c:	695a      	ldr	r2, [r3, #20]
 800ac9e:	9202      	str	r2, [sp, #8]
 800aca0:	699a      	ldr	r2, [r3, #24]
 800aca2:	9202      	str	r2, [sp, #8]
 800aca4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aca6:	681a      	ldr	r2, [r3, #0]
 800aca8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800acac:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800acae:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800acb0:	3301      	adds	r3, #1
 800acb2:	6523      	str	r3, [r4, #80]	; 0x50
 800acb4:	e508      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acb6:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800acb8:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acbe:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800acc0:	f43f aeab 	beq.w	800aa1a <HAL_I2C_EV_IRQHandler+0x3b2>
 800acc4:	2902      	cmp	r1, #2
 800acc6:	f43f aea8 	beq.w	800aa1a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acca:	681a      	ldr	r2, [r3, #0]
 800accc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acd0:	601a      	str	r2, [r3, #0]
 800acd2:	e6a2      	b.n	800aa1a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800acd4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800acd8:	f000 811b 	beq.w	800af12 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800acdc:	2808      	cmp	r0, #8
 800acde:	f000 8108 	beq.w	800aef2 <HAL_I2C_EV_IRQHandler+0x88a>
 800ace2:	2820      	cmp	r0, #32
 800ace4:	f000 8105 	beq.w	800aef2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ace8:	2d12      	cmp	r5, #18
 800acea:	f000 80ff 	beq.w	800aeec <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800acee:	2810      	cmp	r0, #16
 800acf0:	d804      	bhi.n	800acfc <HAL_I2C_EV_IRQHandler+0x694>
 800acf2:	4a48      	ldr	r2, [pc, #288]	; (800ae14 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800acf4:	40c2      	lsrs	r2, r0
 800acf6:	07d1      	lsls	r1, r2, #31
 800acf8:	f100 814c 	bmi.w	800af94 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acfc:	681a      	ldr	r2, [r3, #0]
 800acfe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad02:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad04:	2200      	movs	r2, #0
 800ad06:	9206      	str	r2, [sp, #24]
 800ad08:	695a      	ldr	r2, [r3, #20]
 800ad0a:	9206      	str	r2, [sp, #24]
 800ad0c:	699b      	ldr	r3, [r3, #24]
 800ad0e:	9306      	str	r3, [sp, #24]
 800ad10:	9b06      	ldr	r3, [sp, #24]
 800ad12:	e731      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad14:	685a      	ldr	r2, [r3, #4]
 800ad16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad1a:	605a      	str	r2, [r3, #4]
 800ad1c:	e4d4      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800ad1e:	3901      	subs	r1, #1
 800ad20:	290f      	cmp	r1, #15
 800ad22:	d809      	bhi.n	800ad38 <HAL_I2C_EV_IRQHandler+0x6d0>
 800ad24:	e8df f001 	tbb	[pc, r1]
 800ad28:	3608363b 	.word	0x3608363b
 800ad2c:	08080808 	.word	0x08080808
 800ad30:	08080808 	.word	0x08080808
 800ad34:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad38:	681a      	ldr	r2, [r3, #0]
 800ad3a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad3e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad40:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ad42:	691b      	ldr	r3, [r3, #16]
 800ad44:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ad46:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ad48:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad4a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ad4c:	3b01      	subs	r3, #1
 800ad4e:	b29b      	uxth	r3, r3
 800ad50:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad52:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ad54:	1c51      	adds	r1, r2, #1
 800ad56:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad58:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ad5a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad5c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ad5e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ad60:	3b01      	subs	r3, #1
 800ad62:	b29b      	uxth	r3, r3
 800ad64:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad66:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ad68:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ad6e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ad70:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad72:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad74:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad78:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ad7c:	2b40      	cmp	r3, #64	; 0x40
 800ad7e:	f000 80f5 	beq.w	800af6c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad82:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ad84:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad86:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ad8a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ad8c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ad8e:	f7ff facb 	bl	800a328 <HAL_I2C_MasterRxCpltCallback>
 800ad92:	e499      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad94:	681a      	ldr	r2, [r3, #0]
 800ad96:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad9a:	601a      	str	r2, [r3, #0]
 800ad9c:	e7d0      	b.n	800ad40 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad9e:	681a      	ldr	r2, [r3, #0]
 800ada0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ada4:	601a      	str	r2, [r3, #0]
 800ada6:	e7cb      	b.n	800ad40 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ada8:	2810      	cmp	r0, #16
 800adaa:	d804      	bhi.n	800adb6 <HAL_I2C_EV_IRQHandler+0x74e>
 800adac:	4a19      	ldr	r2, [pc, #100]	; (800ae14 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800adae:	40c2      	lsrs	r2, r0
 800adb0:	07d2      	lsls	r2, r2, #31
 800adb2:	f100 80c2 	bmi.w	800af3a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adb6:	681a      	ldr	r2, [r3, #0]
 800adb8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800adbc:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800adbe:	681a      	ldr	r2, [r3, #0]
 800adc0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800adc4:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800adc6:	685a      	ldr	r2, [r3, #4]
 800adc8:	0516      	lsls	r6, r2, #20
 800adca:	d506      	bpl.n	800adda <HAL_I2C_EV_IRQHandler+0x772>
 800adcc:	2820      	cmp	r0, #32
 800adce:	f240 80bc 	bls.w	800af4a <HAL_I2C_EV_IRQHandler+0x8e2>
 800add2:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800add6:	f000 80bd 	beq.w	800af54 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adda:	2200      	movs	r2, #0
 800addc:	9208      	str	r2, [sp, #32]
 800adde:	695a      	ldr	r2, [r3, #20]
 800ade0:	9208      	str	r2, [sp, #32]
 800ade2:	699b      	ldr	r3, [r3, #24]
 800ade4:	9308      	str	r3, [sp, #32]
 800ade6:	9b08      	ldr	r3, [sp, #32]
 800ade8:	e6c6      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
 800adea:	4a0b      	ldr	r2, [pc, #44]	; (800ae18 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800adec:	3808      	subs	r0, #8
 800adee:	40c2      	lsrs	r2, r0
 800adf0:	07d2      	lsls	r2, r2, #31
 800adf2:	f57f af13 	bpl.w	800ac1c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800adf6:	685a      	ldr	r2, [r3, #4]
 800adf8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800adfc:	605a      	str	r2, [r3, #4]
 800adfe:	e70d      	b.n	800ac1c <HAL_I2C_EV_IRQHandler+0x5b4>
 800ae00:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ae04:	f47f af0a 	bne.w	800ac1c <HAL_I2C_EV_IRQHandler+0x5b4>
 800ae08:	e7f5      	b.n	800adf6 <HAL_I2C_EV_IRQHandler+0x78e>
 800ae0a:	bf00      	nop
 800ae0c:	0800a409 	.word	0x0800a409
 800ae10:	ffff0000 	.word	0xffff0000
 800ae14:	00010014 	.word	0x00010014
 800ae18:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae1c:	6859      	ldr	r1, [r3, #4]
 800ae1e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ae22:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae24:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae26:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ae28:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae2a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ae2e:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae30:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ae32:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae36:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae3a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae3e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ae40:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae42:	f47f af1c 	bne.w	800ac7e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ae46:	f7ff fa79 	bl	800a33c <HAL_I2C_MemTxCpltCallback>
 800ae4a:	e43d      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ae4c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ae4e:	2802      	cmp	r0, #2
 800ae50:	f43f af60 	beq.w	800ad14 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ae54:	2a01      	cmp	r2, #1
 800ae56:	f63f af5d 	bhi.w	800ad14 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae5a:	4a62      	ldr	r2, [pc, #392]	; (800afe4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ae5c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae5e:	6812      	ldr	r2, [r2, #0]
 800ae60:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ae64:	fbb2 f2f0 	udiv	r2, r2, r0
 800ae68:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ae6c:	920b      	str	r2, [sp, #44]	; 0x2c
 800ae6e:	e004      	b.n	800ae7a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ae70:	681a      	ldr	r2, [r3, #0]
 800ae72:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ae76:	f000 8092 	beq.w	800af9e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ae7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ae7c:	3a01      	subs	r2, #1
 800ae7e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ae80:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ae82:	2900      	cmp	r1, #0
 800ae84:	d1f4      	bne.n	800ae70 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ae86:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae88:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ae8a:	f042 0220 	orr.w	r2, r2, #32
 800ae8e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae90:	685a      	ldr	r2, [r3, #4]
 800ae92:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ae96:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae98:	691b      	ldr	r3, [r3, #16]
 800ae9a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ae9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ae9e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800aea0:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800aea2:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800aea4:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800aea6:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800aea8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aeaa:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800aeac:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800aeb0:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeb2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800aeb6:	f7ff faa3 	bl	800a400 <HAL_I2C_ErrorCallback>
 800aeba:	e405      	b.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aebc:	2d08      	cmp	r5, #8
 800aebe:	d0ad      	beq.n	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
 800aec0:	2d20      	cmp	r5, #32
 800aec2:	d0ab      	beq.n	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
 800aec4:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800aec8:	d0a8      	beq.n	800ae1c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aeca:	685a      	ldr	r2, [r3, #4]
 800aecc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aed0:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aed2:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed4:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aed6:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aed8:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeda:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aede:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aee0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aee4:	f7ff fa1e 	bl	800a324 <HAL_I2C_MasterTxCpltCallback>
 800aee8:	f7ff bbee 	b.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aeec:	2801      	cmp	r0, #1
 800aeee:	f43f af05 	beq.w	800acfc <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aef4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aefa:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aefc:	9107      	str	r1, [sp, #28]
 800aefe:	695a      	ldr	r2, [r3, #20]
 800af00:	9207      	str	r2, [sp, #28]
 800af02:	699a      	ldr	r2, [r3, #24]
 800af04:	9207      	str	r2, [sp, #28]
 800af06:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af08:	681a      	ldr	r2, [r3, #0]
 800af0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af0e:	601a      	str	r2, [r3, #0]
 800af10:	e632      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af12:	681a      	ldr	r2, [r3, #0]
 800af14:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af18:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af1a:	685a      	ldr	r2, [r3, #4]
 800af1c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af20:	d02d      	beq.n	800af7e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af22:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af24:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af26:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af2a:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af2c:	9104      	str	r1, [sp, #16]
 800af2e:	695a      	ldr	r2, [r3, #20]
 800af30:	9204      	str	r2, [sp, #16]
 800af32:	699b      	ldr	r3, [r3, #24]
 800af34:	9304      	str	r3, [sp, #16]
 800af36:	9b04      	ldr	r3, [sp, #16]
 800af38:	e61e      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af3a:	681a      	ldr	r2, [r3, #0]
 800af3c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800af40:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800af42:	685a      	ldr	r2, [r3, #4]
 800af44:	0515      	lsls	r5, r2, #20
 800af46:	f57f af48 	bpl.w	800adda <HAL_I2C_EV_IRQHandler+0x772>
 800af4a:	2807      	cmp	r0, #7
 800af4c:	d807      	bhi.n	800af5e <HAL_I2C_EV_IRQHandler+0x8f6>
 800af4e:	2801      	cmp	r0, #1
 800af50:	f47f af43 	bne.w	800adda <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800af54:	685a      	ldr	r2, [r3, #4]
 800af56:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800af5a:	605a      	str	r2, [r3, #4]
 800af5c:	e73d      	b.n	800adda <HAL_I2C_EV_IRQHandler+0x772>
 800af5e:	4a22      	ldr	r2, [pc, #136]	; (800afe8 <HAL_I2C_EV_IRQHandler+0x980>)
 800af60:	3808      	subs	r0, #8
 800af62:	40c2      	lsrs	r2, r0
 800af64:	07d0      	lsls	r0, r2, #31
 800af66:	f57f af38 	bpl.w	800adda <HAL_I2C_EV_IRQHandler+0x772>
 800af6a:	e7f3      	b.n	800af54 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af6c:	2300      	movs	r3, #0
 800af6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800af72:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800af74:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800af76:	f7ff fa41 	bl	800a3fc <HAL_I2C_MemRxCpltCallback>
 800af7a:	f7ff bba5 	b.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af7e:	9205      	str	r2, [sp, #20]
 800af80:	695a      	ldr	r2, [r3, #20]
 800af82:	9205      	str	r2, [sp, #20]
 800af84:	699a      	ldr	r2, [r3, #24]
 800af86:	9205      	str	r2, [sp, #20]
 800af88:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af8a:	681a      	ldr	r2, [r3, #0]
 800af8c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af90:	601a      	str	r2, [r3, #0]
 800af92:	e5f1      	b.n	800ab78 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af94:	681a      	ldr	r2, [r3, #0]
 800af96:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800af9a:	601a      	str	r2, [r3, #0]
 800af9c:	e6b2      	b.n	800ad04 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af9e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afa0:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afa2:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800afa6:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800afa8:	6859      	ldr	r1, [r3, #4]
 800afaa:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800afae:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afb0:	691b      	ldr	r3, [r3, #16]
 800afb2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800afb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800afb6:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afb8:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800afba:	b29b      	uxth	r3, r3
 800afbc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800afbe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800afc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afc4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800afc8:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afca:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800afcc:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afce:	f47f aed9 	bne.w	800ad84 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800afd2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800afd6:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800afd8:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800afda:	f7ff fa0f 	bl	800a3fc <HAL_I2C_MemRxCpltCallback>
 800afde:	f7ff bb73 	b.w	800a6c8 <HAL_I2C_EV_IRQHandler+0x60>
 800afe2:	bf00      	nop
 800afe4:	20000078 	.word	0x20000078
 800afe8:	01000101 	.word	0x01000101

0800afec <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800afec:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800aff0:	2a20      	cmp	r2, #32
{
 800aff2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800aff4:	fa5f fc82 	uxtb.w	ip, r2
 800aff8:	d001      	beq.n	800affe <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800affa:	2002      	movs	r0, #2
  }
}
 800affc:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800affe:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b000:	2024      	movs	r0, #36	; 0x24
 800b002:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b006:	6810      	ldr	r0, [r2, #0]
 800b008:	f020 0001 	bic.w	r0, r0, #1
 800b00c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b00e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b010:	f020 0010 	bic.w	r0, r0, #16
 800b014:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b016:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b018:	4301      	orrs	r1, r0
 800b01a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b01c:	6811      	ldr	r1, [r2, #0]
 800b01e:	f041 0101 	orr.w	r1, r1, #1
 800b022:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b024:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b026:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b02a:	4770      	bx	lr

0800b02c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b02c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b030:	2a20      	cmp	r2, #32
 800b032:	d001      	beq.n	800b038 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b034:	2002      	movs	r0, #2
  }
}
 800b036:	4770      	bx	lr
{
 800b038:	b410      	push	{r4}
 800b03a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b03e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b040:	2224      	movs	r2, #36	; 0x24
 800b042:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b046:	6822      	ldr	r2, [r4, #0]
 800b048:	f022 0201 	bic.w	r2, r2, #1
 800b04c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b04e:	4603      	mov	r3, r0
 800b050:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b052:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b056:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b058:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b05a:	b289      	uxth	r1, r1
 800b05c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b05e:	6822      	ldr	r2, [r4, #0]
 800b060:	f042 0201 	orr.w	r2, r2, #1
 800b064:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b066:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b06a:	2000      	movs	r0, #0
}
 800b06c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b070:	4770      	bx	lr
 800b072:	bf00      	nop

0800b074 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b074:	2800      	cmp	r0, #0
 800b076:	d069      	beq.n	800b14c <HAL_LTDC_Init+0xd8>
{
 800b078:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b07a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b07e:	4604      	mov	r4, r0
 800b080:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b084:	2b00      	cmp	r3, #0
 800b086:	d05c      	beq.n	800b142 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b088:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b08a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b08c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b090:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b094:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b096:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b098:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b09c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b0a0:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b0a2:	6999      	ldr	r1, [r3, #24]
 800b0a4:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b0a6:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b0a8:	430a      	orrs	r2, r1
 800b0aa:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b0ac:	689a      	ldr	r2, [r3, #8]
 800b0ae:	4928      	ldr	r1, [pc, #160]	; (800b150 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b0b0:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b0b2:	400a      	ands	r2, r1
 800b0b4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b0b6:	689a      	ldr	r2, [r3, #8]
 800b0b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0bc:	69a0      	ldr	r0, [r4, #24]
 800b0be:	4302      	orrs	r2, r0
 800b0c0:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b0c2:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b0c4:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b0c6:	400a      	ands	r2, r1
 800b0c8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b0ca:	68da      	ldr	r2, [r3, #12]
 800b0cc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0d0:	6a20      	ldr	r0, [r4, #32]
 800b0d2:	4302      	orrs	r2, r0
 800b0d4:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b0d6:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b0d8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b0da:	400a      	ands	r2, r1
 800b0dc:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b0de:	691a      	ldr	r2, [r3, #16]
 800b0e0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0e4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b0e6:	4302      	orrs	r2, r0
 800b0e8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b0ea:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b0ec:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b0ee:	400a      	ands	r2, r1
 800b0f0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b0f2:	695a      	ldr	r2, [r3, #20]
 800b0f4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b0f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0fa:	430a      	orrs	r2, r1
 800b0fc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b0fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b100:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b104:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b108:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b10c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b10e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b110:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b114:	432a      	orrs	r2, r5
 800b116:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b11a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b11e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b120:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b122:	f042 0206 	orr.w	r2, r2, #6
 800b126:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b128:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b12a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b12e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b130:	ea42 020c 	orr.w	r2, r2, ip
 800b134:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b136:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b13a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b13e:	4608      	mov	r0, r1
}
 800b140:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b142:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b146:	f7f6 feed 	bl	8001f24 <HAL_LTDC_MspInit>
 800b14a:	e79d      	b.n	800b088 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b14c:	2001      	movs	r0, #1
}
 800b14e:	4770      	bx	lr
 800b150:	f000f800 	.word	0xf000f800

0800b154 <HAL_LTDC_ErrorCallback>:
 800b154:	4770      	bx	lr
 800b156:	bf00      	nop

0800b158 <HAL_LTDC_ReloadEventCallback>:
 800b158:	4770      	bx	lr
 800b15a:	bf00      	nop

0800b15c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b15c:	6803      	ldr	r3, [r0, #0]
{
 800b15e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b160:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b162:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b164:	076a      	lsls	r2, r5, #29
{
 800b166:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b168:	d501      	bpl.n	800b16e <HAL_LTDC_IRQHandler+0x12>
 800b16a:	0771      	lsls	r1, r6, #29
 800b16c:	d41d      	bmi.n	800b1aa <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b16e:	07aa      	lsls	r2, r5, #30
 800b170:	d501      	bpl.n	800b176 <HAL_LTDC_IRQHandler+0x1a>
 800b172:	07b3      	lsls	r3, r6, #30
 800b174:	d42d      	bmi.n	800b1d2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b176:	07e8      	lsls	r0, r5, #31
 800b178:	d501      	bpl.n	800b17e <HAL_LTDC_IRQHandler+0x22>
 800b17a:	07f1      	lsls	r1, r6, #31
 800b17c:	d440      	bmi.n	800b200 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b17e:	072a      	lsls	r2, r5, #28
 800b180:	d501      	bpl.n	800b186 <HAL_LTDC_IRQHandler+0x2a>
 800b182:	0733      	lsls	r3, r6, #28
 800b184:	d400      	bmi.n	800b188 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b186:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b188:	6823      	ldr	r3, [r4, #0]
 800b18a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b18c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b18e:	f022 0208 	bic.w	r2, r2, #8
 800b192:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b194:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b196:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b198:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b19a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b19e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b1a2:	4620      	mov	r0, r4
 800b1a4:	f7ff ffd8 	bl	800b158 <HAL_LTDC_ReloadEventCallback>
}
 800b1a8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b1aa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b1ac:	f022 0204 	bic.w	r2, r2, #4
 800b1b0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b1b2:	2204      	movs	r2, #4
 800b1b4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b1b6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b1ba:	f043 0301 	orr.w	r3, r3, #1
 800b1be:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b1c2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1c4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b1c8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b1cc:	f7ff ffc2 	bl	800b154 <HAL_LTDC_ErrorCallback>
 800b1d0:	e7cd      	b.n	800b16e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b1d2:	6823      	ldr	r3, [r4, #0]
 800b1d4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b1d6:	f022 0202 	bic.w	r2, r2, #2
 800b1da:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b1dc:	2202      	movs	r2, #2
 800b1de:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b1e0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b1e4:	f043 0302 	orr.w	r3, r3, #2
 800b1e8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1ec:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b1ee:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1f0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b1f4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	f7ff ffab 	bl	800b154 <HAL_LTDC_ErrorCallback>
 800b1fe:	e7ba      	b.n	800b176 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b200:	6823      	ldr	r3, [r4, #0]
 800b202:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b204:	f022 0201 	bic.w	r2, r2, #1
 800b208:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b20a:	2201      	movs	r2, #1
 800b20c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b20e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b210:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b214:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b218:	4620      	mov	r0, r4
 800b21a:	f7f5 ff87 	bl	800112c <HAL_LTDC_LineEventCallback>
 800b21e:	e7ae      	b.n	800b17e <HAL_LTDC_IRQHandler+0x22>

0800b220 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b220:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b224:	2b01      	cmp	r3, #1
 800b226:	f000 80c2 	beq.w	800b3ae <HAL_LTDC_ConfigLayer+0x18e>
{
 800b22a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b22e:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b232:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b236:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b23a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b23c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b23e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b242:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b246:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b24a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b24e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b252:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b256:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b258:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b25c:	460c      	mov	r4, r1
 800b25e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b260:	9301      	str	r3, [sp, #4]
 800b262:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b264:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b266:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b26a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b26e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b270:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b272:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b276:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b278:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b27c:	6823      	ldr	r3, [r4, #0]
 800b27e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b282:	9b01      	ldr	r3, [sp, #4]
 800b284:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b288:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b28c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b28e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b290:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b294:	1c51      	adds	r1, r2, #1
 800b296:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b29a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b29c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b29e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b2a2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2a6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b2aa:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b2ae:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b2b2:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2b6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b2ba:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2bc:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b2be:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b2c2:	3301      	adds	r3, #1
 800b2c4:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b2c8:	4403      	add	r3, r0
 800b2ca:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b2ce:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b2d2:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b2d6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b2d8:	f023 0307 	bic.w	r3, r3, #7
 800b2dc:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2e0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b2e4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2e8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b2ec:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b2f0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2f4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b2f8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b2fc:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b300:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b304:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b308:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b30c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b310:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b314:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b318:	696b      	ldr	r3, [r5, #20]
 800b31a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b31e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b322:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b326:	f023 0307 	bic.w	r3, r3, #7
 800b32a:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b32e:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b332:	4303      	orrs	r3, r0
 800b334:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b338:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b33c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b33e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b342:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b346:	bb69      	cbnz	r1, 800b3a4 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b348:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b34a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b34c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b34e:	fb03 f707 	mul.w	r7, r3, r7
 800b352:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b354:	fb02 f303 	mul.w	r3, r2, r3
 800b358:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b35c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b360:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b362:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b366:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b36a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b36e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b372:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b376:	f023 0307 	bic.w	r3, r3, #7
 800b37a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b37e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b382:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b386:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b388:	4313      	orrs	r3, r2
 800b38a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b38e:	2300      	movs	r3, #0
  return HAL_OK;
 800b390:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b392:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b396:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b39a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b39e:	b003      	add	sp, #12
 800b3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b3a4:	3901      	subs	r1, #1
 800b3a6:	2906      	cmp	r1, #6
 800b3a8:	d903      	bls.n	800b3b2 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b3aa:	2301      	movs	r3, #1
 800b3ac:	e7cd      	b.n	800b34a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b3ae:	2002      	movs	r0, #2
}
 800b3b0:	4770      	bx	lr
 800b3b2:	4b02      	ldr	r3, [pc, #8]	; (800b3bc <HAL_LTDC_ConfigLayer+0x19c>)
 800b3b4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b3b8:	e7c7      	b.n	800b34a <HAL_LTDC_ConfigLayer+0x12a>
 800b3ba:	bf00      	nop
 800b3bc:	0802ded8 	.word	0x0802ded8

0800b3c0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b3c0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b3c4:	2b01      	cmp	r3, #1
 800b3c6:	d019      	beq.n	800b3fc <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3c8:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b3ca:	2302      	movs	r3, #2
{
 800b3cc:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b3ce:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3d2:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b3d4:	4c0a      	ldr	r4, [pc, #40]	; (800b400 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3d6:	f023 0301 	bic.w	r3, r3, #1
 800b3da:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b3dc:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3de:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b3e0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3e2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b3e6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3ea:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b3ec:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b3f0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b3f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b3f8:	4618      	mov	r0, r3
}
 800b3fa:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b3fc:	2002      	movs	r0, #2
}
 800b3fe:	4770      	bx	lr
 800b400:	40016800 	.word	0x40016800

0800b404 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b404:	2800      	cmp	r0, #0
 800b406:	f000 81a2 	beq.w	800b74e <HAL_RCC_OscConfig+0x34a>
{
 800b40a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b40e:	6803      	ldr	r3, [r0, #0]
 800b410:	07dd      	lsls	r5, r3, #31
{
 800b412:	b082      	sub	sp, #8
 800b414:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b416:	d52f      	bpl.n	800b478 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b418:	499e      	ldr	r1, [pc, #632]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b41a:	688a      	ldr	r2, [r1, #8]
 800b41c:	f002 020c 	and.w	r2, r2, #12
 800b420:	2a04      	cmp	r2, #4
 800b422:	f000 80ed 	beq.w	800b600 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b426:	688a      	ldr	r2, [r1, #8]
 800b428:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b42c:	2a08      	cmp	r2, #8
 800b42e:	f000 80e3 	beq.w	800b5f8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b432:	6863      	ldr	r3, [r4, #4]
 800b434:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b438:	f000 80ec 	beq.w	800b614 <HAL_RCC_OscConfig+0x210>
 800b43c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b440:	f000 8175 	beq.w	800b72e <HAL_RCC_OscConfig+0x32a>
 800b444:	4d93      	ldr	r5, [pc, #588]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b446:	682a      	ldr	r2, [r5, #0]
 800b448:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b44c:	602a      	str	r2, [r5, #0]
 800b44e:	682a      	ldr	r2, [r5, #0]
 800b450:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b454:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b456:	2b00      	cmp	r3, #0
 800b458:	f040 80e1 	bne.w	800b61e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b45c:	f7fd fe42 	bl	80090e4 <HAL_GetTick>
 800b460:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b462:	e005      	b.n	800b470 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b464:	f7fd fe3e 	bl	80090e4 <HAL_GetTick>
 800b468:	1b80      	subs	r0, r0, r6
 800b46a:	2864      	cmp	r0, #100	; 0x64
 800b46c:	f200 8101 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b470:	682b      	ldr	r3, [r5, #0]
 800b472:	039b      	lsls	r3, r3, #14
 800b474:	d4f6      	bmi.n	800b464 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b476:	6823      	ldr	r3, [r4, #0]
 800b478:	079f      	lsls	r7, r3, #30
 800b47a:	d528      	bpl.n	800b4ce <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b47c:	4a85      	ldr	r2, [pc, #532]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b47e:	6891      	ldr	r1, [r2, #8]
 800b480:	f011 0f0c 	tst.w	r1, #12
 800b484:	f000 8090 	beq.w	800b5a8 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b488:	6891      	ldr	r1, [r2, #8]
 800b48a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b48e:	2908      	cmp	r1, #8
 800b490:	f000 8086 	beq.w	800b5a0 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b494:	68e3      	ldr	r3, [r4, #12]
 800b496:	2b00      	cmp	r3, #0
 800b498:	f000 810e 	beq.w	800b6b8 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b49c:	4b7e      	ldr	r3, [pc, #504]	; (800b698 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b49e:	4e7d      	ldr	r6, [pc, #500]	; (800b694 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b4a0:	2201      	movs	r2, #1
 800b4a2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b4a4:	f7fd fe1e 	bl	80090e4 <HAL_GetTick>
 800b4a8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4aa:	e005      	b.n	800b4b8 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b4ac:	f7fd fe1a 	bl	80090e4 <HAL_GetTick>
 800b4b0:	1b40      	subs	r0, r0, r5
 800b4b2:	2802      	cmp	r0, #2
 800b4b4:	f200 80dd 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4b8:	6833      	ldr	r3, [r6, #0]
 800b4ba:	0798      	lsls	r0, r3, #30
 800b4bc:	d5f6      	bpl.n	800b4ac <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b4be:	6833      	ldr	r3, [r6, #0]
 800b4c0:	6922      	ldr	r2, [r4, #16]
 800b4c2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b4c6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b4ca:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b4cc:	6823      	ldr	r3, [r4, #0]
 800b4ce:	071a      	lsls	r2, r3, #28
 800b4d0:	d451      	bmi.n	800b576 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b4d2:	0758      	lsls	r0, r3, #29
 800b4d4:	d52f      	bpl.n	800b536 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b4d6:	4a6f      	ldr	r2, [pc, #444]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b4d8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b4da:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b4de:	d07f      	beq.n	800b5e0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b4e0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b4e2:	4e6e      	ldr	r6, [pc, #440]	; (800b69c <HAL_RCC_OscConfig+0x298>)
 800b4e4:	6833      	ldr	r3, [r6, #0]
 800b4e6:	05d9      	lsls	r1, r3, #23
 800b4e8:	f140 80b3 	bpl.w	800b652 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b4ec:	68a3      	ldr	r3, [r4, #8]
 800b4ee:	2b01      	cmp	r3, #1
 800b4f0:	f000 80c3 	beq.w	800b67a <HAL_RCC_OscConfig+0x276>
 800b4f4:	2b05      	cmp	r3, #5
 800b4f6:	f000 812c 	beq.w	800b752 <HAL_RCC_OscConfig+0x34e>
 800b4fa:	4e66      	ldr	r6, [pc, #408]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b4fc:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b4fe:	f022 0201 	bic.w	r2, r2, #1
 800b502:	6732      	str	r2, [r6, #112]	; 0x70
 800b504:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b506:	f022 0204 	bic.w	r2, r2, #4
 800b50a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b50c:	2b00      	cmp	r3, #0
 800b50e:	f040 80b9 	bne.w	800b684 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b512:	f7fd fde7 	bl	80090e4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b516:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b51a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b51c:	e005      	b.n	800b52a <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b51e:	f7fd fde1 	bl	80090e4 <HAL_GetTick>
 800b522:	1bc0      	subs	r0, r0, r7
 800b524:	4540      	cmp	r0, r8
 800b526:	f200 80a4 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b52a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b52c:	0798      	lsls	r0, r3, #30
 800b52e:	d4f6      	bmi.n	800b51e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b530:	2d00      	cmp	r5, #0
 800b532:	f040 8106 	bne.w	800b742 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b536:	69a0      	ldr	r0, [r4, #24]
 800b538:	b1c8      	cbz	r0, 800b56e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b53a:	4d56      	ldr	r5, [pc, #344]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b53c:	68ab      	ldr	r3, [r5, #8]
 800b53e:	f003 030c 	and.w	r3, r3, #12
 800b542:	2b08      	cmp	r3, #8
 800b544:	f000 80c9 	beq.w	800b6da <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b548:	4b53      	ldr	r3, [pc, #332]	; (800b698 <HAL_RCC_OscConfig+0x294>)
 800b54a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b54c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b54e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b550:	f000 8109 	beq.w	800b766 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b554:	f7fd fdc6 	bl	80090e4 <HAL_GetTick>
 800b558:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b55a:	e005      	b.n	800b568 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b55c:	f7fd fdc2 	bl	80090e4 <HAL_GetTick>
 800b560:	1b00      	subs	r0, r0, r4
 800b562:	2802      	cmp	r0, #2
 800b564:	f200 8085 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b568:	682b      	ldr	r3, [r5, #0]
 800b56a:	019b      	lsls	r3, r3, #6
 800b56c:	d4f6      	bmi.n	800b55c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b56e:	2000      	movs	r0, #0
}
 800b570:	b002      	add	sp, #8
 800b572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b576:	6963      	ldr	r3, [r4, #20]
 800b578:	b30b      	cbz	r3, 800b5be <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b57a:	4b47      	ldr	r3, [pc, #284]	; (800b698 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b57c:	4e45      	ldr	r6, [pc, #276]	; (800b694 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b57e:	2201      	movs	r2, #1
 800b580:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b584:	f7fd fdae 	bl	80090e4 <HAL_GetTick>
 800b588:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b58a:	e004      	b.n	800b596 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b58c:	f7fd fdaa 	bl	80090e4 <HAL_GetTick>
 800b590:	1b40      	subs	r0, r0, r5
 800b592:	2802      	cmp	r0, #2
 800b594:	d86d      	bhi.n	800b672 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b596:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b598:	079b      	lsls	r3, r3, #30
 800b59a:	d5f7      	bpl.n	800b58c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b59c:	6823      	ldr	r3, [r4, #0]
 800b59e:	e798      	b.n	800b4d2 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b5a0:	6852      	ldr	r2, [r2, #4]
 800b5a2:	0256      	lsls	r6, r2, #9
 800b5a4:	f53f af76 	bmi.w	800b494 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b5a8:	4a3a      	ldr	r2, [pc, #232]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b5aa:	6812      	ldr	r2, [r2, #0]
 800b5ac:	0795      	lsls	r5, r2, #30
 800b5ae:	d544      	bpl.n	800b63a <HAL_RCC_OscConfig+0x236>
 800b5b0:	68e2      	ldr	r2, [r4, #12]
 800b5b2:	2a01      	cmp	r2, #1
 800b5b4:	d041      	beq.n	800b63a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b5b6:	2001      	movs	r0, #1
}
 800b5b8:	b002      	add	sp, #8
 800b5ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b5be:	4a36      	ldr	r2, [pc, #216]	; (800b698 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5c0:	4e34      	ldr	r6, [pc, #208]	; (800b694 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b5c2:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b5c6:	f7fd fd8d 	bl	80090e4 <HAL_GetTick>
 800b5ca:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5cc:	e004      	b.n	800b5d8 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b5ce:	f7fd fd89 	bl	80090e4 <HAL_GetTick>
 800b5d2:	1b40      	subs	r0, r0, r5
 800b5d4:	2802      	cmp	r0, #2
 800b5d6:	d84c      	bhi.n	800b672 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5d8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b5da:	079f      	lsls	r7, r3, #30
 800b5dc:	d4f7      	bmi.n	800b5ce <HAL_RCC_OscConfig+0x1ca>
 800b5de:	e7dd      	b.n	800b59c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b5e0:	9301      	str	r3, [sp, #4]
 800b5e2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b5e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b5e8:	6413      	str	r3, [r2, #64]	; 0x40
 800b5ea:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b5ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b5f0:	9301      	str	r3, [sp, #4]
 800b5f2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b5f4:	2501      	movs	r5, #1
 800b5f6:	e774      	b.n	800b4e2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b5f8:	684a      	ldr	r2, [r1, #4]
 800b5fa:	0250      	lsls	r0, r2, #9
 800b5fc:	f57f af19 	bpl.w	800b432 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b600:	4a24      	ldr	r2, [pc, #144]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b602:	6812      	ldr	r2, [r2, #0]
 800b604:	0391      	lsls	r1, r2, #14
 800b606:	f57f af37 	bpl.w	800b478 <HAL_RCC_OscConfig+0x74>
 800b60a:	6862      	ldr	r2, [r4, #4]
 800b60c:	2a00      	cmp	r2, #0
 800b60e:	f47f af33 	bne.w	800b478 <HAL_RCC_OscConfig+0x74>
 800b612:	e7d0      	b.n	800b5b6 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b614:	4a1f      	ldr	r2, [pc, #124]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b616:	6813      	ldr	r3, [r2, #0]
 800b618:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b61c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b61e:	f7fd fd61 	bl	80090e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b622:	4e1c      	ldr	r6, [pc, #112]	; (800b694 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b624:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b626:	e004      	b.n	800b632 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b628:	f7fd fd5c 	bl	80090e4 <HAL_GetTick>
 800b62c:	1b40      	subs	r0, r0, r5
 800b62e:	2864      	cmp	r0, #100	; 0x64
 800b630:	d81f      	bhi.n	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b632:	6833      	ldr	r3, [r6, #0]
 800b634:	039a      	lsls	r2, r3, #14
 800b636:	d5f7      	bpl.n	800b628 <HAL_RCC_OscConfig+0x224>
 800b638:	e71d      	b.n	800b476 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b63a:	4916      	ldr	r1, [pc, #88]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b63c:	6920      	ldr	r0, [r4, #16]
 800b63e:	680a      	ldr	r2, [r1, #0]
 800b640:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b644:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b648:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b64a:	071a      	lsls	r2, r3, #28
 800b64c:	f57f af41 	bpl.w	800b4d2 <HAL_RCC_OscConfig+0xce>
 800b650:	e791      	b.n	800b576 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b652:	6833      	ldr	r3, [r6, #0]
 800b654:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b658:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b65a:	f7fd fd43 	bl	80090e4 <HAL_GetTick>
 800b65e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b660:	6833      	ldr	r3, [r6, #0]
 800b662:	05da      	lsls	r2, r3, #23
 800b664:	f53f af42 	bmi.w	800b4ec <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b668:	f7fd fd3c 	bl	80090e4 <HAL_GetTick>
 800b66c:	1bc0      	subs	r0, r0, r7
 800b66e:	2802      	cmp	r0, #2
 800b670:	d9f6      	bls.n	800b660 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b672:	2003      	movs	r0, #3
}
 800b674:	b002      	add	sp, #8
 800b676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b67a:	4a06      	ldr	r2, [pc, #24]	; (800b694 <HAL_RCC_OscConfig+0x290>)
 800b67c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b67e:	f043 0301 	orr.w	r3, r3, #1
 800b682:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b684:	f7fd fd2e 	bl	80090e4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b688:	4f02      	ldr	r7, [pc, #8]	; (800b694 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b68a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b68c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b690:	e00b      	b.n	800b6aa <HAL_RCC_OscConfig+0x2a6>
 800b692:	bf00      	nop
 800b694:	40023800 	.word	0x40023800
 800b698:	42470000 	.word	0x42470000
 800b69c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b6a0:	f7fd fd20 	bl	80090e4 <HAL_GetTick>
 800b6a4:	1b80      	subs	r0, r0, r6
 800b6a6:	4540      	cmp	r0, r8
 800b6a8:	d8e3      	bhi.n	800b672 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b6aa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b6ac:	079b      	lsls	r3, r3, #30
 800b6ae:	d5f7      	bpl.n	800b6a0 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b6b0:	2d00      	cmp	r5, #0
 800b6b2:	f43f af40 	beq.w	800b536 <HAL_RCC_OscConfig+0x132>
 800b6b6:	e044      	b.n	800b742 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b6b8:	4a42      	ldr	r2, [pc, #264]	; (800b7c4 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6ba:	4e43      	ldr	r6, [pc, #268]	; (800b7c8 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b6bc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b6be:	f7fd fd11 	bl	80090e4 <HAL_GetTick>
 800b6c2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6c4:	e004      	b.n	800b6d0 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b6c6:	f7fd fd0d 	bl	80090e4 <HAL_GetTick>
 800b6ca:	1b40      	subs	r0, r0, r5
 800b6cc:	2802      	cmp	r0, #2
 800b6ce:	d8d0      	bhi.n	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6d0:	6833      	ldr	r3, [r6, #0]
 800b6d2:	0799      	lsls	r1, r3, #30
 800b6d4:	d4f7      	bmi.n	800b6c6 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b6d6:	6823      	ldr	r3, [r4, #0]
 800b6d8:	e6f9      	b.n	800b4ce <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b6da:	2801      	cmp	r0, #1
 800b6dc:	f43f af48 	beq.w	800b570 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b6e0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b6e2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6e4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b6e8:	4291      	cmp	r1, r2
 800b6ea:	f47f af64 	bne.w	800b5b6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6ee:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b6f0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6f4:	4291      	cmp	r1, r2
 800b6f6:	f47f af5e 	bne.w	800b5b6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b6fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b6fc:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b700:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b702:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b706:	f47f af56 	bne.w	800b5b6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b70a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b70c:	0852      	lsrs	r2, r2, #1
 800b70e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b712:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b714:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b718:	f47f af4d 	bne.w	800b5b6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b71c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b71e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b722:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b726:	bf14      	ite	ne
 800b728:	2001      	movne	r0, #1
 800b72a:	2000      	moveq	r0, #0
 800b72c:	e720      	b.n	800b570 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b72e:	4b26      	ldr	r3, [pc, #152]	; (800b7c8 <HAL_RCC_OscConfig+0x3c4>)
 800b730:	681a      	ldr	r2, [r3, #0]
 800b732:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b736:	601a      	str	r2, [r3, #0]
 800b738:	681a      	ldr	r2, [r3, #0]
 800b73a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b73e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b740:	e76d      	b.n	800b61e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b742:	4a21      	ldr	r2, [pc, #132]	; (800b7c8 <HAL_RCC_OscConfig+0x3c4>)
 800b744:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b746:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b74a:	6413      	str	r3, [r2, #64]	; 0x40
 800b74c:	e6f3      	b.n	800b536 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b74e:	2001      	movs	r0, #1
}
 800b750:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b752:	4b1d      	ldr	r3, [pc, #116]	; (800b7c8 <HAL_RCC_OscConfig+0x3c4>)
 800b754:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b756:	f042 0204 	orr.w	r2, r2, #4
 800b75a:	671a      	str	r2, [r3, #112]	; 0x70
 800b75c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b75e:	f042 0201 	orr.w	r2, r2, #1
 800b762:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b764:	e78e      	b.n	800b684 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b766:	f7fd fcbd 	bl	80090e4 <HAL_GetTick>
 800b76a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b76c:	e005      	b.n	800b77a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b76e:	f7fd fcb9 	bl	80090e4 <HAL_GetTick>
 800b772:	1b80      	subs	r0, r0, r6
 800b774:	2802      	cmp	r0, #2
 800b776:	f63f af7c 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b77a:	682b      	ldr	r3, [r5, #0]
 800b77c:	0199      	lsls	r1, r3, #6
 800b77e:	d4f6      	bmi.n	800b76e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b780:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b784:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b786:	430b      	orrs	r3, r1
 800b788:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b78c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b790:	0852      	lsrs	r2, r2, #1
 800b792:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b796:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b798:	490a      	ldr	r1, [pc, #40]	; (800b7c4 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b79a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b79e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b7a0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b7a2:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b7a4:	f7fd fc9e 	bl	80090e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7a8:	4d07      	ldr	r5, [pc, #28]	; (800b7c8 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b7aa:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7ac:	e005      	b.n	800b7ba <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b7ae:	f7fd fc99 	bl	80090e4 <HAL_GetTick>
 800b7b2:	1b00      	subs	r0, r0, r4
 800b7b4:	2802      	cmp	r0, #2
 800b7b6:	f63f af5c 	bhi.w	800b672 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7ba:	682b      	ldr	r3, [r5, #0]
 800b7bc:	019a      	lsls	r2, r3, #6
 800b7be:	d5f6      	bpl.n	800b7ae <HAL_RCC_OscConfig+0x3aa>
 800b7c0:	e6d5      	b.n	800b56e <HAL_RCC_OscConfig+0x16a>
 800b7c2:	bf00      	nop
 800b7c4:	42470000 	.word	0x42470000
 800b7c8:	40023800 	.word	0x40023800

0800b7cc <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b7cc:	4916      	ldr	r1, [pc, #88]	; (800b828 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b7ce:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b7d0:	688b      	ldr	r3, [r1, #8]
 800b7d2:	f003 030c 	and.w	r3, r3, #12
 800b7d6:	2b04      	cmp	r3, #4
 800b7d8:	d01b      	beq.n	800b812 <HAL_RCC_GetSysClockFreq+0x46>
 800b7da:	2b08      	cmp	r3, #8
 800b7dc:	d117      	bne.n	800b80e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b7de:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7e0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b7e2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7e4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b7e8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7ec:	d113      	bne.n	800b816 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b7ee:	480f      	ldr	r0, [pc, #60]	; (800b82c <HAL_RCC_GetSysClockFreq+0x60>)
 800b7f0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b7f4:	fba1 0100 	umull	r0, r1, r1, r0
 800b7f8:	f7f4 fdaa 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b7fc:	4b0a      	ldr	r3, [pc, #40]	; (800b828 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b7fe:	685b      	ldr	r3, [r3, #4]
 800b800:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b804:	3301      	adds	r3, #1
 800b806:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b808:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b80c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b80e:	4807      	ldr	r0, [pc, #28]	; (800b82c <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b810:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b812:	4807      	ldr	r0, [pc, #28]	; (800b830 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b814:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b816:	4806      	ldr	r0, [pc, #24]	; (800b830 <HAL_RCC_GetSysClockFreq+0x64>)
 800b818:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b81c:	2300      	movs	r3, #0
 800b81e:	fba1 0100 	umull	r0, r1, r1, r0
 800b822:	f7f4 fd95 	bl	8000350 <__aeabi_uldivmod>
 800b826:	e7e9      	b.n	800b7fc <HAL_RCC_GetSysClockFreq+0x30>
 800b828:	40023800 	.word	0x40023800
 800b82c:	00f42400 	.word	0x00f42400
 800b830:	007a1200 	.word	0x007a1200

0800b834 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b834:	2800      	cmp	r0, #0
 800b836:	f000 8087 	beq.w	800b948 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b83a:	4a48      	ldr	r2, [pc, #288]	; (800b95c <HAL_RCC_ClockConfig+0x128>)
 800b83c:	6813      	ldr	r3, [r2, #0]
 800b83e:	f003 030f 	and.w	r3, r3, #15
 800b842:	428b      	cmp	r3, r1
{
 800b844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b848:	460d      	mov	r5, r1
 800b84a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b84c:	d209      	bcs.n	800b862 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b84e:	b2cb      	uxtb	r3, r1
 800b850:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b852:	6813      	ldr	r3, [r2, #0]
 800b854:	f003 030f 	and.w	r3, r3, #15
 800b858:	428b      	cmp	r3, r1
 800b85a:	d002      	beq.n	800b862 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b85c:	2001      	movs	r0, #1
}
 800b85e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b862:	6823      	ldr	r3, [r4, #0]
 800b864:	0798      	lsls	r0, r3, #30
 800b866:	d514      	bpl.n	800b892 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b868:	0759      	lsls	r1, r3, #29
 800b86a:	d504      	bpl.n	800b876 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b86c:	493c      	ldr	r1, [pc, #240]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b86e:	688a      	ldr	r2, [r1, #8]
 800b870:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b874:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b876:	071a      	lsls	r2, r3, #28
 800b878:	d504      	bpl.n	800b884 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b87a:	4939      	ldr	r1, [pc, #228]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b87c:	688a      	ldr	r2, [r1, #8]
 800b87e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b882:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b884:	4936      	ldr	r1, [pc, #216]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b886:	68a0      	ldr	r0, [r4, #8]
 800b888:	688a      	ldr	r2, [r1, #8]
 800b88a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b88e:	4302      	orrs	r2, r0
 800b890:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b892:	07df      	lsls	r7, r3, #31
 800b894:	d521      	bpl.n	800b8da <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b896:	6862      	ldr	r2, [r4, #4]
 800b898:	2a01      	cmp	r2, #1
 800b89a:	d057      	beq.n	800b94c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b89c:	1e93      	subs	r3, r2, #2
 800b89e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b8a0:	4b2f      	ldr	r3, [pc, #188]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b8a2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b8a4:	d94d      	bls.n	800b942 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b8a6:	0799      	lsls	r1, r3, #30
 800b8a8:	d5d8      	bpl.n	800b85c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b8aa:	4e2d      	ldr	r6, [pc, #180]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b8ac:	68b3      	ldr	r3, [r6, #8]
 800b8ae:	f023 0303 	bic.w	r3, r3, #3
 800b8b2:	4313      	orrs	r3, r2
 800b8b4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b8b6:	f7fd fc15 	bl	80090e4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b8ba:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b8be:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b8c0:	e004      	b.n	800b8cc <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b8c2:	f7fd fc0f 	bl	80090e4 <HAL_GetTick>
 800b8c6:	1bc0      	subs	r0, r0, r7
 800b8c8:	4540      	cmp	r0, r8
 800b8ca:	d844      	bhi.n	800b956 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b8cc:	68b3      	ldr	r3, [r6, #8]
 800b8ce:	6862      	ldr	r2, [r4, #4]
 800b8d0:	f003 030c 	and.w	r3, r3, #12
 800b8d4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b8d8:	d1f3      	bne.n	800b8c2 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b8da:	4a20      	ldr	r2, [pc, #128]	; (800b95c <HAL_RCC_ClockConfig+0x128>)
 800b8dc:	6813      	ldr	r3, [r2, #0]
 800b8de:	f003 030f 	and.w	r3, r3, #15
 800b8e2:	42ab      	cmp	r3, r5
 800b8e4:	d906      	bls.n	800b8f4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b8e6:	b2eb      	uxtb	r3, r5
 800b8e8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b8ea:	6813      	ldr	r3, [r2, #0]
 800b8ec:	f003 030f 	and.w	r3, r3, #15
 800b8f0:	42ab      	cmp	r3, r5
 800b8f2:	d1b3      	bne.n	800b85c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b8f4:	6823      	ldr	r3, [r4, #0]
 800b8f6:	075a      	lsls	r2, r3, #29
 800b8f8:	d506      	bpl.n	800b908 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b8fa:	4919      	ldr	r1, [pc, #100]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b8fc:	68e0      	ldr	r0, [r4, #12]
 800b8fe:	688a      	ldr	r2, [r1, #8]
 800b900:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b904:	4302      	orrs	r2, r0
 800b906:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b908:	071b      	lsls	r3, r3, #28
 800b90a:	d507      	bpl.n	800b91c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b90c:	4a14      	ldr	r2, [pc, #80]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b90e:	6921      	ldr	r1, [r4, #16]
 800b910:	6893      	ldr	r3, [r2, #8]
 800b912:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b916:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b91a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b91c:	f7ff ff56 	bl	800b7cc <HAL_RCC_GetSysClockFreq>
 800b920:	4a0f      	ldr	r2, [pc, #60]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b922:	4c10      	ldr	r4, [pc, #64]	; (800b964 <HAL_RCC_ClockConfig+0x130>)
 800b924:	6892      	ldr	r2, [r2, #8]
 800b926:	4910      	ldr	r1, [pc, #64]	; (800b968 <HAL_RCC_ClockConfig+0x134>)
 800b928:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b92c:	4603      	mov	r3, r0
 800b92e:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b930:	480e      	ldr	r0, [pc, #56]	; (800b96c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b932:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b934:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b936:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b938:	f7f6 fcf4 	bl	8002324 <HAL_InitTick>
  return HAL_OK;
 800b93c:	2000      	movs	r0, #0
}
 800b93e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b942:	0198      	lsls	r0, r3, #6
 800b944:	d4b1      	bmi.n	800b8aa <HAL_RCC_ClockConfig+0x76>
 800b946:	e789      	b.n	800b85c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b948:	2001      	movs	r0, #1
}
 800b94a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b94c:	4b04      	ldr	r3, [pc, #16]	; (800b960 <HAL_RCC_ClockConfig+0x12c>)
 800b94e:	681b      	ldr	r3, [r3, #0]
 800b950:	039e      	lsls	r6, r3, #14
 800b952:	d4aa      	bmi.n	800b8aa <HAL_RCC_ClockConfig+0x76>
 800b954:	e782      	b.n	800b85c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b956:	2003      	movs	r0, #3
 800b958:	e781      	b.n	800b85e <HAL_RCC_ClockConfig+0x2a>
 800b95a:	bf00      	nop
 800b95c:	40023c00 	.word	0x40023c00
 800b960:	40023800 	.word	0x40023800
 800b964:	0802deb8 	.word	0x0802deb8
 800b968:	20000078 	.word	0x20000078
 800b96c:	20000080 	.word	0x20000080

0800b970 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b970:	4b04      	ldr	r3, [pc, #16]	; (800b984 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b972:	4905      	ldr	r1, [pc, #20]	; (800b988 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b974:	689b      	ldr	r3, [r3, #8]
 800b976:	4a05      	ldr	r2, [pc, #20]	; (800b98c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b978:	6808      	ldr	r0, [r1, #0]
 800b97a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b97e:	5cd3      	ldrb	r3, [r2, r3]
}
 800b980:	40d8      	lsrs	r0, r3
 800b982:	4770      	bx	lr
 800b984:	40023800 	.word	0x40023800
 800b988:	20000078 	.word	0x20000078
 800b98c:	0802dec8 	.word	0x0802dec8

0800b990 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b990:	4b0e      	ldr	r3, [pc, #56]	; (800b9cc <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b992:	220f      	movs	r2, #15
 800b994:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b996:	689a      	ldr	r2, [r3, #8]
 800b998:	f002 0203 	and.w	r2, r2, #3
 800b99c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b99e:	689a      	ldr	r2, [r3, #8]
 800b9a0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b9a4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b9a6:	689a      	ldr	r2, [r3, #8]
 800b9a8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b9ac:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9ae:	689b      	ldr	r3, [r3, #8]
 800b9b0:	08db      	lsrs	r3, r3, #3
{
 800b9b2:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9b4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9b8:	4c05      	ldr	r4, [pc, #20]	; (800b9d0 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9ba:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9bc:	6823      	ldr	r3, [r4, #0]
}
 800b9be:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9c2:	f003 030f 	and.w	r3, r3, #15
 800b9c6:	600b      	str	r3, [r1, #0]
}
 800b9c8:	4770      	bx	lr
 800b9ca:	bf00      	nop
 800b9cc:	40023800 	.word	0x40023800
 800b9d0:	40023c00 	.word	0x40023c00

0800b9d4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b9d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b9d6:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b9d8:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b9dc:	b083      	sub	sp, #12
 800b9de:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b9e0:	d111      	bne.n	800ba06 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b9e2:	f013 0f0c 	tst.w	r3, #12
 800b9e6:	d16f      	bne.n	800bac8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b9e8:	0698      	lsls	r0, r3, #26
 800b9ea:	f100 80c2 	bmi.w	800bb72 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b9ee:	f013 0310 	ands.w	r3, r3, #16
 800b9f2:	f000 80bb 	beq.w	800bb6c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b9f6:	4b89      	ldr	r3, [pc, #548]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b9f8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b9fc:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800ba00:	2000      	movs	r0, #0
}
 800ba02:	b003      	add	sp, #12
 800ba04:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800ba06:	4b86      	ldr	r3, [pc, #536]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba08:	4e86      	ldr	r6, [pc, #536]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800ba0a:	2200      	movs	r2, #0
 800ba0c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800ba0e:	f7fd fb69 	bl	80090e4 <HAL_GetTick>
 800ba12:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba14:	e004      	b.n	800ba20 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ba16:	f7fd fb65 	bl	80090e4 <HAL_GetTick>
 800ba1a:	1b43      	subs	r3, r0, r5
 800ba1c:	2b02      	cmp	r3, #2
 800ba1e:	d850      	bhi.n	800bac2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba20:	6833      	ldr	r3, [r6, #0]
 800ba22:	0118      	lsls	r0, r3, #4
 800ba24:	d4f7      	bmi.n	800ba16 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800ba26:	6823      	ldr	r3, [r4, #0]
 800ba28:	07d9      	lsls	r1, r3, #31
 800ba2a:	d506      	bpl.n	800ba3a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800ba2c:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ba30:	0712      	lsls	r2, r2, #28
 800ba32:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800ba36:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800ba3a:	079a      	lsls	r2, r3, #30
 800ba3c:	d515      	bpl.n	800ba6a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ba3e:	4979      	ldr	r1, [pc, #484]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ba40:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ba42:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ba46:	6865      	ldr	r5, [r4, #4]
 800ba48:	0612      	lsls	r2, r2, #24
 800ba4a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800ba4e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800ba52:	4302      	orrs	r2, r0
 800ba54:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800ba58:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800ba5c:	69e2      	ldr	r2, [r4, #28]
 800ba5e:	f020 001f 	bic.w	r0, r0, #31
 800ba62:	3a01      	subs	r2, #1
 800ba64:	4302      	orrs	r2, r0
 800ba66:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800ba6a:	065b      	lsls	r3, r3, #25
 800ba6c:	d509      	bpl.n	800ba82 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800ba6e:	1d20      	adds	r0, r4, #4
 800ba70:	c80b      	ldmia	r0, {r0, r1, r3}
 800ba72:	061b      	lsls	r3, r3, #24
 800ba74:	4a6b      	ldr	r2, [pc, #428]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ba76:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ba7a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800ba7e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800ba82:	4b67      	ldr	r3, [pc, #412]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba84:	4e67      	ldr	r6, [pc, #412]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800ba86:	2201      	movs	r2, #1
 800ba88:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800ba8a:	f7fd fb2b 	bl	80090e4 <HAL_GetTick>
 800ba8e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba90:	e004      	b.n	800ba9c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ba92:	f7fd fb27 	bl	80090e4 <HAL_GetTick>
 800ba96:	1b40      	subs	r0, r0, r5
 800ba98:	2802      	cmp	r0, #2
 800ba9a:	d812      	bhi.n	800bac2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba9c:	6833      	ldr	r3, [r6, #0]
 800ba9e:	011f      	lsls	r7, r3, #4
 800baa0:	d5f7      	bpl.n	800ba92 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800baa2:	6823      	ldr	r3, [r4, #0]
 800baa4:	e79d      	b.n	800b9e2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800baa6:	f7fd fb1d 	bl	80090e4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800baaa:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800baae:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bab0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bab2:	079b      	lsls	r3, r3, #30
 800bab4:	f100 80a5 	bmi.w	800bc02 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bab8:	f7fd fb14 	bl	80090e4 <HAL_GetTick>
 800babc:	1b80      	subs	r0, r0, r6
 800babe:	42b8      	cmp	r0, r7
 800bac0:	d9f6      	bls.n	800bab0 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800bac2:	2003      	movs	r0, #3
}
 800bac4:	b003      	add	sp, #12
 800bac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bac8:	4b55      	ldr	r3, [pc, #340]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800baca:	4e56      	ldr	r6, [pc, #344]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bacc:	2200      	movs	r2, #0
 800bace:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bad0:	f7fd fb08 	bl	80090e4 <HAL_GetTick>
 800bad4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bad6:	e004      	b.n	800bae2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bad8:	f7fd fb04 	bl	80090e4 <HAL_GetTick>
 800badc:	1b43      	subs	r3, r0, r5
 800bade:	2b02      	cmp	r3, #2
 800bae0:	d8ef      	bhi.n	800bac2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bae2:	6833      	ldr	r3, [r6, #0]
 800bae4:	0098      	lsls	r0, r3, #2
 800bae6:	d4f7      	bmi.n	800bad8 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bae8:	6822      	ldr	r2, [r4, #0]
 800baea:	0751      	lsls	r1, r2, #29
 800baec:	d515      	bpl.n	800bb1a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800baee:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800baf0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800baf4:	6920      	ldr	r0, [r4, #16]
 800baf6:	061b      	lsls	r3, r3, #24
 800baf8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800bafc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bb00:	430b      	orrs	r3, r1
 800bb02:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bb06:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bb0a:	6a21      	ldr	r1, [r4, #32]
 800bb0c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bb10:	3901      	subs	r1, #1
 800bb12:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bb16:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bb1a:	0713      	lsls	r3, r2, #28
 800bb1c:	d514      	bpl.n	800bb48 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bb1e:	4a41      	ldr	r2, [pc, #260]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bb20:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bb22:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bb26:	6920      	ldr	r0, [r4, #16]
 800bb28:	071b      	lsls	r3, r3, #28
 800bb2a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bb2e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bb32:	430b      	orrs	r3, r1
 800bb34:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bb38:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bb3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bb3e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bb42:	430b      	orrs	r3, r1
 800bb44:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bb48:	4b35      	ldr	r3, [pc, #212]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb4a:	4e36      	ldr	r6, [pc, #216]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bb4c:	2201      	movs	r2, #1
 800bb4e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bb50:	f7fd fac8 	bl	80090e4 <HAL_GetTick>
 800bb54:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb56:	e004      	b.n	800bb62 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bb58:	f7fd fac4 	bl	80090e4 <HAL_GetTick>
 800bb5c:	1b40      	subs	r0, r0, r5
 800bb5e:	2802      	cmp	r0, #2
 800bb60:	d8af      	bhi.n	800bac2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb62:	6833      	ldr	r3, [r6, #0]
 800bb64:	009f      	lsls	r7, r3, #2
 800bb66:	d5f7      	bpl.n	800bb58 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bb68:	6823      	ldr	r3, [r4, #0]
 800bb6a:	e73d      	b.n	800b9e8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bb6c:	4618      	mov	r0, r3
}
 800bb6e:	b003      	add	sp, #12
 800bb70:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bb72:	4b2c      	ldr	r3, [pc, #176]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bb74:	4d2c      	ldr	r5, [pc, #176]	; (800bc28 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bb76:	2200      	movs	r2, #0
 800bb78:	9201      	str	r2, [sp, #4]
 800bb7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bb7c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bb80:	641a      	str	r2, [r3, #64]	; 0x40
 800bb82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb84:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bb88:	9301      	str	r3, [sp, #4]
 800bb8a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bb8c:	682b      	ldr	r3, [r5, #0]
 800bb8e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bb92:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bb94:	f7fd faa6 	bl	80090e4 <HAL_GetTick>
 800bb98:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bb9a:	e004      	b.n	800bba6 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bb9c:	f7fd faa2 	bl	80090e4 <HAL_GetTick>
 800bba0:	1b83      	subs	r3, r0, r6
 800bba2:	2b02      	cmp	r3, #2
 800bba4:	d88d      	bhi.n	800bac2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bba6:	682b      	ldr	r3, [r5, #0]
 800bba8:	05d9      	lsls	r1, r3, #23
 800bbaa:	d5f7      	bpl.n	800bb9c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bbac:	4d1d      	ldr	r5, [pc, #116]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bbb0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbb2:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bbb6:	d111      	bne.n	800bbdc <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bbb8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bbbc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bbc0:	d021      	beq.n	800bc06 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bbc2:	4918      	ldr	r1, [pc, #96]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bbc4:	688a      	ldr	r2, [r1, #8]
 800bbc6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bbca:	608a      	str	r2, [r1, #8]
 800bbcc:	4a15      	ldr	r2, [pc, #84]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bbce:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bbd0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bbd4:	430b      	orrs	r3, r1
 800bbd6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bbd8:	6823      	ldr	r3, [r4, #0]
 800bbda:	e708      	b.n	800b9ee <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbdc:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bbe0:	4291      	cmp	r1, r2
 800bbe2:	d0eb      	beq.n	800bbbc <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bbe4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bbe6:	4a0e      	ldr	r2, [pc, #56]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bbe8:	2101      	movs	r1, #1
 800bbea:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bbee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bbf2:	2100      	movs	r1, #0
 800bbf4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800bbf8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bbfa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bbfc:	07da      	lsls	r2, r3, #31
 800bbfe:	f53f af52 	bmi.w	800baa6 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bc02:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bc04:	e7d8      	b.n	800bbb8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800bc06:	4807      	ldr	r0, [pc, #28]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc08:	6882      	ldr	r2, [r0, #8]
 800bc0a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800bc0e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bc12:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bc16:	430a      	orrs	r2, r1
 800bc18:	6082      	str	r2, [r0, #8]
 800bc1a:	e7d7      	b.n	800bbcc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800bc1c:	42471000 	.word	0x42471000
 800bc20:	42470000 	.word	0x42470000
 800bc24:	40023800 	.word	0x40023800
 800bc28:	40007000 	.word	0x40007000

0800bc2c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800bc2c:	b1f0      	cbz	r0, 800bc6c <HAL_SDRAM_Init+0x40>
{
 800bc2e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800bc30:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bc34:	460d      	mov	r5, r1
 800bc36:	4604      	mov	r4, r0
 800bc38:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bc3c:	b18b      	cbz	r3, 800bc62 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bc3e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bc40:	2302      	movs	r3, #2
 800bc42:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bc46:	f851 0b04 	ldr.w	r0, [r1], #4
 800bc4a:	f000 ff41 	bl	800cad0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800bc4e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800bc52:	4629      	mov	r1, r5
 800bc54:	f000 ff7a 	bl	800cb4c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800bc58:	2301      	movs	r3, #1
 800bc5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800bc5e:	2000      	movs	r0, #0
}
 800bc60:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800bc62:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800bc66:	f7f6 faf5 	bl	8002254 <HAL_SDRAM_MspInit>
 800bc6a:	e7e8      	b.n	800bc3e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800bc6c:	2001      	movs	r0, #1
}
 800bc6e:	4770      	bx	lr

0800bc70 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800bc70:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bc72:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800bc76:	2b02      	cmp	r3, #2
{
 800bc78:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bc7a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800bc7c:	d004      	beq.n	800bc88 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800bc7e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800bc82:	2c01      	cmp	r4, #1
 800bc84:	d001      	beq.n	800bc8a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800bc86:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bc88:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bc8a:	460e      	mov	r6, r1
 800bc8c:	2302      	movs	r3, #2
 800bc8e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800bc92:	6828      	ldr	r0, [r5, #0]
 800bc94:	f000 ffa6 	bl	800cbe4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800bc98:	6833      	ldr	r3, [r6, #0]
 800bc9a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bc9c:	bf06      	itte	eq
 800bc9e:	2305      	moveq	r3, #5
 800bca0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bca4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bca8:	2000      	movs	r0, #0
}
 800bcaa:	bd70      	pop	{r4, r5, r6, pc}

0800bcac <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bcac:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bcae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bcb2:	2b02      	cmp	r3, #2
{
 800bcb4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bcb6:	b2d8      	uxtb	r0, r3
 800bcb8:	d005      	beq.n	800bcc6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bcba:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bcbe:	2b01      	cmp	r3, #1
 800bcc0:	b2dd      	uxtb	r5, r3
 800bcc2:	d001      	beq.n	800bcc8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bcc4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bcc6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bcc8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bcca:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bccc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bcd0:	f000 ffb2 	bl	800cc38 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800bcd4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bcd8:	2000      	movs	r0, #0
}
 800bcda:	bd38      	pop	{r3, r4, r5, pc}

0800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bcdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bce0:	b082      	sub	sp, #8
 800bce2:	461d      	mov	r5, r3
 800bce4:	4616      	mov	r6, r2
 800bce6:	460c      	mov	r4, r1
 800bce8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800bcea:	f7fd f9fb 	bl	80090e4 <HAL_GetTick>
 800bcee:	4435      	add	r5, r6
 800bcf0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bcf2:	f7fd f9f7 	bl	80090e4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bcf6:	4b27      	ldr	r3, [pc, #156]	; (800bd94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bcf8:	681b      	ldr	r3, [r3, #0]
 800bcfa:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bcfe:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bd02:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bd04:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bd06:	1c73      	adds	r3, r6, #1
 800bd08:	6839      	ldr	r1, [r7, #0]
 800bd0a:	d107      	bne.n	800bd1c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bd0c:	688b      	ldr	r3, [r1, #8]
 800bd0e:	ea34 0303 	bics.w	r3, r4, r3
 800bd12:	d0fb      	beq.n	800bd0c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bd14:	2000      	movs	r0, #0
}
 800bd16:	b002      	add	sp, #8
 800bd18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bd1c:	688b      	ldr	r3, [r1, #8]
 800bd1e:	ea34 0303 	bics.w	r3, r4, r3
 800bd22:	d1f7      	bne.n	800bd14 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bd24:	f7fd f9de 	bl	80090e4 <HAL_GetTick>
 800bd28:	eba0 0008 	sub.w	r0, r0, r8
 800bd2c:	42a8      	cmp	r0, r5
 800bd2e:	d208      	bcs.n	800bd42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bd30:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bd32:	2b00      	cmp	r3, #0
      count--;
 800bd34:	9b01      	ldr	r3, [sp, #4]
 800bd36:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bd3a:	bf08      	it	eq
 800bd3c:	2500      	moveq	r5, #0
      count--;
 800bd3e:	9301      	str	r3, [sp, #4]
 800bd40:	e7e1      	b.n	800bd06 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd42:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bd46:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd48:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bd4c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bd50:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd52:	d013      	beq.n	800bd7c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bd54:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bd56:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bd5a:	d107      	bne.n	800bd6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bd5c:	681a      	ldr	r2, [r3, #0]
 800bd5e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bd62:	601a      	str	r2, [r3, #0]
 800bd64:	681a      	ldr	r2, [r3, #0]
 800bd66:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bd6a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bd6c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bd6e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bd70:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bd74:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bd78:	2003      	movs	r0, #3
 800bd7a:	e7cc      	b.n	800bd16 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd7c:	68ba      	ldr	r2, [r7, #8]
 800bd7e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bd82:	d002      	beq.n	800bd8a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bd84:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bd88:	d1e4      	bne.n	800bd54 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bd8a:	681a      	ldr	r2, [r3, #0]
 800bd8c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bd90:	601a      	str	r2, [r3, #0]
 800bd92:	e7df      	b.n	800bd54 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bd94:	20000078 	.word	0x20000078

0800bd98 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bd98:	b538      	push	{r3, r4, r5, lr}
 800bd9a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd9c:	6842      	ldr	r2, [r0, #4]
 800bd9e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bda2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bda4:	d006      	beq.n	800bdb4 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bda6:	460a      	mov	r2, r1
 800bda8:	2101      	movs	r1, #1
 800bdaa:	f7ff ff97 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdae:	b978      	cbnz	r0, 800bdd0 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bdb0:	2000      	movs	r0, #0
}
 800bdb2:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bdb4:	6882      	ldr	r2, [r0, #8]
 800bdb6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bdba:	d01c      	beq.n	800bdf6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bdbc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bdc0:	d00c      	beq.n	800bddc <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bdc2:	460a      	mov	r2, r1
 800bdc4:	4620      	mov	r0, r4
 800bdc6:	2180      	movs	r1, #128	; 0x80
 800bdc8:	f7ff ff88 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdcc:	2800      	cmp	r0, #0
 800bdce:	d0ef      	beq.n	800bdb0 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdd0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bdd2:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bdd6:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdd8:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bdda:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bddc:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bdde:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bde0:	6829      	ldr	r1, [r5, #0]
 800bde2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bde6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bde8:	2101      	movs	r1, #1
 800bdea:	f7ff ff77 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdee:	2800      	cmp	r0, #0
 800bdf0:	d1ee      	bne.n	800bdd0 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bdf2:	2000      	movs	r0, #0
 800bdf4:	e7dd      	b.n	800bdb2 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bdf6:	6800      	ldr	r0, [r0, #0]
 800bdf8:	6802      	ldr	r2, [r0, #0]
 800bdfa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bdfe:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800be00:	460a      	mov	r2, r1
 800be02:	4620      	mov	r0, r4
 800be04:	2180      	movs	r1, #128	; 0x80
 800be06:	f7ff ff69 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be0a:	2800      	cmp	r0, #0
 800be0c:	d0d0      	beq.n	800bdb0 <SPI_EndRxTransaction+0x18>
 800be0e:	e7df      	b.n	800bdd0 <SPI_EndRxTransaction+0x38>

0800be10 <HAL_SPI_Init>:
  if (hspi == NULL)
 800be10:	2800      	cmp	r0, #0
 800be12:	d05c      	beq.n	800bece <HAL_SPI_Init+0xbe>
{
 800be14:	b570      	push	{r4, r5, r6, lr}
 800be16:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800be18:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800be1a:	2800      	cmp	r0, #0
 800be1c:	d047      	beq.n	800beae <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800be1e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800be20:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800be24:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800be28:	2200      	movs	r2, #0
 800be2a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800be2c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800be30:	2b00      	cmp	r3, #0
 800be32:	d042      	beq.n	800beba <HAL_SPI_Init+0xaa>
 800be34:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800be36:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be38:	68a5      	ldr	r5, [r4, #8]
 800be3a:	69a2      	ldr	r2, [r4, #24]
 800be3c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800be3e:	2302      	movs	r3, #2
 800be40:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800be44:	680b      	ldr	r3, [r1, #0]
 800be46:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800be4a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be4c:	6863      	ldr	r3, [r4, #4]
 800be4e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800be52:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800be56:	432b      	orrs	r3, r5
 800be58:	68e5      	ldr	r5, [r4, #12]
 800be5a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800be5e:	432b      	orrs	r3, r5
 800be60:	6925      	ldr	r5, [r4, #16]
 800be62:	f005 0502 	and.w	r5, r5, #2
 800be66:	432b      	orrs	r3, r5
 800be68:	6965      	ldr	r5, [r4, #20]
 800be6a:	f005 0501 	and.w	r5, r5, #1
 800be6e:	432b      	orrs	r3, r5
 800be70:	69e5      	ldr	r5, [r4, #28]
 800be72:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800be76:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800be7a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800be7e:	4333      	orrs	r3, r6
 800be80:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be82:	0c12      	lsrs	r2, r2, #16
 800be84:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be88:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be8c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be90:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be94:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be96:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be98:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800be9a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800be9c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800be9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bea2:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bea4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bea6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bea8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800beac:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800beae:	6863      	ldr	r3, [r4, #4]
 800beb0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800beb4:	d0b6      	beq.n	800be24 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800beb6:	61e0      	str	r0, [r4, #28]
 800beb8:	e7b4      	b.n	800be24 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800beba:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bebc:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bec0:	f7f6 f91e 	bl	8002100 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bec4:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bec8:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800becc:	e7b3      	b.n	800be36 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bece:	2001      	movs	r0, #1
}
 800bed0:	4770      	bx	lr
 800bed2:	bf00      	nop

0800bed4 <HAL_SPI_Transmit>:
{
 800bed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bed8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800beda:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bede:	2801      	cmp	r0, #1
{
 800bee0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bee2:	f000 8085 	beq.w	800bff0 <HAL_SPI_Transmit+0x11c>
 800bee6:	461d      	mov	r5, r3
 800bee8:	2301      	movs	r3, #1
 800beea:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800beee:	4688      	mov	r8, r1
 800bef0:	4617      	mov	r7, r2
 800bef2:	f7fd f8f7 	bl	80090e4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bef6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800befa:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800befc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800befe:	b2d8      	uxtb	r0, r3
 800bf00:	d009      	beq.n	800bf16 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bf02:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bf04:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bf06:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bf08:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bf0c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bf10:	b002      	add	sp, #8
 800bf12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bf16:	f1b8 0f00 	cmp.w	r8, #0
 800bf1a:	d0f3      	beq.n	800bf04 <HAL_SPI_Transmit+0x30>
 800bf1c:	2f00      	cmp	r7, #0
 800bf1e:	d0f1      	beq.n	800bf04 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf20:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bf22:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bf24:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf28:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bf2a:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf2c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bf30:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bf34:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf38:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bf3a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bf3c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bf3e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bf40:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bf42:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf44:	f000 8085 	beq.w	800c052 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf48:	6803      	ldr	r3, [r0, #0]
 800bf4a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bf4c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf4e:	d403      	bmi.n	800bf58 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bf50:	6803      	ldr	r3, [r0, #0]
 800bf52:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bf56:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bf58:	68e3      	ldr	r3, [r4, #12]
 800bf5a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bf5e:	d04b      	beq.n	800bff8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf60:	6863      	ldr	r3, [r4, #4]
 800bf62:	2b00      	cmp	r3, #0
 800bf64:	f000 8097 	beq.w	800c096 <HAL_SPI_Transmit+0x1c2>
 800bf68:	2f01      	cmp	r7, #1
 800bf6a:	f000 8094 	beq.w	800c096 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bf6e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf70:	b29b      	uxth	r3, r3
 800bf72:	b1ab      	cbz	r3, 800bfa0 <HAL_SPI_Transmit+0xcc>
 800bf74:	1c68      	adds	r0, r5, #1
 800bf76:	f040 8083 	bne.w	800c080 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bf7a:	6823      	ldr	r3, [r4, #0]
 800bf7c:	689a      	ldr	r2, [r3, #8]
 800bf7e:	0791      	lsls	r1, r2, #30
 800bf80:	f140 8094 	bpl.w	800c0ac <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bf84:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bf86:	7812      	ldrb	r2, [r2, #0]
 800bf88:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bf8a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf8e:	3901      	subs	r1, #1
 800bf90:	b289      	uxth	r1, r1
 800bf92:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bf94:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf96:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bf98:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf9a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bf9c:	2900      	cmp	r1, #0
 800bf9e:	d1ec      	bne.n	800bf7a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfa0:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfa2:	4b5b      	ldr	r3, [pc, #364]	; (800c110 <HAL_SPI_Transmit+0x23c>)
 800bfa4:	4a5b      	ldr	r2, [pc, #364]	; (800c114 <HAL_SPI_Transmit+0x240>)
 800bfa6:	681b      	ldr	r3, [r3, #0]
 800bfa8:	fba2 2303 	umull	r2, r3, r2, r3
 800bfac:	0d5b      	lsrs	r3, r3, #21
 800bfae:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bfb2:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfb6:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfba:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfbc:	d107      	bne.n	800bfce <HAL_SPI_Transmit+0xfa>
 800bfbe:	e098      	b.n	800c0f2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bfc0:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfc2:	6822      	ldr	r2, [r4, #0]
      count--;
 800bfc4:	3b01      	subs	r3, #1
 800bfc6:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfc8:	6893      	ldr	r3, [r2, #8]
 800bfca:	061b      	lsls	r3, r3, #24
 800bfcc:	d502      	bpl.n	800bfd4 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bfce:	9b01      	ldr	r3, [sp, #4]
 800bfd0:	2b00      	cmp	r3, #0
 800bfd2:	d1f5      	bne.n	800bfc0 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bfd4:	68a3      	ldr	r3, [r4, #8]
 800bfd6:	b933      	cbnz	r3, 800bfe6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bfd8:	6822      	ldr	r2, [r4, #0]
 800bfda:	9300      	str	r3, [sp, #0]
 800bfdc:	68d3      	ldr	r3, [r2, #12]
 800bfde:	9300      	str	r3, [sp, #0]
 800bfe0:	6893      	ldr	r3, [r2, #8]
 800bfe2:	9300      	str	r3, [sp, #0]
 800bfe4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bfe6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bfe8:	3800      	subs	r0, #0
 800bfea:	bf18      	it	ne
 800bfec:	2001      	movne	r0, #1
error:
 800bfee:	e789      	b.n	800bf04 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bff0:	2002      	movs	r0, #2
}
 800bff2:	b002      	add	sp, #8
 800bff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bff8:	6861      	ldr	r1, [r4, #4]
 800bffa:	2900      	cmp	r1, #0
 800bffc:	d176      	bne.n	800c0ec <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bffe:	4643      	mov	r3, r8
 800c000:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c004:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c006:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c008:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c00a:	3b01      	subs	r3, #1
 800c00c:	b29b      	uxth	r3, r3
 800c00e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c010:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c012:	b29b      	uxth	r3, r3
 800c014:	2b00      	cmp	r3, #0
 800c016:	d0c4      	beq.n	800bfa2 <HAL_SPI_Transmit+0xce>
 800c018:	1c6b      	adds	r3, r5, #1
 800c01a:	d15e      	bne.n	800c0da <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c01c:	6883      	ldr	r3, [r0, #8]
 800c01e:	079f      	lsls	r7, r3, #30
 800c020:	d50f      	bpl.n	800c042 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c022:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c024:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c028:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c02a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c02c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c02e:	3b01      	subs	r3, #1
 800c030:	b29b      	uxth	r3, r3
 800c032:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c034:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c036:	b29b      	uxth	r3, r3
 800c038:	2b00      	cmp	r3, #0
 800c03a:	d0b1      	beq.n	800bfa0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c03c:	6883      	ldr	r3, [r0, #8]
 800c03e:	079f      	lsls	r7, r3, #30
 800c040:	d4ef      	bmi.n	800c022 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c042:	f7fd f84f 	bl	80090e4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c046:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c048:	b29b      	uxth	r3, r3
 800c04a:	2b00      	cmp	r3, #0
 800c04c:	d0a8      	beq.n	800bfa0 <HAL_SPI_Transmit+0xcc>
 800c04e:	6820      	ldr	r0, [r4, #0]
 800c050:	e7e4      	b.n	800c01c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c052:	6803      	ldr	r3, [r0, #0]
 800c054:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c058:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c05a:	6803      	ldr	r3, [r0, #0]
 800c05c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c060:	6003      	str	r3, [r0, #0]
 800c062:	e771      	b.n	800bf48 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c064:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c066:	7812      	ldrb	r2, [r2, #0]
 800c068:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c06a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c06c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c06e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c070:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c072:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c074:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c076:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c078:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c07a:	b29b      	uxth	r3, r3
 800c07c:	2b00      	cmp	r3, #0
 800c07e:	d08f      	beq.n	800bfa0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c080:	6823      	ldr	r3, [r4, #0]
 800c082:	689a      	ldr	r2, [r3, #8]
 800c084:	0792      	lsls	r2, r2, #30
 800c086:	d4ed      	bmi.n	800c064 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c088:	f7fd f82c 	bl	80090e4 <HAL_GetTick>
 800c08c:	1b80      	subs	r0, r0, r6
 800c08e:	42a8      	cmp	r0, r5
 800c090:	d3f2      	bcc.n	800c078 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c092:	2003      	movs	r0, #3
 800c094:	e736      	b.n	800bf04 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c096:	f898 3000 	ldrb.w	r3, [r8]
 800c09a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c09c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c09e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0a0:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0a2:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c0a4:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0a6:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0a8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c0aa:	e760      	b.n	800bf6e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c0ac:	f7fd f81a 	bl	80090e4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c0b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0b2:	b29b      	uxth	r3, r3
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	f47f af60 	bne.w	800bf7a <HAL_SPI_Transmit+0xa6>
 800c0ba:	e771      	b.n	800bfa0 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0bc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c0be:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c0c2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c0c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0c6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0c8:	3b01      	subs	r3, #1
 800c0ca:	b29b      	uxth	r3, r3
 800c0cc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c0ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0d0:	b29b      	uxth	r3, r3
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	f43f af64 	beq.w	800bfa0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c0d8:	6822      	ldr	r2, [r4, #0]
 800c0da:	6893      	ldr	r3, [r2, #8]
 800c0dc:	0799      	lsls	r1, r3, #30
 800c0de:	d4ed      	bmi.n	800c0bc <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c0e0:	f7fd f800 	bl	80090e4 <HAL_GetTick>
 800c0e4:	1b80      	subs	r0, r0, r6
 800c0e6:	42a8      	cmp	r0, r5
 800c0e8:	d3f1      	bcc.n	800c0ce <HAL_SPI_Transmit+0x1fa>
 800c0ea:	e7d2      	b.n	800c092 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c0ec:	2f01      	cmp	r7, #1
 800c0ee:	d18f      	bne.n	800c010 <HAL_SPI_Transmit+0x13c>
 800c0f0:	e785      	b.n	800bffe <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c0f2:	4633      	mov	r3, r6
 800c0f4:	462a      	mov	r2, r5
 800c0f6:	2180      	movs	r1, #128	; 0x80
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	f7ff fdef 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c0fe:	2800      	cmp	r0, #0
 800c100:	f43f af68 	beq.w	800bfd4 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c104:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c106:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c108:	4313      	orrs	r3, r2
 800c10a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c10c:	6562      	str	r2, [r4, #84]	; 0x54
 800c10e:	e761      	b.n	800bfd4 <HAL_SPI_Transmit+0x100>
 800c110:	20000078 	.word	0x20000078
 800c114:	165e9f81 	.word	0x165e9f81

0800c118 <HAL_SPI_TransmitReceive>:
{
 800c118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c11c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c11e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c122:	2801      	cmp	r0, #1
{
 800c124:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c126:	f000 80ac 	beq.w	800c282 <HAL_SPI_TransmitReceive+0x16a>
 800c12a:	461e      	mov	r6, r3
 800c12c:	2301      	movs	r3, #1
 800c12e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c132:	4690      	mov	r8, r2
 800c134:	460f      	mov	r7, r1
 800c136:	f7fc ffd5 	bl	80090e4 <HAL_GetTick>
 800c13a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c13c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c140:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c142:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c144:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c146:	d011      	beq.n	800c16c <HAL_SPI_TransmitReceive+0x54>
 800c148:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c14c:	d009      	beq.n	800c162 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c14e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c150:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c152:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c154:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c158:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c15c:	b002      	add	sp, #8
 800c15e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c162:	68a1      	ldr	r1, [r4, #8]
 800c164:	2900      	cmp	r1, #0
 800c166:	d1f2      	bne.n	800c14e <HAL_SPI_TransmitReceive+0x36>
 800c168:	2a04      	cmp	r2, #4
 800c16a:	d1f0      	bne.n	800c14e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c16c:	2f00      	cmp	r7, #0
 800c16e:	f000 808c 	beq.w	800c28a <HAL_SPI_TransmitReceive+0x172>
 800c172:	f1b8 0f00 	cmp.w	r8, #0
 800c176:	f000 8088 	beq.w	800c28a <HAL_SPI_TransmitReceive+0x172>
 800c17a:	2e00      	cmp	r6, #0
 800c17c:	f000 8085 	beq.w	800c28a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c180:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c184:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c188:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c18a:	bf1c      	itt	ne
 800c18c:	2205      	movne	r2, #5
 800c18e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c192:	2200      	movs	r2, #0
 800c194:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c196:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c19a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c19c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c19e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c1a0:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c1a2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c1a4:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c1a6:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c1a8:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c1aa:	d403      	bmi.n	800c1b4 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c1ac:	6811      	ldr	r1, [r2, #0]
 800c1ae:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c1b2:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c1b4:	68e1      	ldr	r1, [r4, #12]
 800c1b6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c1ba:	f000 809e 	beq.w	800c2fa <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c1be:	2b00      	cmp	r3, #0
 800c1c0:	f000 8091 	beq.w	800c2e6 <HAL_SPI_TransmitReceive+0x1ce>
 800c1c4:	2e01      	cmp	r6, #1
 800c1c6:	f000 808e 	beq.w	800c2e6 <HAL_SPI_TransmitReceive+0x1ce>
 800c1ca:	9b08      	ldr	r3, [sp, #32]
 800c1cc:	3301      	adds	r3, #1
        txallowed = 1U;
 800c1ce:	f04f 0601 	mov.w	r6, #1
 800c1d2:	d028      	beq.n	800c226 <HAL_SPI_TransmitReceive+0x10e>
 800c1d4:	e05b      	b.n	800c28e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c1d6:	6821      	ldr	r1, [r4, #0]
 800c1d8:	688b      	ldr	r3, [r1, #8]
 800c1da:	0798      	lsls	r0, r3, #30
 800c1dc:	d50f      	bpl.n	800c1fe <HAL_SPI_TransmitReceive+0xe6>
 800c1de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1e0:	b29b      	uxth	r3, r3
 800c1e2:	b163      	cbz	r3, 800c1fe <HAL_SPI_TransmitReceive+0xe6>
 800c1e4:	b15e      	cbz	r6, 800c1fe <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c1e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c1e8:	781b      	ldrb	r3, [r3, #0]
 800c1ea:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c1ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c1ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c1f0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c1f2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c1f4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c1f6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c1f8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c1fa:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c1fc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c1fe:	688a      	ldr	r2, [r1, #8]
 800c200:	f012 0201 	ands.w	r2, r2, #1
 800c204:	d00d      	beq.n	800c222 <HAL_SPI_TransmitReceive+0x10a>
 800c206:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c208:	b29b      	uxth	r3, r3
 800c20a:	b153      	cbz	r3, 800c222 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c20c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c20e:	68c9      	ldr	r1, [r1, #12]
 800c210:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c212:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c214:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c216:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c218:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c21a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c21c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c21e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c220:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c222:	f7fc ff5f 	bl	80090e4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c226:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c228:	b292      	uxth	r2, r2
 800c22a:	2a00      	cmp	r2, #0
 800c22c:	d1d3      	bne.n	800c1d6 <HAL_SPI_TransmitReceive+0xbe>
 800c22e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c230:	b29b      	uxth	r3, r3
 800c232:	2b00      	cmp	r3, #0
 800c234:	d1cf      	bne.n	800c1d6 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c236:	4b79      	ldr	r3, [pc, #484]	; (800c41c <HAL_SPI_TransmitReceive+0x304>)
 800c238:	4a79      	ldr	r2, [pc, #484]	; (800c420 <HAL_SPI_TransmitReceive+0x308>)
 800c23a:	681b      	ldr	r3, [r3, #0]
 800c23c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c240:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c242:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c246:	0d5b      	lsrs	r3, r3, #21
 800c248:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c24c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c250:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c252:	d107      	bne.n	800c264 <HAL_SPI_TransmitReceive+0x14c>
 800c254:	e0d2      	b.n	800c3fc <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c256:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c258:	6822      	ldr	r2, [r4, #0]
      count--;
 800c25a:	3b01      	subs	r3, #1
 800c25c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c25e:	6893      	ldr	r3, [r2, #8]
 800c260:	061b      	lsls	r3, r3, #24
 800c262:	d502      	bpl.n	800c26a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c264:	9b01      	ldr	r3, [sp, #4]
 800c266:	2b00      	cmp	r3, #0
 800c268:	d1f5      	bne.n	800c256 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c26a:	68a0      	ldr	r0, [r4, #8]
 800c26c:	2800      	cmp	r0, #0
 800c26e:	f040 8082 	bne.w	800c376 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c272:	6823      	ldr	r3, [r4, #0]
 800c274:	9000      	str	r0, [sp, #0]
 800c276:	68da      	ldr	r2, [r3, #12]
 800c278:	9200      	str	r2, [sp, #0]
 800c27a:	689b      	ldr	r3, [r3, #8]
 800c27c:	9300      	str	r3, [sp, #0]
 800c27e:	9b00      	ldr	r3, [sp, #0]
 800c280:	e766      	b.n	800c150 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c282:	2002      	movs	r0, #2
}
 800c284:	b002      	add	sp, #8
 800c286:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c28a:	2001      	movs	r0, #1
 800c28c:	e760      	b.n	800c150 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c28e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c290:	b29b      	uxth	r3, r3
 800c292:	b91b      	cbnz	r3, 800c29c <HAL_SPI_TransmitReceive+0x184>
 800c294:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c296:	b29b      	uxth	r3, r3
 800c298:	2b00      	cmp	r3, #0
 800c29a:	d0cc      	beq.n	800c236 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c29c:	6822      	ldr	r2, [r4, #0]
 800c29e:	6893      	ldr	r3, [r2, #8]
 800c2a0:	0799      	lsls	r1, r3, #30
 800c2a2:	d50f      	bpl.n	800c2c4 <HAL_SPI_TransmitReceive+0x1ac>
 800c2a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2a6:	b29b      	uxth	r3, r3
 800c2a8:	b163      	cbz	r3, 800c2c4 <HAL_SPI_TransmitReceive+0x1ac>
 800c2aa:	b15e      	cbz	r6, 800c2c4 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c2ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c2ae:	781b      	ldrb	r3, [r3, #0]
 800c2b0:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c2b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c2b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c2b6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c2b8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c2ba:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c2bc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c2be:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c2c0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c2c2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c2c4:	6893      	ldr	r3, [r2, #8]
 800c2c6:	f013 0301 	ands.w	r3, r3, #1
 800c2ca:	d004      	beq.n	800c2d6 <HAL_SPI_TransmitReceive+0x1be>
 800c2cc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c2ce:	b289      	uxth	r1, r1
 800c2d0:	2900      	cmp	r1, #0
 800c2d2:	f040 8087 	bne.w	800c3e4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c2d6:	f7fc ff05 	bl	80090e4 <HAL_GetTick>
 800c2da:	9b08      	ldr	r3, [sp, #32]
 800c2dc:	1b40      	subs	r0, r0, r5
 800c2de:	4298      	cmp	r0, r3
 800c2e0:	d3d5      	bcc.n	800c28e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c2e2:	2003      	movs	r0, #3
 800c2e4:	e734      	b.n	800c150 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c2e6:	783b      	ldrb	r3, [r7, #0]
 800c2e8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c2ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2ee:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2f0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c2f2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2f4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2f6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c2f8:	e767      	b.n	800c1ca <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c2fa:	2b00      	cmp	r3, #0
 800c2fc:	d13d      	bne.n	800c37a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c2fe:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c302:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c304:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c306:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c308:	3b01      	subs	r3, #1
 800c30a:	b29b      	uxth	r3, r3
 800c30c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c30e:	9b08      	ldr	r3, [sp, #32]
 800c310:	3301      	adds	r3, #1
{
 800c312:	f04f 0601 	mov.w	r6, #1
 800c316:	d025      	beq.n	800c364 <HAL_SPI_TransmitReceive+0x24c>
 800c318:	e032      	b.n	800c380 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c31a:	6823      	ldr	r3, [r4, #0]
 800c31c:	689a      	ldr	r2, [r3, #8]
 800c31e:	0792      	lsls	r2, r2, #30
 800c320:	d50d      	bpl.n	800c33e <HAL_SPI_TransmitReceive+0x226>
 800c322:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c324:	b292      	uxth	r2, r2
 800c326:	b152      	cbz	r2, 800c33e <HAL_SPI_TransmitReceive+0x226>
 800c328:	b14e      	cbz	r6, 800c33e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c32a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c32c:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c330:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c332:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c334:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c336:	3a01      	subs	r2, #1
 800c338:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c33a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c33c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c33e:	689a      	ldr	r2, [r3, #8]
 800c340:	f012 0201 	ands.w	r2, r2, #1
 800c344:	d00c      	beq.n	800c360 <HAL_SPI_TransmitReceive+0x248>
 800c346:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c348:	b289      	uxth	r1, r1
 800c34a:	b149      	cbz	r1, 800c360 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c34c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c34e:	68db      	ldr	r3, [r3, #12]
 800c350:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c354:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c356:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c358:	3b01      	subs	r3, #1
 800c35a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c35c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c35e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c360:	f7fc fec0 	bl	80090e4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c364:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c366:	b29b      	uxth	r3, r3
 800c368:	2b00      	cmp	r3, #0
 800c36a:	d1d6      	bne.n	800c31a <HAL_SPI_TransmitReceive+0x202>
 800c36c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c36e:	b29b      	uxth	r3, r3
 800c370:	2b00      	cmp	r3, #0
 800c372:	d1d2      	bne.n	800c31a <HAL_SPI_TransmitReceive+0x202>
 800c374:	e75f      	b.n	800c236 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c376:	2000      	movs	r0, #0
 800c378:	e6ea      	b.n	800c150 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c37a:	2e01      	cmp	r6, #1
 800c37c:	d1c7      	bne.n	800c30e <HAL_SPI_TransmitReceive+0x1f6>
 800c37e:	e7be      	b.n	800c2fe <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c380:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c382:	b29b      	uxth	r3, r3
 800c384:	b923      	cbnz	r3, 800c390 <HAL_SPI_TransmitReceive+0x278>
 800c386:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c388:	b29b      	uxth	r3, r3
 800c38a:	2b00      	cmp	r3, #0
 800c38c:	f43f af53 	beq.w	800c236 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c390:	6822      	ldr	r2, [r4, #0]
 800c392:	6893      	ldr	r3, [r2, #8]
 800c394:	079f      	lsls	r7, r3, #30
 800c396:	d50d      	bpl.n	800c3b4 <HAL_SPI_TransmitReceive+0x29c>
 800c398:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c39a:	b29b      	uxth	r3, r3
 800c39c:	b153      	cbz	r3, 800c3b4 <HAL_SPI_TransmitReceive+0x29c>
 800c39e:	b14e      	cbz	r6, 800c3b4 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c3a0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c3a2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c3a6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c3a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c3aa:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c3ac:	3b01      	subs	r3, #1
 800c3ae:	b29b      	uxth	r3, r3
 800c3b0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c3b2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3b4:	6893      	ldr	r3, [r2, #8]
 800c3b6:	f013 0301 	ands.w	r3, r3, #1
 800c3ba:	d00c      	beq.n	800c3d6 <HAL_SPI_TransmitReceive+0x2be>
 800c3bc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c3be:	b289      	uxth	r1, r1
 800c3c0:	b149      	cbz	r1, 800c3d6 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c3c2:	68d1      	ldr	r1, [r2, #12]
 800c3c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c3c6:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c3ca:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c3cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c3ce:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3d0:	3b01      	subs	r3, #1
 800c3d2:	b29b      	uxth	r3, r3
 800c3d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c3d6:	f7fc fe85 	bl	80090e4 <HAL_GetTick>
 800c3da:	9b08      	ldr	r3, [sp, #32]
 800c3dc:	1b40      	subs	r0, r0, r5
 800c3de:	4298      	cmp	r0, r3
 800c3e0:	d3ce      	bcc.n	800c380 <HAL_SPI_TransmitReceive+0x268>
 800c3e2:	e77e      	b.n	800c2e2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c3e4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c3e6:	68d2      	ldr	r2, [r2, #12]
 800c3e8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c3ea:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c3ec:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3ee:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c3f0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c3f2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c3f4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3f6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c3f8:	461e      	mov	r6, r3
 800c3fa:	e76c      	b.n	800c2d6 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c3fc:	9a08      	ldr	r2, [sp, #32]
 800c3fe:	462b      	mov	r3, r5
 800c400:	2180      	movs	r1, #128	; 0x80
 800c402:	4620      	mov	r0, r4
 800c404:	f7ff fc6a 	bl	800bcdc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c408:	2800      	cmp	r0, #0
 800c40a:	f43f af2e 	beq.w	800c26a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c40e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c410:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c412:	4313      	orrs	r3, r2
 800c414:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c416:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c418:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c41a:	e699      	b.n	800c150 <HAL_SPI_TransmitReceive+0x38>
 800c41c:	20000078 	.word	0x20000078
 800c420:	165e9f81 	.word	0x165e9f81

0800c424 <HAL_SPI_Receive>:
{
 800c424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c428:	6846      	ldr	r6, [r0, #4]
 800c42a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c42e:	b082      	sub	sp, #8
 800c430:	4604      	mov	r4, r0
 800c432:	4690      	mov	r8, r2
 800c434:	461d      	mov	r5, r3
 800c436:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c438:	d06e      	beq.n	800c518 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c43a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c43e:	2b01      	cmp	r3, #1
 800c440:	d076      	beq.n	800c530 <HAL_SPI_Receive+0x10c>
 800c442:	2301      	movs	r3, #1
 800c444:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c448:	f7fc fe4c 	bl	80090e4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c44c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c450:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c454:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c456:	fa5f f08c 	uxtb.w	r0, ip
 800c45a:	d009      	beq.n	800c470 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c45c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c45e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c460:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c462:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c466:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c46a:	b002      	add	sp, #8
 800c46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c470:	2f00      	cmp	r7, #0
 800c472:	d0f4      	beq.n	800c45e <HAL_SPI_Receive+0x3a>
 800c474:	f1b8 0f00 	cmp.w	r8, #0
 800c478:	d0f1      	beq.n	800c45e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c47a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c47c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c47e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c482:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c484:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c488:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c48c:	f04f 0104 	mov.w	r1, #4
 800c490:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c494:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c498:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c49a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c49c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c49e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c4a2:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c4a4:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c4a6:	d107      	bne.n	800c4b8 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c4a8:	6811      	ldr	r1, [r2, #0]
 800c4aa:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c4ae:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c4b0:	6811      	ldr	r1, [r2, #0]
 800c4b2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c4b6:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c4b8:	6811      	ldr	r1, [r2, #0]
 800c4ba:	0648      	lsls	r0, r1, #25
 800c4bc:	d403      	bmi.n	800c4c6 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c4be:	6811      	ldr	r1, [r2, #0]
 800c4c0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c4c4:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c4c6:	68e1      	ldr	r1, [r4, #12]
 800c4c8:	2900      	cmp	r1, #0
 800c4ca:	d054      	beq.n	800c576 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c4cc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c4ce:	b289      	uxth	r1, r1
 800c4d0:	b1a9      	cbz	r1, 800c4fe <HAL_SPI_Receive+0xda>
 800c4d2:	1c69      	adds	r1, r5, #1
 800c4d4:	d13e      	bne.n	800c554 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c4d6:	6893      	ldr	r3, [r2, #8]
 800c4d8:	07db      	lsls	r3, r3, #31
 800c4da:	d544      	bpl.n	800c566 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c4dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c4de:	68d1      	ldr	r1, [r2, #12]
 800c4e0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c4e4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c4e8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c4ea:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c4ee:	fa1f fc8c 	uxth.w	ip, ip
 800c4f2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c4f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c4f8:	b29b      	uxth	r3, r3
 800c4fa:	2b00      	cmp	r3, #0
 800c4fc:	d1eb      	bne.n	800c4d6 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c4fe:	4632      	mov	r2, r6
 800c500:	4629      	mov	r1, r5
 800c502:	4620      	mov	r0, r4
 800c504:	f7ff fc48 	bl	800bd98 <SPI_EndRxTransaction>
 800c508:	b108      	cbz	r0, 800c50e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c50a:	2320      	movs	r3, #32
 800c50c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c50e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c510:	3800      	subs	r0, #0
 800c512:	bf18      	it	ne
 800c514:	2001      	movne	r0, #1
error :
 800c516:	e7a2      	b.n	800c45e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c518:	6883      	ldr	r3, [r0, #8]
 800c51a:	2b00      	cmp	r3, #0
 800c51c:	d18d      	bne.n	800c43a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c51e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c520:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c522:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c524:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c528:	460a      	mov	r2, r1
 800c52a:	f7ff fdf5 	bl	800c118 <HAL_SPI_TransmitReceive>
 800c52e:	e79c      	b.n	800c46a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c530:	2002      	movs	r0, #2
}
 800c532:	b002      	add	sp, #8
 800c534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c538:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c53a:	68db      	ldr	r3, [r3, #12]
 800c53c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c540:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c542:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c544:	3b01      	subs	r3, #1
 800c546:	b29b      	uxth	r3, r3
 800c548:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c54a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c54c:	b29b      	uxth	r3, r3
 800c54e:	2b00      	cmp	r3, #0
 800c550:	d0d5      	beq.n	800c4fe <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c552:	6823      	ldr	r3, [r4, #0]
 800c554:	689a      	ldr	r2, [r3, #8]
 800c556:	07d2      	lsls	r2, r2, #31
 800c558:	d4ee      	bmi.n	800c538 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c55a:	f7fc fdc3 	bl	80090e4 <HAL_GetTick>
 800c55e:	1b80      	subs	r0, r0, r6
 800c560:	42a8      	cmp	r0, r5
 800c562:	d243      	bcs.n	800c5ec <HAL_SPI_Receive+0x1c8>
 800c564:	e7f1      	b.n	800c54a <HAL_SPI_Receive+0x126>
 800c566:	f7fc fdbd 	bl	80090e4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c56a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c56c:	b29b      	uxth	r3, r3
 800c56e:	2b00      	cmp	r3, #0
 800c570:	d0c5      	beq.n	800c4fe <HAL_SPI_Receive+0xda>
 800c572:	6822      	ldr	r2, [r4, #0]
 800c574:	e7af      	b.n	800c4d6 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c576:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c578:	b292      	uxth	r2, r2
 800c57a:	2a00      	cmp	r2, #0
 800c57c:	d0bf      	beq.n	800c4fe <HAL_SPI_Receive+0xda>
 800c57e:	1c6f      	adds	r7, r5, #1
 800c580:	d013      	beq.n	800c5aa <HAL_SPI_Receive+0x186>
 800c582:	e02b      	b.n	800c5dc <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c584:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c586:	7b1b      	ldrb	r3, [r3, #12]
 800c588:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c58a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c58e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c590:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c594:	fa1f fc8c 	uxth.w	ip, ip
 800c598:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c59c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c59e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c5a0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5a2:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	d0aa      	beq.n	800c4fe <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c5a8:	6823      	ldr	r3, [r4, #0]
 800c5aa:	689a      	ldr	r2, [r3, #8]
 800c5ac:	07d0      	lsls	r0, r2, #31
 800c5ae:	d4e9      	bmi.n	800c584 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c5b0:	f7fc fd98 	bl	80090e4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c5b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5b6:	b29b      	uxth	r3, r3
 800c5b8:	2b00      	cmp	r3, #0
 800c5ba:	d1f5      	bne.n	800c5a8 <HAL_SPI_Receive+0x184>
 800c5bc:	e79f      	b.n	800c4fe <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c5be:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5c0:	7b1b      	ldrb	r3, [r3, #12]
 800c5c2:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c5c4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5c6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5c8:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5ca:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c5cc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5ce:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5d0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c5d2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5d4:	b29b      	uxth	r3, r3
 800c5d6:	2b00      	cmp	r3, #0
 800c5d8:	d091      	beq.n	800c4fe <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c5da:	6823      	ldr	r3, [r4, #0]
 800c5dc:	689a      	ldr	r2, [r3, #8]
 800c5de:	07d1      	lsls	r1, r2, #31
 800c5e0:	d4ed      	bmi.n	800c5be <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c5e2:	f7fc fd7f 	bl	80090e4 <HAL_GetTick>
 800c5e6:	1b80      	subs	r0, r0, r6
 800c5e8:	42a8      	cmp	r0, r5
 800c5ea:	d3f2      	bcc.n	800c5d2 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c5ec:	2003      	movs	r0, #3
 800c5ee:	e736      	b.n	800c45e <HAL_SPI_Receive+0x3a>

0800c5f0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c5f0:	2800      	cmp	r0, #0
 800c5f2:	f000 8087 	beq.w	800c704 <HAL_TIM_Base_Init+0x114>
{
 800c5f6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c5f8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c5fc:	4604      	mov	r4, r0
 800c5fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c602:	2b00      	cmp	r3, #0
 800c604:	d079      	beq.n	800c6fa <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c606:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c608:	493f      	ldr	r1, [pc, #252]	; (800c708 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c60a:	2302      	movs	r3, #2
 800c60c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c610:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c612:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c614:	d05d      	beq.n	800c6d2 <HAL_TIM_Base_Init+0xe2>
 800c616:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c61a:	d031      	beq.n	800c680 <HAL_TIM_Base_Init+0x90>
 800c61c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c620:	428a      	cmp	r2, r1
 800c622:	d02d      	beq.n	800c680 <HAL_TIM_Base_Init+0x90>
 800c624:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c628:	428a      	cmp	r2, r1
 800c62a:	d029      	beq.n	800c680 <HAL_TIM_Base_Init+0x90>
 800c62c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c630:	428a      	cmp	r2, r1
 800c632:	d025      	beq.n	800c680 <HAL_TIM_Base_Init+0x90>
 800c634:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c638:	428a      	cmp	r2, r1
 800c63a:	d04a      	beq.n	800c6d2 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c63c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c640:	428a      	cmp	r2, r1
 800c642:	d021      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
 800c644:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c648:	428a      	cmp	r2, r1
 800c64a:	d01d      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
 800c64c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c650:	428a      	cmp	r2, r1
 800c652:	d019      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
 800c654:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c658:	428a      	cmp	r2, r1
 800c65a:	d015      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
 800c65c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c660:	428a      	cmp	r2, r1
 800c662:	d011      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
 800c664:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c668:	428a      	cmp	r2, r1
 800c66a:	d00d      	beq.n	800c688 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c66c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c66e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c670:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c674:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c676:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c678:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c67a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c67c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c67e:	e010      	b.n	800c6a2 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c680:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c682:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c686:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c688:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c68a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c68c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c690:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c692:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c696:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c698:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c69a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c69c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c69e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c6a0:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c6a2:	2301      	movs	r3, #1
 800c6a4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c6a6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c6aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c6ae:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c6b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c6b6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c6ba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c6be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c6c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c6c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c6ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c6ce:	2000      	movs	r0, #0
}
 800c6d0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c6d2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c6d4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c6d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c6da:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c6dc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c6e0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c6e2:	69a1      	ldr	r1, [r4, #24]
 800c6e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c6e8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c6ea:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c6ec:	68e3      	ldr	r3, [r4, #12]
 800c6ee:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c6f0:	6863      	ldr	r3, [r4, #4]
 800c6f2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c6f4:	6963      	ldr	r3, [r4, #20]
 800c6f6:	6313      	str	r3, [r2, #48]	; 0x30
 800c6f8:	e7d3      	b.n	800c6a2 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c6fa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c6fe:	f7f5 fd3b 	bl	8002178 <HAL_TIM_Base_MspInit>
 800c702:	e780      	b.n	800c606 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c704:	2001      	movs	r0, #1
}
 800c706:	4770      	bx	lr
 800c708:	40010000 	.word	0x40010000

0800c70c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c70c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c710:	2b01      	cmp	r3, #1
 800c712:	d12f      	bne.n	800c774 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c714:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c716:	4919      	ldr	r1, [pc, #100]	; (800c77c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c718:	2202      	movs	r2, #2
 800c71a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c71e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c720:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c722:	f042 0201 	orr.w	r2, r2, #1
 800c726:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c728:	d019      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c72a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c72e:	d016      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c730:	4a13      	ldr	r2, [pc, #76]	; (800c780 <HAL_TIM_Base_Start_IT+0x74>)
 800c732:	4293      	cmp	r3, r2
 800c734:	d013      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c736:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c73a:	4293      	cmp	r3, r2
 800c73c:	d00f      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c73e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c742:	4293      	cmp	r3, r2
 800c744:	d00b      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c746:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c74a:	4293      	cmp	r3, r2
 800c74c:	d007      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c74e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c752:	4293      	cmp	r3, r2
 800c754:	d003      	beq.n	800c75e <HAL_TIM_Base_Start_IT+0x52>
 800c756:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c75a:	4293      	cmp	r3, r2
 800c75c:	d104      	bne.n	800c768 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c75e:	689a      	ldr	r2, [r3, #8]
 800c760:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c764:	2a06      	cmp	r2, #6
 800c766:	d007      	beq.n	800c778 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c768:	681a      	ldr	r2, [r3, #0]
 800c76a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c76e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c770:	601a      	str	r2, [r3, #0]
 800c772:	4770      	bx	lr
    return HAL_ERROR;
 800c774:	2001      	movs	r0, #1
 800c776:	4770      	bx	lr
  return HAL_OK;
 800c778:	2000      	movs	r0, #0
}
 800c77a:	4770      	bx	lr
 800c77c:	40010000 	.word	0x40010000
 800c780:	40000400 	.word	0x40000400

0800c784 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c784:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c788:	2b01      	cmp	r3, #1
 800c78a:	d075      	beq.n	800c878 <HAL_TIM_ConfigClockSource+0xf4>
 800c78c:	4602      	mov	r2, r0
{
 800c78e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c790:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c792:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c794:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c798:	2001      	movs	r0, #1
 800c79a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c79e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c7a0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c7a4:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c7a8:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c7aa:	680b      	ldr	r3, [r1, #0]
 800c7ac:	2b60      	cmp	r3, #96	; 0x60
 800c7ae:	d065      	beq.n	800c87c <HAL_TIM_ConfigClockSource+0xf8>
 800c7b0:	d824      	bhi.n	800c7fc <HAL_TIM_ConfigClockSource+0x78>
 800c7b2:	2b40      	cmp	r3, #64	; 0x40
 800c7b4:	d07c      	beq.n	800c8b0 <HAL_TIM_ConfigClockSource+0x12c>
 800c7b6:	d94b      	bls.n	800c850 <HAL_TIM_ConfigClockSource+0xcc>
 800c7b8:	2b50      	cmp	r3, #80	; 0x50
 800c7ba:	d117      	bne.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c7bc:	684b      	ldr	r3, [r1, #4]
 800c7be:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c7c0:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c7c2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c7c6:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c7c8:	6a23      	ldr	r3, [r4, #32]
 800c7ca:	f023 0301 	bic.w	r3, r3, #1
 800c7ce:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c7d0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c7d2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c7d6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c7da:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c7dc:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c7de:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c7e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c7e4:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c7e8:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c7ea:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c7ec:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c7ee:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c7f0:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c7f4:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c7f8:	bc30      	pop	{r4, r5}
 800c7fa:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c7fc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c800:	d038      	beq.n	800c874 <HAL_TIM_ConfigClockSource+0xf0>
 800c802:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c806:	d110      	bne.n	800c82a <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c808:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c80c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c80e:	432b      	orrs	r3, r5
 800c810:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c812:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c816:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c81a:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c81c:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c81e:	68a3      	ldr	r3, [r4, #8]
 800c820:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c824:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c826:	60a3      	str	r3, [r4, #8]
      break;
 800c828:	e7e0      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c82a:	2b70      	cmp	r3, #112	; 0x70
 800c82c:	d1de      	bne.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c82e:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c832:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c834:	432b      	orrs	r3, r5
 800c836:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c838:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c83c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c840:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c842:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c844:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c846:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c84a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c84c:	60a3      	str	r3, [r4, #8]
      break;
 800c84e:	e7cd      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c850:	2b20      	cmp	r3, #32
 800c852:	d002      	beq.n	800c85a <HAL_TIM_ConfigClockSource+0xd6>
 800c854:	d90a      	bls.n	800c86c <HAL_TIM_ConfigClockSource+0xe8>
 800c856:	2b30      	cmp	r3, #48	; 0x30
 800c858:	d1c8      	bne.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c85a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c85c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c860:	430b      	orrs	r3, r1
 800c862:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c866:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c868:	60a3      	str	r3, [r4, #8]
}
 800c86a:	e7bf      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c86c:	f033 0110 	bics.w	r1, r3, #16
 800c870:	d1bc      	bne.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
 800c872:	e7f2      	b.n	800c85a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c874:	2000      	movs	r0, #0
 800c876:	e7b9      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c878:	2002      	movs	r0, #2
}
 800c87a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c87c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c87e:	6848      	ldr	r0, [r1, #4]
 800c880:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c882:	f023 0310 	bic.w	r3, r3, #16
 800c886:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c888:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c88a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c88c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c890:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c894:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c898:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c89c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c89e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c8a0:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c8a2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c8a6:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c8aa:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c8ac:	60a3      	str	r3, [r4, #8]
}
 800c8ae:	e79d      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c8b0:	684b      	ldr	r3, [r1, #4]
 800c8b2:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c8b4:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c8b6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c8ba:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c8bc:	6a23      	ldr	r3, [r4, #32]
 800c8be:	f023 0301 	bic.w	r3, r3, #1
 800c8c2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c8c4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c8c6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c8ca:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c8ce:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c8d0:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c8d2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c8d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c8d8:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c8dc:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c8de:	60a3      	str	r3, [r4, #8]
}
 800c8e0:	e784      	b.n	800c7ec <HAL_TIM_ConfigClockSource+0x68>
 800c8e2:	bf00      	nop

0800c8e4 <HAL_TIM_OC_DelayElapsedCallback>:
 800c8e4:	4770      	bx	lr
 800c8e6:	bf00      	nop

0800c8e8 <HAL_TIM_IC_CaptureCallback>:
 800c8e8:	4770      	bx	lr
 800c8ea:	bf00      	nop

0800c8ec <HAL_TIM_PWM_PulseFinishedCallback>:
 800c8ec:	4770      	bx	lr
 800c8ee:	bf00      	nop

0800c8f0 <HAL_TIM_TriggerCallback>:
 800c8f0:	4770      	bx	lr
 800c8f2:	bf00      	nop

0800c8f4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c8f4:	6803      	ldr	r3, [r0, #0]
 800c8f6:	691a      	ldr	r2, [r3, #16]
 800c8f8:	0791      	lsls	r1, r2, #30
{
 800c8fa:	b510      	push	{r4, lr}
 800c8fc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c8fe:	d502      	bpl.n	800c906 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c900:	68da      	ldr	r2, [r3, #12]
 800c902:	0792      	lsls	r2, r2, #30
 800c904:	d45f      	bmi.n	800c9c6 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c906:	691a      	ldr	r2, [r3, #16]
 800c908:	0750      	lsls	r0, r2, #29
 800c90a:	d502      	bpl.n	800c912 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c90c:	68da      	ldr	r2, [r3, #12]
 800c90e:	0751      	lsls	r1, r2, #29
 800c910:	d446      	bmi.n	800c9a0 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c912:	691a      	ldr	r2, [r3, #16]
 800c914:	0712      	lsls	r2, r2, #28
 800c916:	d502      	bpl.n	800c91e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c918:	68da      	ldr	r2, [r3, #12]
 800c91a:	0710      	lsls	r0, r2, #28
 800c91c:	d42e      	bmi.n	800c97c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c91e:	691a      	ldr	r2, [r3, #16]
 800c920:	06d2      	lsls	r2, r2, #27
 800c922:	d502      	bpl.n	800c92a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c924:	68da      	ldr	r2, [r3, #12]
 800c926:	06d0      	lsls	r0, r2, #27
 800c928:	d418      	bmi.n	800c95c <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c92a:	691a      	ldr	r2, [r3, #16]
 800c92c:	07d1      	lsls	r1, r2, #31
 800c92e:	d502      	bpl.n	800c936 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c930:	68da      	ldr	r2, [r3, #12]
 800c932:	07d2      	lsls	r2, r2, #31
 800c934:	d45d      	bmi.n	800c9f2 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c936:	691a      	ldr	r2, [r3, #16]
 800c938:	0610      	lsls	r0, r2, #24
 800c93a:	d502      	bpl.n	800c942 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c93c:	68da      	ldr	r2, [r3, #12]
 800c93e:	0611      	lsls	r1, r2, #24
 800c940:	d45f      	bmi.n	800ca02 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c942:	691a      	ldr	r2, [r3, #16]
 800c944:	0652      	lsls	r2, r2, #25
 800c946:	d502      	bpl.n	800c94e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c948:	68da      	ldr	r2, [r3, #12]
 800c94a:	0650      	lsls	r0, r2, #25
 800c94c:	d461      	bmi.n	800ca12 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c94e:	691a      	ldr	r2, [r3, #16]
 800c950:	0691      	lsls	r1, r2, #26
 800c952:	d502      	bpl.n	800c95a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c954:	68da      	ldr	r2, [r3, #12]
 800c956:	0692      	lsls	r2, r2, #26
 800c958:	d443      	bmi.n	800c9e2 <HAL_TIM_IRQHandler+0xee>
}
 800c95a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c95c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c960:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c962:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c964:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c966:	69db      	ldr	r3, [r3, #28]
 800c968:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c96c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c96e:	d064      	beq.n	800ca3a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c970:	f7ff ffba 	bl	800c8e8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c974:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c976:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c978:	7722      	strb	r2, [r4, #28]
 800c97a:	e7d6      	b.n	800c92a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c97c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c980:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c982:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c984:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c986:	69db      	ldr	r3, [r3, #28]
 800c988:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c98a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c98c:	d152      	bne.n	800ca34 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c98e:	f7ff ffa9 	bl	800c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c992:	4620      	mov	r0, r4
 800c994:	f7ff ffaa 	bl	800c8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c998:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c99a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c99c:	7722      	strb	r2, [r4, #28]
 800c99e:	e7be      	b.n	800c91e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c9a0:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c9a4:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c9a6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c9a8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c9aa:	699b      	ldr	r3, [r3, #24]
 800c9ac:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c9b0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c9b2:	d13c      	bne.n	800ca2e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c9b4:	f7ff ff96 	bl	800c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c9b8:	4620      	mov	r0, r4
 800c9ba:	f7ff ff97 	bl	800c8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c9be:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c9c0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c9c2:	7722      	strb	r2, [r4, #28]
 800c9c4:	e7a5      	b.n	800c912 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c9c6:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c9ca:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c9cc:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c9ce:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c9d0:	699b      	ldr	r3, [r3, #24]
 800c9d2:	079b      	lsls	r3, r3, #30
 800c9d4:	d025      	beq.n	800ca22 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c9d6:	f7ff ff87 	bl	800c8e8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c9da:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c9dc:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c9de:	7722      	strb	r2, [r4, #28]
 800c9e0:	e791      	b.n	800c906 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c9e2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c9e6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c9e8:	611a      	str	r2, [r3, #16]
}
 800c9ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c9ee:	f000 b86b 	b.w	800cac8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c9f2:	f06f 0201 	mvn.w	r2, #1
 800c9f6:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c9f8:	4620      	mov	r0, r4
 800c9fa:	f7f5 f86f 	bl	8001adc <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c9fe:	6823      	ldr	r3, [r4, #0]
 800ca00:	e799      	b.n	800c936 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ca02:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ca06:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800ca08:	4620      	mov	r0, r4
 800ca0a:	f000 f85f 	bl	800cacc <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ca0e:	6823      	ldr	r3, [r4, #0]
 800ca10:	e797      	b.n	800c942 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ca12:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ca16:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800ca18:	4620      	mov	r0, r4
 800ca1a:	f7ff ff69 	bl	800c8f0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ca1e:	6823      	ldr	r3, [r4, #0]
 800ca20:	e795      	b.n	800c94e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800ca22:	f7ff ff5f 	bl	800c8e4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ca26:	4620      	mov	r0, r4
 800ca28:	f7ff ff60 	bl	800c8ec <HAL_TIM_PWM_PulseFinishedCallback>
 800ca2c:	e7d5      	b.n	800c9da <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800ca2e:	f7ff ff5b 	bl	800c8e8 <HAL_TIM_IC_CaptureCallback>
 800ca32:	e7c4      	b.n	800c9be <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800ca34:	f7ff ff58 	bl	800c8e8 <HAL_TIM_IC_CaptureCallback>
 800ca38:	e7ae      	b.n	800c998 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ca3a:	f7ff ff53 	bl	800c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ca3e:	4620      	mov	r0, r4
 800ca40:	f7ff ff54 	bl	800c8ec <HAL_TIM_PWM_PulseFinishedCallback>
 800ca44:	e796      	b.n	800c974 <HAL_TIM_IRQHandler+0x80>
 800ca46:	bf00      	nop

0800ca48 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800ca48:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800ca4c:	2b01      	cmp	r3, #1
 800ca4e:	d037      	beq.n	800cac0 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800ca50:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ca52:	2202      	movs	r2, #2
{
 800ca54:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ca56:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800ca5a:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ca5c:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800ca5e:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800ca60:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ca64:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800ca66:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ca68:	4a16      	ldr	r2, [pc, #88]	; (800cac4 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800ca6a:	4293      	cmp	r3, r2
 800ca6c:	d01a      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca6e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ca72:	d017      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca74:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ca78:	4293      	cmp	r3, r2
 800ca7a:	d013      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca7c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca80:	4293      	cmp	r3, r2
 800ca82:	d00f      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca84:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca88:	4293      	cmp	r3, r2
 800ca8a:	d00b      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca8c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ca90:	4293      	cmp	r3, r2
 800ca92:	d007      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca94:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ca98:	4293      	cmp	r3, r2
 800ca9a:	d003      	beq.n	800caa4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ca9c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800caa0:	4293      	cmp	r3, r2
 800caa2:	d104      	bne.n	800caae <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800caa4:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800caa6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800caaa:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800caac:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800caae:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cab0:	2201      	movs	r2, #1
 800cab2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cab6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800caba:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800cabc:	4618      	mov	r0, r3
}
 800cabe:	4770      	bx	lr
  __HAL_LOCK(htim);
 800cac0:	2002      	movs	r0, #2
}
 800cac2:	4770      	bx	lr
 800cac4:	40010000 	.word	0x40010000

0800cac8 <HAL_TIMEx_CommutCallback>:
 800cac8:	4770      	bx	lr
 800caca:	bf00      	nop

0800cacc <HAL_TIMEx_BreakCallback>:
 800cacc:	4770      	bx	lr
 800cace:	bf00      	nop

0800cad0 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cad0:	680b      	ldr	r3, [r1, #0]
{
 800cad2:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cad4:	b9d3      	cbnz	r3, 800cb0c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cad6:	6803      	ldr	r3, [r0, #0]
 800cad8:	684c      	ldr	r4, [r1, #4]
 800cada:	688a      	ldr	r2, [r1, #8]
 800cadc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cae0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cae4:	4323      	orrs	r3, r4
 800cae6:	4313      	orrs	r3, r2
 800cae8:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800caec:	4323      	orrs	r3, r4
 800caee:	4313      	orrs	r3, r2
 800caf0:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800caf4:	4323      	orrs	r3, r4
 800caf6:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800cafa:	4313      	orrs	r3, r2
 800cafc:	432b      	orrs	r3, r5
 800cafe:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cb00:	4323      	orrs	r3, r4
 800cb02:	4313      	orrs	r3, r2
 800cb04:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cb06:	bc30      	pop	{r4, r5}
 800cb08:	2000      	movs	r0, #0
 800cb0a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb0c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800cb10:	6803      	ldr	r3, [r0, #0]
 800cb12:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cb16:	4323      	orrs	r3, r4
 800cb18:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800cb1a:	4313      	orrs	r3, r2
 800cb1c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cb1e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb20:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cb22:	6843      	ldr	r3, [r0, #4]
 800cb24:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cb28:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cb2c:	4313      	orrs	r3, r2
 800cb2e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cb32:	4323      	orrs	r3, r4
 800cb34:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cb38:	4313      	orrs	r3, r2
 800cb3a:	432b      	orrs	r3, r5
 800cb3c:	698a      	ldr	r2, [r1, #24]
 800cb3e:	4323      	orrs	r3, r4
 800cb40:	4313      	orrs	r3, r2
 800cb42:	6043      	str	r3, [r0, #4]
}
 800cb44:	bc30      	pop	{r4, r5}
 800cb46:	2000      	movs	r0, #0
 800cb48:	4770      	bx	lr
 800cb4a:	bf00      	nop

0800cb4c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800cb4c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb4e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800cb50:	bb02      	cbnz	r2, 800cb94 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb52:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cb56:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cb5a:	3c01      	subs	r4, #1
 800cb5c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cb60:	3a01      	subs	r2, #1
 800cb62:	4313      	orrs	r3, r2
 800cb64:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cb68:	3c01      	subs	r4, #1
 800cb6a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cb6e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cb72:	3a01      	subs	r2, #1
 800cb74:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cb78:	698a      	ldr	r2, [r1, #24]
 800cb7a:	1e69      	subs	r1, r5, #1
 800cb7c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cb80:	1e61      	subs	r1, r4, #1
 800cb82:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cb86:	3a01      	subs	r2, #1
 800cb88:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cb8c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cb8e:	bc30      	pop	{r4, r5}
 800cb90:	2000      	movs	r0, #0
 800cb92:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb94:	68cc      	ldr	r4, [r1, #12]
 800cb96:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cb98:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb9a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cb9e:	3c01      	subs	r4, #1
 800cba0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cba4:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800cba8:	3a01      	subs	r2, #1
 800cbaa:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800cbae:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cbb0:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cbb4:	68c3      	ldr	r3, [r0, #12]
 800cbb6:	3c01      	subs	r4, #1
 800cbb8:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cbbc:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cbc0:	3a01      	subs	r2, #1
 800cbc2:	690c      	ldr	r4, [r1, #16]
 800cbc4:	4313      	orrs	r3, r2
 800cbc6:	698a      	ldr	r2, [r1, #24]
 800cbc8:	1e69      	subs	r1, r5, #1
 800cbca:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cbce:	1e61      	subs	r1, r4, #1
 800cbd0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cbd4:	3a01      	subs	r2, #1
 800cbd6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cbda:	60c3      	str	r3, [r0, #12]
}
 800cbdc:	bc30      	pop	{r4, r5}
 800cbde:	2000      	movs	r0, #0
 800cbe0:	4770      	bx	lr
 800cbe2:	bf00      	nop

0800cbe4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cbe4:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cbe6:	680b      	ldr	r3, [r1, #0]
{
 800cbe8:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cbea:	684a      	ldr	r2, [r1, #4]
{
 800cbec:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cbee:	4313      	orrs	r3, r2
 800cbf0:	6900      	ldr	r0, [r0, #16]
 800cbf2:	68ca      	ldr	r2, [r1, #12]
 800cbf4:	0d80      	lsrs	r0, r0, #22
 800cbf6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cbfa:	688a      	ldr	r2, [r1, #8]
 800cbfc:	0580      	lsls	r0, r0, #22
 800cbfe:	4303      	orrs	r3, r0
 800cc00:	3a01      	subs	r2, #1
 800cc02:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cc06:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cc08:	f7fc fa6c 	bl	80090e4 <HAL_GetTick>
 800cc0c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cc0e:	1c6b      	adds	r3, r5, #1
 800cc10:	d105      	bne.n	800cc1e <FMC_SDRAM_SendCommand+0x3a>
 800cc12:	69a3      	ldr	r3, [r4, #24]
 800cc14:	f013 0320 	ands.w	r3, r3, #32
 800cc18:	d1fb      	bne.n	800cc12 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cc1a:	4618      	mov	r0, r3
}
 800cc1c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cc1e:	69a3      	ldr	r3, [r4, #24]
 800cc20:	f013 0320 	ands.w	r3, r3, #32
 800cc24:	d0f9      	beq.n	800cc1a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cc26:	b125      	cbz	r5, 800cc32 <FMC_SDRAM_SendCommand+0x4e>
 800cc28:	f7fc fa5c 	bl	80090e4 <HAL_GetTick>
 800cc2c:	1b80      	subs	r0, r0, r6
 800cc2e:	42a8      	cmp	r0, r5
 800cc30:	d9ed      	bls.n	800cc0e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cc32:	2003      	movs	r0, #3
}
 800cc34:	bd70      	pop	{r4, r5, r6, pc}
 800cc36:	bf00      	nop

0800cc38 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc38:	6943      	ldr	r3, [r0, #20]
 800cc3a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cc3e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc40:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cc44:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cc48:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc4a:	6151      	str	r1, [r2, #20]
}
 800cc4c:	4770      	bx	lr
 800cc4e:	bf00      	nop

0800cc50 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cc50:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cc52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc56:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cc58:	f002 fb04 	bl	800f264 <xTaskGetSchedulerState>
 800cc5c:	2801      	cmp	r0, #1
 800cc5e:	d100      	bne.n	800cc62 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cc60:	bd08      	pop	{r3, pc}
 800cc62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cc66:	f000 bc45 	b.w	800d4f4 <xPortSysTickHandler>
 800cc6a:	bf00      	nop

0800cc6c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cc6c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc70:	b92b      	cbnz	r3, 800cc7e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cc72:	4b06      	ldr	r3, [pc, #24]	; (800cc8c <osKernelInitialize+0x20>)
 800cc74:	6818      	ldr	r0, [r3, #0]
 800cc76:	b928      	cbnz	r0, 800cc84 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cc78:	2201      	movs	r2, #1
 800cc7a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cc7c:	4770      	bx	lr
    stat = osErrorISR;
 800cc7e:	f06f 0005 	mvn.w	r0, #5
 800cc82:	4770      	bx	lr
    } else {
      stat = osError;
 800cc84:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cc88:	4770      	bx	lr
 800cc8a:	bf00      	nop
 800cc8c:	2000230c 	.word	0x2000230c

0800cc90 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cc90:	b510      	push	{r4, lr}
 800cc92:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc96:	b974      	cbnz	r4, 800ccb6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cc98:	4b08      	ldr	r3, [pc, #32]	; (800ccbc <osKernelStart+0x2c>)
 800cc9a:	681a      	ldr	r2, [r3, #0]
 800cc9c:	2a01      	cmp	r2, #1
 800cc9e:	d107      	bne.n	800ccb0 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cca0:	4907      	ldr	r1, [pc, #28]	; (800ccc0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cca2:	2202      	movs	r2, #2
 800cca4:	77cc      	strb	r4, [r1, #31]
 800cca6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cca8:	f002 f8b6 	bl	800ee18 <vTaskStartScheduler>
      stat = osOK;
 800ccac:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ccae:	bd10      	pop	{r4, pc}
      stat = osError;
 800ccb0:	f04f 30ff 	mov.w	r0, #4294967295
}
 800ccb4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ccb6:	f06f 0005 	mvn.w	r0, #5
}
 800ccba:	bd10      	pop	{r4, pc}
 800ccbc:	2000230c 	.word	0x2000230c
 800ccc0:	e000ed00 	.word	0xe000ed00

0800ccc4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ccc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccc6:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ccc8:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ccca:	4615      	mov	r5, r2
  hTask = NULL;
 800cccc:	9405      	str	r4, [sp, #20]
 800ccce:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ccd2:	b9ea      	cbnz	r2, 800cd10 <osThreadNew+0x4c>
 800ccd4:	b350      	cbz	r0, 800cd2c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ccd6:	b1f5      	cbz	r5, 800cd16 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ccd8:	69ab      	ldr	r3, [r5, #24]
 800ccda:	bb5b      	cbnz	r3, 800cd34 <osThreadNew+0x70>
 800ccdc:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ccde:	686a      	ldr	r2, [r5, #4]
 800cce0:	07d2      	lsls	r2, r2, #31
 800cce2:	d423      	bmi.n	800cd2c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cce4:	696e      	ldr	r6, [r5, #20]
 800cce6:	b34e      	cbz	r6, 800cd3c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cce8:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ccec:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800ccee:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ccf0:	b34c      	cbz	r4, 800cd46 <osThreadNew+0x82>
 800ccf2:	68ea      	ldr	r2, [r5, #12]
 800ccf4:	2aab      	cmp	r2, #171	; 0xab
 800ccf6:	d919      	bls.n	800cd2c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ccf8:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ccfa:	b1bd      	cbz	r5, 800cd2c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ccfc:	b1b6      	cbz	r6, 800cd2c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800ccfe:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cd02:	9300      	str	r3, [sp, #0]
 800cd04:	4662      	mov	r2, ip
 800cd06:	460b      	mov	r3, r1
 800cd08:	4639      	mov	r1, r7
 800cd0a:	f001 ffc3 	bl	800ec94 <xTaskCreateStatic>
 800cd0e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cd10:	4620      	mov	r0, r4
 800cd12:	b007      	add	sp, #28
 800cd14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd16:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cd18:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cd1a:	ac05      	add	r4, sp, #20
 800cd1c:	9300      	str	r3, [sp, #0]
 800cd1e:	9401      	str	r4, [sp, #4]
 800cd20:	460b      	mov	r3, r1
 800cd22:	4629      	mov	r1, r5
 800cd24:	f001 fff0 	bl	800ed08 <xTaskCreate>
 800cd28:	2801      	cmp	r0, #1
 800cd2a:	d00a      	beq.n	800cd42 <osThreadNew+0x7e>
        return (NULL);
 800cd2c:	2400      	movs	r4, #0
}
 800cd2e:	4620      	mov	r0, r4
 800cd30:	b007      	add	sp, #28
 800cd32:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cd34:	1e5c      	subs	r4, r3, #1
 800cd36:	2c37      	cmp	r4, #55	; 0x37
 800cd38:	d9d1      	bls.n	800ccde <osThreadNew+0x1a>
 800cd3a:	e7f7      	b.n	800cd2c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cd3c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cd40:	e7d4      	b.n	800ccec <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cd42:	9c05      	ldr	r4, [sp, #20]
 800cd44:	e7e4      	b.n	800cd10 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cd46:	68ee      	ldr	r6, [r5, #12]
 800cd48:	2e00      	cmp	r6, #0
 800cd4a:	d1e1      	bne.n	800cd10 <osThreadNew+0x4c>
 800cd4c:	692d      	ldr	r5, [r5, #16]
 800cd4e:	2d00      	cmp	r5, #0
 800cd50:	d1de      	bne.n	800cd10 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cd52:	fa1f f28c 	uxth.w	r2, ip
 800cd56:	463d      	mov	r5, r7
 800cd58:	e7df      	b.n	800cd1a <osThreadNew+0x56>
 800cd5a:	bf00      	nop

0800cd5c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cd5c:	b510      	push	{r4, lr}
 800cd5e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cd62:	b92c      	cbnz	r4, 800cd70 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cd64:	b900      	cbnz	r0, 800cd68 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cd66:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cd68:	f002 f800 	bl	800ed6c <vTaskDelay>
    stat = osOK;
 800cd6c:	4620      	mov	r0, r4
}
 800cd6e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cd70:	f06f 0005 	mvn.w	r0, #5
}
 800cd74:	bd10      	pop	{r4, pc}
 800cd76:	bf00      	nop

0800cd78 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cd78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd7a:	b083      	sub	sp, #12
 800cd7c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cd80:	b9fe      	cbnz	r6, 800cdc2 <osSemaphoreNew+0x4a>
 800cd82:	b1f0      	cbz	r0, 800cdc2 <osSemaphoreNew+0x4a>
 800cd84:	4288      	cmp	r0, r1
 800cd86:	460f      	mov	r7, r1
 800cd88:	d31b      	bcc.n	800cdc2 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cd8a:	4615      	mov	r5, r2
 800cd8c:	b192      	cbz	r2, 800cdb4 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cd8e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cd92:	b1d2      	cbz	r2, 800cdca <osSemaphoreNew+0x52>
 800cd94:	2b4f      	cmp	r3, #79	; 0x4f
 800cd96:	d914      	bls.n	800cdc2 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cd98:	2801      	cmp	r0, #1
 800cd9a:	d038      	beq.n	800ce0e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cd9c:	f000 fd90 	bl	800d8c0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cda0:	4604      	mov	r4, r0
 800cda2:	b170      	cbz	r0, 800cdc2 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cda4:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cda6:	4620      	mov	r0, r4
 800cda8:	4629      	mov	r1, r5
 800cdaa:	f001 fc3b 	bl	800e624 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cdae:	4620      	mov	r0, r4
 800cdb0:	b003      	add	sp, #12
 800cdb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cdb4:	2801      	cmp	r0, #1
 800cdb6:	d012      	beq.n	800cdde <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cdb8:	f000 fde2 	bl	800d980 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cdbc:	4604      	mov	r4, r0
 800cdbe:	2800      	cmp	r0, #0
 800cdc0:	d1f1      	bne.n	800cda6 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cdc2:	2400      	movs	r4, #0
}
 800cdc4:	4620      	mov	r0, r4
 800cdc6:	b003      	add	sp, #12
 800cdc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cdca:	2b00      	cmp	r3, #0
 800cdcc:	d1f9      	bne.n	800cdc2 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cdce:	2801      	cmp	r0, #1
 800cdd0:	d005      	beq.n	800cdde <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cdd2:	f000 fdd5 	bl	800d980 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cdd6:	4604      	mov	r4, r0
 800cdd8:	2800      	cmp	r0, #0
 800cdda:	d1e3      	bne.n	800cda4 <osSemaphoreNew+0x2c>
 800cddc:	e7f1      	b.n	800cdc2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cdde:	2203      	movs	r2, #3
 800cde0:	2100      	movs	r1, #0
 800cde2:	2001      	movs	r0, #1
 800cde4:	f000 fd2a 	bl	800d83c <xQueueGenericCreate>
 800cde8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cdea:	2c00      	cmp	r4, #0
 800cdec:	d0e9      	beq.n	800cdc2 <osSemaphoreNew+0x4a>
 800cdee:	b917      	cbnz	r7, 800cdf6 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cdf0:	2d00      	cmp	r5, #0
 800cdf2:	d1d7      	bne.n	800cda4 <osSemaphoreNew+0x2c>
 800cdf4:	e7d7      	b.n	800cda6 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cdf6:	2300      	movs	r3, #0
 800cdf8:	461a      	mov	r2, r3
 800cdfa:	4619      	mov	r1, r3
 800cdfc:	4620      	mov	r0, r4
 800cdfe:	f000 fe05 	bl	800da0c <xQueueGenericSend>
 800ce02:	2801      	cmp	r0, #1
 800ce04:	d0f4      	beq.n	800cdf0 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ce06:	4620      	mov	r0, r4
 800ce08:	f001 fbc6 	bl	800e598 <vQueueDelete>
 800ce0c:	e7d9      	b.n	800cdc2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800ce0e:	4613      	mov	r3, r2
 800ce10:	2203      	movs	r2, #3
 800ce12:	9200      	str	r2, [sp, #0]
 800ce14:	4631      	mov	r1, r6
 800ce16:	4632      	mov	r2, r6
 800ce18:	f000 fca2 	bl	800d760 <xQueueGenericCreateStatic>
 800ce1c:	4604      	mov	r4, r0
 800ce1e:	e7e4      	b.n	800cdea <osSemaphoreNew+0x72>

0800ce20 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ce20:	b370      	cbz	r0, 800ce80 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ce22:	b510      	push	{r4, lr}
 800ce24:	460c      	mov	r4, r1
 800ce26:	b082      	sub	sp, #8
 800ce28:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ce2c:	b1c3      	cbz	r3, 800ce60 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800ce2e:	bb21      	cbnz	r1, 800ce7a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce30:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce32:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce34:	f001 fb2e 	bl	800e494 <xQueueReceiveFromISR>
 800ce38:	2801      	cmp	r0, #1
 800ce3a:	d11a      	bne.n	800ce72 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce3c:	9b01      	ldr	r3, [sp, #4]
 800ce3e:	b913      	cbnz	r3, 800ce46 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800ce40:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ce42:	b002      	add	sp, #8
 800ce44:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ce46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce52:	f3bf 8f4f 	dsb	sy
 800ce56:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ce5a:	4620      	mov	r0, r4
}
 800ce5c:	b002      	add	sp, #8
 800ce5e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ce60:	f001 f98e 	bl	800e180 <xQueueSemaphoreTake>
 800ce64:	2801      	cmp	r0, #1
 800ce66:	d0eb      	beq.n	800ce40 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800ce68:	b11c      	cbz	r4, 800ce72 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800ce6a:	f06f 0001 	mvn.w	r0, #1
}
 800ce6e:	b002      	add	sp, #8
 800ce70:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800ce72:	f06f 0002 	mvn.w	r0, #2
}
 800ce76:	b002      	add	sp, #8
 800ce78:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800ce7a:	f06f 0003 	mvn.w	r0, #3
 800ce7e:	e7e0      	b.n	800ce42 <osSemaphoreAcquire+0x22>
 800ce80:	f06f 0003 	mvn.w	r0, #3
}
 800ce84:	4770      	bx	lr
 800ce86:	bf00      	nop

0800ce88 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ce88:	b330      	cbz	r0, 800ced8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800ce8a:	b510      	push	{r4, lr}
 800ce8c:	b082      	sub	sp, #8
 800ce8e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ce92:	b1ab      	cbz	r3, 800cec0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800ce94:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ce96:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800ce98:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ce9a:	f000 ff9b 	bl	800ddd4 <xQueueGiveFromISR>
 800ce9e:	2801      	cmp	r0, #1
 800cea0:	d117      	bne.n	800ced2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cea2:	9b01      	ldr	r3, [sp, #4]
 800cea4:	b193      	cbz	r3, 800cecc <osSemaphoreRelease+0x44>
 800cea6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ceaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ceae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ceb2:	f3bf 8f4f 	dsb	sy
 800ceb6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ceba:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cebc:	b002      	add	sp, #8
 800cebe:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cec0:	461a      	mov	r2, r3
 800cec2:	4619      	mov	r1, r3
 800cec4:	f000 fda2 	bl	800da0c <xQueueGenericSend>
 800cec8:	2801      	cmp	r0, #1
 800ceca:	d102      	bne.n	800ced2 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cecc:	2000      	movs	r0, #0
}
 800cece:	b002      	add	sp, #8
 800ced0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800ced2:	f06f 0002 	mvn.w	r0, #2
 800ced6:	e7fa      	b.n	800cece <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800ced8:	f06f 0003 	mvn.w	r0, #3
}
 800cedc:	4770      	bx	lr
 800cede:	bf00      	nop

0800cee0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cee2:	b085      	sub	sp, #20
 800cee4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cee8:	b987      	cbnz	r7, 800cf0c <osMessageQueueNew+0x2c>
 800ceea:	4605      	mov	r5, r0
 800ceec:	b170      	cbz	r0, 800cf0c <osMessageQueueNew+0x2c>
 800ceee:	b169      	cbz	r1, 800cf0c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800cef0:	4614      	mov	r4, r2
 800cef2:	b1ea      	cbz	r2, 800cf30 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cef4:	6893      	ldr	r3, [r2, #8]
 800cef6:	b163      	cbz	r3, 800cf12 <osMessageQueueNew+0x32>
 800cef8:	68d2      	ldr	r2, [r2, #12]
 800cefa:	2a4f      	cmp	r2, #79	; 0x4f
 800cefc:	d906      	bls.n	800cf0c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cefe:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cf00:	b122      	cbz	r2, 800cf0c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cf02:	6966      	ldr	r6, [r4, #20]
 800cf04:	fb01 f505 	mul.w	r5, r1, r5
 800cf08:	42ae      	cmp	r6, r5
 800cf0a:	d21c      	bcs.n	800cf46 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800cf0c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cf0e:	b005      	add	sp, #20
 800cf10:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cf12:	68d3      	ldr	r3, [r2, #12]
 800cf14:	2b00      	cmp	r3, #0
 800cf16:	d1f9      	bne.n	800cf0c <osMessageQueueNew+0x2c>
 800cf18:	6913      	ldr	r3, [r2, #16]
 800cf1a:	2b00      	cmp	r3, #0
 800cf1c:	d1f6      	bne.n	800cf0c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cf1e:	6952      	ldr	r2, [r2, #20]
 800cf20:	2a00      	cmp	r2, #0
 800cf22:	d1f3      	bne.n	800cf0c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cf24:	f000 fc8a 	bl	800d83c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cf28:	2800      	cmp	r0, #0
 800cf2a:	d0ef      	beq.n	800cf0c <osMessageQueueNew+0x2c>
        name = attr->name;
 800cf2c:	6824      	ldr	r4, [r4, #0]
 800cf2e:	e003      	b.n	800cf38 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cf30:	f000 fc84 	bl	800d83c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cf34:	2800      	cmp	r0, #0
 800cf36:	d0e9      	beq.n	800cf0c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800cf38:	4621      	mov	r1, r4
 800cf3a:	9003      	str	r0, [sp, #12]
 800cf3c:	f001 fb72 	bl	800e624 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cf40:	9803      	ldr	r0, [sp, #12]
}
 800cf42:	b005      	add	sp, #20
 800cf44:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cf46:	9700      	str	r7, [sp, #0]
 800cf48:	f000 fc0a 	bl	800d760 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cf4c:	2800      	cmp	r0, #0
 800cf4e:	d1ed      	bne.n	800cf2c <osMessageQueueNew+0x4c>
 800cf50:	e7dc      	b.n	800cf0c <osMessageQueueNew+0x2c>
 800cf52:	bf00      	nop

0800cf54 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cf54:	b570      	push	{r4, r5, r6, lr}
 800cf56:	461c      	mov	r4, r3
 800cf58:	b082      	sub	sp, #8
 800cf5a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cf5e:	b1be      	cbz	r6, 800cf90 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cf60:	b350      	cbz	r0, 800cfb8 <osMessageQueuePut+0x64>
 800cf62:	b349      	cbz	r1, 800cfb8 <osMessageQueuePut+0x64>
 800cf64:	bb43      	cbnz	r3, 800cfb8 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cf66:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cf68:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cf6a:	f000 fecd 	bl	800dd08 <xQueueGenericSendFromISR>
 800cf6e:	2801      	cmp	r0, #1
 800cf70:	d11e      	bne.n	800cfb0 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cf72:	9b01      	ldr	r3, [sp, #4]
 800cf74:	b1cb      	cbz	r3, 800cfaa <osMessageQueuePut+0x56>
 800cf76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cf7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cf82:	f3bf 8f4f 	dsb	sy
 800cf86:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cf8a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cf8c:	b002      	add	sp, #8
 800cf8e:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cf90:	b190      	cbz	r0, 800cfb8 <osMessageQueuePut+0x64>
 800cf92:	b189      	cbz	r1, 800cfb8 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cf94:	4633      	mov	r3, r6
 800cf96:	4622      	mov	r2, r4
 800cf98:	f000 fd38 	bl	800da0c <xQueueGenericSend>
 800cf9c:	2801      	cmp	r0, #1
 800cf9e:	d004      	beq.n	800cfaa <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cfa0:	b134      	cbz	r4, 800cfb0 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800cfa2:	f06f 0001 	mvn.w	r0, #1
}
 800cfa6:	b002      	add	sp, #8
 800cfa8:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800cfaa:	2000      	movs	r0, #0
}
 800cfac:	b002      	add	sp, #8
 800cfae:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800cfb0:	f06f 0002 	mvn.w	r0, #2
}
 800cfb4:	b002      	add	sp, #8
 800cfb6:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cfb8:	f06f 0003 	mvn.w	r0, #3
 800cfbc:	e7e6      	b.n	800cf8c <osMessageQueuePut+0x38>
 800cfbe:	bf00      	nop

0800cfc0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cfc0:	b530      	push	{r4, r5, lr}
 800cfc2:	461c      	mov	r4, r3
 800cfc4:	b083      	sub	sp, #12
 800cfc6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cfca:	b1bb      	cbz	r3, 800cffc <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cfcc:	b348      	cbz	r0, 800d022 <osMessageQueueGet+0x62>
 800cfce:	b341      	cbz	r1, 800d022 <osMessageQueueGet+0x62>
 800cfd0:	bb3c      	cbnz	r4, 800d022 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cfd2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cfd4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cfd6:	f001 fa5d 	bl	800e494 <xQueueReceiveFromISR>
 800cfda:	2801      	cmp	r0, #1
 800cfdc:	d11d      	bne.n	800d01a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cfde:	9b01      	ldr	r3, [sp, #4]
 800cfe0:	b1c3      	cbz	r3, 800d014 <osMessageQueueGet+0x54>
 800cfe2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfe6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cfea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cfee:	f3bf 8f4f 	dsb	sy
 800cff2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cff6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cff8:	b003      	add	sp, #12
 800cffa:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cffc:	b188      	cbz	r0, 800d022 <osMessageQueueGet+0x62>
 800cffe:	b181      	cbz	r1, 800d022 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d000:	4622      	mov	r2, r4
 800d002:	f000 ff3f 	bl	800de84 <xQueueReceive>
 800d006:	2801      	cmp	r0, #1
 800d008:	d004      	beq.n	800d014 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d00a:	b134      	cbz	r4, 800d01a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d00c:	f06f 0001 	mvn.w	r0, #1
}
 800d010:	b003      	add	sp, #12
 800d012:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d014:	2000      	movs	r0, #0
}
 800d016:	b003      	add	sp, #12
 800d018:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d01a:	f06f 0002 	mvn.w	r0, #2
}
 800d01e:	b003      	add	sp, #12
 800d020:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d022:	f06f 0003 	mvn.w	r0, #3
 800d026:	e7e7      	b.n	800cff8 <osMessageQueueGet+0x38>

0800d028 <osMessageQueueGetCount>:
 800d028:	b130      	cbz	r0, 800d038 <osMessageQueueGetCount+0x10>
 800d02a:	f3ef 8305 	mrs	r3, IPSR
 800d02e:	b10b      	cbz	r3, 800d034 <osMessageQueueGetCount+0xc>
 800d030:	f001 baa4 	b.w	800e57c <uxQueueMessagesWaitingFromISR>
 800d034:	f001 ba8c 	b.w	800e550 <uxQueueMessagesWaiting>
 800d038:	4770      	bx	lr
 800d03a:	bf00      	nop

0800d03c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d03c:	4b04      	ldr	r3, [pc, #16]	; (800d050 <vApplicationGetIdleTaskMemory+0x14>)
 800d03e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d040:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d042:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d044:	4c03      	ldr	r4, [pc, #12]	; (800d054 <vApplicationGetIdleTaskMemory+0x18>)
 800d046:	600c      	str	r4, [r1, #0]
}
 800d048:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d04c:	6013      	str	r3, [r2, #0]
}
 800d04e:	4770      	bx	lr
 800d050:	20002260 	.word	0x20002260
 800d054:	20002060 	.word	0x20002060

0800d058 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d058:	4b05      	ldr	r3, [pc, #20]	; (800d070 <vApplicationGetTimerTaskMemory+0x18>)
 800d05a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d05c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d05e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d062:	4c04      	ldr	r4, [pc, #16]	; (800d074 <vApplicationGetTimerTaskMemory+0x1c>)
 800d064:	600c      	str	r4, [r1, #0]
}
 800d066:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d06a:	6013      	str	r3, [r2, #0]
}
 800d06c:	4770      	bx	lr
 800d06e:	bf00      	nop
 800d070:	20002710 	.word	0x20002710
 800d074:	20002310 	.word	0x20002310

0800d078 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d07c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d07e:	f001 ff47 	bl	800ef10 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d082:	4a54      	ldr	r2, [pc, #336]	; (800d1d4 <pvPortMalloc+0x15c>)
 800d084:	6816      	ldr	r6, [r2, #0]
 800d086:	2e00      	cmp	r6, #0
 800d088:	d06e      	beq.n	800d168 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d08a:	4b53      	ldr	r3, [pc, #332]	; (800d1d8 <pvPortMalloc+0x160>)
 800d08c:	681f      	ldr	r7, [r3, #0]
 800d08e:	423d      	tst	r5, r7
 800d090:	d12e      	bne.n	800d0f0 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d092:	b36d      	cbz	r5, 800d0f0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d094:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d098:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d09a:	bf1c      	itt	ne
 800d09c:	f024 0407 	bicne.w	r4, r4, #7
 800d0a0:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d0a2:	b32c      	cbz	r4, 800d0f0 <pvPortMalloc+0x78>
 800d0a4:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d1ec <pvPortMalloc+0x174>
 800d0a8:	f8dc 5000 	ldr.w	r5, [ip]
 800d0ac:	42a5      	cmp	r5, r4
 800d0ae:	d31f      	bcc.n	800d0f0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d0b0:	484a      	ldr	r0, [pc, #296]	; (800d1dc <pvPortMalloc+0x164>)
 800d0b2:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d0b4:	e003      	b.n	800d0be <pvPortMalloc+0x46>
 800d0b6:	681a      	ldr	r2, [r3, #0]
 800d0b8:	b122      	cbz	r2, 800d0c4 <pvPortMalloc+0x4c>
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	4613      	mov	r3, r2
 800d0be:	6859      	ldr	r1, [r3, #4]
 800d0c0:	42a1      	cmp	r1, r4
 800d0c2:	d3f8      	bcc.n	800d0b6 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d0c4:	42b3      	cmp	r3, r6
 800d0c6:	d013      	beq.n	800d0f0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d0c8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d0ca:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d0cc:	f858 eb08 	ldr.w	lr, [r8], #8
 800d0d0:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d0d4:	2a10      	cmp	r2, #16
 800d0d6:	d929      	bls.n	800d12c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d0d8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d0da:	0748      	lsls	r0, r1, #29
 800d0dc:	d00f      	beq.n	800d0fe <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0e2:	f383 8811 	msr	BASEPRI, r3
 800d0e6:	f3bf 8f6f 	isb	sy
 800d0ea:	f3bf 8f4f 	dsb	sy
 800d0ee:	e7fe      	b.n	800d0ee <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d0f0:	f001 ff16 	bl	800ef20 <xTaskResumeAll>
 800d0f4:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d0f8:	4640      	mov	r0, r8
 800d0fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d0fe:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d100:	4a36      	ldr	r2, [pc, #216]	; (800d1dc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d102:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d104:	4614      	mov	r4, r2
 800d106:	6812      	ldr	r2, [r2, #0]
 800d108:	4291      	cmp	r1, r2
 800d10a:	d8fb      	bhi.n	800d104 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d10c:	6860      	ldr	r0, [r4, #4]
 800d10e:	eb04 0e00 	add.w	lr, r4, r0
 800d112:	4571      	cmp	r1, lr
 800d114:	d04b      	beq.n	800d1ae <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d116:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d11a:	eb01 000e 	add.w	r0, r1, lr
 800d11e:	4282      	cmp	r2, r0
 800d120:	d051      	beq.n	800d1c6 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d122:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d124:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d126:	bf18      	it	ne
 800d128:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d12a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d12c:	4a2c      	ldr	r2, [pc, #176]	; (800d1e0 <pvPortMalloc+0x168>)
 800d12e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d130:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d132:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d134:	bf38      	it	cc
 800d136:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d138:	4a2a      	ldr	r2, [pc, #168]	; (800d1e4 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d13a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d13e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d140:	2000      	movs	r0, #0
 800d142:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d146:	6813      	ldr	r3, [r2, #0]
 800d148:	3301      	adds	r3, #1
 800d14a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d14c:	f001 fee8 	bl	800ef20 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d150:	f018 0f07 	tst.w	r8, #7
 800d154:	d0d0      	beq.n	800d0f8 <pvPortMalloc+0x80>
 800d156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d15a:	f383 8811 	msr	BASEPRI, r3
 800d15e:	f3bf 8f6f 	isb	sy
 800d162:	f3bf 8f4f 	dsb	sy
 800d166:	e7fe      	b.n	800d166 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d168:	4b1f      	ldr	r3, [pc, #124]	; (800d1e8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d16a:	075e      	lsls	r6, r3, #29
 800d16c:	d118      	bne.n	800d1a0 <pvPortMalloc+0x128>
 800d16e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d172:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d174:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d176:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d17a:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d17c:	4a18      	ldr	r2, [pc, #96]	; (800d1e0 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d17e:	4817      	ldr	r0, [pc, #92]	; (800d1dc <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d180:	4c15      	ldr	r4, [pc, #84]	; (800d1d8 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d182:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d184:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d186:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d188:	4a18      	ldr	r2, [pc, #96]	; (800d1ec <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d18a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d18e:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d190:	2200      	movs	r2, #0
 800d192:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d194:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d196:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d19a:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d19e:	e776      	b.n	800d08e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d1a0:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d1a2:	f021 0107 	bic.w	r1, r1, #7
 800d1a6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d1aa:	460b      	mov	r3, r1
 800d1ac:	e7e2      	b.n	800d174 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1ae:	6849      	ldr	r1, [r1, #4]
 800d1b0:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1b4:	eb04 010e 	add.w	r1, r4, lr
 800d1b8:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1ba:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1be:	d001      	beq.n	800d1c4 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1c0:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d1c2:	e7b2      	b.n	800d12a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1c4:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d1c6:	42b2      	cmp	r2, r6
 800d1c8:	d0ab      	beq.n	800d122 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d1ca:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1cc:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d1ce:	4470      	add	r0, lr
 800d1d0:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1d2:	e7a6      	b.n	800d122 <pvPortMalloc+0xaa>
 800d1d4:	200027bc 	.word	0x200027bc
 800d1d8:	200127c0 	.word	0x200127c0
 800d1dc:	200127d4 	.word	0x200127d4
 800d1e0:	200127c8 	.word	0x200127c8
 800d1e4:	200127cc 	.word	0x200127cc
 800d1e8:	200027c0 	.word	0x200027c0
 800d1ec:	200127c4 	.word	0x200127c4

0800d1f0 <vPortFree>:
	if( pv != NULL )
 800d1f0:	b1d0      	cbz	r0, 800d228 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d1f2:	4a2c      	ldr	r2, [pc, #176]	; (800d2a4 <vPortFree+0xb4>)
 800d1f4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d1f8:	6812      	ldr	r2, [r2, #0]
 800d1fa:	4213      	tst	r3, r2
 800d1fc:	d00b      	beq.n	800d216 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d1fe:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d202:	b191      	cbz	r1, 800d22a <vPortFree+0x3a>
 800d204:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d208:	f383 8811 	msr	BASEPRI, r3
 800d20c:	f3bf 8f6f 	isb	sy
 800d210:	f3bf 8f4f 	dsb	sy
 800d214:	e7fe      	b.n	800d214 <vPortFree+0x24>
 800d216:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d21a:	f383 8811 	msr	BASEPRI, r3
 800d21e:	f3bf 8f6f 	isb	sy
 800d222:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d226:	e7fe      	b.n	800d226 <vPortFree+0x36>
 800d228:	4770      	bx	lr
{
 800d22a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d22c:	ea23 0302 	bic.w	r3, r3, r2
{
 800d230:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d232:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d236:	4c1c      	ldr	r4, [pc, #112]	; (800d2a8 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d238:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d23a:	f001 fe69 	bl	800ef10 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d23e:	9801      	ldr	r0, [sp, #4]
 800d240:	6822      	ldr	r2, [r4, #0]
 800d242:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d246:	4b19      	ldr	r3, [pc, #100]	; (800d2ac <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d248:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d24a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d24c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d24e:	461a      	mov	r2, r3
 800d250:	681b      	ldr	r3, [r3, #0]
 800d252:	4298      	cmp	r0, r3
 800d254:	d8fb      	bhi.n	800d24e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d256:	6854      	ldr	r4, [r2, #4]
 800d258:	eb02 0e04 	add.w	lr, r2, r4
 800d25c:	4570      	cmp	r0, lr
 800d25e:	d010      	beq.n	800d282 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d260:	eb00 0c01 	add.w	ip, r0, r1
 800d264:	4563      	cmp	r3, ip
 800d266:	d014      	beq.n	800d292 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d268:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d26a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d26c:	bf18      	it	ne
 800d26e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d270:	4a0f      	ldr	r2, [pc, #60]	; (800d2b0 <vPortFree+0xc0>)
 800d272:	6813      	ldr	r3, [r2, #0]
 800d274:	3301      	adds	r3, #1
 800d276:	6013      	str	r3, [r2, #0]
}
 800d278:	b002      	add	sp, #8
 800d27a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d27e:	f001 be4f 	b.w	800ef20 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d282:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d284:	1850      	adds	r0, r2, r1
 800d286:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d288:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d28a:	d001      	beq.n	800d290 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d28c:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d28e:	e7ef      	b.n	800d270 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d290:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d292:	4c08      	ldr	r4, [pc, #32]	; (800d2b4 <vPortFree+0xc4>)
 800d294:	6824      	ldr	r4, [r4, #0]
 800d296:	42a3      	cmp	r3, r4
 800d298:	d0e6      	beq.n	800d268 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d29a:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d29e:	4421      	add	r1, r4
 800d2a0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2a2:	e7e1      	b.n	800d268 <vPortFree+0x78>
 800d2a4:	200127c0 	.word	0x200127c0
 800d2a8:	200127c4 	.word	0x200127c4
 800d2ac:	200127d4 	.word	0x200127d4
 800d2b0:	200127d0 	.word	0x200127d0
 800d2b4:	200027bc 	.word	0x200027bc

0800d2b8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d2b8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d2bc:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d2c0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d2c2:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d2c6:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d2ca:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d2cc:	4770      	bx	lr
 800d2ce:	bf00      	nop

0800d2d0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d2d0:	2300      	movs	r3, #0
 800d2d2:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d2d4:	4770      	bx	lr
 800d2d6:	bf00      	nop

0800d2d8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d2d8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d2da:	689a      	ldr	r2, [r3, #8]
 800d2dc:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d2de:	6802      	ldr	r2, [r0, #0]
{
 800d2e0:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d2e2:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d2e4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d2e6:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d2e8:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d2ea:	6099      	str	r1, [r3, #8]
}
 800d2ec:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d2f0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d2f2:	6002      	str	r2, [r0, #0]
}
 800d2f4:	4770      	bx	lr
 800d2f6:	bf00      	nop

0800d2f8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d2f8:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d2fa:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d2fc:	1c6b      	adds	r3, r5, #1
 800d2fe:	d010      	beq.n	800d322 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d300:	f100 0308 	add.w	r3, r0, #8
 800d304:	461c      	mov	r4, r3
 800d306:	685b      	ldr	r3, [r3, #4]
 800d308:	681a      	ldr	r2, [r3, #0]
 800d30a:	42aa      	cmp	r2, r5
 800d30c:	d9fa      	bls.n	800d304 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d30e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d310:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d312:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d314:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d316:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d318:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d31a:	6108      	str	r0, [r1, #16]
}
 800d31c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d31e:	6002      	str	r2, [r0, #0]
}
 800d320:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d322:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d324:	6863      	ldr	r3, [r4, #4]
 800d326:	e7f2      	b.n	800d30e <vListInsert+0x16>

0800d328 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d328:	6903      	ldr	r3, [r0, #16]
{
 800d32a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d32c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d330:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d332:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d334:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d336:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d338:	bf08      	it	eq
 800d33a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d33c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d33e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d342:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d344:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d346:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d348:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d34a:	6818      	ldr	r0, [r3, #0]
}
 800d34c:	4770      	bx	lr
 800d34e:	bf00      	nop

0800d350 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d350:	4808      	ldr	r0, [pc, #32]	; (800d374 <prvPortStartFirstTask+0x24>)
 800d352:	6800      	ldr	r0, [r0, #0]
 800d354:	6800      	ldr	r0, [r0, #0]
 800d356:	f380 8808 	msr	MSP, r0
 800d35a:	f04f 0000 	mov.w	r0, #0
 800d35e:	f380 8814 	msr	CONTROL, r0
 800d362:	b662      	cpsie	i
 800d364:	b661      	cpsie	f
 800d366:	f3bf 8f4f 	dsb	sy
 800d36a:	f3bf 8f6f 	isb	sy
 800d36e:	df00      	svc	0
 800d370:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d372:	0000      	.short	0x0000
 800d374:	e000ed08 	.word	0xe000ed08

0800d378 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d378:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d388 <vPortEnableVFP+0x10>
 800d37c:	6801      	ldr	r1, [r0, #0]
 800d37e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d382:	6001      	str	r1, [r0, #0]
 800d384:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d386:	0000      	.short	0x0000
 800d388:	e000ed88 	.word	0xe000ed88

0800d38c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d38c:	4b0e      	ldr	r3, [pc, #56]	; (800d3c8 <prvTaskExitError+0x3c>)
 800d38e:	681b      	ldr	r3, [r3, #0]
{
 800d390:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d392:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d394:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d396:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d398:	d008      	beq.n	800d3ac <prvTaskExitError+0x20>
 800d39a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d39e:	f383 8811 	msr	BASEPRI, r3
 800d3a2:	f3bf 8f6f 	isb	sy
 800d3a6:	f3bf 8f4f 	dsb	sy
 800d3aa:	e7fe      	b.n	800d3aa <prvTaskExitError+0x1e>
 800d3ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3b0:	f383 8811 	msr	BASEPRI, r3
 800d3b4:	f3bf 8f6f 	isb	sy
 800d3b8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d3bc:	9b01      	ldr	r3, [sp, #4]
 800d3be:	2b00      	cmp	r3, #0
 800d3c0:	d0fc      	beq.n	800d3bc <prvTaskExitError+0x30>
}
 800d3c2:	b002      	add	sp, #8
 800d3c4:	4770      	bx	lr
 800d3c6:	bf00      	nop
 800d3c8:	20000084 	.word	0x20000084

0800d3cc <pxPortInitialiseStack>:
{
 800d3cc:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d3ce:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d3d2:	4c07      	ldr	r4, [pc, #28]	; (800d3f0 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d3d4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d3d8:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d3dc:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d3e0:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d3e4:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d3e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d3ec:	3844      	subs	r0, #68	; 0x44
 800d3ee:	4770      	bx	lr
 800d3f0:	0800d38d 	.word	0x0800d38d
	...

0800d400 <SVC_Handler>:
	__asm volatile (
 800d400:	4b07      	ldr	r3, [pc, #28]	; (800d420 <pxCurrentTCBConst2>)
 800d402:	6819      	ldr	r1, [r3, #0]
 800d404:	6808      	ldr	r0, [r1, #0]
 800d406:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d40a:	f380 8809 	msr	PSP, r0
 800d40e:	f3bf 8f6f 	isb	sy
 800d412:	f04f 0000 	mov.w	r0, #0
 800d416:	f380 8811 	msr	BASEPRI, r0
 800d41a:	4770      	bx	lr
 800d41c:	f3af 8000 	nop.w

0800d420 <pxCurrentTCBConst2>:
 800d420:	20012828 	.word	0x20012828

0800d424 <vPortEnterCritical>:
 800d424:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d428:	f383 8811 	msr	BASEPRI, r3
 800d42c:	f3bf 8f6f 	isb	sy
 800d430:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d434:	4a0b      	ldr	r2, [pc, #44]	; (800d464 <vPortEnterCritical+0x40>)
 800d436:	6813      	ldr	r3, [r2, #0]
 800d438:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d43a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d43c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d43e:	d000      	beq.n	800d442 <vPortEnterCritical+0x1e>
}
 800d440:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d442:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d446:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d44a:	b2db      	uxtb	r3, r3
 800d44c:	2b00      	cmp	r3, #0
 800d44e:	d0f7      	beq.n	800d440 <vPortEnterCritical+0x1c>
 800d450:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d454:	f383 8811 	msr	BASEPRI, r3
 800d458:	f3bf 8f6f 	isb	sy
 800d45c:	f3bf 8f4f 	dsb	sy
 800d460:	e7fe      	b.n	800d460 <vPortEnterCritical+0x3c>
 800d462:	bf00      	nop
 800d464:	20000084 	.word	0x20000084

0800d468 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d468:	4a08      	ldr	r2, [pc, #32]	; (800d48c <vPortExitCritical+0x24>)
 800d46a:	6813      	ldr	r3, [r2, #0]
 800d46c:	b943      	cbnz	r3, 800d480 <vPortExitCritical+0x18>
 800d46e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d472:	f383 8811 	msr	BASEPRI, r3
 800d476:	f3bf 8f6f 	isb	sy
 800d47a:	f3bf 8f4f 	dsb	sy
 800d47e:	e7fe      	b.n	800d47e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d480:	3b01      	subs	r3, #1
 800d482:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d484:	b90b      	cbnz	r3, 800d48a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d486:	f383 8811 	msr	BASEPRI, r3
}
 800d48a:	4770      	bx	lr
 800d48c:	20000084 	.word	0x20000084

0800d490 <PendSV_Handler>:
	__asm volatile
 800d490:	f3ef 8009 	mrs	r0, PSP
 800d494:	f3bf 8f6f 	isb	sy
 800d498:	4b15      	ldr	r3, [pc, #84]	; (800d4f0 <pxCurrentTCBConst>)
 800d49a:	681a      	ldr	r2, [r3, #0]
 800d49c:	f01e 0f10 	tst.w	lr, #16
 800d4a0:	bf08      	it	eq
 800d4a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d4a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4aa:	6010      	str	r0, [r2, #0]
 800d4ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d4b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d4b4:	f380 8811 	msr	BASEPRI, r0
 800d4b8:	f3bf 8f4f 	dsb	sy
 800d4bc:	f3bf 8f6f 	isb	sy
 800d4c0:	f001 fd54 	bl	800ef6c <vTaskSwitchContext>
 800d4c4:	f04f 0000 	mov.w	r0, #0
 800d4c8:	f380 8811 	msr	BASEPRI, r0
 800d4cc:	bc09      	pop	{r0, r3}
 800d4ce:	6819      	ldr	r1, [r3, #0]
 800d4d0:	6808      	ldr	r0, [r1, #0]
 800d4d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4d6:	f01e 0f10 	tst.w	lr, #16
 800d4da:	bf08      	it	eq
 800d4dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d4e0:	f380 8809 	msr	PSP, r0
 800d4e4:	f3bf 8f6f 	isb	sy
 800d4e8:	4770      	bx	lr
 800d4ea:	bf00      	nop
 800d4ec:	f3af 8000 	nop.w

0800d4f0 <pxCurrentTCBConst>:
 800d4f0:	20012828 	.word	0x20012828

0800d4f4 <xPortSysTickHandler>:
{
 800d4f4:	b508      	push	{r3, lr}
	__asm volatile
 800d4f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4fa:	f383 8811 	msr	BASEPRI, r3
 800d4fe:	f3bf 8f6f 	isb	sy
 800d502:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d506:	f001 fd21 	bl	800ef4c <xTaskIncrementTick>
 800d50a:	b128      	cbz	r0, 800d518 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d50c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d510:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d514:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d518:	2300      	movs	r3, #0
 800d51a:	f383 8811 	msr	BASEPRI, r3
}
 800d51e:	bd08      	pop	{r3, pc}

0800d520 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d520:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d524:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d526:	4906      	ldr	r1, [pc, #24]	; (800d540 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d528:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d52a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d52c:	680b      	ldr	r3, [r1, #0]
 800d52e:	4905      	ldr	r1, [pc, #20]	; (800d544 <vPortSetupTimerInterrupt+0x24>)
 800d530:	fba1 1303 	umull	r1, r3, r1, r3
 800d534:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d536:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d538:	3b01      	subs	r3, #1
 800d53a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d53c:	6110      	str	r0, [r2, #16]
}
 800d53e:	4770      	bx	lr
 800d540:	20000078 	.word	0x20000078
 800d544:	10624dd3 	.word	0x10624dd3

0800d548 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d548:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d54c:	4a49      	ldr	r2, [pc, #292]	; (800d674 <xPortStartScheduler+0x12c>)
 800d54e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d552:	4291      	cmp	r1, r2
 800d554:	d043      	beq.n	800d5de <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d556:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d55a:	4b47      	ldr	r3, [pc, #284]	; (800d678 <xPortStartScheduler+0x130>)
 800d55c:	429a      	cmp	r2, r3
 800d55e:	d035      	beq.n	800d5cc <xPortStartScheduler+0x84>
{
 800d560:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d562:	4b46      	ldr	r3, [pc, #280]	; (800d67c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d564:	4846      	ldr	r0, [pc, #280]	; (800d680 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d566:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d568:	4c46      	ldr	r4, [pc, #280]	; (800d684 <xPortStartScheduler+0x13c>)
{
 800d56a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d56c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d56e:	b2d2      	uxtb	r2, r2
 800d570:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d572:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d574:	781b      	ldrb	r3, [r3, #0]
 800d576:	b2db      	uxtb	r3, r3
 800d578:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d57c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d580:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d584:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d588:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d58a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d58c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d58e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d590:	bf48      	it	mi
 800d592:	2206      	movmi	r2, #6
 800d594:	d511      	bpl.n	800d5ba <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d596:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d59a:	005b      	lsls	r3, r3, #1
 800d59c:	b2db      	uxtb	r3, r3
 800d59e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d5a2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d5a6:	0609      	lsls	r1, r1, #24
 800d5a8:	4610      	mov	r0, r2
 800d5aa:	f102 32ff 	add.w	r2, r2, #4294967295
 800d5ae:	d4f2      	bmi.n	800d596 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d5b0:	2803      	cmp	r0, #3
 800d5b2:	6020      	str	r0, [r4, #0]
 800d5b4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d5b8:	d01a      	beq.n	800d5f0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d5ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5be:	f383 8811 	msr	BASEPRI, r3
 800d5c2:	f3bf 8f6f 	isb	sy
 800d5c6:	f3bf 8f4f 	dsb	sy
 800d5ca:	e7fe      	b.n	800d5ca <xPortStartScheduler+0x82>
 800d5cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5d0:	f383 8811 	msr	BASEPRI, r3
 800d5d4:	f3bf 8f6f 	isb	sy
 800d5d8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d5dc:	e7fe      	b.n	800d5dc <xPortStartScheduler+0x94>
 800d5de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5e2:	f383 8811 	msr	BASEPRI, r3
 800d5e6:	f3bf 8f6f 	isb	sy
 800d5ea:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d5ee:	e7fe      	b.n	800d5ee <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d5f0:	9b02      	ldr	r3, [sp, #8]
 800d5f2:	4a22      	ldr	r2, [pc, #136]	; (800d67c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d5f4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d5f8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d5fc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d5fe:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d600:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d602:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d606:	4c20      	ldr	r4, [pc, #128]	; (800d688 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d608:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d60c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d610:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d614:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d618:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d61c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d61e:	f7ff ff7f 	bl	800d520 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d622:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d624:	f7ff fea8 	bl	800d378 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d628:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d62c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d630:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d634:	f7ff fe8c 	bl	800d350 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d638:	f001 fc98 	bl	800ef6c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d63c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d63e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d640:	3301      	adds	r3, #1
 800d642:	d008      	beq.n	800d656 <xPortStartScheduler+0x10e>
 800d644:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d648:	f383 8811 	msr	BASEPRI, r3
 800d64c:	f3bf 8f6f 	isb	sy
 800d650:	f3bf 8f4f 	dsb	sy
 800d654:	e7fe      	b.n	800d654 <xPortStartScheduler+0x10c>
 800d656:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d65a:	f383 8811 	msr	BASEPRI, r3
 800d65e:	f3bf 8f6f 	isb	sy
 800d662:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d666:	9b03      	ldr	r3, [sp, #12]
 800d668:	2b00      	cmp	r3, #0
 800d66a:	d0fc      	beq.n	800d666 <xPortStartScheduler+0x11e>
}
 800d66c:	2000      	movs	r0, #0
 800d66e:	b004      	add	sp, #16
 800d670:	bd70      	pop	{r4, r5, r6, pc}
 800d672:	bf00      	nop
 800d674:	410fc271 	.word	0x410fc271
 800d678:	410fc270 	.word	0x410fc270
 800d67c:	e000e400 	.word	0xe000e400
 800d680:	200127dc 	.word	0x200127dc
 800d684:	200127e0 	.word	0x200127e0
 800d688:	20000084 	.word	0x20000084

0800d68c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d68c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d690:	2b0f      	cmp	r3, #15
 800d692:	d90e      	bls.n	800d6b2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d694:	4911      	ldr	r1, [pc, #68]	; (800d6dc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d696:	4a12      	ldr	r2, [pc, #72]	; (800d6e0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d698:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d69a:	7812      	ldrb	r2, [r2, #0]
 800d69c:	429a      	cmp	r2, r3
 800d69e:	d908      	bls.n	800d6b2 <vPortValidateInterruptPriority+0x26>
 800d6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6a4:	f383 8811 	msr	BASEPRI, r3
 800d6a8:	f3bf 8f6f 	isb	sy
 800d6ac:	f3bf 8f4f 	dsb	sy
 800d6b0:	e7fe      	b.n	800d6b0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d6b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d6b6:	4a0b      	ldr	r2, [pc, #44]	; (800d6e4 <vPortValidateInterruptPriority+0x58>)
 800d6b8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d6bc:	6812      	ldr	r2, [r2, #0]
 800d6be:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d6c2:	4293      	cmp	r3, r2
 800d6c4:	d908      	bls.n	800d6d8 <vPortValidateInterruptPriority+0x4c>
 800d6c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ca:	f383 8811 	msr	BASEPRI, r3
 800d6ce:	f3bf 8f6f 	isb	sy
 800d6d2:	f3bf 8f4f 	dsb	sy
 800d6d6:	e7fe      	b.n	800d6d6 <vPortValidateInterruptPriority+0x4a>
	}
 800d6d8:	4770      	bx	lr
 800d6da:	bf00      	nop
 800d6dc:	e000e3f0 	.word	0xe000e3f0
 800d6e0:	200127dc 	.word	0x200127dc
 800d6e4:	200127e0 	.word	0x200127e0

0800d6e8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d6e8:	b570      	push	{r4, r5, r6, lr}
 800d6ea:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d6ec:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d6ee:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d6f0:	b920      	cbnz	r0, 800d6fc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d6f2:	6825      	ldr	r5, [r4, #0]
 800d6f4:	b34d      	cbz	r5, 800d74a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d6f6:	3601      	adds	r6, #1
 800d6f8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d6fa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d6fc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d6fe:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d700:	b97d      	cbnz	r5, 800d722 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d702:	6860      	ldr	r0, [r4, #4]
 800d704:	f01c fee9 	bl	802a4da <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d708:	6863      	ldr	r3, [r4, #4]
 800d70a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d70c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d70e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d710:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d712:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d714:	bf24      	itt	cs
 800d716:	6823      	ldrcs	r3, [r4, #0]
 800d718:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d71a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d71c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d71e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d720:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d722:	68e0      	ldr	r0, [r4, #12]
 800d724:	f01c fed9 	bl	802a4da <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d728:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d72a:	68e3      	ldr	r3, [r4, #12]
 800d72c:	4251      	negs	r1, r2
 800d72e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d730:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d732:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d734:	4293      	cmp	r3, r2
 800d736:	d202      	bcs.n	800d73e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d738:	68a3      	ldr	r3, [r4, #8]
 800d73a:	440b      	add	r3, r1
 800d73c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d73e:	2d02      	cmp	r5, #2
 800d740:	d008      	beq.n	800d754 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d742:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d744:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d746:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d748:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d74a:	68a0      	ldr	r0, [r4, #8]
 800d74c:	f001 fde0 	bl	800f310 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d750:	60a5      	str	r5, [r4, #8]
 800d752:	e7d0      	b.n	800d6f6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d754:	2e01      	cmp	r6, #1
 800d756:	bf38      	it	cc
 800d758:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d75a:	2000      	movs	r0, #0
 800d75c:	e7cc      	b.n	800d6f8 <prvCopyDataToQueue+0x10>
 800d75e:	bf00      	nop

0800d760 <xQueueGenericCreateStatic>:
	{
 800d760:	b530      	push	{r4, r5, lr}
 800d762:	b083      	sub	sp, #12
 800d764:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d768:	b940      	cbnz	r0, 800d77c <xQueueGenericCreateStatic+0x1c>
 800d76a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d76e:	f383 8811 	msr	BASEPRI, r3
 800d772:	f3bf 8f6f 	isb	sy
 800d776:	f3bf 8f4f 	dsb	sy
 800d77a:	e7fe      	b.n	800d77a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d77c:	461d      	mov	r5, r3
 800d77e:	b17b      	cbz	r3, 800d7a0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d780:	b302      	cbz	r2, 800d7c4 <xQueueGenericCreateStatic+0x64>
 800d782:	b1b1      	cbz	r1, 800d7b2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d784:	2350      	movs	r3, #80	; 0x50
 800d786:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d788:	9b01      	ldr	r3, [sp, #4]
 800d78a:	2b50      	cmp	r3, #80	; 0x50
 800d78c:	d023      	beq.n	800d7d6 <xQueueGenericCreateStatic+0x76>
 800d78e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d792:	f383 8811 	msr	BASEPRI, r3
 800d796:	f3bf 8f6f 	isb	sy
 800d79a:	f3bf 8f4f 	dsb	sy
 800d79e:	e7fe      	b.n	800d79e <xQueueGenericCreateStatic+0x3e>
 800d7a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7a4:	f383 8811 	msr	BASEPRI, r3
 800d7a8:	f3bf 8f6f 	isb	sy
 800d7ac:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d7b0:	e7fe      	b.n	800d7b0 <xQueueGenericCreateStatic+0x50>
 800d7b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7b6:	f383 8811 	msr	BASEPRI, r3
 800d7ba:	f3bf 8f6f 	isb	sy
 800d7be:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d7c2:	e7fe      	b.n	800d7c2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d7c4:	bb89      	cbnz	r1, 800d82a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d7c6:	2250      	movs	r2, #80	; 0x50
 800d7c8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d7ca:	9a01      	ldr	r2, [sp, #4]
 800d7cc:	2a50      	cmp	r2, #80	; 0x50
 800d7ce:	d1de      	bne.n	800d78e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d7d0:	9a01      	ldr	r2, [sp, #4]
 800d7d2:	462a      	mov	r2, r5
 800d7d4:	e000      	b.n	800d7d8 <xQueueGenericCreateStatic+0x78>
 800d7d6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d7d8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d7da:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d7dc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d7e0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d7e4:	f7ff fe1e 	bl	800d424 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7e8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d7ec:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d7ee:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7f0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7f4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7f6:	4401      	add	r1, r0
 800d7f8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7fa:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7fc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7fe:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d800:	21ff      	movs	r1, #255	; 0xff
 800d802:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d806:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d808:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d80c:	f105 0010 	add.w	r0, r5, #16
 800d810:	f7ff fd52 	bl	800d2b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d814:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d818:	f7ff fd4e 	bl	800d2b8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d81c:	f7ff fe24 	bl	800d468 <vPortExitCritical>
	}
 800d820:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d822:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d826:	b003      	add	sp, #12
 800d828:	bd30      	pop	{r4, r5, pc}
 800d82a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d82e:	f383 8811 	msr	BASEPRI, r3
 800d832:	f3bf 8f6f 	isb	sy
 800d836:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d83a:	e7fe      	b.n	800d83a <xQueueGenericCreateStatic+0xda>

0800d83c <xQueueGenericCreate>:
	{
 800d83c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d83e:	b940      	cbnz	r0, 800d852 <xQueueGenericCreate+0x16>
 800d840:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d844:	f383 8811 	msr	BASEPRI, r3
 800d848:	f3bf 8f6f 	isb	sy
 800d84c:	f3bf 8f4f 	dsb	sy
 800d850:	e7fe      	b.n	800d850 <xQueueGenericCreate+0x14>
 800d852:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d854:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d858:	3050      	adds	r0, #80	; 0x50
 800d85a:	460e      	mov	r6, r1
 800d85c:	4617      	mov	r7, r2
 800d85e:	f7ff fc0b 	bl	800d078 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d862:	4604      	mov	r4, r0
 800d864:	b340      	cbz	r0, 800d8b8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d866:	2300      	movs	r3, #0
 800d868:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d86c:	b336      	cbz	r6, 800d8bc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d86e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d872:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d874:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d878:	f7ff fdd4 	bl	800d424 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d87c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d880:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d882:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d884:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d888:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d88a:	440a      	add	r2, r1
 800d88c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d88e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d890:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d892:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d894:	22ff      	movs	r2, #255	; 0xff
 800d896:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d89a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d89c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d8a0:	f104 0010 	add.w	r0, r4, #16
 800d8a4:	f7ff fd08 	bl	800d2b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d8a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d8ac:	f7ff fd04 	bl	800d2b8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d8b0:	f7ff fdda 	bl	800d468 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d8b4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d8b8:	4620      	mov	r0, r4
 800d8ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8bc:	4603      	mov	r3, r0
 800d8be:	e7d8      	b.n	800d872 <xQueueGenericCreate+0x36>

0800d8c0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d8c0:	b940      	cbnz	r0, 800d8d4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d8c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8c6:	f383 8811 	msr	BASEPRI, r3
 800d8ca:	f3bf 8f6f 	isb	sy
 800d8ce:	f3bf 8f4f 	dsb	sy
 800d8d2:	e7fe      	b.n	800d8d2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d8d4:	4288      	cmp	r0, r1
 800d8d6:	d208      	bcs.n	800d8ea <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d8d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8dc:	f383 8811 	msr	BASEPRI, r3
 800d8e0:	f3bf 8f6f 	isb	sy
 800d8e4:	f3bf 8f4f 	dsb	sy
 800d8e8:	e7fe      	b.n	800d8e8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d8ea:	b530      	push	{r4, r5, lr}
 800d8ec:	4615      	mov	r5, r2
 800d8ee:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d8f0:	2a00      	cmp	r2, #0
 800d8f2:	d03c      	beq.n	800d96e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d8f4:	2350      	movs	r3, #80	; 0x50
 800d8f6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d8f8:	9b03      	ldr	r3, [sp, #12]
 800d8fa:	2b50      	cmp	r3, #80	; 0x50
 800d8fc:	d008      	beq.n	800d910 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d8fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d902:	f383 8811 	msr	BASEPRI, r3
 800d906:	f3bf 8f6f 	isb	sy
 800d90a:	f3bf 8f4f 	dsb	sy
 800d90e:	e7fe      	b.n	800d90e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d910:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d912:	2301      	movs	r3, #1
 800d914:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d918:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d91a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d91e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d920:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d922:	f7ff fd7f 	bl	800d424 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d926:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d92a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d92c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d92e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d932:	1ac3      	subs	r3, r0, r3
 800d934:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d936:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d938:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d93c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d940:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d942:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d944:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d948:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d94a:	f105 0010 	add.w	r0, r5, #16
 800d94e:	f7ff fcb3 	bl	800d2b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d952:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d956:	f7ff fcaf 	bl	800d2b8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d95a:	f7ff fd85 	bl	800d468 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d95e:	9901      	ldr	r1, [sp, #4]
 800d960:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d962:	2302      	movs	r3, #2
	}
 800d964:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d966:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d96a:	b005      	add	sp, #20
 800d96c:	bd30      	pop	{r4, r5, pc}
 800d96e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d972:	f383 8811 	msr	BASEPRI, r3
 800d976:	f3bf 8f6f 	isb	sy
 800d97a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d97e:	e7fe      	b.n	800d97e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d980 <xQueueCreateCountingSemaphore>:
	{
 800d980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d982:	b940      	cbnz	r0, 800d996 <xQueueCreateCountingSemaphore+0x16>
 800d984:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d988:	f383 8811 	msr	BASEPRI, r3
 800d98c:	f3bf 8f6f 	isb	sy
 800d990:	f3bf 8f4f 	dsb	sy
 800d994:	e7fe      	b.n	800d994 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d996:	4288      	cmp	r0, r1
 800d998:	460e      	mov	r6, r1
 800d99a:	4604      	mov	r4, r0
 800d99c:	d208      	bcs.n	800d9b0 <xQueueCreateCountingSemaphore+0x30>
 800d99e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9a2:	f383 8811 	msr	BASEPRI, r3
 800d9a6:	f3bf 8f6f 	isb	sy
 800d9aa:	f3bf 8f4f 	dsb	sy
 800d9ae:	e7fe      	b.n	800d9ae <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d9b0:	2050      	movs	r0, #80	; 0x50
 800d9b2:	f7ff fb61 	bl	800d078 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d9b6:	4605      	mov	r5, r0
 800d9b8:	b330      	cbz	r0, 800da08 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d9ba:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d9bc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d9c0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d9c4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d9c6:	f7ff fd2d 	bl	800d424 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9ca:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d9ce:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9d0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9d2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9d6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9d8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9da:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9dc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d9de:	22ff      	movs	r2, #255	; 0xff
 800d9e0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9e4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d9e6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d9e8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d9ec:	f105 0010 	add.w	r0, r5, #16
 800d9f0:	f7ff fc62 	bl	800d2b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d9f4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d9f8:	f7ff fc5e 	bl	800d2b8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d9fc:	f7ff fd34 	bl	800d468 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800da00:	2302      	movs	r3, #2
 800da02:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800da06:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800da08:	4628      	mov	r0, r5
 800da0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800da0c <xQueueGenericSend>:
{
 800da0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da10:	b085      	sub	sp, #20
 800da12:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800da14:	2800      	cmp	r0, #0
 800da16:	f000 80a4 	beq.w	800db62 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da1a:	4688      	mov	r8, r1
 800da1c:	461f      	mov	r7, r3
 800da1e:	4604      	mov	r4, r0
 800da20:	2900      	cmp	r1, #0
 800da22:	f000 8091 	beq.w	800db48 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800da26:	2f02      	cmp	r7, #2
 800da28:	d10b      	bne.n	800da42 <xQueueGenericSend+0x36>
 800da2a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da2c:	2b01      	cmp	r3, #1
 800da2e:	d008      	beq.n	800da42 <xQueueGenericSend+0x36>
 800da30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da34:	f383 8811 	msr	BASEPRI, r3
 800da38:	f3bf 8f6f 	isb	sy
 800da3c:	f3bf 8f4f 	dsb	sy
 800da40:	e7fe      	b.n	800da40 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da42:	f001 fc0f 	bl	800f264 <xTaskGetSchedulerState>
 800da46:	4605      	mov	r5, r0
 800da48:	2800      	cmp	r0, #0
 800da4a:	f000 8093 	beq.w	800db74 <xQueueGenericSend+0x168>
 800da4e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da50:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800da54:	f7ff fce6 	bl	800d424 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800da58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da5c:	429a      	cmp	r2, r3
 800da5e:	f0c0 80ef 	bcc.w	800dc40 <xQueueGenericSend+0x234>
 800da62:	2f02      	cmp	r7, #2
 800da64:	f000 80ec 	beq.w	800dc40 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800da68:	9801      	ldr	r0, [sp, #4]
 800da6a:	2800      	cmp	r0, #0
 800da6c:	f000 8101 	beq.w	800dc72 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800da70:	2d00      	cmp	r5, #0
 800da72:	f000 80e1 	beq.w	800dc38 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800da76:	f7ff fcf7 	bl	800d468 <vPortExitCritical>
		vTaskSuspendAll();
 800da7a:	f001 fa49 	bl	800ef10 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800da7e:	f7ff fcd1 	bl	800d424 <vPortEnterCritical>
 800da82:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da86:	2bff      	cmp	r3, #255	; 0xff
 800da88:	bf04      	itt	eq
 800da8a:	2300      	moveq	r3, #0
 800da8c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800da90:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da94:	2bff      	cmp	r3, #255	; 0xff
 800da96:	bf04      	itt	eq
 800da98:	2300      	moveq	r3, #0
 800da9a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800da9e:	f7ff fce3 	bl	800d468 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800daa2:	a901      	add	r1, sp, #4
 800daa4:	a802      	add	r0, sp, #8
 800daa6:	f001 fb8f 	bl	800f1c8 <xTaskCheckForTimeOut>
 800daaa:	2800      	cmp	r0, #0
 800daac:	f040 80e6 	bne.w	800dc7c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dab0:	f7ff fcb8 	bl	800d424 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dab4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dab6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dab8:	429a      	cmp	r2, r3
 800daba:	d068      	beq.n	800db8e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dabc:	f7ff fcd4 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dac0:	f7ff fcb0 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dac4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800dac8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daca:	2d00      	cmp	r5, #0
 800dacc:	dc04      	bgt.n	800dad8 <xQueueGenericSend+0xcc>
 800dace:	e011      	b.n	800daf4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800dad0:	1e6a      	subs	r2, r5, #1
 800dad2:	b2d3      	uxtb	r3, r2
 800dad4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dad6:	b16b      	cbz	r3, 800daf4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dad8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dada:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dadc:	b153      	cbz	r3, 800daf4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dade:	f001 fb1f 	bl	800f120 <xTaskRemoveFromEventList>
 800dae2:	2800      	cmp	r0, #0
 800dae4:	d0f4      	beq.n	800dad0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800dae6:	f001 fbb7 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800daea:	1e6a      	subs	r2, r5, #1
 800daec:	b2d3      	uxtb	r3, r2
 800daee:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	d1f1      	bne.n	800dad8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800daf4:	23ff      	movs	r3, #255	; 0xff
 800daf6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dafa:	f7ff fcb5 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dafe:	f7ff fc91 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db02:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800db06:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db08:	2d00      	cmp	r5, #0
 800db0a:	dd14      	ble.n	800db36 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db0c:	f104 0910 	add.w	r9, r4, #16
 800db10:	e003      	b.n	800db1a <xQueueGenericSend+0x10e>
				--cRxLock;
 800db12:	1e6a      	subs	r2, r5, #1
 800db14:	b2d3      	uxtb	r3, r2
 800db16:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db18:	b16b      	cbz	r3, 800db36 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db1a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db1c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db1e:	b153      	cbz	r3, 800db36 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db20:	f001 fafe 	bl	800f120 <xTaskRemoveFromEventList>
 800db24:	2800      	cmp	r0, #0
 800db26:	d0f4      	beq.n	800db12 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800db28:	f001 fb96 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800db2c:	1e6a      	subs	r2, r5, #1
 800db2e:	b2d3      	uxtb	r3, r2
 800db30:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db32:	2b00      	cmp	r3, #0
 800db34:	d1f1      	bne.n	800db1a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800db36:	23ff      	movs	r3, #255	; 0xff
 800db38:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db3c:	f7ff fc94 	bl	800d468 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800db40:	f001 f9ee 	bl	800ef20 <xTaskResumeAll>
 800db44:	2501      	movs	r5, #1
 800db46:	e785      	b.n	800da54 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db48:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800db4a:	2b00      	cmp	r3, #0
 800db4c:	f43f af6b 	beq.w	800da26 <xQueueGenericSend+0x1a>
 800db50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db54:	f383 8811 	msr	BASEPRI, r3
 800db58:	f3bf 8f6f 	isb	sy
 800db5c:	f3bf 8f4f 	dsb	sy
 800db60:	e7fe      	b.n	800db60 <xQueueGenericSend+0x154>
 800db62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db66:	f383 8811 	msr	BASEPRI, r3
 800db6a:	f3bf 8f6f 	isb	sy
 800db6e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800db72:	e7fe      	b.n	800db72 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800db74:	9b01      	ldr	r3, [sp, #4]
 800db76:	2b00      	cmp	r3, #0
 800db78:	f43f af6a 	beq.w	800da50 <xQueueGenericSend+0x44>
 800db7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db80:	f383 8811 	msr	BASEPRI, r3
 800db84:	f3bf 8f6f 	isb	sy
 800db88:	f3bf 8f4f 	dsb	sy
 800db8c:	e7fe      	b.n	800db8c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800db8e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800db92:	f7ff fc69 	bl	800d468 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800db96:	9901      	ldr	r1, [sp, #4]
 800db98:	4648      	mov	r0, r9
 800db9a:	f001 fa33 	bl	800f004 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800db9e:	f7ff fc41 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dba2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dba6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dba8:	2d00      	cmp	r5, #0
 800dbaa:	dc04      	bgt.n	800dbb6 <xQueueGenericSend+0x1aa>
 800dbac:	e011      	b.n	800dbd2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800dbae:	1e6b      	subs	r3, r5, #1
 800dbb0:	b2da      	uxtb	r2, r3
 800dbb2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbb4:	b16a      	cbz	r2, 800dbd2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbb8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbba:	b153      	cbz	r3, 800dbd2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbbc:	f001 fab0 	bl	800f120 <xTaskRemoveFromEventList>
 800dbc0:	2800      	cmp	r0, #0
 800dbc2:	d0f4      	beq.n	800dbae <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800dbc4:	f001 fb48 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800dbc8:	1e6b      	subs	r3, r5, #1
 800dbca:	b2da      	uxtb	r2, r3
 800dbcc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbce:	2a00      	cmp	r2, #0
 800dbd0:	d1f1      	bne.n	800dbb6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800dbd2:	23ff      	movs	r3, #255	; 0xff
 800dbd4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dbd8:	f7ff fc46 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dbdc:	f7ff fc22 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dbe0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dbe4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbe6:	2d00      	cmp	r5, #0
 800dbe8:	dc04      	bgt.n	800dbf4 <xQueueGenericSend+0x1e8>
 800dbea:	e011      	b.n	800dc10 <xQueueGenericSend+0x204>
				--cRxLock;
 800dbec:	1e6b      	subs	r3, r5, #1
 800dbee:	b2da      	uxtb	r2, r3
 800dbf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbf2:	b16a      	cbz	r2, 800dc10 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dbf4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbf6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dbf8:	b153      	cbz	r3, 800dc10 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbfa:	f001 fa91 	bl	800f120 <xTaskRemoveFromEventList>
 800dbfe:	2800      	cmp	r0, #0
 800dc00:	d0f4      	beq.n	800dbec <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800dc02:	f001 fb29 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800dc06:	1e6b      	subs	r3, r5, #1
 800dc08:	b2da      	uxtb	r2, r3
 800dc0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc0c:	2a00      	cmp	r2, #0
 800dc0e:	d1f1      	bne.n	800dbf4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc10:	23ff      	movs	r3, #255	; 0xff
 800dc12:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc16:	f7ff fc27 	bl	800d468 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dc1a:	f001 f981 	bl	800ef20 <xTaskResumeAll>
 800dc1e:	2800      	cmp	r0, #0
 800dc20:	d190      	bne.n	800db44 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800dc22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc2e:	f3bf 8f4f 	dsb	sy
 800dc32:	f3bf 8f6f 	isb	sy
 800dc36:	e785      	b.n	800db44 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc38:	a802      	add	r0, sp, #8
 800dc3a:	f001 fab9 	bl	800f1b0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dc3e:	e71a      	b.n	800da76 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc40:	463a      	mov	r2, r7
 800dc42:	4641      	mov	r1, r8
 800dc44:	4620      	mov	r0, r4
 800dc46:	f7ff fd4f 	bl	800d6e8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc4c:	2b00      	cmp	r3, #0
 800dc4e:	d153      	bne.n	800dcf8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800dc50:	b148      	cbz	r0, 800dc66 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800dc52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc5e:	f3bf 8f4f 	dsb	sy
 800dc62:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dc66:	f7ff fbff 	bl	800d468 <vPortExitCritical>
				return pdPASS;
 800dc6a:	2001      	movs	r0, #1
}
 800dc6c:	b005      	add	sp, #20
 800dc6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc72:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800dc74:	f7ff fbf8 	bl	800d468 <vPortExitCritical>
					return errQUEUE_FULL;
 800dc78:	9800      	ldr	r0, [sp, #0]
 800dc7a:	e7f7      	b.n	800dc6c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800dc7c:	f7ff fbd2 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dc80:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc86:	2d00      	cmp	r5, #0
 800dc88:	dd10      	ble.n	800dcac <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc8a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800dc8e:	e003      	b.n	800dc98 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dc90:	1e6b      	subs	r3, r5, #1
 800dc92:	b2da      	uxtb	r2, r3
 800dc94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc96:	b14a      	cbz	r2, 800dcac <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc98:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc9a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc9c:	b133      	cbz	r3, 800dcac <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc9e:	f001 fa3f 	bl	800f120 <xTaskRemoveFromEventList>
 800dca2:	2800      	cmp	r0, #0
 800dca4:	d0f4      	beq.n	800dc90 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800dca6:	f001 fad7 	bl	800f258 <vTaskMissedYield>
 800dcaa:	e7f1      	b.n	800dc90 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcac:	23ff      	movs	r3, #255	; 0xff
 800dcae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcb2:	f7ff fbd9 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcb6:	f7ff fbb5 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcbe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcc0:	2d00      	cmp	r5, #0
 800dcc2:	dd10      	ble.n	800dce6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcc4:	f104 0610 	add.w	r6, r4, #16
 800dcc8:	e003      	b.n	800dcd2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800dcca:	1e6b      	subs	r3, r5, #1
 800dccc:	b2da      	uxtb	r2, r3
 800dcce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcd0:	b14a      	cbz	r2, 800dce6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcd2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcd4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcd6:	b133      	cbz	r3, 800dce6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcd8:	f001 fa22 	bl	800f120 <xTaskRemoveFromEventList>
 800dcdc:	2800      	cmp	r0, #0
 800dcde:	d0f4      	beq.n	800dcca <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dce0:	f001 faba 	bl	800f258 <vTaskMissedYield>
 800dce4:	e7f1      	b.n	800dcca <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dce6:	23ff      	movs	r3, #255	; 0xff
 800dce8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dcec:	f7ff fbbc 	bl	800d468 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dcf0:	f001 f916 	bl	800ef20 <xTaskResumeAll>
			return errQUEUE_FULL;
 800dcf4:	2000      	movs	r0, #0
 800dcf6:	e7b9      	b.n	800dc6c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcf8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dcfc:	f001 fa10 	bl	800f120 <xTaskRemoveFromEventList>
 800dd00:	2800      	cmp	r0, #0
 800dd02:	d0b0      	beq.n	800dc66 <xQueueGenericSend+0x25a>
 800dd04:	e7a5      	b.n	800dc52 <xQueueGenericSend+0x246>
 800dd06:	bf00      	nop

0800dd08 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dd08:	2800      	cmp	r0, #0
 800dd0a:	d04b      	beq.n	800dda4 <xQueueGenericSendFromISR+0x9c>
{
 800dd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd10:	460e      	mov	r6, r1
 800dd12:	4617      	mov	r7, r2
 800dd14:	461d      	mov	r5, r3
 800dd16:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd18:	b321      	cbz	r1, 800dd64 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd1a:	2d02      	cmp	r5, #2
 800dd1c:	d10b      	bne.n	800dd36 <xQueueGenericSendFromISR+0x2e>
 800dd1e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd20:	2b01      	cmp	r3, #1
 800dd22:	d008      	beq.n	800dd36 <xQueueGenericSendFromISR+0x2e>
 800dd24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd28:	f383 8811 	msr	BASEPRI, r3
 800dd2c:	f3bf 8f6f 	isb	sy
 800dd30:	f3bf 8f4f 	dsb	sy
 800dd34:	e7fe      	b.n	800dd34 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd36:	f7ff fca9 	bl	800d68c <vPortValidateInterruptPriority>
	__asm volatile
 800dd3a:	f3ef 8811 	mrs	r8, BASEPRI
 800dd3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd42:	f383 8811 	msr	BASEPRI, r3
 800dd46:	f3bf 8f6f 	isb	sy
 800dd4a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd4e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd52:	429a      	cmp	r2, r3
 800dd54:	d312      	bcc.n	800dd7c <xQueueGenericSendFromISR+0x74>
 800dd56:	2d02      	cmp	r5, #2
 800dd58:	d010      	beq.n	800dd7c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dd5a:	2000      	movs	r0, #0
	__asm volatile
 800dd5c:	f388 8811 	msr	BASEPRI, r8
}
 800dd60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd64:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd66:	2b00      	cmp	r3, #0
 800dd68:	d0d7      	beq.n	800dd1a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dd6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd6e:	f383 8811 	msr	BASEPRI, r3
 800dd72:	f3bf 8f6f 	isb	sy
 800dd76:	f3bf 8f4f 	dsb	sy
 800dd7a:	e7fe      	b.n	800dd7a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd7c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd7e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd84:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd86:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd88:	4620      	mov	r0, r4
 800dd8a:	f7ff fcad 	bl	800d6e8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dd8e:	1c6b      	adds	r3, r5, #1
 800dd90:	d011      	beq.n	800ddb6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dd92:	1c6b      	adds	r3, r5, #1
 800dd94:	b25b      	sxtb	r3, r3
 800dd96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800dd9a:	2001      	movs	r0, #1
	__asm volatile
 800dd9c:	f388 8811 	msr	BASEPRI, r8
}
 800dda0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dda4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dda8:	f383 8811 	msr	BASEPRI, r3
 800ddac:	f3bf 8f6f 	isb	sy
 800ddb0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ddb4:	e7fe      	b.n	800ddb4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ddb8:	2b00      	cmp	r3, #0
 800ddba:	d0ee      	beq.n	800dd9a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddbc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ddc0:	f001 f9ae 	bl	800f120 <xTaskRemoveFromEventList>
 800ddc4:	2800      	cmp	r0, #0
 800ddc6:	d0e8      	beq.n	800dd9a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ddc8:	2f00      	cmp	r7, #0
 800ddca:	d0e6      	beq.n	800dd9a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ddcc:	2001      	movs	r0, #1
 800ddce:	6038      	str	r0, [r7, #0]
 800ddd0:	e7c4      	b.n	800dd5c <xQueueGenericSendFromISR+0x54>
 800ddd2:	bf00      	nop

0800ddd4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ddd4:	b370      	cbz	r0, 800de34 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ddd6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ddd8:	b570      	push	{r4, r5, r6, lr}
 800ddda:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dddc:	b143      	cbz	r3, 800ddf0 <xQueueGiveFromISR+0x1c>
 800ddde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dde2:	f383 8811 	msr	BASEPRI, r3
 800dde6:	f3bf 8f6f 	isb	sy
 800ddea:	f3bf 8f4f 	dsb	sy
 800ddee:	e7fe      	b.n	800ddee <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ddf0:	6803      	ldr	r3, [r0, #0]
 800ddf2:	460c      	mov	r4, r1
 800ddf4:	b33b      	cbz	r3, 800de46 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ddf6:	f7ff fc49 	bl	800d68c <vPortValidateInterruptPriority>
	__asm volatile
 800ddfa:	f3ef 8511 	mrs	r5, BASEPRI
 800ddfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de02:	f383 8811 	msr	BASEPRI, r3
 800de06:	f3bf 8f6f 	isb	sy
 800de0a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de0e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800de10:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800de12:	429a      	cmp	r2, r3
 800de14:	d923      	bls.n	800de5e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800de16:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de1a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800de1c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de1e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800de20:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800de22:	d020      	beq.n	800de66 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800de24:	3301      	adds	r3, #1
 800de26:	b25b      	sxtb	r3, r3
 800de28:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800de2c:	2001      	movs	r0, #1
	__asm volatile
 800de2e:	f385 8811 	msr	BASEPRI, r5
}
 800de32:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800de34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de38:	f383 8811 	msr	BASEPRI, r3
 800de3c:	f3bf 8f6f 	isb	sy
 800de40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800de44:	e7fe      	b.n	800de44 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800de46:	6883      	ldr	r3, [r0, #8]
 800de48:	2b00      	cmp	r3, #0
 800de4a:	d0d4      	beq.n	800ddf6 <xQueueGiveFromISR+0x22>
 800de4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de50:	f383 8811 	msr	BASEPRI, r3
 800de54:	f3bf 8f6f 	isb	sy
 800de58:	f3bf 8f4f 	dsb	sy
 800de5c:	e7fe      	b.n	800de5c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800de5e:	2000      	movs	r0, #0
	__asm volatile
 800de60:	f385 8811 	msr	BASEPRI, r5
}
 800de64:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de66:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800de68:	2b00      	cmp	r3, #0
 800de6a:	d0df      	beq.n	800de2c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de6c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800de70:	f001 f956 	bl	800f120 <xTaskRemoveFromEventList>
 800de74:	2800      	cmp	r0, #0
 800de76:	d0d9      	beq.n	800de2c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800de78:	2c00      	cmp	r4, #0
 800de7a:	d0d7      	beq.n	800de2c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800de7c:	2001      	movs	r0, #1
 800de7e:	6020      	str	r0, [r4, #0]
 800de80:	e7ee      	b.n	800de60 <xQueueGiveFromISR+0x8c>
 800de82:	bf00      	nop

0800de84 <xQueueReceive>:
{
 800de84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de88:	b085      	sub	sp, #20
 800de8a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800de8c:	2800      	cmp	r0, #0
 800de8e:	f000 815c 	beq.w	800e14a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de92:	460f      	mov	r7, r1
 800de94:	4604      	mov	r4, r0
 800de96:	2900      	cmp	r1, #0
 800de98:	d079      	beq.n	800df8e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de9a:	f001 f9e3 	bl	800f264 <xTaskGetSchedulerState>
 800de9e:	2800      	cmp	r0, #0
 800dea0:	f000 8081 	beq.w	800dfa6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dea4:	f7ff fabe 	bl	800d424 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dea8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800deaa:	2d00      	cmp	r5, #0
 800deac:	f040 8138 	bne.w	800e120 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800deb0:	9b01      	ldr	r3, [sp, #4]
 800deb2:	2b00      	cmp	r3, #0
 800deb4:	f000 80d5 	beq.w	800e062 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800deb8:	a802      	add	r0, sp, #8
 800deba:	f001 f979 	bl	800f1b0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800debe:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dec0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dec4:	f7ff fad0 	bl	800d468 <vPortExitCritical>
		vTaskSuspendAll();
 800dec8:	f001 f822 	bl	800ef10 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800decc:	f7ff faaa 	bl	800d424 <vPortEnterCritical>
 800ded0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ded4:	2bff      	cmp	r3, #255	; 0xff
 800ded6:	bf08      	it	eq
 800ded8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dedc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dee0:	2bff      	cmp	r3, #255	; 0xff
 800dee2:	bf08      	it	eq
 800dee4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dee8:	f7ff fabe 	bl	800d468 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800deec:	a901      	add	r1, sp, #4
 800deee:	a802      	add	r0, sp, #8
 800def0:	f001 f96a 	bl	800f1c8 <xTaskCheckForTimeOut>
 800def4:	2800      	cmp	r0, #0
 800def6:	d163      	bne.n	800dfc0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800def8:	f7ff fa94 	bl	800d424 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800defc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800defe:	2b00      	cmp	r3, #0
 800df00:	f000 80b5 	beq.w	800e06e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800df04:	f7ff fab0 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df08:	f7ff fa8c 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df0c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df10:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df12:	2d00      	cmp	r5, #0
 800df14:	dc04      	bgt.n	800df20 <xQueueReceive+0x9c>
 800df16:	e011      	b.n	800df3c <xQueueReceive+0xb8>
			--cTxLock;
 800df18:	1e6b      	subs	r3, r5, #1
 800df1a:	b2da      	uxtb	r2, r3
 800df1c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df1e:	b16a      	cbz	r2, 800df3c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df20:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df22:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df24:	b153      	cbz	r3, 800df3c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df26:	f001 f8fb 	bl	800f120 <xTaskRemoveFromEventList>
 800df2a:	2800      	cmp	r0, #0
 800df2c:	d0f4      	beq.n	800df18 <xQueueReceive+0x94>
						vTaskMissedYield();
 800df2e:	f001 f993 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800df32:	1e6b      	subs	r3, r5, #1
 800df34:	b2da      	uxtb	r2, r3
 800df36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df38:	2a00      	cmp	r2, #0
 800df3a:	d1f1      	bne.n	800df20 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800df3c:	23ff      	movs	r3, #255	; 0xff
 800df3e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df42:	f7ff fa91 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df46:	f7ff fa6d 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df4a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df4e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df50:	2d00      	cmp	r5, #0
 800df52:	dd14      	ble.n	800df7e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df54:	f104 0910 	add.w	r9, r4, #16
 800df58:	e003      	b.n	800df62 <xQueueReceive+0xde>
				--cRxLock;
 800df5a:	1e6b      	subs	r3, r5, #1
 800df5c:	b2da      	uxtb	r2, r3
 800df5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df60:	b16a      	cbz	r2, 800df7e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df62:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df64:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df66:	b153      	cbz	r3, 800df7e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df68:	f001 f8da 	bl	800f120 <xTaskRemoveFromEventList>
 800df6c:	2800      	cmp	r0, #0
 800df6e:	d0f4      	beq.n	800df5a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800df70:	f001 f972 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800df74:	1e6b      	subs	r3, r5, #1
 800df76:	b2da      	uxtb	r2, r3
 800df78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df7a:	2a00      	cmp	r2, #0
 800df7c:	d1f1      	bne.n	800df62 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800df7e:	23ff      	movs	r3, #255	; 0xff
 800df80:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df84:	f7ff fa70 	bl	800d468 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800df88:	f000 ffca 	bl	800ef20 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800df8c:	e060      	b.n	800e050 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df8e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800df90:	2b00      	cmp	r3, #0
 800df92:	d082      	beq.n	800de9a <xQueueReceive+0x16>
	__asm volatile
 800df94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df98:	f383 8811 	msr	BASEPRI, r3
 800df9c:	f3bf 8f6f 	isb	sy
 800dfa0:	f3bf 8f4f 	dsb	sy
 800dfa4:	e7fe      	b.n	800dfa4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dfa6:	9b01      	ldr	r3, [sp, #4]
 800dfa8:	2b00      	cmp	r3, #0
 800dfaa:	f43f af7b 	beq.w	800dea4 <xQueueReceive+0x20>
 800dfae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb2:	f383 8811 	msr	BASEPRI, r3
 800dfb6:	f3bf 8f6f 	isb	sy
 800dfba:	f3bf 8f4f 	dsb	sy
 800dfbe:	e7fe      	b.n	800dfbe <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800dfc0:	f7ff fa30 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dfc4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dfc8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfca:	2d00      	cmp	r5, #0
 800dfcc:	dc04      	bgt.n	800dfd8 <xQueueReceive+0x154>
 800dfce:	e011      	b.n	800dff4 <xQueueReceive+0x170>
			--cTxLock;
 800dfd0:	1e6b      	subs	r3, r5, #1
 800dfd2:	b2da      	uxtb	r2, r3
 800dfd4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfd6:	b16a      	cbz	r2, 800dff4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfda:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfdc:	b153      	cbz	r3, 800dff4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfde:	f001 f89f 	bl	800f120 <xTaskRemoveFromEventList>
 800dfe2:	2800      	cmp	r0, #0
 800dfe4:	d0f4      	beq.n	800dfd0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800dfe6:	f001 f937 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800dfea:	1e6b      	subs	r3, r5, #1
 800dfec:	b2da      	uxtb	r2, r3
 800dfee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dff0:	2a00      	cmp	r2, #0
 800dff2:	d1f1      	bne.n	800dfd8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800dff4:	23ff      	movs	r3, #255	; 0xff
 800dff6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dffa:	f7ff fa35 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dffe:	f7ff fa11 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e002:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e006:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e008:	2d00      	cmp	r5, #0
 800e00a:	dd14      	ble.n	800e036 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e00c:	f104 0910 	add.w	r9, r4, #16
 800e010:	e003      	b.n	800e01a <xQueueReceive+0x196>
				--cRxLock;
 800e012:	1e6b      	subs	r3, r5, #1
 800e014:	b2da      	uxtb	r2, r3
 800e016:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e018:	b16a      	cbz	r2, 800e036 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e01a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e01c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e01e:	b153      	cbz	r3, 800e036 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e020:	f001 f87e 	bl	800f120 <xTaskRemoveFromEventList>
 800e024:	2800      	cmp	r0, #0
 800e026:	d0f4      	beq.n	800e012 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e028:	f001 f916 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800e02c:	1e6b      	subs	r3, r5, #1
 800e02e:	b2da      	uxtb	r2, r3
 800e030:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e032:	2a00      	cmp	r2, #0
 800e034:	d1f1      	bne.n	800e01a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e036:	23ff      	movs	r3, #255	; 0xff
 800e038:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e03c:	f7ff fa14 	bl	800d468 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e040:	f000 ff6e 	bl	800ef20 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e044:	f7ff f9ee 	bl	800d424 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e048:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e04a:	b153      	cbz	r3, 800e062 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e04c:	f7ff fa0c 	bl	800d468 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e050:	f7ff f9e8 	bl	800d424 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e054:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e056:	2d00      	cmp	r5, #0
 800e058:	d162      	bne.n	800e120 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e05a:	9b01      	ldr	r3, [sp, #4]
 800e05c:	2b00      	cmp	r3, #0
 800e05e:	f47f af31 	bne.w	800dec4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e062:	f7ff fa01 	bl	800d468 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e066:	2000      	movs	r0, #0
}
 800e068:	b005      	add	sp, #20
 800e06a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e06e:	f7ff f9fb 	bl	800d468 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e072:	9901      	ldr	r1, [sp, #4]
 800e074:	4630      	mov	r0, r6
 800e076:	f000 ffc5 	bl	800f004 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e07a:	f7ff f9d3 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e07e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e082:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e084:	2d00      	cmp	r5, #0
 800e086:	dc04      	bgt.n	800e092 <xQueueReceive+0x20e>
 800e088:	e011      	b.n	800e0ae <xQueueReceive+0x22a>
			--cTxLock;
 800e08a:	1e6b      	subs	r3, r5, #1
 800e08c:	b2da      	uxtb	r2, r3
 800e08e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e090:	b16a      	cbz	r2, 800e0ae <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e092:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e094:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e096:	b153      	cbz	r3, 800e0ae <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e098:	f001 f842 	bl	800f120 <xTaskRemoveFromEventList>
 800e09c:	2800      	cmp	r0, #0
 800e09e:	d0f4      	beq.n	800e08a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e0a0:	f001 f8da 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800e0a4:	1e6b      	subs	r3, r5, #1
 800e0a6:	b2da      	uxtb	r2, r3
 800e0a8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0aa:	2a00      	cmp	r2, #0
 800e0ac:	d1f1      	bne.n	800e092 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0ae:	23ff      	movs	r3, #255	; 0xff
 800e0b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e0b4:	f7ff f9d8 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0b8:	f7ff f9b4 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e0bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0c2:	2d00      	cmp	r5, #0
 800e0c4:	dd14      	ble.n	800e0f0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0c6:	f104 0910 	add.w	r9, r4, #16
 800e0ca:	e003      	b.n	800e0d4 <xQueueReceive+0x250>
				--cRxLock;
 800e0cc:	1e6b      	subs	r3, r5, #1
 800e0ce:	b2da      	uxtb	r2, r3
 800e0d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0d2:	b16a      	cbz	r2, 800e0f0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0d4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0d6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0d8:	b153      	cbz	r3, 800e0f0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0da:	f001 f821 	bl	800f120 <xTaskRemoveFromEventList>
 800e0de:	2800      	cmp	r0, #0
 800e0e0:	d0f4      	beq.n	800e0cc <xQueueReceive+0x248>
					vTaskMissedYield();
 800e0e2:	f001 f8b9 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800e0e6:	1e6b      	subs	r3, r5, #1
 800e0e8:	b2da      	uxtb	r2, r3
 800e0ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0ec:	2a00      	cmp	r2, #0
 800e0ee:	d1f1      	bne.n	800e0d4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e0f0:	23ff      	movs	r3, #255	; 0xff
 800e0f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e0f6:	f7ff f9b7 	bl	800d468 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e0fa:	f000 ff11 	bl	800ef20 <xTaskResumeAll>
 800e0fe:	2800      	cmp	r0, #0
 800e100:	d1a6      	bne.n	800e050 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e102:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e106:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e10a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e10e:	f3bf 8f4f 	dsb	sy
 800e112:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e116:	f7ff f985 	bl	800d424 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e11a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e11c:	2d00      	cmp	r5, #0
 800e11e:	d09c      	beq.n	800e05a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e120:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e122:	b152      	cbz	r2, 800e13a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e124:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e126:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e128:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e12a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e12c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e12e:	bf24      	itt	cs
 800e130:	6821      	ldrcs	r1, [r4, #0]
 800e132:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e134:	4638      	mov	r0, r7
 800e136:	f01c f9d0 	bl	802a4da <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e13a:	3d01      	subs	r5, #1
 800e13c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e13e:	6923      	ldr	r3, [r4, #16]
 800e140:	b963      	cbnz	r3, 800e15c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e142:	f7ff f991 	bl	800d468 <vPortExitCritical>
				return pdPASS;
 800e146:	2001      	movs	r0, #1
 800e148:	e78e      	b.n	800e068 <xQueueReceive+0x1e4>
 800e14a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e14e:	f383 8811 	msr	BASEPRI, r3
 800e152:	f3bf 8f6f 	isb	sy
 800e156:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e15a:	e7fe      	b.n	800e15a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e15c:	f104 0010 	add.w	r0, r4, #16
 800e160:	f000 ffde 	bl	800f120 <xTaskRemoveFromEventList>
 800e164:	2800      	cmp	r0, #0
 800e166:	d0ec      	beq.n	800e142 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e168:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e16c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e170:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e174:	f3bf 8f4f 	dsb	sy
 800e178:	f3bf 8f6f 	isb	sy
 800e17c:	e7e1      	b.n	800e142 <xQueueReceive+0x2be>
 800e17e:	bf00      	nop

0800e180 <xQueueSemaphoreTake>:
{
 800e180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e184:	b084      	sub	sp, #16
 800e186:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e188:	2800      	cmp	r0, #0
 800e18a:	d05c      	beq.n	800e246 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e18c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e18e:	4604      	mov	r4, r0
 800e190:	b147      	cbz	r7, 800e1a4 <xQueueSemaphoreTake+0x24>
 800e192:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e196:	f383 8811 	msr	BASEPRI, r3
 800e19a:	f3bf 8f6f 	isb	sy
 800e19e:	f3bf 8f4f 	dsb	sy
 800e1a2:	e7fe      	b.n	800e1a2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e1a4:	f001 f85e 	bl	800f264 <xTaskGetSchedulerState>
 800e1a8:	4605      	mov	r5, r0
 800e1aa:	2800      	cmp	r0, #0
 800e1ac:	d054      	beq.n	800e258 <xQueueSemaphoreTake+0xd8>
 800e1ae:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1b0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e1b4:	f7ff f936 	bl	800d424 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e1b8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	f040 8148 	bne.w	800e450 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e1c0:	9b01      	ldr	r3, [sp, #4]
 800e1c2:	2b00      	cmp	r3, #0
 800e1c4:	f000 813a 	beq.w	800e43c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e1c8:	2d00      	cmp	r5, #0
 800e1ca:	f000 809d 	beq.w	800e308 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e1ce:	f7ff f94b 	bl	800d468 <vPortExitCritical>
		vTaskSuspendAll();
 800e1d2:	f000 fe9d 	bl	800ef10 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e1d6:	f7ff f925 	bl	800d424 <vPortEnterCritical>
 800e1da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1de:	2bff      	cmp	r3, #255	; 0xff
 800e1e0:	bf04      	itt	eq
 800e1e2:	2300      	moveq	r3, #0
 800e1e4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e1e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e1ec:	2bff      	cmp	r3, #255	; 0xff
 800e1ee:	bf04      	itt	eq
 800e1f0:	2300      	moveq	r3, #0
 800e1f2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e1f6:	f7ff f937 	bl	800d468 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e1fa:	a901      	add	r1, sp, #4
 800e1fc:	a802      	add	r0, sp, #8
 800e1fe:	f000 ffe3 	bl	800f1c8 <xTaskCheckForTimeOut>
 800e202:	2800      	cmp	r0, #0
 800e204:	d135      	bne.n	800e272 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e206:	f7ff f90d 	bl	800d424 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e20a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e20c:	2b00      	cmp	r3, #0
 800e20e:	f000 80a4 	beq.w	800e35a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e212:	f7ff f929 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e216:	f7ff f905 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e21a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e21e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e220:	2d00      	cmp	r5, #0
 800e222:	dc05      	bgt.n	800e230 <xQueueSemaphoreTake+0xb0>
 800e224:	e074      	b.n	800e310 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e226:	1e6b      	subs	r3, r5, #1
 800e228:	b2da      	uxtb	r2, r3
 800e22a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e22c:	2a00      	cmp	r2, #0
 800e22e:	d06f      	beq.n	800e310 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e230:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e232:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e234:	2b00      	cmp	r3, #0
 800e236:	d06b      	beq.n	800e310 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e238:	f000 ff72 	bl	800f120 <xTaskRemoveFromEventList>
 800e23c:	2800      	cmp	r0, #0
 800e23e:	d0f2      	beq.n	800e226 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e240:	f001 f80a 	bl	800f258 <vTaskMissedYield>
 800e244:	e7ef      	b.n	800e226 <xQueueSemaphoreTake+0xa6>
 800e246:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e24a:	f383 8811 	msr	BASEPRI, r3
 800e24e:	f3bf 8f6f 	isb	sy
 800e252:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e256:	e7fe      	b.n	800e256 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e258:	9b01      	ldr	r3, [sp, #4]
 800e25a:	2b00      	cmp	r3, #0
 800e25c:	f000 80d4 	beq.w	800e408 <xQueueSemaphoreTake+0x288>
 800e260:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e264:	f383 8811 	msr	BASEPRI, r3
 800e268:	f3bf 8f6f 	isb	sy
 800e26c:	f3bf 8f4f 	dsb	sy
 800e270:	e7fe      	b.n	800e270 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e272:	f7ff f8d7 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e276:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e27a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e27c:	2d00      	cmp	r5, #0
 800e27e:	dc04      	bgt.n	800e28a <xQueueSemaphoreTake+0x10a>
 800e280:	e011      	b.n	800e2a6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e282:	1e6b      	subs	r3, r5, #1
 800e284:	b2da      	uxtb	r2, r3
 800e286:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e288:	b16a      	cbz	r2, 800e2a6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e28a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e28c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e28e:	b153      	cbz	r3, 800e2a6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e290:	f000 ff46 	bl	800f120 <xTaskRemoveFromEventList>
 800e294:	2800      	cmp	r0, #0
 800e296:	d0f4      	beq.n	800e282 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e298:	f000 ffde 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800e29c:	1e6b      	subs	r3, r5, #1
 800e29e:	b2da      	uxtb	r2, r3
 800e2a0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2a2:	2a00      	cmp	r2, #0
 800e2a4:	d1f1      	bne.n	800e28a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2a6:	23ff      	movs	r3, #255	; 0xff
 800e2a8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e2ac:	f7ff f8dc 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2b0:	f7ff f8b8 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e2b4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e2b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2ba:	2d00      	cmp	r5, #0
 800e2bc:	dd14      	ble.n	800e2e8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2be:	f104 0810 	add.w	r8, r4, #16
 800e2c2:	e003      	b.n	800e2cc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e2c4:	1e6b      	subs	r3, r5, #1
 800e2c6:	b2da      	uxtb	r2, r3
 800e2c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2ca:	b16a      	cbz	r2, 800e2e8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2cc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2ce:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2d0:	b153      	cbz	r3, 800e2e8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2d2:	f000 ff25 	bl	800f120 <xTaskRemoveFromEventList>
 800e2d6:	2800      	cmp	r0, #0
 800e2d8:	d0f4      	beq.n	800e2c4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e2da:	f000 ffbd 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800e2de:	1e6b      	subs	r3, r5, #1
 800e2e0:	b2da      	uxtb	r2, r3
 800e2e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2e4:	2a00      	cmp	r2, #0
 800e2e6:	d1f1      	bne.n	800e2cc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e2e8:	23ff      	movs	r3, #255	; 0xff
 800e2ea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e2ee:	f7ff f8bb 	bl	800d468 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e2f2:	f000 fe15 	bl	800ef20 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e2f6:	f7ff f895 	bl	800d424 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e2fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e2fc:	2b00      	cmp	r3, #0
 800e2fe:	d07c      	beq.n	800e3fa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e300:	f7ff f8b2 	bl	800d468 <vPortExitCritical>
	return xReturn;
 800e304:	2501      	movs	r5, #1
 800e306:	e755      	b.n	800e1b4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e308:	a802      	add	r0, sp, #8
 800e30a:	f000 ff51 	bl	800f1b0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e30e:	e75e      	b.n	800e1ce <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e310:	23ff      	movs	r3, #255	; 0xff
 800e312:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e316:	f7ff f8a7 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e31a:	f7ff f883 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e31e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e322:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e324:	2d00      	cmp	r5, #0
 800e326:	dd10      	ble.n	800e34a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e328:	f104 0810 	add.w	r8, r4, #16
 800e32c:	e003      	b.n	800e336 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e32e:	1e6b      	subs	r3, r5, #1
 800e330:	b2da      	uxtb	r2, r3
 800e332:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e334:	b14a      	cbz	r2, 800e34a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e336:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e338:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e33a:	b133      	cbz	r3, 800e34a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e33c:	f000 fef0 	bl	800f120 <xTaskRemoveFromEventList>
 800e340:	2800      	cmp	r0, #0
 800e342:	d0f4      	beq.n	800e32e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e344:	f000 ff88 	bl	800f258 <vTaskMissedYield>
 800e348:	e7f1      	b.n	800e32e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e34a:	23ff      	movs	r3, #255	; 0xff
 800e34c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e350:	f7ff f88a 	bl	800d468 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e354:	f000 fde4 	bl	800ef20 <xTaskResumeAll>
 800e358:	e7d4      	b.n	800e304 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e35a:	f7ff f885 	bl	800d468 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e35e:	6823      	ldr	r3, [r4, #0]
 800e360:	2b00      	cmp	r3, #0
 800e362:	d062      	beq.n	800e42a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e364:	9901      	ldr	r1, [sp, #4]
 800e366:	4630      	mov	r0, r6
 800e368:	f000 fe4c 	bl	800f004 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e36c:	f7ff f85a 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e370:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e374:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e376:	2d00      	cmp	r5, #0
 800e378:	dc04      	bgt.n	800e384 <xQueueSemaphoreTake+0x204>
 800e37a:	e00d      	b.n	800e398 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e37c:	1e6b      	subs	r3, r5, #1
 800e37e:	b2da      	uxtb	r2, r3
 800e380:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e382:	b14a      	cbz	r2, 800e398 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e384:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e386:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e388:	b133      	cbz	r3, 800e398 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e38a:	f000 fec9 	bl	800f120 <xTaskRemoveFromEventList>
 800e38e:	2800      	cmp	r0, #0
 800e390:	d0f4      	beq.n	800e37c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e392:	f000 ff61 	bl	800f258 <vTaskMissedYield>
 800e396:	e7f1      	b.n	800e37c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e398:	23ff      	movs	r3, #255	; 0xff
 800e39a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e39e:	f7ff f863 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3a2:	f7ff f83f 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3a6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3ac:	2d00      	cmp	r5, #0
 800e3ae:	dd10      	ble.n	800e3d2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3b0:	f104 0810 	add.w	r8, r4, #16
 800e3b4:	e003      	b.n	800e3be <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e3b6:	1e6b      	subs	r3, r5, #1
 800e3b8:	b2da      	uxtb	r2, r3
 800e3ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3bc:	b14a      	cbz	r2, 800e3d2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3be:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3c0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3c2:	b133      	cbz	r3, 800e3d2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3c4:	f000 feac 	bl	800f120 <xTaskRemoveFromEventList>
 800e3c8:	2800      	cmp	r0, #0
 800e3ca:	d0f4      	beq.n	800e3b6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e3cc:	f000 ff44 	bl	800f258 <vTaskMissedYield>
 800e3d0:	e7f1      	b.n	800e3b6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e3d2:	23ff      	movs	r3, #255	; 0xff
 800e3d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e3d8:	f7ff f846 	bl	800d468 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e3dc:	f000 fda0 	bl	800ef20 <xTaskResumeAll>
 800e3e0:	2800      	cmp	r0, #0
 800e3e2:	d18f      	bne.n	800e304 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e3e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e3f0:	f3bf 8f4f 	dsb	sy
 800e3f4:	f3bf 8f6f 	isb	sy
 800e3f8:	e784      	b.n	800e304 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e3fa:	f7ff f835 	bl	800d468 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e3fe:	b92f      	cbnz	r7, 800e40c <xQueueSemaphoreTake+0x28c>
}
 800e400:	4638      	mov	r0, r7
 800e402:	b004      	add	sp, #16
 800e404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e408:	4607      	mov	r7, r0
 800e40a:	e6d1      	b.n	800e1b0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e40c:	f7ff f80a 	bl	800d424 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e410:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e412:	b119      	cbz	r1, 800e41c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e414:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e416:	6819      	ldr	r1, [r3, #0]
 800e418:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e41c:	68a0      	ldr	r0, [r4, #8]
 800e41e:	f000 ffbd 	bl	800f39c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e422:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e424:	f7ff f820 	bl	800d468 <vPortExitCritical>
 800e428:	e7ea      	b.n	800e400 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e42a:	f7fe fffb 	bl	800d424 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e42e:	68a0      	ldr	r0, [r4, #8]
 800e430:	f000 ff28 	bl	800f284 <xTaskPriorityInherit>
 800e434:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e436:	f7ff f817 	bl	800d468 <vPortExitCritical>
 800e43a:	e793      	b.n	800e364 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e43c:	b197      	cbz	r7, 800e464 <xQueueSemaphoreTake+0x2e4>
 800e43e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e442:	f383 8811 	msr	BASEPRI, r3
 800e446:	f3bf 8f6f 	isb	sy
 800e44a:	f3bf 8f4f 	dsb	sy
 800e44e:	e7fe      	b.n	800e44e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e450:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e452:	3b01      	subs	r3, #1
 800e454:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e456:	b1ca      	cbz	r2, 800e48c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e458:	6923      	ldr	r3, [r4, #16]
 800e45a:	b933      	cbnz	r3, 800e46a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e45c:	f7ff f804 	bl	800d468 <vPortExitCritical>
				return pdPASS;
 800e460:	2701      	movs	r7, #1
 800e462:	e7cd      	b.n	800e400 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e464:	f7ff f800 	bl	800d468 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e468:	e7ca      	b.n	800e400 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e46a:	f104 0010 	add.w	r0, r4, #16
 800e46e:	f000 fe57 	bl	800f120 <xTaskRemoveFromEventList>
 800e472:	2800      	cmp	r0, #0
 800e474:	d0f2      	beq.n	800e45c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e476:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e47a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e47e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e482:	f3bf 8f4f 	dsb	sy
 800e486:	f3bf 8f6f 	isb	sy
 800e48a:	e7e7      	b.n	800e45c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e48c:	f000 ffda 	bl	800f444 <pvTaskIncrementMutexHeldCount>
 800e490:	60a0      	str	r0, [r4, #8]
 800e492:	e7e1      	b.n	800e458 <xQueueSemaphoreTake+0x2d8>

0800e494 <xQueueReceiveFromISR>:
{
 800e494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e498:	b310      	cbz	r0, 800e4e0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e49a:	460e      	mov	r6, r1
 800e49c:	4617      	mov	r7, r2
 800e49e:	4604      	mov	r4, r0
 800e4a0:	b191      	cbz	r1, 800e4c8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e4a2:	f7ff f8f3 	bl	800d68c <vPortValidateInterruptPriority>
	__asm volatile
 800e4a6:	f3ef 8911 	mrs	r9, BASEPRI
 800e4aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4ae:	f383 8811 	msr	BASEPRI, r3
 800e4b2:	f3bf 8f6f 	isb	sy
 800e4b6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e4ba:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e4bc:	b9cd      	cbnz	r5, 800e4f2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e4be:	4628      	mov	r0, r5
	__asm volatile
 800e4c0:	f389 8811 	msr	BASEPRI, r9
}
 800e4c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e4ca:	2b00      	cmp	r3, #0
 800e4cc:	d0e9      	beq.n	800e4a2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e4ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4d2:	f383 8811 	msr	BASEPRI, r3
 800e4d6:	f3bf 8f6f 	isb	sy
 800e4da:	f3bf 8f4f 	dsb	sy
 800e4de:	e7fe      	b.n	800e4de <xQueueReceiveFromISR+0x4a>
 800e4e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4e4:	f383 8811 	msr	BASEPRI, r3
 800e4e8:	f3bf 8f6f 	isb	sy
 800e4ec:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e4f0:	e7fe      	b.n	800e4f0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e4f2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e4f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e4f8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e4fc:	b152      	cbz	r2, 800e514 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e4fe:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e500:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e502:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e504:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e506:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e508:	bf24      	itt	cs
 800e50a:	6821      	ldrcs	r1, [r4, #0]
 800e50c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e50e:	4630      	mov	r0, r6
 800e510:	f01b ffe3 	bl	802a4da <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e514:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e516:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e51a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e51c:	d009      	beq.n	800e532 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e51e:	f108 0301 	add.w	r3, r8, #1
 800e522:	b25b      	sxtb	r3, r3
 800e524:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e528:	2001      	movs	r0, #1
	__asm volatile
 800e52a:	f389 8811 	msr	BASEPRI, r9
}
 800e52e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e532:	6923      	ldr	r3, [r4, #16]
 800e534:	2b00      	cmp	r3, #0
 800e536:	d0f7      	beq.n	800e528 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e538:	f104 0010 	add.w	r0, r4, #16
 800e53c:	f000 fdf0 	bl	800f120 <xTaskRemoveFromEventList>
 800e540:	2800      	cmp	r0, #0
 800e542:	d0f1      	beq.n	800e528 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e544:	2f00      	cmp	r7, #0
 800e546:	d0ef      	beq.n	800e528 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e548:	2001      	movs	r0, #1
 800e54a:	6038      	str	r0, [r7, #0]
 800e54c:	e7b8      	b.n	800e4c0 <xQueueReceiveFromISR+0x2c>
 800e54e:	bf00      	nop

0800e550 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e550:	b158      	cbz	r0, 800e56a <uxQueueMessagesWaiting+0x1a>
{
 800e552:	b510      	push	{r4, lr}
 800e554:	4604      	mov	r4, r0
 800e556:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e558:	f7fe ff64 	bl	800d424 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e55c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e55e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e560:	f7fe ff82 	bl	800d468 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e564:	9801      	ldr	r0, [sp, #4]
 800e566:	b002      	add	sp, #8
 800e568:	bd10      	pop	{r4, pc}
	__asm volatile
 800e56a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e56e:	f383 8811 	msr	BASEPRI, r3
 800e572:	f3bf 8f6f 	isb	sy
 800e576:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e57a:	e7fe      	b.n	800e57a <uxQueueMessagesWaiting+0x2a>

0800e57c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e57c:	b108      	cbz	r0, 800e582 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e57e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e580:	4770      	bx	lr
 800e582:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e586:	f383 8811 	msr	BASEPRI, r3
 800e58a:	f3bf 8f6f 	isb	sy
 800e58e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e592:	e7fe      	b.n	800e592 <uxQueueMessagesWaitingFromISR+0x16>
 800e594:	0000      	movs	r0, r0
	...

0800e598 <vQueueDelete>:
	configASSERT( pxQueue );
 800e598:	b1f0      	cbz	r0, 800e5d8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e59a:	4b21      	ldr	r3, [pc, #132]	; (800e620 <vQueueDelete+0x88>)
 800e59c:	685a      	ldr	r2, [r3, #4]
 800e59e:	4290      	cmp	r0, r2
 800e5a0:	d025      	beq.n	800e5ee <vQueueDelete+0x56>
 800e5a2:	68da      	ldr	r2, [r3, #12]
 800e5a4:	4290      	cmp	r0, r2
 800e5a6:	d02c      	beq.n	800e602 <vQueueDelete+0x6a>
 800e5a8:	695a      	ldr	r2, [r3, #20]
 800e5aa:	4290      	cmp	r0, r2
 800e5ac:	d02b      	beq.n	800e606 <vQueueDelete+0x6e>
 800e5ae:	69da      	ldr	r2, [r3, #28]
 800e5b0:	4290      	cmp	r0, r2
 800e5b2:	d02a      	beq.n	800e60a <vQueueDelete+0x72>
 800e5b4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e5b6:	4290      	cmp	r0, r2
 800e5b8:	d029      	beq.n	800e60e <vQueueDelete+0x76>
 800e5ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e5bc:	4290      	cmp	r0, r2
 800e5be:	d01e      	beq.n	800e5fe <vQueueDelete+0x66>
 800e5c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e5c2:	4290      	cmp	r0, r2
 800e5c4:	d025      	beq.n	800e612 <vQueueDelete+0x7a>
 800e5c6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e5c8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e5ca:	bf08      	it	eq
 800e5cc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e5ce:	d00f      	beq.n	800e5f0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e5d0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e5d4:	b14b      	cbz	r3, 800e5ea <vQueueDelete+0x52>
}
 800e5d6:	4770      	bx	lr
 800e5d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5dc:	f383 8811 	msr	BASEPRI, r3
 800e5e0:	f3bf 8f6f 	isb	sy
 800e5e4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e5e8:	e7fe      	b.n	800e5e8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e5ea:	f7fe be01 	b.w	800d1f0 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e5ee:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e5f0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e618 <vQueueDelete+0x80>
 800e5f4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e5f8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e5fc:	e7e8      	b.n	800e5d0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e5fe:	2205      	movs	r2, #5
 800e600:	e7f6      	b.n	800e5f0 <vQueueDelete+0x58>
 800e602:	2201      	movs	r2, #1
 800e604:	e7f4      	b.n	800e5f0 <vQueueDelete+0x58>
 800e606:	2202      	movs	r2, #2
 800e608:	e7f2      	b.n	800e5f0 <vQueueDelete+0x58>
 800e60a:	2203      	movs	r2, #3
 800e60c:	e7f0      	b.n	800e5f0 <vQueueDelete+0x58>
 800e60e:	2204      	movs	r2, #4
 800e610:	e7ee      	b.n	800e5f0 <vQueueDelete+0x58>
 800e612:	2206      	movs	r2, #6
 800e614:	e7ec      	b.n	800e5f0 <vQueueDelete+0x58>
 800e616:	bf00      	nop
	...
 800e620:	200127e8 	.word	0x200127e8

0800e624 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e624:	4b12      	ldr	r3, [pc, #72]	; (800e670 <vQueueAddToRegistry+0x4c>)
 800e626:	681a      	ldr	r2, [r3, #0]
 800e628:	b17a      	cbz	r2, 800e64a <vQueueAddToRegistry+0x26>
 800e62a:	689a      	ldr	r2, [r3, #8]
 800e62c:	b162      	cbz	r2, 800e648 <vQueueAddToRegistry+0x24>
 800e62e:	691a      	ldr	r2, [r3, #16]
 800e630:	b192      	cbz	r2, 800e658 <vQueueAddToRegistry+0x34>
 800e632:	699a      	ldr	r2, [r3, #24]
 800e634:	b192      	cbz	r2, 800e65c <vQueueAddToRegistry+0x38>
 800e636:	6a1a      	ldr	r2, [r3, #32]
 800e638:	b192      	cbz	r2, 800e660 <vQueueAddToRegistry+0x3c>
 800e63a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e63c:	b192      	cbz	r2, 800e664 <vQueueAddToRegistry+0x40>
 800e63e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e640:	b192      	cbz	r2, 800e668 <vQueueAddToRegistry+0x44>
 800e642:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e644:	b192      	cbz	r2, 800e66c <vQueueAddToRegistry+0x48>
	}
 800e646:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e648:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e64a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e64e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e652:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e656:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e658:	2202      	movs	r2, #2
 800e65a:	e7f6      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e65c:	2203      	movs	r2, #3
 800e65e:	e7f4      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e660:	2204      	movs	r2, #4
 800e662:	e7f2      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e664:	2205      	movs	r2, #5
 800e666:	e7f0      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e668:	2206      	movs	r2, #6
 800e66a:	e7ee      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e66c:	2207      	movs	r2, #7
 800e66e:	e7ec      	b.n	800e64a <vQueueAddToRegistry+0x26>
 800e670:	200127e8 	.word	0x200127e8

0800e674 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e674:	b570      	push	{r4, r5, r6, lr}
 800e676:	4605      	mov	r5, r0
 800e678:	460e      	mov	r6, r1
 800e67a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e67c:	f7fe fed2 	bl	800d424 <vPortEnterCritical>
 800e680:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e684:	2bff      	cmp	r3, #255	; 0xff
 800e686:	bf04      	itt	eq
 800e688:	2300      	moveq	r3, #0
 800e68a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e68e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e692:	2bff      	cmp	r3, #255	; 0xff
 800e694:	bf04      	itt	eq
 800e696:	2300      	moveq	r3, #0
 800e698:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e69c:	f7fe fee4 	bl	800d468 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e6a0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e6a2:	2b00      	cmp	r3, #0
 800e6a4:	d043      	beq.n	800e72e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e6a6:	f7fe febd 	bl	800d424 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6aa:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e6ae:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6b0:	2c00      	cmp	r4, #0
 800e6b2:	dd14      	ble.n	800e6de <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6b4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e6b8:	e003      	b.n	800e6c2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e6ba:	1e63      	subs	r3, r4, #1
 800e6bc:	b2da      	uxtb	r2, r3
 800e6be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6c0:	b16a      	cbz	r2, 800e6de <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6c4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6c6:	b153      	cbz	r3, 800e6de <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6c8:	f000 fd2a 	bl	800f120 <xTaskRemoveFromEventList>
 800e6cc:	2800      	cmp	r0, #0
 800e6ce:	d0f4      	beq.n	800e6ba <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e6d0:	f000 fdc2 	bl	800f258 <vTaskMissedYield>
			--cTxLock;
 800e6d4:	1e63      	subs	r3, r4, #1
 800e6d6:	b2da      	uxtb	r2, r3
 800e6d8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6da:	2a00      	cmp	r2, #0
 800e6dc:	d1f1      	bne.n	800e6c2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e6de:	23ff      	movs	r3, #255	; 0xff
 800e6e0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e6e4:	f7fe fec0 	bl	800d468 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6e8:	f7fe fe9c 	bl	800d424 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6ec:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e6f0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6f2:	2c00      	cmp	r4, #0
 800e6f4:	dd14      	ble.n	800e720 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6f6:	f105 0610 	add.w	r6, r5, #16
 800e6fa:	e003      	b.n	800e704 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e6fc:	1e63      	subs	r3, r4, #1
 800e6fe:	b2da      	uxtb	r2, r3
 800e700:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e702:	b16a      	cbz	r2, 800e720 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e704:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e706:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e708:	b153      	cbz	r3, 800e720 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e70a:	f000 fd09 	bl	800f120 <xTaskRemoveFromEventList>
 800e70e:	2800      	cmp	r0, #0
 800e710:	d0f4      	beq.n	800e6fc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e712:	f000 fda1 	bl	800f258 <vTaskMissedYield>
				--cRxLock;
 800e716:	1e63      	subs	r3, r4, #1
 800e718:	b2da      	uxtb	r2, r3
 800e71a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e71c:	2a00      	cmp	r2, #0
 800e71e:	d1f1      	bne.n	800e704 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e720:	23ff      	movs	r3, #255	; 0xff
 800e722:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e726:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e72a:	f7fe be9d 	b.w	800d468 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e72e:	4622      	mov	r2, r4
 800e730:	4631      	mov	r1, r6
 800e732:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e736:	f000 fca9 	bl	800f08c <vTaskPlaceOnEventListRestricted>
 800e73a:	e7b4      	b.n	800e6a6 <vQueueWaitForMessageRestricted+0x32>

0800e73c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e73c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e740:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e742:	f7fe fe6f 	bl	800d424 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e746:	4a34      	ldr	r2, [pc, #208]	; (800e818 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e748:	4e34      	ldr	r6, [pc, #208]	; (800e81c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e74a:	6813      	ldr	r3, [r2, #0]
 800e74c:	3301      	adds	r3, #1
 800e74e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e750:	6833      	ldr	r3, [r6, #0]
 800e752:	2b00      	cmp	r3, #0
 800e754:	d032      	beq.n	800e7bc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e756:	4c32      	ldr	r4, [pc, #200]	; (800e820 <prvAddNewTaskToReadyList+0xe4>)
 800e758:	6823      	ldr	r3, [r4, #0]
 800e75a:	b33b      	cbz	r3, 800e7ac <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e75c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e75e:	4f31      	ldr	r7, [pc, #196]	; (800e824 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e760:	4a31      	ldr	r2, [pc, #196]	; (800e828 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e762:	4932      	ldr	r1, [pc, #200]	; (800e82c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e764:	6813      	ldr	r3, [r2, #0]
 800e766:	3301      	adds	r3, #1
 800e768:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e76a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e76c:	680b      	ldr	r3, [r1, #0]
 800e76e:	4283      	cmp	r3, r0
 800e770:	bf38      	it	cc
 800e772:	6008      	strcc	r0, [r1, #0]
 800e774:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e778:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e77c:	1d29      	adds	r1, r5, #4
 800e77e:	f7fe fdab 	bl	800d2d8 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e782:	f7fe fe71 	bl	800d468 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e786:	6823      	ldr	r3, [r4, #0]
 800e788:	b173      	cbz	r3, 800e7a8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e78a:	6832      	ldr	r2, [r6, #0]
 800e78c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e78e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e790:	429a      	cmp	r2, r3
 800e792:	d209      	bcs.n	800e7a8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e794:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e798:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e79c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7a0:	f3bf 8f4f 	dsb	sy
 800e7a4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e7a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e7ac:	6833      	ldr	r3, [r6, #0]
 800e7ae:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e7b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7b2:	4f1c      	ldr	r7, [pc, #112]	; (800e824 <prvAddNewTaskToReadyList+0xe8>)
 800e7b4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e7b6:	bf98      	it	ls
 800e7b8:	6035      	strls	r5, [r6, #0]
 800e7ba:	e7d1      	b.n	800e760 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e7bc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e7be:	6813      	ldr	r3, [r2, #0]
 800e7c0:	2b01      	cmp	r3, #1
 800e7c2:	d003      	beq.n	800e7cc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e7c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e7c6:	4f17      	ldr	r7, [pc, #92]	; (800e824 <prvAddNewTaskToReadyList+0xe8>)
 800e7c8:	4c15      	ldr	r4, [pc, #84]	; (800e820 <prvAddNewTaskToReadyList+0xe4>)
 800e7ca:	e7c9      	b.n	800e760 <prvAddNewTaskToReadyList+0x24>
 800e7cc:	4f15      	ldr	r7, [pc, #84]	; (800e824 <prvAddNewTaskToReadyList+0xe8>)
 800e7ce:	463c      	mov	r4, r7
 800e7d0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e7d4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e7d6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e7d8:	f7fe fd6e 	bl	800d2b8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e7dc:	45a0      	cmp	r8, r4
 800e7de:	d1f9      	bne.n	800e7d4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e7e0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e844 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e7e4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e848 <prvAddNewTaskToReadyList+0x10c>
 800e7e8:	4c0d      	ldr	r4, [pc, #52]	; (800e820 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e7ea:	4648      	mov	r0, r9
 800e7ec:	f7fe fd64 	bl	800d2b8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e7f0:	4640      	mov	r0, r8
 800e7f2:	f7fe fd61 	bl	800d2b8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e7f6:	480e      	ldr	r0, [pc, #56]	; (800e830 <prvAddNewTaskToReadyList+0xf4>)
 800e7f8:	f7fe fd5e 	bl	800d2b8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e7fc:	480d      	ldr	r0, [pc, #52]	; (800e834 <prvAddNewTaskToReadyList+0xf8>)
 800e7fe:	f7fe fd5b 	bl	800d2b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e802:	480d      	ldr	r0, [pc, #52]	; (800e838 <prvAddNewTaskToReadyList+0xfc>)
 800e804:	f7fe fd58 	bl	800d2b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e808:	4b0c      	ldr	r3, [pc, #48]	; (800e83c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e80a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e80c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e810:	4b0b      	ldr	r3, [pc, #44]	; (800e840 <prvAddNewTaskToReadyList+0x104>)
 800e812:	f8c3 8000 	str.w	r8, [r3]
}
 800e816:	e7a3      	b.n	800e760 <prvAddNewTaskToReadyList+0x24>
 800e818:	20012c94 	.word	0x20012c94
 800e81c:	20012828 	.word	0x20012828
 800e820:	20012cf0 	.word	0x20012cf0
 800e824:	20012834 	.word	0x20012834
 800e828:	20012ca0 	.word	0x20012ca0
 800e82c:	20012ca4 	.word	0x20012ca4
 800e830:	20012cdc 	.word	0x20012cdc
 800e834:	20012d08 	.word	0x20012d08
 800e838:	20012cf4 	.word	0x20012cf4
 800e83c:	2001282c 	.word	0x2001282c
 800e840:	20012830 	.word	0x20012830
 800e844:	20012ca8 	.word	0x20012ca8
 800e848:	20012cbc 	.word	0x20012cbc

0800e84c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e84c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e850:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e852:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e856:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e85a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e85c:	4606      	mov	r6, r0
 800e85e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e860:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e862:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e864:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e866:	f01b fd12 	bl	802a28e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e86a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e86c:	f1a9 0904 	sub.w	r9, r9, #4
 800e870:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e872:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e876:	2d00      	cmp	r5, #0
 800e878:	d079      	beq.n	800e96e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e87a:	782b      	ldrb	r3, [r5, #0]
 800e87c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e880:	2b00      	cmp	r3, #0
 800e882:	d03b      	beq.n	800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e884:	786b      	ldrb	r3, [r5, #1]
 800e886:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e88a:	2b00      	cmp	r3, #0
 800e88c:	d036      	beq.n	800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e88e:	78ab      	ldrb	r3, [r5, #2]
 800e890:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e894:	b393      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e896:	78eb      	ldrb	r3, [r5, #3]
 800e898:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e89c:	b373      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e89e:	792b      	ldrb	r3, [r5, #4]
 800e8a0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e8a4:	b353      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8a6:	796b      	ldrb	r3, [r5, #5]
 800e8a8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e8ac:	b333      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8ae:	79ab      	ldrb	r3, [r5, #6]
 800e8b0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e8b4:	b313      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8b6:	79eb      	ldrb	r3, [r5, #7]
 800e8b8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e8bc:	b1f3      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8be:	7a2b      	ldrb	r3, [r5, #8]
 800e8c0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e8c4:	b1d3      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8c6:	7a6b      	ldrb	r3, [r5, #9]
 800e8c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e8cc:	b1b3      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8ce:	7aab      	ldrb	r3, [r5, #10]
 800e8d0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e8d4:	b193      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8d6:	7aeb      	ldrb	r3, [r5, #11]
 800e8d8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e8dc:	b173      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8de:	7b2b      	ldrb	r3, [r5, #12]
 800e8e0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e8e4:	b153      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8e6:	7b6b      	ldrb	r3, [r5, #13]
 800e8e8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e8ec:	b133      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8ee:	7bab      	ldrb	r3, [r5, #14]
 800e8f0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e8f4:	b113      	cbz	r3, 800e8fc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8f6:	7beb      	ldrb	r3, [r5, #15]
 800e8f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e8fc:	2300      	movs	r3, #0
 800e8fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e902:	9d08      	ldr	r5, [sp, #32]
 800e904:	2d37      	cmp	r5, #55	; 0x37
 800e906:	bf28      	it	cs
 800e908:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e90a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e90e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e910:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e912:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e914:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e918:	f7fe fcda 	bl	800d2d0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e91c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e920:	f104 0018 	add.w	r0, r4, #24
 800e924:	f7fe fcd4 	bl	800d2d0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e928:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e92a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e92e:	4651      	mov	r1, sl
 800e930:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e932:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e934:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e936:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e93a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e93e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e942:	f01b fca4 	bl	802a28e <memset>
 800e946:	4b0b      	ldr	r3, [pc, #44]	; (800e974 <prvInitialiseNewTask.constprop.0+0x128>)
 800e948:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e94a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e94e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e950:	463a      	mov	r2, r7
 800e952:	4631      	mov	r1, r6
 800e954:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e956:	6625      	str	r5, [r4, #96]	; 0x60
 800e958:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e95a:	f7fe fd37 	bl	800d3cc <pxPortInitialiseStack>
 800e95e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e960:	f1b8 0f00 	cmp.w	r8, #0
 800e964:	d001      	beq.n	800e96a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e966:	f8c8 4000 	str.w	r4, [r8]
}
 800e96a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e96e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e972:	e7c6      	b.n	800e902 <prvInitialiseNewTask.constprop.0+0xb6>
 800e974:	200137b8 	.word	0x200137b8

0800e978 <prvIdleTask>:
{
 800e978:	b580      	push	{r7, lr}
 800e97a:	4d23      	ldr	r5, [pc, #140]	; (800ea08 <prvIdleTask+0x90>)
 800e97c:	4f23      	ldr	r7, [pc, #140]	; (800ea0c <prvIdleTask+0x94>)
 800e97e:	4e24      	ldr	r6, [pc, #144]	; (800ea10 <prvIdleTask+0x98>)
 800e980:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ea14 <prvIdleTask+0x9c>
				taskYIELD();
 800e984:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e988:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e98c:	682b      	ldr	r3, [r5, #0]
 800e98e:	b35b      	cbz	r3, 800e9e8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e990:	f7fe fd48 	bl	800d424 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e994:	68fb      	ldr	r3, [r7, #12]
 800e996:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e998:	1d20      	adds	r0, r4, #4
 800e99a:	f7fe fcc5 	bl	800d328 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e99e:	6833      	ldr	r3, [r6, #0]
 800e9a0:	3b01      	subs	r3, #1
 800e9a2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e9a4:	682b      	ldr	r3, [r5, #0]
 800e9a6:	3b01      	subs	r3, #1
 800e9a8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e9aa:	f7fe fd5d 	bl	800d468 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e9ae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e9b2:	f01b fcb5 	bl	802a320 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e9b6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e9ba:	b163      	cbz	r3, 800e9d6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e9bc:	2b01      	cmp	r3, #1
 800e9be:	d01e      	beq.n	800e9fe <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e9c0:	2b02      	cmp	r3, #2
 800e9c2:	d0e3      	beq.n	800e98c <prvIdleTask+0x14>
 800e9c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9c8:	f383 8811 	msr	BASEPRI, r3
 800e9cc:	f3bf 8f6f 	isb	sy
 800e9d0:	f3bf 8f4f 	dsb	sy
 800e9d4:	e7fe      	b.n	800e9d4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e9d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e9d8:	f7fe fc0a 	bl	800d1f0 <vPortFree>
				vPortFree( pxTCB );
 800e9dc:	4620      	mov	r0, r4
 800e9de:	f7fe fc07 	bl	800d1f0 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e9e2:	682b      	ldr	r3, [r5, #0]
 800e9e4:	2b00      	cmp	r3, #0
 800e9e6:	d1d3      	bne.n	800e990 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e9e8:	f8d8 3000 	ldr.w	r3, [r8]
 800e9ec:	2b01      	cmp	r3, #1
 800e9ee:	d9cd      	bls.n	800e98c <prvIdleTask+0x14>
				taskYIELD();
 800e9f0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e9f4:	f3bf 8f4f 	dsb	sy
 800e9f8:	f3bf 8f6f 	isb	sy
 800e9fc:	e7c6      	b.n	800e98c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e9fe:	4620      	mov	r0, r4
 800ea00:	f7fe fbf6 	bl	800d1f0 <vPortFree>
 800ea04:	e7c2      	b.n	800e98c <prvIdleTask+0x14>
 800ea06:	bf00      	nop
 800ea08:	20012c98 	.word	0x20012c98
 800ea0c:	20012d08 	.word	0x20012d08
 800ea10:	20012c94 	.word	0x20012c94
 800ea14:	20012834 	.word	0x20012834

0800ea18 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ea18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ea1c:	4b47      	ldr	r3, [pc, #284]	; (800eb3c <xTaskIncrementTick.part.0+0x124>)
 800ea1e:	681e      	ldr	r6, [r3, #0]
 800ea20:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800ea22:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800ea24:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ea26:	2e00      	cmp	r6, #0
 800ea28:	d040      	beq.n	800eaac <xTaskIncrementTick.part.0+0x94>
 800ea2a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800eb50 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ea2e:	f8db 3000 	ldr.w	r3, [fp]
 800ea32:	429e      	cmp	r6, r3
 800ea34:	d347      	bcc.n	800eac6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea36:	4f42      	ldr	r7, [pc, #264]	; (800eb40 <xTaskIncrementTick.part.0+0x128>)
 800ea38:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800eb54 <xTaskIncrementTick.part.0+0x13c>
 800ea3c:	683b      	ldr	r3, [r7, #0]
 800ea3e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800eb58 <xTaskIncrementTick.part.0+0x140>
 800ea42:	681d      	ldr	r5, [r3, #0]
 800ea44:	2d00      	cmp	r5, #0
 800ea46:	d073      	beq.n	800eb30 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800ea48:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800eb5c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800ea4c:	2500      	movs	r5, #0
 800ea4e:	e022      	b.n	800ea96 <xTaskIncrementTick.part.0+0x7e>
 800ea50:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea52:	f7fe fc69 	bl	800d328 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ea56:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ea58:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea5a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ea5e:	b113      	cbz	r3, 800ea66 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea60:	f7fe fc62 	bl	800d328 <uxListRemove>
 800ea64:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ea66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea68:	f8d8 2000 	ldr.w	r2, [r8]
 800ea6c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ea70:	4293      	cmp	r3, r2
 800ea72:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ea76:	bf88      	it	hi
 800ea78:	f8c8 3000 	strhi.w	r3, [r8]
 800ea7c:	f7fe fc2c 	bl	800d2d8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ea80:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea84:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ea86:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ea88:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea8a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800ea8c:	4291      	cmp	r1, r2
 800ea8e:	bf28      	it	cs
 800ea90:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea92:	2b00      	cmp	r3, #0
 800ea94:	d04c      	beq.n	800eb30 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea96:	683b      	ldr	r3, [r7, #0]
 800ea98:	68db      	ldr	r3, [r3, #12]
 800ea9a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800ea9c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea9e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800eaa0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eaa2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800eaa4:	d2d4      	bcs.n	800ea50 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800eaa6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800eaaa:	e011      	b.n	800ead0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800eaac:	4b24      	ldr	r3, [pc, #144]	; (800eb40 <xTaskIncrementTick.part.0+0x128>)
 800eaae:	681a      	ldr	r2, [r3, #0]
 800eab0:	6812      	ldr	r2, [r2, #0]
 800eab2:	b30a      	cbz	r2, 800eaf8 <xTaskIncrementTick.part.0+0xe0>
 800eab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eab8:	f383 8811 	msr	BASEPRI, r3
 800eabc:	f3bf 8f6f 	isb	sy
 800eac0:	f3bf 8f4f 	dsb	sy
 800eac4:	e7fe      	b.n	800eac4 <xTaskIncrementTick.part.0+0xac>
 800eac6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800eb54 <xTaskIncrementTick.part.0+0x13c>
 800eaca:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800eb58 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800eace:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ead0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ead4:	491b      	ldr	r1, [pc, #108]	; (800eb44 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ead6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ead8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800eadc:	009b      	lsls	r3, r3, #2
 800eade:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800eae2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800eae4:	2a02      	cmp	r2, #2
 800eae6:	bf28      	it	cs
 800eae8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800eaea:	2b00      	cmp	r3, #0
}
 800eaec:	bf0c      	ite	eq
 800eaee:	4628      	moveq	r0, r5
 800eaf0:	2001      	movne	r0, #1
 800eaf2:	b003      	add	sp, #12
 800eaf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800eaf8:	4a13      	ldr	r2, [pc, #76]	; (800eb48 <xTaskIncrementTick.part.0+0x130>)
 800eafa:	6818      	ldr	r0, [r3, #0]
 800eafc:	6811      	ldr	r1, [r2, #0]
 800eafe:	6019      	str	r1, [r3, #0]
 800eb00:	4912      	ldr	r1, [pc, #72]	; (800eb4c <xTaskIncrementTick.part.0+0x134>)
 800eb02:	6010      	str	r0, [r2, #0]
 800eb04:	680a      	ldr	r2, [r1, #0]
 800eb06:	3201      	adds	r2, #1
 800eb08:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb0a:	681a      	ldr	r2, [r3, #0]
 800eb0c:	6812      	ldr	r2, [r2, #0]
 800eb0e:	b932      	cbnz	r2, 800eb1e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800eb10:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800eb50 <xTaskIncrementTick.part.0+0x138>
 800eb14:	f04f 33ff 	mov.w	r3, #4294967295
 800eb18:	f8cb 3000 	str.w	r3, [fp]
 800eb1c:	e787      	b.n	800ea2e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb1e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb20:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800eb50 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb24:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb26:	68db      	ldr	r3, [r3, #12]
 800eb28:	685b      	ldr	r3, [r3, #4]
 800eb2a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800eb2e:	e77e      	b.n	800ea2e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb30:	f04f 33ff 	mov.w	r3, #4294967295
 800eb34:	f8cb 3000 	str.w	r3, [fp]
					break;
 800eb38:	e7ca      	b.n	800ead0 <xTaskIncrementTick.part.0+0xb8>
 800eb3a:	bf00      	nop
 800eb3c:	20012d1c 	.word	0x20012d1c
 800eb40:	2001282c 	.word	0x2001282c
 800eb44:	20012d20 	.word	0x20012d20
 800eb48:	20012830 	.word	0x20012830
 800eb4c:	20012cd4 	.word	0x20012cd4
 800eb50:	20012cd0 	.word	0x20012cd0
 800eb54:	20012834 	.word	0x20012834
 800eb58:	20012828 	.word	0x20012828
 800eb5c:	20012ca4 	.word	0x20012ca4

0800eb60 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800eb60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800eb64:	4d41      	ldr	r5, [pc, #260]	; (800ec6c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800eb66:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800eb68:	f7fe fc5c 	bl	800d424 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800eb6c:	682b      	ldr	r3, [r5, #0]
 800eb6e:	3b01      	subs	r3, #1
 800eb70:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eb72:	682b      	ldr	r3, [r5, #0]
 800eb74:	2b00      	cmp	r3, #0
 800eb76:	d161      	bne.n	800ec3c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800eb78:	4b3d      	ldr	r3, [pc, #244]	; (800ec70 <xTaskResumeAll.part.0+0x110>)
 800eb7a:	681b      	ldr	r3, [r3, #0]
 800eb7c:	2b00      	cmp	r3, #0
 800eb7e:	d05d      	beq.n	800ec3c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eb80:	4e3c      	ldr	r6, [pc, #240]	; (800ec74 <xTaskResumeAll.part.0+0x114>)
 800eb82:	6833      	ldr	r3, [r6, #0]
 800eb84:	2b00      	cmp	r3, #0
 800eb86:	d06e      	beq.n	800ec66 <xTaskResumeAll.part.0+0x106>
 800eb88:	4f3b      	ldr	r7, [pc, #236]	; (800ec78 <xTaskResumeAll.part.0+0x118>)
 800eb8a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ec88 <xTaskResumeAll.part.0+0x128>
 800eb8e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ec8c <xTaskResumeAll.part.0+0x12c>
 800eb92:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ec90 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb96:	68f3      	ldr	r3, [r6, #12]
 800eb98:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eb9a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800eb9e:	f104 0018 	add.w	r0, r4, #24
 800eba2:	f7fe fbc1 	bl	800d328 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eba6:	4658      	mov	r0, fp
 800eba8:	f7fe fbbe 	bl	800d328 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ebac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ebae:	683a      	ldr	r2, [r7, #0]
 800ebb0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ebb4:	4293      	cmp	r3, r2
 800ebb6:	4659      	mov	r1, fp
 800ebb8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ebbc:	bf88      	it	hi
 800ebbe:	603b      	strhi	r3, [r7, #0]
 800ebc0:	f7fe fb8a 	bl	800d2d8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ebc4:	f8d8 3000 	ldr.w	r3, [r8]
 800ebc8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ebca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebcc:	429a      	cmp	r2, r3
 800ebce:	d33d      	bcc.n	800ec4c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ebd0:	2301      	movs	r3, #1
 800ebd2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ebd6:	6833      	ldr	r3, [r6, #0]
 800ebd8:	2b00      	cmp	r3, #0
 800ebda:	d1dc      	bne.n	800eb96 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ebdc:	4b27      	ldr	r3, [pc, #156]	; (800ec7c <xTaskResumeAll.part.0+0x11c>)
 800ebde:	681a      	ldr	r2, [r3, #0]
 800ebe0:	6812      	ldr	r2, [r2, #0]
 800ebe2:	2a00      	cmp	r2, #0
 800ebe4:	d03a      	beq.n	800ec5c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ebe6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ebe8:	4b25      	ldr	r3, [pc, #148]	; (800ec80 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ebea:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ebec:	68d2      	ldr	r2, [r2, #12]
 800ebee:	6852      	ldr	r2, [r2, #4]
 800ebf0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ebf2:	4e24      	ldr	r6, [pc, #144]	; (800ec84 <xTaskResumeAll.part.0+0x124>)
 800ebf4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ebf6:	b194      	cbz	r4, 800ec1e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ebf8:	2701      	movs	r7, #1
 800ebfa:	e006      	b.n	800ec0a <xTaskResumeAll.part.0+0xaa>
 800ebfc:	f7ff ff0c 	bl	800ea18 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ec00:	b108      	cbz	r0, 800ec06 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ec02:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec06:	3c01      	subs	r4, #1
 800ec08:	d008      	beq.n	800ec1c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec0a:	682b      	ldr	r3, [r5, #0]
 800ec0c:	2b00      	cmp	r3, #0
 800ec0e:	d0f5      	beq.n	800ebfc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800ec10:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec12:	3c01      	subs	r4, #1
		++xPendedTicks;
 800ec14:	f103 0301 	add.w	r3, r3, #1
 800ec18:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec1a:	d1f6      	bne.n	800ec0a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800ec1c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800ec1e:	f8da 3000 	ldr.w	r3, [sl]
 800ec22:	b15b      	cbz	r3, 800ec3c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ec24:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec2c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec30:	f3bf 8f4f 	dsb	sy
 800ec34:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ec38:	2001      	movs	r0, #1
 800ec3a:	e000      	b.n	800ec3e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ec3c:	2000      	movs	r0, #0
 800ec3e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ec40:	f7fe fc12 	bl	800d468 <vPortExitCritical>
}
 800ec44:	9801      	ldr	r0, [sp, #4]
 800ec46:	b003      	add	sp, #12
 800ec48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ec4c:	6833      	ldr	r3, [r6, #0]
 800ec4e:	2b00      	cmp	r3, #0
 800ec50:	d1a1      	bne.n	800eb96 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec52:	4b0a      	ldr	r3, [pc, #40]	; (800ec7c <xTaskResumeAll.part.0+0x11c>)
 800ec54:	681a      	ldr	r2, [r3, #0]
 800ec56:	6812      	ldr	r2, [r2, #0]
 800ec58:	2a00      	cmp	r2, #0
 800ec5a:	d1c4      	bne.n	800ebe6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec5c:	4b08      	ldr	r3, [pc, #32]	; (800ec80 <xTaskResumeAll.part.0+0x120>)
 800ec5e:	f04f 32ff 	mov.w	r2, #4294967295
 800ec62:	601a      	str	r2, [r3, #0]
 800ec64:	e7c5      	b.n	800ebf2 <xTaskResumeAll.part.0+0x92>
 800ec66:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ec90 <xTaskResumeAll.part.0+0x130>
 800ec6a:	e7c2      	b.n	800ebf2 <xTaskResumeAll.part.0+0x92>
 800ec6c:	20012c9c 	.word	0x20012c9c
 800ec70:	20012c94 	.word	0x20012c94
 800ec74:	20012cdc 	.word	0x20012cdc
 800ec78:	20012ca4 	.word	0x20012ca4
 800ec7c:	2001282c 	.word	0x2001282c
 800ec80:	20012cd0 	.word	0x20012cd0
 800ec84:	20012cd8 	.word	0x20012cd8
 800ec88:	20012834 	.word	0x20012834
 800ec8c:	20012828 	.word	0x20012828
 800ec90:	20012d20 	.word	0x20012d20

0800ec94 <xTaskCreateStatic>:
	{
 800ec94:	b530      	push	{r4, r5, lr}
 800ec96:	b087      	sub	sp, #28
 800ec98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ec9a:	b1c4      	cbz	r4, 800ecce <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800ec9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ec9e:	b16d      	cbz	r5, 800ecbc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eca0:	25ac      	movs	r5, #172	; 0xac
 800eca2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800eca4:	9d05      	ldr	r5, [sp, #20]
 800eca6:	2dac      	cmp	r5, #172	; 0xac
 800eca8:	d01a      	beq.n	800ece0 <xTaskCreateStatic+0x4c>
 800ecaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecae:	f383 8811 	msr	BASEPRI, r3
 800ecb2:	f3bf 8f6f 	isb	sy
 800ecb6:	f3bf 8f4f 	dsb	sy
 800ecba:	e7fe      	b.n	800ecba <xTaskCreateStatic+0x26>
 800ecbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc0:	f383 8811 	msr	BASEPRI, r3
 800ecc4:	f3bf 8f6f 	isb	sy
 800ecc8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eccc:	e7fe      	b.n	800eccc <xTaskCreateStatic+0x38>
 800ecce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd2:	f383 8811 	msr	BASEPRI, r3
 800ecd6:	f3bf 8f6f 	isb	sy
 800ecda:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ecde:	e7fe      	b.n	800ecde <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ece0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ece2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ece4:	2402      	movs	r4, #2
 800ece6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ecea:	ac04      	add	r4, sp, #16
 800ecec:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ecf0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ecf2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ecf4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ecf6:	f7ff fda9 	bl	800e84c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ecfa:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ecfc:	f7ff fd1e 	bl	800e73c <prvAddNewTaskToReadyList>
	}
 800ed00:	9804      	ldr	r0, [sp, #16]
 800ed02:	b007      	add	sp, #28
 800ed04:	bd30      	pop	{r4, r5, pc}
 800ed06:	bf00      	nop

0800ed08 <xTaskCreate>:
	{
 800ed08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed0c:	4607      	mov	r7, r0
 800ed0e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ed10:	0090      	lsls	r0, r2, #2
	{
 800ed12:	4615      	mov	r5, r2
 800ed14:	4688      	mov	r8, r1
 800ed16:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ed18:	f7fe f9ae 	bl	800d078 <pvPortMalloc>
			if( pxStack != NULL )
 800ed1c:	b1d8      	cbz	r0, 800ed56 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ed1e:	4604      	mov	r4, r0
 800ed20:	20ac      	movs	r0, #172	; 0xac
 800ed22:	f7fe f9a9 	bl	800d078 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ed26:	4606      	mov	r6, r0
 800ed28:	b1d0      	cbz	r0, 800ed60 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ed2a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ed2c:	2400      	movs	r4, #0
 800ed2e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ed32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ed34:	9401      	str	r4, [sp, #4]
 800ed36:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ed38:	9602      	str	r6, [sp, #8]
 800ed3a:	464b      	mov	r3, r9
 800ed3c:	462a      	mov	r2, r5
 800ed3e:	4641      	mov	r1, r8
 800ed40:	4638      	mov	r0, r7
 800ed42:	9400      	str	r4, [sp, #0]
 800ed44:	f7ff fd82 	bl	800e84c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ed48:	4630      	mov	r0, r6
 800ed4a:	f7ff fcf7 	bl	800e73c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ed4e:	2001      	movs	r0, #1
	}
 800ed50:	b005      	add	sp, #20
 800ed52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ed56:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ed5a:	b005      	add	sp, #20
 800ed5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ed60:	4620      	mov	r0, r4
 800ed62:	f7fe fa45 	bl	800d1f0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ed66:	f04f 30ff 	mov.w	r0, #4294967295
 800ed6a:	e7f1      	b.n	800ed50 <xTaskCreate+0x48>

0800ed6c <vTaskDelay>:
	{
 800ed6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ed6e:	b950      	cbnz	r0, 800ed86 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ed70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ed78:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ed7c:	f3bf 8f4f 	dsb	sy
 800ed80:	f3bf 8f6f 	isb	sy
	}
 800ed84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ed86:	4d1e      	ldr	r5, [pc, #120]	; (800ee00 <vTaskDelay+0x94>)
 800ed88:	682b      	ldr	r3, [r5, #0]
 800ed8a:	b143      	cbz	r3, 800ed9e <vTaskDelay+0x32>
 800ed8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed90:	f383 8811 	msr	BASEPRI, r3
 800ed94:	f3bf 8f6f 	isb	sy
 800ed98:	f3bf 8f4f 	dsb	sy
 800ed9c:	e7fe      	b.n	800ed9c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800ed9e:	682b      	ldr	r3, [r5, #0]
 800eda0:	3301      	adds	r3, #1
 800eda2:	4604      	mov	r4, r0
 800eda4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eda6:	4b17      	ldr	r3, [pc, #92]	; (800ee04 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eda8:	4e17      	ldr	r6, [pc, #92]	; (800ee08 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800edaa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800edac:	6830      	ldr	r0, [r6, #0]
 800edae:	3004      	adds	r0, #4
 800edb0:	f7fe faba 	bl	800d328 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800edb4:	6833      	ldr	r3, [r6, #0]
 800edb6:	19e4      	adds	r4, r4, r7
 800edb8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800edba:	d310      	bcc.n	800edde <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edbc:	4b13      	ldr	r3, [pc, #76]	; (800ee0c <vTaskDelay+0xa0>)
 800edbe:	6818      	ldr	r0, [r3, #0]
 800edc0:	6831      	ldr	r1, [r6, #0]
 800edc2:	3104      	adds	r1, #4
 800edc4:	f7fe fa98 	bl	800d2f8 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800edc8:	682b      	ldr	r3, [r5, #0]
 800edca:	b9a3      	cbnz	r3, 800edf6 <vTaskDelay+0x8a>
 800edcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edd0:	f383 8811 	msr	BASEPRI, r3
 800edd4:	f3bf 8f6f 	isb	sy
 800edd8:	f3bf 8f4f 	dsb	sy
 800eddc:	e7fe      	b.n	800eddc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edde:	4b0c      	ldr	r3, [pc, #48]	; (800ee10 <vTaskDelay+0xa4>)
 800ede0:	6818      	ldr	r0, [r3, #0]
 800ede2:	6831      	ldr	r1, [r6, #0]
 800ede4:	3104      	adds	r1, #4
 800ede6:	f7fe fa87 	bl	800d2f8 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800edea:	4b0a      	ldr	r3, [pc, #40]	; (800ee14 <vTaskDelay+0xa8>)
 800edec:	681a      	ldr	r2, [r3, #0]
 800edee:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800edf0:	bf38      	it	cc
 800edf2:	601c      	strcc	r4, [r3, #0]
 800edf4:	e7e8      	b.n	800edc8 <vTaskDelay+0x5c>
 800edf6:	f7ff feb3 	bl	800eb60 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800edfa:	2800      	cmp	r0, #0
 800edfc:	d0b8      	beq.n	800ed70 <vTaskDelay+0x4>
	}
 800edfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee00:	20012c9c 	.word	0x20012c9c
 800ee04:	20012d1c 	.word	0x20012d1c
 800ee08:	20012828 	.word	0x20012828
 800ee0c:	20012830 	.word	0x20012830
 800ee10:	2001282c 	.word	0x2001282c
 800ee14:	20012cd0 	.word	0x20012cd0

0800ee18 <vTaskStartScheduler>:
{
 800ee18:	b530      	push	{r4, r5, lr}
 800ee1a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee1c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ee1e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee20:	a906      	add	r1, sp, #24
 800ee22:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ee24:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee28:	f7fe f908 	bl	800d03c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ee2c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ee30:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ee32:	b1bb      	cbz	r3, 800ee64 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ee34:	b16d      	cbz	r5, 800ee52 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ee36:	21ac      	movs	r1, #172	; 0xac
 800ee38:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ee3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ee3c:	29ac      	cmp	r1, #172	; 0xac
 800ee3e:	d01a      	beq.n	800ee76 <vTaskStartScheduler+0x5e>
 800ee40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee44:	f383 8811 	msr	BASEPRI, r3
 800ee48:	f3bf 8f6f 	isb	sy
 800ee4c:	f3bf 8f4f 	dsb	sy
 800ee50:	e7fe      	b.n	800ee50 <vTaskStartScheduler+0x38>
 800ee52:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee56:	f383 8811 	msr	BASEPRI, r3
 800ee5a:	f3bf 8f6f 	isb	sy
 800ee5e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ee62:	e7fe      	b.n	800ee62 <vTaskStartScheduler+0x4a>
 800ee64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee68:	f383 8811 	msr	BASEPRI, r3
 800ee6c:	f3bf 8f6f 	isb	sy
 800ee70:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ee74:	e7fe      	b.n	800ee74 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ee76:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ee78:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ee7a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ee7c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ee80:	4623      	mov	r3, r4
 800ee82:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ee86:	491b      	ldr	r1, [pc, #108]	; (800eef4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ee88:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ee8a:	9400      	str	r4, [sp, #0]
 800ee8c:	481a      	ldr	r0, [pc, #104]	; (800eef8 <vTaskStartScheduler+0xe0>)
 800ee8e:	f7ff fcdd 	bl	800e84c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ee92:	4628      	mov	r0, r5
 800ee94:	f7ff fc52 	bl	800e73c <prvAddNewTaskToReadyList>
		return xReturn;
 800ee98:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ee9a:	b1eb      	cbz	r3, 800eed8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ee9c:	f000 fc6e 	bl	800f77c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800eea0:	2801      	cmp	r0, #1
 800eea2:	d11b      	bne.n	800eedc <vTaskStartScheduler+0xc4>
 800eea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea8:	f383 8811 	msr	BASEPRI, r3
 800eeac:	f3bf 8f6f 	isb	sy
 800eeb0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eeb4:	4b11      	ldr	r3, [pc, #68]	; (800eefc <vTaskStartScheduler+0xe4>)
 800eeb6:	4a12      	ldr	r2, [pc, #72]	; (800ef00 <vTaskStartScheduler+0xe8>)
 800eeb8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800eeba:	4912      	ldr	r1, [pc, #72]	; (800ef04 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eebc:	3358      	adds	r3, #88	; 0x58
 800eebe:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800eec0:	4a11      	ldr	r2, [pc, #68]	; (800ef08 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800eec2:	4b12      	ldr	r3, [pc, #72]	; (800ef0c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800eec4:	f04f 35ff 	mov.w	r5, #4294967295
 800eec8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800eeca:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800eecc:	601c      	str	r4, [r3, #0]
}
 800eece:	b00b      	add	sp, #44	; 0x2c
 800eed0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800eed4:	f7fe bb38 	b.w	800d548 <xPortStartScheduler>
}
 800eed8:	b00b      	add	sp, #44	; 0x2c
 800eeda:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800eedc:	3001      	adds	r0, #1
 800eede:	d1fb      	bne.n	800eed8 <vTaskStartScheduler+0xc0>
 800eee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eee4:	f383 8811 	msr	BASEPRI, r3
 800eee8:	f3bf 8f6f 	isb	sy
 800eeec:	f3bf 8f4f 	dsb	sy
 800eef0:	e7fe      	b.n	800eef0 <vTaskStartScheduler+0xd8>
 800eef2:	bf00      	nop
 800eef4:	0802def4 	.word	0x0802def4
 800eef8:	0800e979 	.word	0x0800e979
 800eefc:	20012828 	.word	0x20012828
 800ef00:	20000160 	.word	0x20000160
 800ef04:	20012cd0 	.word	0x20012cd0
 800ef08:	20012cf0 	.word	0x20012cf0
 800ef0c:	20012d1c 	.word	0x20012d1c

0800ef10 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ef10:	4a02      	ldr	r2, [pc, #8]	; (800ef1c <vTaskSuspendAll+0xc>)
 800ef12:	6813      	ldr	r3, [r2, #0]
 800ef14:	3301      	adds	r3, #1
 800ef16:	6013      	str	r3, [r2, #0]
}
 800ef18:	4770      	bx	lr
 800ef1a:	bf00      	nop
 800ef1c:	20012c9c 	.word	0x20012c9c

0800ef20 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ef20:	4b06      	ldr	r3, [pc, #24]	; (800ef3c <xTaskResumeAll+0x1c>)
 800ef22:	681b      	ldr	r3, [r3, #0]
 800ef24:	b943      	cbnz	r3, 800ef38 <xTaskResumeAll+0x18>
 800ef26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef2a:	f383 8811 	msr	BASEPRI, r3
 800ef2e:	f3bf 8f6f 	isb	sy
 800ef32:	f3bf 8f4f 	dsb	sy
 800ef36:	e7fe      	b.n	800ef36 <xTaskResumeAll+0x16>
 800ef38:	f7ff be12 	b.w	800eb60 <xTaskResumeAll.part.0>
 800ef3c:	20012c9c 	.word	0x20012c9c

0800ef40 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ef40:	4b01      	ldr	r3, [pc, #4]	; (800ef48 <xTaskGetTickCount+0x8>)
 800ef42:	6818      	ldr	r0, [r3, #0]
}
 800ef44:	4770      	bx	lr
 800ef46:	bf00      	nop
 800ef48:	20012d1c 	.word	0x20012d1c

0800ef4c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ef4c:	4b05      	ldr	r3, [pc, #20]	; (800ef64 <xTaskIncrementTick+0x18>)
 800ef4e:	681b      	ldr	r3, [r3, #0]
 800ef50:	b90b      	cbnz	r3, 800ef56 <xTaskIncrementTick+0xa>
 800ef52:	f7ff bd61 	b.w	800ea18 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ef56:	4a04      	ldr	r2, [pc, #16]	; (800ef68 <xTaskIncrementTick+0x1c>)
 800ef58:	6813      	ldr	r3, [r2, #0]
 800ef5a:	3301      	adds	r3, #1
}
 800ef5c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ef5e:	6013      	str	r3, [r2, #0]
}
 800ef60:	4770      	bx	lr
 800ef62:	bf00      	nop
 800ef64:	20012c9c 	.word	0x20012c9c
 800ef68:	20012cd8 	.word	0x20012cd8

0800ef6c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ef6c:	4b1f      	ldr	r3, [pc, #124]	; (800efec <vTaskSwitchContext+0x80>)
 800ef6e:	681b      	ldr	r3, [r3, #0]
 800ef70:	b11b      	cbz	r3, 800ef7a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ef72:	4b1f      	ldr	r3, [pc, #124]	; (800eff0 <vTaskSwitchContext+0x84>)
 800ef74:	2201      	movs	r2, #1
 800ef76:	601a      	str	r2, [r3, #0]
 800ef78:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ef7a:	4a1d      	ldr	r2, [pc, #116]	; (800eff0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef7c:	491d      	ldr	r1, [pc, #116]	; (800eff4 <vTaskSwitchContext+0x88>)
{
 800ef7e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef80:	4c1d      	ldr	r4, [pc, #116]	; (800eff8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ef82:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef84:	6823      	ldr	r3, [r4, #0]
 800ef86:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ef8a:	0092      	lsls	r2, r2, #2
 800ef8c:	0098      	lsls	r0, r3, #2
 800ef8e:	588a      	ldr	r2, [r1, r2]
 800ef90:	b942      	cbnz	r2, 800efa4 <vTaskSwitchContext+0x38>
 800ef92:	b313      	cbz	r3, 800efda <vTaskSwitchContext+0x6e>
 800ef94:	3b01      	subs	r3, #1
 800ef96:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ef9a:	0098      	lsls	r0, r3, #2
 800ef9c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800efa0:	2a00      	cmp	r2, #0
 800efa2:	d0f6      	beq.n	800ef92 <vTaskSwitchContext+0x26>
 800efa4:	4418      	add	r0, r3
 800efa6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800efaa:	4662      	mov	r2, ip
 800efac:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800efb0:	6849      	ldr	r1, [r1, #4]
 800efb2:	f8cc 1004 	str.w	r1, [ip, #4]
 800efb6:	3208      	adds	r2, #8
 800efb8:	4291      	cmp	r1, r2
 800efba:	bf08      	it	eq
 800efbc:	6849      	ldreq	r1, [r1, #4]
 800efbe:	4a0f      	ldr	r2, [pc, #60]	; (800effc <vTaskSwitchContext+0x90>)
 800efc0:	bf08      	it	eq
 800efc2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800efc6:	68c9      	ldr	r1, [r1, #12]
 800efc8:	6011      	str	r1, [r2, #0]
 800efca:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800efcc:	6813      	ldr	r3, [r2, #0]
 800efce:	4a0c      	ldr	r2, [pc, #48]	; (800f000 <vTaskSwitchContext+0x94>)
}
 800efd0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800efd4:	3358      	adds	r3, #88	; 0x58
 800efd6:	6013      	str	r3, [r2, #0]
}
 800efd8:	4770      	bx	lr
 800efda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efde:	f383 8811 	msr	BASEPRI, r3
 800efe2:	f3bf 8f6f 	isb	sy
 800efe6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efea:	e7fe      	b.n	800efea <vTaskSwitchContext+0x7e>
 800efec:	20012c9c 	.word	0x20012c9c
 800eff0:	20012d20 	.word	0x20012d20
 800eff4:	20012834 	.word	0x20012834
 800eff8:	20012ca4 	.word	0x20012ca4
 800effc:	20012828 	.word	0x20012828
 800f000:	20000160 	.word	0x20000160

0800f004 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f004:	b1d0      	cbz	r0, 800f03c <vTaskPlaceOnEventList+0x38>
{
 800f006:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f008:	4d1a      	ldr	r5, [pc, #104]	; (800f074 <vTaskPlaceOnEventList+0x70>)
 800f00a:	460c      	mov	r4, r1
 800f00c:	6829      	ldr	r1, [r5, #0]
 800f00e:	3118      	adds	r1, #24
 800f010:	f7fe f972 	bl	800d2f8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f014:	4b18      	ldr	r3, [pc, #96]	; (800f078 <vTaskPlaceOnEventList+0x74>)
 800f016:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f018:	6828      	ldr	r0, [r5, #0]
 800f01a:	3004      	adds	r0, #4
 800f01c:	f7fe f984 	bl	800d328 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f020:	1c63      	adds	r3, r4, #1
 800f022:	d014      	beq.n	800f04e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f024:	682b      	ldr	r3, [r5, #0]
 800f026:	19a4      	adds	r4, r4, r6
 800f028:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f02a:	d317      	bcc.n	800f05c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f02c:	4b13      	ldr	r3, [pc, #76]	; (800f07c <vTaskPlaceOnEventList+0x78>)
 800f02e:	6818      	ldr	r0, [r3, #0]
 800f030:	6829      	ldr	r1, [r5, #0]
}
 800f032:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f036:	3104      	adds	r1, #4
 800f038:	f7fe b95e 	b.w	800d2f8 <vListInsert>
 800f03c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f040:	f383 8811 	msr	BASEPRI, r3
 800f044:	f3bf 8f6f 	isb	sy
 800f048:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f04c:	e7fe      	b.n	800f04c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f04e:	6829      	ldr	r1, [r5, #0]
 800f050:	480b      	ldr	r0, [pc, #44]	; (800f080 <vTaskPlaceOnEventList+0x7c>)
}
 800f052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f056:	3104      	adds	r1, #4
 800f058:	f7fe b93e 	b.w	800d2d8 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f05c:	4b09      	ldr	r3, [pc, #36]	; (800f084 <vTaskPlaceOnEventList+0x80>)
 800f05e:	6818      	ldr	r0, [r3, #0]
 800f060:	6829      	ldr	r1, [r5, #0]
 800f062:	3104      	adds	r1, #4
 800f064:	f7fe f948 	bl	800d2f8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f068:	4b07      	ldr	r3, [pc, #28]	; (800f088 <vTaskPlaceOnEventList+0x84>)
 800f06a:	681a      	ldr	r2, [r3, #0]
 800f06c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f06e:	bf38      	it	cc
 800f070:	601c      	strcc	r4, [r3, #0]
}
 800f072:	bd70      	pop	{r4, r5, r6, pc}
 800f074:	20012828 	.word	0x20012828
 800f078:	20012d1c 	.word	0x20012d1c
 800f07c:	20012830 	.word	0x20012830
 800f080:	20012cf4 	.word	0x20012cf4
 800f084:	2001282c 	.word	0x2001282c
 800f088:	20012cd0 	.word	0x20012cd0

0800f08c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f08c:	b330      	cbz	r0, 800f0dc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f08e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f090:	4e1d      	ldr	r6, [pc, #116]	; (800f108 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f092:	460c      	mov	r4, r1
 800f094:	6831      	ldr	r1, [r6, #0]
 800f096:	4615      	mov	r5, r2
 800f098:	3118      	adds	r1, #24
 800f09a:	f7fe f91d 	bl	800d2d8 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f09e:	4b1b      	ldr	r3, [pc, #108]	; (800f10c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f0a0:	b985      	cbnz	r5, 800f0c4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f0a2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0a4:	6830      	ldr	r0, [r6, #0]
 800f0a6:	3004      	adds	r0, #4
 800f0a8:	f7fe f93e 	bl	800d328 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f0ac:	6833      	ldr	r3, [r6, #0]
 800f0ae:	1964      	adds	r4, r4, r5
 800f0b0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f0b2:	d31c      	bcc.n	800f0ee <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0b4:	4b16      	ldr	r3, [pc, #88]	; (800f110 <vTaskPlaceOnEventListRestricted+0x84>)
 800f0b6:	6818      	ldr	r0, [r3, #0]
 800f0b8:	6831      	ldr	r1, [r6, #0]
	}
 800f0ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0be:	3104      	adds	r1, #4
 800f0c0:	f7fe b91a 	b.w	800d2f8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f0c4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0c6:	6830      	ldr	r0, [r6, #0]
 800f0c8:	3004      	adds	r0, #4
 800f0ca:	f7fe f92d 	bl	800d328 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0ce:	6831      	ldr	r1, [r6, #0]
 800f0d0:	4810      	ldr	r0, [pc, #64]	; (800f114 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f0d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0d6:	3104      	adds	r1, #4
 800f0d8:	f7fe b8fe 	b.w	800d2d8 <vListInsertEnd>
 800f0dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0e0:	f383 8811 	msr	BASEPRI, r3
 800f0e4:	f3bf 8f6f 	isb	sy
 800f0e8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f0ec:	e7fe      	b.n	800f0ec <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0ee:	4b0a      	ldr	r3, [pc, #40]	; (800f118 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f0f0:	6818      	ldr	r0, [r3, #0]
 800f0f2:	6831      	ldr	r1, [r6, #0]
 800f0f4:	3104      	adds	r1, #4
 800f0f6:	f7fe f8ff 	bl	800d2f8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f0fa:	4b08      	ldr	r3, [pc, #32]	; (800f11c <vTaskPlaceOnEventListRestricted+0x90>)
 800f0fc:	681a      	ldr	r2, [r3, #0]
 800f0fe:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f100:	bf38      	it	cc
 800f102:	601c      	strcc	r4, [r3, #0]
	}
 800f104:	bd70      	pop	{r4, r5, r6, pc}
 800f106:	bf00      	nop
 800f108:	20012828 	.word	0x20012828
 800f10c:	20012d1c 	.word	0x20012d1c
 800f110:	20012830 	.word	0x20012830
 800f114:	20012cf4 	.word	0x20012cf4
 800f118:	2001282c 	.word	0x2001282c
 800f11c:	20012cd0 	.word	0x20012cd0

0800f120 <xTaskRemoveFromEventList>:
{
 800f120:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f122:	68c3      	ldr	r3, [r0, #12]
 800f124:	68dc      	ldr	r4, [r3, #12]
{
 800f126:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f128:	2c00      	cmp	r4, #0
 800f12a:	d02b      	beq.n	800f184 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f12c:	f104 0518 	add.w	r5, r4, #24
 800f130:	4628      	mov	r0, r5
 800f132:	f7fe f8f9 	bl	800d328 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f136:	4b18      	ldr	r3, [pc, #96]	; (800f198 <xTaskRemoveFromEventList+0x78>)
 800f138:	681b      	ldr	r3, [r3, #0]
 800f13a:	b17b      	cbz	r3, 800f15c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f13c:	4817      	ldr	r0, [pc, #92]	; (800f19c <xTaskRemoveFromEventList+0x7c>)
 800f13e:	4629      	mov	r1, r5
 800f140:	f7fe f8ca 	bl	800d2d8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f144:	4b16      	ldr	r3, [pc, #88]	; (800f1a0 <xTaskRemoveFromEventList+0x80>)
 800f146:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f148:	681b      	ldr	r3, [r3, #0]
 800f14a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f14c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f14e:	bf85      	ittet	hi
 800f150:	4b14      	ldrhi	r3, [pc, #80]	; (800f1a4 <xTaskRemoveFromEventList+0x84>)
 800f152:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f154:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f156:	6018      	strhi	r0, [r3, #0]
}
 800f158:	b003      	add	sp, #12
 800f15a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f15c:	1d21      	adds	r1, r4, #4
 800f15e:	4608      	mov	r0, r1
 800f160:	9101      	str	r1, [sp, #4]
 800f162:	f7fe f8e1 	bl	800d328 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f166:	4a10      	ldr	r2, [pc, #64]	; (800f1a8 <xTaskRemoveFromEventList+0x88>)
 800f168:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f16a:	6810      	ldr	r0, [r2, #0]
 800f16c:	9901      	ldr	r1, [sp, #4]
 800f16e:	4283      	cmp	r3, r0
 800f170:	480e      	ldr	r0, [pc, #56]	; (800f1ac <xTaskRemoveFromEventList+0x8c>)
 800f172:	bf88      	it	hi
 800f174:	6013      	strhi	r3, [r2, #0]
 800f176:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f17a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f17e:	f7fe f8ab 	bl	800d2d8 <vListInsertEnd>
 800f182:	e7df      	b.n	800f144 <xTaskRemoveFromEventList+0x24>
 800f184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f188:	f383 8811 	msr	BASEPRI, r3
 800f18c:	f3bf 8f6f 	isb	sy
 800f190:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f194:	e7fe      	b.n	800f194 <xTaskRemoveFromEventList+0x74>
 800f196:	bf00      	nop
 800f198:	20012c9c 	.word	0x20012c9c
 800f19c:	20012cdc 	.word	0x20012cdc
 800f1a0:	20012828 	.word	0x20012828
 800f1a4:	20012d20 	.word	0x20012d20
 800f1a8:	20012ca4 	.word	0x20012ca4
 800f1ac:	20012834 	.word	0x20012834

0800f1b0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f1b0:	4a03      	ldr	r2, [pc, #12]	; (800f1c0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f1b2:	4b04      	ldr	r3, [pc, #16]	; (800f1c4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f1b4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f1b6:	681b      	ldr	r3, [r3, #0]
 800f1b8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f1bc:	4770      	bx	lr
 800f1be:	bf00      	nop
 800f1c0:	20012cd4 	.word	0x20012cd4
 800f1c4:	20012d1c 	.word	0x20012d1c

0800f1c8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f1c8:	b328      	cbz	r0, 800f216 <xTaskCheckForTimeOut+0x4e>
{
 800f1ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1cc:	460d      	mov	r5, r1
 800f1ce:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f1d0:	b1c1      	cbz	r1, 800f204 <xTaskCheckForTimeOut+0x3c>
 800f1d2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f1d4:	f7fe f926 	bl	800d424 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f1d8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f1da:	4a1d      	ldr	r2, [pc, #116]	; (800f250 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f1dc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f1de:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f1e0:	d030      	beq.n	800f244 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f1e2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f254 <xTaskCheckForTimeOut+0x8c>
 800f1e6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f1ea:	f8dc 7000 	ldr.w	r7, [ip]
 800f1ee:	42be      	cmp	r6, r7
 800f1f0:	d01a      	beq.n	800f228 <xTaskCheckForTimeOut+0x60>
 800f1f2:	4288      	cmp	r0, r1
 800f1f4:	d818      	bhi.n	800f228 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f1f6:	2001      	movs	r0, #1
 800f1f8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f1fa:	f7fe f935 	bl	800d468 <vPortExitCritical>
}
 800f1fe:	9801      	ldr	r0, [sp, #4]
 800f200:	b003      	add	sp, #12
 800f202:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f204:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f208:	f383 8811 	msr	BASEPRI, r3
 800f20c:	f3bf 8f6f 	isb	sy
 800f210:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f214:	e7fe      	b.n	800f214 <xTaskCheckForTimeOut+0x4c>
 800f216:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f21a:	f383 8811 	msr	BASEPRI, r3
 800f21e:	f3bf 8f6f 	isb	sy
 800f222:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f226:	e7fe      	b.n	800f226 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f228:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f22c:	4573      	cmp	r3, lr
 800f22e:	d90b      	bls.n	800f248 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f230:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f232:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f236:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f238:	4403      	add	r3, r0
 800f23a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f23c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f23e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f242:	e7d9      	b.n	800f1f8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f244:	2000      	movs	r0, #0
 800f246:	e7d7      	b.n	800f1f8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f248:	2300      	movs	r3, #0
 800f24a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f24c:	2001      	movs	r0, #1
 800f24e:	e7d3      	b.n	800f1f8 <xTaskCheckForTimeOut+0x30>
 800f250:	20012d1c 	.word	0x20012d1c
 800f254:	20012cd4 	.word	0x20012cd4

0800f258 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f258:	4b01      	ldr	r3, [pc, #4]	; (800f260 <vTaskMissedYield+0x8>)
 800f25a:	2201      	movs	r2, #1
 800f25c:	601a      	str	r2, [r3, #0]
}
 800f25e:	4770      	bx	lr
 800f260:	20012d20 	.word	0x20012d20

0800f264 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f264:	4b05      	ldr	r3, [pc, #20]	; (800f27c <xTaskGetSchedulerState+0x18>)
 800f266:	681b      	ldr	r3, [r3, #0]
 800f268:	b133      	cbz	r3, 800f278 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f26a:	4b05      	ldr	r3, [pc, #20]	; (800f280 <xTaskGetSchedulerState+0x1c>)
 800f26c:	6818      	ldr	r0, [r3, #0]
 800f26e:	fab0 f080 	clz	r0, r0
 800f272:	0940      	lsrs	r0, r0, #5
 800f274:	0040      	lsls	r0, r0, #1
 800f276:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f278:	2001      	movs	r0, #1
	}
 800f27a:	4770      	bx	lr
 800f27c:	20012cf0 	.word	0x20012cf0
 800f280:	20012c9c 	.word	0x20012c9c

0800f284 <xTaskPriorityInherit>:
	{
 800f284:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f286:	4604      	mov	r4, r0
	{
 800f288:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f28a:	b1c8      	cbz	r0, 800f2c0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f28c:	4d1d      	ldr	r5, [pc, #116]	; (800f304 <xTaskPriorityInherit+0x80>)
 800f28e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f290:	682a      	ldr	r2, [r5, #0]
 800f292:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f294:	4293      	cmp	r3, r2
 800f296:	d215      	bcs.n	800f2c4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f298:	6982      	ldr	r2, [r0, #24]
 800f29a:	2a00      	cmp	r2, #0
 800f29c:	db04      	blt.n	800f2a8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f29e:	682a      	ldr	r2, [r5, #0]
 800f2a0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f2a2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f2a6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f2a8:	4e17      	ldr	r6, [pc, #92]	; (800f308 <xTaskPriorityInherit+0x84>)
 800f2aa:	6962      	ldr	r2, [r4, #20]
 800f2ac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f2b0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f2b4:	429a      	cmp	r2, r3
 800f2b6:	d00e      	beq.n	800f2d6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f2b8:	682b      	ldr	r3, [r5, #0]
 800f2ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2bc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f2be:	2001      	movs	r0, #1
	}
 800f2c0:	b002      	add	sp, #8
 800f2c2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f2c4:	682b      	ldr	r3, [r5, #0]
 800f2c6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f2c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2ca:	4298      	cmp	r0, r3
 800f2cc:	bf2c      	ite	cs
 800f2ce:	2000      	movcs	r0, #0
 800f2d0:	2001      	movcc	r0, #1
	}
 800f2d2:	b002      	add	sp, #8
 800f2d4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f2d6:	1d21      	adds	r1, r4, #4
 800f2d8:	4608      	mov	r0, r1
 800f2da:	9101      	str	r1, [sp, #4]
 800f2dc:	f7fe f824 	bl	800d328 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f2e0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f2e2:	4b0a      	ldr	r3, [pc, #40]	; (800f30c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f2e4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f2e6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f2e8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f2ea:	4290      	cmp	r0, r2
 800f2ec:	bf88      	it	hi
 800f2ee:	6018      	strhi	r0, [r3, #0]
 800f2f0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f2f4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f2f8:	9901      	ldr	r1, [sp, #4]
 800f2fa:	f7fd ffed 	bl	800d2d8 <vListInsertEnd>
				xReturn = pdTRUE;
 800f2fe:	2001      	movs	r0, #1
 800f300:	e7de      	b.n	800f2c0 <xTaskPriorityInherit+0x3c>
 800f302:	bf00      	nop
 800f304:	20012828 	.word	0x20012828
 800f308:	20012834 	.word	0x20012834
 800f30c:	20012ca4 	.word	0x20012ca4

0800f310 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f310:	b318      	cbz	r0, 800f35a <xTaskPriorityDisinherit+0x4a>
	{
 800f312:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f314:	4b1e      	ldr	r3, [pc, #120]	; (800f390 <xTaskPriorityDisinherit+0x80>)
 800f316:	681c      	ldr	r4, [r3, #0]
 800f318:	4284      	cmp	r4, r0
	{
 800f31a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f31c:	d008      	beq.n	800f330 <xTaskPriorityDisinherit+0x20>
 800f31e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f322:	f383 8811 	msr	BASEPRI, r3
 800f326:	f3bf 8f6f 	isb	sy
 800f32a:	f3bf 8f4f 	dsb	sy
 800f32e:	e7fe      	b.n	800f32e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f330:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f332:	b14b      	cbz	r3, 800f348 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f334:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f336:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f338:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f33a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f33c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f33e:	d000      	beq.n	800f342 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f340:	b16b      	cbz	r3, 800f35e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f342:	2000      	movs	r0, #0
	}
 800f344:	b002      	add	sp, #8
 800f346:	bd10      	pop	{r4, pc}
 800f348:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f34c:	f383 8811 	msr	BASEPRI, r3
 800f350:	f3bf 8f6f 	isb	sy
 800f354:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f358:	e7fe      	b.n	800f358 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f35a:	2000      	movs	r0, #0
	}
 800f35c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f35e:	1d21      	adds	r1, r4, #4
 800f360:	4608      	mov	r0, r1
 800f362:	9101      	str	r1, [sp, #4]
 800f364:	f7fd ffe0 	bl	800d328 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f368:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f36a:	4a0a      	ldr	r2, [pc, #40]	; (800f394 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f36c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f36e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f372:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f374:	6810      	ldr	r0, [r2, #0]
 800f376:	9901      	ldr	r1, [sp, #4]
 800f378:	4283      	cmp	r3, r0
 800f37a:	4807      	ldr	r0, [pc, #28]	; (800f398 <xTaskPriorityDisinherit+0x88>)
 800f37c:	bf88      	it	hi
 800f37e:	6013      	strhi	r3, [r2, #0]
 800f380:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f384:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f388:	f7fd ffa6 	bl	800d2d8 <vListInsertEnd>
					xReturn = pdTRUE;
 800f38c:	2001      	movs	r0, #1
		return xReturn;
 800f38e:	e7d9      	b.n	800f344 <xTaskPriorityDisinherit+0x34>
 800f390:	20012828 	.word	0x20012828
 800f394:	20012ca4 	.word	0x20012ca4
 800f398:	20012834 	.word	0x20012834

0800f39c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f39c:	2800      	cmp	r0, #0
 800f39e:	d041      	beq.n	800f424 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f3a0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f3a2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f3a4:	b083      	sub	sp, #12
 800f3a6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f3a8:	b153      	cbz	r3, 800f3c0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f3aa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f3ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f3ae:	4281      	cmp	r1, r0
 800f3b0:	bf38      	it	cc
 800f3b2:	4601      	movcc	r1, r0
 800f3b4:	428a      	cmp	r2, r1
 800f3b6:	d001      	beq.n	800f3bc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f3b8:	2b01      	cmp	r3, #1
 800f3ba:	d00a      	beq.n	800f3d2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f3bc:	b003      	add	sp, #12
 800f3be:	bd30      	pop	{r4, r5, pc}
 800f3c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3c4:	f383 8811 	msr	BASEPRI, r3
 800f3c8:	f3bf 8f6f 	isb	sy
 800f3cc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f3d0:	e7fe      	b.n	800f3d0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f3d2:	4b19      	ldr	r3, [pc, #100]	; (800f438 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f3d4:	681b      	ldr	r3, [r3, #0]
 800f3d6:	42a3      	cmp	r3, r4
 800f3d8:	d025      	beq.n	800f426 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f3da:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f3dc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f3de:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3e0:	bfa8      	it	ge
 800f3e2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f3e6:	4d15      	ldr	r5, [pc, #84]	; (800f43c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3e8:	bfa8      	it	ge
 800f3ea:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f3ec:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f3f0:	6961      	ldr	r1, [r4, #20]
 800f3f2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f3f6:	4299      	cmp	r1, r3
 800f3f8:	d1e0      	bne.n	800f3bc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3fa:	1d21      	adds	r1, r4, #4
 800f3fc:	4608      	mov	r0, r1
 800f3fe:	9101      	str	r1, [sp, #4]
 800f400:	f7fd ff92 	bl	800d328 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f404:	4b0e      	ldr	r3, [pc, #56]	; (800f440 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f406:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f408:	681a      	ldr	r2, [r3, #0]
 800f40a:	9901      	ldr	r1, [sp, #4]
 800f40c:	4290      	cmp	r0, r2
 800f40e:	bf88      	it	hi
 800f410:	6018      	strhi	r0, [r3, #0]
 800f412:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f416:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f41a:	b003      	add	sp, #12
 800f41c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f420:	f7fd bf5a 	b.w	800d2d8 <vListInsertEnd>
 800f424:	4770      	bx	lr
 800f426:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f42a:	f383 8811 	msr	BASEPRI, r3
 800f42e:	f3bf 8f6f 	isb	sy
 800f432:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f436:	e7fe      	b.n	800f436 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f438:	20012828 	.word	0x20012828
 800f43c:	20012834 	.word	0x20012834
 800f440:	20012ca4 	.word	0x20012ca4

0800f444 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f444:	4b04      	ldr	r3, [pc, #16]	; (800f458 <pvTaskIncrementMutexHeldCount+0x14>)
 800f446:	681a      	ldr	r2, [r3, #0]
 800f448:	b11a      	cbz	r2, 800f452 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f44a:	6819      	ldr	r1, [r3, #0]
 800f44c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f44e:	3201      	adds	r2, #1
 800f450:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f452:	6818      	ldr	r0, [r3, #0]
	}
 800f454:	4770      	bx	lr
 800f456:	bf00      	nop
 800f458:	20012828 	.word	0x20012828

0800f45c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f45c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f460:	4e22      	ldr	r6, [pc, #136]	; (800f4ec <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f462:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f4f4 <prvSwitchTimerLists+0x98>
{
 800f466:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f468:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f46c:	e00d      	b.n	800f48a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f46e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f470:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f472:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f474:	1d25      	adds	r5, r4, #4
 800f476:	4628      	mov	r0, r5
 800f478:	f7fd ff56 	bl	800d328 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f47c:	6a23      	ldr	r3, [r4, #32]
 800f47e:	4620      	mov	r0, r4
 800f480:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f482:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f486:	075b      	lsls	r3, r3, #29
 800f488:	d40a      	bmi.n	800f4a0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f48a:	6833      	ldr	r3, [r6, #0]
 800f48c:	681a      	ldr	r2, [r3, #0]
 800f48e:	2a00      	cmp	r2, #0
 800f490:	d1ed      	bne.n	800f46e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f492:	4a17      	ldr	r2, [pc, #92]	; (800f4f0 <prvSwitchTimerLists+0x94>)
 800f494:	6811      	ldr	r1, [r2, #0]
 800f496:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f498:	6013      	str	r3, [r2, #0]
}
 800f49a:	b005      	add	sp, #20
 800f49c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f4a0:	69a3      	ldr	r3, [r4, #24]
 800f4a2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f4a4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4a6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f4a8:	d205      	bcs.n	800f4b6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4aa:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f4ac:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4ae:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4b0:	f7fd ff22 	bl	800d2f8 <vListInsert>
 800f4b4:	e7e9      	b.n	800f48a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f4b6:	f8d9 3000 	ldr.w	r3, [r9]
 800f4ba:	b16b      	cbz	r3, 800f4d8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f4bc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f4c0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f4c2:	f7ff fecf 	bl	800f264 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f4c6:	2300      	movs	r3, #0
 800f4c8:	f8d9 0000 	ldr.w	r0, [r9]
 800f4cc:	461a      	mov	r2, r3
 800f4ce:	4669      	mov	r1, sp
 800f4d0:	f7fe fa9c 	bl	800da0c <xQueueGenericSend>
				configASSERT( xResult );
 800f4d4:	2800      	cmp	r0, #0
 800f4d6:	d1d8      	bne.n	800f48a <prvSwitchTimerLists+0x2e>
 800f4d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4dc:	f383 8811 	msr	BASEPRI, r3
 800f4e0:	f3bf 8f6f 	isb	sy
 800f4e4:	f3bf 8f4f 	dsb	sy
 800f4e8:	e7fe      	b.n	800f4e8 <prvSwitchTimerLists+0x8c>
 800f4ea:	bf00      	nop
 800f4ec:	20012d24 	.word	0x20012d24
 800f4f0:	20012d28 	.word	0x20012d28
 800f4f4:	20012e48 	.word	0x20012e48

0800f4f8 <prvTimerTask>:
{
 800f4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4fc:	4e9b      	ldr	r6, [pc, #620]	; (800f76c <prvTimerTask+0x274>)
 800f4fe:	4d9c      	ldr	r5, [pc, #624]	; (800f770 <prvTimerTask+0x278>)
 800f500:	4c9c      	ldr	r4, [pc, #624]	; (800f774 <prvTimerTask+0x27c>)
 800f502:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f504:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f508:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f50c:	6833      	ldr	r3, [r6, #0]
 800f50e:	681f      	ldr	r7, [r3, #0]
 800f510:	2f00      	cmp	r7, #0
 800f512:	f000 80a8 	beq.w	800f666 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f516:	68db      	ldr	r3, [r3, #12]
 800f518:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f51a:	f7ff fcf9 	bl	800ef10 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f51e:	f7ff fd0f 	bl	800ef40 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f522:	682a      	ldr	r2, [r5, #0]
 800f524:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f526:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f528:	f0c0 80ae 	bcc.w	800f688 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f52c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f52e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f530:	f240 80b4 	bls.w	800f69c <prvTimerTask+0x1a4>
 800f534:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f536:	6820      	ldr	r0, [r4, #0]
 800f538:	eba7 010a 	sub.w	r1, r7, sl
 800f53c:	f7ff f89a 	bl	800e674 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f540:	f7ff fcee 	bl	800ef20 <xTaskResumeAll>
 800f544:	b928      	cbnz	r0, 800f552 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f546:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f54a:	f3bf 8f4f 	dsb	sy
 800f54e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f552:	6820      	ldr	r0, [r4, #0]
 800f554:	2200      	movs	r2, #0
 800f556:	a902      	add	r1, sp, #8
 800f558:	f7fe fc94 	bl	800de84 <xQueueReceive>
 800f55c:	2800      	cmp	r0, #0
 800f55e:	d0d5      	beq.n	800f50c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f560:	9b02      	ldr	r3, [sp, #8]
 800f562:	2b00      	cmp	r3, #0
 800f564:	db76      	blt.n	800f654 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f566:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f568:	697b      	ldr	r3, [r7, #20]
 800f56a:	b113      	cbz	r3, 800f572 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f56c:	1d38      	adds	r0, r7, #4
 800f56e:	f7fd fedb 	bl	800d328 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f572:	f7ff fce5 	bl	800ef40 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f576:	682b      	ldr	r3, [r5, #0]
 800f578:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f57a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f57c:	f0c0 808b 	bcc.w	800f696 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f580:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f582:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f586:	2b09      	cmp	r3, #9
 800f588:	d8e3      	bhi.n	800f552 <prvTimerTask+0x5a>
 800f58a:	e8df f003 	tbb	[pc, r3]
 800f58e:	0505      	.short	0x0505
 800f590:	5a3d5305 	.word	0x5a3d5305
 800f594:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f598:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f59c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f59e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f5a0:	f043 0301 	orr.w	r3, r3, #1
 800f5a4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f5a8:	9b03      	ldr	r3, [sp, #12]
 800f5aa:	1899      	adds	r1, r3, r2
 800f5ac:	bf2c      	ite	cs
 800f5ae:	2001      	movcs	r0, #1
 800f5b0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f5b2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f5b4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f5b6:	f200 808c 	bhi.w	800f6d2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5ba:	ebaa 0303 	sub.w	r3, sl, r3
 800f5be:	429a      	cmp	r2, r3
 800f5c0:	d832      	bhi.n	800f628 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f5c2:	6a3b      	ldr	r3, [r7, #32]
 800f5c4:	4638      	mov	r0, r7
 800f5c6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f5c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f5cc:	075b      	lsls	r3, r3, #29
 800f5ce:	d5c0      	bpl.n	800f552 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f5d0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f5d2:	9903      	ldr	r1, [sp, #12]
 800f5d4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f5d6:	b172      	cbz	r2, 800f5f6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f5d8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f5da:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f5de:	2300      	movs	r3, #0
 800f5e0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f5e2:	f7ff fe3f 	bl	800f264 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f5e6:	2300      	movs	r3, #0
 800f5e8:	6820      	ldr	r0, [r4, #0]
 800f5ea:	461a      	mov	r2, r3
 800f5ec:	a906      	add	r1, sp, #24
 800f5ee:	f7fe fa0d 	bl	800da0c <xQueueGenericSend>
							configASSERT( xResult );
 800f5f2:	2800      	cmp	r0, #0
 800f5f4:	d1ad      	bne.n	800f552 <prvTimerTask+0x5a>
 800f5f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5fa:	f383 8811 	msr	BASEPRI, r3
 800f5fe:	f3bf 8f6f 	isb	sy
 800f602:	f3bf 8f4f 	dsb	sy
 800f606:	e7fe      	b.n	800f606 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f608:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f60c:	f043 0301 	orr.w	r3, r3, #1
 800f610:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f614:	9b03      	ldr	r3, [sp, #12]
 800f616:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f618:	2b00      	cmp	r3, #0
 800f61a:	f000 809d 	beq.w	800f758 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f61e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f620:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f622:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f624:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f626:	d85e      	bhi.n	800f6e6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f628:	4b53      	ldr	r3, [pc, #332]	; (800f778 <prvTimerTask+0x280>)
 800f62a:	1d39      	adds	r1, r7, #4
 800f62c:	6818      	ldr	r0, [r3, #0]
 800f62e:	f7fd fe63 	bl	800d2f8 <vListInsert>
	return xProcessTimerNow;
 800f632:	e78e      	b.n	800f552 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f634:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f638:	f023 0301 	bic.w	r3, r3, #1
 800f63c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f640:	e787      	b.n	800f552 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f642:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f646:	079a      	lsls	r2, r3, #30
 800f648:	d552      	bpl.n	800f6f0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f64a:	f023 0301 	bic.w	r3, r3, #1
 800f64e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f652:	e77e      	b.n	800f552 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f654:	9b03      	ldr	r3, [sp, #12]
 800f656:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f65a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f65c:	9b02      	ldr	r3, [sp, #8]
 800f65e:	2b00      	cmp	r3, #0
 800f660:	f6ff af77 	blt.w	800f552 <prvTimerTask+0x5a>
 800f664:	e77f      	b.n	800f566 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f666:	f7ff fc53 	bl	800ef10 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f66a:	f7ff fc69 	bl	800ef40 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f66e:	682a      	ldr	r2, [r5, #0]
 800f670:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f672:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f674:	d808      	bhi.n	800f688 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f676:	4b40      	ldr	r3, [pc, #256]	; (800f778 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f678:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f67c:	681a      	ldr	r2, [r3, #0]
 800f67e:	6812      	ldr	r2, [r2, #0]
 800f680:	fab2 f282 	clz	r2, r2
 800f684:	0952      	lsrs	r2, r2, #5
 800f686:	e756      	b.n	800f536 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f688:	f7ff fee8 	bl	800f45c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f68c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f690:	f7ff fc46 	bl	800ef20 <xTaskResumeAll>
 800f694:	e75d      	b.n	800f552 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f696:	f7ff fee1 	bl	800f45c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f69a:	e771      	b.n	800f580 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f69c:	f7ff fc40 	bl	800ef20 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6a0:	6832      	ldr	r2, [r6, #0]
 800f6a2:	68d2      	ldr	r2, [r2, #12]
 800f6a4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f6a8:	f10b 0104 	add.w	r1, fp, #4
 800f6ac:	4608      	mov	r0, r1
 800f6ae:	9101      	str	r1, [sp, #4]
 800f6b0:	f7fd fe3a 	bl	800d328 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f6b4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f6b8:	9901      	ldr	r1, [sp, #4]
 800f6ba:	f010 0f04 	tst.w	r0, #4
 800f6be:	d11b      	bne.n	800f6f8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f6c0:	f020 0001 	bic.w	r0, r0, #1
 800f6c4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f6c8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f6cc:	4658      	mov	r0, fp
 800f6ce:	4798      	blx	r3
}
 800f6d0:	e73f      	b.n	800f552 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f6d2:	4553      	cmp	r3, sl
 800f6d4:	d902      	bls.n	800f6dc <prvTimerTask+0x1e4>
 800f6d6:	2800      	cmp	r0, #0
 800f6d8:	f43f af73 	beq.w	800f5c2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f6dc:	6830      	ldr	r0, [r6, #0]
 800f6de:	1d39      	adds	r1, r7, #4
 800f6e0:	f7fd fe0a 	bl	800d2f8 <vListInsert>
	return xProcessTimerNow;
 800f6e4:	e735      	b.n	800f552 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f6e6:	6830      	ldr	r0, [r6, #0]
 800f6e8:	1d39      	adds	r1, r7, #4
 800f6ea:	f7fd fe05 	bl	800d2f8 <vListInsert>
 800f6ee:	e730      	b.n	800f552 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f6f0:	4638      	mov	r0, r7
 800f6f2:	f7fd fd7d 	bl	800d1f0 <vPortFree>
 800f6f6:	e72c      	b.n	800f552 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f6f8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f6fc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f700:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f702:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f704:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f708:	d903      	bls.n	800f712 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f70a:	6830      	ldr	r0, [r6, #0]
 800f70c:	f7fd fdf4 	bl	800d2f8 <vListInsert>
	return xProcessTimerNow;
 800f710:	e7da      	b.n	800f6c8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f712:	ebaa 0307 	sub.w	r3, sl, r7
 800f716:	429a      	cmp	r2, r3
 800f718:	d819      	bhi.n	800f74e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f71a:	6823      	ldr	r3, [r4, #0]
 800f71c:	b173      	cbz	r3, 800f73c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f71e:	2300      	movs	r3, #0
 800f720:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f722:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f724:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f728:	f7ff fd9c 	bl	800f264 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f72c:	2300      	movs	r3, #0
 800f72e:	6820      	ldr	r0, [r4, #0]
 800f730:	461a      	mov	r2, r3
 800f732:	a906      	add	r1, sp, #24
 800f734:	f7fe f96a 	bl	800da0c <xQueueGenericSend>
			configASSERT( xResult );
 800f738:	2800      	cmp	r0, #0
 800f73a:	d1c5      	bne.n	800f6c8 <prvTimerTask+0x1d0>
 800f73c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f740:	f383 8811 	msr	BASEPRI, r3
 800f744:	f3bf 8f6f 	isb	sy
 800f748:	f3bf 8f4f 	dsb	sy
 800f74c:	e7fe      	b.n	800f74c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f74e:	4b0a      	ldr	r3, [pc, #40]	; (800f778 <prvTimerTask+0x280>)
 800f750:	6818      	ldr	r0, [r3, #0]
 800f752:	f7fd fdd1 	bl	800d2f8 <vListInsert>
	return xProcessTimerNow;
 800f756:	e7b7      	b.n	800f6c8 <prvTimerTask+0x1d0>
 800f758:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f75c:	f383 8811 	msr	BASEPRI, r3
 800f760:	f3bf 8f6f 	isb	sy
 800f764:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f768:	e7fe      	b.n	800f768 <prvTimerTask+0x270>
 800f76a:	bf00      	nop
 800f76c:	20012d24 	.word	0x20012d24
 800f770:	20012df4 	.word	0x20012df4
 800f774:	20012e48 	.word	0x20012e48
 800f778:	20012d28 	.word	0x20012d28

0800f77c <xTimerCreateTimerTask>:
{
 800f77c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f77e:	4c23      	ldr	r4, [pc, #140]	; (800f80c <xTimerCreateTimerTask+0x90>)
{
 800f780:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f782:	f7fd fe4f 	bl	800d424 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f786:	6825      	ldr	r5, [r4, #0]
 800f788:	b335      	cbz	r5, 800f7d8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f78a:	f7fd fe6d 	bl	800d468 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f78e:	6823      	ldr	r3, [r4, #0]
 800f790:	b1cb      	cbz	r3, 800f7c6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f792:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f794:	aa07      	add	r2, sp, #28
 800f796:	a906      	add	r1, sp, #24
 800f798:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f79a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f79e:	f7fd fc5b 	bl	800d058 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f7a2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f7a6:	2302      	movs	r3, #2
 800f7a8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f7ac:	9300      	str	r3, [sp, #0]
 800f7ae:	9a07      	ldr	r2, [sp, #28]
 800f7b0:	4917      	ldr	r1, [pc, #92]	; (800f810 <xTimerCreateTimerTask+0x94>)
 800f7b2:	4818      	ldr	r0, [pc, #96]	; (800f814 <xTimerCreateTimerTask+0x98>)
 800f7b4:	4623      	mov	r3, r4
 800f7b6:	f7ff fa6d 	bl	800ec94 <xTaskCreateStatic>
 800f7ba:	4b17      	ldr	r3, [pc, #92]	; (800f818 <xTimerCreateTimerTask+0x9c>)
 800f7bc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f7be:	b110      	cbz	r0, 800f7c6 <xTimerCreateTimerTask+0x4a>
}
 800f7c0:	2001      	movs	r0, #1
 800f7c2:	b009      	add	sp, #36	; 0x24
 800f7c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7ca:	f383 8811 	msr	BASEPRI, r3
 800f7ce:	f3bf 8f6f 	isb	sy
 800f7d2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f7d6:	e7fe      	b.n	800f7d6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f7d8:	4f10      	ldr	r7, [pc, #64]	; (800f81c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f7da:	4e11      	ldr	r6, [pc, #68]	; (800f820 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f7dc:	4638      	mov	r0, r7
 800f7de:	f7fd fd6b 	bl	800d2b8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f7e2:	4630      	mov	r0, r6
 800f7e4:	f7fd fd68 	bl	800d2b8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f7e8:	4a0e      	ldr	r2, [pc, #56]	; (800f824 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f7ea:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f7ec:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f7ee:	4a0e      	ldr	r2, [pc, #56]	; (800f828 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f7f0:	4b0e      	ldr	r3, [pc, #56]	; (800f82c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f7f2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f7f4:	2110      	movs	r1, #16
 800f7f6:	4a0e      	ldr	r2, [pc, #56]	; (800f830 <xTimerCreateTimerTask+0xb4>)
 800f7f8:	200a      	movs	r0, #10
 800f7fa:	f7fd ffb1 	bl	800d760 <xQueueGenericCreateStatic>
 800f7fe:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f800:	2800      	cmp	r0, #0
 800f802:	d0c2      	beq.n	800f78a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f804:	490b      	ldr	r1, [pc, #44]	; (800f834 <xTimerCreateTimerTask+0xb8>)
 800f806:	f7fe ff0d 	bl	800e624 <vQueueAddToRegistry>
 800f80a:	e7be      	b.n	800f78a <xTimerCreateTimerTask+0xe>
 800f80c:	20012e48 	.word	0x20012e48
 800f810:	0802df04 	.word	0x0802df04
 800f814:	0800f4f9 	.word	0x0800f4f9
 800f818:	20012e4c 	.word	0x20012e4c
 800f81c:	20012dcc 	.word	0x20012dcc
 800f820:	20012de0 	.word	0x20012de0
 800f824:	20012d24 	.word	0x20012d24
 800f828:	20012d28 	.word	0x20012d28
 800f82c:	20012df8 	.word	0x20012df8
 800f830:	20012d2c 	.word	0x20012d2c
 800f834:	0802defc 	.word	0x0802defc

0800f838 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f838:	8880      	ldrh	r0, [r0, #4]
 800f83a:	4770      	bx	lr

0800f83c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f83c:	b570      	push	{r4, r5, r6, lr}
 800f83e:	6803      	ldr	r3, [r0, #0]
 800f840:	4605      	mov	r5, r0
 800f842:	460c      	mov	r4, r1
 800f844:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f846:	2100      	movs	r1, #0
 800f848:	4798      	blx	r3
 800f84a:	682b      	ldr	r3, [r5, #0]
 800f84c:	4606      	mov	r6, r0
 800f84e:	6a1b      	ldr	r3, [r3, #32]
 800f850:	4628      	mov	r0, r5
 800f852:	4798      	blx	r3
 800f854:	1ba4      	subs	r4, r4, r6
 800f856:	b2a4      	uxth	r4, r4
 800f858:	fbb4 f0f0 	udiv	r0, r4, r0
 800f85c:	bd70      	pop	{r4, r5, r6, pc}

0800f85e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f85e:	2300      	movs	r3, #0
 800f860:	8083      	strh	r3, [r0, #4]
 800f862:	4770      	bx	lr

0800f864 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f864:	b510      	push	{r4, lr}
 800f866:	6803      	ldr	r3, [r0, #0]
 800f868:	8881      	ldrh	r1, [r0, #4]
 800f86a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f86c:	4604      	mov	r4, r0
 800f86e:	4798      	blx	r3
 800f870:	88a3      	ldrh	r3, [r4, #4]
 800f872:	3301      	adds	r3, #1
 800f874:	80a3      	strh	r3, [r4, #4]
 800f876:	bd10      	pop	{r4, pc}

0800f878 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f878:	6803      	ldr	r3, [r0, #0]
 800f87a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f87c:	4718      	bx	r3

0800f87e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f87e:	4770      	bx	lr

0800f880 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f880:	4a02      	ldr	r2, [pc, #8]	; (800f88c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f882:	6002      	str	r2, [r0, #0]
 800f884:	2200      	movs	r2, #0
 800f886:	8082      	strh	r2, [r0, #4]
 800f888:	4770      	bx	lr
 800f88a:	bf00      	nop
 800f88c:	0802df14 	.word	0x0802df14

0800f890 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f890:	b510      	push	{r4, lr}
 800f892:	6803      	ldr	r3, [r0, #0]
 800f894:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f898:	4604      	mov	r4, r0
 800f89a:	4798      	blx	r3
 800f89c:	b110      	cbz	r0, 800f8a4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f89e:	4620      	mov	r0, r4
 800f8a0:	f7f1 fbbc 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f8a4:	bd10      	pop	{r4, pc}

0800f8a6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f8a6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f8aa:	4770      	bx	lr

0800f8ac <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f8ac:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f8b0:	4770      	bx	lr

0800f8b2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f8b2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f8b6:	4770      	bx	lr

0800f8b8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f8b8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f8bc:	4770      	bx	lr

0800f8be <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f8be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8c0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f8c4:	461e      	mov	r6, r3
 800f8c6:	6803      	ldr	r3, [r0, #0]
 800f8c8:	460f      	mov	r7, r1
 800f8ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f8ce:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f8d2:	4604      	mov	r4, r0
 800f8d4:	4615      	mov	r5, r2
 800f8d6:	4798      	blx	r3
 800f8d8:	b93e      	cbnz	r6, 800f8ea <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f8da:	1bed      	subs	r5, r5, r7
 800f8dc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f8e0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f8e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f8e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8ea:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f8ee:	e7f7      	b.n	800f8e0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f8f0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f8f0:	b510      	push	{r4, lr}
 800f8f2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f8f6:	600c      	str	r4, [r1, #0]
 800f8f8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f8fc:	6011      	str	r1, [r2, #0]
 800f8fe:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f902:	801a      	strh	r2, [r3, #0]
 800f904:	9b02      	ldr	r3, [sp, #8]
 800f906:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f90a:	801a      	strh	r2, [r3, #0]
 800f90c:	bd10      	pop	{r4, pc}

0800f90e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f90e:	b510      	push	{r4, lr}
 800f910:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f914:	600c      	str	r4, [r1, #0]
 800f916:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f91a:	6011      	str	r1, [r2, #0]
 800f91c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f920:	801a      	strh	r2, [r3, #0]
 800f922:	bd10      	pop	{r4, pc}

0800f924 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f924:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f928:	600b      	str	r3, [r1, #0]
 800f92a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f92e:	6013      	str	r3, [r2, #0]
 800f930:	4770      	bx	lr

0800f932 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f932:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f936:	4770      	bx	lr

0800f938 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f938:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f93c:	4770      	bx	lr

0800f93e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f93e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f942:	4770      	bx	lr

0800f944 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f944:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f948:	4770      	bx	lr

0800f94a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f94a:	4770      	bx	lr

0800f94c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f94c:	b510      	push	{r4, lr}
 800f94e:	21b4      	movs	r1, #180	; 0xb4
 800f950:	4604      	mov	r4, r0
 800f952:	f019 fc84 	bl	802925e <_ZdlPvj>
 800f956:	4620      	mov	r0, r4
 800f958:	bd10      	pop	{r4, pc}

0800f95a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f95a:	b570      	push	{r4, r5, r6, lr}
 800f95c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f960:	428d      	cmp	r5, r1
 800f962:	bfb8      	it	lt
 800f964:	460d      	movlt	r5, r1
 800f966:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f96a:	428d      	cmp	r5, r1
 800f96c:	4604      	mov	r4, r0
 800f96e:	bfa8      	it	ge
 800f970:	460d      	movge	r5, r1
 800f972:	4616      	mov	r6, r2
 800f974:	b99a      	cbnz	r2, 800f99e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f976:	6803      	ldr	r3, [r0, #0]
 800f978:	4629      	mov	r1, r5
 800f97a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f97e:	4798      	blx	r3
 800f980:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f984:	b368      	cbz	r0, 800f9e2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f986:	6803      	ldr	r3, [r0, #0]
 800f988:	68db      	ldr	r3, [r3, #12]
 800f98a:	4798      	blx	r3
 800f98c:	b348      	cbz	r0, 800f9e2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f98e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f992:	6803      	ldr	r3, [r0, #0]
 800f994:	4621      	mov	r1, r4
 800f996:	689b      	ldr	r3, [r3, #8]
 800f998:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f99c:	4718      	bx	r3
 800f99e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f9a2:	2b00      	cmp	r3, #0
 800f9a4:	dd08      	ble.n	800f9b8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f9a6:	f005 fbe3 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 800f9aa:	4621      	mov	r1, r4
 800f9ac:	3004      	adds	r0, #4
 800f9ae:	f005 fc2c 	bl	801520a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f9b2:	2300      	movs	r3, #0
 800f9b4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f9b8:	6823      	ldr	r3, [r4, #0]
 800f9ba:	4620      	mov	r0, r4
 800f9bc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f9c0:	4798      	blx	r3
 800f9c2:	2300      	movs	r3, #0
 800f9c4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f9c8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f9cc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f9d0:	f005 fbce 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 800f9d4:	4621      	mov	r1, r4
 800f9d6:	3004      	adds	r0, #4
 800f9d8:	f005 fcc0 	bl	801535c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f9dc:	2301      	movs	r3, #1
 800f9de:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f9e2:	bd70      	pop	{r4, r5, r6, pc}

0800f9e4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f9e4:	b510      	push	{r4, lr}
 800f9e6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f9ea:	4299      	cmp	r1, r3
 800f9ec:	bfb8      	it	lt
 800f9ee:	4619      	movlt	r1, r3
 800f9f0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f9f4:	4299      	cmp	r1, r3
 800f9f6:	bfa8      	it	ge
 800f9f8:	4619      	movge	r1, r3
 800f9fa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f9fe:	428b      	cmp	r3, r1
 800fa00:	4604      	mov	r4, r0
 800fa02:	d010      	beq.n	800fa26 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa04:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fa08:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fa0c:	b158      	cbz	r0, 800fa26 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa0e:	6803      	ldr	r3, [r0, #0]
 800fa10:	68db      	ldr	r3, [r3, #12]
 800fa12:	4798      	blx	r3
 800fa14:	b138      	cbz	r0, 800fa26 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa16:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fa1a:	6803      	ldr	r3, [r0, #0]
 800fa1c:	4621      	mov	r1, r4
 800fa1e:	689b      	ldr	r3, [r3, #8]
 800fa20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa24:	4718      	bx	r3
 800fa26:	bd10      	pop	{r4, pc}

0800fa28 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fa28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fa2a:	4604      	mov	r4, r0
 800fa2c:	460d      	mov	r5, r1
 800fa2e:	b1a9      	cbz	r1, 800fa5c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fa30:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fa34:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fa38:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fa3c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fa40:	ab01      	add	r3, sp, #4
 800fa42:	1a12      	subs	r2, r2, r0
 800fa44:	1b89      	subs	r1, r1, r6
 800fa46:	1a38      	subs	r0, r7, r0
 800fa48:	f006 fe48 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 800fa4c:	4629      	mov	r1, r5
 800fa4e:	ab01      	add	r3, sp, #4
 800fa50:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fa54:	4430      	add	r0, r6
 800fa56:	f006 fe41 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 800fa5a:	b285      	uxth	r5, r0
 800fa5c:	4628      	mov	r0, r5
 800fa5e:	b003      	add	sp, #12
 800fa60:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fa62 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fa62:	b570      	push	{r4, r5, r6, lr}
 800fa64:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fa68:	4604      	mov	r4, r0
 800fa6a:	2b00      	cmp	r3, #0
 800fa6c:	d035      	beq.n	800fada <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fa6e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800fa72:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800fa76:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800fa7a:	3001      	adds	r0, #1
 800fa7c:	1ad2      	subs	r2, r2, r3
 800fa7e:	b212      	sxth	r2, r2
 800fa80:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fa84:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fa88:	2100      	movs	r1, #0
 800fa8a:	b280      	uxth	r0, r0
 800fa8c:	47a8      	blx	r5
 800fa8e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fa92:	6823      	ldr	r3, [r4, #0]
 800fa94:	4401      	add	r1, r0
 800fa96:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fa9a:	4620      	mov	r0, r4
 800fa9c:	4798      	blx	r3
 800fa9e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800faa2:	429a      	cmp	r2, r3
 800faa4:	db19      	blt.n	800fada <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800faa6:	2500      	movs	r5, #0
 800faa8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800faac:	f005 fb60 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 800fab0:	4621      	mov	r1, r4
 800fab2:	3004      	adds	r0, #4
 800fab4:	f005 fba9 	bl	801520a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fab8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fabc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fac0:	b158      	cbz	r0, 800fada <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fac2:	6803      	ldr	r3, [r0, #0]
 800fac4:	68db      	ldr	r3, [r3, #12]
 800fac6:	4798      	blx	r3
 800fac8:	b138      	cbz	r0, 800fada <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800faca:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800face:	6803      	ldr	r3, [r0, #0]
 800fad0:	4621      	mov	r1, r4
 800fad2:	689b      	ldr	r3, [r3, #8]
 800fad4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fad8:	4718      	bx	r3
 800fada:	bd70      	pop	{r4, r5, r6, pc}

0800fadc <_ZN8touchgfx8DrawableC1Ev>:
 800fadc:	4a0a      	ldr	r2, [pc, #40]	; (800fb08 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fade:	6002      	str	r2, [r0, #0]
 800fae0:	2200      	movs	r2, #0
 800fae2:	8082      	strh	r2, [r0, #4]
 800fae4:	80c2      	strh	r2, [r0, #6]
 800fae6:	8102      	strh	r2, [r0, #8]
 800fae8:	8142      	strh	r2, [r0, #10]
 800faea:	8182      	strh	r2, [r0, #12]
 800faec:	81c2      	strh	r2, [r0, #14]
 800faee:	8202      	strh	r2, [r0, #16]
 800faf0:	8242      	strh	r2, [r0, #18]
 800faf2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800faf6:	61c2      	str	r2, [r0, #28]
 800faf8:	8402      	strh	r2, [r0, #32]
 800fafa:	8442      	strh	r2, [r0, #34]	; 0x22
 800fafc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fb00:	2201      	movs	r2, #1
 800fb02:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fb06:	4770      	bx	lr
 800fb08:	0802e6b4 	.word	0x0802e6b4

0800fb0c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fb0c:	b570      	push	{r4, r5, r6, lr}
 800fb0e:	6803      	ldr	r3, [r0, #0]
 800fb10:	4604      	mov	r4, r0
 800fb12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fb14:	4615      	mov	r5, r2
 800fb16:	4798      	blx	r3
 800fb18:	6823      	ldr	r3, [r4, #0]
 800fb1a:	4629      	mov	r1, r5
 800fb1c:	4620      	mov	r0, r4
 800fb1e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb24:	4718      	bx	r3

0800fb26 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fb26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb2a:	4604      	mov	r4, r0
 800fb2c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fb30:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fb34:	460e      	mov	r6, r1
 800fb36:	4615      	mov	r5, r2
 800fb38:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fb3c:	4619      	mov	r1, r3
 800fb3e:	463a      	mov	r2, r7
 800fb40:	3058      	adds	r0, #88	; 0x58
 800fb42:	4698      	mov	r8, r3
 800fb44:	f7ff ffe2 	bl	800fb0c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fb48:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fb4c:	4446      	add	r6, r8
 800fb4e:	42b3      	cmp	r3, r6
 800fb50:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fb54:	bfb8      	it	lt
 800fb56:	8126      	strhlt	r6, [r4, #8]
 800fb58:	443d      	add	r5, r7
 800fb5a:	42ab      	cmp	r3, r5
 800fb5c:	bfb8      	it	lt
 800fb5e:	8165      	strhlt	r5, [r4, #10]
 800fb60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb64 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fb64:	b510      	push	{r4, lr}
 800fb66:	4604      	mov	r4, r0
 800fb68:	302c      	adds	r0, #44	; 0x2c
 800fb6a:	f002 fdf8 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fb6e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fb72:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fb76:	4620      	mov	r0, r4
 800fb78:	f7ff ffc8 	bl	800fb0c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fb7c:	bd10      	pop	{r4, pc}
	...

0800fb80 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fb80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fb82:	4604      	mov	r4, r0
 800fb84:	4626      	mov	r6, r4
 800fb86:	2500      	movs	r5, #0
 800fb88:	f7ff ffa8 	bl	800fadc <_ZN8touchgfx8DrawableC1Ev>
 800fb8c:	4b23      	ldr	r3, [pc, #140]	; (800fc1c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fb8e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fb90:	f846 3b2c 	str.w	r3, [r6], #44
 800fb94:	2226      	movs	r2, #38	; 0x26
 800fb96:	4629      	mov	r1, r5
 800fb98:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fb9c:	4630      	mov	r0, r6
 800fb9e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fba2:	f01a fb74 	bl	802a28e <memset>
 800fba6:	4630      	mov	r0, r6
 800fba8:	f7ff ff98 	bl	800fadc <_ZN8touchgfx8DrawableC1Ev>
 800fbac:	a902      	add	r1, sp, #8
 800fbae:	4b1c      	ldr	r3, [pc, #112]	; (800fc20 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fbb0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fbb2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fbb6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fbba:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fbbe:	4630      	mov	r0, r6
 800fbc0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fbc4:	f002 fdcb 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fbc8:	4638      	mov	r0, r7
 800fbca:	f7ff ff87 	bl	800fadc <_ZN8touchgfx8DrawableC1Ev>
 800fbce:	4b15      	ldr	r3, [pc, #84]	; (800fc24 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fbd0:	65a3      	str	r3, [r4, #88]	; 0x58
 800fbd2:	2364      	movs	r3, #100	; 0x64
 800fbd4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fbd8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fbdc:	4b12      	ldr	r3, [pc, #72]	; (800fc28 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fbde:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fbe2:	4629      	mov	r1, r5
 800fbe4:	4630      	mov	r0, r6
 800fbe6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fbea:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fbee:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fbf2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fbf6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fbfa:	f7f1 f96b 	bl	8000ed4 <_ZN8touchgfx8Drawable4setXEs>
 800fbfe:	4629      	mov	r1, r5
 800fc00:	4630      	mov	r0, r6
 800fc02:	f7f1 f969 	bl	8000ed8 <_ZN8touchgfx8Drawable4setYEs>
 800fc06:	4631      	mov	r1, r6
 800fc08:	4620      	mov	r0, r4
 800fc0a:	f000 f819 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fc0e:	4620      	mov	r0, r4
 800fc10:	4639      	mov	r1, r7
 800fc12:	f000 f815 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fc16:	4620      	mov	r0, r4
 800fc18:	b003      	add	sp, #12
 800fc1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc1c:	0802df48 	.word	0x0802df48
 800fc20:	0802e570 	.word	0x0802e570
 800fc24:	0802e01c 	.word	0x0802e01c
 800fc28:	08016e3b 	.word	0x08016e3b

0800fc2c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fc2c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fc2e:	2000      	movs	r0, #0
 800fc30:	b12b      	cbz	r3, 800fc3e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fc32:	b920      	cbnz	r0, 800fc3e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fc34:	1a5a      	subs	r2, r3, r1
 800fc36:	4250      	negs	r0, r2
 800fc38:	4150      	adcs	r0, r2
 800fc3a:	699b      	ldr	r3, [r3, #24]
 800fc3c:	e7f8      	b.n	800fc30 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fc3e:	4770      	bx	lr

0800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fc40:	2300      	movs	r3, #0
 800fc42:	6148      	str	r0, [r1, #20]
 800fc44:	618b      	str	r3, [r1, #24]
 800fc46:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fc48:	b913      	cbnz	r3, 800fc50 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fc4a:	6281      	str	r1, [r0, #40]	; 0x28
 800fc4c:	4770      	bx	lr
 800fc4e:	4613      	mov	r3, r2
 800fc50:	699a      	ldr	r2, [r3, #24]
 800fc52:	2a00      	cmp	r2, #0
 800fc54:	d1fb      	bne.n	800fc4e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fc56:	6199      	str	r1, [r3, #24]
 800fc58:	4770      	bx	lr

0800fc5a <_ZN8touchgfx9Container9removeAllEv>:
 800fc5a:	2200      	movs	r2, #0
 800fc5c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fc5e:	b123      	cbz	r3, 800fc6a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fc60:	6999      	ldr	r1, [r3, #24]
 800fc62:	6281      	str	r1, [r0, #40]	; 0x28
 800fc64:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fc68:	e7f8      	b.n	800fc5c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fc6a:	4770      	bx	lr

0800fc6c <_ZN8touchgfx9Container6unlinkEv>:
 800fc6c:	2300      	movs	r3, #0
 800fc6e:	6283      	str	r3, [r0, #40]	; 0x28
 800fc70:	4770      	bx	lr

0800fc72 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fc72:	2200      	movs	r2, #0
 800fc74:	8002      	strh	r2, [r0, #0]
 800fc76:	8042      	strh	r2, [r0, #2]
 800fc78:	8082      	strh	r2, [r0, #4]
 800fc7a:	80c2      	strh	r2, [r0, #6]
 800fc7c:	4770      	bx	lr

0800fc7e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fc7e:	b570      	push	{r4, r5, r6, lr}
 800fc80:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fc82:	460d      	mov	r5, r1
 800fc84:	4616      	mov	r6, r2
 800fc86:	b13c      	cbz	r4, 800fc98 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fc88:	6823      	ldr	r3, [r4, #0]
 800fc8a:	4620      	mov	r0, r4
 800fc8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fc8e:	4632      	mov	r2, r6
 800fc90:	4629      	mov	r1, r5
 800fc92:	4798      	blx	r3
 800fc94:	69a4      	ldr	r4, [r4, #24]
 800fc96:	e7f6      	b.n	800fc86 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fc98:	bd70      	pop	{r4, r5, r6, pc}

0800fc9a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fc9a:	b538      	push	{r3, r4, r5, lr}
 800fc9c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fc9e:	460d      	mov	r5, r1
 800fca0:	b134      	cbz	r4, 800fcb0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fca2:	682b      	ldr	r3, [r5, #0]
 800fca4:	4621      	mov	r1, r4
 800fca6:	689b      	ldr	r3, [r3, #8]
 800fca8:	4628      	mov	r0, r5
 800fcaa:	4798      	blx	r3
 800fcac:	69a4      	ldr	r4, [r4, #24]
 800fcae:	e7f7      	b.n	800fca0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fcb0:	bd38      	pop	{r3, r4, r5, pc}

0800fcb2 <_ZN8touchgfx9ContainerD1Ev>:
 800fcb2:	4770      	bx	lr

0800fcb4 <_ZN8touchgfx9ContainerD0Ev>:
 800fcb4:	b510      	push	{r4, lr}
 800fcb6:	212c      	movs	r1, #44	; 0x2c
 800fcb8:	4604      	mov	r4, r0
 800fcba:	f019 fad0 	bl	802925e <_ZdlPvj>
 800fcbe:	4620      	mov	r0, r4
 800fcc0:	bd10      	pop	{r4, pc}

0800fcc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fcc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fcc4:	b19b      	cbz	r3, 800fcee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fcc6:	428b      	cmp	r3, r1
 800fcc8:	d109      	bne.n	800fcde <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fcca:	699a      	ldr	r2, [r3, #24]
 800fccc:	2100      	movs	r1, #0
 800fcce:	6159      	str	r1, [r3, #20]
 800fcd0:	6282      	str	r2, [r0, #40]	; 0x28
 800fcd2:	b902      	cbnz	r2, 800fcd6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fcd4:	4770      	bx	lr
 800fcd6:	6199      	str	r1, [r3, #24]
 800fcd8:	4770      	bx	lr
 800fcda:	4613      	mov	r3, r2
 800fcdc:	b13a      	cbz	r2, 800fcee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fcde:	699a      	ldr	r2, [r3, #24]
 800fce0:	428a      	cmp	r2, r1
 800fce2:	d1fa      	bne.n	800fcda <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fce4:	698a      	ldr	r2, [r1, #24]
 800fce6:	619a      	str	r2, [r3, #24]
 800fce8:	2300      	movs	r3, #0
 800fcea:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fcee:	4770      	bx	lr

0800fcf0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fcf0:	b410      	push	{r4}
 800fcf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fcf4:	4604      	mov	r4, r0
 800fcf6:	b92b      	cbnz	r3, 800fd04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fcf8:	6803      	ldr	r3, [r0, #0]
 800fcfa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fcfe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fd00:	4611      	mov	r1, r2
 800fd02:	4718      	bx	r3
 800fd04:	b941      	cbnz	r1, 800fd18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fd06:	6193      	str	r3, [r2, #24]
 800fd08:	6282      	str	r2, [r0, #40]	; 0x28
 800fd0a:	6154      	str	r4, [r2, #20]
 800fd0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fd10:	4770      	bx	lr
 800fd12:	4603      	mov	r3, r0
 800fd14:	2800      	cmp	r0, #0
 800fd16:	d0f9      	beq.n	800fd0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fd18:	4299      	cmp	r1, r3
 800fd1a:	6998      	ldr	r0, [r3, #24]
 800fd1c:	d1f9      	bne.n	800fd12 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fd1e:	6190      	str	r0, [r2, #24]
 800fd20:	618a      	str	r2, [r1, #24]
 800fd22:	e7f2      	b.n	800fd0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fd24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fd24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd28:	461f      	mov	r7, r3
 800fd2a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fd2e:	460d      	mov	r5, r1
 800fd30:	4616      	mov	r6, r2
 800fd32:	b103      	cbz	r3, 800fd36 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fd34:	6038      	str	r0, [r7, #0]
 800fd36:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fd38:	b314      	cbz	r4, 800fd80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fd3a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fd3e:	b1eb      	cbz	r3, 800fd7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fd40:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fd44:	428d      	cmp	r5, r1
 800fd46:	db19      	blt.n	800fd7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fd48:	8923      	ldrh	r3, [r4, #8]
 800fd4a:	b289      	uxth	r1, r1
 800fd4c:	440b      	add	r3, r1
 800fd4e:	b21b      	sxth	r3, r3
 800fd50:	429d      	cmp	r5, r3
 800fd52:	da13      	bge.n	800fd7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fd54:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fd58:	4296      	cmp	r6, r2
 800fd5a:	db0f      	blt.n	800fd7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fd5c:	8963      	ldrh	r3, [r4, #10]
 800fd5e:	b292      	uxth	r2, r2
 800fd60:	4413      	add	r3, r2
 800fd62:	b21b      	sxth	r3, r3
 800fd64:	429e      	cmp	r6, r3
 800fd66:	da09      	bge.n	800fd7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fd68:	6823      	ldr	r3, [r4, #0]
 800fd6a:	1ab2      	subs	r2, r6, r2
 800fd6c:	1a69      	subs	r1, r5, r1
 800fd6e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fd72:	b212      	sxth	r2, r2
 800fd74:	463b      	mov	r3, r7
 800fd76:	b209      	sxth	r1, r1
 800fd78:	4620      	mov	r0, r4
 800fd7a:	47c0      	blx	r8
 800fd7c:	69a4      	ldr	r4, [r4, #24]
 800fd7e:	e7db      	b.n	800fd38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fd80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fd84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd88:	4c6e      	ldr	r4, [pc, #440]	; (800ff44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fd8a:	b0a1      	sub	sp, #132	; 0x84
 800fd8c:	6824      	ldr	r4, [r4, #0]
 800fd8e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fd90:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fd94:	9303      	str	r3, [sp, #12]
 800fd96:	2400      	movs	r4, #0
 800fd98:	802c      	strh	r4, [r5, #0]
 800fd9a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fd9c:	802c      	strh	r4, [r5, #0]
 800fd9e:	601c      	str	r4, [r3, #0]
 800fda0:	4606      	mov	r6, r0
 800fda2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fda6:	f7ff ffbd 	bl	800fd24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fdaa:	f1b9 0f03 	cmp.w	r9, #3
 800fdae:	f340 80c2 	ble.w	800ff36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fdb2:	4631      	mov	r1, r6
 800fdb4:	a80c      	add	r0, sp, #48	; 0x30
 800fdb6:	f006 fb5f 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fdba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fdbe:	9306      	str	r3, [sp, #24]
 800fdc0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fdc4:	9307      	str	r3, [sp, #28]
 800fdc6:	9b03      	ldr	r3, [sp, #12]
 800fdc8:	f8d3 a000 	ldr.w	sl, [r3]
 800fdcc:	f1ba 0f00 	cmp.w	sl, #0
 800fdd0:	f000 80b4 	beq.w	800ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fdd4:	4651      	mov	r1, sl
 800fdd6:	a810      	add	r0, sp, #64	; 0x40
 800fdd8:	f006 fb4e 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fddc:	9b01      	ldr	r3, [sp, #4]
 800fdde:	9a06      	ldr	r2, [sp, #24]
 800fde0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fde4:	189d      	adds	r5, r3, r2
 800fde6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fdea:	9a07      	ldr	r2, [sp, #28]
 800fdec:	2002      	movs	r0, #2
 800fdee:	fb91 f1f0 	sdiv	r1, r1, r0
 800fdf2:	4419      	add	r1, r3
 800fdf4:	1a6d      	subs	r5, r5, r1
 800fdf6:	9b02      	ldr	r3, [sp, #8]
 800fdf8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fdfc:	4413      	add	r3, r2
 800fdfe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fe02:	fb92 f2f0 	sdiv	r2, r2, r0
 800fe06:	440a      	add	r2, r1
 800fe08:	1a9b      	subs	r3, r3, r2
 800fe0a:	435b      	muls	r3, r3
 800fe0c:	fb05 3505 	mla	r5, r5, r5, r3
 800fe10:	4f4d      	ldr	r7, [pc, #308]	; (800ff48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fe12:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fe14:	ac10      	add	r4, sp, #64	; 0x40
 800fe16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fe18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fe1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fe1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fe1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fe20:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fe24:	f1b9 0f0c 	cmp.w	r9, #12
 800fe28:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fe2c:	f04f 0303 	mov.w	r3, #3
 800fe30:	bfc8      	it	gt
 800fe32:	4698      	movgt	r8, r3
 800fe34:	f8cd 9000 	str.w	r9, [sp]
 800fe38:	f04f 0400 	mov.w	r4, #0
 800fe3c:	bfdc      	itt	le
 800fe3e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fe42:	fb92 f8f3 	sdivle	r8, r2, r3
 800fe46:	1c63      	adds	r3, r4, #1
 800fe48:	aa10      	add	r2, sp, #64	; 0x40
 800fe4a:	f004 0401 	and.w	r4, r4, #1
 800fe4e:	9308      	str	r3, [sp, #32]
 800fe50:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fe54:	9b00      	ldr	r3, [sp, #0]
 800fe56:	fb93 f3f8 	sdiv	r3, r3, r8
 800fe5a:	b29b      	uxth	r3, r3
 800fe5c:	3404      	adds	r4, #4
 800fe5e:	f04f 0b00 	mov.w	fp, #0
 800fe62:	9304      	str	r3, [sp, #16]
 800fe64:	9a04      	ldr	r2, [sp, #16]
 800fe66:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fe6a:	fb13 f302 	smulbb	r3, r3, r2
 800fe6e:	9a01      	ldr	r2, [sp, #4]
 800fe70:	b29b      	uxth	r3, r3
 800fe72:	1899      	adds	r1, r3, r2
 800fe74:	9305      	str	r3, [sp, #20]
 800fe76:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fe7a:	b209      	sxth	r1, r1
 800fe7c:	4299      	cmp	r1, r3
 800fe7e:	db4d      	blt.n	800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fe80:	8932      	ldrh	r2, [r6, #8]
 800fe82:	4413      	add	r3, r2
 800fe84:	b21b      	sxth	r3, r3
 800fe86:	4299      	cmp	r1, r3
 800fe88:	da48      	bge.n	800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fe8a:	9b04      	ldr	r3, [sp, #16]
 800fe8c:	6827      	ldr	r7, [r4, #0]
 800fe8e:	fb17 f703 	smulbb	r7, r7, r3
 800fe92:	9b02      	ldr	r3, [sp, #8]
 800fe94:	b2bf      	uxth	r7, r7
 800fe96:	18fa      	adds	r2, r7, r3
 800fe98:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fe9c:	b212      	sxth	r2, r2
 800fe9e:	429a      	cmp	r2, r3
 800fea0:	db3c      	blt.n	800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fea2:	8970      	ldrh	r0, [r6, #10]
 800fea4:	4403      	add	r3, r0
 800fea6:	b21b      	sxth	r3, r3
 800fea8:	429a      	cmp	r2, r3
 800feaa:	da37      	bge.n	800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800feac:	2300      	movs	r3, #0
 800feae:	930b      	str	r3, [sp, #44]	; 0x2c
 800feb0:	4630      	mov	r0, r6
 800feb2:	ab0b      	add	r3, sp, #44	; 0x2c
 800feb4:	f7ff ff36 	bl	800fd24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800feb8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800feba:	b37a      	cbz	r2, 800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800febc:	4552      	cmp	r2, sl
 800febe:	d02d      	beq.n	800ff1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fec0:	4611      	mov	r1, r2
 800fec2:	a80e      	add	r0, sp, #56	; 0x38
 800fec4:	9209      	str	r2, [sp, #36]	; 0x24
 800fec6:	f006 fad7 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800feca:	9a06      	ldr	r2, [sp, #24]
 800fecc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fed0:	9b01      	ldr	r3, [sp, #4]
 800fed2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fed6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800feda:	4413      	add	r3, r2
 800fedc:	f04f 0e02 	mov.w	lr, #2
 800fee0:	fb91 f1fe 	sdiv	r1, r1, lr
 800fee4:	4401      	add	r1, r0
 800fee6:	1a58      	subs	r0, r3, r1
 800fee8:	9a07      	ldr	r2, [sp, #28]
 800feea:	9b02      	ldr	r3, [sp, #8]
 800feec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fef0:	fb9c fcfe 	sdiv	ip, ip, lr
 800fef4:	4413      	add	r3, r2
 800fef6:	448c      	add	ip, r1
 800fef8:	eba3 030c 	sub.w	r3, r3, ip
 800fefc:	435b      	muls	r3, r3
 800fefe:	fb00 3300 	mla	r3, r0, r0, r3
 800ff02:	42ab      	cmp	r3, r5
 800ff04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ff06:	d208      	bcs.n	800ff1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ff08:	9803      	ldr	r0, [sp, #12]
 800ff0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ff0c:	6001      	str	r1, [r0, #0]
 800ff0e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ff10:	9805      	ldr	r0, [sp, #20]
 800ff12:	8008      	strh	r0, [r1, #0]
 800ff14:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ff16:	461d      	mov	r5, r3
 800ff18:	800f      	strh	r7, [r1, #0]
 800ff1a:	4692      	mov	sl, r2
 800ff1c:	f10b 0b01 	add.w	fp, fp, #1
 800ff20:	f1bb 0f04 	cmp.w	fp, #4
 800ff24:	f104 0408 	add.w	r4, r4, #8
 800ff28:	d19c      	bne.n	800fe64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ff2a:	9b00      	ldr	r3, [sp, #0]
 800ff2c:	9c08      	ldr	r4, [sp, #32]
 800ff2e:	444b      	add	r3, r9
 800ff30:	4544      	cmp	r4, r8
 800ff32:	9300      	str	r3, [sp, #0]
 800ff34:	d187      	bne.n	800fe46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ff36:	b021      	add	sp, #132	; 0x84
 800ff38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff3c:	f04f 35ff 	mov.w	r5, #4294967295
 800ff40:	e766      	b.n	800fe10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ff42:	bf00      	nop
 800ff44:	20012e5c 	.word	0x20012e5c
 800ff48:	0802af9c 	.word	0x0802af9c

0800ff4c <_ZN8touchgfx4RectaNERKS0_>:
 800ff4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff50:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ff54:	888c      	ldrh	r4, [r1, #4]
 800ff56:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ff5a:	443c      	add	r4, r7
 800ff5c:	b2a4      	uxth	r4, r4
 800ff5e:	fa0f f884 	sxth.w	r8, r4
 800ff62:	45c1      	cmp	r9, r8
 800ff64:	da2f      	bge.n	800ffc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ff66:	8882      	ldrh	r2, [r0, #4]
 800ff68:	444a      	add	r2, r9
 800ff6a:	b292      	uxth	r2, r2
 800ff6c:	fa0f fe82 	sxth.w	lr, r2
 800ff70:	4577      	cmp	r7, lr
 800ff72:	da28      	bge.n	800ffc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ff74:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ff78:	88cb      	ldrh	r3, [r1, #6]
 800ff7a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ff7e:	442b      	add	r3, r5
 800ff80:	b21b      	sxth	r3, r3
 800ff82:	429e      	cmp	r6, r3
 800ff84:	da1f      	bge.n	800ffc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ff86:	88c3      	ldrh	r3, [r0, #6]
 800ff88:	4433      	add	r3, r6
 800ff8a:	b29b      	uxth	r3, r3
 800ff8c:	fa0f fc83 	sxth.w	ip, r3
 800ff90:	4565      	cmp	r5, ip
 800ff92:	da18      	bge.n	800ffc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ff94:	454f      	cmp	r7, r9
 800ff96:	bfb8      	it	lt
 800ff98:	464f      	movlt	r7, r9
 800ff9a:	42b5      	cmp	r5, r6
 800ff9c:	bfb8      	it	lt
 800ff9e:	4635      	movlt	r5, r6
 800ffa0:	45f0      	cmp	r8, lr
 800ffa2:	bfd8      	it	le
 800ffa4:	4622      	movle	r2, r4
 800ffa6:	1bd2      	subs	r2, r2, r7
 800ffa8:	8082      	strh	r2, [r0, #4]
 800ffaa:	884a      	ldrh	r2, [r1, #2]
 800ffac:	88c9      	ldrh	r1, [r1, #6]
 800ffae:	8007      	strh	r7, [r0, #0]
 800ffb0:	440a      	add	r2, r1
 800ffb2:	b292      	uxth	r2, r2
 800ffb4:	b211      	sxth	r1, r2
 800ffb6:	458c      	cmp	ip, r1
 800ffb8:	bfa8      	it	ge
 800ffba:	4613      	movge	r3, r2
 800ffbc:	1b5b      	subs	r3, r3, r5
 800ffbe:	80c3      	strh	r3, [r0, #6]
 800ffc0:	8045      	strh	r5, [r0, #2]
 800ffc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ffc6:	2300      	movs	r3, #0
 800ffc8:	8003      	strh	r3, [r0, #0]
 800ffca:	8043      	strh	r3, [r0, #2]
 800ffcc:	8083      	strh	r3, [r0, #4]
 800ffce:	80c3      	strh	r3, [r0, #6]
 800ffd0:	e7f7      	b.n	800ffc2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ffd2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ffd6:	2b00      	cmp	r3, #0
 800ffd8:	dd06      	ble.n	800ffe8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ffda:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ffde:	2800      	cmp	r0, #0
 800ffe0:	bfcc      	ite	gt
 800ffe2:	2000      	movgt	r0, #0
 800ffe4:	2001      	movle	r0, #1
 800ffe6:	4770      	bx	lr
 800ffe8:	2001      	movs	r0, #1
 800ffea:	4770      	bx	lr

0800ffec <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ffec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fff0:	2300      	movs	r3, #0
 800fff2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fff4:	8003      	strh	r3, [r0, #0]
 800fff6:	4604      	mov	r4, r0
 800fff8:	8043      	strh	r3, [r0, #2]
 800fffa:	8083      	strh	r3, [r0, #4]
 800fffc:	80c3      	strh	r3, [r0, #6]
 800fffe:	2d00      	cmp	r5, #0
 8010000:	d040      	beq.n	8010084 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010002:	1d28      	adds	r0, r5, #4
 8010004:	f7ff ffe5 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010008:	b988      	cbnz	r0, 801002e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801000a:	4620      	mov	r0, r4
 801000c:	f7ff ffe1 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010010:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010014:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010018:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801001c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010020:	b138      	cbz	r0, 8010032 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010022:	8022      	strh	r2, [r4, #0]
 8010024:	8063      	strh	r3, [r4, #2]
 8010026:	f8a4 e004 	strh.w	lr, [r4, #4]
 801002a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801002e:	69ad      	ldr	r5, [r5, #24]
 8010030:	e7e5      	b.n	800fffe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010032:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010036:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801003a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801003e:	4290      	cmp	r0, r2
 8010040:	4607      	mov	r7, r0
 8010042:	bfa8      	it	ge
 8010044:	4617      	movge	r7, r2
 8010046:	4472      	add	r2, lr
 8010048:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801004c:	8027      	strh	r7, [r4, #0]
 801004e:	4299      	cmp	r1, r3
 8010050:	460e      	mov	r6, r1
 8010052:	4440      	add	r0, r8
 8010054:	bfa8      	it	ge
 8010056:	461e      	movge	r6, r3
 8010058:	4471      	add	r1, lr
 801005a:	4463      	add	r3, ip
 801005c:	b200      	sxth	r0, r0
 801005e:	b212      	sxth	r2, r2
 8010060:	b209      	sxth	r1, r1
 8010062:	b21b      	sxth	r3, r3
 8010064:	4290      	cmp	r0, r2
 8010066:	bfac      	ite	ge
 8010068:	ebc7 0200 	rsbge	r2, r7, r0
 801006c:	ebc7 0202 	rsblt	r2, r7, r2
 8010070:	4299      	cmp	r1, r3
 8010072:	bfac      	ite	ge
 8010074:	ebc6 0301 	rsbge	r3, r6, r1
 8010078:	ebc6 0303 	rsblt	r3, r6, r3
 801007c:	8066      	strh	r6, [r4, #2]
 801007e:	80a2      	strh	r2, [r4, #4]
 8010080:	80e3      	strh	r3, [r4, #6]
 8010082:	e7d4      	b.n	801002e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010084:	4620      	mov	r0, r4
 8010086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801008a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801008a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801008e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010092:	b383      	cbz	r3, 80100f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010094:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010096:	b374      	cbz	r4, 80100f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010098:	f9b1 5000 	ldrsh.w	r5, [r1]
 801009c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80100a0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80100a4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80100a8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80100ac:	b303      	cbz	r3, 80100f0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80100ae:	4668      	mov	r0, sp
 80100b0:	1d21      	adds	r1, r4, #4
 80100b2:	f8ad 5000 	strh.w	r5, [sp]
 80100b6:	f8ad 6002 	strh.w	r6, [sp, #2]
 80100ba:	f8ad 7004 	strh.w	r7, [sp, #4]
 80100be:	f8ad 8006 	strh.w	r8, [sp, #6]
 80100c2:	f7ff ff43 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 80100c6:	4668      	mov	r0, sp
 80100c8:	f7ff ff83 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80100cc:	b980      	cbnz	r0, 80100f0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80100ce:	f8bd 3000 	ldrh.w	r3, [sp]
 80100d2:	88a2      	ldrh	r2, [r4, #4]
 80100d4:	1a9b      	subs	r3, r3, r2
 80100d6:	f8ad 3000 	strh.w	r3, [sp]
 80100da:	88e2      	ldrh	r2, [r4, #6]
 80100dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80100e0:	1a9b      	subs	r3, r3, r2
 80100e2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80100e6:	6823      	ldr	r3, [r4, #0]
 80100e8:	4669      	mov	r1, sp
 80100ea:	689b      	ldr	r3, [r3, #8]
 80100ec:	4620      	mov	r0, r4
 80100ee:	4798      	blx	r3
 80100f0:	69a4      	ldr	r4, [r4, #24]
 80100f2:	2c00      	cmp	r4, #0
 80100f4:	d1d8      	bne.n	80100a8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80100f6:	b002      	add	sp, #8
 80100f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080100fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80100fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80100fe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010102:	460d      	mov	r5, r1
 8010104:	4616      	mov	r6, r2
 8010106:	b323      	cbz	r3, 8010152 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010108:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801010a:	b314      	cbz	r4, 8010152 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801010c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010110:	b1eb      	cbz	r3, 801014e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010112:	6828      	ldr	r0, [r5, #0]
 8010114:	6869      	ldr	r1, [r5, #4]
 8010116:	466b      	mov	r3, sp
 8010118:	c303      	stmia	r3!, {r0, r1}
 801011a:	4668      	mov	r0, sp
 801011c:	1d21      	adds	r1, r4, #4
 801011e:	f7ff ff15 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8010122:	4668      	mov	r0, sp
 8010124:	f7ff ff55 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010128:	b988      	cbnz	r0, 801014e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801012a:	f8bd 3000 	ldrh.w	r3, [sp]
 801012e:	88a2      	ldrh	r2, [r4, #4]
 8010130:	1a9b      	subs	r3, r3, r2
 8010132:	f8ad 3000 	strh.w	r3, [sp]
 8010136:	88e2      	ldrh	r2, [r4, #6]
 8010138:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801013c:	1a9b      	subs	r3, r3, r2
 801013e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010142:	6823      	ldr	r3, [r4, #0]
 8010144:	4632      	mov	r2, r6
 8010146:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010148:	4669      	mov	r1, sp
 801014a:	4620      	mov	r0, r4
 801014c:	4798      	blx	r3
 801014e:	69a4      	ldr	r4, [r4, #24]
 8010150:	e7db      	b.n	801010a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010152:	b002      	add	sp, #8
 8010154:	bd70      	pop	{r4, r5, r6, pc}

08010156 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010156:	b513      	push	{r0, r1, r4, lr}
 8010158:	6803      	ldr	r3, [r0, #0]
 801015a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 801015e:	2300      	movs	r3, #0
 8010160:	e9cd 3300 	strd	r3, r3, [sp]
 8010164:	466b      	mov	r3, sp
 8010166:	47a0      	blx	r4
 8010168:	b002      	add	sp, #8
 801016a:	bd10      	pop	{r4, pc}

0801016c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 801016c:	2301      	movs	r3, #1
 801016e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010172:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010176:	4770      	bx	lr

08010178 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010178:	2301      	movs	r3, #1
 801017a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801017e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010182:	4770      	bx	lr

08010184 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010184:	6843      	ldr	r3, [r0, #4]
 8010186:	2201      	movs	r2, #1
 8010188:	725a      	strb	r2, [r3, #9]
 801018a:	6840      	ldr	r0, [r0, #4]
 801018c:	6803      	ldr	r3, [r0, #0]
 801018e:	691b      	ldr	r3, [r3, #16]
 8010190:	4718      	bx	r3

08010192 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010192:	6840      	ldr	r0, [r0, #4]
 8010194:	6803      	ldr	r3, [r0, #0]
 8010196:	689b      	ldr	r3, [r3, #8]
 8010198:	4718      	bx	r3

0801019a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801019a:	b530      	push	{r4, r5, lr}
 801019c:	b08b      	sub	sp, #44	; 0x2c
 801019e:	6804      	ldr	r4, [r0, #0]
 80101a0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80101a4:	9509      	str	r5, [sp, #36]	; 0x24
 80101a6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80101aa:	9508      	str	r5, [sp, #32]
 80101ac:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80101b0:	9507      	str	r5, [sp, #28]
 80101b2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80101b6:	9506      	str	r5, [sp, #24]
 80101b8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80101bc:	9505      	str	r5, [sp, #20]
 80101be:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80101c2:	9504      	str	r5, [sp, #16]
 80101c4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80101c8:	9503      	str	r5, [sp, #12]
 80101ca:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80101ce:	9502      	str	r5, [sp, #8]
 80101d0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80101d4:	e9cd 3500 	strd	r3, r5, [sp]
 80101d8:	4613      	mov	r3, r2
 80101da:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80101dc:	2200      	movs	r2, #0
 80101de:	47a0      	blx	r4
 80101e0:	b00b      	add	sp, #44	; 0x2c
 80101e2:	bd30      	pop	{r4, r5, pc}

080101e4 <_ZN8touchgfx3HAL10beginFrameEv>:
 80101e4:	4b04      	ldr	r3, [pc, #16]	; (80101f8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80101e6:	781b      	ldrb	r3, [r3, #0]
 80101e8:	b123      	cbz	r3, 80101f4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80101ea:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80101ee:	f080 0001 	eor.w	r0, r0, #1
 80101f2:	4770      	bx	lr
 80101f4:	2001      	movs	r0, #1
 80101f6:	4770      	bx	lr
 80101f8:	20012e5a 	.word	0x20012e5a

080101fc <_ZN8touchgfx3HAL8endFrameEv>:
 80101fc:	b510      	push	{r4, lr}
 80101fe:	4604      	mov	r4, r0
 8010200:	6840      	ldr	r0, [r0, #4]
 8010202:	6803      	ldr	r3, [r0, #0]
 8010204:	689b      	ldr	r3, [r3, #8]
 8010206:	4798      	blx	r3
 8010208:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 801020c:	b113      	cbz	r3, 8010214 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801020e:	2301      	movs	r3, #1
 8010210:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010214:	bd10      	pop	{r4, pc}

08010216 <_ZN8touchgfx3HAL10initializeEv>:
 8010216:	b510      	push	{r4, lr}
 8010218:	4604      	mov	r4, r0
 801021a:	f7f0 fc47 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 801021e:	f7f0 fb53 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 8010222:	6860      	ldr	r0, [r4, #4]
 8010224:	6803      	ldr	r3, [r0, #0]
 8010226:	68db      	ldr	r3, [r3, #12]
 8010228:	4798      	blx	r3
 801022a:	68e0      	ldr	r0, [r4, #12]
 801022c:	6803      	ldr	r3, [r0, #0]
 801022e:	689b      	ldr	r3, [r3, #8]
 8010230:	4798      	blx	r3
 8010232:	6823      	ldr	r3, [r4, #0]
 8010234:	4620      	mov	r0, r4
 8010236:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801023c:	4718      	bx	r3
	...

08010240 <_ZN8touchgfx3HAL4tickEv>:
 8010240:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010242:	6803      	ldr	r3, [r0, #0]
 8010244:	4d5b      	ldr	r5, [pc, #364]	; (80103b4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010246:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801024a:	4604      	mov	r4, r0
 801024c:	4798      	blx	r3
 801024e:	2800      	cmp	r0, #0
 8010250:	f000 8095 	beq.w	801037e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010254:	2001      	movs	r0, #1
 8010256:	f7f0 fae9 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801025a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801025e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010262:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010266:	2600      	movs	r6, #0
 8010268:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801026c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010270:	b133      	cbz	r3, 8010280 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010272:	6823      	ldr	r3, [r4, #0]
 8010274:	4620      	mov	r0, r4
 8010276:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801027a:	4798      	blx	r3
 801027c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010280:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010284:	6862      	ldr	r2, [r4, #4]
 8010286:	f083 0301 	eor.w	r3, r3, #1
 801028a:	7253      	strb	r3, [r2, #9]
 801028c:	2601      	movs	r6, #1
 801028e:	702e      	strb	r6, [r5, #0]
 8010290:	f004 ff6e 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 8010294:	6803      	ldr	r3, [r0, #0]
 8010296:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010298:	4798      	blx	r3
 801029a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801029e:	b90b      	cbnz	r3, 80102a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80102a0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80102a4:	f004 ff64 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 80102a8:	6803      	ldr	r3, [r0, #0]
 80102aa:	695b      	ldr	r3, [r3, #20]
 80102ac:	4798      	blx	r3
 80102ae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80102b0:	6803      	ldr	r3, [r0, #0]
 80102b2:	691b      	ldr	r3, [r3, #16]
 80102b4:	4798      	blx	r3
 80102b6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80102ba:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80102be:	3b01      	subs	r3, #1
 80102c0:	b2db      	uxtb	r3, r3
 80102c2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80102c6:	b10a      	cbz	r2, 80102cc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80102c8:	2b00      	cmp	r3, #0
 80102ca:	d1eb      	bne.n	80102a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80102cc:	4a3a      	ldr	r2, [pc, #232]	; (80103b8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80102ce:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80102d2:	7813      	ldrb	r3, [r2, #0]
 80102d4:	3301      	adds	r3, #1
 80102d6:	b25b      	sxtb	r3, r3
 80102d8:	4299      	cmp	r1, r3
 80102da:	7013      	strb	r3, [r2, #0]
 80102dc:	dc10      	bgt.n	8010300 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80102de:	68e0      	ldr	r0, [r4, #12]
 80102e0:	2300      	movs	r3, #0
 80102e2:	7013      	strb	r3, [r2, #0]
 80102e4:	6803      	ldr	r3, [r0, #0]
 80102e6:	aa03      	add	r2, sp, #12
 80102e8:	68db      	ldr	r3, [r3, #12]
 80102ea:	a902      	add	r1, sp, #8
 80102ec:	4798      	blx	r3
 80102ee:	6823      	ldr	r3, [r4, #0]
 80102f0:	2800      	cmp	r0, #0
 80102f2:	d050      	beq.n	8010396 <_ZN8touchgfx3HAL4tickEv+0x156>
 80102f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80102f8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80102fc:	4620      	mov	r0, r4
 80102fe:	4798      	blx	r3
 8010300:	6960      	ldr	r0, [r4, #20]
 8010302:	2300      	movs	r3, #0
 8010304:	f88d 3007 	strb.w	r3, [sp, #7]
 8010308:	b158      	cbz	r0, 8010322 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801030a:	6803      	ldr	r3, [r0, #0]
 801030c:	f10d 0107 	add.w	r1, sp, #7
 8010310:	68db      	ldr	r3, [r3, #12]
 8010312:	4798      	blx	r3
 8010314:	b128      	cbz	r0, 8010322 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010316:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010318:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801031c:	6803      	ldr	r3, [r0, #0]
 801031e:	68db      	ldr	r3, [r3, #12]
 8010320:	4798      	blx	r3
 8010322:	f104 001c 	add.w	r0, r4, #28
 8010326:	f015 feb9 	bl	802609c <_ZN8touchgfx8Gestures4tickEv>
 801032a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801032e:	b30b      	cbz	r3, 8010374 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010330:	6920      	ldr	r0, [r4, #16]
 8010332:	6803      	ldr	r3, [r0, #0]
 8010334:	691b      	ldr	r3, [r3, #16]
 8010336:	4798      	blx	r3
 8010338:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801033a:	4606      	mov	r6, r0
 801033c:	b903      	cbnz	r3, 8010340 <_ZN8touchgfx3HAL4tickEv+0x100>
 801033e:	6760      	str	r0, [r4, #116]	; 0x74
 8010340:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010342:	4a1e      	ldr	r2, [pc, #120]	; (80103bc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010344:	1af3      	subs	r3, r6, r3
 8010346:	4293      	cmp	r3, r2
 8010348:	d914      	bls.n	8010374 <_ZN8touchgfx3HAL4tickEv+0x134>
 801034a:	6920      	ldr	r0, [r4, #16]
 801034c:	6803      	ldr	r3, [r0, #0]
 801034e:	699b      	ldr	r3, [r3, #24]
 8010350:	4798      	blx	r3
 8010352:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010354:	2264      	movs	r2, #100	; 0x64
 8010356:	1af3      	subs	r3, r6, r3
 8010358:	fbb3 f3f2 	udiv	r3, r3, r2
 801035c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010360:	2800      	cmp	r0, #0
 8010362:	dc1d      	bgt.n	80103a0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010364:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010368:	6920      	ldr	r0, [r4, #16]
 801036a:	6803      	ldr	r3, [r0, #0]
 801036c:	2100      	movs	r1, #0
 801036e:	69db      	ldr	r3, [r3, #28]
 8010370:	4798      	blx	r3
 8010372:	6766      	str	r6, [r4, #116]	; 0x74
 8010374:	f004 fefc 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 8010378:	6803      	ldr	r3, [r0, #0]
 801037a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801037c:	4798      	blx	r3
 801037e:	6823      	ldr	r3, [r4, #0]
 8010380:	4620      	mov	r0, r4
 8010382:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010386:	4798      	blx	r3
 8010388:	2001      	movs	r0, #1
 801038a:	f7f0 fa67 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801038e:	2300      	movs	r3, #0
 8010390:	702b      	strb	r3, [r5, #0]
 8010392:	b004      	add	sp, #16
 8010394:	bd70      	pop	{r4, r5, r6, pc}
 8010396:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801039a:	4620      	mov	r0, r4
 801039c:	4798      	blx	r3
 801039e:	e7af      	b.n	8010300 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80103a0:	2863      	cmp	r0, #99	; 0x63
 80103a2:	bfcb      	itete	gt
 80103a4:	2300      	movgt	r3, #0
 80103a6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80103aa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80103ae:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80103b2:	e7d9      	b.n	8010368 <_ZN8touchgfx3HAL4tickEv+0x128>
 80103b4:	20012e60 	.word	0x20012e60
 80103b8:	20012e61 	.word	0x20012e61
 80103bc:	05f5e100 	.word	0x05f5e100

080103c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80103c0:	b510      	push	{r4, lr}
 80103c2:	4604      	mov	r4, r0
 80103c4:	f7f0 fba2 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80103c8:	6863      	ldr	r3, [r4, #4]
 80103ca:	2200      	movs	r2, #0
 80103cc:	729a      	strb	r2, [r3, #10]
 80103ce:	bd10      	pop	{r4, pc}

080103d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80103d0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80103d2:	301c      	adds	r0, #28
 80103d4:	f015 be60 	b.w	8026098 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080103d8 <_ZN8touchgfx3HAL5touchEll>:
 80103d8:	b530      	push	{r4, r5, lr}
 80103da:	b087      	sub	sp, #28
 80103dc:	4604      	mov	r4, r0
 80103de:	a804      	add	r0, sp, #16
 80103e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80103e4:	f004 fc90 	bl	8014d08 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80103e8:	9b04      	ldr	r3, [sp, #16]
 80103ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 80103ee:	a906      	add	r1, sp, #24
 80103f0:	9b05      	ldr	r3, [sp, #20]
 80103f2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80103f6:	a803      	add	r0, sp, #12
 80103f8:	f004 fcd8 	bl	8014dac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80103fc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010400:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010404:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010408:	f104 001c 	add.w	r0, r4, #28
 801040c:	b189      	cbz	r1, 8010432 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801040e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010412:	9300      	str	r3, [sp, #0]
 8010414:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010418:	4613      	mov	r3, r2
 801041a:	462a      	mov	r2, r5
 801041c:	f015 fe4c 	bl	80260b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010420:	b128      	cbz	r0, 801042e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010422:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010426:	6623      	str	r3, [r4, #96]	; 0x60
 8010428:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801042c:	6663      	str	r3, [r4, #100]	; 0x64
 801042e:	b007      	add	sp, #28
 8010430:	bd30      	pop	{r4, r5, pc}
 8010432:	f015 fe81 	bl	8026138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010436:	2301      	movs	r3, #1
 8010438:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801043c:	e7f1      	b.n	8010422 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801043e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801043e:	b510      	push	{r4, lr}
 8010440:	2b00      	cmp	r3, #0
 8010442:	d046      	beq.n	80104d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010444:	ea81 0002 	eor.w	r0, r1, r2
 8010448:	07c4      	lsls	r4, r0, #31
 801044a:	d508      	bpl.n	801045e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801044c:	440b      	add	r3, r1
 801044e:	3a01      	subs	r2, #1
 8010450:	428b      	cmp	r3, r1
 8010452:	d93e      	bls.n	80104d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010454:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010458:	f801 0b01 	strb.w	r0, [r1], #1
 801045c:	e7f8      	b.n	8010450 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801045e:	07d0      	lsls	r0, r2, #31
 8010460:	bf42      	ittt	mi
 8010462:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010466:	f801 0b01 	strbmi.w	r0, [r1], #1
 801046a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801046e:	2b01      	cmp	r3, #1
 8010470:	d911      	bls.n	8010496 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010472:	ea81 0402 	eor.w	r4, r1, r2
 8010476:	07a4      	lsls	r4, r4, #30
 8010478:	4610      	mov	r0, r2
 801047a:	d022      	beq.n	80104c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801047c:	f023 0401 	bic.w	r4, r3, #1
 8010480:	440c      	add	r4, r1
 8010482:	428c      	cmp	r4, r1
 8010484:	4602      	mov	r2, r0
 8010486:	d904      	bls.n	8010492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010488:	8812      	ldrh	r2, [r2, #0]
 801048a:	f821 2b02 	strh.w	r2, [r1], #2
 801048e:	3002      	adds	r0, #2
 8010490:	e7f7      	b.n	8010482 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010492:	f003 0301 	and.w	r3, r3, #1
 8010496:	f023 0003 	bic.w	r0, r3, #3
 801049a:	4408      	add	r0, r1
 801049c:	4288      	cmp	r0, r1
 801049e:	4614      	mov	r4, r2
 80104a0:	d904      	bls.n	80104ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80104a2:	6824      	ldr	r4, [r4, #0]
 80104a4:	f841 4b04 	str.w	r4, [r1], #4
 80104a8:	3204      	adds	r2, #4
 80104aa:	e7f7      	b.n	801049c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80104ac:	f003 0303 	and.w	r3, r3, #3
 80104b0:	440b      	add	r3, r1
 80104b2:	3a01      	subs	r2, #1
 80104b4:	428b      	cmp	r3, r1
 80104b6:	d90c      	bls.n	80104d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80104b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80104bc:	f801 0b01 	strb.w	r0, [r1], #1
 80104c0:	e7f8      	b.n	80104b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80104c2:	0790      	lsls	r0, r2, #30
 80104c4:	d0e7      	beq.n	8010496 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80104c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80104ca:	f821 0b02 	strh.w	r0, [r1], #2
 80104ce:	3b02      	subs	r3, #2
 80104d0:	e7e1      	b.n	8010496 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80104d2:	2001      	movs	r0, #1
 80104d4:	bd10      	pop	{r4, pc}

080104d6 <_ZN8touchgfx3HAL7noTouchEv>:
 80104d6:	b510      	push	{r4, lr}
 80104d8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80104dc:	4604      	mov	r4, r0
 80104de:	b153      	cbz	r3, 80104f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80104e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80104e4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80104e8:	2101      	movs	r1, #1
 80104ea:	301c      	adds	r0, #28
 80104ec:	f015 fe24 	bl	8026138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80104f0:	2300      	movs	r3, #0
 80104f2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80104f6:	bd10      	pop	{r4, pc}

080104f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80104f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80104fc:	b085      	sub	sp, #20
 80104fe:	ad04      	add	r5, sp, #16
 8010500:	4604      	mov	r4, r0
 8010502:	2000      	movs	r0, #0
 8010504:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010508:	69a0      	ldr	r0, [r4, #24]
 801050a:	6806      	ldr	r6, [r0, #0]
 801050c:	9501      	str	r5, [sp, #4]
 801050e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010512:	9500      	str	r5, [sp, #0]
 8010514:	6835      	ldr	r5, [r6, #0]
 8010516:	4699      	mov	r9, r3
 8010518:	460f      	mov	r7, r1
 801051a:	4690      	mov	r8, r2
 801051c:	47a8      	blx	r5
 801051e:	4d10      	ldr	r5, [pc, #64]	; (8010560 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010520:	4606      	mov	r6, r0
 8010522:	f8a5 9000 	strh.w	r9, [r5]
 8010526:	f7f3 f9e9 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 801052a:	6803      	ldr	r3, [r0, #0]
 801052c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801052e:	4798      	blx	r3
 8010530:	b128      	cbz	r0, 801053e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010532:	2801      	cmp	r0, #1
 8010534:	d00b      	beq.n	801054e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010536:	4630      	mov	r0, r6
 8010538:	b005      	add	sp, #20
 801053a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801053e:	882b      	ldrh	r3, [r5, #0]
 8010540:	fb08 7203 	mla	r2, r8, r3, r7
 8010544:	9b03      	ldr	r3, [sp, #12]
 8010546:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801054a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801054c:	e7f3      	b.n	8010536 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801054e:	882a      	ldrh	r2, [r5, #0]
 8010550:	9b03      	ldr	r3, [sp, #12]
 8010552:	fb08 7202 	mla	r2, r8, r2, r7
 8010556:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801055a:	1a9a      	subs	r2, r3, r2
 801055c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801055e:	e7ea      	b.n	8010536 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010560:	20012e56 	.word	0x20012e56

08010564 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010564:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010566:	b08b      	sub	sp, #44	; 0x2c
 8010568:	4617      	mov	r7, r2
 801056a:	4604      	mov	r4, r0
 801056c:	460e      	mov	r6, r1
 801056e:	461d      	mov	r5, r3
 8010570:	f7f3 f9c4 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010574:	6803      	ldr	r3, [r0, #0]
 8010576:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010578:	4798      	blx	r3
 801057a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801057e:	9007      	str	r0, [sp, #28]
 8010580:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010584:	4b0d      	ldr	r3, [pc, #52]	; (80105bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010586:	6822      	ldr	r2, [r4, #0]
 8010588:	881b      	ldrh	r3, [r3, #0]
 801058a:	9306      	str	r3, [sp, #24]
 801058c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010590:	9305      	str	r3, [sp, #20]
 8010592:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010596:	9304      	str	r3, [sp, #16]
 8010598:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801059c:	9303      	str	r3, [sp, #12]
 801059e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80105a2:	9302      	str	r3, [sp, #8]
 80105a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80105a8:	e9cd 5300 	strd	r5, r3, [sp]
 80105ac:	4631      	mov	r1, r6
 80105ae:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80105b0:	463b      	mov	r3, r7
 80105b2:	2200      	movs	r2, #0
 80105b4:	4620      	mov	r0, r4
 80105b6:	47a8      	blx	r5
 80105b8:	b00b      	add	sp, #44	; 0x2c
 80105ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105bc:	20012e56 	.word	0x20012e56

080105c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80105c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105c4:	4698      	mov	r8, r3
 80105c6:	6803      	ldr	r3, [r0, #0]
 80105c8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80105ca:	4b15      	ldr	r3, [pc, #84]	; (8010620 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80105cc:	b08b      	sub	sp, #44	; 0x2c
 80105ce:	4617      	mov	r7, r2
 80105d0:	f8b3 9000 	ldrh.w	r9, [r3]
 80105d4:	460e      	mov	r6, r1
 80105d6:	4604      	mov	r4, r0
 80105d8:	f7f3 f990 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 80105dc:	6803      	ldr	r3, [r0, #0]
 80105de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105e0:	4798      	blx	r3
 80105e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80105e6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80105ea:	2302      	movs	r3, #2
 80105ec:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80105f0:	2301      	movs	r3, #1
 80105f2:	9305      	str	r3, [sp, #20]
 80105f4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80105f8:	9304      	str	r3, [sp, #16]
 80105fa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80105fe:	9303      	str	r3, [sp, #12]
 8010600:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010604:	9302      	str	r3, [sp, #8]
 8010606:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801060a:	2200      	movs	r2, #0
 801060c:	e9cd 8300 	strd	r8, r3, [sp]
 8010610:	4631      	mov	r1, r6
 8010612:	463b      	mov	r3, r7
 8010614:	4620      	mov	r0, r4
 8010616:	47a8      	blx	r5
 8010618:	b00b      	add	sp, #44	; 0x2c
 801061a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801061e:	bf00      	nop
 8010620:	20012e56 	.word	0x20012e56

08010624 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010624:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010628:	4698      	mov	r8, r3
 801062a:	6803      	ldr	r3, [r0, #0]
 801062c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801062e:	4b11      	ldr	r3, [pc, #68]	; (8010674 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010630:	b087      	sub	sp, #28
 8010632:	f8b3 9000 	ldrh.w	r9, [r3]
 8010636:	460e      	mov	r6, r1
 8010638:	4617      	mov	r7, r2
 801063a:	4604      	mov	r4, r0
 801063c:	f7f3 f95e 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010640:	6803      	ldr	r3, [r0, #0]
 8010642:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010644:	4798      	blx	r3
 8010646:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801064a:	f8cd 900c 	str.w	r9, [sp, #12]
 801064e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010652:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010656:	9302      	str	r3, [sp, #8]
 8010658:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801065c:	9301      	str	r3, [sp, #4]
 801065e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010662:	9300      	str	r3, [sp, #0]
 8010664:	463a      	mov	r2, r7
 8010666:	4643      	mov	r3, r8
 8010668:	4631      	mov	r1, r6
 801066a:	4620      	mov	r0, r4
 801066c:	47a8      	blx	r5
 801066e:	b007      	add	sp, #28
 8010670:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010674:	20012e56 	.word	0x20012e56

08010678 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801067c:	4604      	mov	r4, r0
 801067e:	b08f      	sub	sp, #60	; 0x3c
 8010680:	4610      	mov	r0, r2
 8010682:	460d      	mov	r5, r1
 8010684:	4691      	mov	r9, r2
 8010686:	461e      	mov	r6, r3
 8010688:	f008 f8f0 	bl	801886c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801068c:	2800      	cmp	r0, #0
 801068e:	f000 809d 	beq.w	80107cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010692:	6823      	ldr	r3, [r4, #0]
 8010694:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010830 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010698:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801069a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010834 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801069e:	4f61      	ldr	r7, [pc, #388]	; (8010824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80106a0:	4620      	mov	r0, r4
 80106a2:	4798      	blx	r3
 80106a4:	6823      	ldr	r3, [r4, #0]
 80106a6:	4620      	mov	r0, r4
 80106a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106aa:	4798      	blx	r3
 80106ac:	f8bb 3000 	ldrh.w	r3, [fp]
 80106b0:	9301      	str	r3, [sp, #4]
 80106b2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80106b6:	f8ba 3000 	ldrh.w	r3, [sl]
 80106ba:	9302      	str	r3, [sp, #8]
 80106bc:	883b      	ldrh	r3, [r7, #0]
 80106be:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80106c2:	9303      	str	r3, [sp, #12]
 80106c4:	4b58      	ldr	r3, [pc, #352]	; (8010828 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80106c6:	9305      	str	r3, [sp, #20]
 80106c8:	881a      	ldrh	r2, [r3, #0]
 80106ca:	9204      	str	r2, [sp, #16]
 80106cc:	4640      	mov	r0, r8
 80106ce:	f008 f961 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80106d2:	8038      	strh	r0, [r7, #0]
 80106d4:	4640      	mov	r0, r8
 80106d6:	f008 f991 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80106da:	9b05      	ldr	r3, [sp, #20]
 80106dc:	b280      	uxth	r0, r0
 80106de:	8018      	strh	r0, [r3, #0]
 80106e0:	4b52      	ldr	r3, [pc, #328]	; (801082c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80106e2:	781b      	ldrb	r3, [r3, #0]
 80106e4:	2b00      	cmp	r3, #0
 80106e6:	d174      	bne.n	80107d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80106e8:	883b      	ldrh	r3, [r7, #0]
 80106ea:	f8ab 3000 	strh.w	r3, [fp]
 80106ee:	f8aa 0000 	strh.w	r0, [sl]
 80106f2:	4648      	mov	r0, r9
 80106f4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80106f8:	f008 f8b8 	bl	801886c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80106fc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010700:	2200      	movs	r2, #0
 8010702:	4611      	mov	r1, r2
 8010704:	4628      	mov	r0, r5
 8010706:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801070a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801070e:	f7f2 f83a 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8010712:	2301      	movs	r3, #1
 8010714:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010718:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801071c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010720:	2b00      	cmp	r3, #0
 8010722:	dd5c      	ble.n	80107de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010724:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010728:	2b00      	cmp	r3, #0
 801072a:	dd58      	ble.n	80107de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801072c:	462a      	mov	r2, r5
 801072e:	ab0a      	add	r3, sp, #40	; 0x28
 8010730:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010734:	6851      	ldr	r1, [r2, #4]
 8010736:	c303      	stmia	r3!, {r0, r1}
 8010738:	4631      	mov	r1, r6
 801073a:	a80a      	add	r0, sp, #40	; 0x28
 801073c:	f7ff fc06 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8010740:	4b38      	ldr	r3, [pc, #224]	; (8010824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010742:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010746:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801074a:	2100      	movs	r1, #0
 801074c:	aa0a      	add	r2, sp, #40	; 0x28
 801074e:	4b36      	ldr	r3, [pc, #216]	; (8010828 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010750:	910c      	str	r1, [sp, #48]	; 0x30
 8010752:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010756:	f9b3 3000 	ldrsh.w	r3, [r3]
 801075a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801075e:	ab08      	add	r3, sp, #32
 8010760:	e883 0003 	stmia.w	r3, {r0, r1}
 8010764:	4618      	mov	r0, r3
 8010766:	a90c      	add	r1, sp, #48	; 0x30
 8010768:	f7ff fbf0 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 801076c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801076e:	2b00      	cmp	r3, #0
 8010770:	d13c      	bne.n	80107ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010772:	2000      	movs	r0, #0
 8010774:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010778:	2600      	movs	r6, #0
 801077a:	682a      	ldr	r2, [r5, #0]
 801077c:	696b      	ldr	r3, [r5, #20]
 801077e:	616e      	str	r6, [r5, #20]
 8010780:	9305      	str	r3, [sp, #20]
 8010782:	6892      	ldr	r2, [r2, #8]
 8010784:	a908      	add	r1, sp, #32
 8010786:	4628      	mov	r0, r5
 8010788:	4790      	blx	r2
 801078a:	9b05      	ldr	r3, [sp, #20]
 801078c:	616b      	str	r3, [r5, #20]
 801078e:	4652      	mov	r2, sl
 8010790:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010794:	4649      	mov	r1, r9
 8010796:	4628      	mov	r0, r5
 8010798:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801079c:	f7f1 fff3 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 80107a0:	4b23      	ldr	r3, [pc, #140]	; (8010830 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80107a2:	9a01      	ldr	r2, [sp, #4]
 80107a4:	801a      	strh	r2, [r3, #0]
 80107a6:	4b23      	ldr	r3, [pc, #140]	; (8010834 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80107a8:	9a02      	ldr	r2, [sp, #8]
 80107aa:	801a      	strh	r2, [r3, #0]
 80107ac:	4b1d      	ldr	r3, [pc, #116]	; (8010824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80107ae:	9a03      	ldr	r2, [sp, #12]
 80107b0:	801a      	strh	r2, [r3, #0]
 80107b2:	4b1d      	ldr	r3, [pc, #116]	; (8010828 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80107b4:	9a04      	ldr	r2, [sp, #16]
 80107b6:	801a      	strh	r2, [r3, #0]
 80107b8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80107bc:	6823      	ldr	r3, [r4, #0]
 80107be:	4620      	mov	r0, r4
 80107c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80107c2:	4798      	blx	r3
 80107c4:	6823      	ldr	r3, [r4, #0]
 80107c6:	4620      	mov	r0, r4
 80107c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107ca:	4798      	blx	r3
 80107cc:	b00f      	add	sp, #60	; 0x3c
 80107ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107d2:	883b      	ldrh	r3, [r7, #0]
 80107d4:	f8ab 0000 	strh.w	r0, [fp]
 80107d8:	f8aa 3000 	strh.w	r3, [sl]
 80107dc:	e789      	b.n	80106f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80107de:	462a      	mov	r2, r5
 80107e0:	ab0a      	add	r3, sp, #40	; 0x28
 80107e2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80107e6:	6851      	ldr	r1, [r2, #4]
 80107e8:	c303      	stmia	r3!, {r0, r1}
 80107ea:	e7a9      	b.n	8010740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80107ec:	a807      	add	r0, sp, #28
 80107ee:	f008 fa41 	bl	8018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80107f2:	4606      	mov	r6, r0
 80107f4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80107f6:	6803      	ldr	r3, [r0, #0]
 80107f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107fa:	4798      	blx	r3
 80107fc:	4286      	cmp	r6, r0
 80107fe:	d1b8      	bne.n	8010772 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010800:	f7f3 f87c 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010804:	6803      	ldr	r3, [r0, #0]
 8010806:	4606      	mov	r6, r0
 8010808:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801080a:	9305      	str	r3, [sp, #20]
 801080c:	a807      	add	r0, sp, #28
 801080e:	f008 fa31 	bl	8018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010812:	9b05      	ldr	r3, [sp, #20]
 8010814:	4601      	mov	r1, r0
 8010816:	4630      	mov	r0, r6
 8010818:	4798      	blx	r3
 801081a:	f080 0001 	eor.w	r0, r0, #1
 801081e:	b2c0      	uxtb	r0, r0
 8010820:	e7a8      	b.n	8010774 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010822:	bf00      	nop
 8010824:	20012e50 	.word	0x20012e50
 8010828:	20012e52 	.word	0x20012e52
 801082c:	20012e54 	.word	0x20012e54
 8010830:	20012e56 	.word	0x20012e56
 8010834:	20012e58 	.word	0x20012e58

08010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010838:	b510      	push	{r4, lr}
 801083a:	4b07      	ldr	r3, [pc, #28]	; (8010858 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801083c:	781b      	ldrb	r3, [r3, #0]
 801083e:	4604      	mov	r4, r0
 8010840:	b13b      	cbz	r3, 8010852 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010842:	6803      	ldr	r3, [r0, #0]
 8010844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010846:	4798      	blx	r3
 8010848:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801084a:	4283      	cmp	r3, r0
 801084c:	d101      	bne.n	8010852 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801084e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010850:	bd10      	pop	{r4, pc}
 8010852:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010854:	e7fc      	b.n	8010850 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010856:	bf00      	nop
 8010858:	20012e5a 	.word	0x20012e5a

0801085c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801085c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010860:	b08a      	sub	sp, #40	; 0x28
 8010862:	461d      	mov	r5, r3
 8010864:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010868:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801086c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010870:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010874:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010878:	f8ad 301a 	strh.w	r3, [sp, #26]
 801087c:	2400      	movs	r4, #0
 801087e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010882:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010886:	f8ad 301c 	strh.w	r3, [sp, #28]
 801088a:	4690      	mov	r8, r2
 801088c:	4607      	mov	r7, r0
 801088e:	9404      	str	r4, [sp, #16]
 8010890:	f88d 4020 	strb.w	r4, [sp, #32]
 8010894:	f7ff ffd0 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010898:	fb06 8505 	mla	r5, r6, r5, r8
 801089c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80108a0:	6878      	ldr	r0, [r7, #4]
 80108a2:	9505      	str	r5, [sp, #20]
 80108a4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80108a8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80108ac:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80108b0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80108b4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80108b8:	6803      	ldr	r3, [r0, #0]
 80108ba:	a901      	add	r1, sp, #4
 80108bc:	685b      	ldr	r3, [r3, #4]
 80108be:	4798      	blx	r3
 80108c0:	b00a      	add	sp, #40	; 0x28
 80108c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080108c6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80108c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80108ca:	b08b      	sub	sp, #44	; 0x2c
 80108cc:	2400      	movs	r4, #0
 80108ce:	461d      	mov	r5, r3
 80108d0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80108d4:	4688      	mov	r8, r1
 80108d6:	4691      	mov	r9, r2
 80108d8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80108dc:	9404      	str	r4, [sp, #16]
 80108de:	4607      	mov	r7, r0
 80108e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80108e4:	f7ff ffa8 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80108e8:	fb06 9505 	mla	r5, r6, r5, r9
 80108ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80108f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80108f4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80108f8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80108fc:	6878      	ldr	r0, [r7, #4]
 80108fe:	9505      	str	r5, [sp, #20]
 8010900:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010904:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010908:	f8ad 601e 	strh.w	r6, [sp, #30]
 801090c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010910:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010914:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010918:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801091c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010920:	6803      	ldr	r3, [r0, #0]
 8010922:	a901      	add	r1, sp, #4
 8010924:	685b      	ldr	r3, [r3, #4]
 8010926:	4798      	blx	r3
 8010928:	b00b      	add	sp, #44	; 0x2c
 801092a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010934:	b08a      	sub	sp, #40	; 0x28
 8010936:	4698      	mov	r8, r3
 8010938:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801093c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010940:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010944:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010948:	2300      	movs	r3, #0
 801094a:	2d0b      	cmp	r5, #11
 801094c:	4606      	mov	r6, r0
 801094e:	9304      	str	r3, [sp, #16]
 8010950:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010954:	d138      	bne.n	80109c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010956:	2380      	movs	r3, #128	; 0x80
 8010958:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801095c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010960:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010964:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010968:	f8ad 301a 	strh.w	r3, [sp, #26]
 801096c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010970:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010974:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010978:	4630      	mov	r0, r6
 801097a:	9203      	str	r2, [sp, #12]
 801097c:	f7ff ff5c 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010980:	2c0b      	cmp	r4, #11
 8010982:	bf98      	it	ls
 8010984:	4b1b      	ldrls	r3, [pc, #108]	; (80109f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010986:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801098a:	bf98      	it	ls
 801098c:	5d19      	ldrbls	r1, [r3, r4]
 801098e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010992:	bf88      	it	hi
 8010994:	2100      	movhi	r1, #0
 8010996:	fb02 8307 	mla	r3, r2, r7, r8
 801099a:	10c9      	asrs	r1, r1, #3
 801099c:	fb01 0003 	mla	r0, r1, r3, r0
 80109a0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80109a4:	9005      	str	r0, [sp, #20]
 80109a6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80109aa:	6870      	ldr	r0, [r6, #4]
 80109ac:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80109b0:	2300      	movs	r3, #0
 80109b2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80109b6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80109ba:	6803      	ldr	r3, [r0, #0]
 80109bc:	a901      	add	r1, sp, #4
 80109be:	685b      	ldr	r3, [r3, #4]
 80109c0:	4798      	blx	r3
 80109c2:	b00a      	add	sp, #40	; 0x28
 80109c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80109c8:	2d02      	cmp	r5, #2
 80109ca:	d109      	bne.n	80109e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80109cc:	28ff      	cmp	r0, #255	; 0xff
 80109ce:	d105      	bne.n	80109dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80109d0:	f1bc 0f00 	cmp.w	ip, #0
 80109d4:	bf14      	ite	ne
 80109d6:	2340      	movne	r3, #64	; 0x40
 80109d8:	2320      	moveq	r3, #32
 80109da:	e7bd      	b.n	8010958 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80109dc:	2340      	movs	r3, #64	; 0x40
 80109de:	e7bb      	b.n	8010958 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80109e0:	28ff      	cmp	r0, #255	; 0xff
 80109e2:	d105      	bne.n	80109f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80109e4:	f1bc 0f00 	cmp.w	ip, #0
 80109e8:	bf14      	ite	ne
 80109ea:	2304      	movne	r3, #4
 80109ec:	2301      	moveq	r3, #1
 80109ee:	e7b3      	b.n	8010958 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80109f0:	2304      	movs	r3, #4
 80109f2:	e7b1      	b.n	8010958 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80109f4:	0802e0a4 	.word	0x0802e0a4

080109f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80109f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109fc:	b08b      	sub	sp, #44	; 0x2c
 80109fe:	461d      	mov	r5, r3
 8010a00:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010a04:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010a08:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010a0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010a10:	bf14      	ite	ne
 8010a12:	2308      	movne	r3, #8
 8010a14:	2302      	moveq	r3, #2
 8010a16:	2400      	movs	r4, #0
 8010a18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010a1c:	4688      	mov	r8, r1
 8010a1e:	4693      	mov	fp, r2
 8010a20:	9404      	str	r4, [sp, #16]
 8010a22:	4607      	mov	r7, r0
 8010a24:	f7ff ff08 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a28:	2e0b      	cmp	r6, #11
 8010a2a:	bf98      	it	ls
 8010a2c:	4b15      	ldrls	r3, [pc, #84]	; (8010a84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010a2e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010a32:	bf98      	it	ls
 8010a34:	5d9c      	ldrbls	r4, [r3, r6]
 8010a36:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010a3a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010a3e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010a42:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010a46:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010a4a:	10e4      	asrs	r4, r4, #3
 8010a4c:	fb04 0405 	mla	r4, r4, r5, r0
 8010a50:	2300      	movs	r3, #0
 8010a52:	6878      	ldr	r0, [r7, #4]
 8010a54:	9405      	str	r4, [sp, #20]
 8010a56:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010a5a:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010a5e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010a62:	f88d 9020 	strb.w	r9, [sp, #32]
 8010a66:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010a6a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010a6e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010a72:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010a76:	6803      	ldr	r3, [r0, #0]
 8010a78:	a901      	add	r1, sp, #4
 8010a7a:	685b      	ldr	r3, [r3, #4]
 8010a7c:	4798      	blx	r3
 8010a7e:	b00b      	add	sp, #44	; 0x2c
 8010a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a84:	0802e0a4 	.word	0x0802e0a4

08010a88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a8c:	461e      	mov	r6, r3
 8010a8e:	4b0a      	ldr	r3, [pc, #40]	; (8010ab8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010a90:	460f      	mov	r7, r1
 8010a92:	881d      	ldrh	r5, [r3, #0]
 8010a94:	4690      	mov	r8, r2
 8010a96:	f7f2 ff31 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010a9a:	6803      	ldr	r3, [r0, #0]
 8010a9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a9e:	4798      	blx	r3
 8010aa0:	280b      	cmp	r0, #11
 8010aa2:	bf9a      	itte	ls
 8010aa4:	4b05      	ldrls	r3, [pc, #20]	; (8010abc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010aa6:	5c1c      	ldrbls	r4, [r3, r0]
 8010aa8:	2400      	movhi	r4, #0
 8010aaa:	fb08 7005 	mla	r0, r8, r5, r7
 8010aae:	10e4      	asrs	r4, r4, #3
 8010ab0:	fb04 6000 	mla	r0, r4, r0, r6
 8010ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ab8:	20012e56 	.word	0x20012e56
 8010abc:	0802e0a4 	.word	0x0802e0a4

08010ac0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ac2:	b08b      	sub	sp, #44	; 0x2c
 8010ac4:	461f      	mov	r7, r3
 8010ac6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010aca:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ace:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010ad2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010ad6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010ada:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ade:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ae2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ae6:	2500      	movs	r5, #0
 8010ae8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010aec:	f88d 3020 	strb.w	r3, [sp, #32]
 8010af0:	4604      	mov	r4, r0
 8010af2:	4616      	mov	r6, r2
 8010af4:	9504      	str	r5, [sp, #16]
 8010af6:	f7ff fe9f 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010afa:	463a      	mov	r2, r7
 8010afc:	4631      	mov	r1, r6
 8010afe:	4603      	mov	r3, r0
 8010b00:	4620      	mov	r0, r4
 8010b02:	f7ff ffc1 	bl	8010a88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010b06:	4b0e      	ldr	r3, [pc, #56]	; (8010b40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010b08:	9005      	str	r0, [sp, #20]
 8010b0a:	881b      	ldrh	r3, [r3, #0]
 8010b0c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010b10:	f7f2 fef4 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010b14:	6803      	ldr	r3, [r0, #0]
 8010b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b18:	4798      	blx	r3
 8010b1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010b1c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010b20:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010b24:	9304      	str	r3, [sp, #16]
 8010b26:	6860      	ldr	r0, [r4, #4]
 8010b28:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010b2c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010b30:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010b34:	6803      	ldr	r3, [r0, #0]
 8010b36:	a901      	add	r1, sp, #4
 8010b38:	685b      	ldr	r3, [r3, #4]
 8010b3a:	4798      	blx	r3
 8010b3c:	b00b      	add	sp, #44	; 0x2c
 8010b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b40:	20012e56 	.word	0x20012e56

08010b44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b46:	b08d      	sub	sp, #52	; 0x34
 8010b48:	466b      	mov	r3, sp
 8010b4a:	e883 0006 	stmia.w	r3, {r1, r2}
 8010b4e:	2300      	movs	r3, #0
 8010b50:	9306      	str	r3, [sp, #24]
 8010b52:	6803      	ldr	r3, [r0, #0]
 8010b54:	f8bd 6000 	ldrh.w	r6, [sp]
 8010b58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b5a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010b5e:	2501      	movs	r5, #1
 8010b60:	9503      	str	r5, [sp, #12]
 8010b62:	4604      	mov	r4, r0
 8010b64:	4798      	blx	r3
 8010b66:	463a      	mov	r2, r7
 8010b68:	4631      	mov	r1, r6
 8010b6a:	4603      	mov	r3, r0
 8010b6c:	4620      	mov	r0, r4
 8010b6e:	f7ff ff8b 	bl	8010a88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010b72:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010b74:	9307      	str	r3, [sp, #28]
 8010b76:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010b7a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010b7e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010b82:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010b86:	4b0f      	ldr	r3, [pc, #60]	; (8010bc4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010b88:	9004      	str	r0, [sp, #16]
 8010b8a:	881b      	ldrh	r3, [r3, #0]
 8010b8c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010b90:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010b94:	f7f2 feb2 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010b98:	6803      	ldr	r3, [r0, #0]
 8010b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b9c:	4798      	blx	r3
 8010b9e:	23ff      	movs	r3, #255	; 0xff
 8010ba0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010ba4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010ba8:	6860      	ldr	r0, [r4, #4]
 8010baa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010bae:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010bb2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010bb6:	6803      	ldr	r3, [r0, #0]
 8010bb8:	a903      	add	r1, sp, #12
 8010bba:	685b      	ldr	r3, [r3, #4]
 8010bbc:	4798      	blx	r3
 8010bbe:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010bc0:	b00d      	add	sp, #52	; 0x34
 8010bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010bc4:	20012e56 	.word	0x20012e56

08010bc8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010bc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bcc:	b08c      	sub	sp, #48	; 0x30
 8010bce:	461e      	mov	r6, r3
 8010bd0:	466d      	mov	r5, sp
 8010bd2:	2300      	movs	r3, #0
 8010bd4:	e885 0006 	stmia.w	r5, {r1, r2}
 8010bd8:	9306      	str	r3, [sp, #24]
 8010bda:	6803      	ldr	r3, [r0, #0]
 8010bdc:	f8bd 7000 	ldrh.w	r7, [sp]
 8010be0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010be2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010be6:	2501      	movs	r5, #1
 8010be8:	9503      	str	r5, [sp, #12]
 8010bea:	4604      	mov	r4, r0
 8010bec:	4798      	blx	r3
 8010bee:	4642      	mov	r2, r8
 8010bf0:	4639      	mov	r1, r7
 8010bf2:	4603      	mov	r3, r0
 8010bf4:	4620      	mov	r0, r4
 8010bf6:	f7ff ff47 	bl	8010a88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010bfa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010bfe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010c02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010c06:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010c0a:	4b11      	ldr	r3, [pc, #68]	; (8010c50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010c0c:	9004      	str	r0, [sp, #16]
 8010c0e:	881b      	ldrh	r3, [r3, #0]
 8010c10:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010c14:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010c16:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010c1a:	9607      	str	r6, [sp, #28]
 8010c1c:	f7f2 fe6e 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8010c20:	6803      	ldr	r3, [r0, #0]
 8010c22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c24:	4798      	blx	r3
 8010c26:	23ff      	movs	r3, #255	; 0xff
 8010c28:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010c2c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010c30:	6860      	ldr	r0, [r4, #4]
 8010c32:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010c36:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010c3a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010c3e:	6803      	ldr	r3, [r0, #0]
 8010c40:	a903      	add	r1, sp, #12
 8010c42:	685b      	ldr	r3, [r3, #4]
 8010c44:	4798      	blx	r3
 8010c46:	4630      	mov	r0, r6
 8010c48:	b00c      	add	sp, #48	; 0x30
 8010c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c4e:	bf00      	nop
 8010c50:	20012e56 	.word	0x20012e56

08010c54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010c54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c56:	b085      	sub	sp, #20
 8010c58:	ac02      	add	r4, sp, #8
 8010c5a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010c5e:	4605      	mov	r5, r0
 8010c60:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010c64:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010c68:	f7ff fde6 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010c6c:	463a      	mov	r2, r7
 8010c6e:	4603      	mov	r3, r0
 8010c70:	4631      	mov	r1, r6
 8010c72:	4628      	mov	r0, r5
 8010c74:	f7ff ff08 	bl	8010a88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010c78:	4a05      	ldr	r2, [pc, #20]	; (8010c90 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010c7a:	682b      	ldr	r3, [r5, #0]
 8010c7c:	8812      	ldrh	r2, [r2, #0]
 8010c7e:	9200      	str	r2, [sp, #0]
 8010c80:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010c82:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010c86:	4603      	mov	r3, r0
 8010c88:	4628      	mov	r0, r5
 8010c8a:	47b0      	blx	r6
 8010c8c:	b005      	add	sp, #20
 8010c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c90:	20012e56 	.word	0x20012e56

08010c94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010c94:	b570      	push	{r4, r5, r6, lr}
 8010c96:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010c9a:	4604      	mov	r4, r0
 8010c9c:	b19b      	cbz	r3, 8010cc6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010c9e:	2002      	movs	r0, #2
 8010ca0:	f7ef fdf4 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010ca4:	2300      	movs	r3, #0
 8010ca6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010caa:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010cae:	6823      	ldr	r3, [r4, #0]
 8010cb0:	4620      	mov	r0, r4
 8010cb2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010cb6:	f7ff fdbf 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010cba:	462b      	mov	r3, r5
 8010cbc:	4601      	mov	r1, r0
 8010cbe:	4620      	mov	r0, r4
 8010cc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010cc4:	4718      	bx	r3
 8010cc6:	bd70      	pop	{r4, r5, r6, pc}

08010cc8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010cc8:	b538      	push	{r3, r4, r5, lr}
 8010cca:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010cce:	428b      	cmp	r3, r1
 8010cd0:	4604      	mov	r4, r0
 8010cd2:	460d      	mov	r5, r1
 8010cd4:	d006      	beq.n	8010ce4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010cd6:	6803      	ldr	r3, [r0, #0]
 8010cd8:	b929      	cbnz	r1, 8010ce6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010cda:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010cde:	4798      	blx	r3
 8010ce0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010ce4:	bd38      	pop	{r3, r4, r5, pc}
 8010ce6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010cea:	e7f8      	b.n	8010cde <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010cec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010cec:	b510      	push	{r4, lr}
 8010cee:	4b0d      	ldr	r3, [pc, #52]	; (8010d24 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010cf0:	781b      	ldrb	r3, [r3, #0]
 8010cf2:	4604      	mov	r4, r0
 8010cf4:	b95b      	cbnz	r3, 8010d0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010cf6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010cfa:	2b02      	cmp	r3, #2
 8010cfc:	d007      	beq.n	8010d0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010cfe:	6840      	ldr	r0, [r0, #4]
 8010d00:	f000 f92c 	bl	8010f5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010d04:	b118      	cbz	r0, 8010d0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010d06:	6862      	ldr	r2, [r4, #4]
 8010d08:	7a53      	ldrb	r3, [r2, #9]
 8010d0a:	2b00      	cmp	r3, #0
 8010d0c:	d0fc      	beq.n	8010d08 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010d0e:	f7ef fef5 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010d12:	4620      	mov	r0, r4
 8010d14:	2100      	movs	r1, #0
 8010d16:	f7ff ffd7 	bl	8010cc8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010d1a:	4620      	mov	r0, r4
 8010d1c:	f7ff fd8c 	bl	8010838 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d20:	bd10      	pop	{r4, pc}
 8010d22:	bf00      	nop
 8010d24:	20012e5a 	.word	0x20012e5a

08010d28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010d28:	b570      	push	{r4, r5, r6, lr}
 8010d2a:	4604      	mov	r4, r0
 8010d2c:	6803      	ldr	r3, [r0, #0]
 8010d2e:	b919      	cbnz	r1, 8010d38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010d30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010d32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d36:	4718      	bx	r3
 8010d38:	2200      	movs	r2, #0
 8010d3a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010d3e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010d42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010d44:	4798      	blx	r3
 8010d46:	6863      	ldr	r3, [r4, #4]
 8010d48:	2101      	movs	r1, #1
 8010d4a:	4605      	mov	r5, r0
 8010d4c:	7299      	strb	r1, [r3, #10]
 8010d4e:	4620      	mov	r0, r4
 8010d50:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010d54:	f7ff ffb8 	bl	8010cc8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010d58:	4628      	mov	r0, r5
 8010d5a:	bd70      	pop	{r4, r5, r6, pc}

08010d5c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010d5c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010d60:	1a13      	subs	r3, r2, r0
 8010d62:	4258      	negs	r0, r3
 8010d64:	4158      	adcs	r0, r3
 8010d66:	4770      	bx	lr

08010d68 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010d68:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010d6c:	1a9b      	subs	r3, r3, r2
 8010d6e:	2b00      	cmp	r3, #0
 8010d70:	bfdc      	itt	le
 8010d72:	6882      	ldrle	r2, [r0, #8]
 8010d74:	189b      	addle	r3, r3, r2
 8010d76:	2b01      	cmp	r3, #1
 8010d78:	bfcc      	ite	gt
 8010d7a:	2000      	movgt	r0, #0
 8010d7c:	2001      	movle	r0, #1
 8010d7e:	4770      	bx	lr

08010d80 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010d80:	6902      	ldr	r2, [r0, #16]
 8010d82:	6843      	ldr	r3, [r0, #4]
 8010d84:	2024      	movs	r0, #36	; 0x24
 8010d86:	fb00 3002 	mla	r0, r0, r2, r3
 8010d8a:	4770      	bx	lr

08010d8c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010d8c:	6803      	ldr	r3, [r0, #0]
 8010d8e:	691b      	ldr	r3, [r3, #16]
 8010d90:	4718      	bx	r3

08010d92 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010d92:	b570      	push	{r4, r5, r6, lr}
 8010d94:	2301      	movs	r3, #1
 8010d96:	7203      	strb	r3, [r0, #8]
 8010d98:	4604      	mov	r4, r0
 8010d9a:	6840      	ldr	r0, [r0, #4]
 8010d9c:	6803      	ldr	r3, [r0, #0]
 8010d9e:	699b      	ldr	r3, [r3, #24]
 8010da0:	4798      	blx	r3
 8010da2:	6803      	ldr	r3, [r0, #0]
 8010da4:	2b40      	cmp	r3, #64	; 0x40
 8010da6:	4605      	mov	r5, r0
 8010da8:	d00c      	beq.n	8010dc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010daa:	d810      	bhi.n	8010dce <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010dac:	2b04      	cmp	r3, #4
 8010dae:	d01d      	beq.n	8010dec <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010db0:	d804      	bhi.n	8010dbc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010db2:	2b01      	cmp	r3, #1
 8010db4:	d006      	beq.n	8010dc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010db6:	2b02      	cmp	r3, #2
 8010db8:	d02c      	beq.n	8010e14 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010dba:	bd70      	pop	{r4, r5, r6, pc}
 8010dbc:	2b08      	cmp	r3, #8
 8010dbe:	d01d      	beq.n	8010dfc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010dc0:	2b20      	cmp	r3, #32
 8010dc2:	d1fa      	bne.n	8010dba <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010dc4:	6823      	ldr	r3, [r4, #0]
 8010dc6:	4620      	mov	r0, r4
 8010dc8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010dca:	4798      	blx	r3
 8010dcc:	e013      	b.n	8010df6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010dce:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010dd2:	d0f7      	beq.n	8010dc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010dd4:	d804      	bhi.n	8010de0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010dd6:	2b80      	cmp	r3, #128	; 0x80
 8010dd8:	d0f4      	beq.n	8010dc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010dda:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010dde:	e7f0      	b.n	8010dc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010de0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010de4:	d0ee      	beq.n	8010dc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010de6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010dea:	e7e5      	b.n	8010db8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010dec:	6823      	ldr	r3, [r4, #0]
 8010dee:	7f01      	ldrb	r1, [r0, #28]
 8010df0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010df2:	4620      	mov	r0, r4
 8010df4:	4798      	blx	r3
 8010df6:	6823      	ldr	r3, [r4, #0]
 8010df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010dfa:	e006      	b.n	8010e0a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010dfc:	6823      	ldr	r3, [r4, #0]
 8010dfe:	7f01      	ldrb	r1, [r0, #28]
 8010e00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e02:	4620      	mov	r0, r4
 8010e04:	4798      	blx	r3
 8010e06:	6823      	ldr	r3, [r4, #0]
 8010e08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010e0a:	4629      	mov	r1, r5
 8010e0c:	4620      	mov	r0, r4
 8010e0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e12:	4718      	bx	r3
 8010e14:	6823      	ldr	r3, [r4, #0]
 8010e16:	4620      	mov	r0, r4
 8010e18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010e1a:	4798      	blx	r3
 8010e1c:	e7f3      	b.n	8010e06 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010e1e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010e1e:	4770      	bx	lr

08010e20 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010e20:	4770      	bx	lr

08010e22 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010e22:	4770      	bx	lr

08010e24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010e24:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010e28:	1ad2      	subs	r2, r2, r3
 8010e2a:	2a00      	cmp	r2, #0
 8010e2c:	b510      	push	{r4, lr}
 8010e2e:	bfdc      	itt	le
 8010e30:	6884      	ldrle	r4, [r0, #8]
 8010e32:	1912      	addle	r2, r2, r4
 8010e34:	2a01      	cmp	r2, #1
 8010e36:	dd16      	ble.n	8010e66 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010e38:	6842      	ldr	r2, [r0, #4]
 8010e3a:	2424      	movs	r4, #36	; 0x24
 8010e3c:	fb04 2303 	mla	r3, r4, r3, r2
 8010e40:	f101 0220 	add.w	r2, r1, #32
 8010e44:	f851 4b04 	ldr.w	r4, [r1], #4
 8010e48:	f843 4b04 	str.w	r4, [r3], #4
 8010e4c:	4291      	cmp	r1, r2
 8010e4e:	d1f9      	bne.n	8010e44 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010e50:	780a      	ldrb	r2, [r1, #0]
 8010e52:	701a      	strb	r2, [r3, #0]
 8010e54:	68c3      	ldr	r3, [r0, #12]
 8010e56:	6882      	ldr	r2, [r0, #8]
 8010e58:	f3bf 8f5b 	dmb	ish
 8010e5c:	3301      	adds	r3, #1
 8010e5e:	429a      	cmp	r2, r3
 8010e60:	bfd8      	it	le
 8010e62:	1a9b      	suble	r3, r3, r2
 8010e64:	60c3      	str	r3, [r0, #12]
 8010e66:	bd10      	pop	{r4, pc}

08010e68 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010e68:	6903      	ldr	r3, [r0, #16]
 8010e6a:	6882      	ldr	r2, [r0, #8]
 8010e6c:	f3bf 8f5b 	dmb	ish
 8010e70:	3301      	adds	r3, #1
 8010e72:	429a      	cmp	r2, r3
 8010e74:	bfd8      	it	le
 8010e76:	1a9b      	suble	r3, r3, r2
 8010e78:	6103      	str	r3, [r0, #16]
 8010e7a:	4770      	bx	lr

08010e7c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010e7c:	b570      	push	{r4, r5, r6, lr}
 8010e7e:	4604      	mov	r4, r0
 8010e80:	460e      	mov	r6, r1
 8010e82:	6860      	ldr	r0, [r4, #4]
 8010e84:	6803      	ldr	r3, [r0, #0]
 8010e86:	685b      	ldr	r3, [r3, #4]
 8010e88:	4798      	blx	r3
 8010e8a:	2800      	cmp	r0, #0
 8010e8c:	d1f9      	bne.n	8010e82 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010e8e:	4d0d      	ldr	r5, [pc, #52]	; (8010ec4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010e90:	6828      	ldr	r0, [r5, #0]
 8010e92:	6803      	ldr	r3, [r0, #0]
 8010e94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010e96:	4798      	blx	r3
 8010e98:	f7ef fe3e 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010e9c:	6828      	ldr	r0, [r5, #0]
 8010e9e:	2101      	movs	r1, #1
 8010ea0:	f7ff ff12 	bl	8010cc8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010ea4:	6860      	ldr	r0, [r4, #4]
 8010ea6:	6803      	ldr	r3, [r0, #0]
 8010ea8:	4631      	mov	r1, r6
 8010eaa:	689b      	ldr	r3, [r3, #8]
 8010eac:	4798      	blx	r3
 8010eae:	6823      	ldr	r3, [r4, #0]
 8010eb0:	4620      	mov	r0, r4
 8010eb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010eb4:	4798      	blx	r3
 8010eb6:	6828      	ldr	r0, [r5, #0]
 8010eb8:	6803      	ldr	r3, [r0, #0]
 8010eba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ebe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010ec0:	4718      	bx	r3
 8010ec2:	bf00      	nop
 8010ec4:	20012e5c 	.word	0x20012e5c

08010ec8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010ec8:	b508      	push	{r3, lr}
 8010eca:	f7ef fe17 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010ece:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010ed2:	f7ef be1b 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010ed6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010ed6:	b510      	push	{r4, lr}
 8010ed8:	2114      	movs	r1, #20
 8010eda:	4604      	mov	r4, r0
 8010edc:	f018 f9bf 	bl	802925e <_ZdlPvj>
 8010ee0:	4620      	mov	r0, r4
 8010ee2:	bd10      	pop	{r4, pc}

08010ee4 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010ee4:	b510      	push	{r4, lr}
 8010ee6:	4604      	mov	r4, r0
 8010ee8:	6840      	ldr	r0, [r0, #4]
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	681b      	ldr	r3, [r3, #0]
 8010eee:	4798      	blx	r3
 8010ef0:	b948      	cbnz	r0, 8010f06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010ef2:	7a63      	ldrb	r3, [r4, #9]
 8010ef4:	b13b      	cbz	r3, 8010f06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010ef6:	7a23      	ldrb	r3, [r4, #8]
 8010ef8:	b92b      	cbnz	r3, 8010f06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010efa:	6823      	ldr	r3, [r4, #0]
 8010efc:	4620      	mov	r0, r4
 8010efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f04:	4718      	bx	r3
 8010f06:	bd10      	pop	{r4, pc}

08010f08 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010f08:	b570      	push	{r4, r5, r6, lr}
 8010f0a:	4604      	mov	r4, r0
 8010f0c:	6840      	ldr	r0, [r0, #4]
 8010f0e:	6803      	ldr	r3, [r0, #0]
 8010f10:	681b      	ldr	r3, [r3, #0]
 8010f12:	4798      	blx	r3
 8010f14:	4605      	mov	r5, r0
 8010f16:	b930      	cbnz	r0, 8010f26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010f18:	7a23      	ldrb	r3, [r4, #8]
 8010f1a:	b123      	cbz	r3, 8010f26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010f1c:	6860      	ldr	r0, [r4, #4]
 8010f1e:	6803      	ldr	r3, [r0, #0]
 8010f20:	695b      	ldr	r3, [r3, #20]
 8010f22:	4798      	blx	r3
 8010f24:	7225      	strb	r5, [r4, #8]
 8010f26:	6860      	ldr	r0, [r4, #4]
 8010f28:	6803      	ldr	r3, [r0, #0]
 8010f2a:	681b      	ldr	r3, [r3, #0]
 8010f2c:	4798      	blx	r3
 8010f2e:	b928      	cbnz	r0, 8010f3c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010f30:	6823      	ldr	r3, [r4, #0]
 8010f32:	4620      	mov	r0, r4
 8010f34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f3a:	4718      	bx	r3
 8010f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f40:	f7ef bdf2 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010f44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010f44:	b510      	push	{r4, lr}
 8010f46:	4c04      	ldr	r4, [pc, #16]	; (8010f58 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010f48:	6082      	str	r2, [r0, #8]
 8010f4a:	2200      	movs	r2, #0
 8010f4c:	e9c0 4100 	strd	r4, r1, [r0]
 8010f50:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010f54:	bd10      	pop	{r4, pc}
 8010f56:	bf00      	nop
 8010f58:	0802e0b8 	.word	0x0802e0b8

08010f5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010f5c:	6840      	ldr	r0, [r0, #4]
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	681b      	ldr	r3, [r3, #0]
 8010f62:	4718      	bx	r3

08010f64 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010f64:	4b06      	ldr	r3, [pc, #24]	; (8010f80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010f66:	60c1      	str	r1, [r0, #12]
 8010f68:	094a      	lsrs	r2, r1, #5
 8010f6a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010f6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010f72:	4313      	orrs	r3, r2
 8010f74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010f78:	4319      	orrs	r1, r3
 8010f7a:	8201      	strh	r1, [r0, #16]
 8010f7c:	4770      	bx	lr
 8010f7e:	bf00      	nop
 8010f80:	fffff800 	.word	0xfffff800

08010f84 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010f84:	f1a0 0008 	sub.w	r0, r0, #8
 8010f88:	e7ec      	b.n	8010f64 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010f8a:	bf00      	nop

08010f8c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010f8c:	b508      	push	{r3, lr}
 8010f8e:	4b05      	ldr	r3, [pc, #20]	; (8010fa4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010f90:	6818      	ldr	r0, [r3, #0]
 8010f92:	6803      	ldr	r3, [r0, #0]
 8010f94:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010f98:	4798      	blx	r3
 8010f9a:	1e43      	subs	r3, r0, #1
 8010f9c:	4258      	negs	r0, r3
 8010f9e:	4158      	adcs	r0, r3
 8010fa0:	bd08      	pop	{r3, pc}
 8010fa2:	bf00      	nop
 8010fa4:	20012e5c 	.word	0x20012e5c

08010fa8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010fa8:	4770      	bx	lr

08010faa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010faa:	3808      	subs	r0, #8
 8010fac:	4770      	bx	lr

08010fae <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010fae:	b430      	push	{r4, r5}
 8010fb0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010fb4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010fb8:	8a02      	ldrh	r2, [r0, #16]
 8010fba:	9202      	str	r2, [sp, #8]
 8010fbc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010fc0:	68c2      	ldr	r2, [r0, #12]
 8010fc2:	4629      	mov	r1, r5
 8010fc4:	4620      	mov	r0, r4
 8010fc6:	bc30      	pop	{r4, r5}
 8010fc8:	f7f0 b870 	b.w	80010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010fcc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010fcc:	f7f0 b86c 	b.w	80010a8 <_ZN8touchgfx5paint8tearDownEv>

08010fd0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010fd0:	b510      	push	{r4, lr}
 8010fd2:	2114      	movs	r1, #20
 8010fd4:	4604      	mov	r4, r0
 8010fd6:	f018 f942 	bl	802925e <_ZdlPvj>
 8010fda:	4620      	mov	r0, r4
 8010fdc:	bd10      	pop	{r4, pc}

08010fde <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010fde:	f1a0 0008 	sub.w	r0, r0, #8
 8010fe2:	e7f5      	b.n	8010fd0 <_ZN8touchgfx13PainterRGB565D0Ev>

08010fe4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010fe4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010fe6:	6803      	ldr	r3, [r0, #0]
 8010fe8:	460d      	mov	r5, r1
 8010fea:	4604      	mov	r4, r0
 8010fec:	4601      	mov	r1, r0
 8010fee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010ff0:	a802      	add	r0, sp, #8
 8010ff2:	4798      	blx	r3
 8010ff4:	6828      	ldr	r0, [r5, #0]
 8010ff6:	6869      	ldr	r1, [r5, #4]
 8010ff8:	466b      	mov	r3, sp
 8010ffa:	c303      	stmia	r3!, {r0, r1}
 8010ffc:	4668      	mov	r0, sp
 8010ffe:	4619      	mov	r1, r3
 8011000:	f7fe ffa4 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8011004:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011006:	b188      	cbz	r0, 801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011008:	6803      	ldr	r3, [r0, #0]
 801100a:	1d21      	adds	r1, r4, #4
 801100c:	68db      	ldr	r3, [r3, #12]
 801100e:	4798      	blx	r3
 8011010:	b160      	cbz	r0, 801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011012:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011016:	2b00      	cmp	r3, #0
 8011018:	dd08      	ble.n	801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801101a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801101e:	2d00      	cmp	r5, #0
 8011020:	dd04      	ble.n	801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011022:	4a2b      	ldr	r2, [pc, #172]	; (80110d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011024:	7812      	ldrb	r2, [r2, #0]
 8011026:	b11a      	cbz	r2, 8011030 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011028:	2a01      	cmp	r2, #1
 801102a:	d029      	beq.n	8011080 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801102c:	b004      	add	sp, #16
 801102e:	bd70      	pop	{r4, r5, r6, pc}
 8011030:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011034:	441d      	add	r5, r3
 8011036:	b2ad      	uxth	r5, r5
 8011038:	b22e      	sxth	r6, r5
 801103a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801103e:	42b3      	cmp	r3, r6
 8011040:	daf4      	bge.n	801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011042:	6823      	ldr	r3, [r4, #0]
 8011044:	4669      	mov	r1, sp
 8011046:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011048:	4620      	mov	r0, r4
 801104a:	4798      	blx	r3
 801104c:	b940      	cbnz	r0, 8011060 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801104e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011052:	2b01      	cmp	r3, #1
 8011054:	d004      	beq.n	8011060 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011056:	3301      	adds	r3, #1
 8011058:	105b      	asrs	r3, r3, #1
 801105a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801105e:	e7f0      	b.n	8011042 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011060:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011064:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011068:	4413      	add	r3, r2
 801106a:	b29b      	uxth	r3, r3
 801106c:	441a      	add	r2, r3
 801106e:	b212      	sxth	r2, r2
 8011070:	4296      	cmp	r6, r2
 8011072:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011076:	dae0      	bge.n	801103a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011078:	1aeb      	subs	r3, r5, r3
 801107a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801107e:	e7dc      	b.n	801103a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011080:	f8bd 5000 	ldrh.w	r5, [sp]
 8011084:	441d      	add	r5, r3
 8011086:	b2ad      	uxth	r5, r5
 8011088:	b22e      	sxth	r6, r5
 801108a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801108e:	42b3      	cmp	r3, r6
 8011090:	dacc      	bge.n	801102c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011092:	6823      	ldr	r3, [r4, #0]
 8011094:	4669      	mov	r1, sp
 8011096:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011098:	4620      	mov	r0, r4
 801109a:	4798      	blx	r3
 801109c:	b940      	cbnz	r0, 80110b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801109e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80110a2:	2b01      	cmp	r3, #1
 80110a4:	d004      	beq.n	80110b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80110a6:	3301      	adds	r3, #1
 80110a8:	105b      	asrs	r3, r3, #1
 80110aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80110ae:	e7f0      	b.n	8011092 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80110b0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80110b4:	f8bd 3000 	ldrh.w	r3, [sp]
 80110b8:	4413      	add	r3, r2
 80110ba:	b29b      	uxth	r3, r3
 80110bc:	441a      	add	r2, r3
 80110be:	b212      	sxth	r2, r2
 80110c0:	4296      	cmp	r6, r2
 80110c2:	f8ad 3000 	strh.w	r3, [sp]
 80110c6:	dae0      	bge.n	801108a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80110c8:	1aeb      	subs	r3, r5, r3
 80110ca:	f8ad 3004 	strh.w	r3, [sp, #4]
 80110ce:	e7dc      	b.n	801108a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80110d0:	20012e54 	.word	0x20012e54

080110d4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80110d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80110d6:	6803      	ldr	r3, [r0, #0]
 80110d8:	4604      	mov	r4, r0
 80110da:	4601      	mov	r1, r0
 80110dc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80110de:	4668      	mov	r0, sp
 80110e0:	4798      	blx	r3
 80110e2:	2100      	movs	r1, #0
 80110e4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80110e8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80110ec:	9102      	str	r1, [sp, #8]
 80110ee:	4668      	mov	r0, sp
 80110f0:	a902      	add	r1, sp, #8
 80110f2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80110f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80110fa:	f7fe ff27 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 80110fe:	6823      	ldr	r3, [r4, #0]
 8011100:	4669      	mov	r1, sp
 8011102:	691b      	ldr	r3, [r3, #16]
 8011104:	4620      	mov	r0, r4
 8011106:	4798      	blx	r3
 8011108:	b004      	add	sp, #16
 801110a:	bd10      	pop	{r4, pc}

0801110c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801110c:	2101      	movs	r1, #1
 801110e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011112:	490b      	ldr	r1, [pc, #44]	; (8011140 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011114:	6001      	str	r1, [r0, #0]
 8011116:	2200      	movs	r2, #0
 8011118:	21ff      	movs	r1, #255	; 0xff
 801111a:	8082      	strh	r2, [r0, #4]
 801111c:	80c2      	strh	r2, [r0, #6]
 801111e:	8102      	strh	r2, [r0, #8]
 8011120:	8142      	strh	r2, [r0, #10]
 8011122:	8182      	strh	r2, [r0, #12]
 8011124:	81c2      	strh	r2, [r0, #14]
 8011126:	8202      	strh	r2, [r0, #16]
 8011128:	8242      	strh	r2, [r0, #18]
 801112a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801112e:	61c2      	str	r2, [r0, #28]
 8011130:	8402      	strh	r2, [r0, #32]
 8011132:	8442      	strh	r2, [r0, #34]	; 0x22
 8011134:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011138:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801113c:	6282      	str	r2, [r0, #40]	; 0x28
 801113e:	4770      	bx	lr
 8011140:	0802e114 	.word	0x0802e114

08011144 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011144:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011148:	4602      	mov	r2, r0
 801114a:	cb03      	ldmia	r3!, {r0, r1}
 801114c:	6010      	str	r0, [r2, #0]
 801114e:	6051      	str	r1, [r2, #4]
 8011150:	4610      	mov	r0, r2
 8011152:	4770      	bx	lr

08011154 <_ZN8touchgfx4LineD1Ev>:
 8011154:	4770      	bx	lr

08011156 <_ZN8touchgfx4LineD0Ev>:
 8011156:	b510      	push	{r4, lr}
 8011158:	2170      	movs	r1, #112	; 0x70
 801115a:	4604      	mov	r4, r0
 801115c:	f018 f87f 	bl	802925e <_ZdlPvj>
 8011160:	4620      	mov	r0, r4
 8011162:	bd10      	pop	{r4, pc}

08011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011164:	b507      	push	{r0, r1, r2, lr}
 8011166:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801116a:	ab01      	add	r3, sp, #4
 801116c:	6809      	ldr	r1, [r1, #0]
 801116e:	6800      	ldr	r0, [r0, #0]
 8011170:	f005 fab4 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 8011174:	b003      	add	sp, #12
 8011176:	f85d fb04 	ldr.w	pc, [sp], #4

0801117a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801117a:	6800      	ldr	r0, [r0, #0]
 801117c:	2800      	cmp	r0, #0
 801117e:	bfb9      	ittee	lt
 8011180:	2320      	movlt	r3, #32
 8011182:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011186:	301f      	addge	r0, #31
 8011188:	1140      	asrge	r0, r0, #5
 801118a:	4770      	bx	lr

0801118c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801118c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011190:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011194:	b089      	sub	sp, #36	; 0x24
 8011196:	4604      	mov	r4, r0
 8011198:	b353      	cbz	r3, 80111f0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 801119a:	6803      	ldr	r3, [r0, #0]
 801119c:	4601      	mov	r1, r0
 801119e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80111a0:	a802      	add	r0, sp, #8
 80111a2:	4798      	blx	r3
 80111a4:	2220      	movs	r2, #32
 80111a6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80111aa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80111ac:	fb9a f0f2 	sdiv	r0, sl, r2
 80111b0:	fb91 f5f2 	sdiv	r5, r1, r2
 80111b4:	1b40      	subs	r0, r0, r5
 80111b6:	2800      	cmp	r0, #0
 80111b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80111ba:	fb93 f6f2 	sdiv	r6, r3, r2
 80111be:	bfb8      	it	lt
 80111c0:	4240      	neglt	r0, r0
 80111c2:	0076      	lsls	r6, r6, #1
 80111c4:	4286      	cmp	r6, r0
 80111c6:	f8d4 b000 	ldr.w	fp, [r4]
 80111ca:	dc0c      	bgt.n	80111e6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80111cc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80111ce:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80111d2:	fb95 f0f2 	sdiv	r0, r5, r2
 80111d6:	fb98 f7f2 	sdiv	r7, r8, r2
 80111da:	1bc0      	subs	r0, r0, r7
 80111dc:	2800      	cmp	r0, #0
 80111de:	bfb8      	it	lt
 80111e0:	4240      	neglt	r0, r0
 80111e2:	4286      	cmp	r6, r0
 80111e4:	dd07      	ble.n	80111f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80111e6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80111ea:	a902      	add	r1, sp, #8
 80111ec:	4620      	mov	r0, r4
 80111ee:	4798      	blx	r3
 80111f0:	b009      	add	sp, #36	; 0x24
 80111f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111f6:	3301      	adds	r3, #1
 80111f8:	2002      	movs	r0, #2
 80111fa:	f10d 0920 	add.w	r9, sp, #32
 80111fe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011202:	4103      	asrs	r3, r0
 8011204:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011208:	eb01 060a 	add.w	r6, r1, sl
 801120c:	eb08 0705 	add.w	r7, r8, r5
 8011210:	fb96 f6f0 	sdiv	r6, r6, r0
 8011214:	fb97 f7f0 	sdiv	r7, r7, r0
 8011218:	4648      	mov	r0, r9
 801121a:	9101      	str	r1, [sp, #4]
 801121c:	b236      	sxth	r6, r6
 801121e:	b23f      	sxth	r7, r7
 8011220:	fb96 f6f2 	sdiv	r6, r6, r2
 8011224:	fb97 f7f2 	sdiv	r7, r7, r2
 8011228:	f7ff ffa7 	bl	801117a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801122c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011230:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011234:	9901      	ldr	r1, [sp, #4]
 8011236:	4293      	cmp	r3, r2
 8011238:	fa1f fe87 	uxth.w	lr, r7
 801123c:	fa1f fc86 	uxth.w	ip, r6
 8011240:	eba1 0a0a 	sub.w	sl, r1, sl
 8011244:	b280      	uxth	r0, r0
 8011246:	da54      	bge.n	80112f2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011248:	ebac 0100 	sub.w	r1, ip, r0
 801124c:	b289      	uxth	r1, r1
 801124e:	4460      	add	r0, ip
 8011250:	f1ba 0f00 	cmp.w	sl, #0
 8011254:	b20e      	sxth	r6, r1
 8011256:	b280      	uxth	r0, r0
 8011258:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801125c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011260:	da29      	bge.n	80112b6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011262:	eba8 0505 	sub.w	r5, r8, r5
 8011266:	2d00      	cmp	r5, #0
 8011268:	da2a      	bge.n	80112c0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801126a:	fa1f f88a 	uxth.w	r8, sl
 801126e:	eba0 0008 	sub.w	r0, r0, r8
 8011272:	fa1f f58c 	uxth.w	r5, ip
 8011276:	4443      	add	r3, r8
 8011278:	f8ad 0014 	strh.w	r0, [sp, #20]
 801127c:	1a59      	subs	r1, r3, r1
 801127e:	ebae 0005 	sub.w	r0, lr, r5
 8011282:	f8ad a010 	strh.w	sl, [sp, #16]
 8011286:	f8ad c012 	strh.w	ip, [sp, #18]
 801128a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801128e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011292:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011296:	f8ad 101c 	strh.w	r1, [sp, #28]
 801129a:	442a      	add	r2, r5
 801129c:	eba2 0e0e 	sub.w	lr, r2, lr
 80112a0:	f8ad e01e 	strh.w	lr, [sp, #30]
 80112a4:	f8db 3010 	ldr.w	r3, [fp, #16]
 80112a8:	a904      	add	r1, sp, #16
 80112aa:	4620      	mov	r0, r4
 80112ac:	4798      	blx	r3
 80112ae:	6823      	ldr	r3, [r4, #0]
 80112b0:	4649      	mov	r1, r9
 80112b2:	691b      	ldr	r3, [r3, #16]
 80112b4:	e79a      	b.n	80111ec <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80112b6:	d003      	beq.n	80112c0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80112b8:	eba8 0505 	sub.w	r5, r8, r5
 80112bc:	2d00      	cmp	r5, #0
 80112be:	dcd4      	bgt.n	801126a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80112c0:	fa1f f88a 	uxth.w	r8, sl
 80112c4:	4443      	add	r3, r8
 80112c6:	fa1f f58c 	uxth.w	r5, ip
 80112ca:	1a59      	subs	r1, r3, r1
 80112cc:	eba0 0008 	sub.w	r0, r0, r8
 80112d0:	ebae 0305 	sub.w	r3, lr, r5
 80112d4:	f8ad 6010 	strh.w	r6, [sp, #16]
 80112d8:	f8ad c012 	strh.w	ip, [sp, #18]
 80112dc:	f8ad 1014 	strh.w	r1, [sp, #20]
 80112e0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80112e4:	f8ad a018 	strh.w	sl, [sp, #24]
 80112e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80112ec:	f8ad 001c 	strh.w	r0, [sp, #28]
 80112f0:	e7d3      	b.n	801129a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80112f2:	ebae 0100 	sub.w	r1, lr, r0
 80112f6:	b289      	uxth	r1, r1
 80112f8:	4470      	add	r0, lr
 80112fa:	f1ba 0f00 	cmp.w	sl, #0
 80112fe:	b20f      	sxth	r7, r1
 8011300:	b280      	uxth	r0, r0
 8011302:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011306:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801130a:	da20      	bge.n	801134e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801130c:	eba8 0505 	sub.w	r5, r8, r5
 8011310:	2d00      	cmp	r5, #0
 8011312:	da21      	bge.n	8011358 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011314:	fa1f f88e 	uxth.w	r8, lr
 8011318:	fa1f f58a 	uxth.w	r5, sl
 801131c:	4443      	add	r3, r8
 801131e:	442a      	add	r2, r5
 8011320:	f8ad e010 	strh.w	lr, [sp, #16]
 8011324:	1b40      	subs	r0, r0, r5
 8011326:	ebac 0e08 	sub.w	lr, ip, r8
 801132a:	1a51      	subs	r1, r2, r1
 801132c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011330:	f8ad a012 	strh.w	sl, [sp, #18]
 8011334:	f8ad e014 	strh.w	lr, [sp, #20]
 8011338:	f8ad 0016 	strh.w	r0, [sp, #22]
 801133c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011340:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011344:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011348:	f8ad 101e 	strh.w	r1, [sp, #30]
 801134c:	e7aa      	b.n	80112a4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801134e:	d003      	beq.n	8011358 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011350:	eba8 0505 	sub.w	r5, r8, r5
 8011354:	2d00      	cmp	r5, #0
 8011356:	dcdd      	bgt.n	8011314 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011358:	fa1f f58e 	uxth.w	r5, lr
 801135c:	fa1f f88a 	uxth.w	r8, sl
 8011360:	4442      	add	r2, r8
 8011362:	442b      	add	r3, r5
 8011364:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011368:	1a51      	subs	r1, r2, r1
 801136a:	ebac 0705 	sub.w	r7, ip, r5
 801136e:	eba0 0008 	sub.w	r0, r0, r8
 8011372:	eba3 0c0c 	sub.w	ip, r3, ip
 8011376:	f8ad e010 	strh.w	lr, [sp, #16]
 801137a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801137e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011382:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011386:	f8ad a01a 	strh.w	sl, [sp, #26]
 801138a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801138e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011392:	e787      	b.n	80112a4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011394 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011394:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011398:	fb90 f2f3 	sdiv	r2, r0, r3
 801139c:	fb02 0013 	mls	r0, r2, r3, r0
 80113a0:	2800      	cmp	r0, #0
 80113a2:	bfb8      	it	lt
 80113a4:	18c0      	addlt	r0, r0, r3
 80113a6:	285a      	cmp	r0, #90	; 0x5a
 80113a8:	4b09      	ldr	r3, [pc, #36]	; (80113d0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80113aa:	dc02      	bgt.n	80113b2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80113ac:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80113b0:	4770      	bx	lr
 80113b2:	28b4      	cmp	r0, #180	; 0xb4
 80113b4:	dc02      	bgt.n	80113bc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80113b6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80113ba:	e7f7      	b.n	80113ac <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80113bc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80113c0:	bfd4      	ite	le
 80113c2:	38b4      	suble	r0, #180	; 0xb4
 80113c4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80113c8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80113cc:	4240      	negs	r0, r0
 80113ce:	4770      	bx	lr
 80113d0:	0802e1e0 	.word	0x0802e1e0

080113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80113d4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80113d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80113da:	fb90 f2f3 	sdiv	r2, r0, r3
 80113de:	fb02 0013 	mls	r0, r2, r3, r0
 80113e2:	2800      	cmp	r0, #0
 80113e4:	bfb8      	it	lt
 80113e6:	18c0      	addlt	r0, r0, r3
 80113e8:	1144      	asrs	r4, r0, #5
 80113ea:	f000 061f 	and.w	r6, r0, #31
 80113ee:	4620      	mov	r0, r4
 80113f0:	f7ff ffd0 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 80113f4:	4605      	mov	r5, r0
 80113f6:	b90e      	cbnz	r6, 80113fc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80113f8:	b002      	add	sp, #8
 80113fa:	bd70      	pop	{r4, r5, r6, pc}
 80113fc:	1c60      	adds	r0, r4, #1
 80113fe:	f7ff ffc9 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 8011402:	ab01      	add	r3, sp, #4
 8011404:	2220      	movs	r2, #32
 8011406:	4631      	mov	r1, r6
 8011408:	1b40      	subs	r0, r0, r5
 801140a:	f005 f967 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 801140e:	4428      	add	r0, r5
 8011410:	e7f2      	b.n	80113f8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011412 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011412:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011416:	bf2c      	ite	cs
 8011418:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801141c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011420:	2300      	movs	r3, #0
 8011422:	1899      	adds	r1, r3, r2
 8011424:	4288      	cmp	r0, r1
 8011426:	bf24      	itt	cs
 8011428:	1853      	addcs	r3, r2, r1
 801142a:	1a40      	subcs	r0, r0, r1
 801142c:	0892      	lsrs	r2, r2, #2
 801142e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011432:	d1f6      	bne.n	8011422 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011434:	4618      	mov	r0, r3
 8011436:	4770      	bx	lr

08011438 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011438:	b510      	push	{r4, lr}
 801143a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801143e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011442:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011446:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801144a:	13a4      	asrs	r4, r4, #14
 801144c:	139b      	asrs	r3, r3, #14
 801144e:	429c      	cmp	r4, r3
 8011450:	bfb8      	it	lt
 8011452:	461c      	movlt	r4, r3
 8011454:	2c01      	cmp	r4, #1
 8011456:	dd07      	ble.n	8011468 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011458:	fb91 f1f4 	sdiv	r1, r1, r4
 801145c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011460:	f7ff ffea 	bl	8011438 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011464:	4360      	muls	r0, r4
 8011466:	bd10      	pop	{r4, pc}
 8011468:	4340      	muls	r0, r0
 801146a:	fb01 0001 	mla	r0, r1, r1, r0
 801146e:	f7ff ffd0 	bl	8011412 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011472:	e7f8      	b.n	8011466 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011474 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011474:	2800      	cmp	r0, #0
 8011476:	b508      	push	{r3, lr}
 8011478:	da05      	bge.n	8011486 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801147a:	4240      	negs	r0, r0
 801147c:	f7ff fffa 	bl	8011474 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011480:	4240      	negs	r0, r0
 8011482:	b240      	sxtb	r0, r0
 8011484:	bd08      	pop	{r3, pc}
 8011486:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801148a:	dc11      	bgt.n	80114b0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801148c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011490:	dd09      	ble.n	80114a6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011492:	4340      	muls	r0, r0
 8011494:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011498:	f7ff ffbb 	bl	8011412 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801149c:	f7ff ffea 	bl	8011474 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80114a0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80114a4:	e7ed      	b.n	8011482 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80114a6:	3003      	adds	r0, #3
 80114a8:	10c0      	asrs	r0, r0, #3
 80114aa:	4b02      	ldr	r3, [pc, #8]	; (80114b4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80114ac:	5618      	ldrsb	r0, [r3, r0]
 80114ae:	e7e9      	b.n	8011484 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80114b0:	2000      	movs	r0, #0
 80114b2:	e7e7      	b.n	8011484 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80114b4:	0802e184 	.word	0x0802e184

080114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80114b8:	4281      	cmp	r1, r0
 80114ba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80114bc:	460c      	mov	r4, r1
 80114be:	4615      	mov	r5, r2
 80114c0:	dd07      	ble.n	80114d2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80114c2:	4601      	mov	r1, r0
 80114c4:	4620      	mov	r0, r4
 80114c6:	f7ff fff7 	bl	80114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80114ca:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80114ce:	b003      	add	sp, #12
 80114d0:	bd30      	pop	{r4, r5, pc}
 80114d2:	f7ff ffb1 	bl	8011438 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80114d6:	6028      	str	r0, [r5, #0]
 80114d8:	2800      	cmp	r0, #0
 80114da:	d0f8      	beq.n	80114ce <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80114dc:	4602      	mov	r2, r0
 80114de:	ab01      	add	r3, sp, #4
 80114e0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80114e4:	4620      	mov	r0, r4
 80114e6:	f005 f8f9 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 80114ea:	f7ff ffc3 	bl	8011474 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80114ee:	e7ee      	b.n	80114ce <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080114f0 <_ZN8touchgfx4LineC1Ev>:
 80114f0:	b510      	push	{r4, lr}
 80114f2:	4604      	mov	r4, r0
 80114f4:	f7ff fe0a 	bl	801110c <_ZN8touchgfx12CanvasWidgetC1Ev>
 80114f8:	4b0c      	ldr	r3, [pc, #48]	; (801152c <_ZN8touchgfx4LineC1Ev+0x3c>)
 80114fa:	6023      	str	r3, [r4, #0]
 80114fc:	2220      	movs	r2, #32
 80114fe:	2300      	movs	r3, #0
 8011500:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011502:	2212      	movs	r2, #18
 8011504:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011508:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801150c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011510:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011514:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011518:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801151c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011520:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011524:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011526:	60a3      	str	r3, [r4, #8]
 8011528:	4620      	mov	r0, r4
 801152a:	bd10      	pop	{r4, pc}
 801152c:	0802e2a0 	.word	0x0802e2a0

08011530 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011530:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011534:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011536:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011538:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801153a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801153c:	1aff      	subs	r7, r7, r3
 801153e:	4604      	mov	r4, r0
 8011540:	eba5 0502 	sub.w	r5, r5, r2
 8011544:	d142      	bne.n	80115cc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011546:	b955      	cbnz	r5, 801155e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011548:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801154c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011550:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011554:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011558:	b002      	add	sp, #8
 801155a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801155e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011562:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011566:	4629      	mov	r1, r5
 8011568:	4642      	mov	r2, r8
 801156a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801156c:	f005 f8d5 	bl	801671a <_ZN8touchgfx6muldivElll>
 8011570:	2502      	movs	r5, #2
 8011572:	4642      	mov	r2, r8
 8011574:	fb90 f6f5 	sdiv	r6, r0, r5
 8011578:	4639      	mov	r1, r7
 801157a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801157c:	f005 f8cd 	bl	801671a <_ZN8touchgfx6muldivElll>
 8011580:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011584:	fb90 f5f5 	sdiv	r5, r0, r5
 8011588:	f1b9 0f00 	cmp.w	r9, #0
 801158c:	d067      	beq.n	801165e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801158e:	f1b9 0f02 	cmp.w	r9, #2
 8011592:	d878      	bhi.n	8011686 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011594:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011596:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011598:	1b93      	subs	r3, r2, r6
 801159a:	1b5b      	subs	r3, r3, r5
 801159c:	6463      	str	r3, [r4, #68]	; 0x44
 801159e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80115a0:	18e9      	adds	r1, r5, r3
 80115a2:	1b89      	subs	r1, r1, r6
 80115a4:	6561      	str	r1, [r4, #84]	; 0x54
 80115a6:	1b81      	subs	r1, r0, r6
 80115a8:	4429      	add	r1, r5
 80115aa:	64a1      	str	r1, [r4, #72]	; 0x48
 80115ac:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80115ae:	4430      	add	r0, r6
 80115b0:	186f      	adds	r7, r5, r1
 80115b2:	4432      	add	r2, r6
 80115b4:	1b49      	subs	r1, r1, r5
 80115b6:	4437      	add	r7, r6
 80115b8:	4428      	add	r0, r5
 80115ba:	4431      	add	r1, r6
 80115bc:	1b52      	subs	r2, r2, r5
 80115be:	1b5b      	subs	r3, r3, r5
 80115c0:	65a7      	str	r7, [r4, #88]	; 0x58
 80115c2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80115c4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80115c6:	6522      	str	r2, [r4, #80]	; 0x50
 80115c8:	1b9b      	subs	r3, r3, r6
 80115ca:	e05b      	b.n	8011684 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80115cc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80115d0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80115d4:	2d00      	cmp	r5, #0
 80115d6:	d0c6      	beq.n	8011566 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80115d8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80115dc:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80115e0:	fb93 f2f8 	sdiv	r2, r3, r8
 80115e4:	fb08 3312 	mls	r3, r8, r2, r3
 80115e8:	b353      	cbz	r3, 8011640 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80115ea:	fb98 f2f3 	sdiv	r2, r8, r3
 80115ee:	fb03 8812 	mls	r8, r3, r2, r8
 80115f2:	f1b8 0f00 	cmp.w	r8, #0
 80115f6:	d1f3      	bne.n	80115e0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80115f8:	2b01      	cmp	r3, #1
 80115fa:	bf1c      	itt	ne
 80115fc:	fb95 f5f3 	sdivne	r5, r5, r3
 8011600:	fb97 f7f3 	sdivne	r7, r7, r3
 8011604:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011608:	f24b 5104 	movw	r1, #46340	; 0xb504
 801160c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011610:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011614:	428b      	cmp	r3, r1
 8011616:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801161a:	4608      	mov	r0, r1
 801161c:	dd01      	ble.n	8011622 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801161e:	428a      	cmp	r2, r1
 8011620:	dc10      	bgt.n	8011644 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011622:	fb90 f3f3 	sdiv	r3, r0, r3
 8011626:	fb90 f2f2 	sdiv	r2, r0, r2
 801162a:	4293      	cmp	r3, r2
 801162c:	bfa8      	it	ge
 801162e:	4613      	movge	r3, r2
 8011630:	435f      	muls	r7, r3
 8011632:	435d      	muls	r5, r3
 8011634:	4629      	mov	r1, r5
 8011636:	4638      	mov	r0, r7
 8011638:	f7ff fefe 	bl	8011438 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801163c:	4680      	mov	r8, r0
 801163e:	e792      	b.n	8011566 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011640:	4643      	mov	r3, r8
 8011642:	e7d9      	b.n	80115f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011644:	fb93 f3f1 	sdiv	r3, r3, r1
 8011648:	fb92 f2f1 	sdiv	r2, r2, r1
 801164c:	4293      	cmp	r3, r2
 801164e:	bfcc      	ite	gt
 8011650:	3301      	addgt	r3, #1
 8011652:	1c53      	addle	r3, r2, #1
 8011654:	fb97 f7f3 	sdiv	r7, r7, r3
 8011658:	fb95 f5f3 	sdiv	r5, r5, r3
 801165c:	e7ea      	b.n	8011634 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801165e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011660:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011662:	1b93      	subs	r3, r2, r6
 8011664:	6463      	str	r3, [r4, #68]	; 0x44
 8011666:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011668:	18e9      	adds	r1, r5, r3
 801166a:	6561      	str	r1, [r4, #84]	; 0x54
 801166c:	1b81      	subs	r1, r0, r6
 801166e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011670:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011672:	4430      	add	r0, r6
 8011674:	186f      	adds	r7, r5, r1
 8011676:	4432      	add	r2, r6
 8011678:	1b49      	subs	r1, r1, r5
 801167a:	65a7      	str	r7, [r4, #88]	; 0x58
 801167c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801167e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011680:	6522      	str	r2, [r4, #80]	; 0x50
 8011682:	1b5b      	subs	r3, r3, r5
 8011684:	6623      	str	r3, [r4, #96]	; 0x60
 8011686:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011688:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801168a:	9200      	str	r2, [sp, #0]
 801168c:	9301      	str	r3, [sp, #4]
 801168e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011692:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011696:	680f      	ldr	r7, [r1, #0]
 8011698:	9800      	ldr	r0, [sp, #0]
 801169a:	42ba      	cmp	r2, r7
 801169c:	bfa8      	it	ge
 801169e:	463a      	movge	r2, r7
 80116a0:	4287      	cmp	r7, r0
 80116a2:	bfc8      	it	gt
 80116a4:	9700      	strgt	r7, [sp, #0]
 80116a6:	690f      	ldr	r7, [r1, #16]
 80116a8:	9801      	ldr	r0, [sp, #4]
 80116aa:	42bb      	cmp	r3, r7
 80116ac:	bfa8      	it	ge
 80116ae:	463b      	movge	r3, r7
 80116b0:	3104      	adds	r1, #4
 80116b2:	4287      	cmp	r7, r0
 80116b4:	bfc8      	it	gt
 80116b6:	9701      	strgt	r7, [sp, #4]
 80116b8:	458c      	cmp	ip, r1
 80116ba:	d1ec      	bne.n	8011696 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80116bc:	4668      	mov	r0, sp
 80116be:	2720      	movs	r7, #32
 80116c0:	fb92 f8f7 	sdiv	r8, r2, r7
 80116c4:	fb93 f7f7 	sdiv	r7, r3, r7
 80116c8:	f7ff fd57 	bl	801117a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80116cc:	4682      	mov	sl, r0
 80116ce:	a801      	add	r0, sp, #4
 80116d0:	f7ff fd53 	bl	801117a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80116d4:	ebaa 0208 	sub.w	r2, sl, r8
 80116d8:	1bc0      	subs	r0, r0, r7
 80116da:	f1b9 0f01 	cmp.w	r9, #1
 80116de:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80116e2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80116e6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80116ea:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80116ee:	f47f af33 	bne.w	8011558 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80116f2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80116f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80116f6:	1b83      	subs	r3, r0, r6
 80116f8:	6463      	str	r3, [r4, #68]	; 0x44
 80116fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80116fc:	18ea      	adds	r2, r5, r3
 80116fe:	6562      	str	r2, [r4, #84]	; 0x54
 8011700:	1b8a      	subs	r2, r1, r6
 8011702:	64a2      	str	r2, [r4, #72]	; 0x48
 8011704:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011706:	4431      	add	r1, r6
 8011708:	18af      	adds	r7, r5, r2
 801170a:	4406      	add	r6, r0
 801170c:	1b52      	subs	r2, r2, r5
 801170e:	1b5d      	subs	r5, r3, r5
 8011710:	65a7      	str	r7, [r4, #88]	; 0x58
 8011712:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011714:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011716:	6526      	str	r6, [r4, #80]	; 0x50
 8011718:	6625      	str	r5, [r4, #96]	; 0x60
 801171a:	e71d      	b.n	8011558 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801171c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801171c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801171e:	428b      	cmp	r3, r1
 8011720:	d102      	bne.n	8011728 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011722:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011724:	4293      	cmp	r3, r2
 8011726:	d003      	beq.n	8011730 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011728:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801172c:	f7ff bf00 	b.w	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011730:	4770      	bx	lr

08011732 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011732:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011734:	428b      	cmp	r3, r1
 8011736:	d102      	bne.n	801173e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011738:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801173a:	4293      	cmp	r3, r2
 801173c:	d003      	beq.n	8011746 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801173e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011742:	f7ff bef5 	b.w	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011746:	4770      	bx	lr

08011748 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011748:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801174c:	f7ff bef0 	b.w	8011530 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011750 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011754:	b0a0      	sub	sp, #128	; 0x80
 8011756:	4604      	mov	r4, r0
 8011758:	460a      	mov	r2, r1
 801175a:	4601      	mov	r1, r0
 801175c:	a804      	add	r0, sp, #16
 801175e:	f014 fe3b 	bl	80263d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011762:	2300      	movs	r3, #0
 8011764:	9301      	str	r3, [sp, #4]
 8011766:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801176a:	2b01      	cmp	r3, #1
 801176c:	d17c      	bne.n	8011868 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801176e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011770:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011772:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011774:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011776:	1ac0      	subs	r0, r0, r3
 8011778:	eba1 0102 	sub.w	r1, r1, r2
 801177c:	d437      	bmi.n	80117ee <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801177e:	2900      	cmp	r1, #0
 8011780:	aa01      	add	r2, sp, #4
 8011782:	db2e      	blt.n	80117e2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011784:	f7ff fe98 	bl	80114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011788:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801178c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801178e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011790:	a804      	add	r0, sp, #16
 8011792:	f014 ffa1 	bl	80266d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011796:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011798:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801179a:	a804      	add	r0, sp, #16
 801179c:	f014 ffe9 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80117a0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80117a2:	2db3      	cmp	r5, #179	; 0xb3
 80117a4:	dc33      	bgt.n	801180e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80117a6:	eba6 0805 	sub.w	r8, r6, r5
 80117aa:	4640      	mov	r0, r8
 80117ac:	f7ff fdf2 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 80117b0:	a902      	add	r1, sp, #8
 80117b2:	9002      	str	r0, [sp, #8]
 80117b4:	a801      	add	r0, sp, #4
 80117b6:	f7ff fcd5 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80117ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80117bc:	1847      	adds	r7, r0, r1
 80117be:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80117c2:	f7ff fde7 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 80117c6:	a903      	add	r1, sp, #12
 80117c8:	9003      	str	r0, [sp, #12]
 80117ca:	a801      	add	r0, sp, #4
 80117cc:	f7ff fcca 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80117d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80117d2:	4639      	mov	r1, r7
 80117d4:	1a12      	subs	r2, r2, r0
 80117d6:	a804      	add	r0, sp, #16
 80117d8:	f014 ffcb 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80117dc:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80117de:	441d      	add	r5, r3
 80117e0:	e7df      	b.n	80117a2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80117e2:	4249      	negs	r1, r1
 80117e4:	f7ff fe68 	bl	80114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80117e8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80117ec:	e7ce      	b.n	801178c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80117ee:	2900      	cmp	r1, #0
 80117f0:	f1c0 0000 	rsb	r0, r0, #0
 80117f4:	aa01      	add	r2, sp, #4
 80117f6:	db04      	blt.n	8011802 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80117f8:	f7ff fe5e 	bl	80114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80117fc:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011800:	e7c4      	b.n	801178c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011802:	4249      	negs	r1, r1
 8011804:	f7ff fe58 	bl	80114b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011808:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801180c:	e7be      	b.n	801178c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801180e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011810:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011812:	a804      	add	r0, sp, #16
 8011814:	f014 ffad 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011818:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801181a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801181c:	a804      	add	r0, sp, #16
 801181e:	f014 ffa8 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011822:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011824:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011828:	2d00      	cmp	r5, #0
 801182a:	dd31      	ble.n	8011890 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801182c:	eb05 0806 	add.w	r8, r5, r6
 8011830:	4640      	mov	r0, r8
 8011832:	f7ff fdaf 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 8011836:	a902      	add	r1, sp, #8
 8011838:	9002      	str	r0, [sp, #8]
 801183a:	a801      	add	r0, sp, #4
 801183c:	f7ff fc92 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011840:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011842:	1847      	adds	r7, r0, r1
 8011844:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011848:	f7ff fda4 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 801184c:	a903      	add	r1, sp, #12
 801184e:	9003      	str	r0, [sp, #12]
 8011850:	a801      	add	r0, sp, #4
 8011852:	f7ff fc87 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011856:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011858:	4639      	mov	r1, r7
 801185a:	1a12      	subs	r2, r2, r0
 801185c:	a804      	add	r0, sp, #16
 801185e:	f014 ff88 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011862:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011864:	1aed      	subs	r5, r5, r3
 8011866:	e7df      	b.n	8011828 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011868:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801186a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801186c:	a804      	add	r0, sp, #16
 801186e:	f014 ff33 	bl	80266d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011872:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011874:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011876:	a804      	add	r0, sp, #16
 8011878:	f014 ff7b 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801187c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801187e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011880:	a804      	add	r0, sp, #16
 8011882:	f014 ff76 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011886:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011888:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801188a:	a804      	add	r0, sp, #16
 801188c:	f014 ff71 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011890:	21ff      	movs	r1, #255	; 0xff
 8011892:	a804      	add	r0, sp, #16
 8011894:	f014 fe5c 	bl	8026550 <_ZN8touchgfx6Canvas6renderEh>
 8011898:	4b04      	ldr	r3, [pc, #16]	; (80118ac <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801189a:	9304      	str	r3, [sp, #16]
 801189c:	4604      	mov	r4, r0
 801189e:	a80c      	add	r0, sp, #48	; 0x30
 80118a0:	f001 f8cc 	bl	8012a3c <_ZN8touchgfx7OutlineD1Ev>
 80118a4:	4620      	mov	r0, r4
 80118a6:	b020      	add	sp, #128	; 0x80
 80118a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118ac:	0802eac8 	.word	0x0802eac8

080118b0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80118b0:	2000      	movs	r0, #0
 80118b2:	4770      	bx	lr

080118b4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80118b4:	4b07      	ldr	r3, [pc, #28]	; (80118d4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80118b6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80118b8:	881b      	ldrh	r3, [r3, #0]
 80118ba:	4293      	cmp	r3, r2
 80118bc:	bf81      	itttt	hi
 80118be:	4b06      	ldrhi	r3, [pc, #24]	; (80118d8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80118c0:	681b      	ldrhi	r3, [r3, #0]
 80118c2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80118c6:	7858      	ldrbhi	r0, [r3, #1]
 80118c8:	bf8c      	ite	hi
 80118ca:	f000 0003 	andhi.w	r0, r0, #3
 80118ce:	2000      	movls	r0, #0
 80118d0:	4770      	bx	lr
 80118d2:	bf00      	nop
 80118d4:	20012eb8 	.word	0x20012eb8
 80118d8:	20012eb4 	.word	0x20012eb4

080118dc <_ZN8touchgfx8TextAreaD1Ev>:
 80118dc:	4770      	bx	lr
	...

080118e0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80118e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118e4:	4b10      	ldr	r3, [pc, #64]	; (8011928 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80118e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80118e8:	881b      	ldrh	r3, [r3, #0]
 80118ea:	428b      	cmp	r3, r1
 80118ec:	4604      	mov	r4, r0
 80118ee:	d918      	bls.n	8011922 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80118f0:	6803      	ldr	r3, [r0, #0]
 80118f2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80118f4:	4b0d      	ldr	r3, [pc, #52]	; (801192c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80118f6:	6818      	ldr	r0, [r3, #0]
 80118f8:	f7f6 fc5a 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 80118fc:	6823      	ldr	r3, [r4, #0]
 80118fe:	4606      	mov	r6, r0
 8011900:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011902:	4620      	mov	r0, r4
 8011904:	4798      	blx	r3
 8011906:	6823      	ldr	r3, [r4, #0]
 8011908:	4607      	mov	r7, r0
 801190a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801190e:	4620      	mov	r0, r4
 8011910:	4798      	blx	r3
 8011912:	463a      	mov	r2, r7
 8011914:	4603      	mov	r3, r0
 8011916:	4631      	mov	r1, r6
 8011918:	4620      	mov	r0, r4
 801191a:	46ac      	mov	ip, r5
 801191c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011920:	4760      	bx	ip
 8011922:	2000      	movs	r0, #0
 8011924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011928:	20012eb8 	.word	0x20012eb8
 801192c:	20012ec0 	.word	0x20012ec0

08011930 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011930:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011934:	4b17      	ldr	r3, [pc, #92]	; (8011994 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011936:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011938:	881b      	ldrh	r3, [r3, #0]
 801193a:	428b      	cmp	r3, r1
 801193c:	4604      	mov	r4, r0
 801193e:	d926      	bls.n	801198e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011940:	4b15      	ldr	r3, [pc, #84]	; (8011998 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011942:	681b      	ldr	r3, [r3, #0]
 8011944:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011948:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801194c:	4b13      	ldr	r3, [pc, #76]	; (801199c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801194e:	7855      	ldrb	r5, [r2, #1]
 8011950:	681b      	ldr	r3, [r3, #0]
 8011952:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011956:	6833      	ldr	r3, [r6, #0]
 8011958:	69df      	ldr	r7, [r3, #28]
 801195a:	4b11      	ldr	r3, [pc, #68]	; (80119a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801195c:	6818      	ldr	r0, [r3, #0]
 801195e:	f7f6 fc27 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011962:	6823      	ldr	r3, [r4, #0]
 8011964:	4680      	mov	r8, r0
 8011966:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011968:	4620      	mov	r0, r4
 801196a:	4798      	blx	r3
 801196c:	6823      	ldr	r3, [r4, #0]
 801196e:	4681      	mov	r9, r0
 8011970:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011974:	4620      	mov	r0, r4
 8011976:	4798      	blx	r3
 8011978:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801197c:	9000      	str	r0, [sp, #0]
 801197e:	464b      	mov	r3, r9
 8011980:	4642      	mov	r2, r8
 8011982:	4629      	mov	r1, r5
 8011984:	4630      	mov	r0, r6
 8011986:	47b8      	blx	r7
 8011988:	b003      	add	sp, #12
 801198a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801198e:	2000      	movs	r0, #0
 8011990:	e7fa      	b.n	8011988 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011992:	bf00      	nop
 8011994:	20012eb8 	.word	0x20012eb8
 8011998:	20012eb4 	.word	0x20012eb4
 801199c:	20012ebc 	.word	0x20012ebc
 80119a0:	20012ec0 	.word	0x20012ec0

080119a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80119a4:	b40e      	push	{r1, r2, r3}
 80119a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80119aa:	4b2f      	ldr	r3, [pc, #188]	; (8011a68 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80119ac:	881a      	ldrh	r2, [r3, #0]
 80119ae:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80119b0:	429a      	cmp	r2, r3
 80119b2:	b09d      	sub	sp, #116	; 0x74
 80119b4:	4604      	mov	r4, r0
 80119b6:	d954      	bls.n	8011a62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80119b8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011a6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80119bc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011a70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80119c0:	aa26      	add	r2, sp, #152	; 0x98
 80119c2:	9202      	str	r2, [sp, #8]
 80119c4:	f8d9 2000 	ldr.w	r2, [r9]
 80119c8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80119cc:	f8d8 3000 	ldr.w	r3, [r8]
 80119d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80119d4:	682b      	ldr	r3, [r5, #0]
 80119d6:	4628      	mov	r0, r5
 80119d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80119da:	4798      	blx	r3
 80119dc:	b207      	sxth	r7, r0
 80119de:	4606      	mov	r6, r0
 80119e0:	a803      	add	r0, sp, #12
 80119e2:	f005 fa57 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 80119e6:	682b      	ldr	r3, [r5, #0]
 80119e8:	4628      	mov	r0, r5
 80119ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80119ec:	4798      	blx	r3
 80119ee:	682b      	ldr	r3, [r5, #0]
 80119f0:	4682      	mov	sl, r0
 80119f2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80119f4:	4628      	mov	r0, r5
 80119f6:	4798      	blx	r3
 80119f8:	4653      	mov	r3, sl
 80119fa:	9000      	str	r0, [sp, #0]
 80119fc:	9a02      	ldr	r2, [sp, #8]
 80119fe:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011a00:	a803      	add	r0, sp, #12
 8011a02:	f005 faa2 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011a06:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011a08:	f8d9 3000 	ldr.w	r3, [r9]
 8011a0c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011a10:	8925      	ldrh	r5, [r4, #8]
 8011a12:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011a16:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011a1a:	eba5 050c 	sub.w	r5, r5, ip
 8011a1e:	784a      	ldrb	r2, [r1, #1]
 8011a20:	f8d8 3000 	ldr.w	r3, [r8]
 8011a24:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011a28:	b22d      	sxth	r5, r5
 8011a2a:	9500      	str	r5, [sp, #0]
 8011a2c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011a30:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011a34:	a803      	add	r0, sp, #12
 8011a36:	f002 feed 	bl	8014814 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011a3a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011a3e:	18b9      	adds	r1, r7, r2
 8011a40:	2900      	cmp	r1, #0
 8011a42:	b203      	sxth	r3, r0
 8011a44:	dd0b      	ble.n	8011a5e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011a46:	3b01      	subs	r3, #1
 8011a48:	fb13 f302 	smulbb	r3, r3, r2
 8011a4c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011a50:	b21f      	sxth	r7, r3
 8011a52:	4638      	mov	r0, r7
 8011a54:	b01d      	add	sp, #116	; 0x74
 8011a56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a5a:	b003      	add	sp, #12
 8011a5c:	4770      	bx	lr
 8011a5e:	2b00      	cmp	r3, #0
 8011a60:	dcf7      	bgt.n	8011a52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011a62:	2700      	movs	r7, #0
 8011a64:	e7f5      	b.n	8011a52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011a66:	bf00      	nop
 8011a68:	20012eb8 	.word	0x20012eb8
 8011a6c:	20012eb4 	.word	0x20012eb4
 8011a70:	20012ebc 	.word	0x20012ebc

08011a74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a78:	4bbc      	ldr	r3, [pc, #752]	; (8011d6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011a7a:	460c      	mov	r4, r1
 8011a7c:	881b      	ldrh	r3, [r3, #0]
 8011a7e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011a80:	428b      	cmp	r3, r1
 8011a82:	b0a9      	sub	sp, #164	; 0xa4
 8011a84:	4680      	mov	r8, r0
 8011a86:	d809      	bhi.n	8011a9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011a88:	2300      	movs	r3, #0
 8011a8a:	f04f 32ff 	mov.w	r2, #4294967295
 8011a8e:	e9c0 3200 	strd	r3, r2, [r0]
 8011a92:	6083      	str	r3, [r0, #8]
 8011a94:	4640      	mov	r0, r8
 8011a96:	b029      	add	sp, #164	; 0xa4
 8011a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a9c:	4eb4      	ldr	r6, [pc, #720]	; (8011d70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011a9e:	6833      	ldr	r3, [r6, #0]
 8011aa0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011aa4:	4bb3      	ldr	r3, [pc, #716]	; (8011d74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011aa6:	681b      	ldr	r3, [r3, #0]
 8011aa8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011aac:	4bb2      	ldr	r3, [pc, #712]	; (8011d78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011aae:	6818      	ldr	r0, [r3, #0]
 8011ab0:	f7f6 fb7e 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011ab4:	682b      	ldr	r3, [r5, #0]
 8011ab6:	4681      	mov	r9, r0
 8011ab8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011aba:	4628      	mov	r0, r5
 8011abc:	4798      	blx	r3
 8011abe:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011ac0:	b203      	sxth	r3, r0
 8011ac2:	4407      	add	r7, r0
 8011ac4:	9304      	str	r3, [sp, #16]
 8011ac6:	b2bb      	uxth	r3, r7
 8011ac8:	9303      	str	r3, [sp, #12]
 8011aca:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011ace:	4682      	mov	sl, r0
 8011ad0:	a80f      	add	r0, sp, #60	; 0x3c
 8011ad2:	2b00      	cmp	r3, #0
 8011ad4:	f040 80a6 	bne.w	8011c24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011ad8:	f005 f9dc 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 8011adc:	682b      	ldr	r3, [r5, #0]
 8011ade:	4628      	mov	r0, r5
 8011ae0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011ae2:	4798      	blx	r3
 8011ae4:	682b      	ldr	r3, [r5, #0]
 8011ae6:	4606      	mov	r6, r0
 8011ae8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011aea:	4628      	mov	r0, r5
 8011aec:	4798      	blx	r3
 8011aee:	6823      	ldr	r3, [r4, #0]
 8011af0:	4607      	mov	r7, r0
 8011af2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011af4:	4620      	mov	r0, r4
 8011af6:	4798      	blx	r3
 8011af8:	6823      	ldr	r3, [r4, #0]
 8011afa:	4683      	mov	fp, r0
 8011afc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011b00:	4620      	mov	r0, r4
 8011b02:	4798      	blx	r3
 8011b04:	463b      	mov	r3, r7
 8011b06:	e9cd b000 	strd	fp, r0, [sp]
 8011b0a:	4649      	mov	r1, r9
 8011b0c:	4632      	mov	r2, r6
 8011b0e:	a80f      	add	r0, sp, #60	; 0x3c
 8011b10:	f005 fa30 	bl	8016f74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011b14:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011b18:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011d70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011b1c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011b20:	f04f 0600 	mov.w	r6, #0
 8011b24:	bf0c      	ite	eq
 8011b26:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011b2a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011b2e:	4637      	mov	r7, r6
 8011b30:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011b32:	f8db 3000 	ldr.w	r3, [fp]
 8011b36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011b3a:	4629      	mov	r1, r5
 8011b3c:	785b      	ldrb	r3, [r3, #1]
 8011b3e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011b42:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011b46:	a80f      	add	r0, sp, #60	; 0x3c
 8011b48:	f002 fb7f 	bl	801424a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011b4c:	9b03      	ldr	r3, [sp, #12]
 8011b4e:	4286      	cmp	r6, r0
 8011b50:	bfb8      	it	lt
 8011b52:	4606      	movlt	r6, r0
 8011b54:	3701      	adds	r7, #1
 8011b56:	eba9 0903 	sub.w	r9, r9, r3
 8011b5a:	a80f      	add	r0, sp, #60	; 0x3c
 8011b5c:	b236      	sxth	r6, r6
 8011b5e:	b2bf      	uxth	r7, r7
 8011b60:	fa0f f989 	sxth.w	r9, r9
 8011b64:	f005 f9bd 	bl	8016ee2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011b68:	b918      	cbnz	r0, 8011b72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b6a:	7a2b      	ldrb	r3, [r5, #8]
 8011b6c:	444b      	add	r3, r9
 8011b6e:	2b00      	cmp	r3, #0
 8011b70:	dcde      	bgt.n	8011b30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011b72:	9b03      	ldr	r3, [sp, #12]
 8011b74:	9a04      	ldr	r2, [sp, #16]
 8011b76:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011b7a:	fb13 f707 	smulbb	r7, r3, r7
 8011b7e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011b80:	1aff      	subs	r7, r7, r3
 8011b82:	b2bf      	uxth	r7, r7
 8011b84:	b23b      	sxth	r3, r7
 8011b86:	429a      	cmp	r2, r3
 8011b88:	bfa8      	it	ge
 8011b8a:	4657      	movge	r7, sl
 8011b8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011b90:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011b94:	6823      	ldr	r3, [r4, #0]
 8011b96:	bf08      	it	eq
 8011b98:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011b9c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011b9e:	bf18      	it	ne
 8011ba0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011ba4:	4620      	mov	r0, r4
 8011ba6:	4798      	blx	r3
 8011ba8:	444f      	add	r7, r9
 8011baa:	fa1f f987 	uxth.w	r9, r7
 8011bae:	2801      	cmp	r0, #1
 8011bb0:	fa0f f789 	sxth.w	r7, r9
 8011bb4:	b2b3      	uxth	r3, r6
 8011bb6:	f000 80e1 	beq.w	8011d7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011bba:	2802      	cmp	r0, #2
 8011bbc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011bc0:	f000 80e2 	beq.w	8011d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011bc4:	7aea      	ldrb	r2, [r5, #11]
 8011bc6:	7b2d      	ldrb	r5, [r5, #12]
 8011bc8:	b236      	sxth	r6, r6
 8011bca:	1ab6      	subs	r6, r6, r2
 8011bcc:	442a      	add	r2, r5
 8011bce:	4413      	add	r3, r2
 8011bd0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011bd4:	fa1f fa86 	uxth.w	sl, r6
 8011bd8:	b29b      	uxth	r3, r3
 8011bda:	2a02      	cmp	r2, #2
 8011bdc:	fa0f fb8a 	sxth.w	fp, sl
 8011be0:	b21e      	sxth	r6, r3
 8011be2:	f000 80d5 	beq.w	8011d90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011be6:	2a03      	cmp	r2, #3
 8011be8:	f000 80dd 	beq.w	8011da6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011bec:	2a01      	cmp	r2, #1
 8011bee:	f040 80e5 	bne.w	8011dbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011bf2:	8925      	ldrh	r5, [r4, #8]
 8011bf4:	4633      	mov	r3, r6
 8011bf6:	eba5 0909 	sub.w	r9, r5, r9
 8011bfa:	463e      	mov	r6, r7
 8011bfc:	465d      	mov	r5, fp
 8011bfe:	461f      	mov	r7, r3
 8011c00:	fa0f fb89 	sxth.w	fp, r9
 8011c04:	4b5c      	ldr	r3, [pc, #368]	; (8011d78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011c06:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011c08:	6818      	ldr	r0, [r3, #0]
 8011c0a:	f7f6 fad1 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011c0e:	f8a8 b000 	strh.w	fp, [r8]
 8011c12:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011c16:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011c1a:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011c1e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011c22:	e737      	b.n	8011a94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011c24:	f005 f936 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 8011c28:	682b      	ldr	r3, [r5, #0]
 8011c2a:	4628      	mov	r0, r5
 8011c2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011c2e:	4798      	blx	r3
 8011c30:	682b      	ldr	r3, [r5, #0]
 8011c32:	4607      	mov	r7, r0
 8011c34:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011c36:	4628      	mov	r0, r5
 8011c38:	4798      	blx	r3
 8011c3a:	6823      	ldr	r3, [r4, #0]
 8011c3c:	4683      	mov	fp, r0
 8011c3e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c40:	4620      	mov	r0, r4
 8011c42:	4798      	blx	r3
 8011c44:	6822      	ldr	r2, [r4, #0]
 8011c46:	9005      	str	r0, [sp, #20]
 8011c48:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	4790      	blx	r2
 8011c50:	9b05      	ldr	r3, [sp, #20]
 8011c52:	9001      	str	r0, [sp, #4]
 8011c54:	463a      	mov	r2, r7
 8011c56:	4649      	mov	r1, r9
 8011c58:	9300      	str	r3, [sp, #0]
 8011c5a:	a80f      	add	r0, sp, #60	; 0x3c
 8011c5c:	465b      	mov	r3, fp
 8011c5e:	f005 f989 	bl	8016f74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011c62:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011c66:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011c6a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011c6c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011c70:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011c74:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011c78:	bf0a      	itet	eq
 8011c7a:	464a      	moveq	r2, r9
 8011c7c:	461a      	movne	r2, r3
 8011c7e:	4699      	moveq	r9, r3
 8011c80:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011c84:	1ad2      	subs	r2, r2, r3
 8011c86:	6833      	ldr	r3, [r6, #0]
 8011c88:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011c8c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011c90:	af0f      	add	r7, sp, #60	; 0x3c
 8011c92:	7859      	ldrb	r1, [r3, #1]
 8011c94:	9707      	str	r7, [sp, #28]
 8011c96:	2300      	movs	r3, #0
 8011c98:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011c9c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011ca0:	f88d 1020 	strb.w	r1, [sp, #32]
 8011ca4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011ca8:	9509      	str	r5, [sp, #36]	; 0x24
 8011caa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011cae:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011cb2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011cb6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011cba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011cbe:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011cc2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011cc6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011cca:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011cce:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011cd2:	b350      	cbz	r0, 8011d2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011cd4:	682b      	ldr	r3, [r5, #0]
 8011cd6:	4628      	mov	r0, r5
 8011cd8:	695b      	ldr	r3, [r3, #20]
 8011cda:	4798      	blx	r3
 8011cdc:	4607      	mov	r7, r0
 8011cde:	b320      	cbz	r0, 8011d2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ce0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ce2:	6803      	ldr	r3, [r0, #0]
 8011ce4:	4639      	mov	r1, r7
 8011ce6:	68db      	ldr	r3, [r3, #12]
 8011ce8:	4798      	blx	r3
 8011cea:	4606      	mov	r6, r0
 8011cec:	b1e8      	cbz	r0, 8011d2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011cee:	7b43      	ldrb	r3, [r0, #13]
 8011cf0:	7a82      	ldrb	r2, [r0, #10]
 8011cf2:	005b      	lsls	r3, r3, #1
 8011cf4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011cf8:	4313      	orrs	r3, r2
 8011cfa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011cfe:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011d02:	2b06      	cmp	r3, #6
 8011d04:	d111      	bne.n	8011d2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011d08:	6803      	ldr	r3, [r0, #0]
 8011d0a:	4632      	mov	r2, r6
 8011d0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011d0e:	4639      	mov	r1, r7
 8011d10:	4798      	blx	r3
 8011d12:	7b73      	ldrb	r3, [r6, #13]
 8011d14:	005b      	lsls	r3, r3, #1
 8011d16:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011d1a:	7ab3      	ldrb	r3, [r6, #10]
 8011d1c:	4313      	orrs	r3, r2
 8011d1e:	4418      	add	r0, r3
 8011d20:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011d24:	4418      	add	r0, r3
 8011d26:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011d2a:	2600      	movs	r6, #0
 8011d2c:	4637      	mov	r7, r6
 8011d2e:	a806      	add	r0, sp, #24
 8011d30:	f002 fc6c 	bl	801460c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011d34:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011d38:	9b03      	ldr	r3, [sp, #12]
 8011d3a:	4286      	cmp	r6, r0
 8011d3c:	eba9 0903 	sub.w	r9, r9, r3
 8011d40:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011d44:	bfb8      	it	lt
 8011d46:	4606      	movlt	r6, r0
 8011d48:	3701      	adds	r7, #1
 8011d4a:	b236      	sxth	r6, r6
 8011d4c:	b2bf      	uxth	r7, r7
 8011d4e:	fa0f f989 	sxth.w	r9, r9
 8011d52:	2b00      	cmp	r3, #0
 8011d54:	f43f af0d 	beq.w	8011b72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011d58:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011d5c:	2b00      	cmp	r3, #0
 8011d5e:	f47f af08 	bne.w	8011b72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011d62:	7a2b      	ldrb	r3, [r5, #8]
 8011d64:	444b      	add	r3, r9
 8011d66:	2b00      	cmp	r3, #0
 8011d68:	dce1      	bgt.n	8011d2e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011d6a:	e702      	b.n	8011b72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011d6c:	20012eb8 	.word	0x20012eb8
 8011d70:	20012eb4 	.word	0x20012eb4
 8011d74:	20012ebc 	.word	0x20012ebc
 8011d78:	20012ec0 	.word	0x20012ec0
 8011d7c:	ebaa 0606 	sub.w	r6, sl, r6
 8011d80:	2002      	movs	r0, #2
 8011d82:	fb96 f6f0 	sdiv	r6, r6, r0
 8011d86:	e71d      	b.n	8011bc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011d88:	441e      	add	r6, r3
 8011d8a:	ebaa 0606 	sub.w	r6, sl, r6
 8011d8e:	e719      	b.n	8011bc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011d90:	8925      	ldrh	r5, [r4, #8]
 8011d92:	1aed      	subs	r5, r5, r3
 8011d94:	eba5 050a 	sub.w	r5, r5, sl
 8011d98:	fa0f fb85 	sxth.w	fp, r5
 8011d9c:	8965      	ldrh	r5, [r4, #10]
 8011d9e:	eba5 0509 	sub.w	r5, r5, r9
 8011da2:	b22d      	sxth	r5, r5
 8011da4:	e72e      	b.n	8011c04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011da6:	8965      	ldrh	r5, [r4, #10]
 8011da8:	1aed      	subs	r5, r5, r3
 8011daa:	eba5 050a 	sub.w	r5, r5, sl
 8011dae:	4633      	mov	r3, r6
 8011db0:	b22d      	sxth	r5, r5
 8011db2:	463e      	mov	r6, r7
 8011db4:	f04f 0b00 	mov.w	fp, #0
 8011db8:	461f      	mov	r7, r3
 8011dba:	e723      	b.n	8011c04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011dbc:	2500      	movs	r5, #0
 8011dbe:	e721      	b.n	8011c04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011dc0 <_ZN8touchgfx8TextAreaD0Ev>:
 8011dc0:	b510      	push	{r4, lr}
 8011dc2:	2148      	movs	r1, #72	; 0x48
 8011dc4:	4604      	mov	r4, r0
 8011dc6:	f017 fa4a 	bl	802925e <_ZdlPvj>
 8011dca:	4620      	mov	r0, r4
 8011dcc:	bd10      	pop	{r4, pc}
	...

08011dd0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011dd0:	b513      	push	{r0, r1, r4, lr}
 8011dd2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011dd6:	4604      	mov	r4, r0
 8011dd8:	b1fb      	cbz	r3, 8011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011dda:	4b16      	ldr	r3, [pc, #88]	; (8011e34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011ddc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011dde:	881b      	ldrh	r3, [r3, #0]
 8011de0:	428b      	cmp	r3, r1
 8011de2:	d91a      	bls.n	8011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011de4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011de8:	2b00      	cmp	r3, #0
 8011dea:	dd16      	ble.n	8011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011dec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011df0:	2b00      	cmp	r3, #0
 8011df2:	dd12      	ble.n	8011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011df4:	4b10      	ldr	r3, [pc, #64]	; (8011e38 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011df6:	6818      	ldr	r0, [r3, #0]
 8011df8:	f7f6 f9da 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011dfc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011e00:	6822      	ldr	r2, [r4, #0]
 8011e02:	2b00      	cmp	r3, #0
 8011e04:	db06      	blt.n	8011e14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011e06:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011e0a:	2b00      	cmp	r3, #0
 8011e0c:	db02      	blt.n	8011e14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011e0e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011e10:	4298      	cmp	r0, r3
 8011e12:	d004      	beq.n	8011e1e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011e14:	6953      	ldr	r3, [r2, #20]
 8011e16:	4620      	mov	r0, r4
 8011e18:	4798      	blx	r3
 8011e1a:	b002      	add	sp, #8
 8011e1c:	bd10      	pop	{r4, pc}
 8011e1e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011e22:	c903      	ldmia	r1, {r0, r1}
 8011e24:	466b      	mov	r3, sp
 8011e26:	e883 0003 	stmia.w	r3, {r0, r1}
 8011e2a:	6912      	ldr	r2, [r2, #16]
 8011e2c:	4619      	mov	r1, r3
 8011e2e:	4620      	mov	r0, r4
 8011e30:	4790      	blx	r2
 8011e32:	e7f2      	b.n	8011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e34:	20012eb8 	.word	0x20012eb8
 8011e38:	20012ec0 	.word	0x20012ec0

08011e3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e40:	4b44      	ldr	r3, [pc, #272]	; (8011f54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011e42:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011e44:	881b      	ldrh	r3, [r3, #0]
 8011e46:	4293      	cmp	r3, r2
 8011e48:	b08e      	sub	sp, #56	; 0x38
 8011e4a:	4604      	mov	r4, r0
 8011e4c:	d97e      	bls.n	8011f4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011e4e:	6808      	ldr	r0, [r1, #0]
 8011e50:	4d41      	ldr	r5, [pc, #260]	; (8011f58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011e52:	6849      	ldr	r1, [r1, #4]
 8011e54:	ab05      	add	r3, sp, #20
 8011e56:	c303      	stmia	r3!, {r0, r1}
 8011e58:	4611      	mov	r1, r2
 8011e5a:	6828      	ldr	r0, [r5, #0]
 8011e5c:	f7f6 f9a8 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011e60:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011e64:	2b00      	cmp	r3, #0
 8011e66:	db11      	blt.n	8011e8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011e68:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011e6c:	2b00      	cmp	r3, #0
 8011e6e:	db0d      	blt.n	8011e8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011e70:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011e72:	4298      	cmp	r0, r3
 8011e74:	d10a      	bne.n	8011e8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011e76:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011e7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011e7e:	ab09      	add	r3, sp, #36	; 0x24
 8011e80:	e883 0003 	stmia.w	r3, {r0, r1}
 8011e84:	4619      	mov	r1, r3
 8011e86:	a805      	add	r0, sp, #20
 8011e88:	f7fe f860 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8011e8c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011e90:	2b00      	cmp	r3, #0
 8011e92:	dd5b      	ble.n	8011f4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011e94:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011e98:	2b00      	cmp	r3, #0
 8011e9a:	dd57      	ble.n	8011f4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011e9c:	4f2f      	ldr	r7, [pc, #188]	; (8011f5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011e9e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011ea0:	683b      	ldr	r3, [r7, #0]
 8011ea2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011ea6:	4b2e      	ldr	r3, [pc, #184]	; (8011f60 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011ea8:	681b      	ldr	r3, [r3, #0]
 8011eaa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011eae:	2e00      	cmp	r6, #0
 8011eb0:	d04c      	beq.n	8011f4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011eb2:	6823      	ldr	r3, [r4, #0]
 8011eb4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011eb8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011eba:	4620      	mov	r0, r4
 8011ebc:	4798      	blx	r3
 8011ebe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011ec0:	683b      	ldr	r3, [r7, #0]
 8011ec2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011ec6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011eca:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011ece:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011ed0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011ed4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011ed8:	785b      	ldrb	r3, [r3, #1]
 8011eda:	9609      	str	r6, [sp, #36]	; 0x24
 8011edc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011ee0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011ee4:	4b1f      	ldr	r3, [pc, #124]	; (8011f64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011ee6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011eea:	681b      	ldr	r3, [r3, #0]
 8011eec:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011ef0:	910b      	str	r1, [sp, #44]	; 0x2c
 8011ef2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011ef6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011efa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011efe:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011f02:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011f06:	b10a      	cbz	r2, 8011f0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011f08:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011f0a:	b906      	cbnz	r6, 8011f0e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011f0c:	689e      	ldr	r6, [r3, #8]
 8011f0e:	af07      	add	r7, sp, #28
 8011f10:	4621      	mov	r1, r4
 8011f12:	4638      	mov	r0, r7
 8011f14:	f004 fab0 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f18:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011f1a:	6828      	ldr	r0, [r5, #0]
 8011f1c:	f7f6 f948 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8011f20:	6823      	ldr	r3, [r4, #0]
 8011f22:	4605      	mov	r5, r0
 8011f24:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011f26:	4620      	mov	r0, r4
 8011f28:	4798      	blx	r3
 8011f2a:	6823      	ldr	r3, [r4, #0]
 8011f2c:	4680      	mov	r8, r0
 8011f2e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011f32:	4620      	mov	r0, r4
 8011f34:	4798      	blx	r3
 8011f36:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011f3a:	ab09      	add	r3, sp, #36	; 0x24
 8011f3c:	9300      	str	r3, [sp, #0]
 8011f3e:	9501      	str	r5, [sp, #4]
 8011f40:	ab05      	add	r3, sp, #20
 8011f42:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011f46:	4630      	mov	r0, r6
 8011f48:	f7f6 f8e4 	bl	8008114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011f4c:	b00e      	add	sp, #56	; 0x38
 8011f4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f52:	bf00      	nop
 8011f54:	20012eb8 	.word	0x20012eb8
 8011f58:	20012ec0 	.word	0x20012ec0
 8011f5c:	20012eb4 	.word	0x20012eb4
 8011f60:	20012ebc 	.word	0x20012ebc
 8011f64:	20012e5c 	.word	0x20012e5c

08011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011f68:	b538      	push	{r3, r4, r5, lr}
 8011f6a:	4b0e      	ldr	r3, [pc, #56]	; (8011fa4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011f6c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011f6e:	881b      	ldrh	r3, [r3, #0]
 8011f70:	429a      	cmp	r2, r3
 8011f72:	4604      	mov	r4, r0
 8011f74:	d214      	bcs.n	8011fa0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011f76:	6803      	ldr	r3, [r0, #0]
 8011f78:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011f7a:	4798      	blx	r3
 8011f7c:	6823      	ldr	r3, [r4, #0]
 8011f7e:	4605      	mov	r5, r0
 8011f80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011f82:	4620      	mov	r0, r4
 8011f84:	4798      	blx	r3
 8011f86:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011f8a:	b22d      	sxth	r5, r5
 8011f8c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011f90:	4601      	mov	r1, r0
 8011f92:	bf06      	itte	eq
 8011f94:	4602      	moveq	r2, r0
 8011f96:	4629      	moveq	r1, r5
 8011f98:	462a      	movne	r2, r5
 8011f9a:	4620      	mov	r0, r4
 8011f9c:	f7fd fdb6 	bl	800fb0c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011fa0:	bd38      	pop	{r3, r4, r5, pc}
 8011fa2:	bf00      	nop
 8011fa4:	20012eb8 	.word	0x20012eb8

08011fa8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011fa8:	b530      	push	{r4, r5, lr}
 8011faa:	888b      	ldrh	r3, [r1, #4]
 8011fac:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011fae:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011fb2:	b085      	sub	sp, #20
 8011fb4:	4604      	mov	r4, r0
 8011fb6:	b923      	cbnz	r3, 8011fc2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011fb8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011fbc:	b90b      	cbnz	r3, 8011fc2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011fbe:	f7ff ffd3 	bl	8011f68 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011fc2:	6823      	ldr	r3, [r4, #0]
 8011fc4:	466d      	mov	r5, sp
 8011fc6:	4621      	mov	r1, r4
 8011fc8:	4628      	mov	r0, r5
 8011fca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011fce:	4798      	blx	r3
 8011fd0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011fd4:	343c      	adds	r4, #60	; 0x3c
 8011fd6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011fda:	b005      	add	sp, #20
 8011fdc:	bd30      	pop	{r4, r5, pc}

08011fde <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011fde:	2300      	movs	r3, #0
 8011fe0:	8083      	strh	r3, [r0, #4]
 8011fe2:	80c3      	strh	r3, [r0, #6]
 8011fe4:	8003      	strh	r3, [r0, #0]
 8011fe6:	8043      	strh	r3, [r0, #2]
 8011fe8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011fec:	2bff      	cmp	r3, #255	; 0xff
 8011fee:	bf01      	itttt	eq
 8011ff0:	890b      	ldrheq	r3, [r1, #8]
 8011ff2:	8083      	strheq	r3, [r0, #4]
 8011ff4:	894b      	ldrheq	r3, [r1, #10]
 8011ff6:	80c3      	strheq	r3, [r0, #6]
 8011ff8:	4770      	bx	lr
	...

08011ffc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011ffc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ffe:	4604      	mov	r4, r0
 8012000:	6808      	ldr	r0, [r1, #0]
 8012002:	6849      	ldr	r1, [r1, #4]
 8012004:	466b      	mov	r3, sp
 8012006:	c303      	stmia	r3!, {r0, r1}
 8012008:	6823      	ldr	r3, [r4, #0]
 801200a:	4669      	mov	r1, sp
 801200c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801200e:	4620      	mov	r0, r4
 8012010:	4798      	blx	r3
 8012012:	4b08      	ldr	r3, [pc, #32]	; (8012034 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012014:	681b      	ldr	r3, [r3, #0]
 8012016:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801201a:	b10a      	cbz	r2, 8012020 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801201c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801201e:	b900      	cbnz	r0, 8012022 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012020:	6898      	ldr	r0, [r3, #8]
 8012022:	6803      	ldr	r3, [r0, #0]
 8012024:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012026:	6a1d      	ldr	r5, [r3, #32]
 8012028:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801202c:	4669      	mov	r1, sp
 801202e:	47a8      	blx	r5
 8012030:	b003      	add	sp, #12
 8012032:	bd30      	pop	{r4, r5, pc}
 8012034:	20012e5c 	.word	0x20012e5c

08012038 <_ZN8touchgfx3BoxD1Ev>:
 8012038:	4770      	bx	lr

0801203a <_ZN8touchgfx3BoxD0Ev>:
 801203a:	b510      	push	{r4, lr}
 801203c:	212c      	movs	r1, #44	; 0x2c
 801203e:	4604      	mov	r4, r0
 8012040:	f017 f90d 	bl	802925e <_ZdlPvj>
 8012044:	4620      	mov	r0, r4
 8012046:	bd10      	pop	{r4, pc}

08012048 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012048:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801204c:	b12a      	cbz	r2, 801205a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801204e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012052:	b112      	cbz	r2, 801205a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012054:	6803      	ldr	r3, [r0, #0]
 8012056:	695b      	ldr	r3, [r3, #20]
 8012058:	4718      	bx	r3
 801205a:	4770      	bx	lr

0801205c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801205c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012060:	600b      	str	r3, [r1, #0]
 8012062:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012066:	6013      	str	r3, [r2, #0]
 8012068:	4770      	bx	lr

0801206a <_ZN8touchgfx5Gauge8setWidthEs>:
 801206a:	8101      	strh	r1, [r0, #8]
 801206c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012070:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012074:	4770      	bx	lr

08012076 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012076:	8141      	strh	r1, [r0, #10]
 8012078:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801207c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012080:	4770      	bx	lr

08012082 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012082:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012086:	4770      	bx	lr

08012088 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012088:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801208c:	4770      	bx	lr

0801208e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801208e:	4770      	bx	lr

08012090 <_ZN8touchgfx5GaugeD1Ev>:
 8012090:	4770      	bx	lr

08012092 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012092:	b538      	push	{r3, r4, r5, lr}
 8012094:	4604      	mov	r4, r0
 8012096:	460d      	mov	r5, r1
 8012098:	f7fd fc51 	bl	800f93e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 801209c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80120a0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80120a4:	bd38      	pop	{r3, r4, r5, pc}

080120a6 <_ZN8touchgfx5GaugeD0Ev>:
 80120a6:	b510      	push	{r4, lr}
 80120a8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80120ac:	4604      	mov	r4, r0
 80120ae:	f017 f8d6 	bl	802925e <_ZdlPvj>
 80120b2:	4620      	mov	r0, r4
 80120b4:	bd10      	pop	{r4, pc}

080120b6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80120b6:	b510      	push	{r4, lr}
 80120b8:	6803      	ldr	r3, [r0, #0]
 80120ba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80120be:	4604      	mov	r4, r0
 80120c0:	4798      	blx	r3
 80120c2:	b170      	cbz	r0, 80120e2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80120c4:	6823      	ldr	r3, [r4, #0]
 80120c6:	4620      	mov	r0, r4
 80120c8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80120cc:	4798      	blx	r3
 80120ce:	b140      	cbz	r0, 80120e2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80120d0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80120d4:	b12b      	cbz	r3, 80120e2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80120d6:	6823      	ldr	r3, [r4, #0]
 80120d8:	4620      	mov	r0, r4
 80120da:	695b      	ldr	r3, [r3, #20]
 80120dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120e0:	4718      	bx	r3
 80120e2:	bd10      	pop	{r4, pc}

080120e4 <_ZN8touchgfx5GaugeC1Ev>:
 80120e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80120e6:	4604      	mov	r4, r0
 80120e8:	4626      	mov	r6, r4
 80120ea:	f7fd fd49 	bl	800fb80 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80120ee:	4b18      	ldr	r3, [pc, #96]	; (8012150 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80120f0:	f846 3bb4 	str.w	r3, [r6], #180
 80120f4:	a902      	add	r1, sp, #8
 80120f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80120fa:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80120fe:	4630      	mov	r0, r6
 8012100:	f015 f970 	bl	80273e4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012104:	2500      	movs	r5, #0
 8012106:	2301      	movs	r3, #1
 8012108:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801210c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012110:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012114:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012118:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801211c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012120:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012124:	4638      	mov	r0, r7
 8012126:	f014 fba1 	bl	802686c <_ZN8touchgfx6CircleC1Ev>
 801212a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801212e:	4620      	mov	r0, r4
 8012130:	f7fd fdc7 	bl	800fcc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012134:	4639      	mov	r1, r7
 8012136:	4620      	mov	r0, r4
 8012138:	f7fd fd82 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801213c:	4620      	mov	r0, r4
 801213e:	4631      	mov	r1, r6
 8012140:	f7fd fd7e 	bl	800fc40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012144:	4620      	mov	r0, r4
 8012146:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801214a:	b003      	add	sp, #12
 801214c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801214e:	bf00      	nop
 8012150:	0802e410 	.word	0x0802e410

08012154 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012154:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012158:	4770      	bx	lr

0801215a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801215a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801215e:	4770      	bx	lr

08012160 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012160:	b538      	push	{r3, r4, r5, lr}
 8012162:	8902      	ldrh	r2, [r0, #8]
 8012164:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012168:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 801216c:	4604      	mov	r4, r0
 801216e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012172:	2200      	movs	r2, #0
 8012174:	4611      	mov	r1, r2
 8012176:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801217a:	4628      	mov	r0, r5
 801217c:	f7f0 fb03 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 8012180:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012184:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012188:	1a9b      	subs	r3, r3, r2
 801218a:	ee07 3a90 	vmov	s15, r3
 801218e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012192:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012196:	1a9b      	subs	r3, r3, r2
 8012198:	ee07 3a10 	vmov	s14, r3
 801219c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80121a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80121a4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80121a8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80121ac:	4628      	mov	r0, r5
 80121ae:	f015 f965 	bl	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80121b2:	4b16      	ldr	r3, [pc, #88]	; (801220c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80121b4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80121b8:	4628      	mov	r0, r5
 80121ba:	f015 f95f 	bl	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80121be:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80121c2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80121c6:	ee07 3a90 	vmov	s15, r3
 80121ca:	ee07 2a10 	vmov	s14, r2
 80121ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80121d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80121d6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80121da:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80121de:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80121e2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80121e6:	4628      	mov	r0, r5
 80121e8:	f015 f948 	bl	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80121ec:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80121f0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80121f4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80121f8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 80121fc:	4628      	mov	r0, r5
 80121fe:	f015 f93d 	bl	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012202:	2301      	movs	r3, #1
 8012204:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012208:	bd38      	pop	{r3, r4, r5, pc}
 801220a:	bf00      	nop
 801220c:	43960000 	.word	0x43960000

08012210 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012210:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012212:	4604      	mov	r4, r0
 8012214:	a802      	add	r0, sp, #8
 8012216:	4616      	mov	r6, r2
 8012218:	f820 1d04 	strh.w	r1, [r0, #-4]!
 801221c:	461d      	mov	r5, r3
 801221e:	4601      	mov	r1, r0
 8012220:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012224:	f015 fa80 	bl	8027728 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012228:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801222c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012230:	4620      	mov	r0, r4
 8012232:	f7ff ff95 	bl	8012160 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012236:	b002      	add	sp, #8
 8012238:	bd70      	pop	{r4, r5, r6, pc}

0801223a <_ZN8touchgfx5Gauge9setCenterEii>:
 801223a:	b570      	push	{r4, r5, r6, lr}
 801223c:	4606      	mov	r6, r0
 801223e:	460d      	mov	r5, r1
 8012240:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012244:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012248:	4614      	mov	r4, r2
 801224a:	f7ff ff89 	bl	8012160 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801224e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012252:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012256:	1aa4      	subs	r4, r4, r2
 8012258:	1a6d      	subs	r5, r5, r1
 801225a:	0164      	lsls	r4, r4, #5
 801225c:	016d      	lsls	r5, r5, #5
 801225e:	3410      	adds	r4, #16
 8012260:	3510      	adds	r5, #16
 8012262:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012266:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801226a:	bd70      	pop	{r4, r5, r6, pc}

0801226c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801226c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801226e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012270:	0149      	lsls	r1, r1, #5
 8012272:	4299      	cmp	r1, r3
 8012274:	4604      	mov	r4, r0
 8012276:	9101      	str	r1, [sp, #4]
 8012278:	d00b      	beq.n	8012292 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801227a:	4601      	mov	r1, r0
 801227c:	aa01      	add	r2, sp, #4
 801227e:	a802      	add	r0, sp, #8
 8012280:	f014 fcf2 	bl	8026c68 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012284:	9b01      	ldr	r3, [sp, #4]
 8012286:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012288:	6823      	ldr	r3, [r4, #0]
 801228a:	a902      	add	r1, sp, #8
 801228c:	691b      	ldr	r3, [r3, #16]
 801228e:	4620      	mov	r0, r4
 8012290:	4798      	blx	r3
 8012292:	b004      	add	sp, #16
 8012294:	bd10      	pop	{r4, pc}
	...

08012298 <_ZN8touchgfx5Gauge8setValueEi>:
 8012298:	b570      	push	{r4, r5, r6, lr}
 801229a:	4604      	mov	r4, r0
 801229c:	f7fd fba2 	bl	800f9e4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80122a0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80122a4:	429a      	cmp	r2, r3
 80122a6:	bfac      	ite	ge
 80122a8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80122ac:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80122b0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80122b4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80122b8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80122bc:	1ac9      	subs	r1, r1, r3
 80122be:	2900      	cmp	r1, #0
 80122c0:	bfb8      	it	lt
 80122c2:	4249      	neglt	r1, r1
 80122c4:	b289      	uxth	r1, r1
 80122c6:	4620      	mov	r0, r4
 80122c8:	f7fd fbae 	bl	800fa28 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80122cc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80122d0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80122d4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801233c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80122d8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012340 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80122dc:	429a      	cmp	r2, r3
 80122de:	4605      	mov	r5, r0
 80122e0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80122e4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80122e8:	da15      	bge.n	8012316 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80122ea:	1b5b      	subs	r3, r3, r5
 80122ec:	ee07 3a90 	vmov	s15, r3
 80122f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80122f4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80122f8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80122fc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012300:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012304:	f015 f829 	bl	802735a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012308:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801230c:	1b49      	subs	r1, r1, r5
 801230e:	4630      	mov	r0, r6
 8012310:	f7ff ffac 	bl	801226c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012314:	bd70      	pop	{r4, r5, r6, pc}
 8012316:	442b      	add	r3, r5
 8012318:	ee07 3a90 	vmov	s15, r3
 801231c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012320:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012324:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012328:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801232c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012330:	f015 f813 	bl	802735a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012334:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012338:	4429      	add	r1, r5
 801233a:	e7e8      	b.n	801230e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801233c:	43340000 	.word	0x43340000
 8012340:	40490fdb 	.word	0x40490fdb

08012344 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012344:	b510      	push	{r4, lr}
 8012346:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801234a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801234e:	0149      	lsls	r1, r1, #5
 8012350:	0152      	lsls	r2, r2, #5
 8012352:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012356:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801235a:	4604      	mov	r4, r0
 801235c:	f7fd faec 	bl	800f938 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012360:	4601      	mov	r1, r0
 8012362:	4620      	mov	r0, r4
 8012364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012368:	f7ff bf96 	b.w	8012298 <_ZN8touchgfx5Gauge8setValueEi>

0801236c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801236c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012370:	4770      	bx	lr

08012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012372:	b570      	push	{r4, r5, r6, lr}
 8012374:	880b      	ldrh	r3, [r1, #0]
 8012376:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012378:	4605      	mov	r5, r0
 801237a:	8813      	ldrh	r3, [r2, #0]
 801237c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012380:	4604      	mov	r4, r0
 8012382:	4628      	mov	r0, r5
 8012384:	f006 fb06 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012388:	4606      	mov	r6, r0
 801238a:	4628      	mov	r0, r5
 801238c:	f006 fb36 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012390:	6823      	ldr	r3, [r4, #0]
 8012392:	4605      	mov	r5, r0
 8012394:	4631      	mov	r1, r6
 8012396:	4620      	mov	r0, r4
 8012398:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801239a:	4798      	blx	r3
 801239c:	6823      	ldr	r3, [r4, #0]
 801239e:	4629      	mov	r1, r5
 80123a0:	4620      	mov	r0, r4
 80123a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80123a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123a8:	4718      	bx	r3

080123aa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80123aa:	b510      	push	{r4, lr}
 80123ac:	4604      	mov	r4, r0
 80123ae:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80123b0:	b150      	cbz	r0, 80123c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80123b2:	6803      	ldr	r3, [r0, #0]
 80123b4:	68db      	ldr	r3, [r3, #12]
 80123b6:	4798      	blx	r3
 80123b8:	b130      	cbz	r0, 80123c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80123ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80123bc:	6803      	ldr	r3, [r0, #0]
 80123be:	4621      	mov	r1, r4
 80123c0:	689b      	ldr	r3, [r3, #8]
 80123c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123c6:	4718      	bx	r3
 80123c8:	bd10      	pop	{r4, pc}

080123ca <_ZNK8touchgfx6Button12getSolidRectEv>:
 80123ca:	b510      	push	{r4, lr}
 80123cc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80123d0:	2bff      	cmp	r3, #255	; 0xff
 80123d2:	4604      	mov	r4, r0
 80123d4:	d006      	beq.n	80123e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80123d6:	2300      	movs	r3, #0
 80123d8:	8003      	strh	r3, [r0, #0]
 80123da:	8043      	strh	r3, [r0, #2]
 80123dc:	8083      	strh	r3, [r0, #4]
 80123de:	80c3      	strh	r3, [r0, #6]
 80123e0:	4620      	mov	r0, r4
 80123e2:	bd10      	pop	{r4, pc}
 80123e4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80123e8:	b11b      	cbz	r3, 80123f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80123ea:	3130      	adds	r1, #48	; 0x30
 80123ec:	f006 fb3a 	bl	8018a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80123f0:	e7f6      	b.n	80123e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80123f2:	312e      	adds	r1, #46	; 0x2e
 80123f4:	e7fa      	b.n	80123ec <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080123f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80123f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123fc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012400:	b08a      	sub	sp, #40	; 0x28
 8012402:	4604      	mov	r4, r0
 8012404:	4688      	mov	r8, r1
 8012406:	2b00      	cmp	r3, #0
 8012408:	d066      	beq.n	80124d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801240a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801240c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012410:	a805      	add	r0, sp, #20
 8012412:	f006 fabf 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012416:	4607      	mov	r7, r0
 8012418:	a805      	add	r0, sp, #20
 801241a:	f006 faef 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801241e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012422:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012426:	4432      	add	r2, r6
 8012428:	b292      	uxth	r2, r2
 801242a:	2300      	movs	r3, #0
 801242c:	fa0f fc82 	sxth.w	ip, r2
 8012430:	459c      	cmp	ip, r3
 8012432:	9306      	str	r3, [sp, #24]
 8012434:	dd52      	ble.n	80124dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012436:	42b7      	cmp	r7, r6
 8012438:	dd50      	ble.n	80124dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801243a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801243e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012442:	442b      	add	r3, r5
 8012444:	b29b      	uxth	r3, r3
 8012446:	b219      	sxth	r1, r3
 8012448:	2900      	cmp	r1, #0
 801244a:	dd47      	ble.n	80124dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801244c:	42a8      	cmp	r0, r5
 801244e:	dd45      	ble.n	80124dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012450:	4567      	cmp	r7, ip
 8012452:	bfb8      	it	lt
 8012454:	b2ba      	uxthlt	r2, r7
 8012456:	4288      	cmp	r0, r1
 8012458:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801245c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012460:	bfb8      	it	lt
 8012462:	b283      	uxthlt	r3, r0
 8012464:	1b92      	subs	r2, r2, r6
 8012466:	1b5b      	subs	r3, r3, r5
 8012468:	f8ad 201c 	strh.w	r2, [sp, #28]
 801246c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012470:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012474:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012478:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801247c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012480:	429a      	cmp	r2, r3
 8012482:	d026      	beq.n	80124d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012484:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012488:	2b00      	cmp	r3, #0
 801248a:	dd22      	ble.n	80124d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801248c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012490:	2b00      	cmp	r3, #0
 8012492:	dd1e      	ble.n	80124d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012494:	2300      	movs	r3, #0
 8012496:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801249a:	6823      	ldr	r3, [r4, #0]
 801249c:	a908      	add	r1, sp, #32
 801249e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124a0:	4620      	mov	r0, r4
 80124a2:	4798      	blx	r3
 80124a4:	4b0f      	ldr	r3, [pc, #60]	; (80124e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80124a6:	681b      	ldr	r3, [r3, #0]
 80124a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80124ac:	b10a      	cbz	r2, 80124b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80124ae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80124b0:	b900      	cbnz	r0, 80124b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80124b2:	6898      	ldr	r0, [r3, #8]
 80124b4:	6801      	ldr	r1, [r0, #0]
 80124b6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80124ba:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80124be:	2501      	movs	r5, #1
 80124c0:	9502      	str	r5, [sp, #8]
 80124c2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80124c6:	9401      	str	r4, [sp, #4]
 80124c8:	ac06      	add	r4, sp, #24
 80124ca:	9400      	str	r4, [sp, #0]
 80124cc:	688c      	ldr	r4, [r1, #8]
 80124ce:	a905      	add	r1, sp, #20
 80124d0:	47a0      	blx	r4
 80124d2:	b00a      	add	sp, #40	; 0x28
 80124d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124d8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80124da:	e797      	b.n	801240c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80124dc:	2300      	movs	r3, #0
 80124de:	9307      	str	r3, [sp, #28]
 80124e0:	e7ca      	b.n	8012478 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80124e2:	bf00      	nop
 80124e4:	20012e5c 	.word	0x20012e5c

080124e8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80124e8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80124ec:	b12a      	cbz	r2, 80124fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80124ee:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80124f2:	b112      	cbz	r2, 80124fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80124f4:	6803      	ldr	r3, [r0, #0]
 80124f6:	695b      	ldr	r3, [r3, #20]
 80124f8:	4718      	bx	r3
 80124fa:	4770      	bx	lr

080124fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80124fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012500:	4b2f      	ldr	r3, [pc, #188]	; (80125c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012502:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012504:	881b      	ldrh	r3, [r3, #0]
 8012506:	4293      	cmp	r3, r2
 8012508:	b08d      	sub	sp, #52	; 0x34
 801250a:	4604      	mov	r4, r0
 801250c:	460f      	mov	r7, r1
 801250e:	d954      	bls.n	80125ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012510:	4b2c      	ldr	r3, [pc, #176]	; (80125c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012512:	6819      	ldr	r1, [r3, #0]
 8012514:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012518:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801251c:	4a2a      	ldr	r2, [pc, #168]	; (80125c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801251e:	6812      	ldr	r2, [r2, #0]
 8012520:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012524:	2900      	cmp	r1, #0
 8012526:	d048      	beq.n	80125ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012528:	785a      	ldrb	r2, [r3, #1]
 801252a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801252e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012532:	4b26      	ldr	r3, [pc, #152]	; (80125cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012534:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012538:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801253c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012540:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012542:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012546:	9107      	str	r1, [sp, #28]
 8012548:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801254c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012550:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012554:	681a      	ldr	r2, [r3, #0]
 8012556:	f88d 8020 	strb.w	r8, [sp, #32]
 801255a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801255e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012562:	9609      	str	r6, [sp, #36]	; 0x24
 8012564:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012568:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801256c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012570:	b10b      	cbz	r3, 8012576 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012572:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012574:	b905      	cbnz	r5, 8012578 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012576:	6895      	ldr	r5, [r2, #8]
 8012578:	ae05      	add	r6, sp, #20
 801257a:	4621      	mov	r1, r4
 801257c:	4630      	mov	r0, r6
 801257e:	f003 ff7b 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012582:	4b13      	ldr	r3, [pc, #76]	; (80125d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012584:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012586:	6818      	ldr	r0, [r3, #0]
 8012588:	f7f5 fe12 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 801258c:	6823      	ldr	r3, [r4, #0]
 801258e:	4680      	mov	r8, r0
 8012590:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012592:	4620      	mov	r0, r4
 8012594:	4798      	blx	r3
 8012596:	6823      	ldr	r3, [r4, #0]
 8012598:	4681      	mov	r9, r0
 801259a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801259e:	4620      	mov	r0, r4
 80125a0:	4798      	blx	r3
 80125a2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80125a6:	ab07      	add	r3, sp, #28
 80125a8:	9300      	str	r3, [sp, #0]
 80125aa:	f8cd 8004 	str.w	r8, [sp, #4]
 80125ae:	463b      	mov	r3, r7
 80125b0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80125b4:	4628      	mov	r0, r5
 80125b6:	f7f5 fdad 	bl	8008114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80125ba:	b00d      	add	sp, #52	; 0x34
 80125bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80125c0:	20012eb8 	.word	0x20012eb8
 80125c4:	20012eb4 	.word	0x20012eb4
 80125c8:	20012ebc 	.word	0x20012ebc
 80125cc:	20012e5c 	.word	0x20012e5c
 80125d0:	20012ec0 	.word	0x20012ec0

080125d4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80125d4:	4770      	bx	lr

080125d6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80125d6:	4770      	bx	lr

080125d8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80125d8:	b510      	push	{r4, lr}
 80125da:	213c      	movs	r1, #60	; 0x3c
 80125dc:	4604      	mov	r4, r0
 80125de:	f016 fe3e 	bl	802925e <_ZdlPvj>
 80125e2:	4620      	mov	r0, r4
 80125e4:	bd10      	pop	{r4, pc}

080125e6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80125e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125ea:	461c      	mov	r4, r3
 80125ec:	4606      	mov	r6, r0
 80125ee:	9f06      	ldr	r7, [sp, #24]
 80125f0:	f7ff febf 	bl	8012372 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80125f4:	8823      	ldrh	r3, [r4, #0]
 80125f6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80125f8:	883b      	ldrh	r3, [r7, #0]
 80125fa:	86f3      	strh	r3, [r6, #54]	; 0x36
 80125fc:	4638      	mov	r0, r7
 80125fe:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012602:	f006 f9c7 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012606:	f04f 0802 	mov.w	r8, #2
 801260a:	fb95 f5f8 	sdiv	r5, r5, r8
 801260e:	b2ad      	uxth	r5, r5
 8012610:	fb90 f0f8 	sdiv	r0, r0, r8
 8012614:	1a2d      	subs	r5, r5, r0
 8012616:	8735      	strh	r5, [r6, #56]	; 0x38
 8012618:	4638      	mov	r0, r7
 801261a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801261e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012622:	f006 f9eb 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012626:	b2a4      	uxth	r4, r4
 8012628:	fb90 f0f8 	sdiv	r0, r0, r8
 801262c:	1a24      	subs	r4, r4, r0
 801262e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012634 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012638:	4604      	mov	r4, r0
 801263a:	b08c      	sub	sp, #48	; 0x30
 801263c:	460d      	mov	r5, r1
 801263e:	f7ff fedb 	bl	80123f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012642:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012646:	2b00      	cmp	r3, #0
 8012648:	d05d      	beq.n	8012706 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801264a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801264c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012650:	a805      	add	r0, sp, #20
 8012652:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012656:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801265a:	f006 f99b 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801265e:	4606      	mov	r6, r0
 8012660:	a805      	add	r0, sp, #20
 8012662:	f006 f9cb 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012666:	6869      	ldr	r1, [r5, #4]
 8012668:	f8ad 001e 	strh.w	r0, [sp, #30]
 801266c:	6828      	ldr	r0, [r5, #0]
 801266e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012672:	ab08      	add	r3, sp, #32
 8012674:	ad08      	add	r5, sp, #32
 8012676:	c303      	stmia	r3!, {r0, r1}
 8012678:	a906      	add	r1, sp, #24
 801267a:	4628      	mov	r0, r5
 801267c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012680:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012684:	f7fd fc62 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8012688:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801268c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012690:	429a      	cmp	r2, r3
 8012692:	d035      	beq.n	8012700 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012694:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012698:	2b00      	cmp	r3, #0
 801269a:	dd31      	ble.n	8012700 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801269c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80126a0:	2b00      	cmp	r3, #0
 80126a2:	dd2d      	ble.n	8012700 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80126a4:	2300      	movs	r3, #0
 80126a6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80126aa:	6823      	ldr	r3, [r4, #0]
 80126ac:	a90a      	add	r1, sp, #40	; 0x28
 80126ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126b0:	4620      	mov	r0, r4
 80126b2:	4798      	blx	r3
 80126b4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80126b8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80126ba:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80126be:	1a9b      	subs	r3, r3, r2
 80126c0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80126c4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80126c6:	1ac9      	subs	r1, r1, r3
 80126c8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80126cc:	490f      	ldr	r1, [pc, #60]	; (801270c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80126ce:	6809      	ldr	r1, [r1, #0]
 80126d0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80126d4:	b108      	cbz	r0, 80126da <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80126d6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80126d8:	b900      	cbnz	r0, 80126dc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80126da:	6888      	ldr	r0, [r1, #8]
 80126dc:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80126e0:	440b      	add	r3, r1
 80126e2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80126e6:	2601      	movs	r6, #1
 80126e8:	440a      	add	r2, r1
 80126ea:	6801      	ldr	r1, [r0, #0]
 80126ec:	9602      	str	r6, [sp, #8]
 80126ee:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80126f2:	e9cd 5400 	strd	r5, r4, [sp]
 80126f6:	b21b      	sxth	r3, r3
 80126f8:	688c      	ldr	r4, [r1, #8]
 80126fa:	b212      	sxth	r2, r2
 80126fc:	a905      	add	r1, sp, #20
 80126fe:	47a0      	blx	r4
 8012700:	b00c      	add	sp, #48	; 0x30
 8012702:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012706:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012708:	e7a0      	b.n	801264c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801270a:	bf00      	nop
 801270c:	20012e5c 	.word	0x20012e5c

08012710 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012710:	b510      	push	{r4, lr}
 8012712:	2101      	movs	r1, #1
 8012714:	2200      	movs	r2, #0
 8012716:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801271a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801271e:	4c0e      	ldr	r4, [pc, #56]	; (8012758 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012720:	8082      	strh	r2, [r0, #4]
 8012722:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012726:	80c2      	strh	r2, [r0, #6]
 8012728:	8102      	strh	r2, [r0, #8]
 801272a:	8142      	strh	r2, [r0, #10]
 801272c:	8182      	strh	r2, [r0, #12]
 801272e:	81c2      	strh	r2, [r0, #14]
 8012730:	8202      	strh	r2, [r0, #16]
 8012732:	8242      	strh	r2, [r0, #18]
 8012734:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012738:	61c2      	str	r2, [r0, #28]
 801273a:	8402      	strh	r2, [r0, #32]
 801273c:	8442      	strh	r2, [r0, #34]	; 0x22
 801273e:	6282      	str	r2, [r0, #40]	; 0x28
 8012740:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012744:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012746:	8601      	strh	r1, [r0, #48]	; 0x30
 8012748:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801274c:	6004      	str	r4, [r0, #0]
 801274e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012750:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012752:	8702      	strh	r2, [r0, #56]	; 0x38
 8012754:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012756:	bd10      	pop	{r4, pc}
 8012758:	0802e4f8 	.word	0x0802e4f8

0801275c <_ZN8touchgfx5ImageD1Ev>:
 801275c:	4770      	bx	lr

0801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801275e:	b570      	push	{r4, r5, r6, lr}
 8012760:	880b      	ldrh	r3, [r1, #0]
 8012762:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012764:	4604      	mov	r4, r0
 8012766:	4608      	mov	r0, r1
 8012768:	460d      	mov	r5, r1
 801276a:	f006 f913 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801276e:	4606      	mov	r6, r0
 8012770:	4628      	mov	r0, r5
 8012772:	f006 f943 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012776:	6823      	ldr	r3, [r4, #0]
 8012778:	4605      	mov	r5, r0
 801277a:	4631      	mov	r1, r6
 801277c:	4620      	mov	r0, r4
 801277e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012780:	4798      	blx	r3
 8012782:	6823      	ldr	r3, [r4, #0]
 8012784:	4629      	mov	r1, r5
 8012786:	4620      	mov	r0, r4
 8012788:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801278a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801278e:	4718      	bx	r3

08012790 <_ZN8touchgfx5ImageD0Ev>:
 8012790:	b510      	push	{r4, lr}
 8012792:	212c      	movs	r1, #44	; 0x2c
 8012794:	4604      	mov	r4, r0
 8012796:	f016 fd62 	bl	802925e <_ZdlPvj>
 801279a:	4620      	mov	r0, r4
 801279c:	bd10      	pop	{r4, pc}

0801279e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801279e:	b510      	push	{r4, lr}
 80127a0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80127a4:	2bff      	cmp	r3, #255	; 0xff
 80127a6:	4604      	mov	r4, r0
 80127a8:	d006      	beq.n	80127b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80127aa:	2300      	movs	r3, #0
 80127ac:	8003      	strh	r3, [r0, #0]
 80127ae:	8043      	strh	r3, [r0, #2]
 80127b0:	8083      	strh	r3, [r0, #4]
 80127b2:	80c3      	strh	r3, [r0, #6]
 80127b4:	4620      	mov	r0, r4
 80127b6:	bd10      	pop	{r4, pc}
 80127b8:	3126      	adds	r1, #38	; 0x26
 80127ba:	f006 f953 	bl	8018a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80127be:	e7f9      	b.n	80127b4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080127c0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80127c0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80127c4:	b12a      	cbz	r2, 80127d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80127c6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80127ca:	b112      	cbz	r2, 80127d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80127cc:	6803      	ldr	r3, [r0, #0]
 80127ce:	695b      	ldr	r3, [r3, #20]
 80127d0:	4718      	bx	r3
 80127d2:	4770      	bx	lr

080127d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80127d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127d8:	4604      	mov	r4, r0
 80127da:	b088      	sub	sp, #32
 80127dc:	f854 3b26 	ldr.w	r3, [r4], #38
 80127e0:	2500      	movs	r5, #0
 80127e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127e4:	460f      	mov	r7, r1
 80127e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80127ea:	a904      	add	r1, sp, #16
 80127ec:	4606      	mov	r6, r0
 80127ee:	4798      	blx	r3
 80127f0:	4620      	mov	r0, r4
 80127f2:	f006 f8cf 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80127f6:	4680      	mov	r8, r0
 80127f8:	4620      	mov	r0, r4
 80127fa:	f006 f8ff 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80127fe:	9506      	str	r5, [sp, #24]
 8012800:	ad06      	add	r5, sp, #24
 8012802:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012806:	4639      	mov	r1, r7
 8012808:	4628      	mov	r0, r5
 801280a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801280e:	f7fd fb9d 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8012812:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012816:	2b00      	cmp	r3, #0
 8012818:	dd19      	ble.n	801284e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801281a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801281e:	2b00      	cmp	r3, #0
 8012820:	dd15      	ble.n	801284e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012822:	4b0c      	ldr	r3, [pc, #48]	; (8012854 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012824:	681b      	ldr	r3, [r3, #0]
 8012826:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801282a:	b10a      	cbz	r2, 8012830 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801282c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801282e:	b900      	cbnz	r0, 8012832 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012830:	6898      	ldr	r0, [r3, #8]
 8012832:	6801      	ldr	r1, [r0, #0]
 8012834:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012838:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801283c:	2701      	movs	r7, #1
 801283e:	9702      	str	r7, [sp, #8]
 8012840:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012844:	e9cd 5600 	strd	r5, r6, [sp]
 8012848:	688d      	ldr	r5, [r1, #8]
 801284a:	4621      	mov	r1, r4
 801284c:	47a8      	blx	r5
 801284e:	b008      	add	sp, #32
 8012850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012854:	20012e5c 	.word	0x20012e5c

08012858 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012858:	4770      	bx	lr

0801285a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801285a:	b510      	push	{r4, lr}
 801285c:	2148      	movs	r1, #72	; 0x48
 801285e:	4604      	mov	r4, r0
 8012860:	f016 fcfd 	bl	802925e <_ZdlPvj>
 8012864:	4620      	mov	r0, r4
 8012866:	bd10      	pop	{r4, pc}

08012868 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801286c:	b08d      	sub	sp, #52	; 0x34
 801286e:	4604      	mov	r4, r0
 8012870:	460f      	mov	r7, r1
 8012872:	f7ff fdc1 	bl	80123f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012876:	4a55      	ldr	r2, [pc, #340]	; (80129cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012878:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801287a:	8812      	ldrh	r2, [r2, #0]
 801287c:	429a      	cmp	r2, r3
 801287e:	f240 8082 	bls.w	8012986 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012882:	4d53      	ldr	r5, [pc, #332]	; (80129d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012884:	682a      	ldr	r2, [r5, #0]
 8012886:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801288a:	4b52      	ldr	r3, [pc, #328]	; (80129d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801288c:	681b      	ldr	r3, [r3, #0]
 801288e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012892:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012896:	2200      	movs	r2, #0
 8012898:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801289c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80128a0:	2a03      	cmp	r2, #3
 80128a2:	d811      	bhi.n	80128c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80128a4:	e8df f002 	tbb	[pc, r2]
 80128a8:	89727902 	.word	0x89727902
 80128ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80128b0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80128b4:	1ad2      	subs	r2, r2, r3
 80128b6:	2002      	movs	r0, #2
 80128b8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80128bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80128c0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80128c4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80128c8:	f10d 080c 	add.w	r8, sp, #12
 80128cc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80128d0:	f10d 0914 	add.w	r9, sp, #20
 80128d4:	e889 0003 	stmia.w	r9, {r0, r1}
 80128d8:	4639      	mov	r1, r7
 80128da:	4648      	mov	r0, r9
 80128dc:	f7fd fb36 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 80128e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	dd4e      	ble.n	8012986 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80128e8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80128ec:	2b00      	cmp	r3, #0
 80128ee:	dd4a      	ble.n	8012986 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80128f0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80128f4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80128f8:	1a9b      	subs	r3, r3, r2
 80128fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80128fe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012902:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012906:	1a9b      	subs	r3, r3, r2
 8012908:	f8ad 3016 	strh.w	r3, [sp, #22]
 801290c:	6823      	ldr	r3, [r4, #0]
 801290e:	4641      	mov	r1, r8
 8012910:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012912:	4620      	mov	r0, r4
 8012914:	4798      	blx	r3
 8012916:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801291a:	2b00      	cmp	r3, #0
 801291c:	d053      	beq.n	80129c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801291e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012920:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012922:	682b      	ldr	r3, [r5, #0]
 8012924:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012928:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801292c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012930:	785b      	ldrb	r3, [r3, #1]
 8012932:	9209      	str	r2, [sp, #36]	; 0x24
 8012934:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012938:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801293c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012940:	2300      	movs	r3, #0
 8012942:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012946:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801294a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801294e:	4b22      	ldr	r3, [pc, #136]	; (80129d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012950:	9607      	str	r6, [sp, #28]
 8012952:	681b      	ldr	r3, [r3, #0]
 8012954:	f88d 5020 	strb.w	r5, [sp, #32]
 8012958:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801295c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012960:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012964:	b10a      	cbz	r2, 801296a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012966:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012968:	b904      	cbnz	r4, 801296c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801296a:	689c      	ldr	r4, [r3, #8]
 801296c:	4b1b      	ldr	r3, [pc, #108]	; (80129dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801296e:	6818      	ldr	r0, [r3, #0]
 8012970:	f7f5 fc1e 	bl	80081b0 <_ZNK8touchgfx5Texts7getTextEt>
 8012974:	ab07      	add	r3, sp, #28
 8012976:	9001      	str	r0, [sp, #4]
 8012978:	9300      	str	r3, [sp, #0]
 801297a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801297e:	464b      	mov	r3, r9
 8012980:	4620      	mov	r0, r4
 8012982:	f7f5 fbc7 	bl	8008114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012986:	b00d      	add	sp, #52	; 0x34
 8012988:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801298c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012990:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012994:	1ad2      	subs	r2, r2, r3
 8012996:	3201      	adds	r2, #1
 8012998:	e78d      	b.n	80128b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801299a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801299e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80129a2:	1ad2      	subs	r2, r2, r3
 80129a4:	3201      	adds	r2, #1
 80129a6:	2002      	movs	r0, #2
 80129a8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80129ac:	fb92 f2f0 	sdiv	r2, r2, r0
 80129b0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80129b4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80129b8:	e786      	b.n	80128c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80129ba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80129be:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80129c2:	1ad2      	subs	r2, r2, r3
 80129c4:	e7ef      	b.n	80129a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80129c6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80129c8:	e7aa      	b.n	8012920 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80129ca:	bf00      	nop
 80129cc:	20012eb8 	.word	0x20012eb8
 80129d0:	20012eb4 	.word	0x20012eb4
 80129d4:	20012ebc 	.word	0x20012ebc
 80129d8:	20012e5c 	.word	0x20012e5c
 80129dc:	20012ec0 	.word	0x20012ec0

080129e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80129e0:	b510      	push	{r4, lr}
 80129e2:	2101      	movs	r1, #1
 80129e4:	4c13      	ldr	r4, [pc, #76]	; (8012a34 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80129e6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80129ea:	2200      	movs	r2, #0
 80129ec:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80129f0:	6004      	str	r4, [r0, #0]
 80129f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80129f6:	4c10      	ldr	r4, [pc, #64]	; (8012a38 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80129f8:	8082      	strh	r2, [r0, #4]
 80129fa:	80c2      	strh	r2, [r0, #6]
 80129fc:	8102      	strh	r2, [r0, #8]
 80129fe:	8142      	strh	r2, [r0, #10]
 8012a00:	8182      	strh	r2, [r0, #12]
 8012a02:	81c2      	strh	r2, [r0, #14]
 8012a04:	8202      	strh	r2, [r0, #16]
 8012a06:	8242      	strh	r2, [r0, #18]
 8012a08:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012a0c:	61c2      	str	r2, [r0, #28]
 8012a0e:	8402      	strh	r2, [r0, #32]
 8012a10:	8442      	strh	r2, [r0, #34]	; 0x22
 8012a12:	6282      	str	r2, [r0, #40]	; 0x28
 8012a14:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012a18:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012a1a:	8601      	strh	r1, [r0, #48]	; 0x30
 8012a1c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012a20:	6344      	str	r4, [r0, #52]	; 0x34
 8012a22:	8701      	strh	r1, [r0, #56]	; 0x38
 8012a24:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012a28:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012a2c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012a30:	bd10      	pop	{r4, pc}
 8012a32:	bf00      	nop
 8012a34:	0802e5dc 	.word	0x0802e5dc
 8012a38:	0802ba28 	.word	0x0802ba28

08012a3c <_ZN8touchgfx7OutlineD1Ev>:
 8012a3c:	4770      	bx	lr

08012a3e <_ZN8touchgfx7OutlineD0Ev>:
 8012a3e:	b510      	push	{r4, lr}
 8012a40:	2130      	movs	r1, #48	; 0x30
 8012a42:	4604      	mov	r4, r0
 8012a44:	f016 fc0b 	bl	802925e <_ZdlPvj>
 8012a48:	4620      	mov	r0, r4
 8012a4a:	bd10      	pop	{r4, pc}

08012a4c <_ZN8touchgfx7Outline5resetEv>:
 8012a4c:	b510      	push	{r4, lr}
 8012a4e:	4604      	mov	r4, r0
 8012a50:	f000 fe96 	bl	8013780 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012a54:	60e0      	str	r0, [r4, #12]
 8012a56:	f000 fe99 	bl	801378c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012a5a:	68e3      	ldr	r3, [r4, #12]
 8012a5c:	6123      	str	r3, [r4, #16]
 8012a5e:	08c0      	lsrs	r0, r0, #3
 8012a60:	2200      	movs	r2, #0
 8012a62:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012a66:	3801      	subs	r0, #1
 8012a68:	6060      	str	r0, [r4, #4]
 8012a6a:	60a2      	str	r2, [r4, #8]
 8012a6c:	8019      	strh	r1, [r3, #0]
 8012a6e:	8059      	strh	r1, [r3, #2]
 8012a70:	809a      	strh	r2, [r3, #4]
 8012a72:	80da      	strh	r2, [r3, #6]
 8012a74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012a76:	f023 0301 	bic.w	r3, r3, #1
 8012a7a:	f043 0302 	orr.w	r3, r3, #2
 8012a7e:	6263      	str	r3, [r4, #36]	; 0x24
 8012a80:	bd10      	pop	{r4, pc}
	...

08012a84 <_ZN8touchgfx7OutlineC1Ev>:
 8012a84:	b510      	push	{r4, lr}
 8012a86:	4b0a      	ldr	r3, [pc, #40]	; (8012ab0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012a88:	6003      	str	r3, [r0, #0]
 8012a8a:	2300      	movs	r3, #0
 8012a8c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012a90:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012a94:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012a98:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012a9c:	6243      	str	r3, [r0, #36]	; 0x24
 8012a9e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012aa2:	4604      	mov	r4, r0
 8012aa4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012aa8:	f7ff ffd0 	bl	8012a4c <_ZN8touchgfx7Outline5resetEv>
 8012aac:	4620      	mov	r0, r4
 8012aae:	bd10      	pop	{r4, pc}
 8012ab0:	0802e650 	.word	0x0802e650

08012ab4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ab8:	b093      	sub	sp, #76	; 0x4c
 8012aba:	1156      	asrs	r6, r2, #5
 8012abc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012abe:	9305      	str	r3, [sp, #20]
 8012ac0:	f004 051f 	and.w	r5, r4, #31
 8012ac4:	1153      	asrs	r3, r2, #5
 8012ac6:	9504      	str	r5, [sp, #16]
 8012ac8:	1165      	asrs	r5, r4, #5
 8012aca:	9303      	str	r3, [sp, #12]
 8012acc:	42ae      	cmp	r6, r5
 8012ace:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012ad2:	9306      	str	r3, [sp, #24]
 8012ad4:	f002 031f 	and.w	r3, r2, #31
 8012ad8:	f040 80f8 	bne.w	8012ccc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012adc:	9c04      	ldr	r4, [sp, #16]
 8012ade:	9a05      	ldr	r2, [sp, #20]
 8012ae0:	42a3      	cmp	r3, r4
 8012ae2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012ae6:	6902      	ldr	r2, [r0, #16]
 8012ae8:	d125      	bne.n	8012b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012aea:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012aee:	459e      	cmp	lr, r3
 8012af0:	d103      	bne.n	8012afa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012af2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012af6:	429e      	cmp	r6, r3
 8012af8:	d035      	beq.n	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012afa:	88d1      	ldrh	r1, [r2, #6]
 8012afc:	8893      	ldrh	r3, [r2, #4]
 8012afe:	430b      	orrs	r3, r1
 8012b00:	d010      	beq.n	8012b24 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012b02:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012b06:	2b00      	cmp	r3, #0
 8012b08:	db0c      	blt.n	8012b24 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012b0a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012b0c:	428b      	cmp	r3, r1
 8012b0e:	da09      	bge.n	8012b24 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012b10:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012b14:	428b      	cmp	r3, r1
 8012b16:	bf38      	it	cc
 8012b18:	3208      	addcc	r2, #8
 8012b1a:	f103 0301 	add.w	r3, r3, #1
 8012b1e:	bf38      	it	cc
 8012b20:	6102      	strcc	r2, [r0, #16]
 8012b22:	6083      	str	r3, [r0, #8]
 8012b24:	6903      	ldr	r3, [r0, #16]
 8012b26:	9a03      	ldr	r2, [sp, #12]
 8012b28:	f8a3 e000 	strh.w	lr, [r3]
 8012b2c:	805a      	strh	r2, [r3, #2]
 8012b2e:	2200      	movs	r2, #0
 8012b30:	809a      	strh	r2, [r3, #4]
 8012b32:	80da      	strh	r2, [r3, #6]
 8012b34:	e017      	b.n	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012b36:	9c05      	ldr	r4, [sp, #20]
 8012b38:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012b3c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012b40:	f004 041f 	and.w	r4, r4, #31
 8012b44:	114e      	asrs	r6, r1, #5
 8012b46:	9402      	str	r4, [sp, #8]
 8012b48:	9c04      	ldr	r4, [sp, #16]
 8012b4a:	4576      	cmp	r6, lr
 8012b4c:	f001 0c1f 	and.w	ip, r1, #31
 8012b50:	eba4 0403 	sub.w	r4, r4, r3
 8012b54:	d10a      	bne.n	8012b6c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012b56:	9b02      	ldr	r3, [sp, #8]
 8012b58:	449c      	add	ip, r3
 8012b5a:	44a0      	add	r8, r4
 8012b5c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012b60:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012b64:	80d4      	strh	r4, [r2, #6]
 8012b66:	b013      	add	sp, #76	; 0x4c
 8012b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b6c:	9d05      	ldr	r5, [sp, #20]
 8012b6e:	1a69      	subs	r1, r5, r1
 8012b70:	bf5b      	ittet	pl
 8012b72:	f1cc 0520 	rsbpl	r5, ip, #32
 8012b76:	436c      	mulpl	r4, r5
 8012b78:	2500      	movmi	r5, #0
 8012b7a:	2520      	movpl	r5, #32
 8012b7c:	bf44      	itt	mi
 8012b7e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012b82:	4249      	negmi	r1, r1
 8012b84:	9501      	str	r5, [sp, #4]
 8012b86:	9f01      	ldr	r7, [sp, #4]
 8012b88:	fb94 f5f1 	sdiv	r5, r4, r1
 8012b8c:	fb01 4415 	mls	r4, r1, r5, r4
 8012b90:	bf54      	ite	pl
 8012b92:	f04f 0901 	movpl.w	r9, #1
 8012b96:	f04f 39ff 	movmi.w	r9, #4294967295
 8012b9a:	2c00      	cmp	r4, #0
 8012b9c:	bfb8      	it	lt
 8012b9e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012ba2:	44bc      	add	ip, r7
 8012ba4:	44a8      	add	r8, r5
 8012ba6:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012baa:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012bae:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012bb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012bb6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012bba:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012bbe:	bfb8      	it	lt
 8012bc0:	1864      	addlt	r4, r4, r1
 8012bc2:	ea58 0202 	orrs.w	r2, r8, r2
 8012bc6:	444e      	add	r6, r9
 8012bc8:	d011      	beq.n	8012bee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012bca:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012bce:	f1b8 0f00 	cmp.w	r8, #0
 8012bd2:	db0c      	blt.n	8012bee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012bd4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012bd6:	4590      	cmp	r8, r2
 8012bd8:	da09      	bge.n	8012bee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012bda:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012bde:	4590      	cmp	r8, r2
 8012be0:	bf3c      	itt	cc
 8012be2:	f10c 0208 	addcc.w	r2, ip, #8
 8012be6:	6102      	strcc	r2, [r0, #16]
 8012be8:	f108 0201 	add.w	r2, r8, #1
 8012bec:	6082      	str	r2, [r0, #8]
 8012bee:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012bf2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012bf6:	f8ac 6000 	strh.w	r6, [ip]
 8012bfa:	2700      	movs	r7, #0
 8012bfc:	45b6      	cmp	lr, r6
 8012bfe:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012c02:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012c06:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012c0a:	442b      	add	r3, r5
 8012c0c:	d04d      	beq.n	8012caa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012c0e:	9f04      	ldr	r7, [sp, #16]
 8012c10:	1aff      	subs	r7, r7, r3
 8012c12:	443d      	add	r5, r7
 8012c14:	016d      	lsls	r5, r5, #5
 8012c16:	fb95 f8f1 	sdiv	r8, r5, r1
 8012c1a:	fb01 5518 	mls	r5, r1, r8, r5
 8012c1e:	2d00      	cmp	r5, #0
 8012c20:	bfb8      	it	lt
 8012c22:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012c26:	f108 0701 	add.w	r7, r8, #1
 8012c2a:	bfb8      	it	lt
 8012c2c:	186d      	addlt	r5, r5, r1
 8012c2e:	1a64      	subs	r4, r4, r1
 8012c30:	9703      	str	r7, [sp, #12]
 8012c32:	f04f 0a00 	mov.w	sl, #0
 8012c36:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012c3a:	1964      	adds	r4, r4, r5
 8012c3c:	bf58      	it	pl
 8012c3e:	9f03      	ldrpl	r7, [sp, #12]
 8012c40:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012c44:	bf48      	it	mi
 8012c46:	4647      	movmi	r7, r8
 8012c48:	44bb      	add	fp, r7
 8012c4a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012c4e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012c52:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012c56:	f8ac b006 	strh.w	fp, [ip, #6]
 8012c5a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012c5e:	443b      	add	r3, r7
 8012c60:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012c64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012c68:	bf58      	it	pl
 8012c6a:	1a64      	subpl	r4, r4, r1
 8012c6c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012c70:	444e      	add	r6, r9
 8012c72:	d011      	beq.n	8012c98 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012c74:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012c78:	f1bb 0f00 	cmp.w	fp, #0
 8012c7c:	db0c      	blt.n	8012c98 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012c7e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c80:	45bb      	cmp	fp, r7
 8012c82:	da09      	bge.n	8012c98 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012c84:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012c88:	45bb      	cmp	fp, r7
 8012c8a:	bf3c      	itt	cc
 8012c8c:	f10c 0708 	addcc.w	r7, ip, #8
 8012c90:	6107      	strcc	r7, [r0, #16]
 8012c92:	f10b 0701 	add.w	r7, fp, #1
 8012c96:	6087      	str	r7, [r0, #8]
 8012c98:	6907      	ldr	r7, [r0, #16]
 8012c9a:	45b6      	cmp	lr, r6
 8012c9c:	803e      	strh	r6, [r7, #0]
 8012c9e:	807a      	strh	r2, [r7, #2]
 8012ca0:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012ca4:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012ca8:	d1c5      	bne.n	8012c36 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012caa:	9a04      	ldr	r2, [sp, #16]
 8012cac:	1ad3      	subs	r3, r2, r3
 8012cae:	6902      	ldr	r2, [r0, #16]
 8012cb0:	8891      	ldrh	r1, [r2, #4]
 8012cb2:	88d6      	ldrh	r6, [r2, #6]
 8012cb4:	4419      	add	r1, r3
 8012cb6:	8091      	strh	r1, [r2, #4]
 8012cb8:	9902      	ldr	r1, [sp, #8]
 8012cba:	f101 0c20 	add.w	ip, r1, #32
 8012cbe:	9901      	ldr	r1, [sp, #4]
 8012cc0:	ebac 0c01 	sub.w	ip, ip, r1
 8012cc4:	fb03 630c 	mla	r3, r3, ip, r6
 8012cc8:	80d3      	strh	r3, [r2, #6]
 8012cca:	e74c      	b.n	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ccc:	9d05      	ldr	r5, [sp, #20]
 8012cce:	1aa2      	subs	r2, r4, r2
 8012cd0:	eba5 0501 	sub.w	r5, r5, r1
 8012cd4:	9508      	str	r5, [sp, #32]
 8012cd6:	9202      	str	r2, [sp, #8]
 8012cd8:	f140 8128 	bpl.w	8012f2c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012cdc:	9a03      	ldr	r2, [sp, #12]
 8012cde:	2a00      	cmp	r2, #0
 8012ce0:	f6ff af41 	blt.w	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ce4:	9a02      	ldr	r2, [sp, #8]
 8012ce6:	4252      	negs	r2, r2
 8012ce8:	9202      	str	r2, [sp, #8]
 8012cea:	9a06      	ldr	r2, [sp, #24]
 8012cec:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012cf0:	f04f 34ff 	mov.w	r4, #4294967295
 8012cf4:	9206      	str	r2, [sp, #24]
 8012cf6:	462a      	mov	r2, r5
 8012cf8:	940b      	str	r4, [sp, #44]	; 0x2c
 8012cfa:	435a      	muls	r2, r3
 8012cfc:	2400      	movs	r4, #0
 8012cfe:	9d02      	ldr	r5, [sp, #8]
 8012d00:	9401      	str	r4, [sp, #4]
 8012d02:	9c02      	ldr	r4, [sp, #8]
 8012d04:	fb92 f4f4 	sdiv	r4, r2, r4
 8012d08:	fb05 2214 	mls	r2, r5, r4, r2
 8012d0c:	2a00      	cmp	r2, #0
 8012d0e:	9207      	str	r2, [sp, #28]
 8012d10:	bfbc      	itt	lt
 8012d12:	1952      	addlt	r2, r2, r5
 8012d14:	9207      	strlt	r2, [sp, #28]
 8012d16:	9a01      	ldr	r2, [sp, #4]
 8012d18:	6905      	ldr	r5, [r0, #16]
 8012d1a:	bfb8      	it	lt
 8012d1c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012d20:	eb04 0901 	add.w	r9, r4, r1
 8012d24:	429a      	cmp	r2, r3
 8012d26:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012d2a:	f040 8112 	bne.w	8012f52 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012d2e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012d32:	429e      	cmp	r6, r3
 8012d34:	d104      	bne.n	8012d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012d36:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012d3a:	9a03      	ldr	r2, [sp, #12]
 8012d3c:	429a      	cmp	r2, r3
 8012d3e:	d01b      	beq.n	8012d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012d40:	88ea      	ldrh	r2, [r5, #6]
 8012d42:	88ab      	ldrh	r3, [r5, #4]
 8012d44:	4313      	orrs	r3, r2
 8012d46:	d010      	beq.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012d48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012d4c:	2a00      	cmp	r2, #0
 8012d4e:	db0c      	blt.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012d50:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012d52:	429a      	cmp	r2, r3
 8012d54:	da09      	bge.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012d56:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012d5a:	429a      	cmp	r2, r3
 8012d5c:	bf38      	it	cc
 8012d5e:	3508      	addcc	r5, #8
 8012d60:	f102 0201 	add.w	r2, r2, #1
 8012d64:	bf38      	it	cc
 8012d66:	6105      	strcc	r5, [r0, #16]
 8012d68:	6082      	str	r2, [r0, #8]
 8012d6a:	6903      	ldr	r3, [r0, #16]
 8012d6c:	9a03      	ldr	r2, [sp, #12]
 8012d6e:	805a      	strh	r2, [r3, #2]
 8012d70:	2200      	movs	r2, #0
 8012d72:	801e      	strh	r6, [r3, #0]
 8012d74:	809a      	strh	r2, [r3, #4]
 8012d76:	80da      	strh	r2, [r3, #6]
 8012d78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012d7a:	9a03      	ldr	r2, [sp, #12]
 8012d7c:	6901      	ldr	r1, [r0, #16]
 8012d7e:	441a      	add	r2, r3
 8012d80:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012d84:	42b3      	cmp	r3, r6
 8012d86:	d103      	bne.n	8012d90 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012d88:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012d8c:	429a      	cmp	r2, r3
 8012d8e:	d01a      	beq.n	8012dc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012d90:	88cc      	ldrh	r4, [r1, #6]
 8012d92:	888b      	ldrh	r3, [r1, #4]
 8012d94:	4323      	orrs	r3, r4
 8012d96:	d010      	beq.n	8012dba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012d98:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012d9c:	2c00      	cmp	r4, #0
 8012d9e:	db0c      	blt.n	8012dba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012da0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012da2:	429c      	cmp	r4, r3
 8012da4:	da09      	bge.n	8012dba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012da6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012daa:	429c      	cmp	r4, r3
 8012dac:	bf38      	it	cc
 8012dae:	3108      	addcc	r1, #8
 8012db0:	f104 0401 	add.w	r4, r4, #1
 8012db4:	bf38      	it	cc
 8012db6:	6101      	strcc	r1, [r0, #16]
 8012db8:	6084      	str	r4, [r0, #8]
 8012dba:	6903      	ldr	r3, [r0, #16]
 8012dbc:	2100      	movs	r1, #0
 8012dbe:	801e      	strh	r6, [r3, #0]
 8012dc0:	805a      	strh	r2, [r3, #2]
 8012dc2:	8099      	strh	r1, [r3, #4]
 8012dc4:	80d9      	strh	r1, [r3, #6]
 8012dc6:	9b06      	ldr	r3, [sp, #24]
 8012dc8:	4293      	cmp	r3, r2
 8012dca:	f000 8082 	beq.w	8012ed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012dce:	9b08      	ldr	r3, [sp, #32]
 8012dd0:	9c02      	ldr	r4, [sp, #8]
 8012dd2:	9902      	ldr	r1, [sp, #8]
 8012dd4:	015b      	lsls	r3, r3, #5
 8012dd6:	fb93 f1f1 	sdiv	r1, r3, r1
 8012dda:	fb04 3311 	mls	r3, r4, r1, r3
 8012dde:	2b00      	cmp	r3, #0
 8012de0:	9103      	str	r1, [sp, #12]
 8012de2:	9308      	str	r3, [sp, #32]
 8012de4:	da04      	bge.n	8012df0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012de6:	1e4b      	subs	r3, r1, #1
 8012de8:	9303      	str	r3, [sp, #12]
 8012dea:	9b08      	ldr	r3, [sp, #32]
 8012dec:	4423      	add	r3, r4
 8012dee:	9308      	str	r3, [sp, #32]
 8012df0:	9b07      	ldr	r3, [sp, #28]
 8012df2:	9902      	ldr	r1, [sp, #8]
 8012df4:	1a5b      	subs	r3, r3, r1
 8012df6:	9307      	str	r3, [sp, #28]
 8012df8:	9b01      	ldr	r3, [sp, #4]
 8012dfa:	f1c3 0320 	rsb	r3, r3, #32
 8012dfe:	930e      	str	r3, [sp, #56]	; 0x38
 8012e00:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012e02:	9b01      	ldr	r3, [sp, #4]
 8012e04:	1a5b      	subs	r3, r3, r1
 8012e06:	464f      	mov	r7, r9
 8012e08:	930a      	str	r3, [sp, #40]	; 0x28
 8012e0a:	2600      	movs	r6, #0
 8012e0c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012e10:	185b      	adds	r3, r3, r1
 8012e12:	bf58      	it	pl
 8012e14:	9902      	ldrpl	r1, [sp, #8]
 8012e16:	9307      	str	r3, [sp, #28]
 8012e18:	bf5d      	ittte	pl
 8012e1a:	1a5b      	subpl	r3, r3, r1
 8012e1c:	9307      	strpl	r3, [sp, #28]
 8012e1e:	9b03      	ldrpl	r3, [sp, #12]
 8012e20:	9903      	ldrmi	r1, [sp, #12]
 8012e22:	bf58      	it	pl
 8012e24:	1c59      	addpl	r1, r3, #1
 8012e26:	4489      	add	r9, r1
 8012e28:	2a00      	cmp	r2, #0
 8012e2a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012e2e:	db2e      	blt.n	8012e8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e30:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012e32:	4293      	cmp	r3, r2
 8012e34:	dd2b      	ble.n	8012e8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e36:	9c01      	ldr	r4, [sp, #4]
 8012e38:	6905      	ldr	r5, [r0, #16]
 8012e3a:	46a0      	mov	r8, r4
 8012e3c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012e3e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012e42:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012e46:	45a0      	cmp	r8, r4
 8012e48:	f040 814f 	bne.w	80130ea <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012e4c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012e50:	4551      	cmp	r1, sl
 8012e52:	d103      	bne.n	8012e5c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012e54:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012e58:	4291      	cmp	r1, r2
 8012e5a:	d018      	beq.n	8012e8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e5c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012e60:	d00f      	beq.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012e62:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012e66:	2900      	cmp	r1, #0
 8012e68:	db0b      	blt.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012e6a:	428b      	cmp	r3, r1
 8012e6c:	dd09      	ble.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012e6e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012e72:	4299      	cmp	r1, r3
 8012e74:	bf38      	it	cc
 8012e76:	3508      	addcc	r5, #8
 8012e78:	f101 0101 	add.w	r1, r1, #1
 8012e7c:	bf38      	it	cc
 8012e7e:	6105      	strcc	r5, [r0, #16]
 8012e80:	6081      	str	r1, [r0, #8]
 8012e82:	6903      	ldr	r3, [r0, #16]
 8012e84:	f8a3 a000 	strh.w	sl, [r3]
 8012e88:	805a      	strh	r2, [r3, #2]
 8012e8a:	809e      	strh	r6, [r3, #4]
 8012e8c:	80de      	strh	r6, [r3, #6]
 8012e8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012e90:	6901      	ldr	r1, [r0, #16]
 8012e92:	441a      	add	r2, r3
 8012e94:	88cc      	ldrh	r4, [r1, #6]
 8012e96:	888b      	ldrh	r3, [r1, #4]
 8012e98:	4323      	orrs	r3, r4
 8012e9a:	d010      	beq.n	8012ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012e9c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012ea0:	2c00      	cmp	r4, #0
 8012ea2:	db0c      	blt.n	8012ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012ea4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ea6:	429c      	cmp	r4, r3
 8012ea8:	da09      	bge.n	8012ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012eaa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012eae:	429c      	cmp	r4, r3
 8012eb0:	bf38      	it	cc
 8012eb2:	3108      	addcc	r1, #8
 8012eb4:	f104 0401 	add.w	r4, r4, #1
 8012eb8:	bf38      	it	cc
 8012eba:	6101      	strcc	r1, [r0, #16]
 8012ebc:	6084      	str	r4, [r0, #8]
 8012ebe:	6903      	ldr	r3, [r0, #16]
 8012ec0:	f8a3 a000 	strh.w	sl, [r3]
 8012ec4:	805a      	strh	r2, [r3, #2]
 8012ec6:	809e      	strh	r6, [r3, #4]
 8012ec8:	80de      	strh	r6, [r3, #6]
 8012eca:	9b06      	ldr	r3, [sp, #24]
 8012ecc:	4293      	cmp	r3, r2
 8012ece:	464f      	mov	r7, r9
 8012ed0:	d19c      	bne.n	8012e0c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012ed2:	9b01      	ldr	r3, [sp, #4]
 8012ed4:	6907      	ldr	r7, [r0, #16]
 8012ed6:	f1c3 0620 	rsb	r6, r3, #32
 8012eda:	9b05      	ldr	r3, [sp, #20]
 8012edc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012ee0:	9b04      	ldr	r3, [sp, #16]
 8012ee2:	429e      	cmp	r6, r3
 8012ee4:	f040 81cc 	bne.w	8013280 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012ee8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012eec:	459e      	cmp	lr, r3
 8012eee:	d104      	bne.n	8012efa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012ef0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012ef4:	429a      	cmp	r2, r3
 8012ef6:	f43f ae36 	beq.w	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012efa:	88f9      	ldrh	r1, [r7, #6]
 8012efc:	88bb      	ldrh	r3, [r7, #4]
 8012efe:	430b      	orrs	r3, r1
 8012f00:	d010      	beq.n	8012f24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012f02:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012f06:	2b00      	cmp	r3, #0
 8012f08:	db0c      	blt.n	8012f24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012f0a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012f0c:	428b      	cmp	r3, r1
 8012f0e:	da09      	bge.n	8012f24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012f10:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012f14:	428b      	cmp	r3, r1
 8012f16:	bf38      	it	cc
 8012f18:	3708      	addcc	r7, #8
 8012f1a:	f103 0301 	add.w	r3, r3, #1
 8012f1e:	bf38      	it	cc
 8012f20:	6107      	strcc	r7, [r0, #16]
 8012f22:	6083      	str	r3, [r0, #8]
 8012f24:	6903      	ldr	r3, [r0, #16]
 8012f26:	f8a3 e000 	strh.w	lr, [r3]
 8012f2a:	e5ff      	b.n	8012b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012f2c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012f2e:	9c03      	ldr	r4, [sp, #12]
 8012f30:	42a2      	cmp	r2, r4
 8012f32:	f6ff ae18 	blt.w	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012f36:	9c06      	ldr	r4, [sp, #24]
 8012f38:	42a2      	cmp	r2, r4
 8012f3a:	bfb8      	it	lt
 8012f3c:	3201      	addlt	r2, #1
 8012f3e:	9c08      	ldr	r4, [sp, #32]
 8012f40:	bfb8      	it	lt
 8012f42:	9206      	strlt	r2, [sp, #24]
 8012f44:	f1c3 0220 	rsb	r2, r3, #32
 8012f48:	4362      	muls	r2, r4
 8012f4a:	2401      	movs	r4, #1
 8012f4c:	940b      	str	r4, [sp, #44]	; 0x2c
 8012f4e:	2420      	movs	r4, #32
 8012f50:	e6d5      	b.n	8012cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012f52:	f009 021f 	and.w	r2, r9, #31
 8012f56:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012f5a:	920c      	str	r2, [sp, #48]	; 0x30
 8012f5c:	9a01      	ldr	r2, [sp, #4]
 8012f5e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012f62:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012f66:	45b0      	cmp	r8, r6
 8012f68:	f001 011f 	and.w	r1, r1, #31
 8012f6c:	eba2 0203 	sub.w	r2, r2, r3
 8012f70:	d108      	bne.n	8012f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012f72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f74:	4419      	add	r1, r3
 8012f76:	4496      	add	lr, r2
 8012f78:	fb02 a101 	mla	r1, r2, r1, sl
 8012f7c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012f80:	80e9      	strh	r1, [r5, #6]
 8012f82:	e6f9      	b.n	8012d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012f84:	2c00      	cmp	r4, #0
 8012f86:	f2c0 80a9 	blt.w	80130dc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012f8a:	2701      	movs	r7, #1
 8012f8c:	f1c1 0c20 	rsb	ip, r1, #32
 8012f90:	970a      	str	r7, [sp, #40]	; 0x28
 8012f92:	fb02 f20c 	mul.w	r2, r2, ip
 8012f96:	2720      	movs	r7, #32
 8012f98:	9709      	str	r7, [sp, #36]	; 0x24
 8012f9a:	fb92 fcf4 	sdiv	ip, r2, r4
 8012f9e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012fa0:	fb04 221c 	mls	r2, r4, ip, r2
 8012fa4:	2a00      	cmp	r2, #0
 8012fa6:	bfb8      	it	lt
 8012fa8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012fac:	4439      	add	r1, r7
 8012fae:	fb0c a101 	mla	r1, ip, r1, sl
 8012fb2:	80e9      	strh	r1, [r5, #6]
 8012fb4:	44e6      	add	lr, ip
 8012fb6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012fb8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012fbc:	eb08 0501 	add.w	r5, r8, r1
 8012fc0:	6901      	ldr	r1, [r0, #16]
 8012fc2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012fc6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012fca:	bfb8      	it	lt
 8012fcc:	1912      	addlt	r2, r2, r4
 8012fce:	ea58 070e 	orrs.w	r7, r8, lr
 8012fd2:	d010      	beq.n	8012ff6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012fd4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012fd8:	f1be 0f00 	cmp.w	lr, #0
 8012fdc:	db0b      	blt.n	8012ff6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012fde:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012fe0:	45be      	cmp	lr, r7
 8012fe2:	da08      	bge.n	8012ff6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012fe4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012fe8:	45be      	cmp	lr, r7
 8012fea:	bf3c      	itt	cc
 8012fec:	3108      	addcc	r1, #8
 8012fee:	6101      	strcc	r1, [r0, #16]
 8012ff0:	f10e 0101 	add.w	r1, lr, #1
 8012ff4:	6081      	str	r1, [r0, #8]
 8012ff6:	6901      	ldr	r1, [r0, #16]
 8012ff8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012ffc:	800d      	strh	r5, [r1, #0]
 8012ffe:	f04f 0e00 	mov.w	lr, #0
 8013002:	42ae      	cmp	r6, r5
 8013004:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013008:	f8a1 e004 	strh.w	lr, [r1, #4]
 801300c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013010:	4463      	add	r3, ip
 8013012:	d054      	beq.n	80130be <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013014:	9901      	ldr	r1, [sp, #4]
 8013016:	1ac9      	subs	r1, r1, r3
 8013018:	4461      	add	r1, ip
 801301a:	0149      	lsls	r1, r1, #5
 801301c:	fb91 fef4 	sdiv	lr, r1, r4
 8013020:	fb04 111e 	mls	r1, r4, lr, r1
 8013024:	2900      	cmp	r1, #0
 8013026:	bfb8      	it	lt
 8013028:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801302c:	f10e 0701 	add.w	r7, lr, #1
 8013030:	bfb8      	it	lt
 8013032:	1909      	addlt	r1, r1, r4
 8013034:	1b12      	subs	r2, r2, r4
 8013036:	970d      	str	r7, [sp, #52]	; 0x34
 8013038:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801303c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801303e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013042:	1852      	adds	r2, r2, r1
 8013044:	bf54      	ite	pl
 8013046:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801304a:	46f4      	movmi	ip, lr
 801304c:	44e3      	add	fp, ip
 801304e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013052:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013056:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801305a:	f8aa b006 	strh.w	fp, [sl, #6]
 801305e:	4463      	add	r3, ip
 8013060:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013064:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013068:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801306c:	bf58      	it	pl
 801306e:	1b12      	subpl	r2, r2, r4
 8013070:	443d      	add	r5, r7
 8013072:	ea5b 070a 	orrs.w	r7, fp, sl
 8013076:	d014      	beq.n	80130a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013078:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801307c:	f1ba 0f00 	cmp.w	sl, #0
 8013080:	db0f      	blt.n	80130a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013082:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013084:	45ba      	cmp	sl, r7
 8013086:	da0c      	bge.n	80130a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013088:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801308c:	45ba      	cmp	sl, r7
 801308e:	bf38      	it	cc
 8013090:	f10c 0c08 	addcc.w	ip, ip, #8
 8013094:	f10a 0a01 	add.w	sl, sl, #1
 8013098:	bf38      	it	cc
 801309a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801309e:	f8c0 a008 	str.w	sl, [r0, #8]
 80130a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130a6:	f04f 0700 	mov.w	r7, #0
 80130aa:	42ae      	cmp	r6, r5
 80130ac:	f8ac 5000 	strh.w	r5, [ip]
 80130b0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80130b4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80130b8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80130bc:	d1bc      	bne.n	8013038 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80130be:	6904      	ldr	r4, [r0, #16]
 80130c0:	9a01      	ldr	r2, [sp, #4]
 80130c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80130c4:	1ad3      	subs	r3, r2, r3
 80130c6:	88a2      	ldrh	r2, [r4, #4]
 80130c8:	441a      	add	r2, r3
 80130ca:	80a2      	strh	r2, [r4, #4]
 80130cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80130ce:	3120      	adds	r1, #32
 80130d0:	1a89      	subs	r1, r1, r2
 80130d2:	88e2      	ldrh	r2, [r4, #6]
 80130d4:	fb03 2301 	mla	r3, r3, r1, r2
 80130d8:	80e3      	strh	r3, [r4, #6]
 80130da:	e64d      	b.n	8012d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80130dc:	f04f 37ff 	mov.w	r7, #4294967295
 80130e0:	970a      	str	r7, [sp, #40]	; 0x28
 80130e2:	434a      	muls	r2, r1
 80130e4:	4264      	negs	r4, r4
 80130e6:	2700      	movs	r7, #0
 80130e8:	e756      	b.n	8012f98 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80130ea:	ea4f 1867 	mov.w	r8, r7, asr #5
 80130ee:	f009 031f 	and.w	r3, r9, #31
 80130f2:	45d0      	cmp	r8, sl
 80130f4:	f007 071f 	and.w	r7, r7, #31
 80130f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80130fa:	fa1f fc8c 	uxth.w	ip, ip
 80130fe:	fa1f fe8e 	uxth.w	lr, lr
 8013102:	d10a      	bne.n	801311a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013104:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013106:	449c      	add	ip, r3
 8013108:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801310a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801310e:	441f      	add	r7, r3
 8013110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013112:	fb03 e707 	mla	r7, r3, r7, lr
 8013116:	80ef      	strh	r7, [r5, #6]
 8013118:	e6b9      	b.n	8012e8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801311a:	2900      	cmp	r1, #0
 801311c:	f2c0 80a8 	blt.w	8013270 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013120:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013122:	f1c7 0320 	rsb	r3, r7, #32
 8013126:	4363      	muls	r3, r4
 8013128:	2401      	movs	r4, #1
 801312a:	940d      	str	r4, [sp, #52]	; 0x34
 801312c:	2420      	movs	r4, #32
 801312e:	940c      	str	r4, [sp, #48]	; 0x30
 8013130:	fb93 f4f1 	sdiv	r4, r3, r1
 8013134:	fb01 3b14 	mls	fp, r1, r4, r3
 8013138:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801313a:	f1bb 0f00 	cmp.w	fp, #0
 801313e:	bfb8      	it	lt
 8013140:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013144:	441f      	add	r7, r3
 8013146:	fb04 e707 	mla	r7, r4, r7, lr
 801314a:	44a4      	add	ip, r4
 801314c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013150:	80ef      	strh	r7, [r5, #6]
 8013152:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013156:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013158:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801315c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013160:	bfb8      	it	lt
 8013162:	448b      	addlt	fp, r1
 8013164:	eb08 0503 	add.w	r5, r8, r3
 8013168:	ea5e 0307 	orrs.w	r3, lr, r7
 801316c:	d011      	beq.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801316e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013172:	f1be 0f00 	cmp.w	lr, #0
 8013176:	db0c      	blt.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013178:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801317a:	45be      	cmp	lr, r7
 801317c:	da09      	bge.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801317e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013182:	45be      	cmp	lr, r7
 8013184:	bf3c      	itt	cc
 8013186:	f10c 0708 	addcc.w	r7, ip, #8
 801318a:	6107      	strcc	r7, [r0, #16]
 801318c:	f10e 0701 	add.w	r7, lr, #1
 8013190:	6087      	str	r7, [r0, #8]
 8013192:	6907      	ldr	r7, [r0, #16]
 8013194:	b213      	sxth	r3, r2
 8013196:	9310      	str	r3, [sp, #64]	; 0x40
 8013198:	807b      	strh	r3, [r7, #2]
 801319a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801319c:	803d      	strh	r5, [r7, #0]
 801319e:	4555      	cmp	r5, sl
 80131a0:	80be      	strh	r6, [r7, #4]
 80131a2:	80fe      	strh	r6, [r7, #6]
 80131a4:	eb04 0c03 	add.w	ip, r4, r3
 80131a8:	d051      	beq.n	801324e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80131aa:	9b01      	ldr	r3, [sp, #4]
 80131ac:	eba3 070c 	sub.w	r7, r3, ip
 80131b0:	443c      	add	r4, r7
 80131b2:	0164      	lsls	r4, r4, #5
 80131b4:	fb94 f8f1 	sdiv	r8, r4, r1
 80131b8:	fb01 4418 	mls	r4, r1, r8, r4
 80131bc:	2c00      	cmp	r4, #0
 80131be:	bfb8      	it	lt
 80131c0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80131c4:	ebab 0301 	sub.w	r3, fp, r1
 80131c8:	f108 0701 	add.w	r7, r8, #1
 80131cc:	bfb8      	it	lt
 80131ce:	1864      	addlt	r4, r4, r1
 80131d0:	9309      	str	r3, [sp, #36]	; 0x24
 80131d2:	9711      	str	r7, [sp, #68]	; 0x44
 80131d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131d6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80131da:	191b      	adds	r3, r3, r4
 80131dc:	bf58      	it	pl
 80131de:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80131e0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80131e4:	9309      	str	r3, [sp, #36]	; 0x24
 80131e6:	bf48      	it	mi
 80131e8:	4647      	movmi	r7, r8
 80131ea:	44bb      	add	fp, r7
 80131ec:	f8ae b004 	strh.w	fp, [lr, #4]
 80131f0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80131f4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80131f8:	f8ae b006 	strh.w	fp, [lr, #6]
 80131fc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013200:	44bc      	add	ip, r7
 8013202:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013204:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013208:	443d      	add	r5, r7
 801320a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801320e:	bf5c      	itt	pl
 8013210:	1a5b      	subpl	r3, r3, r1
 8013212:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013214:	ea5b 0307 	orrs.w	r3, fp, r7
 8013218:	d011      	beq.n	801323e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801321a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801321e:	f1bb 0f00 	cmp.w	fp, #0
 8013222:	db0c      	blt.n	801323e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013224:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013226:	45bb      	cmp	fp, r7
 8013228:	da09      	bge.n	801323e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801322a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801322e:	45bb      	cmp	fp, r7
 8013230:	bf3c      	itt	cc
 8013232:	f10e 0708 	addcc.w	r7, lr, #8
 8013236:	6107      	strcc	r7, [r0, #16]
 8013238:	f10b 0701 	add.w	r7, fp, #1
 801323c:	6087      	str	r7, [r0, #8]
 801323e:	6907      	ldr	r7, [r0, #16]
 8013240:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013242:	803d      	strh	r5, [r7, #0]
 8013244:	4555      	cmp	r5, sl
 8013246:	807b      	strh	r3, [r7, #2]
 8013248:	80be      	strh	r6, [r7, #4]
 801324a:	80fe      	strh	r6, [r7, #6]
 801324c:	d1c2      	bne.n	80131d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801324e:	9b01      	ldr	r3, [sp, #4]
 8013250:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013252:	eba3 0c0c 	sub.w	ip, r3, ip
 8013256:	6903      	ldr	r3, [r0, #16]
 8013258:	8899      	ldrh	r1, [r3, #4]
 801325a:	4461      	add	r1, ip
 801325c:	8099      	strh	r1, [r3, #4]
 801325e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013260:	3720      	adds	r7, #32
 8013262:	1a7f      	subs	r7, r7, r1
 8013264:	88d9      	ldrh	r1, [r3, #6]
 8013266:	fb0c 1c07 	mla	ip, ip, r7, r1
 801326a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801326e:	e60e      	b.n	8012e8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013272:	f04f 34ff 	mov.w	r4, #4294967295
 8013276:	940d      	str	r4, [sp, #52]	; 0x34
 8013278:	437b      	muls	r3, r7
 801327a:	4249      	negs	r1, r1
 801327c:	2400      	movs	r4, #0
 801327e:	e756      	b.n	801312e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013280:	9905      	ldr	r1, [sp, #20]
 8013282:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013286:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801328a:	f001 011f 	and.w	r1, r1, #31
 801328e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013292:	9102      	str	r1, [sp, #8]
 8013294:	9904      	ldr	r1, [sp, #16]
 8013296:	45f3      	cmp	fp, lr
 8013298:	f009 0c1f 	and.w	ip, r9, #31
 801329c:	eba1 0406 	sub.w	r4, r1, r6
 80132a0:	d108      	bne.n	80132b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80132a2:	9b02      	ldr	r3, [sp, #8]
 80132a4:	449c      	add	ip, r3
 80132a6:	44a0      	add	r8, r4
 80132a8:	fb04 a40c 	mla	r4, r4, ip, sl
 80132ac:	f8a7 8004 	strh.w	r8, [r7, #4]
 80132b0:	80fc      	strh	r4, [r7, #6]
 80132b2:	e458      	b.n	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80132b4:	9905      	ldr	r1, [sp, #20]
 80132b6:	ebb1 0109 	subs.w	r1, r1, r9
 80132ba:	bf5b      	ittet	pl
 80132bc:	f1cc 0520 	rsbpl	r5, ip, #32
 80132c0:	436c      	mulpl	r4, r5
 80132c2:	2500      	movmi	r5, #0
 80132c4:	2520      	movpl	r5, #32
 80132c6:	bf44      	itt	mi
 80132c8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80132cc:	4249      	negmi	r1, r1
 80132ce:	9501      	str	r5, [sp, #4]
 80132d0:	9b01      	ldr	r3, [sp, #4]
 80132d2:	fb94 f5f1 	sdiv	r5, r4, r1
 80132d6:	fb01 4415 	mls	r4, r1, r5, r4
 80132da:	bf54      	ite	pl
 80132dc:	f04f 0901 	movpl.w	r9, #1
 80132e0:	f04f 39ff 	movmi.w	r9, #4294967295
 80132e4:	2c00      	cmp	r4, #0
 80132e6:	bfb8      	it	lt
 80132e8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80132ec:	449c      	add	ip, r3
 80132ee:	44a8      	add	r8, r5
 80132f0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80132f4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80132f8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80132fc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013300:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013304:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013308:	bfb8      	it	lt
 801330a:	1864      	addlt	r4, r4, r1
 801330c:	ea58 0707 	orrs.w	r7, r8, r7
 8013310:	eb0b 0309 	add.w	r3, fp, r9
 8013314:	d011      	beq.n	801333a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013316:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801331a:	f1b8 0f00 	cmp.w	r8, #0
 801331e:	db0c      	blt.n	801333a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013320:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013322:	45b8      	cmp	r8, r7
 8013324:	da09      	bge.n	801333a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013326:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801332a:	45b8      	cmp	r8, r7
 801332c:	bf3c      	itt	cc
 801332e:	f10c 0708 	addcc.w	r7, ip, #8
 8013332:	6107      	strcc	r7, [r0, #16]
 8013334:	f108 0701 	add.w	r7, r8, #1
 8013338:	6087      	str	r7, [r0, #8]
 801333a:	6907      	ldr	r7, [r0, #16]
 801333c:	f04f 0c00 	mov.w	ip, #0
 8013340:	b212      	sxth	r2, r2
 8013342:	459e      	cmp	lr, r3
 8013344:	803b      	strh	r3, [r7, #0]
 8013346:	807a      	strh	r2, [r7, #2]
 8013348:	f8a7 c004 	strh.w	ip, [r7, #4]
 801334c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013350:	442e      	add	r6, r5
 8013352:	d04d      	beq.n	80133f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013354:	9f04      	ldr	r7, [sp, #16]
 8013356:	1bbf      	subs	r7, r7, r6
 8013358:	443d      	add	r5, r7
 801335a:	016d      	lsls	r5, r5, #5
 801335c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013360:	fb01 5518 	mls	r5, r1, r8, r5
 8013364:	4565      	cmp	r5, ip
 8013366:	bfb8      	it	lt
 8013368:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801336c:	f108 0701 	add.w	r7, r8, #1
 8013370:	bfb8      	it	lt
 8013372:	186d      	addlt	r5, r5, r1
 8013374:	1a64      	subs	r4, r4, r1
 8013376:	9703      	str	r7, [sp, #12]
 8013378:	f04f 0a00 	mov.w	sl, #0
 801337c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013380:	1964      	adds	r4, r4, r5
 8013382:	bf58      	it	pl
 8013384:	9f03      	ldrpl	r7, [sp, #12]
 8013386:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801338a:	bf48      	it	mi
 801338c:	4647      	movmi	r7, r8
 801338e:	44bb      	add	fp, r7
 8013390:	f8ac b004 	strh.w	fp, [ip, #4]
 8013394:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013398:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801339c:	f8ac b006 	strh.w	fp, [ip, #6]
 80133a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80133a4:	443e      	add	r6, r7
 80133a6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80133aa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80133ae:	bf58      	it	pl
 80133b0:	1a64      	subpl	r4, r4, r1
 80133b2:	ea5b 0707 	orrs.w	r7, fp, r7
 80133b6:	444b      	add	r3, r9
 80133b8:	d011      	beq.n	80133de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80133ba:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80133be:	f1bb 0f00 	cmp.w	fp, #0
 80133c2:	db0c      	blt.n	80133de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80133c4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80133c6:	45bb      	cmp	fp, r7
 80133c8:	da09      	bge.n	80133de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80133ca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80133ce:	45bb      	cmp	fp, r7
 80133d0:	bf3c      	itt	cc
 80133d2:	f10c 0708 	addcc.w	r7, ip, #8
 80133d6:	6107      	strcc	r7, [r0, #16]
 80133d8:	f10b 0701 	add.w	r7, fp, #1
 80133dc:	6087      	str	r7, [r0, #8]
 80133de:	6907      	ldr	r7, [r0, #16]
 80133e0:	459e      	cmp	lr, r3
 80133e2:	803b      	strh	r3, [r7, #0]
 80133e4:	807a      	strh	r2, [r7, #2]
 80133e6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80133ea:	f8a7 a006 	strh.w	sl, [r7, #6]
 80133ee:	d1c5      	bne.n	801337c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80133f0:	9b04      	ldr	r3, [sp, #16]
 80133f2:	1b9e      	subs	r6, r3, r6
 80133f4:	6903      	ldr	r3, [r0, #16]
 80133f6:	889a      	ldrh	r2, [r3, #4]
 80133f8:	4432      	add	r2, r6
 80133fa:	809a      	strh	r2, [r3, #4]
 80133fc:	9a02      	ldr	r2, [sp, #8]
 80133fe:	f102 0c20 	add.w	ip, r2, #32
 8013402:	9a01      	ldr	r2, [sp, #4]
 8013404:	ebac 0c02 	sub.w	ip, ip, r2
 8013408:	88da      	ldrh	r2, [r3, #6]
 801340a:	fb06 260c 	mla	r6, r6, ip, r2
 801340e:	80de      	strh	r6, [r3, #6]
 8013410:	f7ff bba9 	b.w	8012b66 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013414 <_ZN8touchgfx7Outline6lineToEii>:
 8013414:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013416:	079b      	lsls	r3, r3, #30
 8013418:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801341a:	460e      	mov	r6, r1
 801341c:	4615      	mov	r5, r2
 801341e:	d511      	bpl.n	8013444 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013420:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013424:	ea86 0701 	eor.w	r7, r6, r1
 8013428:	ea85 0302 	eor.w	r3, r5, r2
 801342c:	433b      	orrs	r3, r7
 801342e:	d009      	beq.n	8013444 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013430:	4633      	mov	r3, r6
 8013432:	9500      	str	r5, [sp, #0]
 8013434:	f7ff fb3e 	bl	8012ab4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013438:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801343a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801343e:	f043 0301 	orr.w	r3, r3, #1
 8013442:	6243      	str	r3, [r0, #36]	; 0x24
 8013444:	b003      	add	sp, #12
 8013446:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013448 <_ZN8touchgfx7Outline6moveToEii>:
 8013448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801344a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801344c:	4615      	mov	r5, r2
 801344e:	079a      	lsls	r2, r3, #30
 8013450:	4604      	mov	r4, r0
 8013452:	460e      	mov	r6, r1
 8013454:	d401      	bmi.n	801345a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013456:	f7ff faf9 	bl	8012a4c <_ZN8touchgfx7Outline5resetEv>
 801345a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801345c:	07db      	lsls	r3, r3, #31
 801345e:	d504      	bpl.n	801346a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013460:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013464:	4620      	mov	r0, r4
 8013466:	f7ff ffd5 	bl	8013414 <_ZN8touchgfx7Outline6lineToEii>
 801346a:	6923      	ldr	r3, [r4, #16]
 801346c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013470:	1170      	asrs	r0, r6, #5
 8013472:	4290      	cmp	r0, r2
 8013474:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013478:	d103      	bne.n	8013482 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801347a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801347e:	4291      	cmp	r1, r2
 8013480:	d01a      	beq.n	80134b8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013482:	88df      	ldrh	r7, [r3, #6]
 8013484:	889a      	ldrh	r2, [r3, #4]
 8013486:	433a      	orrs	r2, r7
 8013488:	d010      	beq.n	80134ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 801348a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801348e:	2a00      	cmp	r2, #0
 8013490:	db0c      	blt.n	80134ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013492:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013494:	42ba      	cmp	r2, r7
 8013496:	da09      	bge.n	80134ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013498:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801349c:	42ba      	cmp	r2, r7
 801349e:	bf38      	it	cc
 80134a0:	3308      	addcc	r3, #8
 80134a2:	f102 0201 	add.w	r2, r2, #1
 80134a6:	bf38      	it	cc
 80134a8:	6123      	strcc	r3, [r4, #16]
 80134aa:	60a2      	str	r2, [r4, #8]
 80134ac:	6923      	ldr	r3, [r4, #16]
 80134ae:	2200      	movs	r2, #0
 80134b0:	8018      	strh	r0, [r3, #0]
 80134b2:	8059      	strh	r1, [r3, #2]
 80134b4:	809a      	strh	r2, [r3, #4]
 80134b6:	80da      	strh	r2, [r3, #6]
 80134b8:	6166      	str	r6, [r4, #20]
 80134ba:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80134be:	6225      	str	r5, [r4, #32]
 80134c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080134c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80134c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80134c6:	b0d0      	sub	sp, #320	; 0x140
 80134c8:	466c      	mov	r4, sp
 80134ca:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80134ce:	4627      	mov	r7, r4
 80134d0:	1a0d      	subs	r5, r1, r0
 80134d2:	2d48      	cmp	r5, #72	; 0x48
 80134d4:	f100 0308 	add.w	r3, r0, #8
 80134d8:	f340 80d5 	ble.w	8013686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80134dc:	112d      	asrs	r5, r5, #4
 80134de:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80134e2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80134e6:	6816      	ldr	r6, [r2, #0]
 80134e8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80134ec:	6006      	str	r6, [r0, #0]
 80134ee:	6856      	ldr	r6, [r2, #4]
 80134f0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80134f4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80134f8:	6046      	str	r6, [r0, #4]
 80134fa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80134fe:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013502:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013506:	f8a2 c006 	strh.w	ip, [r2, #6]
 801350a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801350e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013512:	4565      	cmp	r5, ip
 8013514:	f1a1 0208 	sub.w	r2, r1, #8
 8013518:	db06      	blt.n	8013528 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801351a:	d119      	bne.n	8013550 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801351c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013520:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013524:	42ae      	cmp	r6, r5
 8013526:	dd13      	ble.n	8013550 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013528:	460e      	mov	r6, r1
 801352a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801352e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013532:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013536:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801353a:	601d      	str	r5, [r3, #0]
 801353c:	6875      	ldr	r5, [r6, #4]
 801353e:	605d      	str	r5, [r3, #4]
 8013540:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013544:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013548:	f821 8c04 	strh.w	r8, [r1, #-4]
 801354c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013550:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013554:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013558:	42ae      	cmp	r6, r5
 801355a:	db06      	blt.n	801356a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801355c:	d116      	bne.n	801358c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801355e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013562:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013566:	45ac      	cmp	ip, r5
 8013568:	da10      	bge.n	801358c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801356a:	681d      	ldr	r5, [r3, #0]
 801356c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013570:	6005      	str	r5, [r0, #0]
 8013572:	685d      	ldr	r5, [r3, #4]
 8013574:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013578:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801357c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013580:	6045      	str	r5, [r0, #4]
 8013582:	8146      	strh	r6, [r0, #10]
 8013584:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013588:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801358c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013590:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013594:	4565      	cmp	r5, ip
 8013596:	db06      	blt.n	80135a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013598:	d119      	bne.n	80135ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801359a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801359e:	f9b0 5000 	ldrsh.w	r5, [r0]
 80135a2:	42ae      	cmp	r6, r5
 80135a4:	da13      	bge.n	80135ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80135a6:	460e      	mov	r6, r1
 80135a8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80135ac:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80135b0:	6005      	str	r5, [r0, #0]
 80135b2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80135b6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80135ba:	6875      	ldr	r5, [r6, #4]
 80135bc:	6045      	str	r5, [r0, #4]
 80135be:	f821 9c08 	strh.w	r9, [r1, #-8]
 80135c2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80135c6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80135ca:	f821 ec02 	strh.w	lr, [r1, #-2]
 80135ce:	3308      	adds	r3, #8
 80135d0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80135d4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80135d8:	45e6      	cmp	lr, ip
 80135da:	dbf8      	blt.n	80135ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80135dc:	d105      	bne.n	80135ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80135de:	f9b3 6000 	ldrsh.w	r6, [r3]
 80135e2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80135e6:	42ae      	cmp	r6, r5
 80135e8:	dbf1      	blt.n	80135ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80135ea:	4615      	mov	r5, r2
 80135ec:	3a08      	subs	r2, #8
 80135ee:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80135f2:	45b4      	cmp	ip, r6
 80135f4:	dbf9      	blt.n	80135ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80135f6:	d105      	bne.n	8013604 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80135f8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80135fc:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013600:	45b0      	cmp	r8, r6
 8013602:	dbf2      	blt.n	80135ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013604:	4293      	cmp	r3, r2
 8013606:	f1a5 0608 	sub.w	r6, r5, #8
 801360a:	d816      	bhi.n	801363a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801360c:	f8d6 c000 	ldr.w	ip, [r6]
 8013610:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013614:	f8c3 c000 	str.w	ip, [r3]
 8013618:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801361c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013620:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013624:	f8c3 c004 	str.w	ip, [r3, #4]
 8013628:	f825 ac08 	strh.w	sl, [r5, #-8]
 801362c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013630:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013634:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013638:	e7c9      	b.n	80135ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801363a:	f8d6 e000 	ldr.w	lr, [r6]
 801363e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013642:	f8c0 e000 	str.w	lr, [r0]
 8013646:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801364a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801364e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013652:	f8c0 e004 	str.w	lr, [r0, #4]
 8013656:	f825 ac08 	strh.w	sl, [r5, #-8]
 801365a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801365e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013662:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013666:	1acd      	subs	r5, r1, r3
 8013668:	1a16      	subs	r6, r2, r0
 801366a:	10ed      	asrs	r5, r5, #3
 801366c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013670:	bfb5      	itete	lt
 8013672:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013676:	e9c4 3100 	strdge	r3, r1, [r4]
 801367a:	460a      	movlt	r2, r1
 801367c:	4603      	movge	r3, r0
 801367e:	3408      	adds	r4, #8
 8013680:	4618      	mov	r0, r3
 8013682:	4611      	mov	r1, r2
 8013684:	e724      	b.n	80134d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013686:	4299      	cmp	r1, r3
 8013688:	d928      	bls.n	80136dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801368a:	f1a3 0210 	sub.w	r2, r3, #16
 801368e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8013692:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8013696:	45ac      	cmp	ip, r5
 8013698:	db06      	blt.n	80136a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801369a:	d11d      	bne.n	80136d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801369c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80136a0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80136a4:	42ae      	cmp	r6, r5
 80136a6:	da17      	bge.n	80136d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80136a8:	4615      	mov	r5, r2
 80136aa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80136ae:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80136b2:	6116      	str	r6, [r2, #16]
 80136b4:	686e      	ldr	r6, [r5, #4]
 80136b6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80136ba:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80136be:	f8a2 9008 	strh.w	r9, [r2, #8]
 80136c2:	42a8      	cmp	r0, r5
 80136c4:	6156      	str	r6, [r2, #20]
 80136c6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80136ca:	f8a2 800c 	strh.w	r8, [r2, #12]
 80136ce:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80136d2:	f1a2 0208 	sub.w	r2, r2, #8
 80136d6:	d1da      	bne.n	801368e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80136d8:	3308      	adds	r3, #8
 80136da:	e7d4      	b.n	8013686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80136dc:	42bc      	cmp	r4, r7
 80136de:	d903      	bls.n	80136e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80136e0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80136e4:	3c08      	subs	r4, #8
 80136e6:	e6f3      	b.n	80134d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80136e8:	b050      	add	sp, #320	; 0x140
 80136ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080136ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80136ee:	b510      	push	{r4, lr}
 80136f0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80136f2:	07da      	lsls	r2, r3, #31
 80136f4:	4604      	mov	r4, r0
 80136f6:	d507      	bpl.n	8013708 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80136f8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80136fc:	f7ff fe8a 	bl	8013414 <_ZN8touchgfx7Outline6lineToEii>
 8013700:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013702:	f023 0301 	bic.w	r3, r3, #1
 8013706:	6243      	str	r3, [r0, #36]	; 0x24
 8013708:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801370a:	079b      	lsls	r3, r3, #30
 801370c:	d521      	bpl.n	8013752 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801370e:	6923      	ldr	r3, [r4, #16]
 8013710:	88d9      	ldrh	r1, [r3, #6]
 8013712:	889a      	ldrh	r2, [r3, #4]
 8013714:	430a      	orrs	r2, r1
 8013716:	d010      	beq.n	801373a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013718:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801371c:	2a00      	cmp	r2, #0
 801371e:	db0c      	blt.n	801373a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013720:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013722:	428a      	cmp	r2, r1
 8013724:	da09      	bge.n	801373a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013726:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801372a:	4291      	cmp	r1, r2
 801372c:	bf88      	it	hi
 801372e:	3308      	addhi	r3, #8
 8013730:	f102 0201 	add.w	r2, r2, #1
 8013734:	bf88      	it	hi
 8013736:	6123      	strhi	r3, [r4, #16]
 8013738:	60a2      	str	r2, [r4, #8]
 801373a:	68a1      	ldr	r1, [r4, #8]
 801373c:	b129      	cbz	r1, 801374a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801373e:	6863      	ldr	r3, [r4, #4]
 8013740:	4299      	cmp	r1, r3
 8013742:	d802      	bhi.n	801374a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013744:	68e0      	ldr	r0, [r4, #12]
 8013746:	f7ff febc 	bl	80134c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801374a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801374c:	f023 0302 	bic.w	r3, r3, #2
 8013750:	6263      	str	r3, [r4, #36]	; 0x24
 8013752:	68e0      	ldr	r0, [r4, #12]
 8013754:	bd10      	pop	{r4, pc}
	...

08013758 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013758:	4b02      	ldr	r3, [pc, #8]	; (8013764 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801375a:	6018      	str	r0, [r3, #0]
 801375c:	4b02      	ldr	r3, [pc, #8]	; (8013768 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801375e:	6019      	str	r1, [r3, #0]
 8013760:	4770      	bx	lr
 8013762:	bf00      	nop
 8013764:	20012e64 	.word	0x20012e64
 8013768:	20012e68 	.word	0x20012e68

0801376c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801376c:	4a02      	ldr	r2, [pc, #8]	; (8013778 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801376e:	2300      	movs	r3, #0
 8013770:	6013      	str	r3, [r2, #0]
 8013772:	4a02      	ldr	r2, [pc, #8]	; (801377c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013774:	6013      	str	r3, [r2, #0]
 8013776:	4770      	bx	lr
 8013778:	20012e64 	.word	0x20012e64
 801377c:	20012e68 	.word	0x20012e68

08013780 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013780:	4b01      	ldr	r3, [pc, #4]	; (8013788 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013782:	6818      	ldr	r0, [r3, #0]
 8013784:	4770      	bx	lr
 8013786:	bf00      	nop
 8013788:	20012e64 	.word	0x20012e64

0801378c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801378c:	4b01      	ldr	r3, [pc, #4]	; (8013794 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801378e:	6818      	ldr	r0, [r3, #0]
 8013790:	4770      	bx	lr
 8013792:	bf00      	nop
 8013794:	20012e68 	.word	0x20012e68

08013798 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013798:	b510      	push	{r4, lr}
 801379a:	6803      	ldr	r3, [r0, #0]
 801379c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801379e:	460c      	mov	r4, r1
 80137a0:	4798      	blx	r3
 80137a2:	1b03      	subs	r3, r0, r4
 80137a4:	4258      	negs	r0, r3
 80137a6:	4158      	adcs	r0, r3
 80137a8:	bd10      	pop	{r4, pc}
	...

080137ac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80137ac:	4b01      	ldr	r3, [pc, #4]	; (80137b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80137ae:	6019      	str	r1, [r3, #0]
 80137b0:	4770      	bx	lr
 80137b2:	bf00      	nop
 80137b4:	20012e6c 	.word	0x20012e6c

080137b8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80137b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137bc:	4696      	mov	lr, r2
 80137be:	4605      	mov	r5, r0
 80137c0:	4614      	mov	r4, r2
 80137c2:	460e      	mov	r6, r1
 80137c4:	461f      	mov	r7, r3
 80137c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80137ca:	b097      	sub	sp, #92	; 0x5c
 80137cc:	f10d 0c1c 	add.w	ip, sp, #28
 80137d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80137d4:	f8de 3000 	ldr.w	r3, [lr]
 80137d8:	f8cc 3000 	str.w	r3, [ip]
 80137dc:	f104 0e14 	add.w	lr, r4, #20
 80137e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80137e4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80137e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80137ec:	f8de 3000 	ldr.w	r3, [lr]
 80137f0:	f8cc 3000 	str.w	r3, [ip]
 80137f4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80137f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80137fc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013800:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013804:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013808:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801380c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013810:	f8de 3000 	ldr.w	r3, [lr]
 8013814:	f8cc 3000 	str.w	r3, [ip]
 8013818:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801381a:	682b      	ldr	r3, [r5, #0]
 801381c:	9201      	str	r2, [sp, #4]
 801381e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013822:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013824:	9200      	str	r2, [sp, #0]
 8013826:	f8cd 8008 	str.w	r8, [sp, #8]
 801382a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801382e:	aa07      	add	r2, sp, #28
 8013830:	463b      	mov	r3, r7
 8013832:	4631      	mov	r1, r6
 8013834:	4628      	mov	r0, r5
 8013836:	47d8      	blx	fp
 8013838:	46a6      	mov	lr, r4
 801383a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801383e:	f10d 0c1c 	add.w	ip, sp, #28
 8013842:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013846:	f8de 3000 	ldr.w	r3, [lr]
 801384a:	f8cc 3000 	str.w	r3, [ip]
 801384e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013852:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013856:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801385a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801385e:	343c      	adds	r4, #60	; 0x3c
 8013860:	f8de 3000 	ldr.w	r3, [lr]
 8013864:	f8cc 3000 	str.w	r3, [ip]
 8013868:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801386a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801386e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013872:	6823      	ldr	r3, [r4, #0]
 8013874:	f8cc 3000 	str.w	r3, [ip]
 8013878:	682b      	ldr	r3, [r5, #0]
 801387a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801387e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013880:	9201      	str	r2, [sp, #4]
 8013882:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013884:	9200      	str	r2, [sp, #0]
 8013886:	f8cd 8008 	str.w	r8, [sp, #8]
 801388a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801388c:	aa07      	add	r2, sp, #28
 801388e:	463b      	mov	r3, r7
 8013890:	4631      	mov	r1, r6
 8013892:	4628      	mov	r0, r5
 8013894:	47a0      	blx	r4
 8013896:	b017      	add	sp, #92	; 0x5c
 8013898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801389c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801389c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138a0:	b08d      	sub	sp, #52	; 0x34
 80138a2:	4688      	mov	r8, r1
 80138a4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80138a6:	f8d3 c000 	ldr.w	ip, [r3]
 80138aa:	680f      	ldr	r7, [r1, #0]
 80138ac:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80138b0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80138b4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80138b8:	edd3 6a07 	vldr	s13, [r3, #28]
 80138bc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80138be:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80138c2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80138c6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80138ca:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80138ce:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80138d2:	eba7 070c 	sub.w	r7, r7, ip
 80138d6:	42bc      	cmp	r4, r7
 80138d8:	bfa8      	it	ge
 80138da:	463c      	movge	r4, r7
 80138dc:	ee07 4a90 	vmov	s15, r4
 80138e0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80138e4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80138e8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80138ec:	ee65 4a24 	vmul.f32	s9, s10, s9
 80138f0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80138f4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80138f8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80138fc:	eb09 0e0c 	add.w	lr, r9, ip
 8013900:	4571      	cmp	r1, lr
 8013902:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013906:	ee32 1a05 	vadd.f32	s2, s4, s10
 801390a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801390e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013912:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013916:	f340 808d 	ble.w	8013a34 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801391a:	eba1 060e 	sub.w	r6, r1, lr
 801391e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013922:	ee07 5a10 	vmov	s14, r5
 8013926:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801392a:	2d00      	cmp	r5, #0
 801392c:	fb04 6615 	mls	r6, r4, r5, r6
 8013930:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013934:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013938:	eea7 1a05 	vfma.f32	s2, s14, s10
 801393c:	dd13      	ble.n	8013966 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801393e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013942:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013946:	eef5 6a40 	vcmp.f32	s13, #0.0
 801394a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801394e:	bf18      	it	ne
 8013950:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013954:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013958:	bf08      	it	eq
 801395a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801395e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013962:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013966:	fb05 f204 	mul.w	r2, r5, r4
 801396a:	1abf      	subs	r7, r7, r2
 801396c:	4494      	add	ip, r2
 801396e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013972:	4411      	add	r1, r2
 8013974:	eb09 020c 	add.w	r2, r9, ip
 8013978:	443a      	add	r2, r7
 801397a:	b209      	sxth	r1, r1
 801397c:	428a      	cmp	r2, r1
 801397e:	bfc4      	itt	gt
 8013980:	eba1 0209 	subgt.w	r2, r1, r9
 8013984:	eba2 070c 	subgt.w	r7, r2, ip
 8013988:	2f00      	cmp	r7, #0
 801398a:	dd50      	ble.n	8013a2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801398c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013990:	fb04 7211 	mls	r2, r4, r1, r7
 8013994:	b90a      	cbnz	r2, 801399a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013996:	3901      	subs	r1, #1
 8013998:	4622      	mov	r2, r4
 801399a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801399e:	6840      	ldr	r0, [r0, #4]
 80139a0:	900b      	str	r0, [sp, #44]	; 0x2c
 80139a2:	f8d0 a000 	ldr.w	sl, [r0]
 80139a6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80139a8:	9008      	str	r0, [sp, #32]
 80139aa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80139ae:	9818      	ldr	r0, [sp, #96]	; 0x60
 80139b0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80139b4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80139b8:	695b      	ldr	r3, [r3, #20]
 80139ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80139bc:	445b      	add	r3, fp
 80139be:	eef0 6a42 	vmov.f32	s13, s4
 80139c2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80139c6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80139ca:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80139ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139d2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80139d6:	9307      	str	r3, [sp, #28]
 80139d8:	ee17 7a90 	vmov	r7, s15
 80139dc:	ee73 7a42 	vsub.f32	s15, s6, s4
 80139e0:	eeb0 7a61 	vmov.f32	s14, s3
 80139e4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80139e8:	ee16 3a90 	vmov	r3, s13
 80139ec:	fb97 f7f4 	sdiv	r7, r7, r4
 80139f0:	ee17 ca90 	vmov	ip, s15
 80139f4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80139f8:	fb9c fcf4 	sdiv	ip, ip, r4
 80139fc:	fb0c 3306 	mla	r3, ip, r6, r3
 8013a00:	9302      	str	r3, [sp, #8]
 8013a02:	ee17 3a10 	vmov	r3, s14
 8013a06:	44b6      	add	lr, r6
 8013a08:	fb04 e505 	mla	r5, r4, r5, lr
 8013a0c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013a10:	fb07 3706 	mla	r7, r7, r6, r3
 8013a14:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013a18:	e9cd 4700 	strd	r4, r7, [sp]
 8013a1c:	2900      	cmp	r1, #0
 8013a1e:	bfcc      	ite	gt
 8013a20:	46a1      	movgt	r9, r4
 8013a22:	4691      	movle	r9, r2
 8013a24:	eba9 0306 	sub.w	r3, r9, r6
 8013a28:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013a2c:	47a0      	blx	r4
 8013a2e:	b00d      	add	sp, #52	; 0x34
 8013a30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a34:	2500      	movs	r5, #0
 8013a36:	462e      	mov	r6, r5
 8013a38:	e799      	b.n	801396e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a40:	b0db      	sub	sp, #364	; 0x16c
 8013a42:	461d      	mov	r5, r3
 8013a44:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013a48:	930a      	str	r3, [sp, #40]	; 0x28
 8013a4a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013a4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a50:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013a54:	9310      	str	r3, [sp, #64]	; 0x40
 8013a56:	6803      	ldr	r3, [r0, #0]
 8013a58:	910f      	str	r1, [sp, #60]	; 0x3c
 8013a5a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013a5c:	9009      	str	r0, [sp, #36]	; 0x24
 8013a5e:	4614      	mov	r4, r2
 8013a60:	4629      	mov	r1, r5
 8013a62:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013a66:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013a6a:	47b8      	blx	r7
 8013a6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a6e:	6058      	str	r0, [r3, #4]
 8013a70:	2800      	cmp	r0, #0
 8013a72:	f000 83a1 	beq.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013a76:	682b      	ldr	r3, [r5, #0]
 8013a78:	9314      	str	r3, [sp, #80]	; 0x50
 8013a7a:	686b      	ldr	r3, [r5, #4]
 8013a7c:	9315      	str	r3, [sp, #84]	; 0x54
 8013a7e:	4bc4      	ldr	r3, [pc, #784]	; (8013d90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013a80:	ed94 7a02 	vldr	s14, [r4, #8]
 8013a84:	7819      	ldrb	r1, [r3, #0]
 8013a86:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013a8a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013a8e:	2900      	cmp	r1, #0
 8013a90:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013a94:	bf16      	itet	ne
 8013a96:	4619      	movne	r1, r3
 8013a98:	4611      	moveq	r1, r2
 8013a9a:	4613      	movne	r3, r2
 8013a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013aa0:	9116      	str	r1, [sp, #88]	; 0x58
 8013aa2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013aa6:	f240 8387 	bls.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013aaa:	ed94 7a07 	vldr	s14, [r4, #28]
 8013aae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ab6:	f240 837f 	bls.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013aba:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013abe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013ac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ac6:	f240 8377 	bls.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013aca:	6822      	ldr	r2, [r4, #0]
 8013acc:	4bb1      	ldr	r3, [pc, #708]	; (8013d94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013ace:	429a      	cmp	r2, r3
 8013ad0:	f2c0 8372 	blt.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ad4:	49b0      	ldr	r1, [pc, #704]	; (8013d98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013ad6:	6963      	ldr	r3, [r4, #20]
 8013ad8:	428a      	cmp	r2, r1
 8013ada:	f300 836d 	bgt.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ade:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013ae2:	48ae      	ldr	r0, [pc, #696]	; (8013d9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013ae4:	33ff      	adds	r3, #255	; 0xff
 8013ae6:	4283      	cmp	r3, r0
 8013ae8:	f200 8366 	bhi.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013aec:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013aee:	4dac      	ldr	r5, [pc, #688]	; (8013da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013af0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013af4:	33ff      	adds	r3, #255	; 0xff
 8013af6:	42ab      	cmp	r3, r5
 8013af8:	f200 835e 	bhi.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013afc:	6862      	ldr	r2, [r4, #4]
 8013afe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013b02:	33ff      	adds	r3, #255	; 0xff
 8013b04:	4283      	cmp	r3, r0
 8013b06:	f200 8357 	bhi.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b0a:	69a1      	ldr	r1, [r4, #24]
 8013b0c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013b10:	33ff      	adds	r3, #255	; 0xff
 8013b12:	4283      	cmp	r3, r0
 8013b14:	f200 8350 	bhi.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013b1a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013b1e:	30ff      	adds	r0, #255	; 0xff
 8013b20:	42a8      	cmp	r0, r5
 8013b22:	f200 8349 	bhi.w	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b26:	428a      	cmp	r2, r1
 8013b28:	f280 8110 	bge.w	8013d4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013b2c:	429a      	cmp	r2, r3
 8013b2e:	f300 8119 	bgt.w	8013d64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013b32:	4299      	cmp	r1, r3
 8013b34:	f280 811d 	bge.w	8013d72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013b38:	2502      	movs	r5, #2
 8013b3a:	2701      	movs	r7, #1
 8013b3c:	46a9      	mov	r9, r5
 8013b3e:	46b8      	mov	r8, r7
 8013b40:	f04f 0a00 	mov.w	sl, #0
 8013b44:	4621      	mov	r1, r4
 8013b46:	a849      	add	r0, sp, #292	; 0x124
 8013b48:	f003 feec 	bl	8017924 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013b4c:	4622      	mov	r2, r4
 8013b4e:	4653      	mov	r3, sl
 8013b50:	a949      	add	r1, sp, #292	; 0x124
 8013b52:	f8cd 9000 	str.w	r9, [sp]
 8013b56:	a819      	add	r0, sp, #100	; 0x64
 8013b58:	f004 f814 	bl	8017b84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013b5c:	4622      	mov	r2, r4
 8013b5e:	4653      	mov	r3, sl
 8013b60:	a949      	add	r1, sp, #292	; 0x124
 8013b62:	f8cd 8000 	str.w	r8, [sp]
 8013b66:	a829      	add	r0, sp, #164	; 0xa4
 8013b68:	f004 f80c 	bl	8017b84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013b6c:	4643      	mov	r3, r8
 8013b6e:	4622      	mov	r2, r4
 8013b70:	a949      	add	r1, sp, #292	; 0x124
 8013b72:	f8cd 9000 	str.w	r9, [sp]
 8013b76:	a839      	add	r0, sp, #228	; 0xe4
 8013b78:	f004 f804 	bl	8017b84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013b7c:	42af      	cmp	r7, r5
 8013b7e:	bfb5      	itete	lt
 8013b80:	2300      	movlt	r3, #0
 8013b82:	2301      	movge	r3, #1
 8013b84:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013b86:	930e      	strge	r3, [sp, #56]	; 0x38
 8013b88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013b8a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013b8e:	af12      	add	r7, sp, #72	; 0x48
 8013b90:	bfb9      	ittee	lt
 8013b92:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013b94:	ac19      	addlt	r4, sp, #100	; 0x64
 8013b96:	ad19      	addge	r5, sp, #100	; 0x64
 8013b98:	ac29      	addge	r4, sp, #164	; 0xa4
 8013b9a:	e887 0003 	stmia.w	r7, {r0, r1}
 8013b9e:	b928      	cbnz	r0, 8013bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013ba0:	4b80      	ldr	r3, [pc, #512]	; (8013da4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013ba2:	6818      	ldr	r0, [r3, #0]
 8013ba4:	6803      	ldr	r3, [r0, #0]
 8013ba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ba8:	4798      	blx	r3
 8013baa:	6038      	str	r0, [r7, #0]
 8013bac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013bae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013bb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013bb6:	930c      	str	r3, [sp, #48]	; 0x30
 8013bb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013bba:	6963      	ldr	r3, [r4, #20]
 8013bbc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013bbe:	440b      	add	r3, r1
 8013bc0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013bc4:	4408      	add	r0, r1
 8013bc6:	b200      	sxth	r0, r0
 8013bc8:	4283      	cmp	r3, r0
 8013bca:	900d      	str	r0, [sp, #52]	; 0x34
 8013bcc:	f280 80dd 	bge.w	8013d8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013bd0:	428b      	cmp	r3, r1
 8013bd2:	da08      	bge.n	8013be6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013bd4:	2a00      	cmp	r2, #0
 8013bd6:	dd06      	ble.n	8013be6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013bd8:	1acb      	subs	r3, r1, r3
 8013bda:	429a      	cmp	r2, r3
 8013bdc:	f2c0 80e4 	blt.w	8013da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013be0:	2b00      	cmp	r3, #0
 8013be2:	f300 80e2 	bgt.w	8013daa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013be6:	6967      	ldr	r7, [r4, #20]
 8013be8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013bea:	443b      	add	r3, r7
 8013bec:	461f      	mov	r7, r3
 8013bee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013bf0:	1bdf      	subs	r7, r3, r7
 8013bf2:	4297      	cmp	r7, r2
 8013bf4:	bfa8      	it	ge
 8013bf6:	4617      	movge	r7, r2
 8013bf8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013bfc:	2f00      	cmp	r7, #0
 8013bfe:	f340 8166 	ble.w	8013ece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013c02:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c04:	6829      	ldr	r1, [r5, #0]
 8013c06:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c0a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013c0e:	6820      	ldr	r0, [r4, #0]
 8013c10:	4411      	add	r1, r2
 8013c12:	4299      	cmp	r1, r3
 8013c14:	dd1a      	ble.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013c16:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013c1a:	440b      	add	r3, r1
 8013c1c:	4402      	add	r2, r0
 8013c1e:	b21b      	sxth	r3, r3
 8013c20:	429a      	cmp	r2, r3
 8013c22:	dc13      	bgt.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013c24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013c28:	681b      	ldr	r3, [r3, #0]
 8013c2a:	9206      	str	r2, [sp, #24]
 8013c2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013c2e:	9205      	str	r2, [sp, #20]
 8013c30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c32:	9500      	str	r5, [sp, #0]
 8013c34:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013c38:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013c3a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013c3c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013c40:	a912      	add	r1, sp, #72	; 0x48
 8013c42:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013c46:	aa49      	add	r2, sp, #292	; 0x124
 8013c48:	4623      	mov	r3, r4
 8013c4a:	47c8      	blx	r9
 8013c4c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013c50:	441a      	add	r2, r3
 8013c52:	6963      	ldr	r3, [r4, #20]
 8013c54:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013c58:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013c5c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013c60:	68a1      	ldr	r1, [r4, #8]
 8013c62:	ed94 6a08 	vldr	s12, [r4, #32]
 8013c66:	6022      	str	r2, [r4, #0]
 8013c68:	3301      	adds	r3, #1
 8013c6a:	6163      	str	r3, [r4, #20]
 8013c6c:	69a3      	ldr	r3, [r4, #24]
 8013c6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013c72:	3b01      	subs	r3, #1
 8013c74:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013c78:	61a3      	str	r3, [r4, #24]
 8013c7a:	6923      	ldr	r3, [r4, #16]
 8013c7c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013c80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013c84:	edd4 6a07 	vldr	s13, [r4, #28]
 8013c88:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013c8c:	440b      	add	r3, r1
 8013c8e:	68e1      	ldr	r1, [r4, #12]
 8013c90:	6123      	str	r3, [r4, #16]
 8013c92:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013c96:	428b      	cmp	r3, r1
 8013c98:	edc4 6a07 	vstr	s13, [r4, #28]
 8013c9c:	db15      	blt.n	8013cca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013c9e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013ca2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013ca6:	3201      	adds	r2, #1
 8013ca8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013cac:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013cb0:	6022      	str	r2, [r4, #0]
 8013cb2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013cb6:	1a5b      	subs	r3, r3, r1
 8013cb8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013cbc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013cc0:	6123      	str	r3, [r4, #16]
 8013cc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013cc6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013cca:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013cce:	441a      	add	r2, r3
 8013cd0:	696b      	ldr	r3, [r5, #20]
 8013cd2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013cd6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013cda:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013cde:	68a9      	ldr	r1, [r5, #8]
 8013ce0:	ed95 6a08 	vldr	s12, [r5, #32]
 8013ce4:	602a      	str	r2, [r5, #0]
 8013ce6:	3301      	adds	r3, #1
 8013ce8:	616b      	str	r3, [r5, #20]
 8013cea:	69ab      	ldr	r3, [r5, #24]
 8013cec:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013cf0:	3b01      	subs	r3, #1
 8013cf2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013cf6:	61ab      	str	r3, [r5, #24]
 8013cf8:	692b      	ldr	r3, [r5, #16]
 8013cfa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013cfe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d02:	edd5 6a07 	vldr	s13, [r5, #28]
 8013d06:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d0a:	440b      	add	r3, r1
 8013d0c:	68e9      	ldr	r1, [r5, #12]
 8013d0e:	612b      	str	r3, [r5, #16]
 8013d10:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d14:	428b      	cmp	r3, r1
 8013d16:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d1a:	db15      	blt.n	8013d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013d1c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013d20:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d24:	3201      	adds	r2, #1
 8013d26:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d2a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013d2e:	602a      	str	r2, [r5, #0]
 8013d30:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d34:	1a5b      	subs	r3, r3, r1
 8013d36:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d3a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013d3e:	612b      	str	r3, [r5, #16]
 8013d40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d44:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d48:	3f01      	subs	r7, #1
 8013d4a:	e757      	b.n	8013bfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013d4c:	4299      	cmp	r1, r3
 8013d4e:	dc13      	bgt.n	8013d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013d50:	429a      	cmp	r2, r3
 8013d52:	da14      	bge.n	8013d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013d54:	2502      	movs	r5, #2
 8013d56:	2703      	movs	r7, #3
 8013d58:	46a9      	mov	r9, r5
 8013d5a:	f04f 0800 	mov.w	r8, #0
 8013d5e:	f04f 0a01 	mov.w	sl, #1
 8013d62:	e6ef      	b.n	8013b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013d64:	2501      	movs	r5, #1
 8013d66:	2700      	movs	r7, #0
 8013d68:	46a9      	mov	r9, r5
 8013d6a:	46b8      	mov	r8, r7
 8013d6c:	f04f 0a02 	mov.w	sl, #2
 8013d70:	e6e8      	b.n	8013b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013d72:	2501      	movs	r5, #1
 8013d74:	2702      	movs	r7, #2
 8013d76:	e6e1      	b.n	8013b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013d78:	2500      	movs	r5, #0
 8013d7a:	2701      	movs	r7, #1
 8013d7c:	e7f4      	b.n	8013d68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013d7e:	2702      	movs	r7, #2
 8013d80:	2503      	movs	r5, #3
 8013d82:	f04f 0900 	mov.w	r9, #0
 8013d86:	46b8      	mov	r8, r7
 8013d88:	e7e9      	b.n	8013d5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013d8a:	4613      	mov	r3, r2
 8013d8c:	e728      	b.n	8013be0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013d8e:	bf00      	nop
 8013d90:	20012e54 	.word	0x20012e54
 8013d94:	fffd8f01 	.word	0xfffd8f01
 8013d98:	00027100 	.word	0x00027100
 8013d9c:	0004e1ff 	.word	0x0004e1ff
 8013da0:	0004e1fe 	.word	0x0004e1fe
 8013da4:	20012e5c 	.word	0x20012e5c
 8013da8:	4613      	mov	r3, r2
 8013daa:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013dac:	9111      	str	r1, [sp, #68]	; 0x44
 8013dae:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013db2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013db6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013db8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013dbc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013dc0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013dc4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013dc8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013dcc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013dd0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013dd4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013dd8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013ddc:	469e      	mov	lr, r3
 8013dde:	469c      	mov	ip, r3
 8013de0:	f04f 0900 	mov.w	r9, #0
 8013de4:	f1bc 0f00 	cmp.w	ip, #0
 8013de8:	d147      	bne.n	8013e7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013dea:	eb03 0c07 	add.w	ip, r3, r7
 8013dee:	1ad7      	subs	r7, r2, r3
 8013df0:	f1b9 0f00 	cmp.w	r9, #0
 8013df4:	d009      	beq.n	8013e0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013df6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013dfa:	9029      	str	r0, [sp, #164]	; 0xa4
 8013dfc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013e00:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013e04:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013e08:	912d      	str	r1, [sp, #180]	; 0xb4
 8013e0a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e0c:	9111      	str	r1, [sp, #68]	; 0x44
 8013e0e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e12:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013e16:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013e1a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013e1e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013e22:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013e26:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013e2a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013e2e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013e32:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013e36:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013e3a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013e3e:	f04f 0800 	mov.w	r8, #0
 8013e42:	f1be 0f00 	cmp.w	lr, #0
 8013e46:	d031      	beq.n	8013eac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013e48:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013e4a:	4431      	add	r1, r6
 8013e4c:	4549      	cmp	r1, r9
 8013e4e:	4450      	add	r0, sl
 8013e50:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013e54:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013e58:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013e5c:	db08      	blt.n	8013e70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013e5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013e62:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013e66:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013e6a:	3001      	adds	r0, #1
 8013e6c:	eba1 0109 	sub.w	r1, r1, r9
 8013e70:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e74:	f04f 0801 	mov.w	r8, #1
 8013e78:	e7e3      	b.n	8013e42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013e7a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013e7c:	4431      	add	r1, r6
 8013e7e:	4541      	cmp	r1, r8
 8013e80:	4450      	add	r0, sl
 8013e82:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013e86:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013e8a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013e8e:	db08      	blt.n	8013ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013e90:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013e94:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013e98:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013e9c:	3001      	adds	r0, #1
 8013e9e:	eba1 0108 	sub.w	r1, r1, r8
 8013ea2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013ea6:	f04f 0901 	mov.w	r9, #1
 8013eaa:	e79b      	b.n	8013de4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013eac:	449c      	add	ip, r3
 8013eae:	1aff      	subs	r7, r7, r3
 8013eb0:	f1b8 0f00 	cmp.w	r8, #0
 8013eb4:	d009      	beq.n	8013eca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013eb6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013eba:	9019      	str	r0, [sp, #100]	; 0x64
 8013ebc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013ec0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ec4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013ec8:	911d      	str	r1, [sp, #116]	; 0x74
 8013eca:	1ad2      	subs	r2, r2, r3
 8013ecc:	e68b      	b.n	8013be6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013ece:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ed0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013ed2:	2b00      	cmp	r3, #0
 8013ed4:	f000 80d1 	beq.w	801407a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013ed8:	ad19      	add	r5, sp, #100	; 0x64
 8013eda:	ac39      	add	r4, sp, #228	; 0xe4
 8013edc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013ede:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013ee2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013ee6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ee8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013eea:	6963      	ldr	r3, [r4, #20]
 8013eec:	440b      	add	r3, r1
 8013eee:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013ef2:	4408      	add	r0, r1
 8013ef4:	b200      	sxth	r0, r0
 8013ef6:	4283      	cmp	r3, r0
 8013ef8:	900d      	str	r0, [sp, #52]	; 0x34
 8013efa:	f280 80c1 	bge.w	8014080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013efe:	428b      	cmp	r3, r1
 8013f00:	da08      	bge.n	8013f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f02:	2a00      	cmp	r2, #0
 8013f04:	dd06      	ble.n	8013f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f06:	1acb      	subs	r3, r1, r3
 8013f08:	429a      	cmp	r2, r3
 8013f0a:	f2c0 80bb 	blt.w	8014084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013f0e:	2b00      	cmp	r3, #0
 8013f10:	f300 80b9 	bgt.w	8014086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013f14:	6967      	ldr	r7, [r4, #20]
 8013f16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f18:	443b      	add	r3, r7
 8013f1a:	461f      	mov	r7, r3
 8013f1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f1e:	1bdf      	subs	r7, r3, r7
 8013f20:	4297      	cmp	r7, r2
 8013f22:	bfa8      	it	ge
 8013f24:	4617      	movge	r7, r2
 8013f26:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013f2a:	2f00      	cmp	r7, #0
 8013f2c:	f340 813c 	ble.w	80141a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013f30:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f32:	6829      	ldr	r1, [r5, #0]
 8013f34:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f38:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013f3c:	6820      	ldr	r0, [r4, #0]
 8013f3e:	4411      	add	r1, r2
 8013f40:	4299      	cmp	r1, r3
 8013f42:	dd1a      	ble.n	8013f7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013f44:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013f48:	440b      	add	r3, r1
 8013f4a:	4402      	add	r2, r0
 8013f4c:	b21b      	sxth	r3, r3
 8013f4e:	429a      	cmp	r2, r3
 8013f50:	dc13      	bgt.n	8013f7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013f52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f56:	681b      	ldr	r3, [r3, #0]
 8013f58:	9206      	str	r2, [sp, #24]
 8013f5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013f5c:	9205      	str	r2, [sp, #20]
 8013f5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013f60:	9500      	str	r5, [sp, #0]
 8013f62:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013f66:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013f68:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013f6a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013f6e:	a912      	add	r1, sp, #72	; 0x48
 8013f70:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013f74:	aa49      	add	r2, sp, #292	; 0x124
 8013f76:	4623      	mov	r3, r4
 8013f78:	47c8      	blx	r9
 8013f7a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013f7e:	441a      	add	r2, r3
 8013f80:	6963      	ldr	r3, [r4, #20]
 8013f82:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013f86:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013f8a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013f8e:	68a1      	ldr	r1, [r4, #8]
 8013f90:	ed94 6a08 	vldr	s12, [r4, #32]
 8013f94:	6022      	str	r2, [r4, #0]
 8013f96:	3301      	adds	r3, #1
 8013f98:	6163      	str	r3, [r4, #20]
 8013f9a:	69a3      	ldr	r3, [r4, #24]
 8013f9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013fa0:	3b01      	subs	r3, #1
 8013fa2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013fa6:	61a3      	str	r3, [r4, #24]
 8013fa8:	6923      	ldr	r3, [r4, #16]
 8013faa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013fae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013fb2:	edd4 6a07 	vldr	s13, [r4, #28]
 8013fb6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013fba:	440b      	add	r3, r1
 8013fbc:	68e1      	ldr	r1, [r4, #12]
 8013fbe:	6123      	str	r3, [r4, #16]
 8013fc0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013fc4:	428b      	cmp	r3, r1
 8013fc6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fca:	db15      	blt.n	8013ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013fcc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013fd0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013fd4:	3201      	adds	r2, #1
 8013fd6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fda:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013fde:	6022      	str	r2, [r4, #0]
 8013fe0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013fe4:	1a5b      	subs	r3, r3, r1
 8013fe6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013fea:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013fee:	6123      	str	r3, [r4, #16]
 8013ff0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013ff4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013ff8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013ffc:	441a      	add	r2, r3
 8013ffe:	696b      	ldr	r3, [r5, #20]
 8014000:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014004:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014008:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801400c:	68a9      	ldr	r1, [r5, #8]
 801400e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014012:	602a      	str	r2, [r5, #0]
 8014014:	3301      	adds	r3, #1
 8014016:	616b      	str	r3, [r5, #20]
 8014018:	69ab      	ldr	r3, [r5, #24]
 801401a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801401e:	3b01      	subs	r3, #1
 8014020:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014024:	61ab      	str	r3, [r5, #24]
 8014026:	692b      	ldr	r3, [r5, #16]
 8014028:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801402c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014030:	edd5 6a07 	vldr	s13, [r5, #28]
 8014034:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014038:	440b      	add	r3, r1
 801403a:	68e9      	ldr	r1, [r5, #12]
 801403c:	612b      	str	r3, [r5, #16]
 801403e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014042:	428b      	cmp	r3, r1
 8014044:	edc5 6a07 	vstr	s13, [r5, #28]
 8014048:	db15      	blt.n	8014076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801404a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801404e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014052:	3201      	adds	r2, #1
 8014054:	edc5 6a07 	vstr	s13, [r5, #28]
 8014058:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801405c:	602a      	str	r2, [r5, #0]
 801405e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014062:	1a5b      	subs	r3, r3, r1
 8014064:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014068:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801406c:	612b      	str	r3, [r5, #16]
 801406e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014072:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014076:	3f01      	subs	r7, #1
 8014078:	e757      	b.n	8013f2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801407a:	ad39      	add	r5, sp, #228	; 0xe4
 801407c:	ac19      	add	r4, sp, #100	; 0x64
 801407e:	e72d      	b.n	8013edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014080:	4613      	mov	r3, r2
 8014082:	e744      	b.n	8013f0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014084:	4613      	mov	r3, r2
 8014086:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801408a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801408c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014090:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014094:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014098:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801409c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80140a0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80140a4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80140a8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80140aa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80140ae:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80140b2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80140b6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80140ba:	960e      	str	r6, [sp, #56]	; 0x38
 80140bc:	469e      	mov	lr, r3
 80140be:	461f      	mov	r7, r3
 80140c0:	f04f 0900 	mov.w	r9, #0
 80140c4:	2f00      	cmp	r7, #0
 80140c6:	d146      	bne.n	8014156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80140c8:	449c      	add	ip, r3
 80140ca:	1ad7      	subs	r7, r2, r3
 80140cc:	f1b9 0f00 	cmp.w	r9, #0
 80140d0:	d009      	beq.n	80140e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80140d2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80140d6:	9039      	str	r0, [sp, #228]	; 0xe4
 80140d8:	913d      	str	r1, [sp, #244]	; 0xf4
 80140da:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80140de:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80140e2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80140e6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80140e8:	910e      	str	r1, [sp, #56]	; 0x38
 80140ea:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80140ee:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80140f2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80140f6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80140fa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80140fe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014102:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014106:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801410a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801410e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014112:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014116:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801411a:	f04f 0800 	mov.w	r8, #0
 801411e:	f1be 0f00 	cmp.w	lr, #0
 8014122:	d030      	beq.n	8014186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014124:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014126:	4431      	add	r1, r6
 8014128:	4549      	cmp	r1, r9
 801412a:	4450      	add	r0, sl
 801412c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014130:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014134:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014138:	db08      	blt.n	801414c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801413a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801413e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014142:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014146:	3001      	adds	r0, #1
 8014148:	eba1 0109 	sub.w	r1, r1, r9
 801414c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014150:	f04f 0801 	mov.w	r8, #1
 8014154:	e7e3      	b.n	801411e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014156:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014158:	4431      	add	r1, r6
 801415a:	4541      	cmp	r1, r8
 801415c:	4450      	add	r0, sl
 801415e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014162:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014166:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801416a:	db08      	blt.n	801417e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801416c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014170:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014174:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014178:	3001      	adds	r0, #1
 801417a:	eba1 0108 	sub.w	r1, r1, r8
 801417e:	3f01      	subs	r7, #1
 8014180:	f04f 0901 	mov.w	r9, #1
 8014184:	e79e      	b.n	80140c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014186:	449c      	add	ip, r3
 8014188:	1aff      	subs	r7, r7, r3
 801418a:	f1b8 0f00 	cmp.w	r8, #0
 801418e:	d009      	beq.n	80141a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014190:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014194:	9019      	str	r0, [sp, #100]	; 0x64
 8014196:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801419a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801419e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80141a2:	911d      	str	r1, [sp, #116]	; 0x74
 80141a4:	1ad2      	subs	r2, r2, r3
 80141a6:	e6b5      	b.n	8013f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80141a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80141aa:	681b      	ldr	r3, [r3, #0]
 80141ac:	b923      	cbnz	r3, 80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80141ae:	4b04      	ldr	r3, [pc, #16]	; (80141c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80141b0:	6818      	ldr	r0, [r3, #0]
 80141b2:	6803      	ldr	r3, [r0, #0]
 80141b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141b6:	4798      	blx	r3
 80141b8:	b05b      	add	sp, #364	; 0x16c
 80141ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141be:	bf00      	nop
 80141c0:	20012e5c 	.word	0x20012e5c

080141c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80141c4:	b570      	push	{r4, r5, r6, lr}
 80141c6:	4604      	mov	r4, r0
 80141c8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80141cc:	9805      	ldr	r0, [sp, #20]
 80141ce:	6061      	str	r1, [r4, #4]
 80141d0:	2500      	movs	r5, #0
 80141d2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80141d6:	8263      	strh	r3, [r4, #18]
 80141d8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80141dc:	8025      	strh	r5, [r4, #0]
 80141de:	7221      	strb	r1, [r4, #8]
 80141e0:	7266      	strb	r6, [r4, #9]
 80141e2:	60e0      	str	r0, [r4, #12]
 80141e4:	8222      	strh	r2, [r4, #16]
 80141e6:	82a3      	strh	r3, [r4, #20]
 80141e8:	82e5      	strh	r5, [r4, #22]
 80141ea:	8325      	strh	r5, [r4, #24]
 80141ec:	8365      	strh	r5, [r4, #26]
 80141ee:	83a5      	strh	r5, [r4, #28]
 80141f0:	83e5      	strh	r5, [r4, #30]
 80141f2:	8425      	strh	r5, [r4, #32]
 80141f4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80141f8:	b32e      	cbz	r6, 8014246 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80141fa:	6803      	ldr	r3, [r0, #0]
 80141fc:	695b      	ldr	r3, [r3, #20]
 80141fe:	4798      	blx	r3
 8014200:	4606      	mov	r6, r0
 8014202:	b300      	cbz	r0, 8014246 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014204:	68e0      	ldr	r0, [r4, #12]
 8014206:	6803      	ldr	r3, [r0, #0]
 8014208:	4631      	mov	r1, r6
 801420a:	68db      	ldr	r3, [r3, #12]
 801420c:	4798      	blx	r3
 801420e:	4605      	mov	r5, r0
 8014210:	b1c8      	cbz	r0, 8014246 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014212:	7b43      	ldrb	r3, [r0, #13]
 8014214:	7a82      	ldrb	r2, [r0, #10]
 8014216:	005b      	lsls	r3, r3, #1
 8014218:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801421c:	4313      	orrs	r3, r2
 801421e:	8423      	strh	r3, [r4, #32]
 8014220:	7a63      	ldrb	r3, [r4, #9]
 8014222:	2b06      	cmp	r3, #6
 8014224:	d10f      	bne.n	8014246 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014226:	68e0      	ldr	r0, [r4, #12]
 8014228:	6803      	ldr	r3, [r0, #0]
 801422a:	462a      	mov	r2, r5
 801422c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801422e:	4631      	mov	r1, r6
 8014230:	4798      	blx	r3
 8014232:	7b6b      	ldrb	r3, [r5, #13]
 8014234:	005b      	lsls	r3, r3, #1
 8014236:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801423a:	7aab      	ldrb	r3, [r5, #10]
 801423c:	4313      	orrs	r3, r2
 801423e:	4418      	add	r0, r3
 8014240:	8c23      	ldrh	r3, [r4, #32]
 8014242:	4418      	add	r0, r3
 8014244:	8420      	strh	r0, [r4, #32]
 8014246:	4620      	mov	r0, r4
 8014248:	bd70      	pop	{r4, r5, r6, pc}

0801424a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801424a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801424e:	2400      	movs	r4, #0
 8014250:	b085      	sub	sp, #20
 8014252:	4681      	mov	r9, r0
 8014254:	4688      	mov	r8, r1
 8014256:	4692      	mov	sl, r2
 8014258:	469b      	mov	fp, r3
 801425a:	4627      	mov	r7, r4
 801425c:	4625      	mov	r5, r4
 801425e:	4626      	mov	r6, r4
 8014260:	4554      	cmp	r4, sl
 8014262:	da2a      	bge.n	80142ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014264:	2300      	movs	r3, #0
 8014266:	9303      	str	r3, [sp, #12]
 8014268:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801426c:	429d      	cmp	r5, r3
 801426e:	d004      	beq.n	801427a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014270:	f242 030b 	movw	r3, #8203	; 0x200b
 8014274:	429d      	cmp	r5, r3
 8014276:	bf18      	it	ne
 8014278:	462f      	movne	r7, r5
 801427a:	ab03      	add	r3, sp, #12
 801427c:	4642      	mov	r2, r8
 801427e:	4659      	mov	r1, fp
 8014280:	4648      	mov	r0, r9
 8014282:	f003 f965 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014286:	4605      	mov	r5, r0
 8014288:	b1b8      	cbz	r0, 80142ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801428a:	280a      	cmp	r0, #10
 801428c:	d015      	beq.n	80142ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801428e:	9a03      	ldr	r2, [sp, #12]
 8014290:	b18a      	cbz	r2, 80142b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014292:	7b50      	ldrb	r0, [r2, #13]
 8014294:	7a93      	ldrb	r3, [r2, #10]
 8014296:	8895      	ldrh	r5, [r2, #4]
 8014298:	0040      	lsls	r0, r0, #1
 801429a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801429e:	4303      	orrs	r3, r0
 80142a0:	9301      	str	r3, [sp, #4]
 80142a2:	f8d8 3000 	ldr.w	r3, [r8]
 80142a6:	4639      	mov	r1, r7
 80142a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80142aa:	4640      	mov	r0, r8
 80142ac:	4798      	blx	r3
 80142ae:	9b01      	ldr	r3, [sp, #4]
 80142b0:	4418      	add	r0, r3
 80142b2:	4406      	add	r6, r0
 80142b4:	b2b6      	uxth	r6, r6
 80142b6:	3401      	adds	r4, #1
 80142b8:	e7d2      	b.n	8014260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80142ba:	4630      	mov	r0, r6
 80142bc:	b005      	add	sp, #20
 80142be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080142c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80142c2:	2a02      	cmp	r2, #2
 80142c4:	b530      	push	{r4, r5, lr}
 80142c6:	d011      	beq.n	80142ec <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80142c8:	2a03      	cmp	r2, #3
 80142ca:	d01c      	beq.n	8014306 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80142cc:	2a01      	cmp	r2, #1
 80142ce:	d10c      	bne.n	80142ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80142d0:	888b      	ldrh	r3, [r1, #4]
 80142d2:	8801      	ldrh	r1, [r0, #0]
 80142d4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80142d8:	8844      	ldrh	r4, [r0, #2]
 80142da:	8004      	strh	r4, [r0, #0]
 80142dc:	1a5b      	subs	r3, r3, r1
 80142de:	1a9b      	subs	r3, r3, r2
 80142e0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80142e4:	8043      	strh	r3, [r0, #2]
 80142e6:	8081      	strh	r1, [r0, #4]
 80142e8:	80c2      	strh	r2, [r0, #6]
 80142ea:	bd30      	pop	{r4, r5, pc}
 80142ec:	88cb      	ldrh	r3, [r1, #6]
 80142ee:	8842      	ldrh	r2, [r0, #2]
 80142f0:	1a9b      	subs	r3, r3, r2
 80142f2:	88c2      	ldrh	r2, [r0, #6]
 80142f4:	1a9b      	subs	r3, r3, r2
 80142f6:	888a      	ldrh	r2, [r1, #4]
 80142f8:	8801      	ldrh	r1, [r0, #0]
 80142fa:	8043      	strh	r3, [r0, #2]
 80142fc:	1a52      	subs	r2, r2, r1
 80142fe:	8881      	ldrh	r1, [r0, #4]
 8014300:	1a52      	subs	r2, r2, r1
 8014302:	8002      	strh	r2, [r0, #0]
 8014304:	e7f1      	b.n	80142ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014306:	88cb      	ldrh	r3, [r1, #6]
 8014308:	8841      	ldrh	r1, [r0, #2]
 801430a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801430e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014312:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014316:	8045      	strh	r5, [r0, #2]
 8014318:	1a5b      	subs	r3, r3, r1
 801431a:	1a9b      	subs	r3, r3, r2
 801431c:	8003      	strh	r3, [r0, #0]
 801431e:	8082      	strh	r2, [r0, #4]
 8014320:	80c4      	strh	r4, [r0, #6]
 8014322:	e7e2      	b.n	80142ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014324 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014328:	b09f      	sub	sp, #124	; 0x7c
 801432a:	9116      	str	r1, [sp, #88]	; 0x58
 801432c:	9317      	str	r3, [sp, #92]	; 0x5c
 801432e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014330:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014332:	8809      	ldrh	r1, [r1, #0]
 8014334:	889b      	ldrh	r3, [r3, #4]
 8014336:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801433a:	9212      	str	r2, [sp, #72]	; 0x48
 801433c:	440b      	add	r3, r1
 801433e:	b21b      	sxth	r3, r3
 8014340:	9310      	str	r3, [sp, #64]	; 0x40
 8014342:	f8d8 3000 	ldr.w	r3, [r8]
 8014346:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801434a:	7b19      	ldrb	r1, [r3, #12]
 801434c:	7adb      	ldrb	r3, [r3, #11]
 801434e:	9011      	str	r0, [sp, #68]	; 0x44
 8014350:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014354:	9114      	str	r1, [sp, #80]	; 0x50
 8014356:	9315      	str	r3, [sp, #84]	; 0x54
 8014358:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801435c:	2a00      	cmp	r2, #0
 801435e:	d06a      	beq.n	8014436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014360:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014364:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014366:	2b06      	cmp	r3, #6
 8014368:	bf14      	ite	ne
 801436a:	2301      	movne	r3, #1
 801436c:	2302      	moveq	r3, #2
 801436e:	4413      	add	r3, r2
 8014370:	f04f 0900 	mov.w	r9, #0
 8014374:	930f      	str	r3, [sp, #60]	; 0x3c
 8014376:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801437a:	464c      	mov	r4, r9
 801437c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014380:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014384:	4293      	cmp	r3, r2
 8014386:	f280 808f 	bge.w	80144a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801438a:	2300      	movs	r3, #0
 801438c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014390:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014394:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014398:	429c      	cmp	r4, r3
 801439a:	d006      	beq.n	80143aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801439c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801439e:	f242 020b 	movw	r2, #8203	; 0x200b
 80143a2:	4294      	cmp	r4, r2
 80143a4:	bf18      	it	ne
 80143a6:	4623      	movne	r3, r4
 80143a8:	930d      	str	r3, [sp, #52]	; 0x34
 80143aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80143ac:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80143ae:	f8d8 2000 	ldr.w	r2, [r8]
 80143b2:	428b      	cmp	r3, r1
 80143b4:	db41      	blt.n	801443a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80143b6:	6813      	ldr	r3, [r2, #0]
 80143b8:	4610      	mov	r0, r2
 80143ba:	695b      	ldr	r3, [r3, #20]
 80143bc:	4798      	blx	r3
 80143be:	4604      	mov	r4, r0
 80143c0:	f8d8 0000 	ldr.w	r0, [r8]
 80143c4:	6803      	ldr	r3, [r0, #0]
 80143c6:	aa1d      	add	r2, sp, #116	; 0x74
 80143c8:	689d      	ldr	r5, [r3, #8]
 80143ca:	4621      	mov	r1, r4
 80143cc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80143d0:	47a8      	blx	r5
 80143d2:	901c      	str	r0, [sp, #112]	; 0x70
 80143d4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80143d8:	429c      	cmp	r4, r3
 80143da:	f000 80eb 	beq.w	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80143de:	f242 030b 	movw	r3, #8203	; 0x200b
 80143e2:	429c      	cmp	r4, r3
 80143e4:	f000 80e6 	beq.w	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80143e8:	2c00      	cmp	r4, #0
 80143ea:	f000 80f8 	beq.w	80145de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80143ee:	2c0a      	cmp	r4, #10
 80143f0:	d060      	beq.n	80144b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80143f2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80143f4:	b36a      	cbz	r2, 8014452 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80143f6:	8894      	ldrh	r4, [r2, #4]
 80143f8:	f1bb 0f00 	cmp.w	fp, #0
 80143fc:	d03b      	beq.n	8014476 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80143fe:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014402:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014406:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801440a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801440e:	f1bb 0f01 	cmp.w	fp, #1
 8014412:	ea49 0903 	orr.w	r9, r9, r3
 8014416:	d134      	bne.n	8014482 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014418:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801441a:	eba6 0609 	sub.w	r6, r6, r9
 801441e:	2b00      	cmp	r3, #0
 8014420:	d14f      	bne.n	80144c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014422:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014424:	eb09 0306 	add.w	r3, r9, r6
 8014428:	4413      	add	r3, r2
 801442a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801442c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014430:	4293      	cmp	r3, r2
 8014432:	da51      	bge.n	80144d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014434:	e038      	b.n	80144a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014436:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014438:	e79a      	b.n	8014370 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801443a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801443e:	9301      	str	r3, [sp, #4]
 8014440:	ab1d      	add	r3, sp, #116	; 0x74
 8014442:	9300      	str	r3, [sp, #0]
 8014444:	4659      	mov	r1, fp
 8014446:	ab1c      	add	r3, sp, #112	; 0x70
 8014448:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801444a:	f003 f8ca 	bl	80175e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801444e:	4604      	mov	r4, r0
 8014450:	e7c0      	b.n	80143d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014452:	f8d8 0000 	ldr.w	r0, [r8]
 8014456:	6803      	ldr	r3, [r0, #0]
 8014458:	691b      	ldr	r3, [r3, #16]
 801445a:	4798      	blx	r3
 801445c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014460:	4298      	cmp	r0, r3
 8014462:	f000 80a7 	beq.w	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014466:	f242 030b 	movw	r3, #8203	; 0x200b
 801446a:	4298      	cmp	r0, r3
 801446c:	f000 80a2 	beq.w	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014470:	f1bb 0f00 	cmp.w	fp, #0
 8014474:	d100      	bne.n	8014478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014476:	444e      	add	r6, r9
 8014478:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801447a:	2a00      	cmp	r2, #0
 801447c:	d1bf      	bne.n	80143fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801447e:	4691      	mov	r9, r2
 8014480:	e098      	b.n	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014482:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014484:	2b00      	cmp	r3, #0
 8014486:	f000 80ac 	beq.w	80145e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801448a:	f1bb 0f00 	cmp.w	fp, #0
 801448e:	d118      	bne.n	80144c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014490:	f8d8 0000 	ldr.w	r0, [r8]
 8014494:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014496:	6803      	ldr	r3, [r0, #0]
 8014498:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801449a:	4798      	blx	r3
 801449c:	4406      	add	r6, r0
 801449e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80144a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144a2:	1af3      	subs	r3, r6, r3
 80144a4:	4293      	cmp	r3, r2
 80144a6:	dd17      	ble.n	80144d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80144a8:	2c00      	cmp	r4, #0
 80144aa:	f000 8098 	beq.w	80145de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80144ae:	2c0a      	cmp	r4, #10
 80144b0:	f040 8086 	bne.w	80145c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80144b4:	240a      	movs	r4, #10
 80144b6:	fab4 f084 	clz	r0, r4
 80144ba:	0940      	lsrs	r0, r0, #5
 80144bc:	b01f      	add	sp, #124	; 0x7c
 80144be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144c2:	f8d8 0000 	ldr.w	r0, [r8]
 80144c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80144c8:	6803      	ldr	r3, [r0, #0]
 80144ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144cc:	4798      	blx	r3
 80144ce:	f1bb 0f01 	cmp.w	fp, #1
 80144d2:	eba6 0600 	sub.w	r6, r6, r0
 80144d6:	d0a4      	beq.n	8014422 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80144d8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80144da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80144dc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80144e0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80144e4:	7b43      	ldrb	r3, [r0, #13]
 80144e6:	015b      	lsls	r3, r3, #5
 80144e8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80144ec:	7983      	ldrb	r3, [r0, #6]
 80144ee:	4431      	add	r1, r6
 80144f0:	4313      	orrs	r3, r2
 80144f2:	440b      	add	r3, r1
 80144f4:	42bb      	cmp	r3, r7
 80144f6:	db5d      	blt.n	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80144f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80144fa:	4299      	cmp	r1, r3
 80144fc:	da5a      	bge.n	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80144fe:	f8d8 0000 	ldr.w	r0, [r8]
 8014502:	6803      	ldr	r3, [r0, #0]
 8014504:	42b7      	cmp	r7, r6
 8014506:	bfc8      	it	gt
 8014508:	1bbf      	subgt	r7, r7, r6
 801450a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801450c:	bfcc      	ite	gt
 801450e:	b2bf      	uxthgt	r7, r7
 8014510:	2700      	movle	r7, #0
 8014512:	4798      	blx	r3
 8014514:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014516:	7b5a      	ldrb	r2, [r3, #13]
 8014518:	00d1      	lsls	r1, r2, #3
 801451a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801451e:	7a19      	ldrb	r1, [r3, #8]
 8014520:	4329      	orrs	r1, r5
 8014522:	0655      	lsls	r5, r2, #25
 8014524:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014526:	bf44      	itt	mi
 8014528:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801452c:	b209      	sxthmi	r1, r1
 801452e:	1945      	adds	r5, r0, r5
 8014530:	1a6d      	subs	r5, r5, r1
 8014532:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014534:	b2ad      	uxth	r5, r5
 8014536:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801453a:	fa0f fa85 	sxth.w	sl, r5
 801453e:	4551      	cmp	r1, sl
 8014540:	dd3c      	ble.n	80145bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014542:	0112      	lsls	r2, r2, #4
 8014544:	79d8      	ldrb	r0, [r3, #7]
 8014546:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801454a:	4302      	orrs	r2, r0
 801454c:	4492      	add	sl, r2
 801454e:	4551      	cmp	r1, sl
 8014550:	dc30      	bgt.n	80145b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014552:	1b4d      	subs	r5, r1, r5
 8014554:	b22d      	sxth	r5, r5
 8014556:	468a      	mov	sl, r1
 8014558:	9319      	str	r3, [sp, #100]	; 0x64
 801455a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801455c:	f8d8 0000 	ldr.w	r0, [r8]
 8014560:	681a      	ldr	r2, [r3, #0]
 8014562:	6801      	ldr	r1, [r0, #0]
 8014564:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014566:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014568:	9313      	str	r3, [sp, #76]	; 0x4c
 801456a:	9218      	str	r2, [sp, #96]	; 0x60
 801456c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801456e:	4788      	blx	r1
 8014570:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014574:	910b      	str	r1, [sp, #44]	; 0x2c
 8014576:	f898 100e 	ldrb.w	r1, [r8, #14]
 801457a:	910a      	str	r1, [sp, #40]	; 0x28
 801457c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014580:	9109      	str	r1, [sp, #36]	; 0x24
 8014582:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014586:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014588:	9305      	str	r3, [sp, #20]
 801458a:	b2ad      	uxth	r5, r5
 801458c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014590:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014594:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014596:	9304      	str	r3, [sp, #16]
 8014598:	4437      	add	r7, r6
 801459a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801459c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801459e:	9206      	str	r2, [sp, #24]
 80145a0:	b23f      	sxth	r7, r7
 80145a2:	f8cd a004 	str.w	sl, [sp, #4]
 80145a6:	9700      	str	r7, [sp, #0]
 80145a8:	681a      	ldr	r2, [r3, #0]
 80145aa:	9916      	ldr	r1, [sp, #88]	; 0x58
 80145ac:	685b      	ldr	r3, [r3, #4]
 80145ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 80145b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80145b2:	47a8      	blx	r5
 80145b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145b6:	3301      	adds	r3, #1
 80145b8:	930e      	str	r3, [sp, #56]	; 0x38
 80145ba:	e6e1      	b.n	8014380 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80145bc:	2500      	movs	r5, #0
 80145be:	e7cb      	b.n	8014558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80145c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80145c2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80145c4:	3501      	adds	r5, #1
 80145c6:	429d      	cmp	r5, r3
 80145c8:	f6bf af75 	bge.w	80144b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80145cc:	4659      	mov	r1, fp
 80145ce:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80145d0:	f7f3 fd5c 	bl	800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80145d4:	4604      	mov	r4, r0
 80145d6:	b110      	cbz	r0, 80145de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80145d8:	280a      	cmp	r0, #10
 80145da:	d1f2      	bne.n	80145c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80145dc:	e76a      	b.n	80144b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80145de:	2400      	movs	r4, #0
 80145e0:	e769      	b.n	80144b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80145e2:	f1bb 0f00 	cmp.w	fp, #0
 80145e6:	f43f af5a 	beq.w	801449e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80145ea:	e775      	b.n	80144d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080145ec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80145ec:	b530      	push	{r4, r5, lr}
 80145ee:	8ac4      	ldrh	r4, [r0, #22]
 80145f0:	8b45      	ldrh	r5, [r0, #26]
 80145f2:	8343      	strh	r3, [r0, #26]
 80145f4:	442c      	add	r4, r5
 80145f6:	1ae4      	subs	r4, r4, r3
 80145f8:	82c4      	strh	r4, [r0, #22]
 80145fa:	8b83      	ldrh	r3, [r0, #28]
 80145fc:	8b04      	ldrh	r4, [r0, #24]
 80145fe:	4422      	add	r2, r4
 8014600:	440c      	add	r4, r1
 8014602:	1a59      	subs	r1, r3, r1
 8014604:	83c2      	strh	r2, [r0, #30]
 8014606:	8304      	strh	r4, [r0, #24]
 8014608:	8381      	strh	r1, [r0, #28]
 801460a:	bd30      	pop	{r4, r5, pc}

0801460c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801460c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014610:	4604      	mov	r4, r0
 8014612:	8a47      	ldrh	r7, [r0, #18]
 8014614:	68c0      	ldr	r0, [r0, #12]
 8014616:	6803      	ldr	r3, [r0, #0]
 8014618:	b085      	sub	sp, #20
 801461a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801461c:	4798      	blx	r3
 801461e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014622:	7a63      	ldrb	r3, [r4, #9]
 8014624:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014628:	42b7      	cmp	r7, r6
 801462a:	f103 33ff 	add.w	r3, r3, #4294967295
 801462e:	bfac      	ite	ge
 8014630:	f04f 0900 	movge.w	r9, #0
 8014634:	f04f 0901 	movlt.w	r9, #1
 8014638:	2b05      	cmp	r3, #5
 801463a:	d804      	bhi.n	8014646 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801463c:	e8df f003 	tbb	[pc, r3]
 8014640:	470e0854 	.word	0x470e0854
 8014644:	4c4c      	.short	0x4c4c
 8014646:	2500      	movs	r5, #0
 8014648:	46a9      	mov	r9, r5
 801464a:	462e      	mov	r6, r5
 801464c:	462f      	mov	r7, r5
 801464e:	e00d      	b.n	801466c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014650:	42b7      	cmp	r7, r6
 8014652:	bfb4      	ite	lt
 8014654:	2600      	movlt	r6, #0
 8014656:	2601      	movge	r6, #1
 8014658:	2500      	movs	r5, #0
 801465a:	e7f7      	b.n	801464c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801465c:	42b7      	cmp	r7, r6
 801465e:	464d      	mov	r5, r9
 8014660:	f04f 0900 	mov.w	r9, #0
 8014664:	bfb4      	ite	lt
 8014666:	2600      	movlt	r6, #0
 8014668:	2601      	movge	r6, #1
 801466a:	464f      	mov	r7, r9
 801466c:	f04f 0800 	mov.w	r8, #0
 8014670:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014674:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014678:	f8cd 8004 	str.w	r8, [sp, #4]
 801467c:	2300      	movs	r3, #0
 801467e:	9303      	str	r3, [sp, #12]
 8014680:	8823      	ldrh	r3, [r4, #0]
 8014682:	2b20      	cmp	r3, #32
 8014684:	d034      	beq.n	80146f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014686:	f242 010b 	movw	r1, #8203	; 0x200b
 801468a:	1a5a      	subs	r2, r3, r1
 801468c:	f1d2 0a00 	rsbs	sl, r2, #0
 8014690:	eb4a 0a02 	adc.w	sl, sl, r2
 8014694:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014698:	4293      	cmp	r3, r2
 801469a:	d009      	beq.n	80146b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801469c:	428b      	cmp	r3, r1
 801469e:	9a01      	ldr	r2, [sp, #4]
 80146a0:	bf18      	it	ne
 80146a2:	461a      	movne	r2, r3
 80146a4:	9201      	str	r2, [sp, #4]
 80146a6:	bf0c      	ite	eq
 80146a8:	f04f 0a01 	moveq.w	sl, #1
 80146ac:	f04f 0a00 	movne.w	sl, #0
 80146b0:	ab03      	add	r3, sp, #12
 80146b2:	68e2      	ldr	r2, [r4, #12]
 80146b4:	7a21      	ldrb	r1, [r4, #8]
 80146b6:	6860      	ldr	r0, [r4, #4]
 80146b8:	f002 ff4a 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80146bc:	8020      	strh	r0, [r4, #0]
 80146be:	b9d8      	cbnz	r0, 80146f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80146c0:	8ba2      	ldrh	r2, [r4, #28]
 80146c2:	2300      	movs	r3, #0
 80146c4:	4611      	mov	r1, r2
 80146c6:	4620      	mov	r0, r4
 80146c8:	f7ff ff90 	bl	80145ec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80146cc:	e06e      	b.n	80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80146ce:	2500      	movs	r5, #0
 80146d0:	46a9      	mov	r9, r5
 80146d2:	462e      	mov	r6, r5
 80146d4:	2701      	movs	r7, #1
 80146d6:	e7c9      	b.n	801466c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80146d8:	42b7      	cmp	r7, r6
 80146da:	f04f 0500 	mov.w	r5, #0
 80146de:	bfb4      	ite	lt
 80146e0:	2700      	movlt	r7, #0
 80146e2:	2701      	movge	r7, #1
 80146e4:	462e      	mov	r6, r5
 80146e6:	e7c1      	b.n	801466c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80146e8:	2500      	movs	r5, #0
 80146ea:	46a9      	mov	r9, r5
 80146ec:	2601      	movs	r6, #1
 80146ee:	e7ad      	b.n	801464c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80146f0:	9301      	str	r3, [sp, #4]
 80146f2:	f04f 0a01 	mov.w	sl, #1
 80146f6:	e7db      	b.n	80146b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80146f8:	8b63      	ldrh	r3, [r4, #26]
 80146fa:	280a      	cmp	r0, #10
 80146fc:	f103 0301 	add.w	r3, r3, #1
 8014700:	8363      	strh	r3, [r4, #26]
 8014702:	d0dd      	beq.n	80146c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014704:	9a03      	ldr	r2, [sp, #12]
 8014706:	bb62      	cbnz	r2, 8014762 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014708:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801470c:	4298      	cmp	r0, r3
 801470e:	d003      	beq.n	8014718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014710:	f242 030b 	movw	r3, #8203	; 0x200b
 8014714:	4298      	cmp	r0, r3
 8014716:	d1b1      	bne.n	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014718:	8823      	ldrh	r3, [r4, #0]
 801471a:	8ba1      	ldrh	r1, [r4, #28]
 801471c:	2b20      	cmp	r3, #32
 801471e:	d003      	beq.n	8014728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014720:	f242 000b 	movw	r0, #8203	; 0x200b
 8014724:	4283      	cmp	r3, r0
 8014726:	d131      	bne.n	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014728:	f1ba 0f00 	cmp.w	sl, #0
 801472c:	bf0a      	itet	eq
 801472e:	4688      	moveq	r8, r1
 8014730:	4650      	movne	r0, sl
 8014732:	2001      	moveq	r0, #1
 8014734:	440a      	add	r2, r1
 8014736:	8b23      	ldrh	r3, [r4, #24]
 8014738:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801473c:	b292      	uxth	r2, r2
 801473e:	83a2      	strh	r2, [r4, #28]
 8014740:	4413      	add	r3, r2
 8014742:	f1b9 0f00 	cmp.w	r9, #0
 8014746:	d102      	bne.n	801474e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014748:	2d00      	cmp	r5, #0
 801474a:	d042      	beq.n	80147d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801474c:	b300      	cbz	r0, 8014790 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801474e:	8c21      	ldrh	r1, [r4, #32]
 8014750:	4419      	add	r1, r3
 8014752:	458c      	cmp	ip, r1
 8014754:	da37      	bge.n	80147c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014756:	8ae1      	ldrh	r1, [r4, #22]
 8014758:	2900      	cmp	r1, #0
 801475a:	d034      	beq.n	80147c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801475c:	4563      	cmp	r3, ip
 801475e:	dd8d      	ble.n	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014760:	e01d      	b.n	801479e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014762:	8893      	ldrh	r3, [r2, #4]
 8014764:	8023      	strh	r3, [r4, #0]
 8014766:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801476a:	9901      	ldr	r1, [sp, #4]
 801476c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014770:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014774:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014778:	ea4b 0b00 	orr.w	fp, fp, r0
 801477c:	68e0      	ldr	r0, [r4, #12]
 801477e:	6803      	ldr	r3, [r0, #0]
 8014780:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014782:	4798      	blx	r3
 8014784:	eb0b 0200 	add.w	r2, fp, r0
 8014788:	b292      	uxth	r2, r2
 801478a:	e7c5      	b.n	8014718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801478c:	2000      	movs	r0, #0
 801478e:	e7d1      	b.n	8014734 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014790:	4563      	cmp	r3, ip
 8014792:	f77f af73 	ble.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014796:	8ae3      	ldrh	r3, [r4, #22]
 8014798:	2b00      	cmp	r3, #0
 801479a:	f43f af6f 	beq.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801479e:	2301      	movs	r3, #1
 80147a0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80147a4:	8c22      	ldrh	r2, [r4, #32]
 80147a6:	8be3      	ldrh	r3, [r4, #30]
 80147a8:	4413      	add	r3, r2
 80147aa:	83e3      	strh	r3, [r4, #30]
 80147ac:	68e0      	ldr	r0, [r4, #12]
 80147ae:	6803      	ldr	r3, [r0, #0]
 80147b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80147b2:	4798      	blx	r3
 80147b4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80147b8:	4418      	add	r0, r3
 80147ba:	8a63      	ldrh	r3, [r4, #18]
 80147bc:	1a18      	subs	r0, r3, r0
 80147be:	8260      	strh	r0, [r4, #18]
 80147c0:	b005      	add	sp, #20
 80147c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147c6:	2300      	movs	r3, #0
 80147c8:	4611      	mov	r1, r2
 80147ca:	4620      	mov	r0, r4
 80147cc:	f7ff ff0e 	bl	80145ec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80147d0:	e754      	b.n	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80147d2:	4563      	cmp	r3, ip
 80147d4:	dd14      	ble.n	8014800 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80147d6:	b117      	cbz	r7, 80147de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80147d8:	2301      	movs	r3, #1
 80147da:	460a      	mov	r2, r1
 80147dc:	e772      	b.n	80146c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80147de:	2e00      	cmp	r6, #0
 80147e0:	f43f af4c 	beq.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80147e4:	2800      	cmp	r0, #0
 80147e6:	f47f af49 	bne.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80147ea:	f1ba 0f00 	cmp.w	sl, #0
 80147ee:	d002      	beq.n	80147f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80147f0:	2301      	movs	r3, #1
 80147f2:	4642      	mov	r2, r8
 80147f4:	e767      	b.n	80146c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80147f6:	8ae3      	ldrh	r3, [r4, #22]
 80147f8:	2b00      	cmp	r3, #0
 80147fa:	f43f af3f 	beq.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80147fe:	e7d5      	b.n	80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014800:	2800      	cmp	r0, #0
 8014802:	f47f af3b 	bne.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014806:	f1ba 0f00 	cmp.w	sl, #0
 801480a:	f43f af37 	beq.w	801467c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801480e:	2301      	movs	r3, #1
 8014810:	4642      	mov	r2, r8
 8014812:	e7da      	b.n	80147ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014814 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014814:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014816:	4605      	mov	r5, r0
 8014818:	b08f      	sub	sp, #60	; 0x3c
 801481a:	4617      	mov	r7, r2
 801481c:	461c      	mov	r4, r3
 801481e:	460e      	mov	r6, r1
 8014820:	b1d1      	cbz	r1, 8014858 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014822:	681b      	ldr	r3, [r3, #0]
 8014824:	4620      	mov	r0, r4
 8014826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014828:	4798      	blx	r3
 801482a:	4240      	negs	r0, r0
 801482c:	b200      	sxth	r0, r0
 801482e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014832:	9603      	str	r6, [sp, #12]
 8014834:	9700      	str	r7, [sp, #0]
 8014836:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801483a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801483e:	4629      	mov	r1, r5
 8014840:	a805      	add	r0, sp, #20
 8014842:	f7ff fcbf 	bl	80141c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014846:	2401      	movs	r4, #1
 8014848:	a805      	add	r0, sp, #20
 801484a:	f7ff fedf 	bl	801460c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801484e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014852:	b163      	cbz	r3, 801486e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014854:	3401      	adds	r4, #1
 8014856:	e7f7      	b.n	8014848 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014858:	f002 ff48 	bl	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 801485c:	2401      	movs	r4, #1
 801485e:	280a      	cmp	r0, #10
 8014860:	4628      	mov	r0, r5
 8014862:	bf08      	it	eq
 8014864:	3401      	addeq	r4, #1
 8014866:	f002 ff41 	bl	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 801486a:	2800      	cmp	r0, #0
 801486c:	d1f7      	bne.n	801485e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801486e:	b2a0      	uxth	r0, r4
 8014870:	b00f      	add	sp, #60	; 0x3c
 8014872:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014878:	b0e3      	sub	sp, #396	; 0x18c
 801487a:	461c      	mov	r4, r3
 801487c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801487e:	4683      	mov	fp, r0
 8014880:	4688      	mov	r8, r1
 8014882:	2b00      	cmp	r3, #0
 8014884:	f000 8112 	beq.w	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014888:	6823      	ldr	r3, [r4, #0]
 801488a:	2b00      	cmp	r3, #0
 801488c:	f000 810e 	beq.w	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014890:	7ba3      	ldrb	r3, [r4, #14]
 8014892:	2b00      	cmp	r3, #0
 8014894:	f000 810a 	beq.w	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014898:	6810      	ldr	r0, [r2, #0]
 801489a:	6851      	ldr	r1, [r2, #4]
 801489c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80148a0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80148a4:	ad0a      	add	r5, sp, #40	; 0x28
 80148a6:	462b      	mov	r3, r5
 80148a8:	c303      	stmia	r3!, {r0, r1}
 80148aa:	2100      	movs	r1, #0
 80148ac:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80148b0:	910c      	str	r1, [sp, #48]	; 0x30
 80148b2:	79a2      	ldrb	r2, [r4, #6]
 80148b4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80148b8:	a90c      	add	r1, sp, #48	; 0x30
 80148ba:	4628      	mov	r0, r5
 80148bc:	f7ff fd01 	bl	80142c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80148c0:	a90c      	add	r1, sp, #48	; 0x30
 80148c2:	4608      	mov	r0, r1
 80148c4:	79a2      	ldrb	r2, [r4, #6]
 80148c6:	f7ff fcfc 	bl	80142c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80148ca:	a817      	add	r0, sp, #92	; 0x5c
 80148cc:	f002 fae2 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 80148d0:	6820      	ldr	r0, [r4, #0]
 80148d2:	6803      	ldr	r3, [r0, #0]
 80148d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80148d6:	4798      	blx	r3
 80148d8:	4606      	mov	r6, r0
 80148da:	6820      	ldr	r0, [r4, #0]
 80148dc:	6803      	ldr	r3, [r0, #0]
 80148de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80148e0:	4798      	blx	r3
 80148e2:	4633      	mov	r3, r6
 80148e4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80148e6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80148e8:	9000      	str	r0, [sp, #0]
 80148ea:	a817      	add	r0, sp, #92	; 0x5c
 80148ec:	f002 fb2d 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80148f0:	6820      	ldr	r0, [r4, #0]
 80148f2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80148f6:	6803      	ldr	r3, [r0, #0]
 80148f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80148fa:	4798      	blx	r3
 80148fc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014900:	6823      	ldr	r3, [r4, #0]
 8014902:	4607      	mov	r7, r0
 8014904:	4406      	add	r6, r0
 8014906:	a830      	add	r0, sp, #192	; 0xc0
 8014908:	f893 9009 	ldrb.w	r9, [r3, #9]
 801490c:	f002 fac2 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 8014910:	7c23      	ldrb	r3, [r4, #16]
 8014912:	b17b      	cbz	r3, 8014934 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014914:	6820      	ldr	r0, [r4, #0]
 8014916:	6803      	ldr	r3, [r0, #0]
 8014918:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801491a:	4798      	blx	r3
 801491c:	9009      	str	r0, [sp, #36]	; 0x24
 801491e:	6820      	ldr	r0, [r4, #0]
 8014920:	6802      	ldr	r2, [r0, #0]
 8014922:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014924:	4790      	blx	r2
 8014926:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014928:	9000      	str	r0, [sp, #0]
 801492a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801492c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801492e:	a830      	add	r0, sp, #192	; 0xc0
 8014930:	f002 fb0b 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014934:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014938:	7be2      	ldrb	r2, [r4, #15]
 801493a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801493e:	1a8a      	subs	r2, r1, r2
 8014940:	7c21      	ldrb	r1, [r4, #16]
 8014942:	9103      	str	r1, [sp, #12]
 8014944:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014948:	9102      	str	r1, [sp, #8]
 801494a:	6821      	ldr	r1, [r4, #0]
 801494c:	9101      	str	r1, [sp, #4]
 801494e:	7961      	ldrb	r1, [r4, #5]
 8014950:	9100      	str	r1, [sp, #0]
 8014952:	b292      	uxth	r2, r2
 8014954:	a930      	add	r1, sp, #192	; 0xc0
 8014956:	a80e      	add	r0, sp, #56	; 0x38
 8014958:	f7ff fc34 	bl	80141c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801495c:	2e00      	cmp	r6, #0
 801495e:	dc5b      	bgt.n	8014a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014960:	af17      	add	r7, sp, #92	; 0x5c
 8014962:	f04f 0900 	mov.w	r9, #0
 8014966:	7c23      	ldrb	r3, [r4, #16]
 8014968:	2b00      	cmp	r3, #0
 801496a:	f000 80b1 	beq.w	8014ad0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801496e:	a80e      	add	r0, sp, #56	; 0x38
 8014970:	f7ff fe4c 	bl	801460c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014974:	f1ba 0f00 	cmp.w	sl, #0
 8014978:	f000 80a5 	beq.w	8014ac6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801497c:	7c23      	ldrb	r3, [r4, #16]
 801497e:	9309      	str	r3, [sp, #36]	; 0x24
 8014980:	2264      	movs	r2, #100	; 0x64
 8014982:	4639      	mov	r1, r7
 8014984:	a849      	add	r0, sp, #292	; 0x124
 8014986:	f015 fda8 	bl	802a4da <memcpy>
 801498a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801498c:	2b00      	cmp	r3, #0
 801498e:	f000 80a7 	beq.w	8014ae0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014992:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014996:	7922      	ldrb	r2, [r4, #4]
 8014998:	2a01      	cmp	r2, #1
 801499a:	f040 808a 	bne.w	8014ab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801499e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80149a2:	1ac0      	subs	r0, r0, r3
 80149a4:	2302      	movs	r3, #2
 80149a6:	fb90 f0f3 	sdiv	r0, r0, r3
 80149aa:	b200      	sxth	r0, r0
 80149ac:	7c23      	ldrb	r3, [r4, #16]
 80149ae:	2b00      	cmp	r3, #0
 80149b0:	f000 808b 	beq.w	8014aca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80149b4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80149b8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80149bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80149c0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80149c4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80149c8:	4410      	add	r0, r2
 80149ca:	b200      	sxth	r0, r0
 80149cc:	9000      	str	r0, [sp, #0]
 80149ce:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80149d2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80149d6:	4642      	mov	r2, r8
 80149d8:	2100      	movs	r1, #0
 80149da:	4658      	mov	r0, fp
 80149dc:	f7ff fca2 	bl	8014324 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80149e0:	2800      	cmp	r0, #0
 80149e2:	d163      	bne.n	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80149e4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80149e8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80149ec:	b2b2      	uxth	r2, r6
 80149ee:	4413      	add	r3, r2
 80149f0:	1a8a      	subs	r2, r1, r2
 80149f2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80149f6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80149fa:	b21b      	sxth	r3, r3
 80149fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014a00:	2a00      	cmp	r2, #0
 8014a02:	d153      	bne.n	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a04:	6822      	ldr	r2, [r4, #0]
 8014a06:	8869      	ldrh	r1, [r5, #2]
 8014a08:	7a12      	ldrb	r2, [r2, #8]
 8014a0a:	1a9b      	subs	r3, r3, r2
 8014a0c:	88ea      	ldrh	r2, [r5, #6]
 8014a0e:	440a      	add	r2, r1
 8014a10:	b212      	sxth	r2, r2
 8014a12:	4293      	cmp	r3, r2
 8014a14:	dda7      	ble.n	8014966 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014a16:	e049      	b.n	8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a18:	7c23      	ldrb	r3, [r4, #16]
 8014a1a:	444f      	add	r7, r9
 8014a1c:	b1c3      	cbz	r3, 8014a50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014a1e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014a22:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014a26:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014a2a:	443b      	add	r3, r7
 8014a2c:	4293      	cmp	r3, r2
 8014a2e:	da97      	bge.n	8014960 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014a30:	a80e      	add	r0, sp, #56	; 0x38
 8014a32:	f7ff fdeb 	bl	801460c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014a36:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014a3a:	3b01      	subs	r3, #1
 8014a3c:	b29b      	uxth	r3, r3
 8014a3e:	454b      	cmp	r3, r9
 8014a40:	9309      	str	r3, [sp, #36]	; 0x24
 8014a42:	d021      	beq.n	8014a88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014a44:	7961      	ldrb	r1, [r4, #5]
 8014a46:	a817      	add	r0, sp, #92	; 0x5c
 8014a48:	f7f3 fb20 	bl	800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014a4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a4e:	e7f4      	b.n	8014a3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014a50:	fa1f f986 	uxth.w	r9, r6
 8014a54:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014a58:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014a5c:	443b      	add	r3, r7
 8014a5e:	4293      	cmp	r3, r2
 8014a60:	f6bf af7e 	bge.w	8014960 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014a64:	a817      	add	r0, sp, #92	; 0x5c
 8014a66:	f002 fe41 	bl	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014a6a:	b1f8      	cbz	r0, 8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a6c:	280a      	cmp	r0, #10
 8014a6e:	d1f1      	bne.n	8014a54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014a70:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014a74:	444b      	add	r3, r9
 8014a76:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014a7a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014a7e:	eba3 0309 	sub.w	r3, r3, r9
 8014a82:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014a86:	e7e5      	b.n	8014a54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014a88:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014a8c:	b2b3      	uxth	r3, r6
 8014a8e:	441a      	add	r2, r3
 8014a90:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014a94:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014a98:	1ad3      	subs	r3, r2, r3
 8014a9a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014a9e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014aa2:	b11b      	cbz	r3, 8014aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014aa4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014aa8:	2b00      	cmp	r3, #0
 8014aaa:	d0ba      	beq.n	8014a22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014aac:	b063      	add	sp, #396	; 0x18c
 8014aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ab2:	2a02      	cmp	r2, #2
 8014ab4:	d105      	bne.n	8014ac2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014ab6:	7be2      	ldrb	r2, [r4, #15]
 8014ab8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014abc:	1a80      	subs	r0, r0, r2
 8014abe:	1ac0      	subs	r0, r0, r3
 8014ac0:	e773      	b.n	80149aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014ac2:	2000      	movs	r0, #0
 8014ac4:	e772      	b.n	80149ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014ac6:	7be0      	ldrb	r0, [r4, #15]
 8014ac8:	e770      	b.n	80149ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014aca:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014ace:	e773      	b.n	80149b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014ad0:	f1ba 0f00 	cmp.w	sl, #0
 8014ad4:	d0f7      	beq.n	8014ac6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014ad6:	2264      	movs	r2, #100	; 0x64
 8014ad8:	4639      	mov	r1, r7
 8014ada:	a849      	add	r0, sp, #292	; 0x124
 8014adc:	f015 fcfd 	bl	802a4da <memcpy>
 8014ae0:	2300      	movs	r3, #0
 8014ae2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014ae6:	6821      	ldr	r1, [r4, #0]
 8014ae8:	a849      	add	r0, sp, #292	; 0x124
 8014aea:	f7ff fbae 	bl	801424a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014aee:	b203      	sxth	r3, r0
 8014af0:	e751      	b.n	8014996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014af2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014af2:	2b03      	cmp	r3, #3
 8014af4:	d818      	bhi.n	8014b28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014af6:	e8df f003 	tbb	[pc, r3]
 8014afa:	0602      	.short	0x0602
 8014afc:	130d      	.short	0x130d
 8014afe:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014b02:	1850      	adds	r0, r2, r1
 8014b04:	4770      	bx	lr
 8014b06:	8803      	ldrh	r3, [r0, #0]
 8014b08:	8880      	ldrh	r0, [r0, #4]
 8014b0a:	4418      	add	r0, r3
 8014b0c:	b200      	sxth	r0, r0
 8014b0e:	1a80      	subs	r0, r0, r2
 8014b10:	3801      	subs	r0, #1
 8014b12:	4770      	bx	lr
 8014b14:	8803      	ldrh	r3, [r0, #0]
 8014b16:	8880      	ldrh	r0, [r0, #4]
 8014b18:	4418      	add	r0, r3
 8014b1a:	b200      	sxth	r0, r0
 8014b1c:	1a40      	subs	r0, r0, r1
 8014b1e:	e7f7      	b.n	8014b10 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014b20:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014b24:	4410      	add	r0, r2
 8014b26:	4770      	bx	lr
 8014b28:	2000      	movs	r0, #0
 8014b2a:	4770      	bx	lr

08014b2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014b2c:	2b03      	cmp	r3, #3
 8014b2e:	d817      	bhi.n	8014b60 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014b30:	e8df f003 	tbb	[pc, r3]
 8014b34:	10090602 	.word	0x10090602
 8014b38:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014b3c:	1850      	adds	r0, r2, r1
 8014b3e:	4770      	bx	lr
 8014b40:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014b44:	e7fa      	b.n	8014b3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014b46:	8843      	ldrh	r3, [r0, #2]
 8014b48:	88c0      	ldrh	r0, [r0, #6]
 8014b4a:	4418      	add	r0, r3
 8014b4c:	b200      	sxth	r0, r0
 8014b4e:	1a80      	subs	r0, r0, r2
 8014b50:	3801      	subs	r0, #1
 8014b52:	4770      	bx	lr
 8014b54:	8843      	ldrh	r3, [r0, #2]
 8014b56:	88c0      	ldrh	r0, [r0, #6]
 8014b58:	4418      	add	r0, r3
 8014b5a:	b200      	sxth	r0, r0
 8014b5c:	1a40      	subs	r0, r0, r1
 8014b5e:	e7f7      	b.n	8014b50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014b60:	2000      	movs	r0, #0
 8014b62:	4770      	bx	lr

08014b64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014b64:	4b01      	ldr	r3, [pc, #4]	; (8014b6c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014b66:	2200      	movs	r2, #0
 8014b68:	601a      	str	r2, [r3, #0]
 8014b6a:	4770      	bx	lr
 8014b6c:	20012e6c 	.word	0x20012e6c

08014b70 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014b70:	4603      	mov	r3, r0
 8014b72:	b1c8      	cbz	r0, 8014ba8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014b74:	0c02      	lsrs	r2, r0, #16
 8014b76:	0412      	lsls	r2, r2, #16
 8014b78:	b9a2      	cbnz	r2, 8014ba4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014b7a:	0403      	lsls	r3, r0, #16
 8014b7c:	2010      	movs	r0, #16
 8014b7e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014b82:	bf04      	itt	eq
 8014b84:	021b      	lsleq	r3, r3, #8
 8014b86:	3008      	addeq	r0, #8
 8014b88:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014b8c:	bf04      	itt	eq
 8014b8e:	011b      	lsleq	r3, r3, #4
 8014b90:	3004      	addeq	r0, #4
 8014b92:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014b96:	bf04      	itt	eq
 8014b98:	009b      	lsleq	r3, r3, #2
 8014b9a:	3002      	addeq	r0, #2
 8014b9c:	2b00      	cmp	r3, #0
 8014b9e:	db04      	blt.n	8014baa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014ba0:	3001      	adds	r0, #1
 8014ba2:	4770      	bx	lr
 8014ba4:	2000      	movs	r0, #0
 8014ba6:	e7ea      	b.n	8014b7e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014ba8:	2020      	movs	r0, #32
 8014baa:	4770      	bx	lr

08014bac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bb0:	b087      	sub	sp, #28
 8014bb2:	460d      	mov	r5, r1
 8014bb4:	4616      	mov	r6, r2
 8014bb6:	4698      	mov	r8, r3
 8014bb8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014bbc:	4601      	mov	r1, r0
 8014bbe:	b120      	cbz	r0, 8014bca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014bc0:	b11a      	cbz	r2, 8014bca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014bc2:	2d1f      	cmp	r5, #31
 8014bc4:	d801      	bhi.n	8014bca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014bc6:	2b1f      	cmp	r3, #31
 8014bc8:	d904      	bls.n	8014bd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014bca:	2000      	movs	r0, #0
 8014bcc:	6038      	str	r0, [r7, #0]
 8014bce:	b007      	add	sp, #28
 8014bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bd4:	b97d      	cbnz	r5, 8014bf6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014bd6:	b143      	cbz	r3, 8014bea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014bd8:	4602      	mov	r2, r0
 8014bda:	e9cd 4700 	strd	r4, r7, [sp]
 8014bde:	462b      	mov	r3, r5
 8014be0:	4641      	mov	r1, r8
 8014be2:	4630      	mov	r0, r6
 8014be4:	f7ff ffe2 	bl	8014bac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014be8:	e7f1      	b.n	8014bce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014bea:	f04f 33ff 	mov.w	r3, #4294967295
 8014bee:	603b      	str	r3, [r7, #0]
 8014bf0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014bf4:	e7eb      	b.n	8014bce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014bf6:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014bfa:	d106      	bne.n	8014c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014bfc:	4346      	muls	r6, r0
 8014bfe:	fbb6 f0f4 	udiv	r0, r6, r4
 8014c02:	fb04 6610 	mls	r6, r4, r0, r6
 8014c06:	603e      	str	r6, [r7, #0]
 8014c08:	e7e1      	b.n	8014bce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014c0a:	2201      	movs	r2, #1
 8014c0c:	40aa      	lsls	r2, r5
 8014c0e:	3a01      	subs	r2, #1
 8014c10:	4016      	ands	r6, r2
 8014c12:	fa00 fb05 	lsl.w	fp, r0, r5
 8014c16:	4630      	mov	r0, r6
 8014c18:	fbbb f9f4 	udiv	r9, fp, r4
 8014c1c:	fb0a f309 	mul.w	r3, sl, r9
 8014c20:	9303      	str	r3, [sp, #12]
 8014c22:	f7ff ffa5 	bl	8014b70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014c26:	462b      	mov	r3, r5
 8014c28:	460a      	mov	r2, r1
 8014c2a:	e9cd 4700 	strd	r4, r7, [sp]
 8014c2e:	4601      	mov	r1, r0
 8014c30:	4630      	mov	r0, r6
 8014c32:	f7ff ffbb 	bl	8014bac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014c36:	fb04 b919 	mls	r9, r4, r9, fp
 8014c3a:	4606      	mov	r6, r0
 8014c3c:	4648      	mov	r0, r9
 8014c3e:	eb05 0108 	add.w	r1, r5, r8
 8014c42:	f7ff ff95 	bl	8014b70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014c46:	ab05      	add	r3, sp, #20
 8014c48:	e9cd 4300 	strd	r4, r3, [sp]
 8014c4c:	464a      	mov	r2, r9
 8014c4e:	4603      	mov	r3, r0
 8014c50:	4650      	mov	r0, sl
 8014c52:	f7ff ffab 	bl	8014bac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014c56:	6839      	ldr	r1, [r7, #0]
 8014c58:	9a05      	ldr	r2, [sp, #20]
 8014c5a:	9b03      	ldr	r3, [sp, #12]
 8014c5c:	4411      	add	r1, r2
 8014c5e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014c62:	18d3      	adds	r3, r2, r3
 8014c64:	441e      	add	r6, r3
 8014c66:	fb04 1412 	mls	r4, r4, r2, r1
 8014c6a:	4430      	add	r0, r6
 8014c6c:	603c      	str	r4, [r7, #0]
 8014c6e:	e7ae      	b.n	8014bce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014c70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014c74:	b085      	sub	sp, #20
 8014c76:	f1b0 0900 	subs.w	r9, r0, #0
 8014c7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014c7c:	461d      	mov	r5, r3
 8014c7e:	bfbf      	itttt	lt
 8014c80:	6823      	ldrlt	r3, [r4, #0]
 8014c82:	425b      	neglt	r3, r3
 8014c84:	f1c9 0900 	rsblt	r9, r9, #0
 8014c88:	6023      	strlt	r3, [r4, #0]
 8014c8a:	bfb4      	ite	lt
 8014c8c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014c90:	2601      	movge	r6, #1
 8014c92:	2a00      	cmp	r2, #0
 8014c94:	4617      	mov	r7, r2
 8014c96:	da04      	bge.n	8014ca2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014c98:	6823      	ldr	r3, [r4, #0]
 8014c9a:	425b      	negs	r3, r3
 8014c9c:	4257      	negs	r7, r2
 8014c9e:	4276      	negs	r6, r6
 8014ca0:	6023      	str	r3, [r4, #0]
 8014ca2:	2d00      	cmp	r5, #0
 8014ca4:	4638      	mov	r0, r7
 8014ca6:	bfba      	itte	lt
 8014ca8:	426d      	neglt	r5, r5
 8014caa:	f04f 38ff 	movlt.w	r8, #4294967295
 8014cae:	f04f 0801 	movge.w	r8, #1
 8014cb2:	f7ff ff5d 	bl	8014b70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014cb6:	ab03      	add	r3, sp, #12
 8014cb8:	e9cd 5300 	strd	r5, r3, [sp]
 8014cbc:	463a      	mov	r2, r7
 8014cbe:	4603      	mov	r3, r0
 8014cc0:	4648      	mov	r0, r9
 8014cc2:	f7ff ff73 	bl	8014bac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014cc6:	6823      	ldr	r3, [r4, #0]
 8014cc8:	9a03      	ldr	r2, [sp, #12]
 8014cca:	4546      	cmp	r6, r8
 8014ccc:	441a      	add	r2, r3
 8014cce:	fb92 f3f5 	sdiv	r3, r2, r5
 8014cd2:	4418      	add	r0, r3
 8014cd4:	bf18      	it	ne
 8014cd6:	4240      	negne	r0, r0
 8014cd8:	fb05 2313 	mls	r3, r5, r3, r2
 8014cdc:	1c72      	adds	r2, r6, #1
 8014cde:	6023      	str	r3, [r4, #0]
 8014ce0:	d105      	bne.n	8014cee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014ce2:	2b00      	cmp	r3, #0
 8014ce4:	f1c3 0200 	rsb	r2, r3, #0
 8014ce8:	db0b      	blt.n	8014d02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014cea:	6022      	str	r2, [r4, #0]
 8014cec:	e006      	b.n	8014cfc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cee:	2e01      	cmp	r6, #1
 8014cf0:	d104      	bne.n	8014cfc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cf2:	2b00      	cmp	r3, #0
 8014cf4:	da02      	bge.n	8014cfc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014cf6:	442b      	add	r3, r5
 8014cf8:	3801      	subs	r0, #1
 8014cfa:	6023      	str	r3, [r4, #0]
 8014cfc:	b005      	add	sp, #20
 8014cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014d02:	3801      	subs	r0, #1
 8014d04:	1b52      	subs	r2, r2, r5
 8014d06:	e7f0      	b.n	8014cea <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014d08 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014d08:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014d0c:	4c1c      	ldr	r4, [pc, #112]	; (8014d80 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014d0e:	6807      	ldr	r7, [r0, #0]
 8014d10:	69a3      	ldr	r3, [r4, #24]
 8014d12:	4605      	mov	r5, r0
 8014d14:	b92b      	cbnz	r3, 8014d22 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014d16:	6840      	ldr	r0, [r0, #4]
 8014d18:	e9c5 7000 	strd	r7, r0, [r5]
 8014d1c:	b004      	add	sp, #16
 8014d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d22:	68a2      	ldr	r2, [r4, #8]
 8014d24:	6820      	ldr	r0, [r4, #0]
 8014d26:	ae04      	add	r6, sp, #16
 8014d28:	f04f 0802 	mov.w	r8, #2
 8014d2c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014d30:	440a      	add	r2, r1
 8014d32:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014d36:	69e1      	ldr	r1, [r4, #28]
 8014d38:	9600      	str	r6, [sp, #0]
 8014d3a:	463a      	mov	r2, r7
 8014d3c:	f7ff ff98 	bl	8014c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d40:	69a3      	ldr	r3, [r4, #24]
 8014d42:	686a      	ldr	r2, [r5, #4]
 8014d44:	6a21      	ldr	r1, [r4, #32]
 8014d46:	9600      	str	r6, [sp, #0]
 8014d48:	4607      	mov	r7, r0
 8014d4a:	6860      	ldr	r0, [r4, #4]
 8014d4c:	f7ff ff90 	bl	8014c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d50:	6962      	ldr	r2, [r4, #20]
 8014d52:	69a3      	ldr	r3, [r4, #24]
 8014d54:	fb93 f8f8 	sdiv	r8, r3, r8
 8014d58:	4442      	add	r2, r8
 8014d5a:	9203      	str	r2, [sp, #12]
 8014d5c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014d5e:	682a      	ldr	r2, [r5, #0]
 8014d60:	9600      	str	r6, [sp, #0]
 8014d62:	4407      	add	r7, r0
 8014d64:	68e0      	ldr	r0, [r4, #12]
 8014d66:	f7ff ff83 	bl	8014c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d6a:	9600      	str	r6, [sp, #0]
 8014d6c:	4680      	mov	r8, r0
 8014d6e:	69a3      	ldr	r3, [r4, #24]
 8014d70:	686a      	ldr	r2, [r5, #4]
 8014d72:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014d74:	6920      	ldr	r0, [r4, #16]
 8014d76:	f7ff ff7b 	bl	8014c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014d7a:	4440      	add	r0, r8
 8014d7c:	e7cc      	b.n	8014d18 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014d7e:	bf00      	nop
 8014d80:	20012e70 	.word	0x20012e70

08014d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014d84:	4b07      	ldr	r3, [pc, #28]	; (8014da4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014d86:	781b      	ldrb	r3, [r3, #0]
 8014d88:	2b01      	cmp	r3, #1
 8014d8a:	d109      	bne.n	8014da0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014d8c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014d90:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014d94:	8003      	strh	r3, [r0, #0]
 8014d96:	4b04      	ldr	r3, [pc, #16]	; (8014da8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014d98:	881b      	ldrh	r3, [r3, #0]
 8014d9a:	3b01      	subs	r3, #1
 8014d9c:	1a9b      	subs	r3, r3, r2
 8014d9e:	800b      	strh	r3, [r1, #0]
 8014da0:	4770      	bx	lr
 8014da2:	bf00      	nop
 8014da4:	20012e54 	.word	0x20012e54
 8014da8:	20012e50 	.word	0x20012e50

08014dac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014dac:	b510      	push	{r4, lr}
 8014dae:	4b07      	ldr	r3, [pc, #28]	; (8014dcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014db0:	781b      	ldrb	r3, [r3, #0]
 8014db2:	2b01      	cmp	r3, #1
 8014db4:	d108      	bne.n	8014dc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014db6:	4b06      	ldr	r3, [pc, #24]	; (8014dd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014db8:	880c      	ldrh	r4, [r1, #0]
 8014dba:	881b      	ldrh	r3, [r3, #0]
 8014dbc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014dc0:	3b01      	subs	r3, #1
 8014dc2:	1b1b      	subs	r3, r3, r4
 8014dc4:	8003      	strh	r3, [r0, #0]
 8014dc6:	800a      	strh	r2, [r1, #0]
 8014dc8:	bd10      	pop	{r4, pc}
 8014dca:	bf00      	nop
 8014dcc:	20012e54 	.word	0x20012e54
 8014dd0:	20012e50 	.word	0x20012e50

08014dd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014dd4:	b510      	push	{r4, lr}
 8014dd6:	4b0a      	ldr	r3, [pc, #40]	; (8014e00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014dd8:	781b      	ldrb	r3, [r3, #0]
 8014dda:	2b01      	cmp	r3, #1
 8014ddc:	d10e      	bne.n	8014dfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014dde:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014de2:	8843      	ldrh	r3, [r0, #2]
 8014de4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014de8:	8044      	strh	r4, [r0, #2]
 8014dea:	18ca      	adds	r2, r1, r3
 8014dec:	4b05      	ldr	r3, [pc, #20]	; (8014e04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014dee:	881b      	ldrh	r3, [r3, #0]
 8014df0:	1a9b      	subs	r3, r3, r2
 8014df2:	8003      	strh	r3, [r0, #0]
 8014df4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014df8:	80c3      	strh	r3, [r0, #6]
 8014dfa:	8081      	strh	r1, [r0, #4]
 8014dfc:	bd10      	pop	{r4, pc}
 8014dfe:	bf00      	nop
 8014e00:	20012e54 	.word	0x20012e54
 8014e04:	20012e50 	.word	0x20012e50

08014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014e08:	4b08      	ldr	r3, [pc, #32]	; (8014e2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014e0a:	781b      	ldrb	r3, [r3, #0]
 8014e0c:	2b01      	cmp	r3, #1
 8014e0e:	d10c      	bne.n	8014e2a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014e10:	8803      	ldrh	r3, [r0, #0]
 8014e12:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014e16:	8842      	ldrh	r2, [r0, #2]
 8014e18:	8002      	strh	r2, [r0, #0]
 8014e1a:	185a      	adds	r2, r3, r1
 8014e1c:	4b04      	ldr	r3, [pc, #16]	; (8014e30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014e1e:	881b      	ldrh	r3, [r3, #0]
 8014e20:	1a9b      	subs	r3, r3, r2
 8014e22:	8043      	strh	r3, [r0, #2]
 8014e24:	88c3      	ldrh	r3, [r0, #6]
 8014e26:	8083      	strh	r3, [r0, #4]
 8014e28:	80c1      	strh	r1, [r0, #6]
 8014e2a:	4770      	bx	lr
 8014e2c:	20012e54 	.word	0x20012e54
 8014e30:	20012e50 	.word	0x20012e50

08014e34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014e34:	b510      	push	{r4, lr}
 8014e36:	4b07      	ldr	r3, [pc, #28]	; (8014e54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014e38:	781b      	ldrb	r3, [r3, #0]
 8014e3a:	2b01      	cmp	r3, #1
 8014e3c:	d108      	bne.n	8014e50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014e3e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014e42:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014e46:	8003      	strh	r3, [r0, #0]
 8014e48:	8893      	ldrh	r3, [r2, #4]
 8014e4a:	3b01      	subs	r3, #1
 8014e4c:	1b1b      	subs	r3, r3, r4
 8014e4e:	800b      	strh	r3, [r1, #0]
 8014e50:	bd10      	pop	{r4, pc}
 8014e52:	bf00      	nop
 8014e54:	20012e54 	.word	0x20012e54

08014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014e58:	4b0b      	ldr	r3, [pc, #44]	; (8014e88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014e5a:	781b      	ldrb	r3, [r3, #0]
 8014e5c:	2b01      	cmp	r3, #1
 8014e5e:	d111      	bne.n	8014e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014e60:	680b      	ldr	r3, [r1, #0]
 8014e62:	ed90 7a00 	vldr	s14, [r0]
 8014e66:	6003      	str	r3, [r0, #0]
 8014e68:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014e6c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014e8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014e70:	ee07 3a90 	vmov	s15, r3
 8014e74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014e78:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014e7c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e80:	edc1 7a00 	vstr	s15, [r1]
 8014e84:	4770      	bx	lr
 8014e86:	bf00      	nop
 8014e88:	20012e54 	.word	0x20012e54
 8014e8c:	38d1b717 	.word	0x38d1b717

08014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014e90:	b510      	push	{r4, lr}
 8014e92:	4b0a      	ldr	r3, [pc, #40]	; (8014ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014e94:	781b      	ldrb	r3, [r3, #0]
 8014e96:	2b01      	cmp	r3, #1
 8014e98:	460a      	mov	r2, r1
 8014e9a:	d10d      	bne.n	8014eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014e9c:	8881      	ldrh	r1, [r0, #4]
 8014e9e:	8803      	ldrh	r3, [r0, #0]
 8014ea0:	440b      	add	r3, r1
 8014ea2:	4601      	mov	r1, r0
 8014ea4:	3b01      	subs	r3, #1
 8014ea6:	f821 3b02 	strh.w	r3, [r1], #2
 8014eaa:	f7ff ffc3 	bl	8014e34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014eae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014eb2:	88c2      	ldrh	r2, [r0, #6]
 8014eb4:	8082      	strh	r2, [r0, #4]
 8014eb6:	80c3      	strh	r3, [r0, #6]
 8014eb8:	bd10      	pop	{r4, pc}
 8014eba:	bf00      	nop
 8014ebc:	20012e54 	.word	0x20012e54

08014ec0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014ec0:	4b06      	ldr	r3, [pc, #24]	; (8014edc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014ec2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ec6:	4b06      	ldr	r3, [pc, #24]	; (8014ee0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014ec8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014ecc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014ed0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014ed4:	2100      	movs	r1, #0
 8014ed6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014eda:	4770      	bx	lr
 8014edc:	20012e50 	.word	0x20012e50
 8014ee0:	20012e52 	.word	0x20012e52

08014ee4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014ee4:	4b03      	ldr	r3, [pc, #12]	; (8014ef4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014ee6:	6818      	ldr	r0, [r3, #0]
 8014ee8:	b110      	cbz	r0, 8014ef0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014eea:	6803      	ldr	r3, [r0, #0]
 8014eec:	699b      	ldr	r3, [r3, #24]
 8014eee:	4718      	bx	r3
 8014ef0:	4770      	bx	lr
 8014ef2:	bf00      	nop
 8014ef4:	20012ea0 	.word	0x20012ea0

08014ef8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014ef8:	4770      	bx	lr
	...

08014efc <_ZN8touchgfx11Application4drawEv>:
 8014efc:	b507      	push	{r0, r1, r2, lr}
 8014efe:	4b09      	ldr	r3, [pc, #36]	; (8014f24 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014f00:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f04:	4b08      	ldr	r3, [pc, #32]	; (8014f28 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014f06:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014f0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014f0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014f12:	6803      	ldr	r3, [r0, #0]
 8014f14:	2100      	movs	r1, #0
 8014f16:	9100      	str	r1, [sp, #0]
 8014f18:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014f1a:	4669      	mov	r1, sp
 8014f1c:	4798      	blx	r3
 8014f1e:	b003      	add	sp, #12
 8014f20:	f85d fb04 	ldr.w	pc, [sp], #4
 8014f24:	20012e50 	.word	0x20012e50
 8014f28:	20012e52 	.word	0x20012e52

08014f2c <_ZN8touchgfx11Application10invalidateEv>:
 8014f2c:	4b09      	ldr	r3, [pc, #36]	; (8014f54 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014f2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f32:	4b09      	ldr	r3, [pc, #36]	; (8014f58 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014f34:	b082      	sub	sp, #8
 8014f36:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014f3a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014f3e:	2100      	movs	r1, #0
 8014f40:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014f44:	9100      	str	r1, [sp, #0]
 8014f46:	6803      	ldr	r3, [r0, #0]
 8014f48:	aa02      	add	r2, sp, #8
 8014f4a:	e912 0006 	ldmdb	r2, {r1, r2}
 8014f4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014f50:	b002      	add	sp, #8
 8014f52:	4718      	bx	r3
 8014f54:	20012e50 	.word	0x20012e50
 8014f58:	20012e52 	.word	0x20012e52

08014f5c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014f5c:	4b03      	ldr	r3, [pc, #12]	; (8014f6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014f5e:	6818      	ldr	r0, [r3, #0]
 8014f60:	b110      	cbz	r0, 8014f68 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014f62:	6803      	ldr	r3, [r0, #0]
 8014f64:	69db      	ldr	r3, [r3, #28]
 8014f66:	4718      	bx	r3
 8014f68:	4770      	bx	lr
 8014f6a:	bf00      	nop
 8014f6c:	20012ea0 	.word	0x20012ea0

08014f70 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014f70:	4b03      	ldr	r3, [pc, #12]	; (8014f80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014f72:	6818      	ldr	r0, [r3, #0]
 8014f74:	b110      	cbz	r0, 8014f7c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014f76:	6803      	ldr	r3, [r0, #0]
 8014f78:	6a1b      	ldr	r3, [r3, #32]
 8014f7a:	4718      	bx	r3
 8014f7c:	4770      	bx	lr
 8014f7e:	bf00      	nop
 8014f80:	20012ea0 	.word	0x20012ea0

08014f84 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014f84:	2300      	movs	r3, #0
 8014f86:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014f8a:	4770      	bx	lr

08014f8c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014f8c:	4b03      	ldr	r3, [pc, #12]	; (8014f9c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014f8e:	6818      	ldr	r0, [r3, #0]
 8014f90:	b110      	cbz	r0, 8014f98 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014f92:	6803      	ldr	r3, [r0, #0]
 8014f94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014f96:	4718      	bx	r3
 8014f98:	4770      	bx	lr
 8014f9a:	bf00      	nop
 8014f9c:	20012ea0 	.word	0x20012ea0

08014fa0 <_ZN8touchgfx11ApplicationD1Ev>:
 8014fa0:	4770      	bx	lr

08014fa2 <_ZN8touchgfx11ApplicationD0Ev>:
 8014fa2:	b510      	push	{r4, lr}
 8014fa4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014fa8:	4604      	mov	r4, r0
 8014faa:	f014 f958 	bl	802925e <_ZdlPvj>
 8014fae:	4620      	mov	r0, r4
 8014fb0:	bd10      	pop	{r4, pc}

08014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014fb2:	b510      	push	{r4, lr}
 8014fb4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014fb8:	888a      	ldrh	r2, [r1, #4]
 8014fba:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014fbe:	4422      	add	r2, r4
 8014fc0:	b212      	sxth	r2, r2
 8014fc2:	4293      	cmp	r3, r2
 8014fc4:	da15      	bge.n	8014ff2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014fc6:	8882      	ldrh	r2, [r0, #4]
 8014fc8:	4413      	add	r3, r2
 8014fca:	b21b      	sxth	r3, r3
 8014fcc:	429c      	cmp	r4, r3
 8014fce:	da10      	bge.n	8014ff2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014fd0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014fd4:	88c9      	ldrh	r1, [r1, #6]
 8014fd6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014fda:	4419      	add	r1, r3
 8014fdc:	b209      	sxth	r1, r1
 8014fde:	428a      	cmp	r2, r1
 8014fe0:	da07      	bge.n	8014ff2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014fe2:	88c0      	ldrh	r0, [r0, #6]
 8014fe4:	4410      	add	r0, r2
 8014fe6:	b200      	sxth	r0, r0
 8014fe8:	4283      	cmp	r3, r0
 8014fea:	bfac      	ite	ge
 8014fec:	2000      	movge	r0, #0
 8014fee:	2001      	movlt	r0, #1
 8014ff0:	bd10      	pop	{r4, pc}
 8014ff2:	2000      	movs	r0, #0
 8014ff4:	e7fc      	b.n	8014ff0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014ff6 <_ZN8touchgfx4Rect10restrictToEss>:
 8014ff6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014ffa:	2b00      	cmp	r3, #0
 8014ffc:	b510      	push	{r4, lr}
 8014ffe:	da04      	bge.n	801500a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015000:	8884      	ldrh	r4, [r0, #4]
 8015002:	4423      	add	r3, r4
 8015004:	8083      	strh	r3, [r0, #4]
 8015006:	2300      	movs	r3, #0
 8015008:	8003      	strh	r3, [r0, #0]
 801500a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801500e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015012:	1b09      	subs	r1, r1, r4
 8015014:	428b      	cmp	r3, r1
 8015016:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801501a:	bfc8      	it	gt
 801501c:	8081      	strhgt	r1, [r0, #4]
 801501e:	2b00      	cmp	r3, #0
 8015020:	da04      	bge.n	801502c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015022:	88c1      	ldrh	r1, [r0, #6]
 8015024:	440b      	add	r3, r1
 8015026:	80c3      	strh	r3, [r0, #6]
 8015028:	2300      	movs	r3, #0
 801502a:	8043      	strh	r3, [r0, #2]
 801502c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015030:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015034:	1a52      	subs	r2, r2, r1
 8015036:	4293      	cmp	r3, r2
 8015038:	bfc8      	it	gt
 801503a:	80c2      	strhgt	r2, [r0, #6]
 801503c:	bd10      	pop	{r4, pc}
	...

08015040 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015040:	b510      	push	{r4, lr}
 8015042:	4b10      	ldr	r3, [pc, #64]	; (8015084 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015044:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015048:	4b0f      	ldr	r3, [pc, #60]	; (8015088 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801504a:	460c      	mov	r4, r1
 801504c:	4620      	mov	r0, r4
 801504e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015052:	f7ff ffd0 	bl	8014ff6 <_ZN8touchgfx4Rect10restrictToEss>
 8015056:	4b0d      	ldr	r3, [pc, #52]	; (801508c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015058:	6818      	ldr	r0, [r3, #0]
 801505a:	b190      	cbz	r0, 8015082 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801505c:	6803      	ldr	r3, [r0, #0]
 801505e:	4621      	mov	r1, r4
 8015060:	689b      	ldr	r3, [r3, #8]
 8015062:	4798      	blx	r3
 8015064:	4b0a      	ldr	r3, [pc, #40]	; (8015090 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015066:	6818      	ldr	r0, [r3, #0]
 8015068:	b118      	cbz	r0, 8015072 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801506a:	6803      	ldr	r3, [r0, #0]
 801506c:	4621      	mov	r1, r4
 801506e:	689b      	ldr	r3, [r3, #8]
 8015070:	4798      	blx	r3
 8015072:	4b08      	ldr	r3, [pc, #32]	; (8015094 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015074:	6818      	ldr	r0, [r3, #0]
 8015076:	6803      	ldr	r3, [r0, #0]
 8015078:	4621      	mov	r1, r4
 801507a:	69db      	ldr	r3, [r3, #28]
 801507c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015080:	4718      	bx	r3
 8015082:	bd10      	pop	{r4, pc}
 8015084:	20012e52 	.word	0x20012e52
 8015088:	20012e50 	.word	0x20012e50
 801508c:	20012ea0 	.word	0x20012ea0
 8015090:	20012e9c 	.word	0x20012e9c
 8015094:	20012e5c 	.word	0x20012e5c

08015098 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801509a:	4606      	mov	r6, r0
 801509c:	4608      	mov	r0, r1
 801509e:	460f      	mov	r7, r1
 80150a0:	f7fa ff97 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150a4:	b9e8      	cbnz	r0, 80150e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80150a6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80150aa:	f9b6 4000 	ldrsh.w	r4, [r6]
 80150ae:	42a5      	cmp	r5, r4
 80150b0:	db17      	blt.n	80150e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80150b2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80150b6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80150ba:	429a      	cmp	r2, r3
 80150bc:	db11      	blt.n	80150e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80150be:	88b9      	ldrh	r1, [r7, #4]
 80150c0:	440d      	add	r5, r1
 80150c2:	88b1      	ldrh	r1, [r6, #4]
 80150c4:	440c      	add	r4, r1
 80150c6:	b22d      	sxth	r5, r5
 80150c8:	b224      	sxth	r4, r4
 80150ca:	42a5      	cmp	r5, r4
 80150cc:	dc09      	bgt.n	80150e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80150ce:	88f8      	ldrh	r0, [r7, #6]
 80150d0:	4410      	add	r0, r2
 80150d2:	88f2      	ldrh	r2, [r6, #6]
 80150d4:	4413      	add	r3, r2
 80150d6:	b200      	sxth	r0, r0
 80150d8:	b21b      	sxth	r3, r3
 80150da:	4298      	cmp	r0, r3
 80150dc:	bfcc      	ite	gt
 80150de:	2000      	movgt	r0, #0
 80150e0:	2001      	movle	r0, #1
 80150e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080150e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80150e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80150e6:	4604      	mov	r4, r0
 80150e8:	4608      	mov	r0, r1
 80150ea:	460d      	mov	r5, r1
 80150ec:	f7fa ff71 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150f0:	b978      	cbnz	r0, 8015112 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80150f2:	4620      	mov	r0, r4
 80150f4:	f7fa ff6d 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150f8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80150fc:	b150      	cbz	r0, 8015114 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80150fe:	8026      	strh	r6, [r4, #0]
 8015100:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015104:	8063      	strh	r3, [r4, #2]
 8015106:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801510a:	80a3      	strh	r3, [r4, #4]
 801510c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015110:	80e3      	strh	r3, [r4, #6]
 8015112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015114:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015118:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801511c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015120:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015124:	88ed      	ldrh	r5, [r5, #6]
 8015126:	42b1      	cmp	r1, r6
 8015128:	460f      	mov	r7, r1
 801512a:	bfa8      	it	ge
 801512c:	4637      	movge	r7, r6
 801512e:	4293      	cmp	r3, r2
 8015130:	4618      	mov	r0, r3
 8015132:	4466      	add	r6, ip
 8015134:	bfa8      	it	ge
 8015136:	4610      	movge	r0, r2
 8015138:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801513c:	8027      	strh	r7, [r4, #0]
 801513e:	442a      	add	r2, r5
 8015140:	88e5      	ldrh	r5, [r4, #6]
 8015142:	8060      	strh	r0, [r4, #2]
 8015144:	4461      	add	r1, ip
 8015146:	442b      	add	r3, r5
 8015148:	b236      	sxth	r6, r6
 801514a:	b209      	sxth	r1, r1
 801514c:	b212      	sxth	r2, r2
 801514e:	b21b      	sxth	r3, r3
 8015150:	428e      	cmp	r6, r1
 8015152:	bfac      	ite	ge
 8015154:	ebc7 0106 	rsbge	r1, r7, r6
 8015158:	ebc7 0101 	rsblt	r1, r7, r1
 801515c:	429a      	cmp	r2, r3
 801515e:	bfac      	ite	ge
 8015160:	ebc0 0202 	rsbge	r2, r0, r2
 8015164:	ebc0 0203 	rsblt	r2, r0, r3
 8015168:	80a1      	strh	r1, [r4, #4]
 801516a:	80e2      	strh	r2, [r4, #6]
 801516c:	e7d1      	b.n	8015112 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015170 <_ZN8touchgfx11Application11getInstanceEv>:
 8015170:	4b01      	ldr	r3, [pc, #4]	; (8015178 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015172:	6818      	ldr	r0, [r3, #0]
 8015174:	4770      	bx	lr
 8015176:	bf00      	nop
 8015178:	20012eb0 	.word	0x20012eb0

0801517c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801517c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801517e:	4b10      	ldr	r3, [pc, #64]	; (80151c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015180:	781b      	ldrb	r3, [r3, #0]
 8015182:	4605      	mov	r5, r0
 8015184:	b1d3      	cbz	r3, 80151bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015186:	4b0f      	ldr	r3, [pc, #60]	; (80151c4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015188:	4f0f      	ldr	r7, [pc, #60]	; (80151c8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801518a:	881c      	ldrh	r4, [r3, #0]
 801518c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015190:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015194:	42a3      	cmp	r3, r4
 8015196:	d90e      	bls.n	80151b6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015198:	683b      	ldr	r3, [r7, #0]
 801519a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801519e:	b10a      	cbz	r2, 80151a4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80151a0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80151a2:	b900      	cbnz	r0, 80151a6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80151a4:	6898      	ldr	r0, [r3, #8]
 80151a6:	6803      	ldr	r3, [r0, #0]
 80151a8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80151ac:	69db      	ldr	r3, [r3, #28]
 80151ae:	3401      	adds	r4, #1
 80151b0:	4798      	blx	r3
 80151b2:	b2a4      	uxth	r4, r4
 80151b4:	e7ec      	b.n	8015190 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80151b6:	2300      	movs	r3, #0
 80151b8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80151bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80151be:	bf00      	nop
 80151c0:	20012e5a 	.word	0x20012e5a
 80151c4:	20000088 	.word	0x20000088
 80151c8:	20012e5c 	.word	0x20012e5c

080151cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80151cc:	b510      	push	{r4, lr}
 80151ce:	2300      	movs	r3, #0
 80151d0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80151d4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80151d8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80151dc:	4604      	mov	r4, r0
 80151de:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80151e2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80151e6:	429a      	cmp	r2, r3
 80151e8:	d90e      	bls.n	8015208 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80151ea:	18e2      	adds	r2, r4, r3
 80151ec:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80151f0:	b122      	cbz	r2, 80151fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80151f2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80151f6:	6803      	ldr	r3, [r0, #0]
 80151f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80151fa:	4798      	blx	r3
 80151fc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015200:	3301      	adds	r3, #1
 8015202:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015206:	e7ea      	b.n	80151de <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015208:	bd10      	pop	{r4, pc}

0801520a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801520a:	b530      	push	{r4, r5, lr}
 801520c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015210:	2200      	movs	r2, #0
 8015212:	b293      	uxth	r3, r2
 8015214:	429d      	cmp	r5, r3
 8015216:	d90e      	bls.n	8015236 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015218:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801521c:	428b      	cmp	r3, r1
 801521e:	d10b      	bne.n	8015238 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015220:	1884      	adds	r4, r0, r2
 8015222:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015226:	b13b      	cbz	r3, 8015238 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015228:	3b01      	subs	r3, #1
 801522a:	b2db      	uxtb	r3, r3
 801522c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015230:	b90b      	cbnz	r3, 8015236 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015232:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015236:	bd30      	pop	{r4, r5, pc}
 8015238:	3201      	adds	r2, #1
 801523a:	e7ea      	b.n	8015212 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801523c:	2300      	movs	r3, #0
 801523e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015242:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015246:	30a4      	adds	r0, #164	; 0xa4
 8015248:	f802 3b01 	strb.w	r3, [r2], #1
 801524c:	4282      	cmp	r2, r0
 801524e:	d1fb      	bne.n	8015248 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015250:	4770      	bx	lr
	...

08015254 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015254:	b570      	push	{r4, r5, r6, lr}
 8015256:	4c0b      	ldr	r4, [pc, #44]	; (8015284 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015258:	4605      	mov	r5, r0
 801525a:	6820      	ldr	r0, [r4, #0]
 801525c:	460e      	mov	r6, r1
 801525e:	b110      	cbz	r0, 8015266 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015260:	6803      	ldr	r3, [r0, #0]
 8015262:	695b      	ldr	r3, [r3, #20]
 8015264:	4798      	blx	r3
 8015266:	1d28      	adds	r0, r5, #4
 8015268:	f7ff ffe8 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801526c:	6026      	str	r6, [r4, #0]
 801526e:	6833      	ldr	r3, [r6, #0]
 8015270:	4630      	mov	r0, r6
 8015272:	68db      	ldr	r3, [r3, #12]
 8015274:	4798      	blx	r3
 8015276:	682b      	ldr	r3, [r5, #0]
 8015278:	4628      	mov	r0, r5
 801527a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801527c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015280:	4718      	bx	r3
 8015282:	bf00      	nop
 8015284:	20012ea0 	.word	0x20012ea0

08015288 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015288:	2300      	movs	r3, #0
 801528a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801528e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015292:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015294:	461a      	mov	r2, r3
 8015296:	461c      	mov	r4, r3
 8015298:	461d      	mov	r5, r3
 801529a:	459c      	cmp	ip, r3
 801529c:	dd1a      	ble.n	80152d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801529e:	18c6      	adds	r6, r0, r3
 80152a0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80152a4:	b16e      	cbz	r6, 80152c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80152a6:	429a      	cmp	r2, r3
 80152a8:	d008      	beq.n	80152bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80152aa:	fa1f fe82 	uxth.w	lr, r2
 80152ae:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80152b2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80152b6:	1887      	adds	r7, r0, r2
 80152b8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80152bc:	3201      	adds	r2, #1
 80152be:	3301      	adds	r3, #1
 80152c0:	e7eb      	b.n	801529a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80152c2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80152c6:	4299      	cmp	r1, r3
 80152c8:	bfa8      	it	ge
 80152ca:	3501      	addge	r5, #1
 80152cc:	429e      	cmp	r6, r3
 80152ce:	bfc8      	it	gt
 80152d0:	3401      	addgt	r4, #1
 80152d2:	e7f4      	b.n	80152be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80152d4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80152d8:	1b49      	subs	r1, r1, r5
 80152da:	1b1b      	subs	r3, r3, r4
 80152dc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80152e0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80152e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80152e8:	4293      	cmp	r3, r2
 80152ea:	dd03      	ble.n	80152f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80152ec:	3b01      	subs	r3, #1
 80152ee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80152f2:	e7f7      	b.n	80152e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80152f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080152f8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80152f8:	b570      	push	{r4, r5, r6, lr}
 80152fa:	4d16      	ldr	r5, [pc, #88]	; (8015354 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80152fc:	4604      	mov	r4, r0
 80152fe:	6828      	ldr	r0, [r5, #0]
 8015300:	b140      	cbz	r0, 8015314 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015302:	7a03      	ldrb	r3, [r0, #8]
 8015304:	b933      	cbnz	r3, 8015314 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015306:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801530a:	6803      	ldr	r3, [r0, #0]
 801530c:	689b      	ldr	r3, [r3, #8]
 801530e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015312:	4718      	bx	r3
 8015314:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015318:	4e0f      	ldr	r6, [pc, #60]	; (8015358 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801531a:	b973      	cbnz	r3, 801533a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801531c:	b168      	cbz	r0, 801533a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801531e:	7a03      	ldrb	r3, [r0, #8]
 8015320:	b15b      	cbz	r3, 801533a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015322:	6830      	ldr	r0, [r6, #0]
 8015324:	b110      	cbz	r0, 801532c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015326:	6803      	ldr	r3, [r0, #0]
 8015328:	691b      	ldr	r3, [r3, #16]
 801532a:	4798      	blx	r3
 801532c:	6828      	ldr	r0, [r5, #0]
 801532e:	6803      	ldr	r3, [r0, #0]
 8015330:	68db      	ldr	r3, [r3, #12]
 8015332:	4798      	blx	r3
 8015334:	2301      	movs	r3, #1
 8015336:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801533a:	3404      	adds	r4, #4
 801533c:	4620      	mov	r0, r4
 801533e:	f7ff ff45 	bl	80151cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015342:	4620      	mov	r0, r4
 8015344:	f7ff ffa0 	bl	8015288 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015348:	6830      	ldr	r0, [r6, #0]
 801534a:	b110      	cbz	r0, 8015352 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801534c:	6803      	ldr	r3, [r0, #0]
 801534e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015350:	e7dd      	b.n	801530e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015352:	bd70      	pop	{r4, r5, r6, pc}
 8015354:	20012ea4 	.word	0x20012ea4
 8015358:	20012ea0 	.word	0x20012ea0

0801535c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801535c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801535e:	2300      	movs	r3, #0
 8015360:	4604      	mov	r4, r0
 8015362:	460d      	mov	r5, r1
 8015364:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015368:	4618      	mov	r0, r3
 801536a:	b29a      	uxth	r2, r3
 801536c:	4291      	cmp	r1, r2
 801536e:	d911      	bls.n	8015394 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015370:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015374:	18e6      	adds	r6, r4, r3
 8015376:	42af      	cmp	r7, r5
 8015378:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801537c:	d105      	bne.n	801538a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801537e:	2aff      	cmp	r2, #255	; 0xff
 8015380:	d002      	beq.n	8015388 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015382:	3201      	adds	r2, #1
 8015384:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015388:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801538a:	2a00      	cmp	r2, #0
 801538c:	bf08      	it	eq
 801538e:	2001      	moveq	r0, #1
 8015390:	3301      	adds	r3, #1
 8015392:	e7ea      	b.n	801536a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015394:	b120      	cbz	r0, 80153a0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015396:	2920      	cmp	r1, #32
 8015398:	d102      	bne.n	80153a0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801539a:	4620      	mov	r0, r4
 801539c:	f7ff ff74 	bl	8015288 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80153a0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80153a4:	2b1f      	cmp	r3, #31
 80153a6:	d8ef      	bhi.n	8015388 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80153a8:	18e2      	adds	r2, r4, r3
 80153aa:	2101      	movs	r1, #1
 80153ac:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80153b0:	185a      	adds	r2, r3, r1
 80153b2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80153b6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80153ba:	e7e5      	b.n	8015388 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080153bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80153bc:	4603      	mov	r3, r0
 80153be:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80153c2:	2200      	movs	r2, #0
 80153c4:	801a      	strh	r2, [r3, #0]
 80153c6:	805a      	strh	r2, [r3, #2]
 80153c8:	809a      	strh	r2, [r3, #4]
 80153ca:	80da      	strh	r2, [r3, #6]
 80153cc:	3308      	adds	r3, #8
 80153ce:	428b      	cmp	r3, r1
 80153d0:	d1f8      	bne.n	80153c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80153d2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80153d6:	4770      	bx	lr

080153d8 <_ZN8touchgfx11ApplicationC1Ev>:
 80153d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153da:	4606      	mov	r6, r0
 80153dc:	4b1c      	ldr	r3, [pc, #112]	; (8015450 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80153de:	f846 3b04 	str.w	r3, [r6], #4
 80153e2:	4604      	mov	r4, r0
 80153e4:	2500      	movs	r5, #0
 80153e6:	22a8      	movs	r2, #168	; 0xa8
 80153e8:	2100      	movs	r1, #0
 80153ea:	4630      	mov	r0, r6
 80153ec:	f014 ff4f 	bl	802a28e <memset>
 80153f0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80153f4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80153f8:	f7ff ffe0 	bl	80153bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80153fc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015400:	f7ff ffdc 	bl	80153bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015404:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015408:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801540c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015410:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015414:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015418:	490e      	ldr	r1, [pc, #56]	; (8015454 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801541a:	480f      	ldr	r0, [pc, #60]	; (8015458 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801541c:	4f0f      	ldr	r7, [pc, #60]	; (801545c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801541e:	f010 fde9 	bl	8025ff4 <CRC_Lock>
 8015422:	4b0f      	ldr	r3, [pc, #60]	; (8015460 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015424:	b158      	cbz	r0, 801543e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015426:	801d      	strh	r5, [r3, #0]
 8015428:	4a0e      	ldr	r2, [pc, #56]	; (8015464 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801542a:	2300      	movs	r3, #0
 801542c:	6013      	str	r3, [r2, #0]
 801542e:	4a0e      	ldr	r2, [pc, #56]	; (8015468 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015430:	603b      	str	r3, [r7, #0]
 8015432:	4630      	mov	r0, r6
 8015434:	6013      	str	r3, [r2, #0]
 8015436:	f7ff ff01 	bl	801523c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801543a:	4620      	mov	r0, r4
 801543c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801543e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015442:	2002      	movs	r0, #2
 8015444:	801a      	strh	r2, [r3, #0]
 8015446:	6038      	str	r0, [r7, #0]
 8015448:	f001 fb4a 	bl	8016ae0 <_ZN8touchgfx6Screen4drawEv>
 801544c:	e7ec      	b.n	8015428 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801544e:	bf00      	nop
 8015450:	0802e660 	.word	0x0802e660
 8015454:	b5e8b5cd 	.word	0xb5e8b5cd
 8015458:	f407a5c2 	.word	0xf407a5c2
 801545c:	20012ea0 	.word	0x20012ea0
 8015460:	20000088 	.word	0x20000088
 8015464:	20012eb0 	.word	0x20012eb0
 8015468:	20012ea4 	.word	0x20012ea4

0801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801546c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015470:	3b01      	subs	r3, #1
 8015472:	b29b      	uxth	r3, r3
 8015474:	428b      	cmp	r3, r1
 8015476:	b510      	push	{r4, lr}
 8015478:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801547c:	d908      	bls.n	8015490 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801547e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015482:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015486:	681a      	ldr	r2, [r3, #0]
 8015488:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801548c:	685a      	ldr	r2, [r3, #4]
 801548e:	6062      	str	r2, [r4, #4]
 8015490:	bd10      	pop	{r4, pc}
	...

08015494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015498:	4b8f      	ldr	r3, [pc, #572]	; (80156d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801549a:	b08f      	sub	sp, #60	; 0x3c
 801549c:	ac0a      	add	r4, sp, #40	; 0x28
 801549e:	e884 0006 	stmia.w	r4, {r1, r2}
 80154a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80154a6:	4b8d      	ldr	r3, [pc, #564]	; (80156dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80154a8:	4683      	mov	fp, r0
 80154aa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80154ae:	4620      	mov	r0, r4
 80154b0:	f7ff fda1 	bl	8014ff6 <_ZN8touchgfx4Rect10restrictToEss>
 80154b4:	4620      	mov	r0, r4
 80154b6:	f7fa fd8c 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154ba:	2800      	cmp	r0, #0
 80154bc:	d16a      	bne.n	8015594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80154be:	9403      	str	r4, [sp, #12]
 80154c0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80154c4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80154c8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80154cc:	35a4      	adds	r5, #164	; 0xa4
 80154ce:	9301      	str	r3, [sp, #4]
 80154d0:	b15c      	cbz	r4, 80154ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80154d2:	4629      	mov	r1, r5
 80154d4:	9803      	ldr	r0, [sp, #12]
 80154d6:	f7ff fddf 	bl	8015098 <_ZNK8touchgfx4Rect8includesERKS0_>
 80154da:	3c01      	subs	r4, #1
 80154dc:	b118      	cbz	r0, 80154e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80154de:	b2a1      	uxth	r1, r4
 80154e0:	9801      	ldr	r0, [sp, #4]
 80154e2:	f7ff ffc3 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154e6:	3d08      	subs	r5, #8
 80154e8:	e7f2      	b.n	80154d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80154ea:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80154ee:	f8cd a010 	str.w	sl, [sp, #16]
 80154f2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80154f6:	9302      	str	r3, [sp, #8]
 80154f8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80154fc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015500:	9306      	str	r3, [sp, #24]
 8015502:	445c      	add	r4, fp
 8015504:	2500      	movs	r5, #0
 8015506:	4626      	mov	r6, r4
 8015508:	f8cd a014 	str.w	sl, [sp, #20]
 801550c:	462f      	mov	r7, r5
 801550e:	9b05      	ldr	r3, [sp, #20]
 8015510:	2b00      	cmp	r3, #0
 8015512:	d073      	beq.n	80155fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015514:	9903      	ldr	r1, [sp, #12]
 8015516:	4630      	mov	r0, r6
 8015518:	f7ff fd4b 	bl	8014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801551c:	b350      	cbz	r0, 8015574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801551e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015522:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015526:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801552a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801552e:	45e6      	cmp	lr, ip
 8015530:	db33      	blt.n	801559a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015532:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015536:	88b3      	ldrh	r3, [r6, #4]
 8015538:	4472      	add	r2, lr
 801553a:	4463      	add	r3, ip
 801553c:	b212      	sxth	r2, r2
 801553e:	b21b      	sxth	r3, r3
 8015540:	429a      	cmp	r2, r3
 8015542:	dc2a      	bgt.n	801559a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015544:	88f3      	ldrh	r3, [r6, #6]
 8015546:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801554a:	fa1f f289 	uxth.w	r2, r9
 801554e:	4413      	add	r3, r2
 8015550:	b29b      	uxth	r3, r3
 8015552:	45c8      	cmp	r8, r9
 8015554:	fa1f fc88 	uxth.w	ip, r8
 8015558:	fa0f fe83 	sxth.w	lr, r3
 801555c:	db0f      	blt.n	801557e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801555e:	eba3 030c 	sub.w	r3, r3, ip
 8015562:	1ac9      	subs	r1, r1, r3
 8015564:	b209      	sxth	r1, r1
 8015566:	2900      	cmp	r1, #0
 8015568:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801556c:	dd12      	ble.n	8015594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801556e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015572:	4605      	mov	r5, r0
 8015574:	9b05      	ldr	r3, [sp, #20]
 8015576:	3b01      	subs	r3, #1
 8015578:	9305      	str	r3, [sp, #20]
 801557a:	3e08      	subs	r6, #8
 801557c:	e7c7      	b.n	801550e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801557e:	4461      	add	r1, ip
 8015580:	b209      	sxth	r1, r1
 8015582:	4571      	cmp	r1, lr
 8015584:	dc38      	bgt.n	80155f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015586:	eba2 020c 	sub.w	r2, r2, ip
 801558a:	b212      	sxth	r2, r2
 801558c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015590:	2a00      	cmp	r2, #0
 8015592:	dcee      	bgt.n	8015572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015594:	b00f      	add	sp, #60	; 0x3c
 8015596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801559a:	45c8      	cmp	r8, r9
 801559c:	db2c      	blt.n	80155f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801559e:	88f3      	ldrh	r3, [r6, #6]
 80155a0:	4499      	add	r9, r3
 80155a2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80155a6:	4498      	add	r8, r3
 80155a8:	fa0f f989 	sxth.w	r9, r9
 80155ac:	fa0f f888 	sxth.w	r8, r8
 80155b0:	45c1      	cmp	r9, r8
 80155b2:	db21      	blt.n	80155f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80155b4:	88b3      	ldrh	r3, [r6, #4]
 80155b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80155ba:	fa1f f28c 	uxth.w	r2, ip
 80155be:	4413      	add	r3, r2
 80155c0:	b29b      	uxth	r3, r3
 80155c2:	45e6      	cmp	lr, ip
 80155c4:	fa1f f88e 	uxth.w	r8, lr
 80155c8:	fa0f f983 	sxth.w	r9, r3
 80155cc:	db0a      	blt.n	80155e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80155ce:	eba3 0308 	sub.w	r3, r3, r8
 80155d2:	1ac9      	subs	r1, r1, r3
 80155d4:	b209      	sxth	r1, r1
 80155d6:	2900      	cmp	r1, #0
 80155d8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80155dc:	ddda      	ble.n	8015594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80155de:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80155e2:	e7c6      	b.n	8015572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80155e4:	4441      	add	r1, r8
 80155e6:	b209      	sxth	r1, r1
 80155e8:	4549      	cmp	r1, r9
 80155ea:	dc05      	bgt.n	80155f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80155ec:	eba2 0208 	sub.w	r2, r2, r8
 80155f0:	b212      	sxth	r2, r2
 80155f2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80155f6:	e7cb      	b.n	8015590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80155f8:	4607      	mov	r7, r0
 80155fa:	e7bb      	b.n	8015574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80155fc:	2d00      	cmp	r5, #0
 80155fe:	d181      	bne.n	8015504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015600:	2f00      	cmp	r7, #0
 8015602:	f000 81dd 	beq.w	80159c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015606:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801560a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801560e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015612:	b2b3      	uxth	r3, r6
 8015614:	9305      	str	r3, [sp, #20]
 8015616:	9a05      	ldr	r2, [sp, #20]
 8015618:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801561c:	4413      	add	r3, r2
 801561e:	b2ba      	uxth	r2, r7
 8015620:	4492      	add	sl, r2
 8015622:	b29b      	uxth	r3, r3
 8015624:	fa1f fa8a 	uxth.w	sl, sl
 8015628:	fa0f f883 	sxth.w	r8, r3
 801562c:	fa0f f98a 	sxth.w	r9, sl
 8015630:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015634:	9b04      	ldr	r3, [sp, #16]
 8015636:	2b00      	cmp	r3, #0
 8015638:	d052      	beq.n	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801563a:	9903      	ldr	r1, [sp, #12]
 801563c:	4620      	mov	r0, r4
 801563e:	f7ff fcb8 	bl	8014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015642:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015646:	b1c0      	cbz	r0, 801567a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015648:	f9b4 e000 	ldrsh.w	lr, [r4]
 801564c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015650:	4576      	cmp	r6, lr
 8015652:	dc22      	bgt.n	801569a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015654:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015658:	44f4      	add	ip, lr
 801565a:	fa0f fc8c 	sxth.w	ip, ip
 801565e:	45e0      	cmp	r8, ip
 8015660:	db1b      	blt.n	801569a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015662:	428f      	cmp	r7, r1
 8015664:	fa1f fc81 	uxth.w	ip, r1
 8015668:	88e1      	ldrh	r1, [r4, #6]
 801566a:	dc0d      	bgt.n	8015688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801566c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015670:	eba1 010c 	sub.w	r1, r1, ip
 8015674:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015678:	80e1      	strh	r1, [r4, #6]
 801567a:	4628      	mov	r0, r5
 801567c:	9904      	ldr	r1, [sp, #16]
 801567e:	3901      	subs	r1, #1
 8015680:	9104      	str	r1, [sp, #16]
 8015682:	3c08      	subs	r4, #8
 8015684:	4605      	mov	r5, r0
 8015686:	e7d3      	b.n	8015630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015688:	4461      	add	r1, ip
 801568a:	b209      	sxth	r1, r1
 801568c:	4549      	cmp	r1, r9
 801568e:	dcf5      	bgt.n	801567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015690:	eba2 0c0c 	sub.w	ip, r2, ip
 8015694:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015698:	e7ef      	b.n	801567a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801569a:	428f      	cmp	r7, r1
 801569c:	dcee      	bgt.n	801567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801569e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80156a2:	4461      	add	r1, ip
 80156a4:	b209      	sxth	r1, r1
 80156a6:	4589      	cmp	r9, r1
 80156a8:	dbe8      	blt.n	801567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80156aa:	4576      	cmp	r6, lr
 80156ac:	fa1f fc8e 	uxth.w	ip, lr
 80156b0:	88a1      	ldrh	r1, [r4, #4]
 80156b2:	dc07      	bgt.n	80156c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80156b4:	eba3 0c0c 	sub.w	ip, r3, ip
 80156b8:	eba1 010c 	sub.w	r1, r1, ip
 80156bc:	f8a4 8000 	strh.w	r8, [r4]
 80156c0:	80a1      	strh	r1, [r4, #4]
 80156c2:	e7da      	b.n	801567a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80156c4:	4461      	add	r1, ip
 80156c6:	b209      	sxth	r1, r1
 80156c8:	4588      	cmp	r8, r1
 80156ca:	dbd7      	blt.n	801567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80156cc:	9905      	ldr	r1, [sp, #20]
 80156ce:	eba1 0c0c 	sub.w	ip, r1, ip
 80156d2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80156d6:	e7d0      	b.n	801567a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80156d8:	20012e52 	.word	0x20012e52
 80156dc:	20012e50 	.word	0x20012e50
 80156e0:	2d00      	cmp	r5, #0
 80156e2:	f000 816d 	beq.w	80159c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80156e6:	9b06      	ldr	r3, [sp, #24]
 80156e8:	445b      	add	r3, fp
 80156ea:	461c      	mov	r4, r3
 80156ec:	9b02      	ldr	r3, [sp, #8]
 80156ee:	3301      	adds	r3, #1
 80156f0:	f000 8166 	beq.w	80159c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80156f4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80156f8:	4629      	mov	r1, r5
 80156fa:	9803      	ldr	r0, [sp, #12]
 80156fc:	f7ff fccc 	bl	8015098 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015700:	b120      	cbz	r0, 801570c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015702:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015706:	9801      	ldr	r0, [sp, #4]
 8015708:	f7ff feb0 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801570c:	9903      	ldr	r1, [sp, #12]
 801570e:	4628      	mov	r0, r5
 8015710:	f7ff fc4f 	bl	8014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015714:	2800      	cmp	r0, #0
 8015716:	f000 809c 	beq.w	8015852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801571a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801571e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015722:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015726:	9309      	str	r3, [sp, #36]	; 0x24
 8015728:	fa1f f189 	uxth.w	r1, r9
 801572c:	eb01 0c03 	add.w	ip, r1, r3
 8015730:	fa1f fa8c 	uxth.w	sl, ip
 8015734:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015738:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801573c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015740:	b283      	uxth	r3, r0
 8015742:	eb03 050c 	add.w	r5, r3, ip
 8015746:	b2ad      	uxth	r5, r5
 8015748:	9505      	str	r5, [sp, #20]
 801574a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801574e:	9504      	str	r5, [sp, #16]
 8015750:	4548      	cmp	r0, r9
 8015752:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015756:	f340 8099 	ble.w	801588c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801575a:	1a5b      	subs	r3, r3, r1
 801575c:	b29b      	uxth	r3, r3
 801575e:	4596      	cmp	lr, r2
 8015760:	fa0f f08a 	sxth.w	r0, sl
 8015764:	b21e      	sxth	r6, r3
 8015766:	dd2e      	ble.n	80157c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015768:	9f02      	ldr	r7, [sp, #8]
 801576a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801576e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015772:	9f04      	ldr	r7, [sp, #16]
 8015774:	1a3f      	subs	r7, r7, r0
 8015776:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801577a:	fa1f fe8e 	uxth.w	lr, lr
 801577e:	b292      	uxth	r2, r2
 8015780:	ebae 0102 	sub.w	r1, lr, r2
 8015784:	44a6      	add	lr, r4
 8015786:	4402      	add	r2, r0
 8015788:	b289      	uxth	r1, r1
 801578a:	fa0f fe8e 	sxth.w	lr, lr
 801578e:	b212      	sxth	r2, r2
 8015790:	b20d      	sxth	r5, r1
 8015792:	ebae 0202 	sub.w	r2, lr, r2
 8015796:	436f      	muls	r7, r5
 8015798:	4372      	muls	r2, r6
 801579a:	4297      	cmp	r7, r2
 801579c:	db09      	blt.n	80157b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801579e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80157a2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80157a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80157aa:	449c      	add	ip, r3
 80157ac:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80157b0:	e686      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80157b2:	4421      	add	r1, r4
 80157b4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80157b8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80157bc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80157c0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80157c4:	e67c      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80157c6:	9f04      	ldr	r7, [sp, #16]
 80157c8:	42b8      	cmp	r0, r7
 80157ca:	da27      	bge.n	801581c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80157cc:	9902      	ldr	r1, [sp, #8]
 80157ce:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80157d2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80157d6:	eb05 010e 	add.w	r1, r5, lr
 80157da:	fa1f f881 	uxth.w	r8, r1
 80157de:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80157e2:	4411      	add	r1, r2
 80157e4:	eba1 0108 	sub.w	r1, r1, r8
 80157e8:	b289      	uxth	r1, r1
 80157ea:	fa0f f988 	sxth.w	r9, r8
 80157ee:	eba2 020e 	sub.w	r2, r2, lr
 80157f2:	fa0f f881 	sxth.w	r8, r1
 80157f6:	1a3f      	subs	r7, r7, r0
 80157f8:	4372      	muls	r2, r6
 80157fa:	fb08 f707 	mul.w	r7, r8, r7
 80157fe:	42ba      	cmp	r2, r7
 8015800:	dc06      	bgt.n	8015810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015802:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015806:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801580a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801580e:	e7ca      	b.n	80157a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015810:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015814:	4429      	add	r1, r5
 8015816:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801581a:	e651      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801581c:	9805      	ldr	r0, [sp, #20]
 801581e:	ebaa 0000 	sub.w	r0, sl, r0
 8015822:	b280      	uxth	r0, r0
 8015824:	2d06      	cmp	r5, #6
 8015826:	fa0f fe80 	sxth.w	lr, r0
 801582a:	d817      	bhi.n	801585c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801582c:	9b04      	ldr	r3, [sp, #16]
 801582e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015832:	1c6b      	adds	r3, r5, #1
 8015834:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015838:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801583c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015840:	9b01      	ldr	r3, [sp, #4]
 8015842:	9801      	ldr	r0, [sp, #4]
 8015844:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015848:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801584c:	805a      	strh	r2, [r3, #2]
 801584e:	809e      	strh	r6, [r3, #4]
 8015850:	80d9      	strh	r1, [r3, #6]
 8015852:	9b02      	ldr	r3, [sp, #8]
 8015854:	3b01      	subs	r3, #1
 8015856:	9302      	str	r3, [sp, #8]
 8015858:	3c08      	subs	r4, #8
 801585a:	e747      	b.n	80156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801585c:	9a02      	ldr	r2, [sp, #8]
 801585e:	45b6      	cmp	lr, r6
 8015860:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015864:	db0d      	blt.n	8015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015866:	449c      	add	ip, r3
 8015868:	fa1f fc8c 	uxth.w	ip, ip
 801586c:	445a      	add	r2, fp
 801586e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015872:	448c      	add	ip, r1
 8015874:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015878:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801587c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015880:	e61e      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015882:	445a      	add	r2, fp
 8015884:	4484      	add	ip, r0
 8015886:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801588a:	e78f      	b.n	80157ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801588c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015890:	fa1f f18e 	uxth.w	r1, lr
 8015894:	eb01 0806 	add.w	r8, r1, r6
 8015898:	b293      	uxth	r3, r2
 801589a:	fa1f f888 	uxth.w	r8, r8
 801589e:	9306      	str	r3, [sp, #24]
 80158a0:	fa0f f388 	sxth.w	r3, r8
 80158a4:	9307      	str	r3, [sp, #28]
 80158a6:	9f06      	ldr	r7, [sp, #24]
 80158a8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80158ac:	443b      	add	r3, r7
 80158ae:	b29b      	uxth	r3, r3
 80158b0:	4596      	cmp	lr, r2
 80158b2:	9308      	str	r3, [sp, #32]
 80158b4:	da24      	bge.n	8015900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80158b6:	9905      	ldr	r1, [sp, #20]
 80158b8:	eba3 0308 	sub.w	r3, r3, r8
 80158bc:	ebaa 0401 	sub.w	r4, sl, r1
 80158c0:	b2a4      	uxth	r4, r4
 80158c2:	b29b      	uxth	r3, r3
 80158c4:	b225      	sxth	r5, r4
 80158c6:	b219      	sxth	r1, r3
 80158c8:	eba2 020e 	sub.w	r2, r2, lr
 80158cc:	eba9 0000 	sub.w	r0, r9, r0
 80158d0:	436a      	muls	r2, r5
 80158d2:	4348      	muls	r0, r1
 80158d4:	4282      	cmp	r2, r0
 80158d6:	9a02      	ldr	r2, [sp, #8]
 80158d8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80158dc:	445a      	add	r2, fp
 80158de:	dc06      	bgt.n	80158ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80158e0:	9b07      	ldr	r3, [sp, #28]
 80158e2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80158e6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80158ea:	44a4      	add	ip, r4
 80158ec:	e75e      	b.n	80157ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80158ee:	9904      	ldr	r1, [sp, #16]
 80158f0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80158f4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80158f8:	4433      	add	r3, r6
 80158fa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80158fe:	e5df      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015900:	9f06      	ldr	r7, [sp, #24]
 8015902:	9b04      	ldr	r3, [sp, #16]
 8015904:	1bc9      	subs	r1, r1, r7
 8015906:	fa0f f78a 	sxth.w	r7, sl
 801590a:	b289      	uxth	r1, r1
 801590c:	429f      	cmp	r7, r3
 801590e:	fa0f fe81 	sxth.w	lr, r1
 8015912:	dd23      	ble.n	801595c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015914:	9a05      	ldr	r2, [sp, #20]
 8015916:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801591a:	9d07      	ldr	r5, [sp, #28]
 801591c:	ebaa 0202 	sub.w	r2, sl, r2
 8015920:	b292      	uxth	r2, r2
 8015922:	eba5 0a03 	sub.w	sl, r5, r3
 8015926:	b214      	sxth	r4, r2
 8015928:	eba9 0000 	sub.w	r0, r9, r0
 801592c:	9b02      	ldr	r3, [sp, #8]
 801592e:	fb0e f000 	mul.w	r0, lr, r0
 8015932:	fb04 fa0a 	mul.w	sl, r4, sl
 8015936:	00db      	lsls	r3, r3, #3
 8015938:	4550      	cmp	r0, sl
 801593a:	445b      	add	r3, fp
 801593c:	db03      	blt.n	8015946 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801593e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015942:	4494      	add	ip, r2
 8015944:	e732      	b.n	80157ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015946:	9a04      	ldr	r2, [sp, #16]
 8015948:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801594c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015950:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015954:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015958:	4431      	add	r1, r6
 801595a:	e75c      	b.n	8015816 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801595c:	9b08      	ldr	r3, [sp, #32]
 801595e:	eba3 0308 	sub.w	r3, r3, r8
 8015962:	b29b      	uxth	r3, r3
 8015964:	2d06      	cmp	r5, #6
 8015966:	b218      	sxth	r0, r3
 8015968:	d813      	bhi.n	8015992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801596a:	9b07      	ldr	r3, [sp, #28]
 801596c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015970:	1c6b      	adds	r3, r5, #1
 8015972:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015976:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801597a:	9b01      	ldr	r3, [sp, #4]
 801597c:	9901      	ldr	r1, [sp, #4]
 801597e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015982:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015986:	805a      	strh	r2, [r3, #2]
 8015988:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801598a:	809a      	strh	r2, [r3, #4]
 801598c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015990:	e75f      	b.n	8015852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015992:	9c02      	ldr	r4, [sp, #8]
 8015994:	4570      	cmp	r0, lr
 8015996:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801599a:	db0d      	blt.n	80159b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801599c:	4431      	add	r1, r6
 801599e:	9b06      	ldr	r3, [sp, #24]
 80159a0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80159a4:	b289      	uxth	r1, r1
 80159a6:	445c      	add	r4, fp
 80159a8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80159ac:	4419      	add	r1, r3
 80159ae:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80159b2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80159b6:	e583      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80159b8:	445c      	add	r4, fp
 80159ba:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80159be:	e79b      	b.n	80158f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80159c0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80159c4:	1e65      	subs	r5, r4, #1
 80159c6:	b2ad      	uxth	r5, r5
 80159c8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80159cc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80159d0:	42b5      	cmp	r5, r6
 80159d2:	d044      	beq.n	8015a5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80159d4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80159d8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80159dc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80159e0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80159e4:	4282      	cmp	r2, r0
 80159e6:	d11f      	bne.n	8015a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80159e8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80159ec:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80159f0:	459c      	cmp	ip, r3
 80159f2:	d119      	bne.n	8015a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80159f4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80159f8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80159fc:	19d8      	adds	r0, r3, r7
 80159fe:	b200      	sxth	r0, r0
 8015a00:	4288      	cmp	r0, r1
 8015a02:	d109      	bne.n	8015a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015a04:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015a08:	4413      	add	r3, r2
 8015a0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015a0e:	4629      	mov	r1, r5
 8015a10:	9801      	ldr	r0, [sp, #4]
 8015a12:	f7ff fd2b 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015a16:	e003      	b.n	8015a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015a18:	4411      	add	r1, r2
 8015a1a:	b209      	sxth	r1, r1
 8015a1c:	42b9      	cmp	r1, r7
 8015a1e:	d0f3      	beq.n	8015a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015a20:	3d01      	subs	r5, #1
 8015a22:	b2ad      	uxth	r5, r5
 8015a24:	3c08      	subs	r4, #8
 8015a26:	e7d3      	b.n	80159d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015a28:	42b9      	cmp	r1, r7
 8015a2a:	d1f9      	bne.n	8015a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015a2c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015a30:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015a34:	4299      	cmp	r1, r3
 8015a36:	d1f3      	bne.n	8015a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015a38:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015a3c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015a40:	181f      	adds	r7, r3, r0
 8015a42:	b23f      	sxth	r7, r7
 8015a44:	42ba      	cmp	r2, r7
 8015a46:	d105      	bne.n	8015a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015a48:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015a4c:	440b      	add	r3, r1
 8015a4e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015a52:	e7dc      	b.n	8015a0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015a54:	440a      	add	r2, r1
 8015a56:	b212      	sxth	r2, r2
 8015a58:	4290      	cmp	r0, r2
 8015a5a:	d1e1      	bne.n	8015a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015a5c:	e7f6      	b.n	8015a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015a5e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015a62:	2e07      	cmp	r6, #7
 8015a64:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015a68:	d812      	bhi.n	8015a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015a6a:	1c75      	adds	r5, r6, #1
 8015a6c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015a70:	9d01      	ldr	r5, [sp, #4]
 8015a72:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015a76:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015a7a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015a7e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015a82:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015a86:	442c      	add	r4, r5
 8015a88:	8061      	strh	r1, [r4, #2]
 8015a8a:	80a2      	strh	r2, [r4, #4]
 8015a8c:	80e3      	strh	r3, [r4, #6]
 8015a8e:	e581      	b.n	8015594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015a90:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015a94:	3e01      	subs	r6, #1
 8015a96:	445c      	add	r4, fp
 8015a98:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015a9c:	f04f 37ff 	mov.w	r7, #4294967295
 8015aa0:	2500      	movs	r5, #0
 8015aa2:	9305      	str	r3, [sp, #20]
 8015aa4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015aa8:	9302      	str	r3, [sp, #8]
 8015aaa:	1e72      	subs	r2, r6, #1
 8015aac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015ab0:	9304      	str	r3, [sp, #16]
 8015ab2:	4691      	mov	r9, r2
 8015ab4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015ab8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015abc:	bf14      	ite	ne
 8015abe:	9905      	ldrne	r1, [sp, #20]
 8015ac0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015ac4:	6818      	ldr	r0, [r3, #0]
 8015ac6:	9207      	str	r2, [sp, #28]
 8015ac8:	bf18      	it	ne
 8015aca:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015ace:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015ad2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015ad6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015ada:	9306      	str	r3, [sp, #24]
 8015adc:	fb18 f801 	smulbb	r8, r8, r1
 8015ae0:	6859      	ldr	r1, [r3, #4]
 8015ae2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015ae6:	4671      	mov	r1, lr
 8015ae8:	a80c      	add	r0, sp, #48	; 0x30
 8015aea:	f7ff fafb 	bl	80150e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015aee:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015af2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015af6:	9b04      	ldr	r3, [sp, #16]
 8015af8:	9a02      	ldr	r2, [sp, #8]
 8015afa:	fb10 f001 	smulbb	r0, r0, r1
 8015afe:	fb02 8803 	mla	r8, r2, r3, r8
 8015b02:	eba0 0108 	sub.w	r1, r0, r8
 8015b06:	f04f 0c08 	mov.w	ip, #8
 8015b0a:	fb90 f0fc 	sdiv	r0, r0, ip
 8015b0e:	4288      	cmp	r0, r1
 8015b10:	dc20      	bgt.n	8015b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015b12:	4551      	cmp	r1, sl
 8015b14:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015b18:	da03      	bge.n	8015b22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015b1a:	b1d9      	cbz	r1, 8015b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015b1c:	468a      	mov	sl, r1
 8015b1e:	464f      	mov	r7, r9
 8015b20:	4635      	mov	r5, r6
 8015b22:	f109 39ff 	add.w	r9, r9, #4294967295
 8015b26:	f119 0f02 	cmn.w	r9, #2
 8015b2a:	d1c5      	bne.n	8015ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015b2c:	4616      	mov	r6, r2
 8015b2e:	3201      	adds	r2, #1
 8015b30:	f1a4 0408 	sub.w	r4, r4, #8
 8015b34:	d1b6      	bne.n	8015aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015b36:	9b01      	ldr	r3, [sp, #4]
 8015b38:	b2ac      	uxth	r4, r5
 8015b3a:	00ed      	lsls	r5, r5, #3
 8015b3c:	1958      	adds	r0, r3, r5
 8015b3e:	1c7b      	adds	r3, r7, #1
 8015b40:	d10b      	bne.n	8015b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015b42:	4601      	mov	r1, r0
 8015b44:	9803      	ldr	r0, [sp, #12]
 8015b46:	f7ff facd 	bl	80150e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015b4a:	4621      	mov	r1, r4
 8015b4c:	9801      	ldr	r0, [sp, #4]
 8015b4e:	f7ff fc8d 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015b52:	e4b5      	b.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b54:	464f      	mov	r7, r9
 8015b56:	4635      	mov	r5, r6
 8015b58:	e7ed      	b.n	8015b36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015b5a:	9b01      	ldr	r3, [sp, #4]
 8015b5c:	00ff      	lsls	r7, r7, #3
 8015b5e:	19d9      	adds	r1, r3, r7
 8015b60:	f7ff fac0 	bl	80150e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015b64:	9b03      	ldr	r3, [sp, #12]
 8015b66:	cb03      	ldmia	r3!, {r0, r1}
 8015b68:	445f      	add	r7, fp
 8015b6a:	445d      	add	r5, fp
 8015b6c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015b70:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015b74:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015b78:	9b03      	ldr	r3, [sp, #12]
 8015b7a:	6869      	ldr	r1, [r5, #4]
 8015b7c:	c303      	stmia	r3!, {r0, r1}
 8015b7e:	e7e4      	b.n	8015b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015b80 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b84:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015b88:	b09b      	sub	sp, #108	; 0x6c
 8015b8a:	4604      	mov	r4, r0
 8015b8c:	4630      	mov	r0, r6
 8015b8e:	f7fa fa20 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b92:	4605      	mov	r5, r0
 8015b94:	b948      	cbnz	r0, 8015baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015b96:	6823      	ldr	r3, [r4, #0]
 8015b98:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015b9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015b9e:	4620      	mov	r0, r4
 8015ba0:	4798      	blx	r3
 8015ba2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015ba6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015baa:	4bc6      	ldr	r3, [pc, #792]	; (8015ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015bac:	681b      	ldr	r3, [r3, #0]
 8015bae:	2b00      	cmp	r3, #0
 8015bb0:	d03f      	beq.n	8015c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015bb2:	4dc5      	ldr	r5, [pc, #788]	; (8015ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015bb4:	4628      	mov	r0, r5
 8015bb6:	f7fa fa0c 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015bba:	4606      	mov	r6, r0
 8015bbc:	2800      	cmp	r0, #0
 8015bbe:	d138      	bne.n	8015c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015bc0:	4628      	mov	r0, r5
 8015bc2:	f7ff f907 	bl	8014dd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015bc6:	6823      	ldr	r3, [r4, #0]
 8015bc8:	6829      	ldr	r1, [r5, #0]
 8015bca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015bcc:	686a      	ldr	r2, [r5, #4]
 8015bce:	4620      	mov	r0, r4
 8015bd0:	4798      	blx	r3
 8015bd2:	802e      	strh	r6, [r5, #0]
 8015bd4:	806e      	strh	r6, [r5, #2]
 8015bd6:	80ae      	strh	r6, [r5, #4]
 8015bd8:	80ee      	strh	r6, [r5, #6]
 8015bda:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015bde:	4dbb      	ldr	r5, [pc, #748]	; (8015ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015be0:	4640      	mov	r0, r8
 8015be2:	f7ff fbeb 	bl	80153bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015be6:	882e      	ldrh	r6, [r5, #0]
 8015be8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015bec:	4633      	mov	r3, r6
 8015bee:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015bf2:	42bb      	cmp	r3, r7
 8015bf4:	d224      	bcs.n	8015c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015bf6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015bfa:	2907      	cmp	r1, #7
 8015bfc:	d816      	bhi.n	8015c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015bfe:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015c02:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015c06:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015c0a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015c0e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015c12:	1c4a      	adds	r2, r1, #1
 8015c14:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015c18:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015c1c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015c20:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015c24:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015c28:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015c2c:	3301      	adds	r3, #1
 8015c2e:	b29b      	uxth	r3, r3
 8015c30:	e7df      	b.n	8015bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015c32:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015c36:	2b00      	cmp	r3, #0
 8015c38:	d1cf      	bne.n	8015bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015c3a:	b01b      	add	sp, #108	; 0x6c
 8015c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c40:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015c44:	42b3      	cmp	r3, r6
 8015c46:	d90c      	bls.n	8015c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015c48:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015c4c:	6822      	ldr	r2, [r4, #0]
 8015c4e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015c52:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015c54:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015c58:	4620      	mov	r0, r4
 8015c5a:	3601      	adds	r6, #1
 8015c5c:	47b8      	blx	r7
 8015c5e:	b2b6      	uxth	r6, r6
 8015c60:	e7ee      	b.n	8015c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015c62:	4a9b      	ldr	r2, [pc, #620]	; (8015ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015c64:	6813      	ldr	r3, [r2, #0]
 8015c66:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015c6a:	2b01      	cmp	r3, #1
 8015c6c:	4691      	mov	r9, r2
 8015c6e:	f040 80e2 	bne.w	8015e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015c72:	8829      	ldrh	r1, [r5, #0]
 8015c74:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015c78:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015c7c:	33ae      	adds	r3, #174	; 0xae
 8015c7e:	2600      	movs	r6, #0
 8015c80:	428f      	cmp	r7, r1
 8015c82:	f103 0308 	add.w	r3, r3, #8
 8015c86:	dd0a      	ble.n	8015c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015c88:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015c8c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015c90:	4402      	add	r2, r0
 8015c92:	b212      	sxth	r2, r2
 8015c94:	4296      	cmp	r6, r2
 8015c96:	bfb8      	it	lt
 8015c98:	4616      	movlt	r6, r2
 8015c9a:	3101      	adds	r1, #1
 8015c9c:	e7f0      	b.n	8015c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015c9e:	4b8d      	ldr	r3, [pc, #564]	; (8015ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015ca0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015ca4:	881b      	ldrh	r3, [r3, #0]
 8015ca6:	2b0f      	cmp	r3, #15
 8015ca8:	bf88      	it	hi
 8015caa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015cae:	f04f 0300 	mov.w	r3, #0
 8015cb2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015cb6:	bf98      	it	ls
 8015cb8:	f04f 0b01 	movls.w	fp, #1
 8015cbc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015cc0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015cc4:	4b82      	ldr	r3, [pc, #520]	; (8015ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015cc6:	4438      	add	r0, r7
 8015cc8:	b207      	sxth	r7, r0
 8015cca:	6818      	ldr	r0, [r3, #0]
 8015ccc:	42b7      	cmp	r7, r6
 8015cce:	6803      	ldr	r3, [r0, #0]
 8015cd0:	f280 8083 	bge.w	8015dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015cd4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015cd8:	4798      	blx	r3
 8015cda:	eb07 030b 	add.w	r3, r7, fp
 8015cde:	4298      	cmp	r0, r3
 8015ce0:	da07      	bge.n	8015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ce2:	42b0      	cmp	r0, r6
 8015ce4:	da05      	bge.n	8015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ce6:	4287      	cmp	r7, r0
 8015ce8:	dd6c      	ble.n	8015dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015cea:	2f00      	cmp	r7, #0
 8015cec:	dd6a      	ble.n	8015dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015cee:	4630      	mov	r0, r6
 8015cf0:	e004      	b.n	8015cfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015cf2:	4287      	cmp	r7, r0
 8015cf4:	dcfb      	bgt.n	8015cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015cf6:	42b0      	cmp	r0, r6
 8015cf8:	bfa8      	it	ge
 8015cfa:	4630      	movge	r0, r6
 8015cfc:	4b76      	ldr	r3, [pc, #472]	; (8015ed8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015cfe:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015d02:	1bc0      	subs	r0, r0, r7
 8015d04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d08:	882f      	ldrh	r7, [r5, #0]
 8015d0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015d0e:	2200      	movs	r2, #0
 8015d10:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015d14:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015d18:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015d1c:	42bb      	cmp	r3, r7
 8015d1e:	d9cd      	bls.n	8015cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015d20:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015d24:	ab07      	add	r3, sp, #28
 8015d26:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015d2a:	6851      	ldr	r1, [r2, #4]
 8015d2c:	c303      	stmia	r3!, {r0, r1}
 8015d2e:	a905      	add	r1, sp, #20
 8015d30:	a807      	add	r0, sp, #28
 8015d32:	f7ff f93e 	bl	8014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015d36:	2800      	cmp	r0, #0
 8015d38:	d04c      	beq.n	8015dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015d3a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015d3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015d42:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015d46:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015d4a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015d4e:	9302      	str	r3, [sp, #8]
 8015d50:	4686      	mov	lr, r0
 8015d52:	4290      	cmp	r0, r2
 8015d54:	4450      	add	r0, sl
 8015d56:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015d5a:	bfb8      	it	lt
 8015d5c:	4696      	movlt	lr, r2
 8015d5e:	4452      	add	r2, sl
 8015d60:	4299      	cmp	r1, r3
 8015d62:	b280      	uxth	r0, r0
 8015d64:	b292      	uxth	r2, r2
 8015d66:	468c      	mov	ip, r1
 8015d68:	fa0f fa82 	sxth.w	sl, r2
 8015d6c:	bfb8      	it	lt
 8015d6e:	469c      	movlt	ip, r3
 8015d70:	b203      	sxth	r3, r0
 8015d72:	4553      	cmp	r3, sl
 8015d74:	bfb8      	it	lt
 8015d76:	4602      	movlt	r2, r0
 8015d78:	eba2 020e 	sub.w	r2, r2, lr
 8015d7c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015d80:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015d84:	9b02      	ldr	r3, [sp, #8]
 8015d86:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015d8a:	4411      	add	r1, r2
 8015d8c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015d90:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015d94:	4413      	add	r3, r2
 8015d96:	b289      	uxth	r1, r1
 8015d98:	b29b      	uxth	r3, r3
 8015d9a:	b208      	sxth	r0, r1
 8015d9c:	b21a      	sxth	r2, r3
 8015d9e:	4290      	cmp	r0, r2
 8015da0:	bfb8      	it	lt
 8015da2:	460b      	movlt	r3, r1
 8015da4:	eba3 030c 	sub.w	r3, r3, ip
 8015da8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015dac:	a807      	add	r0, sp, #28
 8015dae:	f7fa f910 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015db2:	b920      	cbnz	r0, 8015dbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015db4:	6823      	ldr	r3, [r4, #0]
 8015db6:	a907      	add	r1, sp, #28
 8015db8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015dba:	4620      	mov	r0, r4
 8015dbc:	4798      	blx	r3
 8015dbe:	3701      	adds	r7, #1
 8015dc0:	b2bf      	uxth	r7, r7
 8015dc2:	e7a9      	b.n	8015d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015dc4:	f8d9 0000 	ldr.w	r0, [r9]
 8015dc8:	6803      	ldr	r3, [r0, #0]
 8015dca:	2101      	movs	r1, #1
 8015dcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015dd0:	4798      	blx	r3
 8015dd2:	e773      	b.n	8015cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015dd4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015dd8:	e7e8      	b.n	8015dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015dda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015ddc:	4798      	blx	r3
 8015dde:	4b3f      	ldr	r3, [pc, #252]	; (8015edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015de0:	781b      	ldrb	r3, [r3, #0]
 8015de2:	2b00      	cmp	r3, #0
 8015de4:	f43f af29 	beq.w	8015c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015de8:	2300      	movs	r3, #0
 8015dea:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015dee:	882b      	ldrh	r3, [r5, #0]
 8015df0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015df4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015df8:	42ab      	cmp	r3, r5
 8015dfa:	f4bf af1e 	bcs.w	8015c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015dfe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015e02:	2907      	cmp	r1, #7
 8015e04:	d814      	bhi.n	8015e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015e06:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015e0a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015e0e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015e12:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015e16:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015e1a:	1c4a      	adds	r2, r1, #1
 8015e1c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015e20:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015e24:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015e28:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015e2c:	8097      	strh	r7, [r2, #4]
 8015e2e:	80d6      	strh	r6, [r2, #6]
 8015e30:	3301      	adds	r3, #1
 8015e32:	b29b      	uxth	r3, r3
 8015e34:	e7e0      	b.n	8015df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015e36:	2b02      	cmp	r3, #2
 8015e38:	f040 8133 	bne.w	80160a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015e3c:	4b28      	ldr	r3, [pc, #160]	; (8015ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015e3e:	781b      	ldrb	r3, [r3, #0]
 8015e40:	2b01      	cmp	r3, #1
 8015e42:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015e46:	f000 8098 	beq.w	8015f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015e4a:	882a      	ldrh	r2, [r5, #0]
 8015e4c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015e50:	3201      	adds	r2, #1
 8015e52:	b292      	uxth	r2, r2
 8015e54:	2900      	cmp	r1, #0
 8015e56:	d0c2      	beq.n	8015dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015e58:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015e5c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015e60:	441e      	add	r6, r3
 8015e62:	b236      	sxth	r6, r6
 8015e64:	4694      	mov	ip, r2
 8015e66:	f04f 0900 	mov.w	r9, #0
 8015e6a:	fa1f f38c 	uxth.w	r3, ip
 8015e6e:	4299      	cmp	r1, r3
 8015e70:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015e74:	f240 80bf 	bls.w	8015ff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015e78:	4427      	add	r7, r4
 8015e7a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015e7e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015e82:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015e86:	4283      	cmp	r3, r0
 8015e88:	f340 80a1 	ble.w	8015fce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015e8c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015e90:	4406      	add	r6, r0
 8015e92:	b236      	sxth	r6, r6
 8015e94:	429e      	cmp	r6, r3
 8015e96:	bfa8      	it	ge
 8015e98:	461e      	movge	r6, r3
 8015e9a:	46e1      	mov	r9, ip
 8015e9c:	f10c 0c01 	add.w	ip, ip, #1
 8015ea0:	e7e3      	b.n	8015e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015ea2:	d10a      	bne.n	8015eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015ea4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015ea8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015eac:	4562      	cmp	r2, ip
 8015eae:	bfb8      	it	lt
 8015eb0:	4662      	movlt	r2, ip
 8015eb2:	4288      	cmp	r0, r1
 8015eb4:	bfb8      	it	lt
 8015eb6:	461f      	movlt	r7, r3
 8015eb8:	e087      	b.n	8015fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015eba:	428a      	cmp	r2, r1
 8015ebc:	bfb8      	it	lt
 8015ebe:	460a      	movlt	r2, r1
 8015ec0:	e083      	b.n	8015fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015ec2:	bf00      	nop
 8015ec4:	20012e9c 	.word	0x20012e9c
 8015ec8:	20012ea8 	.word	0x20012ea8
 8015ecc:	20000088 	.word	0x20000088
 8015ed0:	20012e5c 	.word	0x20012e5c
 8015ed4:	20012e52 	.word	0x20012e52
 8015ed8:	20012e50 	.word	0x20012e50
 8015edc:	20012e5a 	.word	0x20012e5a
 8015ee0:	20012e54 	.word	0x20012e54
 8015ee4:	19a1      	adds	r1, r4, r6
 8015ee6:	ab07      	add	r3, sp, #28
 8015ee8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015eec:	6849      	ldr	r1, [r1, #4]
 8015eee:	c303      	stmia	r3!, {r0, r1}
 8015ef0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015ef4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015ef8:	2b13      	cmp	r3, #19
 8015efa:	bfd8      	it	le
 8015efc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015f00:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015f04:	440b      	add	r3, r1
 8015f06:	1a9b      	subs	r3, r3, r2
 8015f08:	a807      	add	r0, sp, #28
 8015f0a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015f0e:	f7fe ff7b 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f12:	a807      	add	r0, sp, #28
 8015f14:	f7fa f85d 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f18:	bb78      	cbnz	r0, 8015f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015f1a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015f1e:	f8d9 0000 	ldr.w	r0, [r9]
 8015f22:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015f26:	f8d0 e000 	ldr.w	lr, [r0]
 8015f2a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015f2e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015f32:	f1bc 0f14 	cmp.w	ip, #20
 8015f36:	bfa8      	it	ge
 8015f38:	f04f 0c14 	movge.w	ip, #20
 8015f3c:	fa1f fc8c 	uxth.w	ip, ip
 8015f40:	f8cd c000 	str.w	ip, [sp]
 8015f44:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015f48:	47d8      	blx	fp
 8015f4a:	4683      	mov	fp, r0
 8015f4c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015f50:	a807      	add	r0, sp, #28
 8015f52:	f7fe ff3f 	bl	8014dd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015f56:	6823      	ldr	r3, [r4, #0]
 8015f58:	4426      	add	r6, r4
 8015f5a:	4620      	mov	r0, r4
 8015f5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015f5e:	a907      	add	r1, sp, #28
 8015f60:	4798      	blx	r3
 8015f62:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015f66:	eba0 000b 	sub.w	r0, r0, fp
 8015f6a:	b200      	sxth	r0, r0
 8015f6c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015f70:	b918      	cbnz	r0, 8015f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015f72:	b2b9      	uxth	r1, r7
 8015f74:	4650      	mov	r0, sl
 8015f76:	f7ff fa79 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015f7a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015f7e:	f1bb 0f00 	cmp.w	fp, #0
 8015f82:	f43f af2c 	beq.w	8015dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015f86:	882b      	ldrh	r3, [r5, #0]
 8015f88:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015f8c:	3301      	adds	r3, #1
 8015f8e:	b29b      	uxth	r3, r3
 8015f90:	2700      	movs	r7, #0
 8015f92:	b299      	uxth	r1, r3
 8015f94:	458b      	cmp	fp, r1
 8015f96:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015f9a:	d9a3      	bls.n	8015ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015f9c:	4426      	add	r6, r4
 8015f9e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015fa2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015fa6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015faa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015fae:	4408      	add	r0, r1
 8015fb0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015fb4:	4461      	add	r1, ip
 8015fb6:	b200      	sxth	r0, r0
 8015fb8:	b209      	sxth	r1, r1
 8015fba:	4288      	cmp	r0, r1
 8015fbc:	f6bf af71 	bge.w	8015ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015fc0:	4584      	cmp	ip, r0
 8015fc2:	4662      	mov	r2, ip
 8015fc4:	461f      	mov	r7, r3
 8015fc6:	bfb8      	it	lt
 8015fc8:	4602      	movlt	r2, r0
 8015fca:	3301      	adds	r3, #1
 8015fcc:	e7e1      	b.n	8015f92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015fce:	d10e      	bne.n	8015fee <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015fd0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015fd4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015fd8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015fdc:	4473      	add	r3, lr
 8015fde:	b21b      	sxth	r3, r3
 8015fe0:	429e      	cmp	r6, r3
 8015fe2:	bfa8      	it	ge
 8015fe4:	461e      	movge	r6, r3
 8015fe6:	4287      	cmp	r7, r0
 8015fe8:	bfb8      	it	lt
 8015fea:	46e1      	movlt	r9, ip
 8015fec:	e756      	b.n	8015e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015fee:	4286      	cmp	r6, r0
 8015ff0:	bfa8      	it	ge
 8015ff2:	4606      	movge	r6, r0
 8015ff4:	e752      	b.n	8015e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015ff6:	eb0a 0007 	add.w	r0, sl, r7
 8015ffa:	4427      	add	r7, r4
 8015ffc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016000:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016004:	f1bb 0f13 	cmp.w	fp, #19
 8016008:	bfde      	ittt	le
 801600a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801600e:	445e      	addle	r6, fp
 8016010:	b236      	sxthle	r6, r6
 8016012:	f7f9 ffde 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016016:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801601a:	2800      	cmp	r0, #0
 801601c:	f47f af1a 	bne.w	8015e54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016020:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016024:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016028:	482a      	ldr	r0, [pc, #168]	; (80160d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801602a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801602e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016032:	6800      	ldr	r0, [r0, #0]
 8016034:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016038:	1ab6      	subs	r6, r6, r2
 801603a:	2e14      	cmp	r6, #20
 801603c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016040:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016044:	bfa8      	it	ge
 8016046:	2614      	movge	r6, #20
 8016048:	f8d0 c000 	ldr.w	ip, [r0]
 801604c:	b2b6      	uxth	r6, r6
 801604e:	fa1f fb8b 	uxth.w	fp, fp
 8016052:	455e      	cmp	r6, fp
 8016054:	bf94      	ite	ls
 8016056:	9600      	strls	r6, [sp, #0]
 8016058:	f8cd b000 	strhi.w	fp, [sp]
 801605c:	b292      	uxth	r2, r2
 801605e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016062:	b29b      	uxth	r3, r3
 8016064:	b289      	uxth	r1, r1
 8016066:	47b0      	blx	r6
 8016068:	6823      	ldr	r3, [r4, #0]
 801606a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801606e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016070:	a907      	add	r1, sp, #28
 8016072:	4620      	mov	r0, r4
 8016074:	4798      	blx	r3
 8016076:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801607a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801607e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016082:	1a5b      	subs	r3, r3, r1
 8016084:	440a      	add	r2, r1
 8016086:	b21b      	sxth	r3, r3
 8016088:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801608c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016090:	2b00      	cmp	r3, #0
 8016092:	f47f aeda 	bne.w	8015e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016096:	fa1f f189 	uxth.w	r1, r9
 801609a:	4650      	mov	r0, sl
 801609c:	f7ff f9e6 	bl	801546c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80160a0:	e6d3      	b.n	8015e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80160a2:	882e      	ldrh	r6, [r5, #0]
 80160a4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80160a8:	42b3      	cmp	r3, r6
 80160aa:	f67f ae98 	bls.w	8015dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80160ae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80160b2:	ab07      	add	r3, sp, #28
 80160b4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80160b8:	6851      	ldr	r1, [r2, #4]
 80160ba:	c303      	stmia	r3!, {r0, r1}
 80160bc:	a807      	add	r0, sp, #28
 80160be:	f7f9 ff88 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80160c2:	b920      	cbnz	r0, 80160ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80160c4:	6823      	ldr	r3, [r4, #0]
 80160c6:	a907      	add	r1, sp, #28
 80160c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80160ca:	4620      	mov	r0, r4
 80160cc:	4798      	blx	r3
 80160ce:	3601      	adds	r6, #1
 80160d0:	b2b6      	uxth	r6, r6
 80160d2:	e7e7      	b.n	80160a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80160d4:	20012e5c 	.word	0x20012e5c

080160d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80160d8:	4b03      	ldr	r3, [pc, #12]	; (80160e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80160da:	2200      	movs	r2, #0
 80160dc:	801a      	strh	r2, [r3, #0]
 80160de:	805a      	strh	r2, [r3, #2]
 80160e0:	809a      	strh	r2, [r3, #4]
 80160e2:	80da      	strh	r2, [r3, #6]
 80160e4:	4770      	bx	lr
 80160e6:	bf00      	nop
 80160e8:	20012ea8 	.word	0x20012ea8

080160ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80160ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160f0:	4606      	mov	r6, r0
 80160f2:	b09d      	sub	sp, #116	; 0x74
 80160f4:	a803      	add	r0, sp, #12
 80160f6:	4614      	mov	r4, r2
 80160f8:	468a      	mov	sl, r1
 80160fa:	461d      	mov	r5, r3
 80160fc:	f000 feca 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 8016100:	6833      	ldr	r3, [r6, #0]
 8016102:	4630      	mov	r0, r6
 8016104:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016106:	4798      	blx	r3
 8016108:	6833      	ldr	r3, [r6, #0]
 801610a:	4607      	mov	r7, r0
 801610c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801610e:	4630      	mov	r0, r6
 8016110:	4798      	blx	r3
 8016112:	462a      	mov	r2, r5
 8016114:	9000      	str	r0, [sp, #0]
 8016116:	4621      	mov	r1, r4
 8016118:	463b      	mov	r3, r7
 801611a:	a803      	add	r0, sp, #12
 801611c:	f000 ff15 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016120:	2500      	movs	r5, #0
 8016122:	462c      	mov	r4, r5
 8016124:	46a9      	mov	r9, r5
 8016126:	46a8      	mov	r8, r5
 8016128:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801612c:	2300      	movs	r3, #0
 801612e:	9302      	str	r3, [sp, #8]
 8016130:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016134:	429c      	cmp	r4, r3
 8016136:	d002      	beq.n	801613e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016138:	455c      	cmp	r4, fp
 801613a:	bf18      	it	ne
 801613c:	4625      	movne	r5, r4
 801613e:	ab02      	add	r3, sp, #8
 8016140:	4632      	mov	r2, r6
 8016142:	4651      	mov	r1, sl
 8016144:	a803      	add	r0, sp, #12
 8016146:	f001 fa03 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801614a:	4604      	mov	r4, r0
 801614c:	b108      	cbz	r0, 8016152 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801614e:	280a      	cmp	r0, #10
 8016150:	d10a      	bne.n	8016168 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016152:	45c1      	cmp	r9, r8
 8016154:	bf38      	it	cc
 8016156:	46c1      	movcc	r9, r8
 8016158:	f04f 0800 	mov.w	r8, #0
 801615c:	2c00      	cmp	r4, #0
 801615e:	d1e5      	bne.n	801612c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016160:	4648      	mov	r0, r9
 8016162:	b01d      	add	sp, #116	; 0x74
 8016164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016168:	9a02      	ldr	r2, [sp, #8]
 801616a:	2a00      	cmp	r2, #0
 801616c:	d0de      	beq.n	801612c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801616e:	7b57      	ldrb	r7, [r2, #13]
 8016170:	6833      	ldr	r3, [r6, #0]
 8016172:	8894      	ldrh	r4, [r2, #4]
 8016174:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016176:	007f      	lsls	r7, r7, #1
 8016178:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801617c:	7a97      	ldrb	r7, [r2, #10]
 801617e:	4629      	mov	r1, r5
 8016180:	4307      	orrs	r7, r0
 8016182:	4630      	mov	r0, r6
 8016184:	4798      	blx	r3
 8016186:	4438      	add	r0, r7
 8016188:	4480      	add	r8, r0
 801618a:	fa1f f888 	uxth.w	r8, r8
 801618e:	e7e5      	b.n	801615c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016190 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016190:	b508      	push	{r3, lr}
 8016192:	6803      	ldr	r3, [r0, #0]
 8016194:	68db      	ldr	r3, [r3, #12]
 8016196:	4798      	blx	r3
 8016198:	b128      	cbz	r0, 80161a6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801619a:	7b43      	ldrb	r3, [r0, #13]
 801619c:	7a80      	ldrb	r0, [r0, #10]
 801619e:	005b      	lsls	r3, r3, #1
 80161a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80161a4:	4318      	orrs	r0, r3
 80161a6:	bd08      	pop	{r3, pc}

080161a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80161a8:	b40e      	push	{r1, r2, r3}
 80161aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80161ac:	b09e      	sub	sp, #120	; 0x78
 80161ae:	ab23      	add	r3, sp, #140	; 0x8c
 80161b0:	4605      	mov	r5, r0
 80161b2:	f853 4b04 	ldr.w	r4, [r3], #4
 80161b6:	9303      	str	r3, [sp, #12]
 80161b8:	a805      	add	r0, sp, #20
 80161ba:	f000 fe6b 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 80161be:	682b      	ldr	r3, [r5, #0]
 80161c0:	4628      	mov	r0, r5
 80161c2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80161c4:	4798      	blx	r3
 80161c6:	682b      	ldr	r3, [r5, #0]
 80161c8:	4606      	mov	r6, r0
 80161ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80161cc:	4628      	mov	r0, r5
 80161ce:	4798      	blx	r3
 80161d0:	4633      	mov	r3, r6
 80161d2:	ae1e      	add	r6, sp, #120	; 0x78
 80161d4:	4621      	mov	r1, r4
 80161d6:	9000      	str	r0, [sp, #0]
 80161d8:	9a03      	ldr	r2, [sp, #12]
 80161da:	2400      	movs	r4, #0
 80161dc:	a805      	add	r0, sp, #20
 80161de:	f000 feb4 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80161e2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80161e6:	462a      	mov	r2, r5
 80161e8:	4633      	mov	r3, r6
 80161ea:	4621      	mov	r1, r4
 80161ec:	a805      	add	r0, sp, #20
 80161ee:	f001 f9af 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80161f2:	b1f0      	cbz	r0, 8016232 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80161f4:	280a      	cmp	r0, #10
 80161f6:	d018      	beq.n	801622a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80161f8:	9f04      	ldr	r7, [sp, #16]
 80161fa:	b1b7      	cbz	r7, 801622a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80161fc:	7b78      	ldrb	r0, [r7, #13]
 80161fe:	7a3b      	ldrb	r3, [r7, #8]
 8016200:	88ea      	ldrh	r2, [r5, #6]
 8016202:	00c1      	lsls	r1, r0, #3
 8016204:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016208:	4319      	orrs	r1, r3
 801620a:	0643      	lsls	r3, r0, #25
 801620c:	bf44      	itt	mi
 801620e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016212:	b219      	sxthmi	r1, r3
 8016214:	0100      	lsls	r0, r0, #4
 8016216:	79fb      	ldrb	r3, [r7, #7]
 8016218:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801621c:	4303      	orrs	r3, r0
 801621e:	4413      	add	r3, r2
 8016220:	1a5b      	subs	r3, r3, r1
 8016222:	b21b      	sxth	r3, r3
 8016224:	429c      	cmp	r4, r3
 8016226:	bfb8      	it	lt
 8016228:	461c      	movlt	r4, r3
 801622a:	4633      	mov	r3, r6
 801622c:	462a      	mov	r2, r5
 801622e:	2100      	movs	r1, #0
 8016230:	e7dc      	b.n	80161ec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016232:	b2a0      	uxth	r0, r4
 8016234:	b01e      	add	sp, #120	; 0x78
 8016236:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801623a:	b003      	add	sp, #12
 801623c:	4770      	bx	lr

0801623e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801623e:	7a43      	ldrb	r3, [r0, #9]
 8016240:	8880      	ldrh	r0, [r0, #4]
 8016242:	4418      	add	r0, r3
 8016244:	b280      	uxth	r0, r0
 8016246:	4770      	bx	lr

08016248 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016248:	6803      	ldr	r3, [r0, #0]
 801624a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801624c:	4718      	bx	r3

0801624e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801624e:	b40e      	push	{r1, r2, r3}
 8016250:	b570      	push	{r4, r5, r6, lr}
 8016252:	b09d      	sub	sp, #116	; 0x74
 8016254:	ab21      	add	r3, sp, #132	; 0x84
 8016256:	4604      	mov	r4, r0
 8016258:	f853 5b04 	ldr.w	r5, [r3], #4
 801625c:	9302      	str	r3, [sp, #8]
 801625e:	a803      	add	r0, sp, #12
 8016260:	f000 fe18 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 8016264:	6823      	ldr	r3, [r4, #0]
 8016266:	4620      	mov	r0, r4
 8016268:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801626a:	4798      	blx	r3
 801626c:	6823      	ldr	r3, [r4, #0]
 801626e:	4606      	mov	r6, r0
 8016270:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016272:	4620      	mov	r0, r4
 8016274:	4798      	blx	r3
 8016276:	4633      	mov	r3, r6
 8016278:	9000      	str	r0, [sp, #0]
 801627a:	9a02      	ldr	r2, [sp, #8]
 801627c:	4629      	mov	r1, r5
 801627e:	a803      	add	r0, sp, #12
 8016280:	f000 fe63 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016284:	a803      	add	r0, sp, #12
 8016286:	f001 fa31 	bl	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 801628a:	2401      	movs	r4, #1
 801628c:	b2a3      	uxth	r3, r4
 801628e:	b140      	cbz	r0, 80162a2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016290:	280a      	cmp	r0, #10
 8016292:	bf08      	it	eq
 8016294:	3301      	addeq	r3, #1
 8016296:	a803      	add	r0, sp, #12
 8016298:	bf08      	it	eq
 801629a:	b21c      	sxtheq	r4, r3
 801629c:	f001 fa26 	bl	80176ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 80162a0:	e7f4      	b.n	801628c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80162a2:	4618      	mov	r0, r3
 80162a4:	b01d      	add	sp, #116	; 0x74
 80162a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80162aa:	b003      	add	sp, #12
 80162ac:	4770      	bx	lr

080162ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80162ae:	b40e      	push	{r1, r2, r3}
 80162b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162b2:	b09e      	sub	sp, #120	; 0x78
 80162b4:	ab23      	add	r3, sp, #140	; 0x8c
 80162b6:	4604      	mov	r4, r0
 80162b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80162bc:	9303      	str	r3, [sp, #12]
 80162be:	a805      	add	r0, sp, #20
 80162c0:	f000 fde8 	bl	8016e94 <_ZN8touchgfx12TextProviderC1Ev>
 80162c4:	6823      	ldr	r3, [r4, #0]
 80162c6:	4620      	mov	r0, r4
 80162c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80162ca:	4798      	blx	r3
 80162cc:	6823      	ldr	r3, [r4, #0]
 80162ce:	4606      	mov	r6, r0
 80162d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80162d2:	4620      	mov	r0, r4
 80162d4:	4798      	blx	r3
 80162d6:	4633      	mov	r3, r6
 80162d8:	4629      	mov	r1, r5
 80162da:	9000      	str	r0, [sp, #0]
 80162dc:	9a03      	ldr	r2, [sp, #12]
 80162de:	a805      	add	r0, sp, #20
 80162e0:	ad1e      	add	r5, sp, #120	; 0x78
 80162e2:	f000 fe32 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80162e6:	2100      	movs	r1, #0
 80162e8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80162ec:	4622      	mov	r2, r4
 80162ee:	462b      	mov	r3, r5
 80162f0:	a805      	add	r0, sp, #20
 80162f2:	f001 f92d 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80162f6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80162fa:	b1d8      	cbz	r0, 8016334 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80162fc:	280a      	cmp	r0, #10
 80162fe:	d012      	beq.n	8016326 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016300:	9804      	ldr	r0, [sp, #16]
 8016302:	b180      	cbz	r0, 8016326 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016304:	7b47      	ldrb	r7, [r0, #13]
 8016306:	88e2      	ldrh	r2, [r4, #6]
 8016308:	00fb      	lsls	r3, r7, #3
 801630a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801630e:	7a03      	ldrb	r3, [r0, #8]
 8016310:	430b      	orrs	r3, r1
 8016312:	0679      	lsls	r1, r7, #25
 8016314:	bf44      	itt	mi
 8016316:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801631a:	b21b      	sxthmi	r3, r3
 801631c:	1ad3      	subs	r3, r2, r3
 801631e:	b21b      	sxth	r3, r3
 8016320:	429e      	cmp	r6, r3
 8016322:	bfa8      	it	ge
 8016324:	461e      	movge	r6, r3
 8016326:	462b      	mov	r3, r5
 8016328:	4622      	mov	r2, r4
 801632a:	2100      	movs	r1, #0
 801632c:	a805      	add	r0, sp, #20
 801632e:	f001 f90f 	bl	8017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016332:	e7e2      	b.n	80162fa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016334:	4630      	mov	r0, r6
 8016336:	b01e      	add	sp, #120	; 0x78
 8016338:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801633c:	b003      	add	sp, #12
 801633e:	4770      	bx	lr

08016340 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016340:	b513      	push	{r0, r1, r4, lr}
 8016342:	6803      	ldr	r3, [r0, #0]
 8016344:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016348:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801634c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016350:	2400      	movs	r4, #0
 8016352:	9400      	str	r4, [sp, #0]
 8016354:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016358:	691b      	ldr	r3, [r3, #16]
 801635a:	4669      	mov	r1, sp
 801635c:	4798      	blx	r3
 801635e:	b002      	add	sp, #8
 8016360:	bd10      	pop	{r4, pc}

08016362 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016362:	b538      	push	{r3, r4, r5, lr}
 8016364:	680b      	ldr	r3, [r1, #0]
 8016366:	460c      	mov	r4, r1
 8016368:	68db      	ldr	r3, [r3, #12]
 801636a:	4605      	mov	r5, r0
 801636c:	4798      	blx	r3
 801636e:	6823      	ldr	r3, [r4, #0]
 8016370:	4620      	mov	r0, r4
 8016372:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016374:	4629      	mov	r1, r5
 8016376:	4798      	blx	r3
 8016378:	4628      	mov	r0, r5
 801637a:	bd38      	pop	{r3, r4, r5, pc}

0801637c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801637c:	b410      	push	{r4}
 801637e:	880a      	ldrh	r2, [r1, #0]
 8016380:	8884      	ldrh	r4, [r0, #4]
 8016382:	4422      	add	r2, r4
 8016384:	800a      	strh	r2, [r1, #0]
 8016386:	88c4      	ldrh	r4, [r0, #6]
 8016388:	884a      	ldrh	r2, [r1, #2]
 801638a:	4422      	add	r2, r4
 801638c:	804a      	strh	r2, [r1, #2]
 801638e:	6940      	ldr	r0, [r0, #20]
 8016390:	b120      	cbz	r0, 801639c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016392:	6803      	ldr	r3, [r0, #0]
 8016394:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801639a:	4718      	bx	r3
 801639c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80163a0:	4770      	bx	lr

080163a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80163a2:	b570      	push	{r4, r5, r6, lr}
 80163a4:	8882      	ldrh	r2, [r0, #4]
 80163a6:	880b      	ldrh	r3, [r1, #0]
 80163a8:	4413      	add	r3, r2
 80163aa:	800b      	strh	r3, [r1, #0]
 80163ac:	88c2      	ldrh	r2, [r0, #6]
 80163ae:	884b      	ldrh	r3, [r1, #2]
 80163b0:	460c      	mov	r4, r1
 80163b2:	4413      	add	r3, r2
 80163b4:	804b      	strh	r3, [r1, #2]
 80163b6:	4605      	mov	r5, r0
 80163b8:	1d01      	adds	r1, r0, #4
 80163ba:	4620      	mov	r0, r4
 80163bc:	f7f9 fdc6 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 80163c0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80163c4:	2b00      	cmp	r3, #0
 80163c6:	dd0b      	ble.n	80163e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80163c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80163cc:	2b00      	cmp	r3, #0
 80163ce:	dd07      	ble.n	80163e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80163d0:	6968      	ldr	r0, [r5, #20]
 80163d2:	b128      	cbz	r0, 80163e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80163d4:	6803      	ldr	r3, [r0, #0]
 80163d6:	4621      	mov	r1, r4
 80163d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80163da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80163de:	4718      	bx	r3
 80163e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080163e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80163e4:	b570      	push	{r4, r5, r6, lr}
 80163e6:	8882      	ldrh	r2, [r0, #4]
 80163e8:	880b      	ldrh	r3, [r1, #0]
 80163ea:	4413      	add	r3, r2
 80163ec:	800b      	strh	r3, [r1, #0]
 80163ee:	88c2      	ldrh	r2, [r0, #6]
 80163f0:	884b      	ldrh	r3, [r1, #2]
 80163f2:	460c      	mov	r4, r1
 80163f4:	4413      	add	r3, r2
 80163f6:	804b      	strh	r3, [r1, #2]
 80163f8:	4605      	mov	r5, r0
 80163fa:	1d01      	adds	r1, r0, #4
 80163fc:	4620      	mov	r0, r4
 80163fe:	f7f9 fda5 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8016402:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016406:	2b00      	cmp	r3, #0
 8016408:	dd19      	ble.n	801643e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801640a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801640e:	2b00      	cmp	r3, #0
 8016410:	dd15      	ble.n	801643e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016412:	6968      	ldr	r0, [r5, #20]
 8016414:	b128      	cbz	r0, 8016422 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016416:	6803      	ldr	r3, [r0, #0]
 8016418:	4621      	mov	r1, r4
 801641a:	691b      	ldr	r3, [r3, #16]
 801641c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016420:	4718      	bx	r3
 8016422:	4b07      	ldr	r3, [pc, #28]	; (8016440 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016424:	681b      	ldr	r3, [r3, #0]
 8016426:	3304      	adds	r3, #4
 8016428:	429d      	cmp	r5, r3
 801642a:	d108      	bne.n	801643e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801642c:	f7fe fea0 	bl	8015170 <_ZN8touchgfx11Application11getInstanceEv>
 8016430:	6803      	ldr	r3, [r0, #0]
 8016432:	6821      	ldr	r1, [r4, #0]
 8016434:	6862      	ldr	r2, [r4, #4]
 8016436:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801643c:	4718      	bx	r3
 801643e:	bd70      	pop	{r4, r5, r6, pc}
 8016440:	20012ea0 	.word	0x20012ea0

08016444 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016444:	b570      	push	{r4, r5, r6, lr}
 8016446:	4604      	mov	r4, r0
 8016448:	4616      	mov	r6, r2
 801644a:	460d      	mov	r5, r1
 801644c:	b901      	cbnz	r1, 8016450 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801644e:	b192      	cbz	r2, 8016476 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016450:	6823      	ldr	r3, [r4, #0]
 8016452:	4620      	mov	r0, r4
 8016454:	699b      	ldr	r3, [r3, #24]
 8016456:	4798      	blx	r3
 8016458:	88e2      	ldrh	r2, [r4, #6]
 801645a:	88a1      	ldrh	r1, [r4, #4]
 801645c:	4432      	add	r2, r6
 801645e:	4429      	add	r1, r5
 8016460:	4620      	mov	r0, r4
 8016462:	b212      	sxth	r2, r2
 8016464:	b209      	sxth	r1, r1
 8016466:	f7ec f98e 	bl	8002786 <_ZN8touchgfx8Drawable5setXYEss>
 801646a:	6823      	ldr	r3, [r4, #0]
 801646c:	4620      	mov	r0, r4
 801646e:	699b      	ldr	r3, [r3, #24]
 8016470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016474:	4718      	bx	r3
 8016476:	bd70      	pop	{r4, r5, r6, pc}

08016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016478:	b510      	push	{r4, lr}
 801647a:	4604      	mov	r4, r0
 801647c:	4608      	mov	r0, r1
 801647e:	2300      	movs	r3, #0
 8016480:	8023      	strh	r3, [r4, #0]
 8016482:	8063      	strh	r3, [r4, #2]
 8016484:	6803      	ldr	r3, [r0, #0]
 8016486:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801648a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801648e:	80a1      	strh	r1, [r4, #4]
 8016490:	80e2      	strh	r2, [r4, #6]
 8016492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016494:	4621      	mov	r1, r4
 8016496:	4798      	blx	r3
 8016498:	4620      	mov	r0, r4
 801649a:	bd10      	pop	{r4, pc}

0801649c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801649c:	b530      	push	{r4, r5, lr}
 801649e:	8083      	strh	r3, [r0, #4]
 80164a0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80164a4:	80c3      	strh	r3, [r0, #6]
 80164a6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80164aa:	7203      	strb	r3, [r0, #8]
 80164ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80164b0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80164b4:	7243      	strb	r3, [r0, #9]
 80164b6:	7a83      	ldrb	r3, [r0, #10]
 80164b8:	6141      	str	r1, [r0, #20]
 80164ba:	f365 0306 	bfi	r3, r5, #0, #7
 80164be:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80164c2:	8302      	strh	r2, [r0, #24]
 80164c4:	f365 13c7 	bfi	r3, r5, #7, #1
 80164c8:	7283      	strb	r3, [r0, #10]
 80164ca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80164ce:	72c3      	strb	r3, [r0, #11]
 80164d0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80164d4:	7303      	strb	r3, [r0, #12]
 80164d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80164da:	81c3      	strh	r3, [r0, #14]
 80164dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80164e0:	8203      	strh	r3, [r0, #16]
 80164e2:	4b01      	ldr	r3, [pc, #4]	; (80164e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80164e4:	6003      	str	r3, [r0, #0]
 80164e6:	bd30      	pop	{r4, r5, pc}
 80164e8:	0802e71c 	.word	0x0802e71c

080164ec <_ZNK8touchgfx9ConstFont4findEt>:
 80164ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164ee:	6944      	ldr	r4, [r0, #20]
 80164f0:	b3bc      	cbz	r4, 8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80164f2:	88a3      	ldrh	r3, [r4, #4]
 80164f4:	8b02      	ldrh	r2, [r0, #24]
 80164f6:	1acb      	subs	r3, r1, r3
 80164f8:	f102 32ff 	add.w	r2, r2, #4294967295
 80164fc:	d431      	bmi.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80164fe:	4293      	cmp	r3, r2
 8016500:	dd0c      	ble.n	801651c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016502:	230e      	movs	r3, #14
 8016504:	fb03 4302 	mla	r3, r3, r2, r4
 8016508:	889b      	ldrh	r3, [r3, #4]
 801650a:	1a5b      	subs	r3, r3, r1
 801650c:	1ad3      	subs	r3, r2, r3
 801650e:	429a      	cmp	r2, r3
 8016510:	db27      	blt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016512:	2b00      	cmp	r3, #0
 8016514:	bfbc      	itt	lt
 8016516:	2302      	movlt	r3, #2
 8016518:	fb92 f3f3 	sdivlt	r3, r2, r3
 801651c:	2500      	movs	r5, #0
 801651e:	260e      	movs	r6, #14
 8016520:	4295      	cmp	r5, r2
 8016522:	dc1e      	bgt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016524:	fb06 4003 	mla	r0, r6, r3, r4
 8016528:	8887      	ldrh	r7, [r0, #4]
 801652a:	42b9      	cmp	r1, r7
 801652c:	d01a      	beq.n	8016564 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801652e:	d20d      	bcs.n	801654c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016530:	1e5a      	subs	r2, r3, #1
 8016532:	4295      	cmp	r5, r2
 8016534:	dc15      	bgt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016536:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801653a:	1a5b      	subs	r3, r3, r1
 801653c:	1ad3      	subs	r3, r2, r3
 801653e:	429a      	cmp	r2, r3
 8016540:	db0f      	blt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016542:	429d      	cmp	r5, r3
 8016544:	ddec      	ble.n	8016520 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016546:	1953      	adds	r3, r2, r5
 8016548:	105b      	asrs	r3, r3, #1
 801654a:	e7e9      	b.n	8016520 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801654c:	1c5d      	adds	r5, r3, #1
 801654e:	42aa      	cmp	r2, r5
 8016550:	db07      	blt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016552:	8a43      	ldrh	r3, [r0, #18]
 8016554:	1acb      	subs	r3, r1, r3
 8016556:	442b      	add	r3, r5
 8016558:	429d      	cmp	r5, r3
 801655a:	dc02      	bgt.n	8016562 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801655c:	429a      	cmp	r2, r3
 801655e:	dadf      	bge.n	8016520 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016560:	e7f1      	b.n	8016546 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016562:	2000      	movs	r0, #0
 8016564:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016566 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016566:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016568:	4604      	mov	r4, r0
 801656a:	4617      	mov	r7, r2
 801656c:	461e      	mov	r6, r3
 801656e:	b911      	cbnz	r1, 8016576 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016570:	2500      	movs	r5, #0
 8016572:	4628      	mov	r0, r5
 8016574:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016576:	290a      	cmp	r1, #10
 8016578:	d0fa      	beq.n	8016570 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801657a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801657e:	4291      	cmp	r1, r2
 8016580:	d0f6      	beq.n	8016570 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016582:	f242 020b 	movw	r2, #8203	; 0x200b
 8016586:	4291      	cmp	r1, r2
 8016588:	d0f2      	beq.n	8016570 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801658a:	f7ff ffaf 	bl	80164ec <_ZNK8touchgfx9ConstFont4findEt>
 801658e:	4605      	mov	r5, r0
 8016590:	b950      	cbnz	r0, 80165a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016592:	6823      	ldr	r3, [r4, #0]
 8016594:	4620      	mov	r0, r4
 8016596:	691b      	ldr	r3, [r3, #16]
 8016598:	4798      	blx	r3
 801659a:	4601      	mov	r1, r0
 801659c:	4620      	mov	r0, r4
 801659e:	f7ff ffa5 	bl	80164ec <_ZNK8touchgfx9ConstFont4findEt>
 80165a2:	4605      	mov	r5, r0
 80165a4:	2800      	cmp	r0, #0
 80165a6:	d0e3      	beq.n	8016570 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80165a8:	6823      	ldr	r3, [r4, #0]
 80165aa:	4629      	mov	r1, r5
 80165ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80165ae:	4620      	mov	r0, r4
 80165b0:	4798      	blx	r3
 80165b2:	6038      	str	r0, [r7, #0]
 80165b4:	6823      	ldr	r3, [r4, #0]
 80165b6:	4620      	mov	r0, r4
 80165b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80165ba:	4798      	blx	r3
 80165bc:	7030      	strb	r0, [r6, #0]
 80165be:	e7d8      	b.n	8016572 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080165c0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80165c0:	b538      	push	{r3, r4, r5, lr}
 80165c2:	4605      	mov	r5, r0
 80165c4:	f002 fb56 	bl	8018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80165c8:	4604      	mov	r4, r0
 80165ca:	4628      	mov	r0, r5
 80165cc:	f002 fa96 	bl	8018afc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80165d0:	2800      	cmp	r0, #0
 80165d2:	bf14      	ite	ne
 80165d4:	2002      	movne	r0, #2
 80165d6:	2000      	moveq	r0, #0
 80165d8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80165dc:	b280      	uxth	r0, r0
 80165de:	bd38      	pop	{r3, r4, r5, pc}

080165e0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80165e0:	b538      	push	{r3, r4, r5, lr}
 80165e2:	4605      	mov	r5, r0
 80165e4:	f002 fb46 	bl	8018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80165e8:	4604      	mov	r4, r0
 80165ea:	4628      	mov	r0, r5
 80165ec:	f002 fa86 	bl	8018afc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80165f0:	2800      	cmp	r0, #0
 80165f2:	bf14      	ite	ne
 80165f4:	2002      	movne	r0, #2
 80165f6:	2000      	moveq	r0, #0
 80165f8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80165fc:	f040 0001 	orr.w	r0, r0, #1
 8016600:	b280      	uxth	r0, r0
 8016602:	bd38      	pop	{r3, r4, r5, pc}

08016604 <_ZN8touchgfx4clzuEm>:
 8016604:	4603      	mov	r3, r0
 8016606:	b1c8      	cbz	r0, 801663c <_ZN8touchgfx4clzuEm+0x38>
 8016608:	0c02      	lsrs	r2, r0, #16
 801660a:	0412      	lsls	r2, r2, #16
 801660c:	b9a2      	cbnz	r2, 8016638 <_ZN8touchgfx4clzuEm+0x34>
 801660e:	0403      	lsls	r3, r0, #16
 8016610:	2010      	movs	r0, #16
 8016612:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016616:	bf04      	itt	eq
 8016618:	021b      	lsleq	r3, r3, #8
 801661a:	3008      	addeq	r0, #8
 801661c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016620:	bf04      	itt	eq
 8016622:	011b      	lsleq	r3, r3, #4
 8016624:	3004      	addeq	r0, #4
 8016626:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801662a:	bf04      	itt	eq
 801662c:	009b      	lsleq	r3, r3, #2
 801662e:	3002      	addeq	r0, #2
 8016630:	2b00      	cmp	r3, #0
 8016632:	db04      	blt.n	801663e <_ZN8touchgfx4clzuEm+0x3a>
 8016634:	3001      	adds	r0, #1
 8016636:	4770      	bx	lr
 8016638:	2000      	movs	r0, #0
 801663a:	e7ea      	b.n	8016612 <_ZN8touchgfx4clzuEm+0xe>
 801663c:	2020      	movs	r0, #32
 801663e:	4770      	bx	lr

08016640 <_ZN8touchgfx7muldivuEmmmRm>:
 8016640:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016644:	460f      	mov	r7, r1
 8016646:	4615      	mov	r5, r2
 8016648:	461e      	mov	r6, r3
 801664a:	4601      	mov	r1, r0
 801664c:	b100      	cbz	r0, 8016650 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801664e:	b927      	cbnz	r7, 801665a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016650:	2000      	movs	r0, #0
 8016652:	6030      	str	r0, [r6, #0]
 8016654:	b002      	add	sp, #8
 8016656:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801665a:	f7ff ffd3 	bl	8016604 <_ZN8touchgfx4clzuEm>
 801665e:	b980      	cbnz	r0, 8016682 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016660:	4638      	mov	r0, r7
 8016662:	f7ff ffcf 	bl	8016604 <_ZN8touchgfx4clzuEm>
 8016666:	2800      	cmp	r0, #0
 8016668:	dd05      	ble.n	8016676 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801666a:	4633      	mov	r3, r6
 801666c:	462a      	mov	r2, r5
 801666e:	4638      	mov	r0, r7
 8016670:	f7ff ffe6 	bl	8016640 <_ZN8touchgfx7muldivuEmmmRm>
 8016674:	e7ee      	b.n	8016654 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016676:	f04f 33ff 	mov.w	r3, #4294967295
 801667a:	6033      	str	r3, [r6, #0]
 801667c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016680:	e7e8      	b.n	8016654 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016682:	fa37 f800 	lsrs.w	r8, r7, r0
 8016686:	fb07 f301 	mul.w	r3, r7, r1
 801668a:	d105      	bne.n	8016698 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801668c:	fbb3 f0f5 	udiv	r0, r3, r5
 8016690:	fb05 3510 	mls	r5, r5, r0, r3
 8016694:	6035      	str	r5, [r6, #0]
 8016696:	e7dd      	b.n	8016654 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016698:	2301      	movs	r3, #1
 801669a:	fa01 fa00 	lsl.w	sl, r1, r0
 801669e:	fa03 f000 	lsl.w	r0, r3, r0
 80166a2:	3801      	subs	r0, #1
 80166a4:	462a      	mov	r2, r5
 80166a6:	4633      	mov	r3, r6
 80166a8:	4038      	ands	r0, r7
 80166aa:	f7ff ffc9 	bl	8016640 <_ZN8touchgfx7muldivuEmmmRm>
 80166ae:	fbba f9f5 	udiv	r9, sl, r5
 80166b2:	462a      	mov	r2, r5
 80166b4:	4607      	mov	r7, r0
 80166b6:	ab01      	add	r3, sp, #4
 80166b8:	fb05 a119 	mls	r1, r5, r9, sl
 80166bc:	4640      	mov	r0, r8
 80166be:	f7ff ffbf 	bl	8016640 <_ZN8touchgfx7muldivuEmmmRm>
 80166c2:	9b01      	ldr	r3, [sp, #4]
 80166c4:	6832      	ldr	r2, [r6, #0]
 80166c6:	fb08 f409 	mul.w	r4, r8, r9
 80166ca:	441a      	add	r2, r3
 80166cc:	fbb2 f3f5 	udiv	r3, r2, r5
 80166d0:	441c      	add	r4, r3
 80166d2:	443c      	add	r4, r7
 80166d4:	4420      	add	r0, r4
 80166d6:	fb05 2513 	mls	r5, r5, r3, r2
 80166da:	e7db      	b.n	8016694 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080166dc <_ZN8touchgfx6muldivElllRl>:
 80166dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80166de:	2800      	cmp	r0, #0
 80166e0:	bfba      	itte	lt
 80166e2:	4240      	neglt	r0, r0
 80166e4:	f04f 34ff 	movlt.w	r4, #4294967295
 80166e8:	2401      	movge	r4, #1
 80166ea:	2900      	cmp	r1, #0
 80166ec:	bfbc      	itt	lt
 80166ee:	4249      	neglt	r1, r1
 80166f0:	4264      	neglt	r4, r4
 80166f2:	2a00      	cmp	r2, #0
 80166f4:	bfb6      	itet	lt
 80166f6:	4265      	neglt	r5, r4
 80166f8:	4625      	movge	r5, r4
 80166fa:	4252      	neglt	r2, r2
 80166fc:	4288      	cmp	r0, r1
 80166fe:	461e      	mov	r6, r3
 8016700:	bfc2      	ittt	gt
 8016702:	4603      	movgt	r3, r0
 8016704:	4608      	movgt	r0, r1
 8016706:	4619      	movgt	r1, r3
 8016708:	ab01      	add	r3, sp, #4
 801670a:	f7ff ff99 	bl	8016640 <_ZN8touchgfx7muldivuEmmmRm>
 801670e:	9b01      	ldr	r3, [sp, #4]
 8016710:	4368      	muls	r0, r5
 8016712:	435c      	muls	r4, r3
 8016714:	6034      	str	r4, [r6, #0]
 8016716:	b002      	add	sp, #8
 8016718:	bd70      	pop	{r4, r5, r6, pc}

0801671a <_ZN8touchgfx6muldivElll>:
 801671a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801671c:	4606      	mov	r6, r0
 801671e:	ab01      	add	r3, sp, #4
 8016720:	460d      	mov	r5, r1
 8016722:	4614      	mov	r4, r2
 8016724:	f7ff ffda 	bl	80166dc <_ZN8touchgfx6muldivElllRl>
 8016728:	2e00      	cmp	r6, #0
 801672a:	db20      	blt.n	801676e <_ZN8touchgfx6muldivElll+0x54>
 801672c:	bf14      	ite	ne
 801672e:	2301      	movne	r3, #1
 8016730:	2300      	moveq	r3, #0
 8016732:	2d00      	cmp	r5, #0
 8016734:	db1e      	blt.n	8016774 <_ZN8touchgfx6muldivElll+0x5a>
 8016736:	bf14      	ite	ne
 8016738:	2201      	movne	r2, #1
 801673a:	2200      	moveq	r2, #0
 801673c:	2c00      	cmp	r4, #0
 801673e:	fb03 f202 	mul.w	r2, r3, r2
 8016742:	db1a      	blt.n	801677a <_ZN8touchgfx6muldivElll+0x60>
 8016744:	bf14      	ite	ne
 8016746:	2301      	movne	r3, #1
 8016748:	2300      	moveq	r3, #0
 801674a:	4353      	muls	r3, r2
 801674c:	2b01      	cmp	r3, #1
 801674e:	d117      	bne.n	8016780 <_ZN8touchgfx6muldivElll+0x66>
 8016750:	9b01      	ldr	r3, [sp, #4]
 8016752:	2c00      	cmp	r4, #0
 8016754:	bfb8      	it	lt
 8016756:	4264      	neglt	r4, r4
 8016758:	2b00      	cmp	r3, #0
 801675a:	f104 0401 	add.w	r4, r4, #1
 801675e:	bfb8      	it	lt
 8016760:	425b      	neglt	r3, r3
 8016762:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016766:	db00      	blt.n	801676a <_ZN8touchgfx6muldivElll+0x50>
 8016768:	3001      	adds	r0, #1
 801676a:	b002      	add	sp, #8
 801676c:	bd70      	pop	{r4, r5, r6, pc}
 801676e:	f04f 33ff 	mov.w	r3, #4294967295
 8016772:	e7de      	b.n	8016732 <_ZN8touchgfx6muldivElll+0x18>
 8016774:	f04f 32ff 	mov.w	r2, #4294967295
 8016778:	e7e0      	b.n	801673c <_ZN8touchgfx6muldivElll+0x22>
 801677a:	f04f 33ff 	mov.w	r3, #4294967295
 801677e:	e7e4      	b.n	801674a <_ZN8touchgfx6muldivElll+0x30>
 8016780:	3301      	adds	r3, #1
 8016782:	d1f2      	bne.n	801676a <_ZN8touchgfx6muldivElll+0x50>
 8016784:	9b01      	ldr	r3, [sp, #4]
 8016786:	2c00      	cmp	r4, #0
 8016788:	bfb8      	it	lt
 801678a:	4264      	neglt	r4, r4
 801678c:	2b00      	cmp	r3, #0
 801678e:	bfb8      	it	lt
 8016790:	425b      	neglt	r3, r3
 8016792:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016796:	bfc8      	it	gt
 8016798:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801679c:	e7e5      	b.n	801676a <_ZN8touchgfx6muldivElll+0x50>

0801679e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801679e:	2000      	movs	r0, #0
 80167a0:	4770      	bx	lr

080167a2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80167a2:	2001      	movs	r0, #1
 80167a4:	4770      	bx	lr

080167a6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80167a6:	2002      	movs	r0, #2
 80167a8:	4770      	bx	lr

080167aa <_ZN8touchgfx6ScreenD1Ev>:
 80167aa:	4770      	bx	lr

080167ac <_ZN8touchgfx12GestureEventD1Ev>:
 80167ac:	4770      	bx	lr

080167ae <_ZN8touchgfx9DragEventD1Ev>:
 80167ae:	4770      	bx	lr

080167b0 <_ZN8touchgfx10ClickEventD1Ev>:
 80167b0:	4770      	bx	lr

080167b2 <_ZN8touchgfx10ClickEventD0Ev>:
 80167b2:	b510      	push	{r4, lr}
 80167b4:	210c      	movs	r1, #12
 80167b6:	4604      	mov	r4, r0
 80167b8:	f012 fd51 	bl	802925e <_ZdlPvj>
 80167bc:	4620      	mov	r0, r4
 80167be:	bd10      	pop	{r4, pc}

080167c0 <_ZN8touchgfx9DragEventD0Ev>:
 80167c0:	b510      	push	{r4, lr}
 80167c2:	2110      	movs	r1, #16
 80167c4:	4604      	mov	r4, r0
 80167c6:	f012 fd4a 	bl	802925e <_ZdlPvj>
 80167ca:	4620      	mov	r0, r4
 80167cc:	bd10      	pop	{r4, pc}

080167ce <_ZN8touchgfx12GestureEventD0Ev>:
 80167ce:	b510      	push	{r4, lr}
 80167d0:	210c      	movs	r1, #12
 80167d2:	4604      	mov	r4, r0
 80167d4:	f012 fd43 	bl	802925e <_ZdlPvj>
 80167d8:	4620      	mov	r0, r4
 80167da:	bd10      	pop	{r4, pc}

080167dc <_ZN8touchgfx6ScreenD0Ev>:
 80167dc:	b510      	push	{r4, lr}
 80167de:	213c      	movs	r1, #60	; 0x3c
 80167e0:	4604      	mov	r4, r0
 80167e2:	f012 fd3c 	bl	802925e <_ZdlPvj>
 80167e6:	4620      	mov	r0, r4
 80167e8:	bd10      	pop	{r4, pc}
	...

080167ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80167ec:	b530      	push	{r4, r5, lr}
 80167ee:	460d      	mov	r5, r1
 80167f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80167f2:	b087      	sub	sp, #28
 80167f4:	4604      	mov	r4, r0
 80167f6:	b301      	cbz	r1, 801683a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80167f8:	a801      	add	r0, sp, #4
 80167fa:	f7ff fe3d 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167fe:	892a      	ldrh	r2, [r5, #8]
 8016800:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016804:	7928      	ldrb	r0, [r5, #4]
 8016806:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801680a:	f88d 0010 	strb.w	r0, [sp, #16]
 801680e:	1ad2      	subs	r2, r2, r3
 8016810:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016812:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016814:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016818:	441a      	add	r2, r3
 801681a:	896b      	ldrh	r3, [r5, #10]
 801681c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016820:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016824:	1b5b      	subs	r3, r3, r5
 8016826:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016828:	442b      	add	r3, r5
 801682a:	4d05      	ldr	r5, [pc, #20]	; (8016840 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801682c:	9503      	str	r5, [sp, #12]
 801682e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016832:	6803      	ldr	r3, [r0, #0]
 8016834:	a903      	add	r1, sp, #12
 8016836:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016838:	4798      	blx	r3
 801683a:	b007      	add	sp, #28
 801683c:	bd30      	pop	{r4, r5, pc}
 801683e:	bf00      	nop
 8016840:	0802e7a4 	.word	0x0802e7a4

08016844 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016848:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801684a:	b08a      	sub	sp, #40	; 0x28
 801684c:	4604      	mov	r4, r0
 801684e:	460d      	mov	r5, r1
 8016850:	b113      	cbz	r3, 8016858 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016852:	790b      	ldrb	r3, [r1, #4]
 8016854:	2b00      	cmp	r3, #0
 8016856:	d044      	beq.n	80168e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016858:	f104 0804 	add.w	r8, r4, #4
 801685c:	4641      	mov	r1, r8
 801685e:	a803      	add	r0, sp, #12
 8016860:	f7ff fe0a 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016864:	792b      	ldrb	r3, [r5, #4]
 8016866:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801686a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801686e:	b983      	cbnz	r3, 8016892 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016870:	892a      	ldrh	r2, [r5, #8]
 8016872:	88e9      	ldrh	r1, [r5, #6]
 8016874:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016878:	1b92      	subs	r2, r2, r6
 801687a:	1bc9      	subs	r1, r1, r7
 801687c:	9301      	str	r3, [sp, #4]
 801687e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016882:	9300      	str	r3, [sp, #0]
 8016884:	b212      	sxth	r2, r2
 8016886:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801688a:	b209      	sxth	r1, r1
 801688c:	4640      	mov	r0, r8
 801688e:	f7f9 fa79 	bl	800fd84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016892:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016894:	b329      	cbz	r1, 80168e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016896:	a805      	add	r0, sp, #20
 8016898:	f7ff fdee 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801689c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80168a0:	792b      	ldrb	r3, [r5, #4]
 80168a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80168a4:	f88d 3020 	strb.w	r3, [sp, #32]
 80168a8:	1abf      	subs	r7, r7, r2
 80168aa:	88ea      	ldrh	r2, [r5, #6]
 80168ac:	4417      	add	r7, r2
 80168ae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80168b0:	4417      	add	r7, r2
 80168b2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80168b6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80168ba:	1ab6      	subs	r6, r6, r2
 80168bc:	892a      	ldrh	r2, [r5, #8]
 80168be:	4416      	add	r6, r2
 80168c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80168c2:	4416      	add	r6, r2
 80168c4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80168c8:	4a07      	ldr	r2, [pc, #28]	; (80168e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80168ca:	9207      	str	r2, [sp, #28]
 80168cc:	2600      	movs	r6, #0
 80168ce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80168d2:	6803      	ldr	r3, [r0, #0]
 80168d4:	a907      	add	r1, sp, #28
 80168d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80168d8:	4798      	blx	r3
 80168da:	792b      	ldrb	r3, [r5, #4]
 80168dc:	b10b      	cbz	r3, 80168e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80168de:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80168e2:	b00a      	add	sp, #40	; 0x28
 80168e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80168e8:	0802e77c 	.word	0x0802e77c

080168ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80168ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168f0:	460c      	mov	r4, r1
 80168f2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80168f4:	b088      	sub	sp, #32
 80168f6:	4605      	mov	r5, r0
 80168f8:	2900      	cmp	r1, #0
 80168fa:	d06d      	beq.n	80169d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80168fc:	4668      	mov	r0, sp
 80168fe:	f7ff fdbb 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016902:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016904:	88e3      	ldrh	r3, [r4, #6]
 8016906:	f9bd 8000 	ldrsh.w	r8, [sp]
 801690a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801690e:	440b      	add	r3, r1
 8016910:	b21b      	sxth	r3, r3
 8016912:	4543      	cmp	r3, r8
 8016914:	db31      	blt.n	801697a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016916:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801691a:	44c4      	add	ip, r8
 801691c:	fa0f fc8c 	sxth.w	ip, ip
 8016920:	4563      	cmp	r3, ip
 8016922:	da2a      	bge.n	801697a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016924:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016926:	8926      	ldrh	r6, [r4, #8]
 8016928:	4416      	add	r6, r2
 801692a:	b236      	sxth	r6, r6
 801692c:	42be      	cmp	r6, r7
 801692e:	db24      	blt.n	801697a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016930:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016934:	4438      	add	r0, r7
 8016936:	b200      	sxth	r0, r0
 8016938:	4286      	cmp	r6, r0
 801693a:	da1e      	bge.n	801697a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801693c:	8963      	ldrh	r3, [r4, #10]
 801693e:	4419      	add	r1, r3
 8016940:	b209      	sxth	r1, r1
 8016942:	4541      	cmp	r1, r8
 8016944:	db08      	blt.n	8016958 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016946:	4561      	cmp	r1, ip
 8016948:	da06      	bge.n	8016958 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801694a:	89a3      	ldrh	r3, [r4, #12]
 801694c:	441a      	add	r2, r3
 801694e:	b212      	sxth	r2, r2
 8016950:	42ba      	cmp	r2, r7
 8016952:	db01      	blt.n	8016958 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016954:	4282      	cmp	r2, r0
 8016956:	db10      	blt.n	801697a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016958:	4b21      	ldr	r3, [pc, #132]	; (80169e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801695a:	9304      	str	r3, [sp, #16]
 801695c:	2302      	movs	r3, #2
 801695e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016962:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016964:	2300      	movs	r3, #0
 8016966:	f8ad 3016 	strh.w	r3, [sp, #22]
 801696a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801696e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016972:	6803      	ldr	r3, [r0, #0]
 8016974:	a904      	add	r1, sp, #16
 8016976:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016978:	4798      	blx	r3
 801697a:	1d29      	adds	r1, r5, #4
 801697c:	a802      	add	r0, sp, #8
 801697e:	f7ff fd7b 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016982:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016986:	88e0      	ldrh	r0, [r4, #6]
 8016988:	7921      	ldrb	r1, [r4, #4]
 801698a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801698e:	8922      	ldrh	r2, [r4, #8]
 8016990:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016992:	f88d 1014 	strb.w	r1, [sp, #20]
 8016996:	eba3 0808 	sub.w	r8, r3, r8
 801699a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801699e:	1bdf      	subs	r7, r3, r7
 80169a0:	b2bb      	uxth	r3, r7
 80169a2:	fa1f f888 	uxth.w	r8, r8
 80169a6:	8967      	ldrh	r7, [r4, #10]
 80169a8:	89a4      	ldrh	r4, [r4, #12]
 80169aa:	4440      	add	r0, r8
 80169ac:	4460      	add	r0, ip
 80169ae:	441a      	add	r2, r3
 80169b0:	44b8      	add	r8, r7
 80169b2:	4423      	add	r3, r4
 80169b4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80169b8:	4433      	add	r3, r6
 80169ba:	4432      	add	r2, r6
 80169bc:	44e0      	add	r8, ip
 80169be:	4c09      	ldr	r4, [pc, #36]	; (80169e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80169c0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80169c2:	9404      	str	r4, [sp, #16]
 80169c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80169c8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80169cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80169d0:	6803      	ldr	r3, [r0, #0]
 80169d2:	a904      	add	r1, sp, #16
 80169d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80169d6:	4798      	blx	r3
 80169d8:	b008      	add	sp, #32
 80169da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80169de:	bf00      	nop
 80169e0:	0802e77c 	.word	0x0802e77c
 80169e4:	0802e790 	.word	0x0802e790

080169e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80169e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80169ea:	4604      	mov	r4, r0
 80169ec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80169f0:	3201      	adds	r2, #1
 80169f2:	d112      	bne.n	8016a1a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80169f4:	6803      	ldr	r3, [r0, #0]
 80169f6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80169fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80169fe:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016a02:	2500      	movs	r5, #0
 8016a04:	9500      	str	r5, [sp, #0]
 8016a06:	466d      	mov	r5, sp
 8016a08:	4629      	mov	r1, r5
 8016a0a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016a0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016a10:	4798      	blx	r3
 8016a12:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016a16:	e884 0003 	stmia.w	r4, {r0, r1}
 8016a1a:	4620      	mov	r0, r4
 8016a1c:	b003      	add	sp, #12
 8016a1e:	bd30      	pop	{r4, r5, pc}

08016a20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016a20:	b513      	push	{r0, r1, r4, lr}
 8016a22:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016a26:	3301      	adds	r3, #1
 8016a28:	4604      	mov	r4, r0
 8016a2a:	d109      	bne.n	8016a40 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016a2c:	4601      	mov	r1, r0
 8016a2e:	4668      	mov	r0, sp
 8016a30:	f7ff fd22 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a34:	f8bd 3000 	ldrh.w	r3, [sp]
 8016a38:	8423      	strh	r3, [r4, #32]
 8016a3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016a3e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016a40:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016a44:	b002      	add	sp, #8
 8016a46:	bd10      	pop	{r4, pc}

08016a48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016a48:	b513      	push	{r0, r1, r4, lr}
 8016a4a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016a4e:	3301      	adds	r3, #1
 8016a50:	4604      	mov	r4, r0
 8016a52:	d109      	bne.n	8016a68 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016a54:	4601      	mov	r1, r0
 8016a56:	4668      	mov	r0, sp
 8016a58:	f7ff fd0e 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a5c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016a60:	8423      	strh	r3, [r4, #32]
 8016a62:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016a66:	8463      	strh	r3, [r4, #34]	; 0x22
 8016a68:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016a6c:	b002      	add	sp, #8
 8016a6e:	bd10      	pop	{r4, pc}

08016a70 <_ZN8touchgfx6ScreenC1Ev>:
 8016a70:	b570      	push	{r4, r5, r6, lr}
 8016a72:	4605      	mov	r5, r0
 8016a74:	4b16      	ldr	r3, [pc, #88]	; (8016ad0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016a76:	f845 3b04 	str.w	r3, [r5], #4
 8016a7a:	2300      	movs	r3, #0
 8016a7c:	8103      	strh	r3, [r0, #8]
 8016a7e:	8143      	strh	r3, [r0, #10]
 8016a80:	8183      	strh	r3, [r0, #12]
 8016a82:	81c3      	strh	r3, [r0, #14]
 8016a84:	8203      	strh	r3, [r0, #16]
 8016a86:	8243      	strh	r3, [r0, #18]
 8016a88:	8283      	strh	r3, [r0, #20]
 8016a8a:	82c3      	strh	r3, [r0, #22]
 8016a8c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016a90:	6203      	str	r3, [r0, #32]
 8016a92:	8483      	strh	r3, [r0, #36]	; 0x24
 8016a94:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016a96:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016a9a:	4a0e      	ldr	r2, [pc, #56]	; (8016ad4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016a9c:	6343      	str	r3, [r0, #52]	; 0x34
 8016a9e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016aa2:	4b0d      	ldr	r3, [pc, #52]	; (8016ad8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016aa4:	6042      	str	r2, [r0, #4]
 8016aa6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016aaa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016aac:	4a0b      	ldr	r2, [pc, #44]	; (8016adc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016aae:	4604      	mov	r4, r0
 8016ab0:	2101      	movs	r1, #1
 8016ab2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016ab6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016aba:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016abe:	4628      	mov	r0, r5
 8016ac0:	4798      	blx	r3
 8016ac2:	6863      	ldr	r3, [r4, #4]
 8016ac4:	4628      	mov	r0, r5
 8016ac6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016ac8:	4631      	mov	r1, r6
 8016aca:	4798      	blx	r3
 8016acc:	4620      	mov	r0, r4
 8016ace:	bd70      	pop	{r4, r5, r6, pc}
 8016ad0:	0802e7b8 	.word	0x0802e7b8
 8016ad4:	0802e01c 	.word	0x0802e01c
 8016ad8:	20012e52 	.word	0x20012e52
 8016adc:	20012e50 	.word	0x20012e50

08016ae0 <_ZN8touchgfx6Screen4drawEv>:
 8016ae0:	b507      	push	{r0, r1, r2, lr}
 8016ae2:	4b09      	ldr	r3, [pc, #36]	; (8016b08 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016ae4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ae8:	4b08      	ldr	r3, [pc, #32]	; (8016b0c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016aea:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016aee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016af2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016af6:	6803      	ldr	r3, [r0, #0]
 8016af8:	2100      	movs	r1, #0
 8016afa:	9100      	str	r1, [sp, #0]
 8016afc:	689b      	ldr	r3, [r3, #8]
 8016afe:	4669      	mov	r1, sp
 8016b00:	4798      	blx	r3
 8016b02:	b003      	add	sp, #12
 8016b04:	f85d fb04 	ldr.w	pc, [sp], #4
 8016b08:	20012e50 	.word	0x20012e50
 8016b0c:	20012e52 	.word	0x20012e52

08016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b14:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016b18:	2b00      	cmp	r3, #0
 8016b1a:	b089      	sub	sp, #36	; 0x24
 8016b1c:	4680      	mov	r8, r0
 8016b1e:	460c      	mov	r4, r1
 8016b20:	4615      	mov	r5, r2
 8016b22:	dd0e      	ble.n	8016b42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016b24:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016b28:	2b00      	cmp	r3, #0
 8016b2a:	dd0a      	ble.n	8016b42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016b2c:	4628      	mov	r0, r5
 8016b2e:	f7ff ff5b 	bl	80169e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016b32:	4621      	mov	r1, r4
 8016b34:	f7fe fa3d 	bl	8014fb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b38:	69eb      	ldr	r3, [r5, #28]
 8016b3a:	b928      	cbnz	r0, 8016b48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016b3c:	461d      	mov	r5, r3
 8016b3e:	2b00      	cmp	r3, #0
 8016b40:	d1f4      	bne.n	8016b2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016b42:	b009      	add	sp, #36	; 0x24
 8016b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b48:	ae04      	add	r6, sp, #16
 8016b4a:	2b00      	cmp	r3, #0
 8016b4c:	f000 80b5 	beq.w	8016cba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016b50:	682b      	ldr	r3, [r5, #0]
 8016b52:	4629      	mov	r1, r5
 8016b54:	68db      	ldr	r3, [r3, #12]
 8016b56:	a802      	add	r0, sp, #8
 8016b58:	4798      	blx	r3
 8016b5a:	4628      	mov	r0, r5
 8016b5c:	f7ff ff60 	bl	8016a20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016b60:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016b64:	4407      	add	r7, r0
 8016b66:	4628      	mov	r0, r5
 8016b68:	f7ff ff6e 	bl	8016a48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016b6c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016b70:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016b74:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016b78:	4418      	add	r0, r3
 8016b7a:	4621      	mov	r1, r4
 8016b7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016b80:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016b84:	b23f      	sxth	r7, r7
 8016b86:	4630      	mov	r0, r6
 8016b88:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016b8c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016b90:	f7f9 f9dc 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8016b94:	4628      	mov	r0, r5
 8016b96:	f7ff ff27 	bl	80169e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016b9a:	4602      	mov	r2, r0
 8016b9c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016ba0:	ab06      	add	r3, sp, #24
 8016ba2:	e883 0003 	stmia.w	r3, {r0, r1}
 8016ba6:	4611      	mov	r1, r2
 8016ba8:	4618      	mov	r0, r3
 8016baa:	f7f9 f9cf 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8016bae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016bb2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016bb6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016bba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016bbe:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016bc2:	4299      	cmp	r1, r3
 8016bc4:	d10b      	bne.n	8016bde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016bc6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016bca:	4552      	cmp	r2, sl
 8016bcc:	d107      	bne.n	8016bde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016bce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016bd2:	455a      	cmp	r2, fp
 8016bd4:	d103      	bne.n	8016bde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016bd6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016bda:	454a      	cmp	r2, r9
 8016bdc:	d06d      	beq.n	8016cba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016bde:	f1bb 0f00 	cmp.w	fp, #0
 8016be2:	dd65      	ble.n	8016cb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016be4:	f1b9 0f00 	cmp.w	r9, #0
 8016be8:	dd62      	ble.n	8016cb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016bea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016bee:	fa1f f08a 	uxth.w	r0, sl
 8016bf2:	4552      	cmp	r2, sl
 8016bf4:	9000      	str	r0, [sp, #0]
 8016bf6:	da12      	bge.n	8016c1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016bf8:	9301      	str	r3, [sp, #4]
 8016bfa:	9b00      	ldr	r3, [sp, #0]
 8016bfc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016c00:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016c04:	1a9a      	subs	r2, r3, r2
 8016c06:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016c0a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016c0e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016c12:	69ea      	ldr	r2, [r5, #28]
 8016c14:	4631      	mov	r1, r6
 8016c16:	4640      	mov	r0, r8
 8016c18:	f7ff ff7a 	bl	8016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016c1c:	9b01      	ldr	r3, [sp, #4]
 8016c1e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016c22:	429a      	cmp	r2, r3
 8016c24:	b29f      	uxth	r7, r3
 8016c26:	da0d      	bge.n	8016c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016c28:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016c2c:	1aba      	subs	r2, r7, r2
 8016c2e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016c32:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016c36:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016c3a:	69ea      	ldr	r2, [r5, #28]
 8016c3c:	4631      	mov	r1, r6
 8016c3e:	4640      	mov	r0, r8
 8016c40:	f7ff ff66 	bl	8016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016c44:	8822      	ldrh	r2, [r4, #0]
 8016c46:	88a3      	ldrh	r3, [r4, #4]
 8016c48:	445f      	add	r7, fp
 8016c4a:	4413      	add	r3, r2
 8016c4c:	b29b      	uxth	r3, r3
 8016c4e:	b2bf      	uxth	r7, r7
 8016c50:	b23a      	sxth	r2, r7
 8016c52:	b219      	sxth	r1, r3
 8016c54:	4291      	cmp	r1, r2
 8016c56:	dd0d      	ble.n	8016c74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016c58:	1bdb      	subs	r3, r3, r7
 8016c5a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016c5e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016c62:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016c66:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016c6a:	69ea      	ldr	r2, [r5, #28]
 8016c6c:	4631      	mov	r1, r6
 8016c6e:	4640      	mov	r0, r8
 8016c70:	f7ff ff4e 	bl	8016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016c74:	88e2      	ldrh	r2, [r4, #6]
 8016c76:	8863      	ldrh	r3, [r4, #2]
 8016c78:	4413      	add	r3, r2
 8016c7a:	9a00      	ldr	r2, [sp, #0]
 8016c7c:	444a      	add	r2, r9
 8016c7e:	b29b      	uxth	r3, r3
 8016c80:	fa1f f982 	uxth.w	r9, r2
 8016c84:	fa0f f289 	sxth.w	r2, r9
 8016c88:	b219      	sxth	r1, r3
 8016c8a:	428a      	cmp	r2, r1
 8016c8c:	da15      	bge.n	8016cba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016c8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016c92:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016c96:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016c9a:	eba3 0309 	sub.w	r3, r3, r9
 8016c9e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016ca2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016ca6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016caa:	69ea      	ldr	r2, [r5, #28]
 8016cac:	4631      	mov	r1, r6
 8016cae:	e001      	b.n	8016cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016cb0:	69ea      	ldr	r2, [r5, #28]
 8016cb2:	4621      	mov	r1, r4
 8016cb4:	4640      	mov	r0, r8
 8016cb6:	f7ff ff2b 	bl	8016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016cba:	4628      	mov	r0, r5
 8016cbc:	f7ff fe94 	bl	80169e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016cc0:	6861      	ldr	r1, [r4, #4]
 8016cc2:	4602      	mov	r2, r0
 8016cc4:	6820      	ldr	r0, [r4, #0]
 8016cc6:	4633      	mov	r3, r6
 8016cc8:	c303      	stmia	r3!, {r0, r1}
 8016cca:	4611      	mov	r1, r2
 8016ccc:	4630      	mov	r0, r6
 8016cce:	f7f9 f93d 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8016cd2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016cd6:	2b00      	cmp	r3, #0
 8016cd8:	f77f af33 	ble.w	8016b42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016cdc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016ce0:	2b00      	cmp	r3, #0
 8016ce2:	f77f af2e 	ble.w	8016b42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ce6:	4628      	mov	r0, r5
 8016ce8:	f7ff fe9a 	bl	8016a20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016cec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016cf0:	1a18      	subs	r0, r3, r0
 8016cf2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016cf6:	4628      	mov	r0, r5
 8016cf8:	f7ff fea6 	bl	8016a48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016cfc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016d00:	1a18      	subs	r0, r3, r0
 8016d02:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016d06:	682b      	ldr	r3, [r5, #0]
 8016d08:	4631      	mov	r1, r6
 8016d0a:	689b      	ldr	r3, [r3, #8]
 8016d0c:	4628      	mov	r0, r5
 8016d0e:	4798      	blx	r3
 8016d10:	e717      	b.n	8016b42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016d12 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016d12:	b570      	push	{r4, r5, r6, lr}
 8016d14:	460c      	mov	r4, r1
 8016d16:	b086      	sub	sp, #24
 8016d18:	1d06      	adds	r6, r0, #4
 8016d1a:	2300      	movs	r3, #0
 8016d1c:	4631      	mov	r1, r6
 8016d1e:	4605      	mov	r5, r0
 8016d20:	a802      	add	r0, sp, #8
 8016d22:	9301      	str	r3, [sp, #4]
 8016d24:	f7ff fba8 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016d28:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016d2c:	8822      	ldrh	r2, [r4, #0]
 8016d2e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016d32:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016d36:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016d3a:	1ad2      	subs	r2, r2, r3
 8016d3c:	8863      	ldrh	r3, [r4, #2]
 8016d3e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016d42:	1a5b      	subs	r3, r3, r1
 8016d44:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016d48:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016d4c:	aa01      	add	r2, sp, #4
 8016d4e:	a904      	add	r1, sp, #16
 8016d50:	4630      	mov	r0, r6
 8016d52:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016d56:	f7f9 f9d1 	bl	80100fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016d5a:	9a01      	ldr	r2, [sp, #4]
 8016d5c:	b11a      	cbz	r2, 8016d66 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016d5e:	4621      	mov	r1, r4
 8016d60:	4628      	mov	r0, r5
 8016d62:	f7ff fed5 	bl	8016b10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d66:	b006      	add	sp, #24
 8016d68:	bd70      	pop	{r4, r5, r6, pc}

08016d6a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016d6a:	b530      	push	{r4, r5, lr}
 8016d6c:	4602      	mov	r2, r0
 8016d6e:	4604      	mov	r4, r0
 8016d70:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016d74:	b085      	sub	sp, #20
 8016d76:	460d      	mov	r5, r1
 8016d78:	6851      	ldr	r1, [r2, #4]
 8016d7a:	466b      	mov	r3, sp
 8016d7c:	c303      	stmia	r3!, {r0, r1}
 8016d7e:	4629      	mov	r1, r5
 8016d80:	4668      	mov	r0, sp
 8016d82:	f7f9 f8e3 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 8016d86:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016d8a:	b12b      	cbz	r3, 8016d98 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016d8c:	4669      	mov	r1, sp
 8016d8e:	4620      	mov	r0, r4
 8016d90:	f7ff ffbf 	bl	8016d12 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016d94:	b005      	add	sp, #20
 8016d96:	bd30      	pop	{r4, r5, pc}
 8016d98:	3404      	adds	r4, #4
 8016d9a:	4621      	mov	r1, r4
 8016d9c:	a802      	add	r0, sp, #8
 8016d9e:	f7ff fb6b 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016da2:	f8bd 3000 	ldrh.w	r3, [sp]
 8016da6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016daa:	1a9b      	subs	r3, r3, r2
 8016dac:	f8ad 3000 	strh.w	r3, [sp]
 8016db0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016db4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016db8:	4669      	mov	r1, sp
 8016dba:	1a9b      	subs	r3, r3, r2
 8016dbc:	4620      	mov	r0, r4
 8016dbe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016dc2:	f7f9 f962 	bl	801008a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016dc6:	e7e5      	b.n	8016d94 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016dc8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016dc8:	680a      	ldr	r2, [r1, #0]
 8016dca:	460b      	mov	r3, r1
 8016dcc:	6992      	ldr	r2, [r2, #24]
 8016dce:	1d01      	adds	r1, r0, #4
 8016dd0:	4618      	mov	r0, r3
 8016dd2:	4710      	bx	r2

08016dd4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016dd4:	4298      	cmp	r0, r3
 8016dd6:	d200      	bcs.n	8016dda <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016dd8:	b913      	cbnz	r3, 8016de0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016dda:	440a      	add	r2, r1
 8016ddc:	b210      	sxth	r0, r2
 8016dde:	4770      	bx	lr
 8016de0:	ee07 0a90 	vmov	s15, r0
 8016de4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016de8:	ee07 3a90 	vmov	s15, r3
 8016dec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016df0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016df4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016df8:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016dfc:	ee07 2a90 	vmov	s15, r2
 8016e00:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016e04:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016e08:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016e0c:	ee07 1a90 	vmov	s15, r1
 8016e10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016e14:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016e18:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016e1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e24:	bfcc      	ite	gt
 8016e26:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016e2a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016e2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016e32:	ee17 3a90 	vmov	r3, s15
 8016e36:	b218      	sxth	r0, r3
 8016e38:	4770      	bx	lr

08016e3a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016e3a:	4298      	cmp	r0, r3
 8016e3c:	d200      	bcs.n	8016e40 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016e3e:	b913      	cbnz	r3, 8016e46 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016e40:	440a      	add	r2, r1
 8016e42:	b210      	sxth	r0, r2
 8016e44:	4770      	bx	lr
 8016e46:	ee07 2a90 	vmov	s15, r2
 8016e4a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016e4e:	ee07 0a90 	vmov	s15, r0
 8016e52:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016e56:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016e5a:	ee07 3a10 	vmov	s14, r3
 8016e5e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016e62:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016e66:	ee07 1a90 	vmov	s15, r1
 8016e6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016e6e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016e72:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016e76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e7e:	bfcc      	ite	gt
 8016e80:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016e84:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016e88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016e8c:	ee17 3a90 	vmov	r3, s15
 8016e90:	b218      	sxth	r0, r3
 8016e92:	4770      	bx	lr

08016e94 <_ZN8touchgfx12TextProviderC1Ev>:
 8016e94:	b538      	push	{r3, r4, r5, lr}
 8016e96:	2500      	movs	r5, #0
 8016e98:	2302      	movs	r3, #2
 8016e9a:	4604      	mov	r4, r0
 8016e9c:	e9c0 5500 	strd	r5, r5, [r0]
 8016ea0:	7403      	strb	r3, [r0, #16]
 8016ea2:	6145      	str	r5, [r0, #20]
 8016ea4:	7605      	strb	r5, [r0, #24]
 8016ea6:	83c5      	strh	r5, [r0, #30]
 8016ea8:	8405      	strh	r5, [r0, #32]
 8016eaa:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016eac:	8705      	strh	r5, [r0, #56]	; 0x38
 8016eae:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016eb0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016eb4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016eb8:	220e      	movs	r2, #14
 8016eba:	4629      	mov	r1, r5
 8016ebc:	304c      	adds	r0, #76	; 0x4c
 8016ebe:	f013 f9e6 	bl	802a28e <memset>
 8016ec2:	2301      	movs	r3, #1
 8016ec4:	4620      	mov	r0, r4
 8016ec6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016eca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016ece:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016ed2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016ed6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016eda:	f7f1 f919 	bl	8008110 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016ede:	4620      	mov	r0, r4
 8016ee0:	bd38      	pop	{r3, r4, r5, pc}

08016ee2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016ee2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016ee4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ee8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016eea:	fab0 f080 	clz	r0, r0
 8016eee:	0940      	lsrs	r0, r0, #5
 8016ef0:	4770      	bx	lr

08016ef2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016ef2:	b530      	push	{r4, r5, lr}
 8016ef4:	2500      	movs	r5, #0
 8016ef6:	2401      	movs	r4, #1
 8016ef8:	6843      	ldr	r3, [r0, #4]
 8016efa:	b913      	cbnz	r3, 8016f02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016efc:	6803      	ldr	r3, [r0, #0]
 8016efe:	b313      	cbz	r3, 8016f46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016f00:	6043      	str	r3, [r0, #4]
 8016f02:	7e03      	ldrb	r3, [r0, #24]
 8016f04:	b143      	cbz	r3, 8016f18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016f06:	6943      	ldr	r3, [r0, #20]
 8016f08:	b12b      	cbz	r3, 8016f16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016f0a:	881a      	ldrh	r2, [r3, #0]
 8016f0c:	b11a      	cbz	r2, 8016f16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016f0e:	1c9a      	adds	r2, r3, #2
 8016f10:	6142      	str	r2, [r0, #20]
 8016f12:	8818      	ldrh	r0, [r3, #0]
 8016f14:	bd30      	pop	{r4, r5, pc}
 8016f16:	7605      	strb	r5, [r0, #24]
 8016f18:	6843      	ldr	r3, [r0, #4]
 8016f1a:	8819      	ldrh	r1, [r3, #0]
 8016f1c:	b199      	cbz	r1, 8016f46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016f1e:	1c9a      	adds	r2, r3, #2
 8016f20:	2902      	cmp	r1, #2
 8016f22:	6042      	str	r2, [r0, #4]
 8016f24:	d1f5      	bne.n	8016f12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016f26:	7c03      	ldrb	r3, [r0, #16]
 8016f28:	2b01      	cmp	r3, #1
 8016f2a:	d8e5      	bhi.n	8016ef8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f2c:	1c5a      	adds	r2, r3, #1
 8016f2e:	3302      	adds	r3, #2
 8016f30:	7402      	strb	r2, [r0, #16]
 8016f32:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016f36:	6143      	str	r3, [r0, #20]
 8016f38:	2b00      	cmp	r3, #0
 8016f3a:	d0dd      	beq.n	8016ef8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f3c:	881b      	ldrh	r3, [r3, #0]
 8016f3e:	2b00      	cmp	r3, #0
 8016f40:	d0da      	beq.n	8016ef8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f42:	7604      	strb	r4, [r0, #24]
 8016f44:	e7d8      	b.n	8016ef8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f46:	2000      	movs	r0, #0
 8016f48:	e7e4      	b.n	8016f14 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016f4a:	b430      	push	{r4, r5}
 8016f4c:	6001      	str	r1, [r0, #0]
 8016f4e:	2100      	movs	r1, #0
 8016f50:	6041      	str	r1, [r0, #4]
 8016f52:	6815      	ldr	r5, [r2, #0]
 8016f54:	6085      	str	r5, [r0, #8]
 8016f56:	6852      	ldr	r2, [r2, #4]
 8016f58:	6443      	str	r3, [r0, #68]	; 0x44
 8016f5a:	9b02      	ldr	r3, [sp, #8]
 8016f5c:	60c2      	str	r2, [r0, #12]
 8016f5e:	7401      	strb	r1, [r0, #16]
 8016f60:	6141      	str	r1, [r0, #20]
 8016f62:	7601      	strb	r1, [r0, #24]
 8016f64:	8701      	strh	r1, [r0, #56]	; 0x38
 8016f66:	8401      	strh	r1, [r0, #32]
 8016f68:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016f6c:	6483      	str	r3, [r0, #72]	; 0x48
 8016f6e:	bc30      	pop	{r4, r5}
 8016f70:	f7f1 b8ce 	b.w	8008110 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016f74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016f74:	b408      	push	{r3}
 8016f76:	b510      	push	{r4, lr}
 8016f78:	b085      	sub	sp, #20
 8016f7a:	ac07      	add	r4, sp, #28
 8016f7c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016f80:	9300      	str	r3, [sp, #0]
 8016f82:	4613      	mov	r3, r2
 8016f84:	4622      	mov	r2, r4
 8016f86:	9403      	str	r4, [sp, #12]
 8016f88:	f7ff ffdf 	bl	8016f4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f8c:	b005      	add	sp, #20
 8016f8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016f92:	b001      	add	sp, #4
 8016f94:	4770      	bx	lr

08016f96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016f96:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f98:	4605      	mov	r5, r0
 8016f9a:	4608      	mov	r0, r1
 8016f9c:	b1e9      	cbz	r1, 8016fda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016f9e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016fa2:	460b      	mov	r3, r1
 8016fa4:	f101 0708 	add.w	r7, r1, #8
 8016fa8:	4622      	mov	r2, r4
 8016faa:	6818      	ldr	r0, [r3, #0]
 8016fac:	6859      	ldr	r1, [r3, #4]
 8016fae:	4626      	mov	r6, r4
 8016fb0:	c603      	stmia	r6!, {r0, r1}
 8016fb2:	3308      	adds	r3, #8
 8016fb4:	42bb      	cmp	r3, r7
 8016fb6:	4634      	mov	r4, r6
 8016fb8:	d1f7      	bne.n	8016faa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016fba:	6818      	ldr	r0, [r3, #0]
 8016fbc:	6030      	str	r0, [r6, #0]
 8016fbe:	889b      	ldrh	r3, [r3, #4]
 8016fc0:	80b3      	strh	r3, [r6, #4]
 8016fc2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016fc6:	015b      	lsls	r3, r3, #5
 8016fc8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016fcc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016fd0:	430b      	orrs	r3, r1
 8016fd2:	425b      	negs	r3, r3
 8016fd4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016fd8:	4610      	mov	r0, r2
 8016fda:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016fdc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016fdc:	b538      	push	{r3, r4, r5, lr}
 8016fde:	460c      	mov	r4, r1
 8016fe0:	6811      	ldr	r1, [r2, #0]
 8016fe2:	4610      	mov	r0, r2
 8016fe4:	68cd      	ldr	r5, [r1, #12]
 8016fe6:	4619      	mov	r1, r3
 8016fe8:	47a8      	blx	r5
 8016fea:	2800      	cmp	r0, #0
 8016fec:	bf08      	it	eq
 8016fee:	4620      	moveq	r0, r4
 8016ff0:	bd38      	pop	{r3, r4, r5, pc}
	...

08016ff4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016ff6:	4604      	mov	r4, r0
 8016ff8:	4615      	mov	r5, r2
 8016ffa:	4608      	mov	r0, r1
 8016ffc:	b93a      	cbnz	r2, 801700e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016ffe:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017002:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017006:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801700a:	4628      	mov	r0, r5
 801700c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801700e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017012:	8893      	ldrh	r3, [r2, #4]
 8017014:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017018:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801701c:	79ee      	ldrb	r6, [r5, #7]
 801701e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017022:	4316      	orrs	r6, r2
 8017024:	19da      	adds	r2, r3, r7
 8017026:	b291      	uxth	r1, r2
 8017028:	291d      	cmp	r1, #29
 801702a:	b2b7      	uxth	r7, r6
 801702c:	d87a      	bhi.n	8017124 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801702e:	2201      	movs	r2, #1
 8017030:	408a      	lsls	r2, r1
 8017032:	4975      	ldr	r1, [pc, #468]	; (8017208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017034:	420a      	tst	r2, r1
 8017036:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801703a:	d12d      	bne.n	8017098 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801703c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017040:	d070      	beq.n	8017124 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017042:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017046:	462b      	mov	r3, r5
 8017048:	f105 0e08 	add.w	lr, r5, #8
 801704c:	4615      	mov	r5, r2
 801704e:	6818      	ldr	r0, [r3, #0]
 8017050:	6859      	ldr	r1, [r3, #4]
 8017052:	4694      	mov	ip, r2
 8017054:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017058:	3308      	adds	r3, #8
 801705a:	4573      	cmp	r3, lr
 801705c:	4662      	mov	r2, ip
 801705e:	d1f6      	bne.n	801704e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017060:	6818      	ldr	r0, [r3, #0]
 8017062:	f8cc 0000 	str.w	r0, [ip]
 8017066:	889b      	ldrh	r3, [r3, #4]
 8017068:	f8ac 3004 	strh.w	r3, [ip, #4]
 801706c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017070:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017074:	b2b3      	uxth	r3, r6
 8017076:	1aca      	subs	r2, r1, r3
 8017078:	b292      	uxth	r2, r2
 801707a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801707e:	10d2      	asrs	r2, r2, #3
 8017080:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017084:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017088:	4302      	orrs	r2, r0
 801708a:	1bcf      	subs	r7, r1, r7
 801708c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017090:	1afb      	subs	r3, r7, r3
 8017092:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017096:	e7b8      	b.n	801700a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017098:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801709a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801709e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80170a0:	f640 6333 	movw	r3, #3635	; 0xe33
 80170a4:	4299      	cmp	r1, r3
 80170a6:	d110      	bne.n	80170ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80170a8:	6803      	ldr	r3, [r0, #0]
 80170aa:	68db      	ldr	r3, [r3, #12]
 80170ac:	4798      	blx	r3
 80170ae:	7b41      	ldrb	r1, [r0, #13]
 80170b0:	00cb      	lsls	r3, r1, #3
 80170b2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80170b6:	7a03      	ldrb	r3, [r0, #8]
 80170b8:	0648      	lsls	r0, r1, #25
 80170ba:	ea43 0302 	orr.w	r3, r3, r2
 80170be:	bf44      	itt	mi
 80170c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80170c4:	b21b      	sxthmi	r3, r3
 80170c6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80170ca:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80170ce:	443b      	add	r3, r7
 80170d0:	4433      	add	r3, r6
 80170d2:	b29b      	uxth	r3, r3
 80170d4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80170d8:	462a      	mov	r2, r5
 80170da:	f105 0c08 	add.w	ip, r5, #8
 80170de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80170e2:	4635      	mov	r5, r6
 80170e4:	6810      	ldr	r0, [r2, #0]
 80170e6:	6851      	ldr	r1, [r2, #4]
 80170e8:	4637      	mov	r7, r6
 80170ea:	c703      	stmia	r7!, {r0, r1}
 80170ec:	3208      	adds	r2, #8
 80170ee:	4562      	cmp	r2, ip
 80170f0:	463e      	mov	r6, r7
 80170f2:	d1f7      	bne.n	80170e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80170f4:	6810      	ldr	r0, [r2, #0]
 80170f6:	6038      	str	r0, [r7, #0]
 80170f8:	8892      	ldrh	r2, [r2, #4]
 80170fa:	80ba      	strh	r2, [r7, #4]
 80170fc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017100:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017104:	10db      	asrs	r3, r3, #3
 8017106:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801710a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801710e:	4313      	orrs	r3, r2
 8017110:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017114:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017118:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801711c:	1a9b      	subs	r3, r3, r2
 801711e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017122:	e772      	b.n	801700a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017124:	f023 0204 	bic.w	r2, r3, #4
 8017128:	f640 611b 	movw	r1, #3611	; 0xe1b
 801712c:	428a      	cmp	r2, r1
 801712e:	d003      	beq.n	8017138 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017130:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017134:	4293      	cmp	r3, r2
 8017136:	d120      	bne.n	801717a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017138:	3b01      	subs	r3, #1
 801713a:	4602      	mov	r2, r0
 801713c:	b29b      	uxth	r3, r3
 801713e:	4629      	mov	r1, r5
 8017140:	4620      	mov	r0, r4
 8017142:	f7ff ff4b 	bl	8016fdc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017146:	7b41      	ldrb	r1, [r0, #13]
 8017148:	00cb      	lsls	r3, r1, #3
 801714a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801714e:	7a03      	ldrb	r3, [r0, #8]
 8017150:	0649      	lsls	r1, r1, #25
 8017152:	ea43 0302 	orr.w	r3, r3, r2
 8017156:	bf44      	itt	mi
 8017158:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801715c:	b21b      	sxthmi	r3, r3
 801715e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017162:	7b6b      	ldrb	r3, [r5, #13]
 8017164:	7aaa      	ldrb	r2, [r5, #10]
 8017166:	005b      	lsls	r3, r3, #1
 8017168:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801716c:	4313      	orrs	r3, r2
 801716e:	115a      	asrs	r2, r3, #5
 8017170:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017174:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017178:	e036      	b.n	80171e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801717a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801717e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017182:	7a2a      	ldrb	r2, [r5, #8]
 8017184:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017188:	ea42 0201 	orr.w	r2, r2, r1
 801718c:	bf1c      	itt	ne
 801718e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017192:	b212      	sxthne	r2, r2
 8017194:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017198:	f640 6109 	movw	r1, #3593	; 0xe09
 801719c:	f023 0210 	bic.w	r2, r3, #16
 80171a0:	428a      	cmp	r2, r1
 80171a2:	d003      	beq.n	80171ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80171a4:	f640 6213 	movw	r2, #3603	; 0xe13
 80171a8:	4293      	cmp	r3, r2
 80171aa:	d12a      	bne.n	8017202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80171ac:	7b6e      	ldrb	r6, [r5, #13]
 80171ae:	0076      	lsls	r6, r6, #1
 80171b0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80171b4:	7aae      	ldrb	r6, [r5, #10]
 80171b6:	4316      	orrs	r6, r2
 80171b8:	f640 6213 	movw	r2, #3603	; 0xe13
 80171bc:	4293      	cmp	r3, r2
 80171be:	bf18      	it	ne
 80171c0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80171c4:	4602      	mov	r2, r0
 80171c6:	bf14      	ite	ne
 80171c8:	b29b      	uxthne	r3, r3
 80171ca:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80171ce:	4629      	mov	r1, r5
 80171d0:	4620      	mov	r0, r4
 80171d2:	f7ff ff03 	bl	8016fdc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80171d6:	7b43      	ldrb	r3, [r0, #13]
 80171d8:	7a82      	ldrb	r2, [r0, #10]
 80171da:	005b      	lsls	r3, r3, #1
 80171dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80171e0:	4313      	orrs	r3, r2
 80171e2:	1af6      	subs	r6, r6, r3
 80171e4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80171e8:	7b69      	ldrb	r1, [r5, #13]
 80171ea:	00cb      	lsls	r3, r1, #3
 80171ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171f0:	7a2b      	ldrb	r3, [r5, #8]
 80171f2:	4313      	orrs	r3, r2
 80171f4:	064a      	lsls	r2, r1, #25
 80171f6:	bf44      	itt	mi
 80171f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171fc:	b21b      	sxthmi	r3, r3
 80171fe:	1bdb      	subs	r3, r3, r7
 8017200:	e747      	b.n	8017092 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017202:	2300      	movs	r3, #0
 8017204:	e7b6      	b.n	8017174 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017206:	bf00      	nop
 8017208:	3fc00079 	.word	0x3fc00079

0801720c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801720c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017210:	4604      	mov	r4, r0
 8017212:	b942      	cbnz	r2, 8017226 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017214:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017218:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801721c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017220:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017224:	e047      	b.n	80172b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017226:	7b51      	ldrb	r1, [r2, #13]
 8017228:	8893      	ldrh	r3, [r2, #4]
 801722a:	010d      	lsls	r5, r1, #4
 801722c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017230:	79d5      	ldrb	r5, [r2, #7]
 8017232:	4305      	orrs	r5, r0
 8017234:	2d04      	cmp	r5, #4
 8017236:	bfcc      	ite	gt
 8017238:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801723c:	f04f 0e01 	movle.w	lr, #1
 8017240:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017244:	f200 80ab 	bhi.w	801739e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017248:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801724c:	4283      	cmp	r3, r0
 801724e:	d216      	bcs.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017250:	f240 605b 	movw	r0, #1627	; 0x65b
 8017254:	4283      	cmp	r3, r0
 8017256:	d859      	bhi.n	801730c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017258:	f240 6057 	movw	r0, #1623	; 0x657
 801725c:	4283      	cmp	r3, r0
 801725e:	d20e      	bcs.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017260:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017264:	d24a      	bcs.n	80172fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017266:	f240 604e 	movw	r0, #1614	; 0x64e
 801726a:	4283      	cmp	r3, r0
 801726c:	d207      	bcs.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801726e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017272:	4283      	cmp	r3, r0
 8017274:	d02a      	beq.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017276:	d821      	bhi.n	80172bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017278:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801727c:	d35b      	bcc.n	8017336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801727e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017282:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017286:	f040 80d0 	bne.w	801742a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801728a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801728e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017292:	f040 80ca 	bne.w	801742a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017296:	00cb      	lsls	r3, r1, #3
 8017298:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801729c:	7a13      	ldrb	r3, [r2, #8]
 801729e:	0649      	lsls	r1, r1, #25
 80172a0:	ea43 0300 	orr.w	r3, r3, r0
 80172a4:	bf44      	itt	mi
 80172a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80172aa:	b21b      	sxthmi	r3, r3
 80172ac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80172b0:	1b5d      	subs	r5, r3, r5
 80172b2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80172b6:	4610      	mov	r0, r2
 80172b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80172bc:	f240 604b 	movw	r0, #1611	; 0x64b
 80172c0:	4283      	cmp	r3, r0
 80172c2:	d338      	bcc.n	8017336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80172c4:	f240 604c 	movw	r0, #1612	; 0x64c
 80172c8:	4283      	cmp	r3, r0
 80172ca:	d9d8      	bls.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80172cc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80172d0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80172d4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80172d8:	f040 80f2 	bne.w	80174c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80172dc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80172e0:	f040 80ee 	bne.w	80174c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80172e4:	00cb      	lsls	r3, r1, #3
 80172e6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80172ea:	7a13      	ldrb	r3, [r2, #8]
 80172ec:	064e      	lsls	r6, r1, #25
 80172ee:	ea43 0300 	orr.w	r3, r3, r0
 80172f2:	bf44      	itt	mi
 80172f4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80172f8:	b21b      	sxthmi	r3, r3
 80172fa:	e7d9      	b.n	80172b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80172fc:	f240 6054 	movw	r0, #1620	; 0x654
 8017300:	4283      	cmp	r3, r0
 8017302:	d8e3      	bhi.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017304:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017308:	d9e0      	bls.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801730a:	e7b8      	b.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801730c:	f240 6074 	movw	r0, #1652	; 0x674
 8017310:	4283      	cmp	r3, r0
 8017312:	d0b4      	beq.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017314:	d82d      	bhi.n	8017372 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017316:	f240 605e 	movw	r0, #1630	; 0x65e
 801731a:	4283      	cmp	r3, r0
 801731c:	d804      	bhi.n	8017328 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801731e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017322:	4283      	cmp	r3, r0
 8017324:	d3d2      	bcc.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017326:	e7aa      	b.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017328:	f240 605f 	movw	r0, #1631	; 0x65f
 801732c:	4283      	cmp	r3, r0
 801732e:	d0cd      	beq.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017330:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017334:	d0a3      	beq.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017336:	00cb      	lsls	r3, r1, #3
 8017338:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801733c:	7a13      	ldrb	r3, [r2, #8]
 801733e:	0649      	lsls	r1, r1, #25
 8017340:	ea43 0300 	orr.w	r3, r3, r0
 8017344:	bf44      	itt	mi
 8017346:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801734a:	b21b      	sxthmi	r3, r3
 801734c:	1b5d      	subs	r5, r3, r5
 801734e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017352:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017356:	7b53      	ldrb	r3, [r2, #13]
 8017358:	015b      	lsls	r3, r3, #5
 801735a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801735e:	7993      	ldrb	r3, [r2, #6]
 8017360:	430b      	orrs	r3, r1
 8017362:	005b      	lsls	r3, r3, #1
 8017364:	2105      	movs	r1, #5
 8017366:	fb93 f3f1 	sdiv	r3, r3, r1
 801736a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801736e:	440b      	add	r3, r1
 8017370:	e756      	b.n	8017220 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017372:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017376:	4283      	cmp	r3, r0
 8017378:	d809      	bhi.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801737a:	f240 60df 	movw	r0, #1759	; 0x6df
 801737e:	4283      	cmp	r3, r0
 8017380:	f4bf af7d 	bcs.w	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017384:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017388:	2b05      	cmp	r3, #5
 801738a:	d8d4      	bhi.n	8017336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801738c:	e777      	b.n	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801738e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017392:	4283      	cmp	r3, r0
 8017394:	d09a      	beq.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017396:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801739a:	4283      	cmp	r3, r0
 801739c:	e7ca      	b.n	8017334 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801739e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80173a2:	d22b      	bcs.n	80173fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80173a4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80173a8:	4283      	cmp	r3, r0
 80173aa:	d28f      	bcs.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173ac:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80173b0:	4283      	cmp	r3, r0
 80173b2:	d816      	bhi.n	80173e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80173b4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80173b8:	4283      	cmp	r3, r0
 80173ba:	f4bf af60 	bcs.w	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173be:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80173c2:	4283      	cmp	r3, r0
 80173c4:	d80a      	bhi.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80173c6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80173ca:	4283      	cmp	r3, r0
 80173cc:	f4bf af57 	bcs.w	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173d0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80173d4:	4283      	cmp	r3, r0
 80173d6:	f43f af79 	beq.w	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173da:	e7ac      	b.n	8017336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80173dc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80173e0:	e7f8      	b.n	80173d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80173e2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80173e6:	4283      	cmp	r3, r0
 80173e8:	d802      	bhi.n	80173f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80173ea:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80173ee:	e798      	b.n	8017322 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80173f0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80173f4:	4283      	cmp	r3, r0
 80173f6:	f47f af42 	bne.w	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173fa:	e767      	b.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173fc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017400:	4283      	cmp	r3, r0
 8017402:	f43f af63 	beq.w	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017406:	d802      	bhi.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017408:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801740c:	e7f2      	b.n	80173f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801740e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017412:	4283      	cmp	r3, r0
 8017414:	d805      	bhi.n	8017422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017416:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801741a:	4283      	cmp	r3, r0
 801741c:	f4ff af2f 	bcc.w	801727e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017420:	e754      	b.n	80172cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017422:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017426:	4283      	cmp	r3, r0
 8017428:	e7af      	b.n	801738a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801742a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801742e:	4617      	mov	r7, r2
 8017430:	f102 0808 	add.w	r8, r2, #8
 8017434:	4666      	mov	r6, ip
 8017436:	6838      	ldr	r0, [r7, #0]
 8017438:	6879      	ldr	r1, [r7, #4]
 801743a:	46e6      	mov	lr, ip
 801743c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017440:	3708      	adds	r7, #8
 8017442:	4547      	cmp	r7, r8
 8017444:	46f4      	mov	ip, lr
 8017446:	d1f6      	bne.n	8017436 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017448:	6838      	ldr	r0, [r7, #0]
 801744a:	f8ce 0000 	str.w	r0, [lr]
 801744e:	88b9      	ldrh	r1, [r7, #4]
 8017450:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017454:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017458:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801745c:	d009      	beq.n	8017472 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801745e:	7b51      	ldrb	r1, [r2, #13]
 8017460:	7992      	ldrb	r2, [r2, #6]
 8017462:	0149      	lsls	r1, r1, #5
 8017464:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017468:	4311      	orrs	r1, r2
 801746a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801746e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017472:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017476:	b2ad      	uxth	r5, r5
 8017478:	d00d      	beq.n	8017496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801747a:	442b      	add	r3, r5
 801747c:	b29b      	uxth	r3, r3
 801747e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017482:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017486:	10db      	asrs	r3, r3, #3
 8017488:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801748c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017490:	4313      	orrs	r3, r2
 8017492:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017496:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801749a:	00cb      	lsls	r3, r1, #3
 801749c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80174a0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80174a4:	064f      	lsls	r7, r1, #25
 80174a6:	ea43 0302 	orr.w	r3, r3, r2
 80174aa:	bf44      	itt	mi
 80174ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80174b0:	b21b      	sxthmi	r3, r3
 80174b2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80174b6:	1b5b      	subs	r3, r3, r5
 80174b8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80174bc:	4632      	mov	r2, r6
 80174be:	e6fa      	b.n	80172b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80174c0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80174c4:	4617      	mov	r7, r2
 80174c6:	f102 0908 	add.w	r9, r2, #8
 80174ca:	4666      	mov	r6, ip
 80174cc:	6838      	ldr	r0, [r7, #0]
 80174ce:	6879      	ldr	r1, [r7, #4]
 80174d0:	46e0      	mov	r8, ip
 80174d2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80174d6:	3708      	adds	r7, #8
 80174d8:	454f      	cmp	r7, r9
 80174da:	46c4      	mov	ip, r8
 80174dc:	d1f6      	bne.n	80174cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80174de:	6838      	ldr	r0, [r7, #0]
 80174e0:	f8c8 0000 	str.w	r0, [r8]
 80174e4:	88b9      	ldrh	r1, [r7, #4]
 80174e6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80174ea:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80174ee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80174f2:	d009      	beq.n	8017508 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80174f4:	7b51      	ldrb	r1, [r2, #13]
 80174f6:	7992      	ldrb	r2, [r2, #6]
 80174f8:	0149      	lsls	r1, r1, #5
 80174fa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80174fe:	4311      	orrs	r1, r2
 8017500:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017504:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017508:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801750c:	d00e      	beq.n	801752c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801750e:	eba3 030e 	sub.w	r3, r3, lr
 8017512:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017516:	b29b      	uxth	r3, r3
 8017518:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801751c:	10db      	asrs	r3, r3, #3
 801751e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017522:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017526:	4313      	orrs	r3, r2
 8017528:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801752c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017530:	00cb      	lsls	r3, r1, #3
 8017532:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017536:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801753a:	0648      	lsls	r0, r1, #25
 801753c:	ea43 0302 	orr.w	r3, r3, r2
 8017540:	bf44      	itt	mi
 8017542:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017546:	b21b      	sxthmi	r3, r3
 8017548:	1b5d      	subs	r5, r3, r5
 801754a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801754e:	e7b5      	b.n	80174bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017554:	461e      	mov	r6, r3
 8017556:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017558:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801755c:	4604      	mov	r4, r0
 801755e:	4617      	mov	r7, r2
 8017560:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017564:	f7f0 fd92 	bl	800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017568:	4605      	mov	r5, r0
 801756a:	b918      	cbnz	r0, 8017574 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801756c:	6030      	str	r0, [r6, #0]
 801756e:	4628      	mov	r0, r5
 8017570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017574:	683b      	ldr	r3, [r7, #0]
 8017576:	4601      	mov	r1, r0
 8017578:	68db      	ldr	r3, [r3, #12]
 801757a:	4638      	mov	r0, r7
 801757c:	4798      	blx	r3
 801757e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017582:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017586:	4602      	mov	r2, r0
 8017588:	6030      	str	r0, [r6, #0]
 801758a:	d213      	bcs.n	80175b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801758c:	4643      	mov	r3, r8
 801758e:	4639      	mov	r1, r7
 8017590:	4620      	mov	r0, r4
 8017592:	f7ff fe3b 	bl	801720c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017596:	6030      	str	r0, [r6, #0]
 8017598:	6833      	ldr	r3, [r6, #0]
 801759a:	b143      	cbz	r3, 80175ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801759c:	7b5a      	ldrb	r2, [r3, #13]
 801759e:	7a9b      	ldrb	r3, [r3, #10]
 80175a0:	0052      	lsls	r2, r2, #1
 80175a2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80175a6:	4313      	orrs	r3, r2
 80175a8:	bf0c      	ite	eq
 80175aa:	2301      	moveq	r3, #1
 80175ac:	2300      	movne	r3, #0
 80175ae:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80175b2:	e7dc      	b.n	801756e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80175b4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80175b8:	b29b      	uxth	r3, r3
 80175ba:	2b7f      	cmp	r3, #127	; 0x7f
 80175bc:	d804      	bhi.n	80175c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80175be:	4639      	mov	r1, r7
 80175c0:	4620      	mov	r0, r4
 80175c2:	f7ff fd17 	bl	8016ff4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80175c6:	e7e6      	b.n	8017596 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80175c8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80175cc:	2b00      	cmp	r3, #0
 80175ce:	d0e3      	beq.n	8017598 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80175d0:	f640 1302 	movw	r3, #2306	; 0x902
 80175d4:	429d      	cmp	r5, r3
 80175d6:	d1df      	bne.n	8017598 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80175d8:	4601      	mov	r1, r0
 80175da:	4620      	mov	r0, r4
 80175dc:	f7ff fcdb 	bl	8016f96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80175e0:	e7d9      	b.n	8017596 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080175e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80175e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80175e6:	461e      	mov	r6, r3
 80175e8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80175ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175ee:	4604      	mov	r4, r0
 80175f0:	4617      	mov	r7, r2
 80175f2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80175f6:	f7f0 fd49 	bl	800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80175fa:	4605      	mov	r5, r0
 80175fc:	b918      	cbnz	r0, 8017606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80175fe:	6030      	str	r0, [r6, #0]
 8017600:	4628      	mov	r0, r5
 8017602:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017606:	683b      	ldr	r3, [r7, #0]
 8017608:	4601      	mov	r1, r0
 801760a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801760e:	4638      	mov	r0, r7
 8017610:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017614:	47c8      	blx	r9
 8017616:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801761a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801761e:	4602      	mov	r2, r0
 8017620:	6030      	str	r0, [r6, #0]
 8017622:	d213      	bcs.n	801764c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017624:	4643      	mov	r3, r8
 8017626:	4639      	mov	r1, r7
 8017628:	4620      	mov	r0, r4
 801762a:	f7ff fdef 	bl	801720c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801762e:	6030      	str	r0, [r6, #0]
 8017630:	6833      	ldr	r3, [r6, #0]
 8017632:	b143      	cbz	r3, 8017646 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017634:	7b5a      	ldrb	r2, [r3, #13]
 8017636:	7a9b      	ldrb	r3, [r3, #10]
 8017638:	0052      	lsls	r2, r2, #1
 801763a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801763e:	4313      	orrs	r3, r2
 8017640:	bf0c      	ite	eq
 8017642:	2301      	moveq	r3, #1
 8017644:	2300      	movne	r3, #0
 8017646:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801764a:	e7d9      	b.n	8017600 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801764c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017650:	b29b      	uxth	r3, r3
 8017652:	2b7f      	cmp	r3, #127	; 0x7f
 8017654:	d804      	bhi.n	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017656:	4639      	mov	r1, r7
 8017658:	4620      	mov	r0, r4
 801765a:	f7ff fccb 	bl	8016ff4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801765e:	e7e6      	b.n	801762e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017660:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017664:	2b00      	cmp	r3, #0
 8017666:	d0e3      	beq.n	8017630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017668:	f640 1302 	movw	r3, #2306	; 0x902
 801766c:	429d      	cmp	r5, r3
 801766e:	d1df      	bne.n	8017630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017670:	4601      	mov	r1, r0
 8017672:	4620      	mov	r0, r4
 8017674:	f7ff fc8f 	bl	8016f96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017678:	e7d9      	b.n	801762e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801767a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801767a:	b510      	push	{r4, lr}
 801767c:	4604      	mov	r4, r0
 801767e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017682:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017684:	b1f1      	cbz	r1, 80176c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017686:	2b0a      	cmp	r3, #10
 8017688:	d02f      	beq.n	80176ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801768a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801768c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017690:	3901      	subs	r1, #1
 8017692:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017694:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017698:	1c51      	adds	r1, r2, #1
 801769a:	b289      	uxth	r1, r1
 801769c:	2901      	cmp	r1, #1
 801769e:	bf84      	itt	hi
 80176a0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80176a4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80176a6:	f103 0201 	add.w	r2, r3, #1
 80176aa:	8722      	strh	r2, [r4, #56]	; 0x38
 80176ac:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80176ae:	bf98      	it	ls
 80176b0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80176b2:	4413      	add	r3, r2
 80176b4:	b29b      	uxth	r3, r3
 80176b6:	2b09      	cmp	r3, #9
 80176b8:	bf88      	it	hi
 80176ba:	3b0a      	subhi	r3, #10
 80176bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176c0:	8458      	strh	r0, [r3, #34]	; 0x22
 80176c2:	e7dc      	b.n	801767e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80176c4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80176c6:	2b0a      	cmp	r3, #10
 80176c8:	d00f      	beq.n	80176ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80176ca:	4620      	mov	r0, r4
 80176cc:	f7ff fc11 	bl	8016ef2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80176d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80176d2:	1c5a      	adds	r2, r3, #1
 80176d4:	8722      	strh	r2, [r4, #56]	; 0x38
 80176d6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80176d8:	4413      	add	r3, r2
 80176da:	b29b      	uxth	r3, r3
 80176dc:	2b09      	cmp	r3, #9
 80176de:	bf88      	it	hi
 80176e0:	3b0a      	subhi	r3, #10
 80176e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176e6:	8458      	strh	r0, [r3, #34]	; 0x22
 80176e8:	e7ec      	b.n	80176c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80176ea:	bd10      	pop	{r4, pc}

080176ec <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80176ec:	b538      	push	{r3, r4, r5, lr}
 80176ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80176f0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80176f4:	4604      	mov	r4, r0
 80176f6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80176f8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80176fa:	3a01      	subs	r2, #1
 80176fc:	8702      	strh	r2, [r0, #56]	; 0x38
 80176fe:	1c5a      	adds	r2, r3, #1
 8017700:	b292      	uxth	r2, r2
 8017702:	2a09      	cmp	r2, #9
 8017704:	bf86      	itte	hi
 8017706:	3b09      	subhi	r3, #9
 8017708:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801770a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801770c:	f7ff ffb5 	bl	801767a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017710:	8c23      	ldrh	r3, [r4, #32]
 8017712:	2b01      	cmp	r3, #1
 8017714:	bf9c      	itt	ls
 8017716:	3301      	addls	r3, #1
 8017718:	8423      	strhls	r3, [r4, #32]
 801771a:	8be3      	ldrh	r3, [r4, #30]
 801771c:	b90b      	cbnz	r3, 8017722 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801771e:	2302      	movs	r3, #2
 8017720:	83e3      	strh	r3, [r4, #30]
 8017722:	8be3      	ldrh	r3, [r4, #30]
 8017724:	3b01      	subs	r3, #1
 8017726:	b29b      	uxth	r3, r3
 8017728:	83e3      	strh	r3, [r4, #30]
 801772a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801772e:	4628      	mov	r0, r5
 8017730:	8365      	strh	r5, [r4, #26]
 8017732:	bd38      	pop	{r3, r4, r5, pc}

08017734 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017734:	428a      	cmp	r2, r1
 8017736:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801773a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801773c:	d931      	bls.n	80177a2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801773e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017740:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017744:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017748:	19ee      	adds	r6, r5, r7
 801774a:	1a54      	subs	r4, r2, r1
 801774c:	3e01      	subs	r6, #1
 801774e:	fa1f fe84 	uxth.w	lr, r4
 8017752:	b2b4      	uxth	r4, r6
 8017754:	eba4 090e 	sub.w	r9, r4, lr
 8017758:	fa1f f989 	uxth.w	r9, r9
 801775c:	2c09      	cmp	r4, #9
 801775e:	4626      	mov	r6, r4
 8017760:	bf88      	it	hi
 8017762:	f1a4 060a 	subhi.w	r6, r4, #10
 8017766:	f1bc 0f00 	cmp.w	ip, #0
 801776a:	bf08      	it	eq
 801776c:	f04f 0c02 	moveq.w	ip, #2
 8017770:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017774:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017778:	fa1f fc8c 	uxth.w	ip, ip
 801777c:	3c01      	subs	r4, #1
 801777e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017782:	b2a4      	uxth	r4, r4
 8017784:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017788:	454c      	cmp	r4, r9
 801778a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801778e:	d1e5      	bne.n	801775c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017790:	eba5 050e 	sub.w	r5, r5, lr
 8017794:	eb0e 0408 	add.w	r4, lr, r8
 8017798:	8705      	strh	r5, [r0, #56]	; 0x38
 801779a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801779e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80177a2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80177a4:	1a64      	subs	r4, r4, r1
 80177a6:	4439      	add	r1, r7
 80177a8:	b289      	uxth	r1, r1
 80177aa:	2909      	cmp	r1, #9
 80177ac:	bf88      	it	hi
 80177ae:	390a      	subhi	r1, #10
 80177b0:	8704      	strh	r4, [r0, #56]	; 0x38
 80177b2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80177b4:	250a      	movs	r5, #10
 80177b6:	b18a      	cbz	r2, 80177dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80177b8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80177ba:	3a01      	subs	r2, #1
 80177bc:	b292      	uxth	r2, r2
 80177be:	3101      	adds	r1, #1
 80177c0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80177c4:	8701      	strh	r1, [r0, #56]	; 0x38
 80177c6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80177c8:	b901      	cbnz	r1, 80177cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80177ca:	86c5      	strh	r5, [r0, #54]	; 0x36
 80177cc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80177ce:	3901      	subs	r1, #1
 80177d0:	b289      	uxth	r1, r1
 80177d2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80177d4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80177d8:	844c      	strh	r4, [r1, #34]	; 0x22
 80177da:	e7ec      	b.n	80177b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80177dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80177e0:	f7ff bf4b 	b.w	801767a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080177e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80177e4:	b570      	push	{r4, r5, r6, lr}
 80177e6:	2500      	movs	r5, #0
 80177e8:	4295      	cmp	r5, r2
 80177ea:	d011      	beq.n	8017810 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80177ec:	8bc4      	ldrh	r4, [r0, #30]
 80177ee:	f831 6b02 	ldrh.w	r6, [r1], #2
 80177f2:	4414      	add	r4, r2
 80177f4:	3c01      	subs	r4, #1
 80177f6:	1b64      	subs	r4, r4, r5
 80177f8:	b2a4      	uxth	r4, r4
 80177fa:	2c01      	cmp	r4, #1
 80177fc:	bf88      	it	hi
 80177fe:	3c02      	subhi	r4, #2
 8017800:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017804:	8b64      	ldrh	r4, [r4, #26]
 8017806:	42b4      	cmp	r4, r6
 8017808:	d117      	bne.n	801783a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801780a:	3501      	adds	r5, #1
 801780c:	b2ad      	uxth	r5, r5
 801780e:	e7eb      	b.n	80177e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017810:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017814:	2400      	movs	r4, #0
 8017816:	4413      	add	r3, r2
 8017818:	b2a2      	uxth	r2, r4
 801781a:	429a      	cmp	r2, r3
 801781c:	da0f      	bge.n	801783e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801781e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017820:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017824:	4432      	add	r2, r6
 8017826:	b292      	uxth	r2, r2
 8017828:	2a09      	cmp	r2, #9
 801782a:	bf88      	it	hi
 801782c:	3a0a      	subhi	r2, #10
 801782e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017832:	3401      	adds	r4, #1
 8017834:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017836:	42aa      	cmp	r2, r5
 8017838:	d0ee      	beq.n	8017818 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801783a:	2000      	movs	r0, #0
 801783c:	bd70      	pop	{r4, r5, r6, pc}
 801783e:	2001      	movs	r0, #1
 8017840:	e7fc      	b.n	801783c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017842 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017842:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017846:	4605      	mov	r5, r0
 8017848:	4616      	mov	r6, r2
 801784a:	1c8c      	adds	r4, r1, #2
 801784c:	8809      	ldrh	r1, [r1, #0]
 801784e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017852:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017856:	42b3      	cmp	r3, r6
 8017858:	d124      	bne.n	80178a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801785a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801785e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017862:	f001 070f 	and.w	r7, r1, #15
 8017866:	f8cd 8000 	str.w	r8, [sp]
 801786a:	464b      	mov	r3, r9
 801786c:	4652      	mov	r2, sl
 801786e:	4621      	mov	r1, r4
 8017870:	4628      	mov	r0, r5
 8017872:	f7ff ffb7 	bl	80177e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017876:	4683      	mov	fp, r0
 8017878:	b168      	cbz	r0, 8017896 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801787a:	eb0a 0109 	add.w	r1, sl, r9
 801787e:	4441      	add	r1, r8
 8017880:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017884:	463a      	mov	r2, r7
 8017886:	4649      	mov	r1, r9
 8017888:	4628      	mov	r0, r5
 801788a:	f7ff ff53 	bl	8017734 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801788e:	4658      	mov	r0, fp
 8017890:	b003      	add	sp, #12
 8017892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017896:	eb07 010a 	add.w	r1, r7, sl
 801789a:	4449      	add	r1, r9
 801789c:	4441      	add	r1, r8
 801789e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80178a2:	e7d2      	b.n	801784a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80178a4:	f04f 0b00 	mov.w	fp, #0
 80178a8:	e7f1      	b.n	801788e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080178aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80178aa:	b570      	push	{r4, r5, r6, lr}
 80178ac:	8810      	ldrh	r0, [r2, #0]
 80178ae:	4298      	cmp	r0, r3
 80178b0:	d817      	bhi.n	80178e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80178b2:	1e48      	subs	r0, r1, #1
 80178b4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80178b8:	4298      	cmp	r0, r3
 80178ba:	d312      	bcc.n	80178e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80178bc:	2400      	movs	r4, #0
 80178be:	428c      	cmp	r4, r1
 80178c0:	d20f      	bcs.n	80178e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80178c2:	1860      	adds	r0, r4, r1
 80178c4:	1040      	asrs	r0, r0, #1
 80178c6:	0085      	lsls	r5, r0, #2
 80178c8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80178cc:	42b3      	cmp	r3, r6
 80178ce:	d902      	bls.n	80178d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80178d0:	3001      	adds	r0, #1
 80178d2:	b284      	uxth	r4, r0
 80178d4:	e7f3      	b.n	80178be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80178d6:	d201      	bcs.n	80178dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80178d8:	b281      	uxth	r1, r0
 80178da:	e7f0      	b.n	80178be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80178dc:	442a      	add	r2, r5
 80178de:	8850      	ldrh	r0, [r2, #2]
 80178e0:	bd70      	pop	{r4, r5, r6, pc}
 80178e2:	2000      	movs	r0, #0
 80178e4:	e7fc      	b.n	80178e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080178e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80178e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80178ea:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80178ec:	886f      	ldrh	r7, [r5, #2]
 80178ee:	4604      	mov	r4, r0
 80178f0:	087f      	lsrs	r7, r7, #1
 80178f2:	260b      	movs	r6, #11
 80178f4:	3e01      	subs	r6, #1
 80178f6:	d013      	beq.n	8017920 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80178f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80178fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80178fe:	462a      	mov	r2, r5
 8017900:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017904:	4639      	mov	r1, r7
 8017906:	4643      	mov	r3, r8
 8017908:	4620      	mov	r0, r4
 801790a:	f7ff ffce 	bl	80178aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801790e:	b138      	cbz	r0, 8017920 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017910:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017914:	4642      	mov	r2, r8
 8017916:	4620      	mov	r0, r4
 8017918:	f7ff ff93 	bl	8017842 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801791c:	2800      	cmp	r0, #0
 801791e:	d1e9      	bne.n	80178f4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017924 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017924:	b570      	push	{r4, r5, r6, lr}
 8017926:	694a      	ldr	r2, [r1, #20]
 8017928:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801792a:	684b      	ldr	r3, [r1, #4]
 801792c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801792e:	1b54      	subs	r4, r2, r5
 8017930:	f000 8106 	beq.w	8017b40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017934:	1b9b      	subs	r3, r3, r6
 8017936:	d003      	beq.n	8017940 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017938:	4363      	muls	r3, r4
 801793a:	2210      	movs	r2, #16
 801793c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017940:	680c      	ldr	r4, [r1, #0]
 8017942:	698a      	ldr	r2, [r1, #24]
 8017944:	1b65      	subs	r5, r4, r5
 8017946:	f000 80fd 	beq.w	8017b44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801794a:	1b92      	subs	r2, r2, r6
 801794c:	d003      	beq.n	8017956 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801794e:	436a      	muls	r2, r5
 8017950:	2410      	movs	r4, #16
 8017952:	fb92 f2f4 	sdiv	r2, r2, r4
 8017956:	1a9b      	subs	r3, r3, r2
 8017958:	ee07 3a90 	vmov	s15, r3
 801795c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017b80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017960:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017964:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017968:	ee67 7a84 	vmul.f32	s15, s15, s8
 801796c:	460a      	mov	r2, r1
 801796e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017972:	4603      	mov	r3, r0
 8017974:	f100 040c 	add.w	r4, r0, #12
 8017978:	eeb1 6a43 	vneg.f32	s12, s6
 801797c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017980:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017984:	3214      	adds	r2, #20
 8017986:	ece3 6a01 	vstmia	r3!, {s13}
 801798a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801798e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017992:	429c      	cmp	r4, r3
 8017994:	edc3 7a02 	vstr	s15, [r3, #8]
 8017998:	ed52 7a01 	vldr	s15, [r2, #-4]
 801799c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80179a0:	edc3 7a05 	vstr	s15, [r3, #20]
 80179a4:	d1ea      	bne.n	801797c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80179a6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80179a8:	698b      	ldr	r3, [r1, #24]
 80179aa:	edd0 4a02 	vldr	s9, [r0, #8]
 80179ae:	edd0 3a00 	vldr	s7, [r0]
 80179b2:	edd0 6a01 	vldr	s13, [r0, #4]
 80179b6:	ed90 5a05 	vldr	s10, [r0, #20]
 80179ba:	ed90 2a03 	vldr	s4, [r0, #12]
 80179be:	edd0 5a04 	vldr	s11, [r0, #16]
 80179c2:	ed90 1a07 	vldr	s2, [r0, #28]
 80179c6:	edd0 2a06 	vldr	s5, [r0, #24]
 80179ca:	1a9b      	subs	r3, r3, r2
 80179cc:	ee07 3a90 	vmov	s15, r3
 80179d0:	684b      	ldr	r3, [r1, #4]
 80179d2:	1a9b      	subs	r3, r3, r2
 80179d4:	ee07 3a10 	vmov	s14, r3
 80179d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179dc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80179e0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80179e4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80179e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179ec:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80179f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80179f4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80179f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80179fc:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017a00:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017a04:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017a08:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017a0a:	694a      	ldr	r2, [r1, #20]
 8017a0c:	1b13      	subs	r3, r2, r4
 8017a0e:	ee07 3a10 	vmov	s14, r3
 8017a12:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a16:	680b      	ldr	r3, [r1, #0]
 8017a18:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a1c:	1b1b      	subs	r3, r3, r4
 8017a1e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017a22:	ee07 3a10 	vmov	s14, r3
 8017a26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a2a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a2e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017a32:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017a36:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017a3a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a3c:	698b      	ldr	r3, [r1, #24]
 8017a3e:	1a9b      	subs	r3, r3, r2
 8017a40:	ee06 3a90 	vmov	s13, r3
 8017a44:	684b      	ldr	r3, [r1, #4]
 8017a46:	1a9b      	subs	r3, r3, r2
 8017a48:	ee07 3a10 	vmov	s14, r3
 8017a4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017a50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a54:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017a58:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a5c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017a60:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017a64:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017a68:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017a6c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017a6e:	694a      	ldr	r2, [r1, #20]
 8017a70:	1b13      	subs	r3, r2, r4
 8017a72:	ee07 3a10 	vmov	s14, r3
 8017a76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a7a:	680b      	ldr	r3, [r1, #0]
 8017a7c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a80:	1b1b      	subs	r3, r3, r4
 8017a82:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017a86:	ee07 3a10 	vmov	s14, r3
 8017a8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a8e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a92:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017a96:	edd0 5a08 	vldr	s11, [r0, #32]
 8017a9a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017a9e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017aa2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017aa6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017aa8:	698b      	ldr	r3, [r1, #24]
 8017aaa:	1a9b      	subs	r3, r3, r2
 8017aac:	ee07 3a10 	vmov	s14, r3
 8017ab0:	684b      	ldr	r3, [r1, #4]
 8017ab2:	1a9b      	subs	r3, r3, r2
 8017ab4:	ee01 3a90 	vmov	s3, r3
 8017ab8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017abc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017ac0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017ac4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017ac8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017acc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017ad0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017ad4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017ad8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017adc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017ade:	694a      	ldr	r2, [r1, #20]
 8017ae0:	1b13      	subs	r3, r2, r4
 8017ae2:	ee03 3a10 	vmov	s6, r3
 8017ae6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017aea:	680b      	ldr	r3, [r1, #0]
 8017aec:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017af0:	1b1b      	subs	r3, r3, r4
 8017af2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017af6:	ee03 3a10 	vmov	s6, r3
 8017afa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017afe:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017b02:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017b06:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017b0a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017b0e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017b12:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017b16:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b1e:	dd13      	ble.n	8017b48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017b20:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017b24:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017b28:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017b2a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017b2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b36:	dd15      	ble.n	8017b64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017b38:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017b3c:	6403      	str	r3, [r0, #64]	; 0x40
 8017b3e:	bd70      	pop	{r4, r5, r6, pc}
 8017b40:	4623      	mov	r3, r4
 8017b42:	e6fd      	b.n	8017940 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017b44:	462a      	mov	r2, r5
 8017b46:	e706      	b.n	8017956 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017b48:	d502      	bpl.n	8017b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017b4a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017b4e:	e7e9      	b.n	8017b24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017b50:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017b54:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017b58:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017b5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b60:	dade      	bge.n	8017b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017b62:	e7f2      	b.n	8017b4a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017b64:	d502      	bpl.n	8017b6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017b66:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017b6a:	e7e7      	b.n	8017b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017b6c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017b70:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017b74:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017b78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b7c:	dadc      	bge.n	8017b38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017b7e:	e7f2      	b.n	8017b66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017b80:	3d800000 	.word	0x3d800000

08017b84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b88:	2714      	movs	r7, #20
 8017b8a:	435f      	muls	r7, r3
 8017b8c:	eb02 0c07 	add.w	ip, r2, r7
 8017b90:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017b94:	f115 0e0f 	adds.w	lr, r5, #15
 8017b98:	f100 80a2 	bmi.w	8017ce0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017b9c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017ba0:	9c08      	ldr	r4, [sp, #32]
 8017ba2:	f8c0 e014 	str.w	lr, [r0, #20]
 8017ba6:	2614      	movs	r6, #20
 8017ba8:	4366      	muls	r6, r4
 8017baa:	eb02 0806 	add.w	r8, r2, r6
 8017bae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017bb2:	f115 040f 	adds.w	r4, r5, #15
 8017bb6:	f100 809f 	bmi.w	8017cf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017bba:	1124      	asrs	r4, r4, #4
 8017bbc:	eba4 040e 	sub.w	r4, r4, lr
 8017bc0:	6184      	str	r4, [r0, #24]
 8017bc2:	2c00      	cmp	r4, #0
 8017bc4:	f000 808a 	beq.w	8017cdc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017bc8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017bcc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017bd0:	5995      	ldr	r5, [r2, r6]
 8017bd2:	eba4 0809 	sub.w	r8, r4, r9
 8017bd6:	59d4      	ldr	r4, [r2, r7]
 8017bd8:	eba5 0a04 	sub.w	sl, r5, r4
 8017bdc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017be0:	fb0e fe05 	mul.w	lr, lr, r5
 8017be4:	fb0a ee19 	mls	lr, sl, r9, lr
 8017be8:	fb08 e404 	mla	r4, r8, r4, lr
 8017bec:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017bf0:	3c01      	subs	r4, #1
 8017bf2:	19a4      	adds	r4, r4, r6
 8017bf4:	f100 808c 	bmi.w	8017d10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017bf8:	fb94 fef6 	sdiv	lr, r4, r6
 8017bfc:	f8c0 e000 	str.w	lr, [r0]
 8017c00:	fb06 441e 	mls	r4, r6, lr, r4
 8017c04:	6104      	str	r4, [r0, #16]
 8017c06:	2d00      	cmp	r5, #0
 8017c08:	f2c0 8095 	blt.w	8017d36 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017c0c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017c10:	6044      	str	r4, [r0, #4]
 8017c12:	fb06 5514 	mls	r5, r6, r4, r5
 8017c16:	6085      	str	r5, [r0, #8]
 8017c18:	60c6      	str	r6, [r0, #12]
 8017c1a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017c1e:	6945      	ldr	r5, [r0, #20]
 8017c20:	59d2      	ldr	r2, [r2, r7]
 8017c22:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017d58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017c26:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017c2a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017c2e:	ee07 4a10 	vmov	s14, r4
 8017c32:	6804      	ldr	r4, [r0, #0]
 8017c34:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017c38:	ee07 2a90 	vmov	s15, r2
 8017c3c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c44:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017c48:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017c4c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017c50:	edd3 6a00 	vldr	s13, [r3]
 8017c54:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017c58:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017c5c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017c60:	edc0 6a07 	vstr	s13, [r0, #28]
 8017c64:	edd0 6a01 	vldr	s13, [r0, #4]
 8017c68:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017c6c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017c70:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017c74:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017c78:	ed80 6a08 	vstr	s12, [r0, #32]
 8017c7c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017c7e:	6242      	str	r2, [r0, #36]	; 0x24
 8017c80:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017c84:	ed93 6a03 	vldr	s12, [r3, #12]
 8017c88:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017c8c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017c90:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017c94:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017c98:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017c9c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017ca0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017ca4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017ca8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017caa:	6302      	str	r2, [r0, #48]	; 0x30
 8017cac:	ed93 6a06 	vldr	s12, [r3, #24]
 8017cb0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017cb4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017cb8:	eeb0 7a46 	vmov.f32	s14, s12
 8017cbc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017cc0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017cc4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017cc8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017ccc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017cd0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017cd4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017cd8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017cda:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017cdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ce0:	f1c5 0501 	rsb	r5, r5, #1
 8017ce4:	f015 050f 	ands.w	r5, r5, #15
 8017ce8:	bf18      	it	ne
 8017cea:	2501      	movne	r5, #1
 8017cec:	2410      	movs	r4, #16
 8017cee:	fb9e fef4 	sdiv	lr, lr, r4
 8017cf2:	ebae 0e05 	sub.w	lr, lr, r5
 8017cf6:	e753      	b.n	8017ba0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017cf8:	f1c5 0501 	rsb	r5, r5, #1
 8017cfc:	f015 050f 	ands.w	r5, r5, #15
 8017d00:	bf18      	it	ne
 8017d02:	2501      	movne	r5, #1
 8017d04:	f04f 0910 	mov.w	r9, #16
 8017d08:	fb94 f4f9 	sdiv	r4, r4, r9
 8017d0c:	1b64      	subs	r4, r4, r5
 8017d0e:	e755      	b.n	8017bbc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017d10:	4264      	negs	r4, r4
 8017d12:	fb94 fef6 	sdiv	lr, r4, r6
 8017d16:	f1ce 0800 	rsb	r8, lr, #0
 8017d1a:	fb06 441e 	mls	r4, r6, lr, r4
 8017d1e:	f8c0 8000 	str.w	r8, [r0]
 8017d22:	6104      	str	r4, [r0, #16]
 8017d24:	2c00      	cmp	r4, #0
 8017d26:	f43f af6e 	beq.w	8017c06 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017d2a:	ea6f 0e0e 	mvn.w	lr, lr
 8017d2e:	f8c0 e000 	str.w	lr, [r0]
 8017d32:	1b34      	subs	r4, r6, r4
 8017d34:	e766      	b.n	8017c04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017d36:	426d      	negs	r5, r5
 8017d38:	fb95 f4f6 	sdiv	r4, r5, r6
 8017d3c:	f1c4 0e00 	rsb	lr, r4, #0
 8017d40:	fb06 5514 	mls	r5, r6, r4, r5
 8017d44:	f8c0 e004 	str.w	lr, [r0, #4]
 8017d48:	6085      	str	r5, [r0, #8]
 8017d4a:	2d00      	cmp	r5, #0
 8017d4c:	f43f af64 	beq.w	8017c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017d50:	43e4      	mvns	r4, r4
 8017d52:	6044      	str	r4, [r0, #4]
 8017d54:	1b75      	subs	r5, r6, r5
 8017d56:	e75e      	b.n	8017c16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017d58:	3d800000 	.word	0x3d800000

08017d5c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017d5c:	4602      	mov	r2, r0
 8017d5e:	b148      	cbz	r0, 8017d74 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017d60:	2300      	movs	r3, #0
 8017d62:	b298      	uxth	r0, r3
 8017d64:	3301      	adds	r3, #1
 8017d66:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017d6a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017d6e:	2900      	cmp	r1, #0
 8017d70:	d1f7      	bne.n	8017d62 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017d72:	4770      	bx	lr
 8017d74:	4770      	bx	lr

08017d76 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017d76:	b530      	push	{r4, r5, lr}
 8017d78:	4604      	mov	r4, r0
 8017d7a:	b159      	cbz	r1, 8017d94 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017d7c:	b148      	cbz	r0, 8017d92 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017d7e:	2300      	movs	r3, #0
 8017d80:	b298      	uxth	r0, r3
 8017d82:	4282      	cmp	r2, r0
 8017d84:	d905      	bls.n	8017d92 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017d86:	5ccd      	ldrb	r5, [r1, r3]
 8017d88:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017d8c:	3301      	adds	r3, #1
 8017d8e:	2d00      	cmp	r5, #0
 8017d90:	d1f6      	bne.n	8017d80 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017d92:	bd30      	pop	{r4, r5, pc}
 8017d94:	4608      	mov	r0, r1
 8017d96:	e7fc      	b.n	8017d92 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017d98 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017d9a:	b08b      	sub	sp, #44	; 0x2c
 8017d9c:	468c      	mov	ip, r1
 8017d9e:	2100      	movs	r1, #0
 8017da0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017da4:	4604      	mov	r4, r0
 8017da6:	261f      	movs	r6, #31
 8017da8:	af01      	add	r7, sp, #4
 8017daa:	fb94 fef3 	sdiv	lr, r4, r3
 8017dae:	fb03 441e 	mls	r4, r3, lr, r4
 8017db2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017db6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017dba:	b2ec      	uxtb	r4, r5
 8017dbc:	2d09      	cmp	r5, #9
 8017dbe:	bfd4      	ite	le
 8017dc0:	3430      	addle	r4, #48	; 0x30
 8017dc2:	3457      	addgt	r4, #87	; 0x57
 8017dc4:	b2e4      	uxtb	r4, r4
 8017dc6:	55bc      	strb	r4, [r7, r6]
 8017dc8:	4674      	mov	r4, lr
 8017dca:	1e71      	subs	r1, r6, #1
 8017dcc:	b974      	cbnz	r4, 8017dec <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017dce:	2800      	cmp	r0, #0
 8017dd0:	da05      	bge.n	8017dde <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017dd2:	ab0a      	add	r3, sp, #40	; 0x28
 8017dd4:	4419      	add	r1, r3
 8017dd6:	232d      	movs	r3, #45	; 0x2d
 8017dd8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017ddc:	1eb1      	subs	r1, r6, #2
 8017dde:	3101      	adds	r1, #1
 8017de0:	4439      	add	r1, r7
 8017de2:	4660      	mov	r0, ip
 8017de4:	f7ff ffc7 	bl	8017d76 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017de8:	b00b      	add	sp, #44	; 0x2c
 8017dea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017dec:	460e      	mov	r6, r1
 8017dee:	e7dc      	b.n	8017daa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017df0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017df2:	b08b      	sub	sp, #44	; 0x2c
 8017df4:	468c      	mov	ip, r1
 8017df6:	2100      	movs	r1, #0
 8017df8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017dfc:	ae01      	add	r6, sp, #4
 8017dfe:	211f      	movs	r1, #31
 8017e00:	fbb0 f7f3 	udiv	r7, r0, r3
 8017e04:	fb03 0517 	mls	r5, r3, r7, r0
 8017e08:	b2ec      	uxtb	r4, r5
 8017e0a:	2d09      	cmp	r5, #9
 8017e0c:	bfd4      	ite	le
 8017e0e:	3430      	addle	r4, #48	; 0x30
 8017e10:	3457      	addgt	r4, #87	; 0x57
 8017e12:	b2e4      	uxtb	r4, r4
 8017e14:	558c      	strb	r4, [r1, r6]
 8017e16:	4638      	mov	r0, r7
 8017e18:	1e4c      	subs	r4, r1, #1
 8017e1a:	b92f      	cbnz	r7, 8017e28 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017e1c:	4431      	add	r1, r6
 8017e1e:	4660      	mov	r0, ip
 8017e20:	f7ff ffa9 	bl	8017d76 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017e24:	b00b      	add	sp, #44	; 0x2c
 8017e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e28:	4621      	mov	r1, r4
 8017e2a:	e7e9      	b.n	8017e00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017e2c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017e2c:	b410      	push	{r4}
 8017e2e:	b131      	cbz	r1, 8017e3e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017e30:	1e9c      	subs	r4, r3, #2
 8017e32:	2c22      	cmp	r4, #34	; 0x22
 8017e34:	d803      	bhi.n	8017e3e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017e36:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017e3a:	f7ff bfad 	b.w	8017d98 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017e3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017e42:	4770      	bx	lr

08017e44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e48:	4691      	mov	r9, r2
 8017e4a:	b085      	sub	sp, #20
 8017e4c:	6802      	ldr	r2, [r0, #0]
 8017e4e:	9201      	str	r2, [sp, #4]
 8017e50:	4688      	mov	r8, r1
 8017e52:	4683      	mov	fp, r0
 8017e54:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017e58:	9103      	str	r1, [sp, #12]
 8017e5a:	4610      	mov	r0, r2
 8017e5c:	461c      	mov	r4, r3
 8017e5e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017e62:	9302      	str	r3, [sp, #8]
 8017e64:	f7ff ff7a 	bl	8017d5c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017e68:	f1b8 0f00 	cmp.w	r8, #0
 8017e6c:	bf0c      	ite	eq
 8017e6e:	4684      	moveq	ip, r0
 8017e70:	f100 0c01 	addne.w	ip, r0, #1
 8017e74:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017e78:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017e7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017e7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e80:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017e84:	9903      	ldr	r1, [sp, #12]
 8017e86:	fa1f fc8c 	uxth.w	ip, ip
 8017e8a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017e8e:	d041      	beq.n	8017f14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017e90:	d834      	bhi.n	8017efc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017e92:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017e96:	d059      	beq.n	8017f4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017e98:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017e9c:	d03a      	beq.n	8017f14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017e9e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017ea2:	d034      	beq.n	8017f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017ea4:	2400      	movs	r4, #0
 8017ea6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017eaa:	3a01      	subs	r2, #1
 8017eac:	b169      	cbz	r1, 8017eca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017eae:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017eb0:	458c      	cmp	ip, r1
 8017eb2:	da09      	bge.n	8017ec8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017eb4:	eba1 010c 	sub.w	r1, r1, ip
 8017eb8:	b289      	uxth	r1, r1
 8017eba:	b933      	cbnz	r3, 8017eca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017ebc:	2e00      	cmp	r6, #0
 8017ebe:	d051      	beq.n	8017f64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017ec0:	2800      	cmp	r0, #0
 8017ec2:	d04f      	beq.n	8017f64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017ec4:	440c      	add	r4, r1
 8017ec6:	b2a4      	uxth	r4, r4
 8017ec8:	2100      	movs	r1, #0
 8017eca:	682b      	ldr	r3, [r5, #0]
 8017ecc:	4293      	cmp	r3, r2
 8017ece:	da07      	bge.n	8017ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017ed0:	f1b8 0f00 	cmp.w	r8, #0
 8017ed4:	d004      	beq.n	8017ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017ed6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017eda:	682b      	ldr	r3, [r5, #0]
 8017edc:	3301      	adds	r3, #1
 8017ede:	602b      	str	r3, [r5, #0]
 8017ee0:	2730      	movs	r7, #48	; 0x30
 8017ee2:	2c00      	cmp	r4, #0
 8017ee4:	d04e      	beq.n	8017f84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017ee6:	682e      	ldr	r6, [r5, #0]
 8017ee8:	3c01      	subs	r4, #1
 8017eea:	42b2      	cmp	r2, r6
 8017eec:	b2a4      	uxth	r4, r4
 8017eee:	dd49      	ble.n	8017f84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017ef0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017ef4:	682b      	ldr	r3, [r5, #0]
 8017ef6:	3301      	adds	r3, #1
 8017ef8:	602b      	str	r3, [r5, #0]
 8017efa:	e7f2      	b.n	8017ee2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017efc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017f00:	d01d      	beq.n	8017f3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017f02:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017f06:	d002      	beq.n	8017f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017f08:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017f0c:	e7c9      	b.n	8017ea2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017f0e:	4684      	mov	ip, r0
 8017f10:	f04f 0800 	mov.w	r8, #0
 8017f14:	2c00      	cmp	r4, #0
 8017f16:	d0c6      	beq.n	8017ea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f18:	b947      	cbnz	r7, 8017f2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017f1a:	2801      	cmp	r0, #1
 8017f1c:	d106      	bne.n	8017f2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017f1e:	8814      	ldrh	r4, [r2, #0]
 8017f20:	2c30      	cmp	r4, #48	; 0x30
 8017f22:	bf02      	ittt	eq
 8017f24:	3202      	addeq	r2, #2
 8017f26:	f8cb 2000 	streq.w	r2, [fp]
 8017f2a:	4638      	moveq	r0, r7
 8017f2c:	45bc      	cmp	ip, r7
 8017f2e:	da14      	bge.n	8017f5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017f30:	b2bf      	uxth	r7, r7
 8017f32:	eba7 040c 	sub.w	r4, r7, ip
 8017f36:	b2a4      	uxth	r4, r4
 8017f38:	46bc      	mov	ip, r7
 8017f3a:	2600      	movs	r6, #0
 8017f3c:	e7b3      	b.n	8017ea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f3e:	4684      	mov	ip, r0
 8017f40:	b16c      	cbz	r4, 8017f5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017f42:	42b8      	cmp	r0, r7
 8017f44:	dd00      	ble.n	8017f48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017f46:	b2b8      	uxth	r0, r7
 8017f48:	2400      	movs	r4, #0
 8017f4a:	e003      	b.n	8017f54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017f4c:	f04f 0c01 	mov.w	ip, #1
 8017f50:	2400      	movs	r4, #0
 8017f52:	4660      	mov	r0, ip
 8017f54:	4626      	mov	r6, r4
 8017f56:	46a0      	mov	r8, r4
 8017f58:	e7a5      	b.n	8017ea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f5a:	2400      	movs	r4, #0
 8017f5c:	e7ed      	b.n	8017f3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017f5e:	4626      	mov	r6, r4
 8017f60:	46a0      	mov	r8, r4
 8017f62:	e7a0      	b.n	8017ea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f64:	2900      	cmp	r1, #0
 8017f66:	d0b0      	beq.n	8017eca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f68:	2720      	movs	r7, #32
 8017f6a:	682e      	ldr	r6, [r5, #0]
 8017f6c:	2900      	cmp	r1, #0
 8017f6e:	d0ac      	beq.n	8017eca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f70:	3901      	subs	r1, #1
 8017f72:	4296      	cmp	r6, r2
 8017f74:	b289      	uxth	r1, r1
 8017f76:	daa7      	bge.n	8017ec8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017f78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017f7c:	682b      	ldr	r3, [r5, #0]
 8017f7e:	3301      	adds	r3, #1
 8017f80:	602b      	str	r3, [r5, #0]
 8017f82:	e7f2      	b.n	8017f6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017f84:	b188      	cbz	r0, 8017faa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017f86:	682b      	ldr	r3, [r5, #0]
 8017f88:	3801      	subs	r0, #1
 8017f8a:	429a      	cmp	r2, r3
 8017f8c:	b280      	uxth	r0, r0
 8017f8e:	dd0c      	ble.n	8017faa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017f90:	f8db 3000 	ldr.w	r3, [fp]
 8017f94:	1c9c      	adds	r4, r3, #2
 8017f96:	f8cb 4000 	str.w	r4, [fp]
 8017f9a:	881c      	ldrh	r4, [r3, #0]
 8017f9c:	682b      	ldr	r3, [r5, #0]
 8017f9e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017fa2:	682b      	ldr	r3, [r5, #0]
 8017fa4:	3301      	adds	r3, #1
 8017fa6:	602b      	str	r3, [r5, #0]
 8017fa8:	e7ec      	b.n	8017f84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017faa:	2620      	movs	r6, #32
 8017fac:	b151      	cbz	r1, 8017fc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017fae:	6828      	ldr	r0, [r5, #0]
 8017fb0:	3901      	subs	r1, #1
 8017fb2:	4282      	cmp	r2, r0
 8017fb4:	b289      	uxth	r1, r1
 8017fb6:	dd05      	ble.n	8017fc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017fb8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017fbc:	682b      	ldr	r3, [r5, #0]
 8017fbe:	3301      	adds	r3, #1
 8017fc0:	602b      	str	r3, [r5, #0]
 8017fc2:	e7f3      	b.n	8017fac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017fc4:	b005      	add	sp, #20
 8017fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017fca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017fca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017fce:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017fd2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017fd6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017fda:	2400      	movs	r4, #0
 8017fdc:	8014      	strh	r4, [r2, #0]
 8017fde:	701c      	strb	r4, [r3, #0]
 8017fe0:	f888 4000 	strb.w	r4, [r8]
 8017fe4:	f88c 4000 	strb.w	r4, [ip]
 8017fe8:	f88e 4000 	strb.w	r4, [lr]
 8017fec:	703c      	strb	r4, [r7, #0]
 8017fee:	6804      	ldr	r4, [r0, #0]
 8017ff0:	b1a4      	cbz	r4, 801801c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017ff2:	8824      	ldrh	r4, [r4, #0]
 8017ff4:	f04f 0901 	mov.w	r9, #1
 8017ff8:	b314      	cbz	r4, 8018040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017ffa:	2c2b      	cmp	r4, #43	; 0x2b
 8017ffc:	d001      	beq.n	8018002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017ffe:	2c20      	cmp	r4, #32
 8018000:	d110      	bne.n	8018024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018002:	8014      	strh	r4, [r2, #0]
 8018004:	6804      	ldr	r4, [r0, #0]
 8018006:	b10c      	cbz	r4, 801800c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018008:	3402      	adds	r4, #2
 801800a:	6004      	str	r4, [r0, #0]
 801800c:	680c      	ldr	r4, [r1, #0]
 801800e:	b10c      	cbz	r4, 8018014 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018010:	3401      	adds	r4, #1
 8018012:	600c      	str	r4, [r1, #0]
 8018014:	6804      	ldr	r4, [r0, #0]
 8018016:	b17c      	cbz	r4, 8018038 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018018:	8824      	ldrh	r4, [r4, #0]
 801801a:	e7ed      	b.n	8017ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801801c:	680c      	ldr	r4, [r1, #0]
 801801e:	b17c      	cbz	r4, 8018040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018020:	7824      	ldrb	r4, [r4, #0]
 8018022:	e7e7      	b.n	8017ff4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018024:	2c2d      	cmp	r4, #45	; 0x2d
 8018026:	d102      	bne.n	801802e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018028:	f883 9000 	strb.w	r9, [r3]
 801802c:	e7ea      	b.n	8018004 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801802e:	2c23      	cmp	r4, #35	; 0x23
 8018030:	d107      	bne.n	8018042 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018032:	f888 9000 	strb.w	r9, [r8]
 8018036:	e7e5      	b.n	8018004 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018038:	680c      	ldr	r4, [r1, #0]
 801803a:	b10c      	cbz	r4, 8018040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801803c:	7824      	ldrb	r4, [r4, #0]
 801803e:	e7db      	b.n	8017ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018040:	2400      	movs	r4, #0
 8018042:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018046:	2b09      	cmp	r3, #9
 8018048:	d901      	bls.n	801804e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801804a:	2c2a      	cmp	r4, #42	; 0x2a
 801804c:	d122      	bne.n	8018094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801804e:	2301      	movs	r3, #1
 8018050:	2c30      	cmp	r4, #48	; 0x30
 8018052:	f88e 3000 	strb.w	r3, [lr]
 8018056:	d10d      	bne.n	8018074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018058:	f88c 3000 	strb.w	r3, [ip]
 801805c:	6803      	ldr	r3, [r0, #0]
 801805e:	b10b      	cbz	r3, 8018064 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018060:	3302      	adds	r3, #2
 8018062:	6003      	str	r3, [r0, #0]
 8018064:	680b      	ldr	r3, [r1, #0]
 8018066:	b10b      	cbz	r3, 801806c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018068:	3301      	adds	r3, #1
 801806a:	600b      	str	r3, [r1, #0]
 801806c:	6803      	ldr	r3, [r0, #0]
 801806e:	2b00      	cmp	r3, #0
 8018070:	d02f      	beq.n	80180d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018072:	881c      	ldrh	r4, [r3, #0]
 8018074:	2c2a      	cmp	r4, #42	; 0x2a
 8018076:	d135      	bne.n	80180e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018078:	f04f 33ff 	mov.w	r3, #4294967295
 801807c:	6033      	str	r3, [r6, #0]
 801807e:	6803      	ldr	r3, [r0, #0]
 8018080:	b10b      	cbz	r3, 8018086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018082:	3302      	adds	r3, #2
 8018084:	6003      	str	r3, [r0, #0]
 8018086:	680b      	ldr	r3, [r1, #0]
 8018088:	b10b      	cbz	r3, 801808e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801808a:	3301      	adds	r3, #1
 801808c:	600b      	str	r3, [r1, #0]
 801808e:	6803      	ldr	r3, [r0, #0]
 8018090:	b31b      	cbz	r3, 80180da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018092:	881c      	ldrh	r4, [r3, #0]
 8018094:	2c2e      	cmp	r4, #46	; 0x2e
 8018096:	d11a      	bne.n	80180ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018098:	2301      	movs	r3, #1
 801809a:	703b      	strb	r3, [r7, #0]
 801809c:	6803      	ldr	r3, [r0, #0]
 801809e:	b10b      	cbz	r3, 80180a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80180a0:	3302      	adds	r3, #2
 80180a2:	6003      	str	r3, [r0, #0]
 80180a4:	680b      	ldr	r3, [r1, #0]
 80180a6:	b10b      	cbz	r3, 80180ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80180a8:	3301      	adds	r3, #1
 80180aa:	600b      	str	r3, [r1, #0]
 80180ac:	6803      	ldr	r3, [r0, #0]
 80180ae:	2b00      	cmp	r3, #0
 80180b0:	d036      	beq.n	8018120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80180b2:	881b      	ldrh	r3, [r3, #0]
 80180b4:	2b2a      	cmp	r3, #42	; 0x2a
 80180b6:	d137      	bne.n	8018128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80180b8:	f04f 33ff 	mov.w	r3, #4294967295
 80180bc:	602b      	str	r3, [r5, #0]
 80180be:	6803      	ldr	r3, [r0, #0]
 80180c0:	b10b      	cbz	r3, 80180c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80180c2:	3302      	adds	r3, #2
 80180c4:	6003      	str	r3, [r0, #0]
 80180c6:	680b      	ldr	r3, [r1, #0]
 80180c8:	b10b      	cbz	r3, 80180ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80180ca:	3301      	adds	r3, #1
 80180cc:	600b      	str	r3, [r1, #0]
 80180ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80180d2:	680c      	ldr	r4, [r1, #0]
 80180d4:	b134      	cbz	r4, 80180e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80180d6:	7824      	ldrb	r4, [r4, #0]
 80180d8:	e7cc      	b.n	8018074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80180da:	680b      	ldr	r3, [r1, #0]
 80180dc:	2b00      	cmp	r3, #0
 80180de:	d0f6      	beq.n	80180ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80180e0:	781c      	ldrb	r4, [r3, #0]
 80180e2:	e7d7      	b.n	8018094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80180e4:	2300      	movs	r3, #0
 80180e6:	6033      	str	r3, [r6, #0]
 80180e8:	220a      	movs	r2, #10
 80180ea:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80180ee:	fa1f f38c 	uxth.w	r3, ip
 80180f2:	2b09      	cmp	r3, #9
 80180f4:	d8ce      	bhi.n	8018094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80180f6:	6833      	ldr	r3, [r6, #0]
 80180f8:	fb02 c303 	mla	r3, r2, r3, ip
 80180fc:	6033      	str	r3, [r6, #0]
 80180fe:	6803      	ldr	r3, [r0, #0]
 8018100:	b10b      	cbz	r3, 8018106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018102:	3302      	adds	r3, #2
 8018104:	6003      	str	r3, [r0, #0]
 8018106:	680b      	ldr	r3, [r1, #0]
 8018108:	b10b      	cbz	r3, 801810e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801810a:	3301      	adds	r3, #1
 801810c:	600b      	str	r3, [r1, #0]
 801810e:	6803      	ldr	r3, [r0, #0]
 8018110:	b10b      	cbz	r3, 8018116 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018112:	881c      	ldrh	r4, [r3, #0]
 8018114:	e7e9      	b.n	80180ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018116:	680c      	ldr	r4, [r1, #0]
 8018118:	2c00      	cmp	r4, #0
 801811a:	d0e6      	beq.n	80180ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801811c:	7824      	ldrb	r4, [r4, #0]
 801811e:	e7e4      	b.n	80180ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018120:	680b      	ldr	r3, [r1, #0]
 8018122:	b10b      	cbz	r3, 8018128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018124:	781b      	ldrb	r3, [r3, #0]
 8018126:	e7c5      	b.n	80180b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018128:	2200      	movs	r2, #0
 801812a:	602a      	str	r2, [r5, #0]
 801812c:	240a      	movs	r4, #10
 801812e:	3b30      	subs	r3, #48	; 0x30
 8018130:	b29e      	uxth	r6, r3
 8018132:	2e09      	cmp	r6, #9
 8018134:	682a      	ldr	r2, [r5, #0]
 8018136:	d813      	bhi.n	8018160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018138:	fb04 3302 	mla	r3, r4, r2, r3
 801813c:	602b      	str	r3, [r5, #0]
 801813e:	6803      	ldr	r3, [r0, #0]
 8018140:	b10b      	cbz	r3, 8018146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018142:	3302      	adds	r3, #2
 8018144:	6003      	str	r3, [r0, #0]
 8018146:	680b      	ldr	r3, [r1, #0]
 8018148:	b10b      	cbz	r3, 801814e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801814a:	3301      	adds	r3, #1
 801814c:	600b      	str	r3, [r1, #0]
 801814e:	6803      	ldr	r3, [r0, #0]
 8018150:	b10b      	cbz	r3, 8018156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018152:	881b      	ldrh	r3, [r3, #0]
 8018154:	e7eb      	b.n	801812e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018156:	680b      	ldr	r3, [r1, #0]
 8018158:	2b00      	cmp	r3, #0
 801815a:	d0e8      	beq.n	801812e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801815c:	781b      	ldrb	r3, [r3, #0]
 801815e:	e7e6      	b.n	801812e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018160:	2a06      	cmp	r2, #6
 8018162:	bfa8      	it	ge
 8018164:	2206      	movge	r2, #6
 8018166:	602a      	str	r2, [r5, #0]
 8018168:	e7b1      	b.n	80180ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801816a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801816a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801816e:	b0a3      	sub	sp, #140	; 0x8c
 8018170:	2600      	movs	r6, #0
 8018172:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018176:	4607      	mov	r7, r0
 8018178:	4688      	mov	r8, r1
 801817a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801817e:	4631      	mov	r1, r6
 8018180:	2242      	movs	r2, #66	; 0x42
 8018182:	4648      	mov	r0, r9
 8018184:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018186:	960d      	str	r6, [sp, #52]	; 0x34
 8018188:	f012 f881 	bl	802a28e <memset>
 801818c:	b15f      	cbz	r7, 80181a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801818e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018192:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018196:	b152      	cbz	r2, 80181ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018198:	8812      	ldrh	r2, [r2, #0]
 801819a:	b10a      	cbz	r2, 80181a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801819c:	459a      	cmp	sl, r3
 801819e:	dc2e      	bgt.n	80181fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80181a0:	2200      	movs	r2, #0
 80181a2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80181a6:	4638      	mov	r0, r7
 80181a8:	b023      	add	sp, #140	; 0x8c
 80181aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181ae:	9a08      	ldr	r2, [sp, #32]
 80181b0:	2a00      	cmp	r2, #0
 80181b2:	d0f5      	beq.n	80181a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80181b4:	7812      	ldrb	r2, [r2, #0]
 80181b6:	e7f0      	b.n	801819a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80181b8:	2d00      	cmp	r5, #0
 80181ba:	d0ea      	beq.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80181bc:	782a      	ldrb	r2, [r5, #0]
 80181be:	b142      	cbz	r2, 80181d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80181c0:	2a25      	cmp	r2, #37	; 0x25
 80181c2:	d001      	beq.n	80181c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80181c4:	459a      	cmp	sl, r3
 80181c6:	dc08      	bgt.n	80181da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80181c8:	f1bb 0f00 	cmp.w	fp, #0
 80181cc:	d121      	bne.n	8018212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80181ce:	2d00      	cmp	r5, #0
 80181d0:	d0df      	beq.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80181d2:	782a      	ldrb	r2, [r5, #0]
 80181d4:	f04f 0b00 	mov.w	fp, #0
 80181d8:	e01d      	b.n	8018216 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80181da:	f1bb 0f00 	cmp.w	fp, #0
 80181de:	d078      	beq.n	80182d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80181e0:	f8bb 2000 	ldrh.w	r2, [fp]
 80181e4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80181e8:	f1bb 0f00 	cmp.w	fp, #0
 80181ec:	d002      	beq.n	80181f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80181ee:	f10b 0202 	add.w	r2, fp, #2
 80181f2:	9209      	str	r2, [sp, #36]	; 0x24
 80181f4:	b10d      	cbz	r5, 80181fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80181f6:	3501      	adds	r5, #1
 80181f8:	9508      	str	r5, [sp, #32]
 80181fa:	3301      	adds	r3, #1
 80181fc:	930d      	str	r3, [sp, #52]	; 0x34
 80181fe:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018202:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018204:	f1bb 0f00 	cmp.w	fp, #0
 8018208:	d0d6      	beq.n	80181b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801820a:	f8bb 2000 	ldrh.w	r2, [fp]
 801820e:	2a00      	cmp	r2, #0
 8018210:	d1d6      	bne.n	80181c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018212:	f8bb 2000 	ldrh.w	r2, [fp]
 8018216:	2a00      	cmp	r2, #0
 8018218:	d0bb      	beq.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801821a:	459a      	cmp	sl, r3
 801821c:	ddb9      	ble.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801821e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018222:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018226:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801822a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801822e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018232:	960e      	str	r6, [sp, #56]	; 0x38
 8018234:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018238:	960f      	str	r6, [sp, #60]	; 0x3c
 801823a:	f1bb 0f00 	cmp.w	fp, #0
 801823e:	d002      	beq.n	8018246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018240:	f10b 0302 	add.w	r3, fp, #2
 8018244:	9309      	str	r3, [sp, #36]	; 0x24
 8018246:	b10d      	cbz	r5, 801824c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018248:	1c6b      	adds	r3, r5, #1
 801824a:	9308      	str	r3, [sp, #32]
 801824c:	ab0f      	add	r3, sp, #60	; 0x3c
 801824e:	9305      	str	r3, [sp, #20]
 8018250:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018254:	9304      	str	r3, [sp, #16]
 8018256:	ab0e      	add	r3, sp, #56	; 0x38
 8018258:	9303      	str	r3, [sp, #12]
 801825a:	ab0c      	add	r3, sp, #48	; 0x30
 801825c:	9302      	str	r3, [sp, #8]
 801825e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018262:	9301      	str	r3, [sp, #4]
 8018264:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018268:	9300      	str	r3, [sp, #0]
 801826a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801826e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018272:	a908      	add	r1, sp, #32
 8018274:	a809      	add	r0, sp, #36	; 0x24
 8018276:	f7ff fea8 	bl	8017fca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801827a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801827c:	2b00      	cmp	r3, #0
 801827e:	bfbe      	ittt	lt
 8018280:	6823      	ldrlt	r3, [r4, #0]
 8018282:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018286:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018288:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801828a:	bfb8      	it	lt
 801828c:	3404      	addlt	r4, #4
 801828e:	2b00      	cmp	r3, #0
 8018290:	bfb8      	it	lt
 8018292:	6823      	ldrlt	r3, [r4, #0]
 8018294:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018298:	bfbe      	ittt	lt
 801829a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801829e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80182a0:	3404      	addlt	r4, #4
 80182a2:	b1d9      	cbz	r1, 80182dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80182a4:	880b      	ldrh	r3, [r1, #0]
 80182a6:	2b69      	cmp	r3, #105	; 0x69
 80182a8:	d01f      	beq.n	80182ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80182aa:	d82f      	bhi.n	801830c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80182ac:	2b58      	cmp	r3, #88	; 0x58
 80182ae:	d01c      	beq.n	80182ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80182b0:	d818      	bhi.n	80182e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80182b2:	2b25      	cmp	r3, #37	; 0x25
 80182b4:	d034      	beq.n	8018320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80182b6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80182ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182bc:	f1bb 0f00 	cmp.w	fp, #0
 80182c0:	f000 80b8 	beq.w	8018434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80182c4:	f8bb 5000 	ldrh.w	r5, [fp]
 80182c8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80182cc:	3301      	adds	r3, #1
 80182ce:	930d      	str	r3, [sp, #52]	; 0x34
 80182d0:	e029      	b.n	8018326 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80182d2:	b10d      	cbz	r5, 80182d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80182d4:	782a      	ldrb	r2, [r5, #0]
 80182d6:	e785      	b.n	80181e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80182d8:	462a      	mov	r2, r5
 80182da:	e783      	b.n	80181e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80182dc:	2a00      	cmp	r2, #0
 80182de:	d0ea      	beq.n	80182b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80182e0:	7813      	ldrb	r3, [r2, #0]
 80182e2:	e7e0      	b.n	80182a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80182e4:	3b63      	subs	r3, #99	; 0x63
 80182e6:	2b01      	cmp	r3, #1
 80182e8:	d8e5      	bhi.n	80182b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80182ea:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80182ee:	b329      	cbz	r1, 801833c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80182f0:	880b      	ldrh	r3, [r1, #0]
 80182f2:	2b69      	cmp	r3, #105	; 0x69
 80182f4:	d063      	beq.n	80183be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80182f6:	d825      	bhi.n	8018344 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80182f8:	2b63      	cmp	r3, #99	; 0x63
 80182fa:	d038      	beq.n	801836e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80182fc:	2b64      	cmp	r3, #100	; 0x64
 80182fe:	d05e      	beq.n	80183be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018300:	2b58      	cmp	r3, #88	; 0x58
 8018302:	d07b      	beq.n	80183fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018304:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018308:	4625      	mov	r5, r4
 801830a:	e036      	b.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801830c:	2b73      	cmp	r3, #115	; 0x73
 801830e:	d0ec      	beq.n	80182ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018310:	d802      	bhi.n	8018318 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018312:	2b6f      	cmp	r3, #111	; 0x6f
 8018314:	d1cf      	bne.n	80182b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018316:	e7e8      	b.n	80182ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018318:	2b75      	cmp	r3, #117	; 0x75
 801831a:	d0e6      	beq.n	80182ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801831c:	2b78      	cmp	r3, #120	; 0x78
 801831e:	e7f9      	b.n	8018314 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018320:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018322:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018328:	b10b      	cbz	r3, 801832e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801832a:	3302      	adds	r3, #2
 801832c:	9309      	str	r3, [sp, #36]	; 0x24
 801832e:	9b08      	ldr	r3, [sp, #32]
 8018330:	2b00      	cmp	r3, #0
 8018332:	f43f af2e 	beq.w	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018336:	3301      	adds	r3, #1
 8018338:	9308      	str	r3, [sp, #32]
 801833a:	e72a      	b.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801833c:	2a00      	cmp	r2, #0
 801833e:	d0e1      	beq.n	8018304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018340:	7813      	ldrb	r3, [r2, #0]
 8018342:	e7d6      	b.n	80182f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018344:	2b73      	cmp	r3, #115	; 0x73
 8018346:	d036      	beq.n	80183b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018348:	d807      	bhi.n	801835a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801834a:	2b6f      	cmp	r3, #111	; 0x6f
 801834c:	d1da      	bne.n	8018304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801834e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018350:	1d25      	adds	r5, r4, #4
 8018352:	eba8 0202 	sub.w	r2, r8, r2
 8018356:	2308      	movs	r3, #8
 8018358:	e04a      	b.n	80183f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801835a:	2b75      	cmp	r3, #117	; 0x75
 801835c:	d043      	beq.n	80183e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801835e:	2b78      	cmp	r3, #120	; 0x78
 8018360:	d1d0      	bne.n	8018304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018362:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018364:	1d25      	adds	r5, r4, #4
 8018366:	eba8 0202 	sub.w	r2, r8, r2
 801836a:	2310      	movs	r3, #16
 801836c:	e040      	b.n	80183f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801836e:	6823      	ldr	r3, [r4, #0]
 8018370:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018374:	1d25      	adds	r5, r4, #4
 8018376:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801837a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801837c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018380:	2b00      	cmp	r3, #0
 8018382:	d052      	beq.n	801842a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018384:	881a      	ldrh	r2, [r3, #0]
 8018386:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801838a:	a80d      	add	r0, sp, #52	; 0x34
 801838c:	9005      	str	r0, [sp, #20]
 801838e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018392:	9004      	str	r0, [sp, #16]
 8018394:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018396:	9003      	str	r0, [sp, #12]
 8018398:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801839c:	9002      	str	r0, [sp, #8]
 801839e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80183a0:	9001      	str	r0, [sp, #4]
 80183a2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80183a6:	9000      	str	r0, [sp, #0]
 80183a8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80183ac:	a810      	add	r0, sp, #64	; 0x40
 80183ae:	f7ff fd49 	bl	8017e44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80183b2:	462c      	mov	r4, r5
 80183b4:	e7b7      	b.n	8018326 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80183b6:	6823      	ldr	r3, [r4, #0]
 80183b8:	1d25      	adds	r5, r4, #4
 80183ba:	9310      	str	r3, [sp, #64]	; 0x40
 80183bc:	e7dd      	b.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80183be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183c0:	6820      	ldr	r0, [r4, #0]
 80183c2:	eba8 0202 	sub.w	r2, r8, r2
 80183c6:	230a      	movs	r3, #10
 80183c8:	b292      	uxth	r2, r2
 80183ca:	4649      	mov	r1, r9
 80183cc:	f7ff fce4 	bl	8017d98 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80183d0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80183d4:	2b2d      	cmp	r3, #45	; 0x2d
 80183d6:	f104 0504 	add.w	r5, r4, #4
 80183da:	d1ce      	bne.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80183dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80183e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80183e2:	3302      	adds	r3, #2
 80183e4:	e7e9      	b.n	80183ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80183e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183e8:	1d25      	adds	r5, r4, #4
 80183ea:	eba8 0202 	sub.w	r2, r8, r2
 80183ee:	230a      	movs	r3, #10
 80183f0:	b292      	uxth	r2, r2
 80183f2:	4649      	mov	r1, r9
 80183f4:	6820      	ldr	r0, [r4, #0]
 80183f6:	f7ff fcfb 	bl	8017df0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80183fa:	e7be      	b.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80183fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183fe:	6820      	ldr	r0, [r4, #0]
 8018400:	eba8 0202 	sub.w	r2, r8, r2
 8018404:	b292      	uxth	r2, r2
 8018406:	2310      	movs	r3, #16
 8018408:	4649      	mov	r1, r9
 801840a:	f7ff fcf1 	bl	8017df0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801840e:	1d25      	adds	r5, r4, #4
 8018410:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018414:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018418:	2b00      	cmp	r3, #0
 801841a:	d0ae      	beq.n	801837a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801841c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018420:	2919      	cmp	r1, #25
 8018422:	d8f7      	bhi.n	8018414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018424:	3b20      	subs	r3, #32
 8018426:	8013      	strh	r3, [r2, #0]
 8018428:	e7f4      	b.n	8018414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801842a:	9a08      	ldr	r2, [sp, #32]
 801842c:	2a00      	cmp	r2, #0
 801842e:	d0aa      	beq.n	8018386 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018430:	7812      	ldrb	r2, [r2, #0]
 8018432:	e7a8      	b.n	8018386 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018434:	2d00      	cmp	r5, #0
 8018436:	f43f af47 	beq.w	80182c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801843a:	782d      	ldrb	r5, [r5, #0]
 801843c:	e744      	b.n	80182c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801843e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801843e:	b507      	push	{r0, r1, r2, lr}
 8018440:	9300      	str	r3, [sp, #0]
 8018442:	4613      	mov	r3, r2
 8018444:	2200      	movs	r2, #0
 8018446:	f7ff fe90 	bl	801816a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801844a:	b003      	add	sp, #12
 801844c:	f85d fb04 	ldr.w	pc, [sp], #4

08018450 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018450:	b40c      	push	{r2, r3}
 8018452:	b507      	push	{r0, r1, r2, lr}
 8018454:	ab04      	add	r3, sp, #16
 8018456:	f853 2b04 	ldr.w	r2, [r3], #4
 801845a:	9301      	str	r3, [sp, #4]
 801845c:	f7ff ffef 	bl	801843e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018460:	b003      	add	sp, #12
 8018462:	f85d eb04 	ldr.w	lr, [sp], #4
 8018466:	b002      	add	sp, #8
 8018468:	4770      	bx	lr
	...

0801846c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801846c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018470:	b0c5      	sub	sp, #276	; 0x114
 8018472:	2400      	movs	r4, #0
 8018474:	af11      	add	r7, sp, #68	; 0x44
 8018476:	4606      	mov	r6, r0
 8018478:	468a      	mov	sl, r1
 801847a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801847e:	4621      	mov	r1, r4
 8018480:	22c8      	movs	r2, #200	; 0xc8
 8018482:	4638      	mov	r0, r7
 8018484:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018488:	940d      	str	r4, [sp, #52]	; 0x34
 801848a:	f011 ff00 	bl	802a28e <memset>
 801848e:	b16e      	cbz	r6, 80184ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018490:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018734 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018494:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018496:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018498:	b162      	cbz	r2, 80184b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801849a:	8812      	ldrh	r2, [r2, #0]
 801849c:	b11a      	cbz	r2, 80184a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801849e:	f10a 31ff 	add.w	r1, sl, #4294967295
 80184a2:	4299      	cmp	r1, r3
 80184a4:	dc2e      	bgt.n	8018504 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80184a6:	2200      	movs	r2, #0
 80184a8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80184ac:	4630      	mov	r0, r6
 80184ae:	b045      	add	sp, #276	; 0x114
 80184b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184b4:	9a08      	ldr	r2, [sp, #32]
 80184b6:	2a00      	cmp	r2, #0
 80184b8:	d0f5      	beq.n	80184a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80184ba:	7812      	ldrb	r2, [r2, #0]
 80184bc:	e7ee      	b.n	801849c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80184be:	2d00      	cmp	r5, #0
 80184c0:	d0e8      	beq.n	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80184c2:	782a      	ldrb	r2, [r5, #0]
 80184c4:	b142      	cbz	r2, 80184d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80184c6:	2a25      	cmp	r2, #37	; 0x25
 80184c8:	d001      	beq.n	80184ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80184ca:	4299      	cmp	r1, r3
 80184cc:	dc08      	bgt.n	80184e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80184ce:	f1b8 0f00 	cmp.w	r8, #0
 80184d2:	d121      	bne.n	8018518 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80184d4:	2d00      	cmp	r5, #0
 80184d6:	d0dd      	beq.n	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80184d8:	782a      	ldrb	r2, [r5, #0]
 80184da:	f04f 0800 	mov.w	r8, #0
 80184de:	e01d      	b.n	801851c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80184e0:	f1b8 0f00 	cmp.w	r8, #0
 80184e4:	d07f      	beq.n	80185e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80184e6:	f8b8 2000 	ldrh.w	r2, [r8]
 80184ea:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80184ee:	f1b8 0f00 	cmp.w	r8, #0
 80184f2:	d002      	beq.n	80184fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80184f4:	f108 0202 	add.w	r2, r8, #2
 80184f8:	9209      	str	r2, [sp, #36]	; 0x24
 80184fa:	b10d      	cbz	r5, 8018500 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80184fc:	3501      	adds	r5, #1
 80184fe:	9508      	str	r5, [sp, #32]
 8018500:	3301      	adds	r3, #1
 8018502:	930d      	str	r3, [sp, #52]	; 0x34
 8018504:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018508:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801850a:	f1b8 0f00 	cmp.w	r8, #0
 801850e:	d0d6      	beq.n	80184be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018510:	f8b8 2000 	ldrh.w	r2, [r8]
 8018514:	2a00      	cmp	r2, #0
 8018516:	d1d6      	bne.n	80184c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018518:	f8b8 2000 	ldrh.w	r2, [r8]
 801851c:	2a00      	cmp	r2, #0
 801851e:	d0b9      	beq.n	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018520:	4299      	cmp	r1, r3
 8018522:	ddb7      	ble.n	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018524:	2300      	movs	r3, #0
 8018526:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801852a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801852e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018532:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018536:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801853a:	930e      	str	r3, [sp, #56]	; 0x38
 801853c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018540:	930f      	str	r3, [sp, #60]	; 0x3c
 8018542:	f1b8 0f00 	cmp.w	r8, #0
 8018546:	d002      	beq.n	801854e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018548:	f108 0302 	add.w	r3, r8, #2
 801854c:	9309      	str	r3, [sp, #36]	; 0x24
 801854e:	b10d      	cbz	r5, 8018554 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018550:	1c6b      	adds	r3, r5, #1
 8018552:	9308      	str	r3, [sp, #32]
 8018554:	ab0f      	add	r3, sp, #60	; 0x3c
 8018556:	9305      	str	r3, [sp, #20]
 8018558:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801855c:	9304      	str	r3, [sp, #16]
 801855e:	ab0e      	add	r3, sp, #56	; 0x38
 8018560:	9303      	str	r3, [sp, #12]
 8018562:	ab0c      	add	r3, sp, #48	; 0x30
 8018564:	9302      	str	r3, [sp, #8]
 8018566:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801856a:	9301      	str	r3, [sp, #4]
 801856c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018570:	9300      	str	r3, [sp, #0]
 8018572:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018576:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801857a:	a908      	add	r1, sp, #32
 801857c:	a809      	add	r0, sp, #36	; 0x24
 801857e:	f7ff fd24 	bl	8017fca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018582:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018584:	2b00      	cmp	r3, #0
 8018586:	da0b      	bge.n	80185a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018588:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801858c:	edd3 7a00 	vldr	s15, [r3]
 8018590:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018594:	3401      	adds	r4, #1
 8018596:	ee17 3a90 	vmov	r3, s15
 801859a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801859e:	930e      	str	r3, [sp, #56]	; 0x38
 80185a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185a2:	2b00      	cmp	r3, #0
 80185a4:	da0b      	bge.n	80185be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80185a6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80185aa:	edd3 7a00 	vldr	s15, [r3]
 80185ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80185b2:	3401      	adds	r4, #1
 80185b4:	ee17 3a90 	vmov	r3, s15
 80185b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80185be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185c0:	b1b3      	cbz	r3, 80185f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80185c2:	881a      	ldrh	r2, [r3, #0]
 80185c4:	2a25      	cmp	r2, #37	; 0x25
 80185c6:	d018      	beq.n	80185fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80185c8:	2a66      	cmp	r2, #102	; 0x66
 80185ca:	d01c      	beq.n	8018606 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80185cc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80185d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185d2:	f1b8 0f00 	cmp.w	r8, #0
 80185d6:	f000 8121 	beq.w	801881c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80185da:	f8b8 5000 	ldrh.w	r5, [r8]
 80185de:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80185e2:	3301      	adds	r3, #1
 80185e4:	e00d      	b.n	8018602 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80185e6:	b10d      	cbz	r5, 80185ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80185e8:	782a      	ldrb	r2, [r5, #0]
 80185ea:	e77e      	b.n	80184ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80185ec:	462a      	mov	r2, r5
 80185ee:	e77c      	b.n	80184ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80185f0:	9b08      	ldr	r3, [sp, #32]
 80185f2:	2b00      	cmp	r3, #0
 80185f4:	d0ea      	beq.n	80185cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80185f6:	781a      	ldrb	r2, [r3, #0]
 80185f8:	e7e4      	b.n	80185c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80185fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185fc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018600:	3302      	adds	r3, #2
 8018602:	930d      	str	r3, [sp, #52]	; 0x34
 8018604:	e041      	b.n	801868a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8018606:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801860a:	edd3 7a00 	vldr	s15, [r3]
 801860e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018612:	9710      	str	r7, [sp, #64]	; 0x40
 8018614:	3401      	adds	r4, #1
 8018616:	b923      	cbnz	r3, 8018622 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018618:	2301      	movs	r3, #1
 801861a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801861e:	2306      	movs	r3, #6
 8018620:	930f      	str	r3, [sp, #60]	; 0x3c
 8018622:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801862a:	bf48      	it	mi
 801862c:	eef1 7a67 	vnegmi.f32	s15, s15
 8018630:	eeb0 7ae7 	vabs.f32	s14, s15
 8018634:	bf48      	it	mi
 8018636:	232d      	movmi	r3, #45	; 0x2d
 8018638:	eeb4 7a45 	vcmp.f32	s14, s10
 801863c:	bf48      	it	mi
 801863e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018646:	dd2b      	ble.n	80186a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018648:	4b3b      	ldr	r3, [pc, #236]	; (8018738 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801864a:	9311      	str	r3, [sp, #68]	; 0x44
 801864c:	2366      	movs	r3, #102	; 0x66
 801864e:	9312      	str	r3, [sp, #72]	; 0x48
 8018650:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018652:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018656:	2b00      	cmp	r3, #0
 8018658:	f000 80da 	beq.w	8018810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801865c:	881a      	ldrh	r2, [r3, #0]
 801865e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018662:	a80d      	add	r0, sp, #52	; 0x34
 8018664:	9005      	str	r0, [sp, #20]
 8018666:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801866a:	9004      	str	r0, [sp, #16]
 801866c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801866e:	9003      	str	r0, [sp, #12]
 8018670:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018674:	9002      	str	r0, [sp, #8]
 8018676:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018678:	9001      	str	r0, [sp, #4]
 801867a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801867e:	9000      	str	r0, [sp, #0]
 8018680:	e9cd a606 	strd	sl, r6, [sp, #24]
 8018684:	a810      	add	r0, sp, #64	; 0x40
 8018686:	f7ff fbdd 	bl	8017e44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801868a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801868c:	b10b      	cbz	r3, 8018692 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801868e:	3302      	adds	r3, #2
 8018690:	9309      	str	r3, [sp, #36]	; 0x24
 8018692:	9b08      	ldr	r3, [sp, #32]
 8018694:	2b00      	cmp	r3, #0
 8018696:	f43f aefd 	beq.w	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801869a:	3301      	adds	r3, #1
 801869c:	9308      	str	r3, [sp, #32]
 801869e:	e6f9      	b.n	8018494 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80186a0:	eef4 7a67 	vcmp.f32	s15, s15
 80186a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186a8:	d63a      	bvs.n	8018720 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80186aa:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80186ae:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80186b2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80186b6:	eeb0 6a67 	vmov.f32	s12, s15
 80186ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80186be:	eef0 5a47 	vmov.f32	s11, s14
 80186c2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80186c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186ca:	da2d      	bge.n	8018728 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80186cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80186ce:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80186d2:	2100      	movs	r1, #0
 80186d4:	eef0 4a46 	vmov.f32	s9, s12
 80186d8:	ebaa 0202 	sub.w	r2, sl, r2
 80186dc:	eef4 6ac6 	vcmpe.f32	s13, s12
 80186e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186e4:	b28d      	uxth	r5, r1
 80186e6:	db2c      	blt.n	8018742 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80186e8:	1a53      	subs	r3, r2, r1
 80186ea:	2b00      	cmp	r3, #0
 80186ec:	dd29      	ble.n	8018742 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80186ee:	3101      	adds	r1, #1
 80186f0:	2964      	cmp	r1, #100	; 0x64
 80186f2:	d025      	beq.n	8018740 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80186f4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80186f8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80186fc:	ee17 3a10 	vmov	r3, s14
 8018700:	2b09      	cmp	r3, #9
 8018702:	bfa8      	it	ge
 8018704:	2309      	movge	r3, #9
 8018706:	ee07 3a10 	vmov	s14, r3
 801870a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801870e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8018712:	eee7 7a66 	vfms.f32	s15, s14, s13
 8018716:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801871a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801871e:	e7dd      	b.n	80186dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018720:	4b06      	ldr	r3, [pc, #24]	; (801873c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8018722:	9311      	str	r3, [sp, #68]	; 0x44
 8018724:	236e      	movs	r3, #110	; 0x6e
 8018726:	e792      	b.n	801864e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018728:	ee66 6a87 	vmul.f32	s13, s13, s14
 801872c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018730:	e7c7      	b.n	80186c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018732:	bf00      	nop
 8018734:	7f7fffff 	.word	0x7f7fffff
 8018738:	006e0069 	.word	0x006e0069
 801873c:	0061006e 	.word	0x0061006e
 8018740:	2563      	movs	r5, #99	; 0x63
 8018742:	2a63      	cmp	r2, #99	; 0x63
 8018744:	bfd4      	ite	le
 8018746:	ebc5 0202 	rsble	r2, r5, r2
 801874a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801874e:	2a00      	cmp	r2, #0
 8018750:	dd43      	ble.n	80187da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018752:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018754:	2b00      	cmp	r3, #0
 8018756:	dd40      	ble.n	80187da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018758:	f04f 0901 	mov.w	r9, #1
 801875c:	210a      	movs	r1, #10
 801875e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018762:	d30c      	bcc.n	801877e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018764:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018768:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801876c:	ee17 0a10 	vmov	r0, s14
 8018770:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018774:	fb01 0909 	mla	r9, r1, r9, r0
 8018778:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801877c:	e7ef      	b.n	801875e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801877e:	3501      	adds	r5, #1
 8018780:	930f      	str	r3, [sp, #60]	; 0x3c
 8018782:	b292      	uxth	r2, r2
 8018784:	230a      	movs	r3, #10
 8018786:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801878a:	4648      	mov	r0, r9
 801878c:	f7ff fb4e 	bl	8017e2c <_ZN8touchgfx7Unicode4itoaElPtti>
 8018790:	f1b9 0f01 	cmp.w	r9, #1
 8018794:	dc1f      	bgt.n	80187d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8018796:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801879a:	2b00      	cmp	r3, #0
 801879c:	bf0c      	ite	eq
 801879e:	2300      	moveq	r3, #0
 80187a0:	232e      	movne	r3, #46	; 0x2e
 80187a2:	aa44      	add	r2, sp, #272	; 0x110
 80187a4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80187a8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80187ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187b0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80187b4:	f6ff af4c 	blt.w	8018650 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80187b8:	2300      	movs	r3, #0
 80187ba:	f838 2b02 	ldrh.w	r2, [r8], #2
 80187be:	1c59      	adds	r1, r3, #1
 80187c0:	b98a      	cbnz	r2, 80187e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80187c2:	b29b      	uxth	r3, r3
 80187c4:	2130      	movs	r1, #48	; 0x30
 80187c6:	b983      	cbnz	r3, 80187ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80187c8:	2331      	movs	r3, #49	; 0x31
 80187ca:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80187ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80187d0:	3b02      	subs	r3, #2
 80187d2:	9310      	str	r3, [sp, #64]	; 0x40
 80187d4:	e73c      	b.n	8018650 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80187d6:	232e      	movs	r3, #46	; 0x2e
 80187d8:	e7e3      	b.n	80187a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80187da:	ab44      	add	r3, sp, #272	; 0x110
 80187dc:	3501      	adds	r5, #1
 80187de:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80187e2:	2300      	movs	r3, #0
 80187e4:	e7e0      	b.n	80187a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80187e6:	460b      	mov	r3, r1
 80187e8:	e7e7      	b.n	80187ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80187ea:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80187ee:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 80187f2:	2808      	cmp	r0, #8
 80187f4:	d806      	bhi.n	8018804 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 80187f6:	a944      	add	r1, sp, #272	; 0x110
 80187f8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80187fc:	3201      	adds	r2, #1
 80187fe:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8018802:	e725      	b.n	8018650 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018804:	2a39      	cmp	r2, #57	; 0x39
 8018806:	bf08      	it	eq
 8018808:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801880c:	3b01      	subs	r3, #1
 801880e:	e7da      	b.n	80187c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018810:	9a08      	ldr	r2, [sp, #32]
 8018812:	2a00      	cmp	r2, #0
 8018814:	f43f af23 	beq.w	801865e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018818:	7812      	ldrb	r2, [r2, #0]
 801881a:	e720      	b.n	801865e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801881c:	2d00      	cmp	r5, #0
 801881e:	f43f aede 	beq.w	80185de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018822:	782d      	ldrb	r5, [r5, #0]
 8018824:	e6db      	b.n	80185de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018826:	bf00      	nop

08018828 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018828:	b507      	push	{r0, r1, r2, lr}
 801882a:	9300      	str	r3, [sp, #0]
 801882c:	4613      	mov	r3, r2
 801882e:	2200      	movs	r2, #0
 8018830:	f7ff fe1c 	bl	801846c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018834:	b003      	add	sp, #12
 8018836:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801883c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801883c:	4b01      	ldr	r3, [pc, #4]	; (8018844 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801883e:	6018      	str	r0, [r3, #0]
 8018840:	4770      	bx	lr
 8018842:	bf00      	nop
 8018844:	20012ec4 	.word	0x20012ec4

08018848 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018848:	4b06      	ldr	r3, [pc, #24]	; (8018864 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801884a:	881a      	ldrh	r2, [r3, #0]
 801884c:	4282      	cmp	r2, r0
 801884e:	d807      	bhi.n	8018860 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018850:	4b05      	ldr	r3, [pc, #20]	; (8018868 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018852:	881b      	ldrh	r3, [r3, #0]
 8018854:	4413      	add	r3, r2
 8018856:	4298      	cmp	r0, r3
 8018858:	bfac      	ite	ge
 801885a:	2000      	movge	r0, #0
 801885c:	2001      	movlt	r0, #1
 801885e:	4770      	bx	lr
 8018860:	2000      	movs	r0, #0
 8018862:	4770      	bx	lr
 8018864:	20012ee4 	.word	0x20012ee4
 8018868:	20012ee8 	.word	0x20012ee8

0801886c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801886c:	b508      	push	{r3, lr}
 801886e:	4601      	mov	r1, r0
 8018870:	f7ff ffea 	bl	8018848 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018874:	b118      	cbz	r0, 801887e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018876:	4b02      	ldr	r3, [pc, #8]	; (8018880 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018878:	681b      	ldr	r3, [r3, #0]
 801887a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801887e:	bd08      	pop	{r3, pc}
 8018880:	20012ec8 	.word	0x20012ec8

08018884 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018886:	4c24      	ldr	r4, [pc, #144]	; (8018918 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018888:	6823      	ldr	r3, [r4, #0]
 801888a:	2b00      	cmp	r3, #0
 801888c:	d042      	beq.n	8018914 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801888e:	4a23      	ldr	r2, [pc, #140]	; (801891c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018890:	4d23      	ldr	r5, [pc, #140]	; (8018920 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018892:	8811      	ldrh	r1, [r2, #0]
 8018894:	f8b5 c000 	ldrh.w	ip, [r5]
 8018898:	4822      	ldr	r0, [pc, #136]	; (8018924 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801889a:	4461      	add	r1, ip
 801889c:	1c4a      	adds	r2, r1, #1
 801889e:	f022 0201 	bic.w	r2, r2, #1
 80188a2:	008f      	lsls	r7, r1, #2
 80188a4:	0412      	lsls	r2, r2, #16
 80188a6:	19de      	adds	r6, r3, r7
 80188a8:	0c12      	lsrs	r2, r2, #16
 80188aa:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80188ae:	6006      	str	r6, [r0, #0]
 80188b0:	4e1d      	ldr	r6, [pc, #116]	; (8018928 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80188b2:	19da      	adds	r2, r3, r7
 80188b4:	6032      	str	r2, [r6, #0]
 80188b6:	220e      	movs	r2, #14
 80188b8:	fb02 f20c 	mul.w	r2, r2, ip
 80188bc:	3203      	adds	r2, #3
 80188be:	f022 0203 	bic.w	r2, r2, #3
 80188c2:	443a      	add	r2, r7
 80188c4:	4f19      	ldr	r7, [pc, #100]	; (801892c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80188c6:	4413      	add	r3, r2
 80188c8:	603b      	str	r3, [r7, #0]
 80188ca:	4f19      	ldr	r7, [pc, #100]	; (8018930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80188cc:	2300      	movs	r3, #0
 80188ce:	803b      	strh	r3, [r7, #0]
 80188d0:	4f18      	ldr	r7, [pc, #96]	; (8018934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80188d2:	683f      	ldr	r7, [r7, #0]
 80188d4:	1aba      	subs	r2, r7, r2
 80188d6:	4f18      	ldr	r7, [pc, #96]	; (8018938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80188d8:	603a      	str	r2, [r7, #0]
 80188da:	4a18      	ldr	r2, [pc, #96]	; (801893c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80188dc:	469c      	mov	ip, r3
 80188de:	8013      	strh	r3, [r2, #0]
 80188e0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80188e4:	428b      	cmp	r3, r1
 80188e6:	d10d      	bne.n	8018904 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80188e8:	882d      	ldrh	r5, [r5, #0]
 80188ea:	6830      	ldr	r0, [r6, #0]
 80188ec:	2300      	movs	r3, #0
 80188ee:	240e      	movs	r4, #14
 80188f0:	429d      	cmp	r5, r3
 80188f2:	d90f      	bls.n	8018914 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80188f4:	fb04 0203 	mla	r2, r4, r3, r0
 80188f8:	3301      	adds	r3, #1
 80188fa:	7b11      	ldrb	r1, [r2, #12]
 80188fc:	f36f 1145 	bfc	r1, #5, #1
 8018900:	7311      	strb	r1, [r2, #12]
 8018902:	e7f5      	b.n	80188f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018904:	6822      	ldr	r2, [r4, #0]
 8018906:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801890a:	6802      	ldr	r2, [r0, #0]
 801890c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018910:	3301      	adds	r3, #1
 8018912:	e7e7      	b.n	80188e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018914:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018916:	bf00      	nop
 8018918:	20012ec8 	.word	0x20012ec8
 801891c:	20012ee4 	.word	0x20012ee4
 8018920:	20012ee8 	.word	0x20012ee8
 8018924:	20012edc 	.word	0x20012edc
 8018928:	20012ecc 	.word	0x20012ecc
 801892c:	20012ed4 	.word	0x20012ed4
 8018930:	20012ee6 	.word	0x20012ee6
 8018934:	20012ed0 	.word	0x20012ed0
 8018938:	20012ee0 	.word	0x20012ee0
 801893c:	20012ed8 	.word	0x20012ed8

08018940 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018940:	4b06      	ldr	r3, [pc, #24]	; (801895c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018942:	681b      	ldr	r3, [r3, #0]
 8018944:	b943      	cbnz	r3, 8018958 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018946:	b139      	cbz	r1, 8018958 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018948:	4b05      	ldr	r3, [pc, #20]	; (8018960 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801894a:	801a      	strh	r2, [r3, #0]
 801894c:	4b05      	ldr	r3, [pc, #20]	; (8018964 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801894e:	6019      	str	r1, [r3, #0]
 8018950:	4b05      	ldr	r3, [pc, #20]	; (8018968 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018952:	6018      	str	r0, [r3, #0]
 8018954:	f7ff bf96 	b.w	8018884 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018958:	4770      	bx	lr
 801895a:	bf00      	nop
 801895c:	20012ed4 	.word	0x20012ed4
 8018960:	20012ee8 	.word	0x20012ee8
 8018964:	20012ed0 	.word	0x20012ed0
 8018968:	20012ec8 	.word	0x20012ec8

0801896c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801896c:	b470      	push	{r4, r5, r6}
 801896e:	4c07      	ldr	r4, [pc, #28]	; (801898c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018970:	6826      	ldr	r6, [r4, #0]
 8018972:	4605      	mov	r5, r0
 8018974:	4610      	mov	r0, r2
 8018976:	9a03      	ldr	r2, [sp, #12]
 8018978:	b936      	cbnz	r6, 8018988 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801897a:	6025      	str	r5, [r4, #0]
 801897c:	4c04      	ldr	r4, [pc, #16]	; (8018990 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801897e:	8021      	strh	r1, [r4, #0]
 8018980:	bc70      	pop	{r4, r5, r6}
 8018982:	4619      	mov	r1, r3
 8018984:	f7ff bfdc 	b.w	8018940 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018988:	bc70      	pop	{r4, r5, r6}
 801898a:	4770      	bx	lr
 801898c:	20012eec 	.word	0x20012eec
 8018990:	20012ee4 	.word	0x20012ee4

08018994 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018994:	4a12      	ldr	r2, [pc, #72]	; (80189e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018996:	8803      	ldrh	r3, [r0, #0]
 8018998:	8812      	ldrh	r2, [r2, #0]
 801899a:	4293      	cmp	r3, r2
 801899c:	d207      	bcs.n	80189ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801899e:	4a11      	ldr	r2, [pc, #68]	; (80189e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80189a0:	6812      	ldr	r2, [r2, #0]
 80189a2:	2114      	movs	r1, #20
 80189a4:	fb01 2303 	mla	r3, r1, r3, r2
 80189a8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80189ac:	4770      	bx	lr
 80189ae:	490e      	ldr	r1, [pc, #56]	; (80189e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80189b0:	8809      	ldrh	r1, [r1, #0]
 80189b2:	4411      	add	r1, r2
 80189b4:	428b      	cmp	r3, r1
 80189b6:	da04      	bge.n	80189c2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80189b8:	1a9b      	subs	r3, r3, r2
 80189ba:	4a0c      	ldr	r2, [pc, #48]	; (80189ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80189bc:	210e      	movs	r1, #14
 80189be:	6812      	ldr	r2, [r2, #0]
 80189c0:	e7f0      	b.n	80189a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80189c2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80189c6:	4293      	cmp	r3, r2
 80189c8:	d108      	bne.n	80189dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80189ca:	4b09      	ldr	r3, [pc, #36]	; (80189f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80189cc:	781b      	ldrb	r3, [r3, #0]
 80189ce:	b91b      	cbnz	r3, 80189d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80189d0:	4b08      	ldr	r3, [pc, #32]	; (80189f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80189d2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80189d6:	4770      	bx	lr
 80189d8:	4b07      	ldr	r3, [pc, #28]	; (80189f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80189da:	e7fa      	b.n	80189d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80189dc:	2000      	movs	r0, #0
 80189de:	4770      	bx	lr
 80189e0:	20012ee4 	.word	0x20012ee4
 80189e4:	20012eec 	.word	0x20012eec
 80189e8:	20012ee8 	.word	0x20012ee8
 80189ec:	20012ecc 	.word	0x20012ecc
 80189f0:	20012e54 	.word	0x20012e54
 80189f4:	20012e56 	.word	0x20012e56
 80189f8:	20012e58 	.word	0x20012e58

080189fc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80189fc:	4a12      	ldr	r2, [pc, #72]	; (8018a48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80189fe:	8803      	ldrh	r3, [r0, #0]
 8018a00:	8812      	ldrh	r2, [r2, #0]
 8018a02:	4293      	cmp	r3, r2
 8018a04:	d207      	bcs.n	8018a16 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018a06:	4a11      	ldr	r2, [pc, #68]	; (8018a4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018a08:	6812      	ldr	r2, [r2, #0]
 8018a0a:	2114      	movs	r1, #20
 8018a0c:	fb01 2303 	mla	r3, r1, r3, r2
 8018a10:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018a14:	4770      	bx	lr
 8018a16:	490e      	ldr	r1, [pc, #56]	; (8018a50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018a18:	8809      	ldrh	r1, [r1, #0]
 8018a1a:	4411      	add	r1, r2
 8018a1c:	428b      	cmp	r3, r1
 8018a1e:	da04      	bge.n	8018a2a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018a20:	1a9b      	subs	r3, r3, r2
 8018a22:	4a0c      	ldr	r2, [pc, #48]	; (8018a54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018a24:	210e      	movs	r1, #14
 8018a26:	6812      	ldr	r2, [r2, #0]
 8018a28:	e7f0      	b.n	8018a0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018a2a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018a2e:	4293      	cmp	r3, r2
 8018a30:	d108      	bne.n	8018a44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018a32:	4b09      	ldr	r3, [pc, #36]	; (8018a58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018a34:	781b      	ldrb	r3, [r3, #0]
 8018a36:	b91b      	cbnz	r3, 8018a40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018a38:	4b08      	ldr	r3, [pc, #32]	; (8018a5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018a3a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018a3e:	4770      	bx	lr
 8018a40:	4b07      	ldr	r3, [pc, #28]	; (8018a60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018a42:	e7fa      	b.n	8018a3a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018a44:	2000      	movs	r0, #0
 8018a46:	4770      	bx	lr
 8018a48:	20012ee4 	.word	0x20012ee4
 8018a4c:	20012eec 	.word	0x20012eec
 8018a50:	20012ee8 	.word	0x20012ee8
 8018a54:	20012ecc 	.word	0x20012ecc
 8018a58:	20012e54 	.word	0x20012e54
 8018a5c:	20012e58 	.word	0x20012e58
 8018a60:	20012e56 	.word	0x20012e56

08018a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018a64:	b510      	push	{r4, lr}
 8018a66:	4a1f      	ldr	r2, [pc, #124]	; (8018ae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018a68:	880b      	ldrh	r3, [r1, #0]
 8018a6a:	8812      	ldrh	r2, [r2, #0]
 8018a6c:	4293      	cmp	r3, r2
 8018a6e:	d213      	bcs.n	8018a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018a70:	4a1d      	ldr	r2, [pc, #116]	; (8018ae8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018a72:	6812      	ldr	r2, [r2, #0]
 8018a74:	2114      	movs	r1, #20
 8018a76:	fb01 2303 	mla	r3, r1, r3, r2
 8018a7a:	8a1a      	ldrh	r2, [r3, #16]
 8018a7c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018a80:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018a84:	8a5b      	ldrh	r3, [r3, #18]
 8018a86:	8004      	strh	r4, [r0, #0]
 8018a88:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018a8c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018a90:	8041      	strh	r1, [r0, #2]
 8018a92:	8082      	strh	r2, [r0, #4]
 8018a94:	80c3      	strh	r3, [r0, #6]
 8018a96:	e00e      	b.n	8018ab6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018a98:	4914      	ldr	r1, [pc, #80]	; (8018aec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018a9a:	8809      	ldrh	r1, [r1, #0]
 8018a9c:	4411      	add	r1, r2
 8018a9e:	428b      	cmp	r3, r1
 8018aa0:	da0a      	bge.n	8018ab8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018aa2:	1a9b      	subs	r3, r3, r2
 8018aa4:	4a12      	ldr	r2, [pc, #72]	; (8018af0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018aa6:	6812      	ldr	r2, [r2, #0]
 8018aa8:	210e      	movs	r1, #14
 8018aaa:	fb01 2303 	mla	r3, r1, r3, r2
 8018aae:	681a      	ldr	r2, [r3, #0]
 8018ab0:	6002      	str	r2, [r0, #0]
 8018ab2:	685a      	ldr	r2, [r3, #4]
 8018ab4:	6042      	str	r2, [r0, #4]
 8018ab6:	bd10      	pop	{r4, pc}
 8018ab8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018abc:	4293      	cmp	r3, r2
 8018abe:	d10b      	bne.n	8018ad8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018ac0:	4b0c      	ldr	r3, [pc, #48]	; (8018af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018ac2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018ac6:	4b0c      	ldr	r3, [pc, #48]	; (8018af8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018ac8:	8081      	strh	r1, [r0, #4]
 8018aca:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018ace:	80c2      	strh	r2, [r0, #6]
 8018ad0:	2300      	movs	r3, #0
 8018ad2:	8003      	strh	r3, [r0, #0]
 8018ad4:	8043      	strh	r3, [r0, #2]
 8018ad6:	e7ee      	b.n	8018ab6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018ad8:	2300      	movs	r3, #0
 8018ada:	8003      	strh	r3, [r0, #0]
 8018adc:	8043      	strh	r3, [r0, #2]
 8018ade:	8083      	strh	r3, [r0, #4]
 8018ae0:	e7d8      	b.n	8018a94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018ae2:	bf00      	nop
 8018ae4:	20012ee4 	.word	0x20012ee4
 8018ae8:	20012eec 	.word	0x20012eec
 8018aec:	20012ee8 	.word	0x20012ee8
 8018af0:	20012ecc 	.word	0x20012ecc
 8018af4:	20012e50 	.word	0x20012e50
 8018af8:	20012e52 	.word	0x20012e52

08018afc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018afc:	4a17      	ldr	r2, [pc, #92]	; (8018b5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018afe:	8803      	ldrh	r3, [r0, #0]
 8018b00:	8812      	ldrh	r2, [r2, #0]
 8018b02:	4293      	cmp	r3, r2
 8018b04:	d213      	bcs.n	8018b2e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8018b06:	4a16      	ldr	r2, [pc, #88]	; (8018b60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018b08:	6812      	ldr	r2, [r2, #0]
 8018b0a:	2114      	movs	r1, #20
 8018b0c:	fb01 2303 	mla	r3, r1, r3, r2
 8018b10:	8a1a      	ldrh	r2, [r3, #16]
 8018b12:	8919      	ldrh	r1, [r3, #8]
 8018b14:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018b18:	428a      	cmp	r2, r1
 8018b1a:	db1d      	blt.n	8018b58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018b1c:	8a58      	ldrh	r0, [r3, #18]
 8018b1e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018b22:	895b      	ldrh	r3, [r3, #10]
 8018b24:	4298      	cmp	r0, r3
 8018b26:	bfac      	ite	ge
 8018b28:	2000      	movge	r0, #0
 8018b2a:	2001      	movlt	r0, #1
 8018b2c:	4770      	bx	lr
 8018b2e:	490d      	ldr	r1, [pc, #52]	; (8018b64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018b30:	8809      	ldrh	r1, [r1, #0]
 8018b32:	4411      	add	r1, r2
 8018b34:	428b      	cmp	r3, r1
 8018b36:	da0d      	bge.n	8018b54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018b38:	1a9b      	subs	r3, r3, r2
 8018b3a:	4a0b      	ldr	r2, [pc, #44]	; (8018b68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018b3c:	6812      	ldr	r2, [r2, #0]
 8018b3e:	210e      	movs	r1, #14
 8018b40:	fb01 2303 	mla	r3, r1, r3, r2
 8018b44:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018b48:	891a      	ldrh	r2, [r3, #8]
 8018b4a:	4291      	cmp	r1, r2
 8018b4c:	db04      	blt.n	8018b58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018b4e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018b52:	e7e6      	b.n	8018b22 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018b54:	2000      	movs	r0, #0
 8018b56:	4770      	bx	lr
 8018b58:	2001      	movs	r0, #1
 8018b5a:	4770      	bx	lr
 8018b5c:	20012ee4 	.word	0x20012ee4
 8018b60:	20012eec 	.word	0x20012eec
 8018b64:	20012ee8 	.word	0x20012ee8
 8018b68:	20012ecc 	.word	0x20012ecc

08018b6c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018b6c:	4a12      	ldr	r2, [pc, #72]	; (8018bb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018b6e:	8803      	ldrh	r3, [r0, #0]
 8018b70:	8811      	ldrh	r1, [r2, #0]
 8018b72:	428b      	cmp	r3, r1
 8018b74:	d20b      	bcs.n	8018b8e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018b76:	4a11      	ldr	r2, [pc, #68]	; (8018bbc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018b78:	6812      	ldr	r2, [r2, #0]
 8018b7a:	b112      	cbz	r2, 8018b82 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018b7c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018b80:	b9c0      	cbnz	r0, 8018bb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018b82:	4a0f      	ldr	r2, [pc, #60]	; (8018bc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018b84:	6811      	ldr	r1, [r2, #0]
 8018b86:	2214      	movs	r2, #20
 8018b88:	4353      	muls	r3, r2
 8018b8a:	58c8      	ldr	r0, [r1, r3]
 8018b8c:	4770      	bx	lr
 8018b8e:	4a0d      	ldr	r2, [pc, #52]	; (8018bc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018b90:	8812      	ldrh	r2, [r2, #0]
 8018b92:	440a      	add	r2, r1
 8018b94:	4293      	cmp	r3, r2
 8018b96:	da04      	bge.n	8018ba2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018b98:	4a08      	ldr	r2, [pc, #32]	; (8018bbc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018b9a:	6812      	ldr	r2, [r2, #0]
 8018b9c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018ba0:	4770      	bx	lr
 8018ba2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018ba6:	4293      	cmp	r3, r2
 8018ba8:	d103      	bne.n	8018bb2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018baa:	4b07      	ldr	r3, [pc, #28]	; (8018bc8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018bac:	681b      	ldr	r3, [r3, #0]
 8018bae:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018bb0:	4770      	bx	lr
 8018bb2:	2000      	movs	r0, #0
 8018bb4:	4770      	bx	lr
 8018bb6:	bf00      	nop
 8018bb8:	20012ee4 	.word	0x20012ee4
 8018bbc:	20012ec8 	.word	0x20012ec8
 8018bc0:	20012eec 	.word	0x20012eec
 8018bc4:	20012ee8 	.word	0x20012ee8
 8018bc8:	20012e5c 	.word	0x20012e5c

08018bcc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018bcc:	4b24      	ldr	r3, [pc, #144]	; (8018c60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018bce:	8802      	ldrh	r2, [r0, #0]
 8018bd0:	8818      	ldrh	r0, [r3, #0]
 8018bd2:	4282      	cmp	r2, r0
 8018bd4:	d221      	bcs.n	8018c1a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018bd6:	4b23      	ldr	r3, [pc, #140]	; (8018c64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018bd8:	6819      	ldr	r1, [r3, #0]
 8018bda:	2314      	movs	r3, #20
 8018bdc:	fb03 1302 	mla	r3, r3, r2, r1
 8018be0:	6858      	ldr	r0, [r3, #4]
 8018be2:	2800      	cmp	r0, #0
 8018be4:	d03a      	beq.n	8018c5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018be6:	4920      	ldr	r1, [pc, #128]	; (8018c68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018be8:	6809      	ldr	r1, [r1, #0]
 8018bea:	2900      	cmp	r1, #0
 8018bec:	d036      	beq.n	8018c5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018bee:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018bf2:	2900      	cmp	r1, #0
 8018bf4:	d032      	beq.n	8018c5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018bf6:	891a      	ldrh	r2, [r3, #8]
 8018bf8:	8958      	ldrh	r0, [r3, #10]
 8018bfa:	4350      	muls	r0, r2
 8018bfc:	7c5a      	ldrb	r2, [r3, #17]
 8018bfe:	7cdb      	ldrb	r3, [r3, #19]
 8018c00:	0952      	lsrs	r2, r2, #5
 8018c02:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018c06:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018c0a:	2b0b      	cmp	r3, #11
 8018c0c:	bf18      	it	ne
 8018c0e:	0040      	lslne	r0, r0, #1
 8018c10:	3003      	adds	r0, #3
 8018c12:	f020 0003 	bic.w	r0, r0, #3
 8018c16:	4408      	add	r0, r1
 8018c18:	4770      	bx	lr
 8018c1a:	4b14      	ldr	r3, [pc, #80]	; (8018c6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018c1c:	881b      	ldrh	r3, [r3, #0]
 8018c1e:	4403      	add	r3, r0
 8018c20:	429a      	cmp	r2, r3
 8018c22:	da1a      	bge.n	8018c5a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018c24:	4b12      	ldr	r3, [pc, #72]	; (8018c70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018c26:	681b      	ldr	r3, [r3, #0]
 8018c28:	1a10      	subs	r0, r2, r0
 8018c2a:	210e      	movs	r1, #14
 8018c2c:	fb01 3000 	mla	r0, r1, r0, r3
 8018c30:	7b03      	ldrb	r3, [r0, #12]
 8018c32:	f003 031f 	and.w	r3, r3, #31
 8018c36:	2b0b      	cmp	r3, #11
 8018c38:	d10b      	bne.n	8018c52 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018c3a:	8903      	ldrh	r3, [r0, #8]
 8018c3c:	8940      	ldrh	r0, [r0, #10]
 8018c3e:	4358      	muls	r0, r3
 8018c40:	4b09      	ldr	r3, [pc, #36]	; (8018c68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018c42:	6819      	ldr	r1, [r3, #0]
 8018c44:	3003      	adds	r0, #3
 8018c46:	f020 0303 	bic.w	r3, r0, #3
 8018c4a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018c4e:	4418      	add	r0, r3
 8018c50:	4770      	bx	lr
 8018c52:	2b0d      	cmp	r3, #13
 8018c54:	d101      	bne.n	8018c5a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018c56:	300d      	adds	r0, #13
 8018c58:	4770      	bx	lr
 8018c5a:	2000      	movs	r0, #0
 8018c5c:	4770      	bx	lr
 8018c5e:	bf00      	nop
 8018c60:	20012ee4 	.word	0x20012ee4
 8018c64:	20012eec 	.word	0x20012eec
 8018c68:	20012ec8 	.word	0x20012ec8
 8018c6c:	20012ee8 	.word	0x20012ee8
 8018c70:	20012ecc 	.word	0x20012ecc

08018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018c74:	b510      	push	{r4, lr}
 8018c76:	4a17      	ldr	r2, [pc, #92]	; (8018cd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018c78:	8803      	ldrh	r3, [r0, #0]
 8018c7a:	8812      	ldrh	r2, [r2, #0]
 8018c7c:	4293      	cmp	r3, r2
 8018c7e:	d20c      	bcs.n	8018c9a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018c80:	4a15      	ldr	r2, [pc, #84]	; (8018cd8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018c82:	6812      	ldr	r2, [r2, #0]
 8018c84:	2114      	movs	r1, #20
 8018c86:	fb01 2303 	mla	r3, r1, r3, r2
 8018c8a:	7c58      	ldrb	r0, [r3, #17]
 8018c8c:	0942      	lsrs	r2, r0, #5
 8018c8e:	7cd8      	ldrb	r0, [r3, #19]
 8018c90:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018c94:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018c98:	bd10      	pop	{r4, pc}
 8018c9a:	4910      	ldr	r1, [pc, #64]	; (8018cdc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018c9c:	8809      	ldrh	r1, [r1, #0]
 8018c9e:	4411      	add	r1, r2
 8018ca0:	428b      	cmp	r3, r1
 8018ca2:	da09      	bge.n	8018cb8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018ca4:	1a9b      	subs	r3, r3, r2
 8018ca6:	4a0e      	ldr	r2, [pc, #56]	; (8018ce0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018ca8:	6812      	ldr	r2, [r2, #0]
 8018caa:	210e      	movs	r1, #14
 8018cac:	fb01 2303 	mla	r3, r1, r3, r2
 8018cb0:	7b18      	ldrb	r0, [r3, #12]
 8018cb2:	f000 001f 	and.w	r0, r0, #31
 8018cb6:	e7ef      	b.n	8018c98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018cb8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018cbc:	4293      	cmp	r3, r2
 8018cbe:	d106      	bne.n	8018cce <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018cc0:	f7ea fe1c 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 8018cc4:	6803      	ldr	r3, [r0, #0]
 8018cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018cca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ccc:	4718      	bx	r3
 8018cce:	2000      	movs	r0, #0
 8018cd0:	e7e2      	b.n	8018c98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018cd2:	bf00      	nop
 8018cd4:	20012ee4 	.word	0x20012ee4
 8018cd8:	20012eec 	.word	0x20012eec
 8018cdc:	20012ee8 	.word	0x20012ee8
 8018ce0:	20012ecc 	.word	0x20012ecc

08018ce4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018ce4:	2010      	movs	r0, #16
 8018ce6:	4770      	bx	lr

08018ce8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018ce8:	2000      	movs	r0, #0
 8018cea:	4770      	bx	lr

08018cec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018cec:	4b02      	ldr	r3, [pc, #8]	; (8018cf8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018cee:	8818      	ldrh	r0, [r3, #0]
 8018cf0:	0040      	lsls	r0, r0, #1
 8018cf2:	b280      	uxth	r0, r0
 8018cf4:	4770      	bx	lr
 8018cf6:	bf00      	nop
 8018cf8:	20012e56 	.word	0x20012e56

08018cfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018cfc:	2bff      	cmp	r3, #255	; 0xff
 8018cfe:	d050      	beq.n	8018da2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018d00:	2a0b      	cmp	r2, #11
 8018d02:	d04a      	beq.n	8018d9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018d04:	d80e      	bhi.n	8018d24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018d06:	2a03      	cmp	r2, #3
 8018d08:	d03f      	beq.n	8018d8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018d0a:	d804      	bhi.n	8018d16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018d0c:	2a01      	cmp	r2, #1
 8018d0e:	d03e      	beq.n	8018d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018d10:	d93f      	bls.n	8018d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018d12:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018d14:	4770      	bx	lr
 8018d16:	2a09      	cmp	r2, #9
 8018d18:	d03f      	beq.n	8018d9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018d1a:	d83c      	bhi.n	8018d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018d1c:	2a08      	cmp	r2, #8
 8018d1e:	d03a      	beq.n	8018d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018d20:	2000      	movs	r0, #0
 8018d22:	4770      	bx	lr
 8018d24:	2a2f      	cmp	r2, #47	; 0x2f
 8018d26:	d024      	beq.n	8018d72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018d28:	d80d      	bhi.n	8018d46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018d2a:	2a2d      	cmp	r2, #45	; 0x2d
 8018d2c:	d014      	beq.n	8018d58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018d2e:	d826      	bhi.n	8018d7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018d30:	2a2c      	cmp	r2, #44	; 0x2c
 8018d32:	d1f5      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d34:	684b      	ldr	r3, [r1, #4]
 8018d36:	781b      	ldrb	r3, [r3, #0]
 8018d38:	2b01      	cmp	r3, #1
 8018d3a:	d018      	beq.n	8018d6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018d3c:	d323      	bcc.n	8018d86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018d3e:	2b02      	cmp	r3, #2
 8018d40:	d1ee      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d42:	6880      	ldr	r0, [r0, #8]
 8018d44:	4770      	bx	lr
 8018d46:	2a31      	cmp	r2, #49	; 0x31
 8018d48:	d004      	beq.n	8018d54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018d4a:	d328      	bcc.n	8018d9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018d4c:	2a32      	cmp	r2, #50	; 0x32
 8018d4e:	d026      	beq.n	8018d9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018d50:	2a33      	cmp	r2, #51	; 0x33
 8018d52:	d1e5      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d54:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018d56:	4770      	bx	lr
 8018d58:	684b      	ldr	r3, [r1, #4]
 8018d5a:	781b      	ldrb	r3, [r3, #0]
 8018d5c:	2b01      	cmp	r3, #1
 8018d5e:	d004      	beq.n	8018d6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018d60:	d30b      	bcc.n	8018d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018d62:	2b02      	cmp	r3, #2
 8018d64:	d1dc      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d66:	6900      	ldr	r0, [r0, #16]
 8018d68:	4770      	bx	lr
 8018d6a:	6a00      	ldr	r0, [r0, #32]
 8018d6c:	4770      	bx	lr
 8018d6e:	6980      	ldr	r0, [r0, #24]
 8018d70:	4770      	bx	lr
 8018d72:	684b      	ldr	r3, [r1, #4]
 8018d74:	781b      	ldrb	r3, [r3, #0]
 8018d76:	2b00      	cmp	r3, #0
 8018d78:	d1d2      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d7a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018d7c:	4770      	bx	lr
 8018d7e:	684b      	ldr	r3, [r1, #4]
 8018d80:	781b      	ldrb	r3, [r3, #0]
 8018d82:	2b00      	cmp	r3, #0
 8018d84:	d1cc      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018d86:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018d88:	4770      	bx	lr
 8018d8a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018d8c:	4770      	bx	lr
 8018d8e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018d90:	4770      	bx	lr
 8018d92:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018d94:	4770      	bx	lr
 8018d96:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018d98:	4770      	bx	lr
 8018d9a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018d9c:	4770      	bx	lr
 8018d9e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018da0:	4770      	bx	lr
 8018da2:	2a0b      	cmp	r2, #11
 8018da4:	d049      	beq.n	8018e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018da6:	d80e      	bhi.n	8018dc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018da8:	2a03      	cmp	r2, #3
 8018daa:	d040      	beq.n	8018e2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018dac:	d804      	bhi.n	8018db8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018dae:	2a01      	cmp	r2, #1
 8018db0:	d03f      	beq.n	8018e32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018db2:	d940      	bls.n	8018e36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018db4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018db6:	4770      	bx	lr
 8018db8:	2a09      	cmp	r2, #9
 8018dba:	d03e      	beq.n	8018e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018dbc:	d801      	bhi.n	8018dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018dbe:	2a08      	cmp	r2, #8
 8018dc0:	d1ae      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018dc2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018dc4:	4770      	bx	lr
 8018dc6:	2a2f      	cmp	r2, #47	; 0x2f
 8018dc8:	d024      	beq.n	8018e14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018dca:	d80d      	bhi.n	8018de8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018dcc:	2a2d      	cmp	r2, #45	; 0x2d
 8018dce:	d014      	beq.n	8018dfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018dd0:	d826      	bhi.n	8018e20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018dd2:	2a2c      	cmp	r2, #44	; 0x2c
 8018dd4:	d1a4      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018dd6:	684b      	ldr	r3, [r1, #4]
 8018dd8:	781b      	ldrb	r3, [r3, #0]
 8018dda:	2b01      	cmp	r3, #1
 8018ddc:	d018      	beq.n	8018e10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018dde:	d324      	bcc.n	8018e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018de0:	2b02      	cmp	r3, #2
 8018de2:	d19d      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018de4:	68c0      	ldr	r0, [r0, #12]
 8018de6:	4770      	bx	lr
 8018de8:	2a31      	cmp	r2, #49	; 0x31
 8018dea:	d004      	beq.n	8018df6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018dec:	d327      	bcc.n	8018e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018dee:	2a32      	cmp	r2, #50	; 0x32
 8018df0:	d025      	beq.n	8018e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018df2:	2a33      	cmp	r2, #51	; 0x33
 8018df4:	d194      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018df6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018df8:	4770      	bx	lr
 8018dfa:	684b      	ldr	r3, [r1, #4]
 8018dfc:	781b      	ldrb	r3, [r3, #0]
 8018dfe:	2b01      	cmp	r3, #1
 8018e00:	d004      	beq.n	8018e0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018e02:	d30b      	bcc.n	8018e1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018e04:	2b02      	cmp	r3, #2
 8018e06:	d18b      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018e08:	6940      	ldr	r0, [r0, #20]
 8018e0a:	4770      	bx	lr
 8018e0c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018e0e:	4770      	bx	lr
 8018e10:	69c0      	ldr	r0, [r0, #28]
 8018e12:	4770      	bx	lr
 8018e14:	684b      	ldr	r3, [r1, #4]
 8018e16:	781b      	ldrb	r3, [r3, #0]
 8018e18:	2b00      	cmp	r3, #0
 8018e1a:	d181      	bne.n	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018e1c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018e1e:	4770      	bx	lr
 8018e20:	684b      	ldr	r3, [r1, #4]
 8018e22:	781b      	ldrb	r3, [r3, #0]
 8018e24:	2b00      	cmp	r3, #0
 8018e26:	f47f af7b 	bne.w	8018d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018e2a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018e2c:	4770      	bx	lr
 8018e2e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018e30:	4770      	bx	lr
 8018e32:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018e34:	4770      	bx	lr
 8018e36:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018e38:	4770      	bx	lr
 8018e3a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018e3c:	4770      	bx	lr
 8018e3e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018e40:	4770      	bx	lr

08018e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e46:	b087      	sub	sp, #28
 8018e48:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018e4a:	9205      	str	r2, [sp, #20]
 8018e4c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018e50:	9202      	str	r2, [sp, #8]
 8018e52:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018e56:	9101      	str	r1, [sp, #4]
 8018e58:	6841      	ldr	r1, [r0, #4]
 8018e5a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018e5e:	fb01 2404 	mla	r4, r1, r4, r2
 8018e62:	6802      	ldr	r2, [r0, #0]
 8018e64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e68:	f8de 2000 	ldr.w	r2, [lr]
 8018e6c:	9203      	str	r2, [sp, #12]
 8018e6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018e72:	3204      	adds	r2, #4
 8018e74:	9204      	str	r2, [sp, #16]
 8018e76:	9a02      	ldr	r2, [sp, #8]
 8018e78:	43d6      	mvns	r6, r2
 8018e7a:	b2f6      	uxtb	r6, r6
 8018e7c:	9a01      	ldr	r2, [sp, #4]
 8018e7e:	2a00      	cmp	r2, #0
 8018e80:	dc03      	bgt.n	8018e8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018e82:	9a05      	ldr	r2, [sp, #20]
 8018e84:	2a00      	cmp	r2, #0
 8018e86:	f340 8129 	ble.w	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018e8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018e8c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018e90:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018e94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018e98:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018e9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e9e:	2b00      	cmp	r3, #0
 8018ea0:	dd0e      	ble.n	8018ec0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018ea2:	1408      	asrs	r0, r1, #16
 8018ea4:	d405      	bmi.n	8018eb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018ea6:	4560      	cmp	r0, ip
 8018ea8:	da03      	bge.n	8018eb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018eaa:	1410      	asrs	r0, r2, #16
 8018eac:	d401      	bmi.n	8018eb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018eae:	42b8      	cmp	r0, r7
 8018eb0:	db07      	blt.n	8018ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018eb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018eb4:	4401      	add	r1, r0
 8018eb6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018eb8:	3b01      	subs	r3, #1
 8018eba:	4402      	add	r2, r0
 8018ebc:	3402      	adds	r4, #2
 8018ebe:	e7ee      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018ec0:	d071      	beq.n	8018fa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ec2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018ec4:	1e58      	subs	r0, r3, #1
 8018ec6:	fb05 1500 	mla	r5, r5, r0, r1
 8018eca:	142d      	asrs	r5, r5, #16
 8018ecc:	d45f      	bmi.n	8018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ece:	4565      	cmp	r5, ip
 8018ed0:	da5d      	bge.n	8018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ed2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018ed4:	fb05 2000 	mla	r0, r5, r0, r2
 8018ed8:	1400      	asrs	r0, r0, #16
 8018eda:	d458      	bmi.n	8018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018edc:	42b8      	cmp	r0, r7
 8018ede:	da56      	bge.n	8018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ee0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018ee4:	4699      	mov	r9, r3
 8018ee6:	46a2      	mov	sl, r4
 8018ee8:	f1b9 0f00 	cmp.w	r9, #0
 8018eec:	dd57      	ble.n	8018f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018eee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018ef2:	9803      	ldr	r0, [sp, #12]
 8018ef4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018ef8:	140d      	asrs	r5, r1, #16
 8018efa:	fb07 000c 	mla	r0, r7, ip, r0
 8018efe:	f109 39ff 	add.w	r9, r9, #4294967295
 8018f02:	5d40      	ldrb	r0, [r0, r5]
 8018f04:	9d04      	ldr	r5, [sp, #16]
 8018f06:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018f0a:	f8ba 5000 	ldrh.w	r5, [sl]
 8018f0e:	122f      	asrs	r7, r5, #8
 8018f10:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018f14:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018f18:	fb17 f706 	smulbb	r7, r7, r6
 8018f1c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018f20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018f24:	00ed      	lsls	r5, r5, #3
 8018f26:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018f2a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018f2e:	10c7      	asrs	r7, r0, #3
 8018f30:	b2ed      	uxtb	r5, r5
 8018f32:	00c0      	lsls	r0, r0, #3
 8018f34:	fb18 f806 	smulbb	r8, r8, r6
 8018f38:	fb15 f506 	smulbb	r5, r5, r6
 8018f3c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f40:	b2c0      	uxtb	r0, r0
 8018f42:	fa1f fc8c 	uxth.w	ip, ip
 8018f46:	fb07 870b 	mla	r7, r7, fp, r8
 8018f4a:	fb00 500b 	mla	r0, r0, fp, r5
 8018f4e:	b280      	uxth	r0, r0
 8018f50:	b2bf      	uxth	r7, r7
 8018f52:	f10c 0501 	add.w	r5, ip, #1
 8018f56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018f5a:	f107 0801 	add.w	r8, r7, #1
 8018f5e:	1c45      	adds	r5, r0, #1
 8018f60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018f64:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018f68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018f6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018f72:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018f76:	ea45 0c0c 	orr.w	ip, r5, ip
 8018f7a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018f7e:	4401      	add	r1, r0
 8018f80:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018f82:	ea4c 0c08 	orr.w	ip, ip, r8
 8018f86:	f82a cb02 	strh.w	ip, [sl], #2
 8018f8a:	4402      	add	r2, r0
 8018f8c:	e7ac      	b.n	8018ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f8e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018f92:	f04f 0800 	mov.w	r8, #0
 8018f96:	eb03 0008 	add.w	r0, r3, r8
 8018f9a:	2800      	cmp	r0, #0
 8018f9c:	dc41      	bgt.n	8019022 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018f9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fa2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018fa6:	9b01      	ldr	r3, [sp, #4]
 8018fa8:	2b00      	cmp	r3, #0
 8018faa:	f340 8097 	ble.w	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018fae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fb2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018fb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018fba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018fbc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018fc8:	eef0 6a62 	vmov.f32	s13, s5
 8018fcc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018fd8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018fdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018fe0:	eef0 6a43 	vmov.f32	s13, s6
 8018fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018fe8:	ee12 2a90 	vmov	r2, s5
 8018fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ff4:	ee13 2a10 	vmov	r2, s6
 8018ff8:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ffa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ffc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019000:	9314      	str	r3, [sp, #80]	; 0x50
 8019002:	9b01      	ldr	r3, [sp, #4]
 8019004:	9a05      	ldr	r2, [sp, #20]
 8019006:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801900a:	3b01      	subs	r3, #1
 801900c:	9301      	str	r3, [sp, #4]
 801900e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019012:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019014:	eeb0 3a67 	vmov.f32	s6, s15
 8019018:	bf08      	it	eq
 801901a:	4613      	moveq	r3, r2
 801901c:	eef0 2a47 	vmov.f32	s5, s14
 8019020:	e72c      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019022:	140f      	asrs	r7, r1, #16
 8019024:	d453      	bmi.n	80190ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019026:	f8de 5008 	ldr.w	r5, [lr, #8]
 801902a:	42bd      	cmp	r5, r7
 801902c:	dd4f      	ble.n	80190ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801902e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019032:	d44c      	bmi.n	80190ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019034:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019038:	4560      	cmp	r0, ip
 801903a:	dd48      	ble.n	80190ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801903c:	9803      	ldr	r0, [sp, #12]
 801903e:	b22d      	sxth	r5, r5
 8019040:	fb0c 0505 	mla	r5, ip, r5, r0
 8019044:	5de8      	ldrb	r0, [r5, r7]
 8019046:	9d04      	ldr	r5, [sp, #16]
 8019048:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801904c:	f06f 0501 	mvn.w	r5, #1
 8019050:	fb05 fb08 	mul.w	fp, r5, r8
 8019054:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019058:	f834 500b 	ldrh.w	r5, [r4, fp]
 801905c:	122f      	asrs	r7, r5, #8
 801905e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019062:	fb17 f706 	smulbb	r7, r7, r6
 8019066:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801906a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801906e:	00ed      	lsls	r5, r5, #3
 8019070:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019074:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019078:	10c7      	asrs	r7, r0, #3
 801907a:	b2ed      	uxtb	r5, r5
 801907c:	00c0      	lsls	r0, r0, #3
 801907e:	fb19 f906 	smulbb	r9, r9, r6
 8019082:	fb15 f506 	smulbb	r5, r5, r6
 8019086:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801908a:	b2c0      	uxtb	r0, r0
 801908c:	fa1f fc8c 	uxth.w	ip, ip
 8019090:	fb07 970a 	mla	r7, r7, sl, r9
 8019094:	fb00 500a 	mla	r0, r0, sl, r5
 8019098:	b2bf      	uxth	r7, r7
 801909a:	b280      	uxth	r0, r0
 801909c:	f10c 0501 	add.w	r5, ip, #1
 80190a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80190a4:	f107 0901 	add.w	r9, r7, #1
 80190a8:	1c45      	adds	r5, r0, #1
 80190aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80190ae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80190b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80190b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80190ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80190be:	ea45 0c0c 	orr.w	ip, r5, ip
 80190c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80190c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80190ca:	f824 c00b 	strh.w	ip, [r4, fp]
 80190ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80190d0:	4401      	add	r1, r0
 80190d2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80190d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80190d8:	4402      	add	r2, r0
 80190da:	e75c      	b.n	8018f96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80190dc:	b007      	add	sp, #28
 80190de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190e6:	b085      	sub	sp, #20
 80190e8:	4693      	mov	fp, r2
 80190ea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80190ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80190ee:	6870      	ldr	r0, [r6, #4]
 80190f0:	9100      	str	r1, [sp, #0]
 80190f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80190f6:	fb00 2404 	mla	r4, r0, r4, r2
 80190fa:	6832      	ldr	r2, [r6, #0]
 80190fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019100:	682a      	ldr	r2, [r5, #0]
 8019102:	9201      	str	r2, [sp, #4]
 8019104:	686a      	ldr	r2, [r5, #4]
 8019106:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801910a:	3204      	adds	r2, #4
 801910c:	9202      	str	r2, [sp, #8]
 801910e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019112:	9a00      	ldr	r2, [sp, #0]
 8019114:	2a00      	cmp	r2, #0
 8019116:	dc03      	bgt.n	8019120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019118:	f1bb 0f00 	cmp.w	fp, #0
 801911c:	f340 80a0 	ble.w	8019260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019120:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019122:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019126:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801912a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801912e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019130:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019134:	2b00      	cmp	r3, #0
 8019136:	dd0c      	ble.n	8019152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019138:	1406      	asrs	r6, r0, #16
 801913a:	d405      	bmi.n	8019148 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801913c:	454e      	cmp	r6, r9
 801913e:	da03      	bge.n	8019148 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019140:	1416      	asrs	r6, r2, #16
 8019142:	d401      	bmi.n	8019148 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019144:	4546      	cmp	r6, r8
 8019146:	db05      	blt.n	8019154 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019148:	4470      	add	r0, lr
 801914a:	4462      	add	r2, ip
 801914c:	3b01      	subs	r3, #1
 801914e:	3402      	adds	r4, #2
 8019150:	e7f0      	b.n	8019134 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019152:	d00f      	beq.n	8019174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019154:	1e5e      	subs	r6, r3, #1
 8019156:	fb0e 0706 	mla	r7, lr, r6, r0
 801915a:	143f      	asrs	r7, r7, #16
 801915c:	d541      	bpl.n	80191e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801915e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019162:	4698      	mov	r8, r3
 8019164:	9603      	str	r6, [sp, #12]
 8019166:	f1b8 0f00 	cmp.w	r8, #0
 801916a:	dc59      	bgt.n	8019220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801916c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019170:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019174:	9b00      	ldr	r3, [sp, #0]
 8019176:	2b00      	cmp	r3, #0
 8019178:	dd72      	ble.n	8019260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801917a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801917e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019182:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019186:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019188:	ee31 1a05 	vadd.f32	s2, s2, s10
 801918c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019190:	eeb0 6a62 	vmov.f32	s12, s5
 8019194:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019198:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801919c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80191a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191a8:	eeb0 6a43 	vmov.f32	s12, s6
 80191ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191b0:	ee12 2a90 	vmov	r2, s5
 80191b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191b8:	fb92 fef3 	sdiv	lr, r2, r3
 80191bc:	ee13 2a10 	vmov	r2, s6
 80191c0:	fb92 fcf3 	sdiv	ip, r2, r3
 80191c4:	9b00      	ldr	r3, [sp, #0]
 80191c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191ca:	3b01      	subs	r3, #1
 80191cc:	9300      	str	r3, [sp, #0]
 80191ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80191d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80191d4:	eeb0 3a67 	vmov.f32	s6, s15
 80191d8:	bf08      	it	eq
 80191da:	465b      	moveq	r3, fp
 80191dc:	eef0 2a47 	vmov.f32	s5, s14
 80191e0:	e797      	b.n	8019112 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80191e2:	454f      	cmp	r7, r9
 80191e4:	dabb      	bge.n	801915e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191e6:	fb0c 2606 	mla	r6, ip, r6, r2
 80191ea:	1436      	asrs	r6, r6, #16
 80191ec:	d4b7      	bmi.n	801915e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191ee:	4546      	cmp	r6, r8
 80191f0:	dab5      	bge.n	801915e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191f2:	461e      	mov	r6, r3
 80191f4:	46a0      	mov	r8, r4
 80191f6:	2e00      	cmp	r6, #0
 80191f8:	ddb8      	ble.n	801916c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80191fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80191fe:	9901      	ldr	r1, [sp, #4]
 8019200:	1417      	asrs	r7, r2, #16
 8019202:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019206:	fb0a 1707 	mla	r7, sl, r7, r1
 801920a:	9902      	ldr	r1, [sp, #8]
 801920c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019210:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019214:	f828 7b02 	strh.w	r7, [r8], #2
 8019218:	4470      	add	r0, lr
 801921a:	4462      	add	r2, ip
 801921c:	3e01      	subs	r6, #1
 801921e:	e7ea      	b.n	80191f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019220:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019224:	d417      	bmi.n	8019256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019226:	68ae      	ldr	r6, [r5, #8]
 8019228:	454e      	cmp	r6, r9
 801922a:	dd14      	ble.n	8019256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801922c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019230:	d411      	bmi.n	8019256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019232:	68ef      	ldr	r7, [r5, #12]
 8019234:	4557      	cmp	r7, sl
 8019236:	dd0e      	ble.n	8019256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019238:	9f01      	ldr	r7, [sp, #4]
 801923a:	b236      	sxth	r6, r6
 801923c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019240:	9f02      	ldr	r7, [sp, #8]
 8019242:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019246:	f06f 0101 	mvn.w	r1, #1
 801924a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801924e:	fb01 f608 	mul.w	r6, r1, r8
 8019252:	9903      	ldr	r1, [sp, #12]
 8019254:	538f      	strh	r7, [r1, r6]
 8019256:	4470      	add	r0, lr
 8019258:	4462      	add	r2, ip
 801925a:	f108 38ff 	add.w	r8, r8, #4294967295
 801925e:	e782      	b.n	8019166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019260:	b005      	add	sp, #20
 8019262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019266 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801926a:	b087      	sub	sp, #28
 801926c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801926e:	9205      	str	r2, [sp, #20]
 8019270:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019274:	9203      	str	r2, [sp, #12]
 8019276:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801927a:	9102      	str	r1, [sp, #8]
 801927c:	6861      	ldr	r1, [r4, #4]
 801927e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019282:	fb01 2000 	mla	r0, r1, r0, r2
 8019286:	6822      	ldr	r2, [r4, #0]
 8019288:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801928c:	9200      	str	r2, [sp, #0]
 801928e:	f8dc 2000 	ldr.w	r2, [ip]
 8019292:	9204      	str	r2, [sp, #16]
 8019294:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019298:	3204      	adds	r2, #4
 801929a:	9201      	str	r2, [sp, #4]
 801929c:	9a03      	ldr	r2, [sp, #12]
 801929e:	43d5      	mvns	r5, r2
 80192a0:	b2ed      	uxtb	r5, r5
 80192a2:	9a02      	ldr	r2, [sp, #8]
 80192a4:	2a00      	cmp	r2, #0
 80192a6:	dc03      	bgt.n	80192b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80192a8:	9a05      	ldr	r2, [sp, #20]
 80192aa:	2a00      	cmp	r2, #0
 80192ac:	f340 812c 	ble.w	8019508 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80192b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80192b2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80192b6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80192ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80192be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80192c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80192c4:	2b00      	cmp	r3, #0
 80192c6:	dd10      	ble.n	80192ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80192c8:	140c      	asrs	r4, r1, #16
 80192ca:	d405      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80192cc:	4574      	cmp	r4, lr
 80192ce:	da03      	bge.n	80192d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80192d0:	1414      	asrs	r4, r2, #16
 80192d2:	d401      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80192d4:	42bc      	cmp	r4, r7
 80192d6:	db09      	blt.n	80192ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80192d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80192da:	9800      	ldr	r0, [sp, #0]
 80192dc:	4421      	add	r1, r4
 80192de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80192e0:	3002      	adds	r0, #2
 80192e2:	4422      	add	r2, r4
 80192e4:	3b01      	subs	r3, #1
 80192e6:	9000      	str	r0, [sp, #0]
 80192e8:	e7ec      	b.n	80192c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80192ea:	d071      	beq.n	80193d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80192ec:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80192ee:	1e5c      	subs	r4, r3, #1
 80192f0:	fb06 1604 	mla	r6, r6, r4, r1
 80192f4:	1436      	asrs	r6, r6, #16
 80192f6:	d45d      	bmi.n	80193b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80192f8:	4576      	cmp	r6, lr
 80192fa:	da5b      	bge.n	80193b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80192fc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80192fe:	fb06 2404 	mla	r4, r6, r4, r2
 8019302:	1424      	asrs	r4, r4, #16
 8019304:	d456      	bmi.n	80193b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019306:	42bc      	cmp	r4, r7
 8019308:	da54      	bge.n	80193b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801930a:	f8dd 9000 	ldr.w	r9, [sp]
 801930e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019312:	4698      	mov	r8, r3
 8019314:	f1b8 0f00 	cmp.w	r8, #0
 8019318:	dd54      	ble.n	80193c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801931a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801931e:	9804      	ldr	r0, [sp, #16]
 8019320:	1414      	asrs	r4, r2, #16
 8019322:	fb07 0404 	mla	r4, r7, r4, r0
 8019326:	140e      	asrs	r6, r1, #16
 8019328:	9801      	ldr	r0, [sp, #4]
 801932a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801932e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019332:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019336:	eb00 0b0e 	add.w	fp, r0, lr
 801933a:	1227      	asrs	r7, r4, #8
 801933c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019340:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019344:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019348:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801934a:	fb16 f60a 	smulbb	r6, r6, sl
 801934e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019352:	fb07 6705 	mla	r7, r7, r5, r6
 8019356:	10e6      	asrs	r6, r4, #3
 8019358:	00e4      	lsls	r4, r4, #3
 801935a:	b2e4      	uxtb	r4, r4
 801935c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019360:	fb14 f405 	smulbb	r4, r4, r5
 8019364:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019368:	b2bf      	uxth	r7, r7
 801936a:	fb06 b605 	mla	r6, r6, r5, fp
 801936e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019372:	b2b6      	uxth	r6, r6
 8019374:	fa1f fe8e 	uxth.w	lr, lr
 8019378:	1c7c      	adds	r4, r7, #1
 801937a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801937e:	f106 0b01 	add.w	fp, r6, #1
 8019382:	f10e 0401 	add.w	r4, lr, #1
 8019386:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801938a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801938e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019392:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019396:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801939a:	4327      	orrs	r7, r4
 801939c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80193a0:	4401      	add	r1, r0
 80193a2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80193a4:	ea47 070b 	orr.w	r7, r7, fp
 80193a8:	f829 7b02 	strh.w	r7, [r9], #2
 80193ac:	4402      	add	r2, r0
 80193ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80193b2:	e7af      	b.n	8019314 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80193b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80193b8:	f04f 0e00 	mov.w	lr, #0
 80193bc:	eb03 040e 	add.w	r4, r3, lr
 80193c0:	2c00      	cmp	r4, #0
 80193c2:	dc43      	bgt.n	801944c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80193c4:	9a00      	ldr	r2, [sp, #0]
 80193c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80193ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193ce:	9300      	str	r3, [sp, #0]
 80193d0:	9b02      	ldr	r3, [sp, #8]
 80193d2:	2b00      	cmp	r3, #0
 80193d4:	f340 8098 	ble.w	8019508 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80193d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80193dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80193e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80193e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80193e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80193ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193f2:	eef0 6a62 	vmov.f32	s13, s5
 80193f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019402:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019406:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801940a:	eef0 6a43 	vmov.f32	s13, s6
 801940e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019412:	ee12 2a90 	vmov	r2, s5
 8019416:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801941a:	fb92 f3f3 	sdiv	r3, r2, r3
 801941e:	ee13 2a10 	vmov	r2, s6
 8019422:	9313      	str	r3, [sp, #76]	; 0x4c
 8019424:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019426:	fb92 f3f3 	sdiv	r3, r2, r3
 801942a:	9314      	str	r3, [sp, #80]	; 0x50
 801942c:	9b02      	ldr	r3, [sp, #8]
 801942e:	9a05      	ldr	r2, [sp, #20]
 8019430:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019434:	3b01      	subs	r3, #1
 8019436:	9302      	str	r3, [sp, #8]
 8019438:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801943c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801943e:	eeb0 3a67 	vmov.f32	s6, s15
 8019442:	bf08      	it	eq
 8019444:	4613      	moveq	r3, r2
 8019446:	eef0 2a47 	vmov.f32	s5, s14
 801944a:	e72a      	b.n	80192a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801944c:	140f      	asrs	r7, r1, #16
 801944e:	d454      	bmi.n	80194fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019450:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019454:	42be      	cmp	r6, r7
 8019456:	dd50      	ble.n	80194fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019458:	ea5f 4822 	movs.w	r8, r2, asr #16
 801945c:	d44d      	bmi.n	80194fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801945e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019462:	4544      	cmp	r4, r8
 8019464:	dd49      	ble.n	80194fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019466:	9c04      	ldr	r4, [sp, #16]
 8019468:	b236      	sxth	r6, r6
 801946a:	fb08 4606 	mla	r6, r8, r6, r4
 801946e:	f06f 0001 	mvn.w	r0, #1
 8019472:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019476:	9c01      	ldr	r4, [sp, #4]
 8019478:	fb00 fa0e 	mul.w	sl, r0, lr
 801947c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019480:	9800      	ldr	r0, [sp, #0]
 8019482:	eb04 0b08 	add.w	fp, r4, r8
 8019486:	f830 400a 	ldrh.w	r4, [r0, sl]
 801948a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801948e:	9801      	ldr	r0, [sp, #4]
 8019490:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019494:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019498:	9800      	ldr	r0, [sp, #0]
 801949a:	1227      	asrs	r7, r4, #8
 801949c:	fb16 f609 	smulbb	r6, r6, r9
 80194a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80194a4:	fb07 6705 	mla	r7, r7, r5, r6
 80194a8:	10e6      	asrs	r6, r4, #3
 80194aa:	00e4      	lsls	r4, r4, #3
 80194ac:	b2e4      	uxtb	r4, r4
 80194ae:	fb1b fb09 	smulbb	fp, fp, r9
 80194b2:	fb14 f405 	smulbb	r4, r4, r5
 80194b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80194ba:	b2bf      	uxth	r7, r7
 80194bc:	fb06 b605 	mla	r6, r6, r5, fp
 80194c0:	fb08 4809 	mla	r8, r8, r9, r4
 80194c4:	b2b6      	uxth	r6, r6
 80194c6:	fa1f f888 	uxth.w	r8, r8
 80194ca:	1c7c      	adds	r4, r7, #1
 80194cc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80194d0:	f106 0b01 	add.w	fp, r6, #1
 80194d4:	f108 0401 	add.w	r4, r8, #1
 80194d8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80194dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80194e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80194e4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80194e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80194ec:	4327      	orrs	r7, r4
 80194ee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80194f2:	ea47 070b 	orr.w	r7, r7, fp
 80194f6:	f820 700a 	strh.w	r7, [r0, sl]
 80194fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80194fc:	4401      	add	r1, r0
 80194fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019500:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019504:	4402      	add	r2, r0
 8019506:	e759      	b.n	80193bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019508:	b007      	add	sp, #28
 801950a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019514:	b085      	sub	sp, #20
 8019516:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801951a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801951c:	9203      	str	r2, [sp, #12]
 801951e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019522:	6870      	ldr	r0, [r6, #4]
 8019524:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019526:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801952a:	686f      	ldr	r7, [r5, #4]
 801952c:	9101      	str	r1, [sp, #4]
 801952e:	fb00 2404 	mla	r4, r0, r4, r2
 8019532:	6832      	ldr	r2, [r6, #0]
 8019534:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019538:	682a      	ldr	r2, [r5, #0]
 801953a:	9202      	str	r2, [sp, #8]
 801953c:	3704      	adds	r7, #4
 801953e:	9a01      	ldr	r2, [sp, #4]
 8019540:	2a00      	cmp	r2, #0
 8019542:	dc03      	bgt.n	801954c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019544:	9a03      	ldr	r2, [sp, #12]
 8019546:	2a00      	cmp	r2, #0
 8019548:	f340 80cc 	ble.w	80196e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801954c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801954e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019552:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019556:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801955a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801955c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019560:	2b00      	cmp	r3, #0
 8019562:	dd0d      	ble.n	8019580 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019564:	1406      	asrs	r6, r0, #16
 8019566:	d405      	bmi.n	8019574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019568:	454e      	cmp	r6, r9
 801956a:	da03      	bge.n	8019574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801956c:	1416      	asrs	r6, r2, #16
 801956e:	d401      	bmi.n	8019574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019570:	4546      	cmp	r6, r8
 8019572:	db06      	blt.n	8019582 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019574:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019576:	4460      	add	r0, ip
 8019578:	4432      	add	r2, r6
 801957a:	3b01      	subs	r3, #1
 801957c:	3402      	adds	r4, #2
 801957e:	e7ef      	b.n	8019560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019580:	d00f      	beq.n	80195a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019582:	1e5e      	subs	r6, r3, #1
 8019584:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019588:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801958c:	d543      	bpl.n	8019616 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801958e:	4698      	mov	r8, r3
 8019590:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019594:	f1b8 0f00 	cmp.w	r8, #0
 8019598:	dc71      	bgt.n	801967e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801959a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801959e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80195a2:	9b01      	ldr	r3, [sp, #4]
 80195a4:	2b00      	cmp	r3, #0
 80195a6:	f340 809d 	ble.w	80196e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80195aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80195b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195c0:	eeb0 6a62 	vmov.f32	s12, s5
 80195c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80195d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195d8:	eeb0 6a43 	vmov.f32	s12, s6
 80195dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195e0:	ee12 2a90 	vmov	r2, s5
 80195e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80195ec:	ee13 2a10 	vmov	r2, s6
 80195f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80195f4:	9312      	str	r3, [sp, #72]	; 0x48
 80195f6:	9b01      	ldr	r3, [sp, #4]
 80195f8:	9a03      	ldr	r2, [sp, #12]
 80195fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195fe:	3b01      	subs	r3, #1
 8019600:	9301      	str	r3, [sp, #4]
 8019602:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019606:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019608:	eeb0 3a67 	vmov.f32	s6, s15
 801960c:	bf08      	it	eq
 801960e:	4613      	moveq	r3, r2
 8019610:	eef0 2a47 	vmov.f32	s5, s14
 8019614:	e793      	b.n	801953e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019616:	45ce      	cmp	lr, r9
 8019618:	dab9      	bge.n	801958e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801961a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801961c:	fb01 2606 	mla	r6, r1, r6, r2
 8019620:	1436      	asrs	r6, r6, #16
 8019622:	d4b4      	bmi.n	801958e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019624:	4546      	cmp	r6, r8
 8019626:	dab2      	bge.n	801958e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019628:	4698      	mov	r8, r3
 801962a:	46a2      	mov	sl, r4
 801962c:	f1b8 0f00 	cmp.w	r8, #0
 8019630:	ddb3      	ble.n	801959a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019632:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019636:	9902      	ldr	r1, [sp, #8]
 8019638:	1416      	asrs	r6, r2, #16
 801963a:	fb09 1606 	mla	r6, r9, r6, r1
 801963e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019642:	492a      	ldr	r1, [pc, #168]	; (80196ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019644:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019648:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801964c:	eb07 0b0e 	add.w	fp, r7, lr
 8019650:	4460      	add	r0, ip
 8019652:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019656:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801965a:	00f6      	lsls	r6, r6, #3
 801965c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019660:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019664:	ea49 0606 	orr.w	r6, r9, r6
 8019668:	f817 900e 	ldrb.w	r9, [r7, lr]
 801966c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801966e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019672:	f82a 6b02 	strh.w	r6, [sl], #2
 8019676:	440a      	add	r2, r1
 8019678:	f108 38ff 	add.w	r8, r8, #4294967295
 801967c:	e7d6      	b.n	801962c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801967e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019682:	d429      	bmi.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019684:	68ae      	ldr	r6, [r5, #8]
 8019686:	454e      	cmp	r6, r9
 8019688:	dd26      	ble.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801968a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801968e:	d423      	bmi.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019690:	68e9      	ldr	r1, [r5, #12]
 8019692:	4559      	cmp	r1, fp
 8019694:	dd20      	ble.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019696:	9902      	ldr	r1, [sp, #8]
 8019698:	fa0f fe86 	sxth.w	lr, r6
 801969c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80196a0:	f06f 0101 	mvn.w	r1, #1
 80196a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80196a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80196ac:	eb07 060e 	add.w	r6, r7, lr
 80196b0:	fb01 f908 	mul.w	r9, r1, r8
 80196b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80196b8:	7876      	ldrb	r6, [r6, #1]
 80196ba:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80196be:	00f6      	lsls	r6, r6, #3
 80196c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80196c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80196c8:	ea4b 0606 	orr.w	r6, fp, r6
 80196cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80196d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80196d4:	f82a 6009 	strh.w	r6, [sl, r9]
 80196d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80196da:	4460      	add	r0, ip
 80196dc:	440a      	add	r2, r1
 80196de:	f108 38ff 	add.w	r8, r8, #4294967295
 80196e2:	e757      	b.n	8019594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80196e4:	b005      	add	sp, #20
 80196e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196ea:	bf00      	nop
 80196ec:	fffff800 	.word	0xfffff800

080196f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196f4:	b087      	sub	sp, #28
 80196f6:	468b      	mov	fp, r1
 80196f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80196fa:	9204      	str	r2, [sp, #16]
 80196fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019700:	9205      	str	r2, [sp, #20]
 8019702:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019706:	6841      	ldr	r1, [r0, #4]
 8019708:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801970c:	fb01 2404 	mla	r4, r1, r4, r2
 8019710:	6802      	ldr	r2, [r0, #0]
 8019712:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019716:	f8dc 2000 	ldr.w	r2, [ip]
 801971a:	9201      	str	r2, [sp, #4]
 801971c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019720:	3204      	adds	r2, #4
 8019722:	9202      	str	r2, [sp, #8]
 8019724:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019728:	f1bb 0f00 	cmp.w	fp, #0
 801972c:	dc03      	bgt.n	8019736 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801972e:	9a04      	ldr	r2, [sp, #16]
 8019730:	2a00      	cmp	r2, #0
 8019732:	f340 8138 	ble.w	80199a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019736:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019738:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801973c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019740:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019744:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019746:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801974a:	2b00      	cmp	r3, #0
 801974c:	dd0e      	ble.n	801976c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801974e:	1402      	asrs	r2, r0, #16
 8019750:	d405      	bmi.n	801975e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019752:	42ba      	cmp	r2, r7
 8019754:	da03      	bge.n	801975e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019756:	140a      	asrs	r2, r1, #16
 8019758:	d401      	bmi.n	801975e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801975a:	42b2      	cmp	r2, r6
 801975c:	db07      	blt.n	801976e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801975e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019760:	4410      	add	r0, r2
 8019762:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019764:	3b01      	subs	r3, #1
 8019766:	4411      	add	r1, r2
 8019768:	3402      	adds	r4, #2
 801976a:	e7ee      	b.n	801974a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801976c:	d019      	beq.n	80197a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801976e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019770:	1e5a      	subs	r2, r3, #1
 8019772:	fb05 0502 	mla	r5, r5, r2, r0
 8019776:	142d      	asrs	r5, r5, #16
 8019778:	d409      	bmi.n	801978e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801977a:	42bd      	cmp	r5, r7
 801977c:	da07      	bge.n	801978e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801977e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019780:	fb05 1202 	mla	r2, r5, r2, r1
 8019784:	1412      	asrs	r2, r2, #16
 8019786:	d402      	bmi.n	801978e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019788:	42b2      	cmp	r2, r6
 801978a:	f2c0 80ac 	blt.w	80198e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801978e:	f04f 0e00 	mov.w	lr, #0
 8019792:	eb03 020e 	add.w	r2, r3, lr
 8019796:	2a00      	cmp	r2, #0
 8019798:	dc3e      	bgt.n	8019818 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801979a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801979e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80197a2:	f1bb 0f00 	cmp.w	fp, #0
 80197a6:	f340 80fe 	ble.w	80199a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80197aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80197b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80197b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80197bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197c4:	eeb0 6a62 	vmov.f32	s12, s5
 80197c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197d4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80197d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197dc:	eeb0 6a43 	vmov.f32	s12, s6
 80197e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197e4:	ee12 2a90 	vmov	r2, s5
 80197e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80197f0:	ee13 2a10 	vmov	r2, s6
 80197f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80197fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019800:	9a04      	ldr	r2, [sp, #16]
 8019802:	9314      	str	r3, [sp, #80]	; 0x50
 8019804:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019808:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801980a:	eeb0 3a67 	vmov.f32	s6, s15
 801980e:	bf08      	it	eq
 8019810:	4613      	moveq	r3, r2
 8019812:	eef0 2a47 	vmov.f32	s5, s14
 8019816:	e787      	b.n	8019728 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019818:	1406      	asrs	r6, r0, #16
 801981a:	d45d      	bmi.n	80198d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801981c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019820:	42b5      	cmp	r5, r6
 8019822:	dd59      	ble.n	80198d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019824:	140f      	asrs	r7, r1, #16
 8019826:	d457      	bmi.n	80198d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019828:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801982c:	42ba      	cmp	r2, r7
 801982e:	dd53      	ble.n	80198d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019830:	9a01      	ldr	r2, [sp, #4]
 8019832:	b22d      	sxth	r5, r5
 8019834:	fb07 2505 	mla	r5, r7, r5, r2
 8019838:	5daa      	ldrb	r2, [r5, r6]
 801983a:	9d02      	ldr	r5, [sp, #8]
 801983c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019840:	0e2e      	lsrs	r6, r5, #24
 8019842:	d049      	beq.n	80198d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019844:	f06f 0201 	mvn.w	r2, #1
 8019848:	fb02 f20e 	mul.w	r2, r2, lr
 801984c:	9203      	str	r2, [sp, #12]
 801984e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019852:	9a05      	ldr	r2, [sp, #20]
 8019854:	4356      	muls	r6, r2
 8019856:	1c72      	adds	r2, r6, #1
 8019858:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801985c:	1212      	asrs	r2, r2, #8
 801985e:	fa1f f982 	uxth.w	r9, r2
 8019862:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019866:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801986a:	43d2      	mvns	r2, r2
 801986c:	b2d2      	uxtb	r2, r2
 801986e:	fb16 f609 	smulbb	r6, r6, r9
 8019872:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019876:	fb07 6702 	mla	r7, r7, r2, r6
 801987a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801987e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019882:	b2ed      	uxtb	r5, r5
 8019884:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019888:	fa5f f888 	uxtb.w	r8, r8
 801988c:	fb15 f509 	smulbb	r5, r5, r9
 8019890:	fb08 5502 	mla	r5, r8, r2, r5
 8019894:	b2bf      	uxth	r7, r7
 8019896:	fb1a fa09 	smulbb	sl, sl, r9
 801989a:	b2ad      	uxth	r5, r5
 801989c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80198a0:	fb06 a602 	mla	r6, r6, r2, sl
 80198a4:	1c7a      	adds	r2, r7, #1
 80198a6:	f105 0a01 	add.w	sl, r5, #1
 80198aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80198ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80198b2:	b2b6      	uxth	r6, r6
 80198b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80198bc:	ea4a 0707 	orr.w	r7, sl, r7
 80198c0:	f106 0a01 	add.w	sl, r6, #1
 80198c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80198c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198d0:	9a03      	ldr	r2, [sp, #12]
 80198d2:	ea47 070a 	orr.w	r7, r7, sl
 80198d6:	52a7      	strh	r7, [r4, r2]
 80198d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80198da:	4410      	add	r0, r2
 80198dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80198de:	f10e 3eff 	add.w	lr, lr, #4294967295
 80198e2:	4411      	add	r1, r2
 80198e4:	e755      	b.n	8019792 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80198e6:	f04f 0800 	mov.w	r8, #0
 80198ea:	eba3 0208 	sub.w	r2, r3, r8
 80198ee:	2a00      	cmp	r2, #0
 80198f0:	f77f af53 	ble.w	801979a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80198f4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80198f8:	9f01      	ldr	r7, [sp, #4]
 80198fa:	140a      	asrs	r2, r1, #16
 80198fc:	1405      	asrs	r5, r0, #16
 80198fe:	fb06 7202 	mla	r2, r6, r2, r7
 8019902:	5d52      	ldrb	r2, [r2, r5]
 8019904:	9d02      	ldr	r5, [sp, #8]
 8019906:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801990a:	0e2e      	lsrs	r6, r5, #24
 801990c:	d044      	beq.n	8019998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801990e:	9a05      	ldr	r2, [sp, #20]
 8019910:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019914:	4356      	muls	r6, r2
 8019916:	1c72      	adds	r2, r6, #1
 8019918:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801991c:	1212      	asrs	r2, r2, #8
 801991e:	fa1f f982 	uxth.w	r9, r2
 8019922:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019926:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801992a:	43d2      	mvns	r2, r2
 801992c:	b2d2      	uxtb	r2, r2
 801992e:	fb16 f609 	smulbb	r6, r6, r9
 8019932:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019936:	fb07 6702 	mla	r7, r7, r2, r6
 801993a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801993e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019942:	b2ed      	uxtb	r5, r5
 8019944:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019948:	fa5f fe8e 	uxtb.w	lr, lr
 801994c:	fb15 f509 	smulbb	r5, r5, r9
 8019950:	fb0e 5502 	mla	r5, lr, r2, r5
 8019954:	b2bf      	uxth	r7, r7
 8019956:	fb1a fa09 	smulbb	sl, sl, r9
 801995a:	b2ad      	uxth	r5, r5
 801995c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019960:	fb06 a602 	mla	r6, r6, r2, sl
 8019964:	1c7a      	adds	r2, r7, #1
 8019966:	f105 0a01 	add.w	sl, r5, #1
 801996a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801996e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019972:	b2b6      	uxth	r6, r6
 8019974:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019978:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801997c:	ea4a 0707 	orr.w	r7, sl, r7
 8019980:	f106 0a01 	add.w	sl, r6, #1
 8019984:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019988:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801998c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019990:	ea47 070a 	orr.w	r7, r7, sl
 8019994:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019998:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801999a:	4410      	add	r0, r2
 801999c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801999e:	f108 0801 	add.w	r8, r8, #1
 80199a2:	4411      	add	r1, r2
 80199a4:	e7a1      	b.n	80198ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80199a6:	b007      	add	sp, #28
 80199a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080199ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199b0:	b085      	sub	sp, #20
 80199b2:	468b      	mov	fp, r1
 80199b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80199b6:	9203      	str	r2, [sp, #12]
 80199b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80199bc:	6841      	ldr	r1, [r0, #4]
 80199be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80199c2:	fb01 2404 	mla	r4, r1, r4, r2
 80199c6:	6802      	ldr	r2, [r0, #0]
 80199c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80199cc:	f8de 2000 	ldr.w	r2, [lr]
 80199d0:	9200      	str	r2, [sp, #0]
 80199d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80199d6:	3204      	adds	r2, #4
 80199d8:	9201      	str	r2, [sp, #4]
 80199da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80199de:	f1bb 0f00 	cmp.w	fp, #0
 80199e2:	dc03      	bgt.n	80199ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80199e4:	9a03      	ldr	r2, [sp, #12]
 80199e6:	2a00      	cmp	r2, #0
 80199e8:	f340 8153 	ble.w	8019c92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80199ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80199ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80199f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80199f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80199fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80199fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a00:	2b00      	cmp	r3, #0
 8019a02:	dd0e      	ble.n	8019a22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a04:	1408      	asrs	r0, r1, #16
 8019a06:	d405      	bmi.n	8019a14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019a08:	42b8      	cmp	r0, r7
 8019a0a:	da03      	bge.n	8019a14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019a0c:	1410      	asrs	r0, r2, #16
 8019a0e:	d401      	bmi.n	8019a14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019a10:	42b0      	cmp	r0, r6
 8019a12:	db07      	blt.n	8019a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019a14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019a16:	4401      	add	r1, r0
 8019a18:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019a1a:	3b01      	subs	r3, #1
 8019a1c:	4402      	add	r2, r0
 8019a1e:	3402      	adds	r4, #2
 8019a20:	e7ee      	b.n	8019a00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019a22:	d017      	beq.n	8019a54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019a24:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a26:	1e58      	subs	r0, r3, #1
 8019a28:	fb05 1500 	mla	r5, r5, r0, r1
 8019a2c:	142d      	asrs	r5, r5, #16
 8019a2e:	d409      	bmi.n	8019a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a30:	42bd      	cmp	r5, r7
 8019a32:	da07      	bge.n	8019a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a34:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019a36:	fb05 2000 	mla	r0, r5, r0, r2
 8019a3a:	1400      	asrs	r0, r0, #16
 8019a3c:	d402      	bmi.n	8019a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a3e:	42b0      	cmp	r0, r6
 8019a40:	f2c0 80bc 	blt.w	8019bbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019a44:	2600      	movs	r6, #0
 8019a46:	1998      	adds	r0, r3, r6
 8019a48:	2800      	cmp	r0, #0
 8019a4a:	dc3e      	bgt.n	8019aca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019a4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019a54:	f1bb 0f00 	cmp.w	fp, #0
 8019a58:	f340 811b 	ble.w	8019c92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019a5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a6a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a76:	eeb0 6a62 	vmov.f32	s12, s5
 8019a7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a86:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019a8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a8e:	eeb0 6a43 	vmov.f32	s12, s6
 8019a92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a96:	ee12 2a90 	vmov	r2, s5
 8019a9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019aa2:	ee13 2a10 	vmov	r2, s6
 8019aa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aaa:	9311      	str	r3, [sp, #68]	; 0x44
 8019aac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ab2:	9a03      	ldr	r2, [sp, #12]
 8019ab4:	9312      	str	r3, [sp, #72]	; 0x48
 8019ab6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019aba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019abc:	eeb0 3a67 	vmov.f32	s6, s15
 8019ac0:	bf08      	it	eq
 8019ac2:	4613      	moveq	r3, r2
 8019ac4:	eef0 2a47 	vmov.f32	s5, s14
 8019ac8:	e789      	b.n	80199de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019aca:	140f      	asrs	r7, r1, #16
 8019acc:	d426      	bmi.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ace:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019ad2:	42bd      	cmp	r5, r7
 8019ad4:	dd22      	ble.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ad6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019ada:	d41f      	bmi.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019adc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ae0:	4560      	cmp	r0, ip
 8019ae2:	dd1b      	ble.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ae4:	9800      	ldr	r0, [sp, #0]
 8019ae6:	b22d      	sxth	r5, r5
 8019ae8:	fb0c 0505 	mla	r5, ip, r5, r0
 8019aec:	5de8      	ldrb	r0, [r5, r7]
 8019aee:	9d01      	ldr	r5, [sp, #4]
 8019af0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019af4:	0e07      	lsrs	r7, r0, #24
 8019af6:	2fff      	cmp	r7, #255	; 0xff
 8019af8:	d116      	bne.n	8019b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019afa:	f06f 0501 	mvn.w	r5, #1
 8019afe:	fb05 f706 	mul.w	r7, r5, r6
 8019b02:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019b06:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019b0a:	0945      	lsrs	r5, r0, #5
 8019b0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019b10:	ea4c 0505 	orr.w	r5, ip, r5
 8019b14:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019b18:	4305      	orrs	r5, r0
 8019b1a:	53e5      	strh	r5, [r4, r7]
 8019b1c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b1e:	4401      	add	r1, r0
 8019b20:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019b22:	3e01      	subs	r6, #1
 8019b24:	4402      	add	r2, r0
 8019b26:	e78e      	b.n	8019a46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019b28:	b2fd      	uxtb	r5, r7
 8019b2a:	2f00      	cmp	r7, #0
 8019b2c:	d0f6      	beq.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019b2e:	f06f 0701 	mvn.w	r7, #1
 8019b32:	4377      	muls	r7, r6
 8019b34:	fa1f f985 	uxth.w	r9, r5
 8019b38:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019b3c:	9702      	str	r7, [sp, #8]
 8019b3e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019b42:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019b46:	43ed      	mvns	r5, r5
 8019b48:	b2ed      	uxtb	r5, r5
 8019b4a:	fb17 f709 	smulbb	r7, r7, r9
 8019b4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b52:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019b56:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019b5a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019b5e:	b2c0      	uxtb	r0, r0
 8019b60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019b64:	fa5f f888 	uxtb.w	r8, r8
 8019b68:	fb10 f009 	smulbb	r0, r0, r9
 8019b6c:	fb08 0005 	mla	r0, r8, r5, r0
 8019b70:	b280      	uxth	r0, r0
 8019b72:	fa1f fc8c 	uxth.w	ip, ip
 8019b76:	fb1a fa09 	smulbb	sl, sl, r9
 8019b7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b7e:	fb07 a705 	mla	r7, r7, r5, sl
 8019b82:	f100 0a01 	add.w	sl, r0, #1
 8019b86:	f10c 0501 	add.w	r5, ip, #1
 8019b8a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019b8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b92:	b2bf      	uxth	r7, r7
 8019b94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b9c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019ba0:	f107 0a01 	add.w	sl, r7, #1
 8019ba4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019ba8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019bb0:	9802      	ldr	r0, [sp, #8]
 8019bb2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019bb6:	f824 c000 	strh.w	ip, [r4, r0]
 8019bba:	e7af      	b.n	8019b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019bbc:	f04f 0800 	mov.w	r8, #0
 8019bc0:	eba3 0008 	sub.w	r0, r3, r8
 8019bc4:	2800      	cmp	r0, #0
 8019bc6:	f77f af41 	ble.w	8019a4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019bca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019bce:	9f00      	ldr	r7, [sp, #0]
 8019bd0:	1410      	asrs	r0, r2, #16
 8019bd2:	140d      	asrs	r5, r1, #16
 8019bd4:	fb06 7000 	mla	r0, r6, r0, r7
 8019bd8:	5d40      	ldrb	r0, [r0, r5]
 8019bda:	9d01      	ldr	r5, [sp, #4]
 8019bdc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019be0:	0e2e      	lsrs	r6, r5, #24
 8019be2:	2eff      	cmp	r6, #255	; 0xff
 8019be4:	d112      	bne.n	8019c0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019be6:	482c      	ldr	r0, [pc, #176]	; (8019c98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019be8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019bec:	0968      	lsrs	r0, r5, #5
 8019bee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019bf2:	4330      	orrs	r0, r6
 8019bf4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019bf8:	4328      	orrs	r0, r5
 8019bfa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019bfe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019c00:	4401      	add	r1, r0
 8019c02:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019c04:	f108 0801 	add.w	r8, r8, #1
 8019c08:	4402      	add	r2, r0
 8019c0a:	e7d9      	b.n	8019bc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c0c:	b2f0      	uxtb	r0, r6
 8019c0e:	2e00      	cmp	r6, #0
 8019c10:	d0f5      	beq.n	8019bfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019c12:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019c16:	fa1f f980 	uxth.w	r9, r0
 8019c1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019c1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019c22:	43c0      	mvns	r0, r0
 8019c24:	b2c0      	uxtb	r0, r0
 8019c26:	fb16 f609 	smulbb	r6, r6, r9
 8019c2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c2e:	fb07 6700 	mla	r7, r7, r0, r6
 8019c32:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019c36:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019c3a:	b2ed      	uxtb	r5, r5
 8019c3c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019c40:	fa5f fc8c 	uxtb.w	ip, ip
 8019c44:	fb15 f509 	smulbb	r5, r5, r9
 8019c48:	fb0c 5500 	mla	r5, ip, r0, r5
 8019c4c:	b2bf      	uxth	r7, r7
 8019c4e:	fb1a fa09 	smulbb	sl, sl, r9
 8019c52:	b2ad      	uxth	r5, r5
 8019c54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c58:	fb06 a600 	mla	r6, r6, r0, sl
 8019c5c:	1c78      	adds	r0, r7, #1
 8019c5e:	f105 0a01 	add.w	sl, r5, #1
 8019c62:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019c66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c6a:	b2b6      	uxth	r6, r6
 8019c6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c70:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019c74:	ea4a 0707 	orr.w	r7, sl, r7
 8019c78:	f106 0a01 	add.w	sl, r6, #1
 8019c7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c84:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c88:	ea47 070a 	orr.w	r7, r7, sl
 8019c8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019c90:	e7b5      	b.n	8019bfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019c92:	b005      	add	sp, #20
 8019c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c98:	fffff800 	.word	0xfffff800

08019c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ca0:	b087      	sub	sp, #28
 8019ca2:	468b      	mov	fp, r1
 8019ca4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019ca6:	9204      	str	r2, [sp, #16]
 8019ca8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019cac:	9205      	str	r2, [sp, #20]
 8019cae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019cb2:	6861      	ldr	r1, [r4, #4]
 8019cb4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019cb8:	fb01 2000 	mla	r0, r1, r0, r2
 8019cbc:	6822      	ldr	r2, [r4, #0]
 8019cbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019cc2:	f8de 2000 	ldr.w	r2, [lr]
 8019cc6:	9201      	str	r2, [sp, #4]
 8019cc8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019ccc:	9202      	str	r2, [sp, #8]
 8019cce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cd2:	f1bb 0f00 	cmp.w	fp, #0
 8019cd6:	dc03      	bgt.n	8019ce0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019cd8:	9a04      	ldr	r2, [sp, #16]
 8019cda:	2a00      	cmp	r2, #0
 8019cdc:	f340 8142 	ble.w	8019f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019ce0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ce2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ce6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019cea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019cf0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cf4:	2b00      	cmp	r3, #0
 8019cf6:	dd0e      	ble.n	8019d16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019cf8:	140c      	asrs	r4, r1, #16
 8019cfa:	d405      	bmi.n	8019d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019cfc:	42bc      	cmp	r4, r7
 8019cfe:	da03      	bge.n	8019d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019d00:	1414      	asrs	r4, r2, #16
 8019d02:	d401      	bmi.n	8019d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019d04:	42b4      	cmp	r4, r6
 8019d06:	db07      	blt.n	8019d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d0a:	4421      	add	r1, r4
 8019d0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019d0e:	3b01      	subs	r3, #1
 8019d10:	4422      	add	r2, r4
 8019d12:	3002      	adds	r0, #2
 8019d14:	e7ee      	b.n	8019cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019d16:	d019      	beq.n	8019d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019d18:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019d1a:	1e5c      	subs	r4, r3, #1
 8019d1c:	fb05 1504 	mla	r5, r5, r4, r1
 8019d20:	142d      	asrs	r5, r5, #16
 8019d22:	d409      	bmi.n	8019d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019d24:	42bd      	cmp	r5, r7
 8019d26:	da07      	bge.n	8019d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019d28:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019d2a:	fb05 2404 	mla	r4, r5, r4, r2
 8019d2e:	1424      	asrs	r4, r4, #16
 8019d30:	d402      	bmi.n	8019d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019d32:	42b4      	cmp	r4, r6
 8019d34:	f2c0 80b1 	blt.w	8019e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019d38:	f04f 0800 	mov.w	r8, #0
 8019d3c:	eb03 0408 	add.w	r4, r3, r8
 8019d40:	2c00      	cmp	r4, #0
 8019d42:	dc3e      	bgt.n	8019dc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019d44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d4c:	f1bb 0f00 	cmp.w	fp, #0
 8019d50:	f340 8108 	ble.w	8019f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019d54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d62:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d6e:	eeb0 6a62 	vmov.f32	s12, s5
 8019d72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d7e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019d82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d86:	eeb0 6a43 	vmov.f32	s12, s6
 8019d8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d8e:	ee12 2a90 	vmov	r2, s5
 8019d92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d96:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d9a:	ee13 2a10 	vmov	r2, s6
 8019d9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019da2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019da4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019daa:	9a04      	ldr	r2, [sp, #16]
 8019dac:	9314      	str	r3, [sp, #80]	; 0x50
 8019dae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019db2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019db4:	eeb0 3a67 	vmov.f32	s6, s15
 8019db8:	bf08      	it	eq
 8019dba:	4613      	moveq	r3, r2
 8019dbc:	eef0 2a47 	vmov.f32	s5, s14
 8019dc0:	e787      	b.n	8019cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019dc2:	140e      	asrs	r6, r1, #16
 8019dc4:	d462      	bmi.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019dc6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019dca:	42b5      	cmp	r5, r6
 8019dcc:	dd5e      	ble.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019dce:	1417      	asrs	r7, r2, #16
 8019dd0:	d45c      	bmi.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019dd2:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019dd6:	42bc      	cmp	r4, r7
 8019dd8:	dd58      	ble.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019dda:	b22d      	sxth	r5, r5
 8019ddc:	fb07 6505 	mla	r5, r7, r5, r6
 8019de0:	9c02      	ldr	r4, [sp, #8]
 8019de2:	5d66      	ldrb	r6, [r4, r5]
 8019de4:	2e00      	cmp	r6, #0
 8019de6:	d051      	beq.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019de8:	9c01      	ldr	r4, [sp, #4]
 8019dea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019dee:	f06f 0401 	mvn.w	r4, #1
 8019df2:	fb04 f408 	mul.w	r4, r4, r8
 8019df6:	9403      	str	r4, [sp, #12]
 8019df8:	5b05      	ldrh	r5, [r0, r4]
 8019dfa:	9c05      	ldr	r4, [sp, #20]
 8019dfc:	4366      	muls	r6, r4
 8019dfe:	1c74      	adds	r4, r6, #1
 8019e00:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019e04:	1224      	asrs	r4, r4, #8
 8019e06:	b2a7      	uxth	r7, r4
 8019e08:	122e      	asrs	r6, r5, #8
 8019e0a:	43e4      	mvns	r4, r4
 8019e0c:	b2e4      	uxtb	r4, r4
 8019e0e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019e12:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019e16:	fb16 f604 	smulbb	r6, r6, r4
 8019e1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019e1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e22:	00ed      	lsls	r5, r5, #3
 8019e24:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019e28:	b2ed      	uxtb	r5, r5
 8019e2a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019e2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019e32:	fb15 f504 	smulbb	r5, r5, r4
 8019e36:	fa5f f989 	uxtb.w	r9, r9
 8019e3a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019e3e:	fb09 5507 	mla	r5, r9, r7, r5
 8019e42:	fb1a fa04 	smulbb	sl, sl, r4
 8019e46:	fa1f fc8c 	uxth.w	ip, ip
 8019e4a:	b2ad      	uxth	r5, r5
 8019e4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019e50:	fb06 a607 	mla	r6, r6, r7, sl
 8019e54:	f10c 0401 	add.w	r4, ip, #1
 8019e58:	f105 0a01 	add.w	sl, r5, #1
 8019e5c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019e60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e64:	b2b6      	uxth	r6, r6
 8019e66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e6e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019e72:	f106 0a01 	add.w	sl, r6, #1
 8019e76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019e7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e82:	9c03      	ldr	r4, [sp, #12]
 8019e84:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019e88:	f820 c004 	strh.w	ip, [r0, r4]
 8019e8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e8e:	4421      	add	r1, r4
 8019e90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019e92:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e96:	4422      	add	r2, r4
 8019e98:	e750      	b.n	8019d3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019e9a:	f04f 0900 	mov.w	r9, #0
 8019e9e:	eba3 0409 	sub.w	r4, r3, r9
 8019ea2:	2c00      	cmp	r4, #0
 8019ea4:	f77f af4e 	ble.w	8019d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019ea8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019eac:	140d      	asrs	r5, r1, #16
 8019eae:	1414      	asrs	r4, r2, #16
 8019eb0:	fb06 5404 	mla	r4, r6, r4, r5
 8019eb4:	9d02      	ldr	r5, [sp, #8]
 8019eb6:	5d2e      	ldrb	r6, [r5, r4]
 8019eb8:	2e00      	cmp	r6, #0
 8019eba:	d04c      	beq.n	8019f56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019ebc:	9d01      	ldr	r5, [sp, #4]
 8019ebe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019ec2:	9c05      	ldr	r4, [sp, #20]
 8019ec4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ec8:	4366      	muls	r6, r4
 8019eca:	1c74      	adds	r4, r6, #1
 8019ecc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019ed0:	1224      	asrs	r4, r4, #8
 8019ed2:	b2a7      	uxth	r7, r4
 8019ed4:	122e      	asrs	r6, r5, #8
 8019ed6:	43e4      	mvns	r4, r4
 8019ed8:	b2e4      	uxtb	r4, r4
 8019eda:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019ede:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ee2:	fb16 f604 	smulbb	r6, r6, r4
 8019ee6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019eea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019eee:	00ed      	lsls	r5, r5, #3
 8019ef0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ef4:	b2ed      	uxtb	r5, r5
 8019ef6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019efa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019efe:	fb15 f504 	smulbb	r5, r5, r4
 8019f02:	fa5f f888 	uxtb.w	r8, r8
 8019f06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019f0a:	fb08 5507 	mla	r5, r8, r7, r5
 8019f0e:	fb1a fa04 	smulbb	sl, sl, r4
 8019f12:	fa1f fc8c 	uxth.w	ip, ip
 8019f16:	b2ad      	uxth	r5, r5
 8019f18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f1c:	fb06 a607 	mla	r6, r6, r7, sl
 8019f20:	f10c 0401 	add.w	r4, ip, #1
 8019f24:	f105 0a01 	add.w	sl, r5, #1
 8019f28:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019f2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f30:	b2b6      	uxth	r6, r6
 8019f32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f3a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019f3e:	f106 0a01 	add.w	sl, r6, #1
 8019f42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f4e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019f52:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019f56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f58:	4421      	add	r1, r4
 8019f5a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019f5c:	f109 0901 	add.w	r9, r9, #1
 8019f60:	4422      	add	r2, r4
 8019f62:	e79c      	b.n	8019e9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019f64:	b007      	add	sp, #28
 8019f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f6e:	b085      	sub	sp, #20
 8019f70:	468b      	mov	fp, r1
 8019f72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f74:	9203      	str	r2, [sp, #12]
 8019f76:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019f7a:	6861      	ldr	r1, [r4, #4]
 8019f7c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019f80:	fb01 2000 	mla	r0, r1, r0, r2
 8019f84:	6822      	ldr	r2, [r4, #0]
 8019f86:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019f8a:	f8d8 2000 	ldr.w	r2, [r8]
 8019f8e:	9200      	str	r2, [sp, #0]
 8019f90:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019f94:	9201      	str	r2, [sp, #4]
 8019f96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f9a:	f1bb 0f00 	cmp.w	fp, #0
 8019f9e:	dc03      	bgt.n	8019fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019fa0:	9a03      	ldr	r2, [sp, #12]
 8019fa2:	2a00      	cmp	r2, #0
 8019fa4:	f340 8146 	ble.w	801a234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019fa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019faa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019fae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019fb2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fbc:	2b00      	cmp	r3, #0
 8019fbe:	dd0e      	ble.n	8019fde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019fc0:	140c      	asrs	r4, r1, #16
 8019fc2:	d405      	bmi.n	8019fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fc4:	42bc      	cmp	r4, r7
 8019fc6:	da03      	bge.n	8019fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fc8:	1414      	asrs	r4, r2, #16
 8019fca:	d401      	bmi.n	8019fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fcc:	42b4      	cmp	r4, r6
 8019fce:	db07      	blt.n	8019fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fd0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019fd2:	4421      	add	r1, r4
 8019fd4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019fd6:	3b01      	subs	r3, #1
 8019fd8:	4422      	add	r2, r4
 8019fda:	3002      	adds	r0, #2
 8019fdc:	e7ee      	b.n	8019fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019fde:	d017      	beq.n	801a010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019fe0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fe2:	1e5c      	subs	r4, r3, #1
 8019fe4:	fb05 1504 	mla	r5, r5, r4, r1
 8019fe8:	142d      	asrs	r5, r5, #16
 8019fea:	d409      	bmi.n	801a000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019fec:	42bd      	cmp	r5, r7
 8019fee:	da07      	bge.n	801a000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ff0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ff2:	fb05 2404 	mla	r4, r5, r4, r2
 8019ff6:	1424      	asrs	r4, r4, #16
 8019ff8:	d402      	bmi.n	801a000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ffa:	42b4      	cmp	r4, r6
 8019ffc:	f2c0 80b3 	blt.w	801a166 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a000:	2600      	movs	r6, #0
 801a002:	199c      	adds	r4, r3, r6
 801a004:	2c00      	cmp	r4, #0
 801a006:	dc3e      	bgt.n	801a086 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a008:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a00c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a010:	f1bb 0f00 	cmp.w	fp, #0
 801a014:	f340 810e 	ble.w	801a234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a01c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a020:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a024:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a026:	f1bb 0b01 	subs.w	fp, fp, #1
 801a02a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a02e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a032:	eeb0 6a62 	vmov.f32	s12, s5
 801a036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a03a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a03e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a042:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a04a:	eeb0 6a43 	vmov.f32	s12, s6
 801a04e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a052:	ee12 2a90 	vmov	r2, s5
 801a056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a05a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a05e:	ee13 2a10 	vmov	r2, s6
 801a062:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a066:	9311      	str	r3, [sp, #68]	; 0x44
 801a068:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a06a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a06e:	9a03      	ldr	r2, [sp, #12]
 801a070:	9312      	str	r3, [sp, #72]	; 0x48
 801a072:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a076:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a078:	eeb0 3a67 	vmov.f32	s6, s15
 801a07c:	bf08      	it	eq
 801a07e:	4613      	moveq	r3, r2
 801a080:	eef0 2a47 	vmov.f32	s5, s14
 801a084:	e789      	b.n	8019f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a086:	140f      	asrs	r7, r1, #16
 801a088:	d418      	bmi.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a08a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a08e:	42bd      	cmp	r5, r7
 801a090:	dd14      	ble.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a092:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a096:	d411      	bmi.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a098:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801a09c:	4564      	cmp	r4, ip
 801a09e:	dd0d      	ble.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a0a0:	b22d      	sxth	r5, r5
 801a0a2:	fb0c 7505 	mla	r5, ip, r5, r7
 801a0a6:	9c01      	ldr	r4, [sp, #4]
 801a0a8:	5d64      	ldrb	r4, [r4, r5]
 801a0aa:	2cff      	cmp	r4, #255	; 0xff
 801a0ac:	d10c      	bne.n	801a0c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a0ae:	9c00      	ldr	r4, [sp, #0]
 801a0b0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801a0b4:	f06f 0401 	mvn.w	r4, #1
 801a0b8:	4374      	muls	r4, r6
 801a0ba:	5305      	strh	r5, [r0, r4]
 801a0bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a0be:	4421      	add	r1, r4
 801a0c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a0c2:	3e01      	subs	r6, #1
 801a0c4:	4422      	add	r2, r4
 801a0c6:	e79c      	b.n	801a002 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a0c8:	2c00      	cmp	r4, #0
 801a0ca:	d0f7      	beq.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a0cc:	9f00      	ldr	r7, [sp, #0]
 801a0ce:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801a0d2:	f06f 0501 	mvn.w	r5, #1
 801a0d6:	4375      	muls	r5, r6
 801a0d8:	9502      	str	r5, [sp, #8]
 801a0da:	5b45      	ldrh	r5, [r0, r5]
 801a0dc:	fa1f fc84 	uxth.w	ip, r4
 801a0e0:	122f      	asrs	r7, r5, #8
 801a0e2:	43e4      	mvns	r4, r4
 801a0e4:	b2e4      	uxtb	r4, r4
 801a0e6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801a0ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0ee:	fb17 f704 	smulbb	r7, r7, r4
 801a0f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a0f6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a0fa:	00ed      	lsls	r5, r5, #3
 801a0fc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801a100:	b2ed      	uxtb	r5, r5
 801a102:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801a106:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a10a:	fb15 f504 	smulbb	r5, r5, r4
 801a10e:	fa5f f989 	uxtb.w	r9, r9
 801a112:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a116:	fb09 550c 	mla	r5, r9, ip, r5
 801a11a:	fb1a fa04 	smulbb	sl, sl, r4
 801a11e:	fa1f fe8e 	uxth.w	lr, lr
 801a122:	b2ad      	uxth	r5, r5
 801a124:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a128:	fb07 a70c 	mla	r7, r7, ip, sl
 801a12c:	f10e 0401 	add.w	r4, lr, #1
 801a130:	f105 0a01 	add.w	sl, r5, #1
 801a134:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801a138:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a13c:	b2bf      	uxth	r7, r7
 801a13e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a142:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a146:	ea4a 0e0e 	orr.w	lr, sl, lr
 801a14a:	f107 0a01 	add.w	sl, r7, #1
 801a14e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a152:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a156:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a15a:	9c02      	ldr	r4, [sp, #8]
 801a15c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801a160:	f820 e004 	strh.w	lr, [r0, r4]
 801a164:	e7aa      	b.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a166:	f04f 0900 	mov.w	r9, #0
 801a16a:	eba3 0409 	sub.w	r4, r3, r9
 801a16e:	2c00      	cmp	r4, #0
 801a170:	f77f af4a 	ble.w	801a008 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a174:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a178:	1414      	asrs	r4, r2, #16
 801a17a:	140d      	asrs	r5, r1, #16
 801a17c:	fb06 5504 	mla	r5, r6, r4, r5
 801a180:	9c01      	ldr	r4, [sp, #4]
 801a182:	5d64      	ldrb	r4, [r4, r5]
 801a184:	2cff      	cmp	r4, #255	; 0xff
 801a186:	d10b      	bne.n	801a1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a188:	9c00      	ldr	r4, [sp, #0]
 801a18a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801a18e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801a192:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a194:	4421      	add	r1, r4
 801a196:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a198:	f109 0901 	add.w	r9, r9, #1
 801a19c:	4422      	add	r2, r4
 801a19e:	e7e4      	b.n	801a16a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a1a0:	2c00      	cmp	r4, #0
 801a1a2:	d0f6      	beq.n	801a192 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a1a4:	9e00      	ldr	r6, [sp, #0]
 801a1a6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801a1aa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a1ae:	b2a7      	uxth	r7, r4
 801a1b0:	122e      	asrs	r6, r5, #8
 801a1b2:	43e4      	mvns	r4, r4
 801a1b4:	b2e4      	uxtb	r4, r4
 801a1b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a1ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1be:	fb16 f604 	smulbb	r6, r6, r4
 801a1c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a1c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a1ca:	00ed      	lsls	r5, r5, #3
 801a1cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a1d0:	b2ed      	uxtb	r5, r5
 801a1d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a1d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a1da:	fb15 f504 	smulbb	r5, r5, r4
 801a1de:	fa5f fe8e 	uxtb.w	lr, lr
 801a1e2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a1e6:	fb0e 5507 	mla	r5, lr, r7, r5
 801a1ea:	fb1a fa04 	smulbb	sl, sl, r4
 801a1ee:	fa1f fc8c 	uxth.w	ip, ip
 801a1f2:	b2ad      	uxth	r5, r5
 801a1f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a1f8:	fb06 a607 	mla	r6, r6, r7, sl
 801a1fc:	f10c 0401 	add.w	r4, ip, #1
 801a200:	f105 0a01 	add.w	sl, r5, #1
 801a204:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a208:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a20c:	b2b6      	uxth	r6, r6
 801a20e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a212:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a216:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a21a:	f106 0a01 	add.w	sl, r6, #1
 801a21e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a222:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a226:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a22a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a22e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a232:	e7ae      	b.n	801a192 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a234:	b005      	add	sp, #20
 801a236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a23a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a23a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a23e:	b085      	sub	sp, #20
 801a240:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a242:	9203      	str	r2, [sp, #12]
 801a244:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801a248:	9201      	str	r2, [sp, #4]
 801a24a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a24e:	9100      	str	r1, [sp, #0]
 801a250:	6841      	ldr	r1, [r0, #4]
 801a252:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a256:	fb01 2404 	mla	r4, r1, r4, r2
 801a25a:	6802      	ldr	r2, [r0, #0]
 801a25c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a260:	f8de 2000 	ldr.w	r2, [lr]
 801a264:	9202      	str	r2, [sp, #8]
 801a266:	9a01      	ldr	r2, [sp, #4]
 801a268:	43d6      	mvns	r6, r2
 801a26a:	b2f6      	uxtb	r6, r6
 801a26c:	9a00      	ldr	r2, [sp, #0]
 801a26e:	2a00      	cmp	r2, #0
 801a270:	dc03      	bgt.n	801a27a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a272:	9a03      	ldr	r2, [sp, #12]
 801a274:	2a00      	cmp	r2, #0
 801a276:	f340 8124 	ble.w	801a4c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a27a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a27c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a280:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a284:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a288:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a28a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a28e:	2b00      	cmp	r3, #0
 801a290:	dd0e      	ble.n	801a2b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a292:	1408      	asrs	r0, r1, #16
 801a294:	d405      	bmi.n	801a2a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a296:	4560      	cmp	r0, ip
 801a298:	da03      	bge.n	801a2a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a29a:	1410      	asrs	r0, r2, #16
 801a29c:	d401      	bmi.n	801a2a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a29e:	42b8      	cmp	r0, r7
 801a2a0:	db07      	blt.n	801a2b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a2a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a2a4:	4401      	add	r1, r0
 801a2a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a2a8:	3b01      	subs	r3, #1
 801a2aa:	4402      	add	r2, r0
 801a2ac:	3402      	adds	r4, #2
 801a2ae:	e7ee      	b.n	801a28e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a2b0:	d06e      	beq.n	801a390 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a2b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a2b4:	1e58      	subs	r0, r3, #1
 801a2b6:	fb05 1500 	mla	r5, r5, r0, r1
 801a2ba:	142d      	asrs	r5, r5, #16
 801a2bc:	d45c      	bmi.n	801a378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a2be:	4565      	cmp	r5, ip
 801a2c0:	da5a      	bge.n	801a378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a2c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a2c4:	fb05 2000 	mla	r0, r5, r0, r2
 801a2c8:	1400      	asrs	r0, r0, #16
 801a2ca:	d455      	bmi.n	801a378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a2cc:	42b8      	cmp	r0, r7
 801a2ce:	da53      	bge.n	801a378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a2d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a2d4:	4699      	mov	r9, r3
 801a2d6:	46a2      	mov	sl, r4
 801a2d8:	f1b9 0f00 	cmp.w	r9, #0
 801a2dc:	dd54      	ble.n	801a388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a2de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a2e2:	140d      	asrs	r5, r1, #16
 801a2e4:	1410      	asrs	r0, r2, #16
 801a2e6:	fb07 5000 	mla	r0, r7, r0, r5
 801a2ea:	9d02      	ldr	r5, [sp, #8]
 801a2ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a2f0:	f8ba 5000 	ldrh.w	r5, [sl]
 801a2f4:	122f      	asrs	r7, r5, #8
 801a2f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a2fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a2fe:	fb17 f706 	smulbb	r7, r7, r6
 801a302:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a306:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a30a:	00ed      	lsls	r5, r5, #3
 801a30c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a310:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a314:	10c7      	asrs	r7, r0, #3
 801a316:	b2ed      	uxtb	r5, r5
 801a318:	00c0      	lsls	r0, r0, #3
 801a31a:	fb18 f806 	smulbb	r8, r8, r6
 801a31e:	fb15 f506 	smulbb	r5, r5, r6
 801a322:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a326:	b2c0      	uxtb	r0, r0
 801a328:	fa1f fc8c 	uxth.w	ip, ip
 801a32c:	fb07 870b 	mla	r7, r7, fp, r8
 801a330:	fb00 500b 	mla	r0, r0, fp, r5
 801a334:	b280      	uxth	r0, r0
 801a336:	b2bf      	uxth	r7, r7
 801a338:	f10c 0501 	add.w	r5, ip, #1
 801a33c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a340:	f107 0801 	add.w	r8, r7, #1
 801a344:	1c45      	adds	r5, r0, #1
 801a346:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a34a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a34e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a350:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a354:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a358:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a35c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a360:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a364:	4401      	add	r1, r0
 801a366:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a368:	ea4c 0c08 	orr.w	ip, ip, r8
 801a36c:	f82a cb02 	strh.w	ip, [sl], #2
 801a370:	4402      	add	r2, r0
 801a372:	f109 39ff 	add.w	r9, r9, #4294967295
 801a376:	e7af      	b.n	801a2d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a378:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a37c:	f04f 0800 	mov.w	r8, #0
 801a380:	eb03 0008 	add.w	r0, r3, r8
 801a384:	2800      	cmp	r0, #0
 801a386:	dc41      	bgt.n	801a40c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a388:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a38c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a390:	9b00      	ldr	r3, [sp, #0]
 801a392:	2b00      	cmp	r3, #0
 801a394:	f340 8095 	ble.w	801a4c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a398:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a39c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a3a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a3a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3b2:	eef0 6a62 	vmov.f32	s13, s5
 801a3b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3c2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a3c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3ca:	eef0 6a43 	vmov.f32	s13, s6
 801a3ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3d2:	ee12 2a90 	vmov	r2, s5
 801a3d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3de:	ee13 2a10 	vmov	r2, s6
 801a3e2:	9311      	str	r3, [sp, #68]	; 0x44
 801a3e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3ea:	9312      	str	r3, [sp, #72]	; 0x48
 801a3ec:	9b00      	ldr	r3, [sp, #0]
 801a3ee:	9a03      	ldr	r2, [sp, #12]
 801a3f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3f4:	3b01      	subs	r3, #1
 801a3f6:	9300      	str	r3, [sp, #0]
 801a3f8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a3fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3fe:	eeb0 3a67 	vmov.f32	s6, s15
 801a402:	bf08      	it	eq
 801a404:	4613      	moveq	r3, r2
 801a406:	eef0 2a47 	vmov.f32	s5, s14
 801a40a:	e72f      	b.n	801a26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a40c:	140f      	asrs	r7, r1, #16
 801a40e:	d451      	bmi.n	801a4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a410:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a414:	42bd      	cmp	r5, r7
 801a416:	dd4d      	ble.n	801a4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a418:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a41c:	d44a      	bmi.n	801a4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a41e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a422:	4560      	cmp	r0, ip
 801a424:	dd46      	ble.n	801a4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a426:	b22d      	sxth	r5, r5
 801a428:	fb0c 7505 	mla	r5, ip, r5, r7
 801a42c:	9802      	ldr	r0, [sp, #8]
 801a42e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a432:	f06f 0501 	mvn.w	r5, #1
 801a436:	fb05 fb08 	mul.w	fp, r5, r8
 801a43a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a43e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a442:	122f      	asrs	r7, r5, #8
 801a444:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a448:	fb17 f706 	smulbb	r7, r7, r6
 801a44c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a450:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a454:	00ed      	lsls	r5, r5, #3
 801a456:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a45a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a45e:	10c7      	asrs	r7, r0, #3
 801a460:	b2ed      	uxtb	r5, r5
 801a462:	00c0      	lsls	r0, r0, #3
 801a464:	fb19 f906 	smulbb	r9, r9, r6
 801a468:	fb15 f506 	smulbb	r5, r5, r6
 801a46c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a470:	b2c0      	uxtb	r0, r0
 801a472:	fa1f fc8c 	uxth.w	ip, ip
 801a476:	fb07 970a 	mla	r7, r7, sl, r9
 801a47a:	fb00 500a 	mla	r0, r0, sl, r5
 801a47e:	b2bf      	uxth	r7, r7
 801a480:	b280      	uxth	r0, r0
 801a482:	f10c 0501 	add.w	r5, ip, #1
 801a486:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a48a:	f107 0901 	add.w	r9, r7, #1
 801a48e:	1c45      	adds	r5, r0, #1
 801a490:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a494:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a498:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a49c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a4a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a4a4:	ea45 0c0c 	orr.w	ip, r5, ip
 801a4a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a4ac:	ea4c 0c09 	orr.w	ip, ip, r9
 801a4b0:	f824 c00b 	strh.w	ip, [r4, fp]
 801a4b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a4b6:	4401      	add	r1, r0
 801a4b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a4ba:	f108 38ff 	add.w	r8, r8, #4294967295
 801a4be:	4402      	add	r2, r0
 801a4c0:	e75e      	b.n	801a380 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a4c2:	b005      	add	sp, #20
 801a4c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4cc:	b085      	sub	sp, #20
 801a4ce:	4693      	mov	fp, r2
 801a4d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a4d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a4d4:	6870      	ldr	r0, [r6, #4]
 801a4d6:	9101      	str	r1, [sp, #4]
 801a4d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a4dc:	fb00 2404 	mla	r4, r0, r4, r2
 801a4e0:	6832      	ldr	r2, [r6, #0]
 801a4e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a4e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4ea:	682a      	ldr	r2, [r5, #0]
 801a4ec:	9202      	str	r2, [sp, #8]
 801a4ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4f2:	9a01      	ldr	r2, [sp, #4]
 801a4f4:	2a00      	cmp	r2, #0
 801a4f6:	dc03      	bgt.n	801a500 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a4f8:	f1bb 0f00 	cmp.w	fp, #0
 801a4fc:	f340 809a 	ble.w	801a634 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a500:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a502:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a506:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a50a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a50e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a510:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a514:	2b00      	cmp	r3, #0
 801a516:	dd0c      	ble.n	801a532 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a518:	1406      	asrs	r6, r0, #16
 801a51a:	d405      	bmi.n	801a528 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a51c:	454e      	cmp	r6, r9
 801a51e:	da03      	bge.n	801a528 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a520:	1416      	asrs	r6, r2, #16
 801a522:	d401      	bmi.n	801a528 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a524:	4546      	cmp	r6, r8
 801a526:	db05      	blt.n	801a534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a528:	4470      	add	r0, lr
 801a52a:	4462      	add	r2, ip
 801a52c:	3b01      	subs	r3, #1
 801a52e:	3402      	adds	r4, #2
 801a530:	e7f0      	b.n	801a514 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a532:	d00f      	beq.n	801a554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a534:	1e5e      	subs	r6, r3, #1
 801a536:	fb0e 0706 	mla	r7, lr, r6, r0
 801a53a:	143f      	asrs	r7, r7, #16
 801a53c:	d541      	bpl.n	801a5c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a53e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a542:	4698      	mov	r8, r3
 801a544:	9603      	str	r6, [sp, #12]
 801a546:	f1b8 0f00 	cmp.w	r8, #0
 801a54a:	dc56      	bgt.n	801a5fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a54c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a550:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a554:	9b01      	ldr	r3, [sp, #4]
 801a556:	2b00      	cmp	r3, #0
 801a558:	dd6c      	ble.n	801a634 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a55a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a55e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a562:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a566:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a568:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a56c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a570:	eeb0 6a62 	vmov.f32	s12, s5
 801a574:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a578:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a57c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a580:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a584:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a588:	eeb0 6a43 	vmov.f32	s12, s6
 801a58c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a590:	ee12 2a90 	vmov	r2, s5
 801a594:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a598:	fb92 fef3 	sdiv	lr, r2, r3
 801a59c:	ee13 2a10 	vmov	r2, s6
 801a5a0:	fb92 fcf3 	sdiv	ip, r2, r3
 801a5a4:	9b01      	ldr	r3, [sp, #4]
 801a5a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5aa:	3b01      	subs	r3, #1
 801a5ac:	9301      	str	r3, [sp, #4]
 801a5ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a5b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5b4:	eeb0 3a67 	vmov.f32	s6, s15
 801a5b8:	bf08      	it	eq
 801a5ba:	465b      	moveq	r3, fp
 801a5bc:	eef0 2a47 	vmov.f32	s5, s14
 801a5c0:	e797      	b.n	801a4f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a5c2:	454f      	cmp	r7, r9
 801a5c4:	dabb      	bge.n	801a53e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5c6:	fb0c 2606 	mla	r6, ip, r6, r2
 801a5ca:	1436      	asrs	r6, r6, #16
 801a5cc:	d4b7      	bmi.n	801a53e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5ce:	4546      	cmp	r6, r8
 801a5d0:	dab5      	bge.n	801a53e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5d2:	461e      	mov	r6, r3
 801a5d4:	46a0      	mov	r8, r4
 801a5d6:	2e00      	cmp	r6, #0
 801a5d8:	ddb8      	ble.n	801a54c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a5da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a5de:	9902      	ldr	r1, [sp, #8]
 801a5e0:	1417      	asrs	r7, r2, #16
 801a5e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a5e6:	fb0a 9707 	mla	r7, sl, r7, r9
 801a5ea:	4470      	add	r0, lr
 801a5ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a5f0:	f828 7b02 	strh.w	r7, [r8], #2
 801a5f4:	4462      	add	r2, ip
 801a5f6:	3e01      	subs	r6, #1
 801a5f8:	e7ed      	b.n	801a5d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a5fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a5fe:	d414      	bmi.n	801a62a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a600:	68ae      	ldr	r6, [r5, #8]
 801a602:	454e      	cmp	r6, r9
 801a604:	dd11      	ble.n	801a62a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a606:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a60a:	d40e      	bmi.n	801a62a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a60c:	68ef      	ldr	r7, [r5, #12]
 801a60e:	4557      	cmp	r7, sl
 801a610:	dd0b      	ble.n	801a62a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a612:	b236      	sxth	r6, r6
 801a614:	fb0a 9606 	mla	r6, sl, r6, r9
 801a618:	9f02      	ldr	r7, [sp, #8]
 801a61a:	f06f 0101 	mvn.w	r1, #1
 801a61e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a622:	fb01 f608 	mul.w	r6, r1, r8
 801a626:	9903      	ldr	r1, [sp, #12]
 801a628:	538f      	strh	r7, [r1, r6]
 801a62a:	4470      	add	r0, lr
 801a62c:	4462      	add	r2, ip
 801a62e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a632:	e788      	b.n	801a546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a634:	b005      	add	sp, #20
 801a636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a63a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a63e:	b087      	sub	sp, #28
 801a640:	468b      	mov	fp, r1
 801a642:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a644:	9203      	str	r2, [sp, #12]
 801a646:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a64a:	9204      	str	r2, [sp, #16]
 801a64c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a650:	6841      	ldr	r1, [r0, #4]
 801a652:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a656:	fb01 2505 	mla	r5, r1, r5, r2
 801a65a:	6802      	ldr	r2, [r0, #0]
 801a65c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a660:	f8d9 2000 	ldr.w	r2, [r9]
 801a664:	9201      	str	r2, [sp, #4]
 801a666:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a66a:	f1bb 0f00 	cmp.w	fp, #0
 801a66e:	dc03      	bgt.n	801a678 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a670:	9a03      	ldr	r2, [sp, #12]
 801a672:	2a00      	cmp	r2, #0
 801a674:	f340 8159 	ble.w	801a92a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a678:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a67a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a67e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a682:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a686:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a688:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a68c:	2b00      	cmp	r3, #0
 801a68e:	dd0e      	ble.n	801a6ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a690:	1402      	asrs	r2, r0, #16
 801a692:	d405      	bmi.n	801a6a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a694:	42ba      	cmp	r2, r7
 801a696:	da03      	bge.n	801a6a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a698:	140a      	asrs	r2, r1, #16
 801a69a:	d401      	bmi.n	801a6a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a69c:	42b2      	cmp	r2, r6
 801a69e:	db07      	blt.n	801a6b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a6a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6a2:	4410      	add	r0, r2
 801a6a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6a6:	3b01      	subs	r3, #1
 801a6a8:	4411      	add	r1, r2
 801a6aa:	3502      	adds	r5, #2
 801a6ac:	e7ee      	b.n	801a68c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a6ae:	d017      	beq.n	801a6e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a6b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6b2:	1e5a      	subs	r2, r3, #1
 801a6b4:	fb04 0402 	mla	r4, r4, r2, r0
 801a6b8:	1424      	asrs	r4, r4, #16
 801a6ba:	d409      	bmi.n	801a6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a6bc:	42bc      	cmp	r4, r7
 801a6be:	da07      	bge.n	801a6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a6c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a6c2:	fb04 1202 	mla	r2, r4, r2, r1
 801a6c6:	1412      	asrs	r2, r2, #16
 801a6c8:	d402      	bmi.n	801a6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a6ca:	42b2      	cmp	r2, r6
 801a6cc:	f2c0 80bf 	blt.w	801a84e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a6d0:	2700      	movs	r7, #0
 801a6d2:	19da      	adds	r2, r3, r7
 801a6d4:	2a00      	cmp	r2, #0
 801a6d6:	dc3e      	bgt.n	801a756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a6d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6dc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a6e0:	f1bb 0f00 	cmp.w	fp, #0
 801a6e4:	f340 8121 	ble.w	801a92a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a6e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a6f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a6fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a702:	eeb0 6a62 	vmov.f32	s12, s5
 801a706:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a70a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a70e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a712:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a716:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a71a:	eeb0 6a43 	vmov.f32	s12, s6
 801a71e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a722:	ee12 2a90 	vmov	r2, s5
 801a726:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a72a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a72e:	ee13 2a10 	vmov	r2, s6
 801a732:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a736:	9313      	str	r3, [sp, #76]	; 0x4c
 801a738:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a73a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a73e:	9a03      	ldr	r2, [sp, #12]
 801a740:	9314      	str	r3, [sp, #80]	; 0x50
 801a742:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a746:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a748:	eeb0 3a67 	vmov.f32	s6, s15
 801a74c:	bf08      	it	eq
 801a74e:	4613      	moveq	r3, r2
 801a750:	eef0 2a47 	vmov.f32	s5, s14
 801a754:	e789      	b.n	801a66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a756:	1406      	asrs	r6, r0, #16
 801a758:	d42d      	bmi.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a75a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a75e:	42b4      	cmp	r4, r6
 801a760:	dd29      	ble.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a762:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a766:	d426      	bmi.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a768:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a76c:	4562      	cmp	r2, ip
 801a76e:	dd22      	ble.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a770:	b224      	sxth	r4, r4
 801a772:	9a01      	ldr	r2, [sp, #4]
 801a774:	fb0c 6404 	mla	r4, ip, r4, r6
 801a778:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a77c:	0e22      	lsrs	r2, r4, #24
 801a77e:	d01a      	beq.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a780:	9e04      	ldr	r6, [sp, #16]
 801a782:	4372      	muls	r2, r6
 801a784:	1c56      	adds	r6, r2, #1
 801a786:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a78a:	1212      	asrs	r2, r2, #8
 801a78c:	0a26      	lsrs	r6, r4, #8
 801a78e:	2aff      	cmp	r2, #255	; 0xff
 801a790:	9605      	str	r6, [sp, #20]
 801a792:	d116      	bne.n	801a7c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a794:	f06f 0201 	mvn.w	r2, #1
 801a798:	fb02 fc07 	mul.w	ip, r2, r7
 801a79c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a7a0:	0962      	lsrs	r2, r4, #5
 801a7a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a7a6:	f026 0607 	bic.w	r6, r6, #7
 801a7aa:	4316      	orrs	r6, r2
 801a7ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a7b0:	4326      	orrs	r6, r4
 801a7b2:	f825 600c 	strh.w	r6, [r5, ip]
 801a7b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a7b8:	4410      	add	r0, r2
 801a7ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7bc:	3f01      	subs	r7, #1
 801a7be:	4411      	add	r1, r2
 801a7c0:	e787      	b.n	801a6d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a7c2:	f06f 0601 	mvn.w	r6, #1
 801a7c6:	437e      	muls	r6, r7
 801a7c8:	fa1f fa82 	uxth.w	sl, r2
 801a7cc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a7d0:	9602      	str	r6, [sp, #8]
 801a7d2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a7d6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a7da:	43d2      	mvns	r2, r2
 801a7dc:	b2d2      	uxtb	r2, r2
 801a7de:	fb1c fc0a 	smulbb	ip, ip, sl
 801a7e2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a7e6:	fb0e ce02 	mla	lr, lr, r2, ip
 801a7ea:	b2e4      	uxtb	r4, r4
 801a7ec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a7f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a7f4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a7f8:	fa5f f888 	uxtb.w	r8, r8
 801a7fc:	fb14 f40a 	smulbb	r4, r4, sl
 801a800:	fb08 4402 	mla	r4, r8, r2, r4
 801a804:	fa1f fe8e 	uxth.w	lr, lr
 801a808:	fb16 f60a 	smulbb	r6, r6, sl
 801a80c:	b2a4      	uxth	r4, r4
 801a80e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a812:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a816:	f10e 0201 	add.w	r2, lr, #1
 801a81a:	1c66      	adds	r6, r4, #1
 801a81c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a820:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a824:	fa1f fc8c 	uxth.w	ip, ip
 801a828:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a82c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a830:	ea46 0e0e 	orr.w	lr, r6, lr
 801a834:	f10c 0601 	add.w	r6, ip, #1
 801a838:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a83c:	0976      	lsrs	r6, r6, #5
 801a83e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a842:	9a02      	ldr	r2, [sp, #8]
 801a844:	ea4e 0e06 	orr.w	lr, lr, r6
 801a848:	f825 e002 	strh.w	lr, [r5, r2]
 801a84c:	e7b3      	b.n	801a7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a84e:	f04f 0800 	mov.w	r8, #0
 801a852:	eba3 0208 	sub.w	r2, r3, r8
 801a856:	2a00      	cmp	r2, #0
 801a858:	f77f af3e 	ble.w	801a6d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a85c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a860:	1404      	asrs	r4, r0, #16
 801a862:	140a      	asrs	r2, r1, #16
 801a864:	fb06 4202 	mla	r2, r6, r2, r4
 801a868:	9c01      	ldr	r4, [sp, #4]
 801a86a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a86e:	0e22      	lsrs	r2, r4, #24
 801a870:	d016      	beq.n	801a8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a872:	9e04      	ldr	r6, [sp, #16]
 801a874:	4372      	muls	r2, r6
 801a876:	1c56      	adds	r6, r2, #1
 801a878:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a87c:	1212      	asrs	r2, r2, #8
 801a87e:	2aff      	cmp	r2, #255	; 0xff
 801a880:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a884:	d113      	bne.n	801a8ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a886:	0962      	lsrs	r2, r4, #5
 801a888:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a88c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a890:	f026 0607 	bic.w	r6, r6, #7
 801a894:	4316      	orrs	r6, r2
 801a896:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a89a:	4326      	orrs	r6, r4
 801a89c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a8a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a8a2:	4410      	add	r0, r2
 801a8a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a8a6:	f108 0801 	add.w	r8, r8, #1
 801a8aa:	4411      	add	r1, r2
 801a8ac:	e7d1      	b.n	801a852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a8ae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a8b2:	fa1f fa82 	uxth.w	sl, r2
 801a8b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a8ba:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a8be:	43d2      	mvns	r2, r2
 801a8c0:	b2d2      	uxtb	r2, r2
 801a8c2:	fb17 f70a 	smulbb	r7, r7, sl
 801a8c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8ca:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a8ce:	b2e4      	uxtb	r4, r4
 801a8d0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a8d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8d8:	fa5f fe8e 	uxtb.w	lr, lr
 801a8dc:	fb14 f40a 	smulbb	r4, r4, sl
 801a8e0:	fb0e 4402 	mla	r4, lr, r2, r4
 801a8e4:	b2f6      	uxtb	r6, r6
 801a8e6:	fa1f fc8c 	uxth.w	ip, ip
 801a8ea:	fb16 f60a 	smulbb	r6, r6, sl
 801a8ee:	b2a4      	uxth	r4, r4
 801a8f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8f4:	fb07 6702 	mla	r7, r7, r2, r6
 801a8f8:	f10c 0201 	add.w	r2, ip, #1
 801a8fc:	1c66      	adds	r6, r4, #1
 801a8fe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a902:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a906:	b2bf      	uxth	r7, r7
 801a908:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a90c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a910:	ea46 0c0c 	orr.w	ip, r6, ip
 801a914:	1c7e      	adds	r6, r7, #1
 801a916:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a91a:	0976      	lsrs	r6, r6, #5
 801a91c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a920:	ea4c 0c06 	orr.w	ip, ip, r6
 801a924:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a928:	e7ba      	b.n	801a8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a92a:	b007      	add	sp, #28
 801a92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a930 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a934:	b085      	sub	sp, #20
 801a936:	468b      	mov	fp, r1
 801a938:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a93a:	9203      	str	r2, [sp, #12]
 801a93c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a940:	6841      	ldr	r1, [r0, #4]
 801a942:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a946:	fb01 2404 	mla	r4, r1, r4, r2
 801a94a:	6802      	ldr	r2, [r0, #0]
 801a94c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a950:	f8d8 2000 	ldr.w	r2, [r8]
 801a954:	9201      	str	r2, [sp, #4]
 801a956:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a95a:	f1bb 0f00 	cmp.w	fp, #0
 801a95e:	dc03      	bgt.n	801a968 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a960:	9a03      	ldr	r2, [sp, #12]
 801a962:	2a00      	cmp	r2, #0
 801a964:	f340 814f 	ble.w	801ac06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a968:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a96a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a96e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a972:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a976:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a978:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a97c:	2b00      	cmp	r3, #0
 801a97e:	dd0e      	ble.n	801a99e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a980:	1408      	asrs	r0, r1, #16
 801a982:	d405      	bmi.n	801a990 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a984:	42b8      	cmp	r0, r7
 801a986:	da03      	bge.n	801a990 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a988:	1410      	asrs	r0, r2, #16
 801a98a:	d401      	bmi.n	801a990 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a98c:	42b0      	cmp	r0, r6
 801a98e:	db07      	blt.n	801a9a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a990:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a992:	4401      	add	r1, r0
 801a994:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a996:	3b01      	subs	r3, #1
 801a998:	4402      	add	r2, r0
 801a99a:	3402      	adds	r4, #2
 801a99c:	e7ee      	b.n	801a97c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a99e:	d017      	beq.n	801a9d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a9a2:	1e58      	subs	r0, r3, #1
 801a9a4:	fb05 1500 	mla	r5, r5, r0, r1
 801a9a8:	142d      	asrs	r5, r5, #16
 801a9aa:	d409      	bmi.n	801a9c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a9ac:	42bd      	cmp	r5, r7
 801a9ae:	da07      	bge.n	801a9c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a9b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a9b2:	fb05 2000 	mla	r0, r5, r0, r2
 801a9b6:	1400      	asrs	r0, r0, #16
 801a9b8:	d402      	bmi.n	801a9c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a9ba:	42b0      	cmp	r0, r6
 801a9bc:	f2c0 80ba 	blt.w	801ab34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a9c0:	2600      	movs	r6, #0
 801a9c2:	1998      	adds	r0, r3, r6
 801a9c4:	2800      	cmp	r0, #0
 801a9c6:	dc3e      	bgt.n	801aa46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a9c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9d0:	f1bb 0f00 	cmp.w	fp, #0
 801a9d4:	f340 8117 	ble.w	801ac06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a9d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a9e6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a9ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9f2:	eeb0 6a62 	vmov.f32	s12, s5
 801a9f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa02:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aa06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa0a:	eeb0 6a43 	vmov.f32	s12, s6
 801aa0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa12:	ee12 2a90 	vmov	r2, s5
 801aa16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa1e:	ee13 2a10 	vmov	r2, s6
 801aa22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa26:	9311      	str	r3, [sp, #68]	; 0x44
 801aa28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa2e:	9a03      	ldr	r2, [sp, #12]
 801aa30:	9312      	str	r3, [sp, #72]	; 0x48
 801aa32:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aa36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa38:	eeb0 3a67 	vmov.f32	s6, s15
 801aa3c:	bf08      	it	eq
 801aa3e:	4613      	moveq	r3, r2
 801aa40:	eef0 2a47 	vmov.f32	s5, s14
 801aa44:	e789      	b.n	801a95a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801aa46:	140f      	asrs	r7, r1, #16
 801aa48:	d424      	bmi.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa4a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801aa4e:	42bd      	cmp	r5, r7
 801aa50:	dd20      	ble.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aa56:	d41d      	bmi.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa58:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801aa5c:	4560      	cmp	r0, ip
 801aa5e:	dd19      	ble.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa60:	b22d      	sxth	r5, r5
 801aa62:	fb0c 7505 	mla	r5, ip, r5, r7
 801aa66:	9801      	ldr	r0, [sp, #4]
 801aa68:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801aa6c:	0e07      	lsrs	r7, r0, #24
 801aa6e:	2fff      	cmp	r7, #255	; 0xff
 801aa70:	d116      	bne.n	801aaa0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801aa72:	f06f 0501 	mvn.w	r5, #1
 801aa76:	fb05 f706 	mul.w	r7, r5, r6
 801aa7a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801aa7e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801aa82:	0945      	lsrs	r5, r0, #5
 801aa84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aa88:	ea4c 0505 	orr.w	r5, ip, r5
 801aa8c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801aa90:	4305      	orrs	r5, r0
 801aa92:	53e5      	strh	r5, [r4, r7]
 801aa94:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aa96:	4401      	add	r1, r0
 801aa98:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aa9a:	3e01      	subs	r6, #1
 801aa9c:	4402      	add	r2, r0
 801aa9e:	e790      	b.n	801a9c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aaa0:	b2fd      	uxtb	r5, r7
 801aaa2:	2f00      	cmp	r7, #0
 801aaa4:	d0f6      	beq.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aaa6:	f06f 0701 	mvn.w	r7, #1
 801aaaa:	4377      	muls	r7, r6
 801aaac:	fa1f f985 	uxth.w	r9, r5
 801aab0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801aab4:	9702      	str	r7, [sp, #8]
 801aab6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801aaba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801aabe:	43ed      	mvns	r5, r5
 801aac0:	b2ed      	uxtb	r5, r5
 801aac2:	fb17 f709 	smulbb	r7, r7, r9
 801aac6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aaca:	fb0c 7c05 	mla	ip, ip, r5, r7
 801aace:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801aad2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801aad6:	b2c0      	uxtb	r0, r0
 801aad8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aadc:	fa5f fe8e 	uxtb.w	lr, lr
 801aae0:	fb10 f009 	smulbb	r0, r0, r9
 801aae4:	fb0e 0005 	mla	r0, lr, r5, r0
 801aae8:	b280      	uxth	r0, r0
 801aaea:	fa1f fc8c 	uxth.w	ip, ip
 801aaee:	fb1a fa09 	smulbb	sl, sl, r9
 801aaf2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aaf6:	fb07 a705 	mla	r7, r7, r5, sl
 801aafa:	f100 0a01 	add.w	sl, r0, #1
 801aafe:	f10c 0501 	add.w	r5, ip, #1
 801ab02:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ab06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ab0a:	b2bf      	uxth	r7, r7
 801ab0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab10:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab14:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ab18:	f107 0a01 	add.w	sl, r7, #1
 801ab1c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ab20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab28:	9802      	ldr	r0, [sp, #8]
 801ab2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ab2e:	f824 c000 	strh.w	ip, [r4, r0]
 801ab32:	e7af      	b.n	801aa94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ab34:	f04f 0e00 	mov.w	lr, #0
 801ab38:	eba3 000e 	sub.w	r0, r3, lr
 801ab3c:	2800      	cmp	r0, #0
 801ab3e:	f77f af43 	ble.w	801a9c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ab42:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ab46:	140d      	asrs	r5, r1, #16
 801ab48:	1410      	asrs	r0, r2, #16
 801ab4a:	fb06 5000 	mla	r0, r6, r0, r5
 801ab4e:	9d01      	ldr	r5, [sp, #4]
 801ab50:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ab54:	0e2e      	lsrs	r6, r5, #24
 801ab56:	2eff      	cmp	r6, #255	; 0xff
 801ab58:	d112      	bne.n	801ab80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ab5a:	482c      	ldr	r0, [pc, #176]	; (801ac0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801ab5c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ab60:	0968      	lsrs	r0, r5, #5
 801ab62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab66:	4330      	orrs	r0, r6
 801ab68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ab6c:	4328      	orrs	r0, r5
 801ab6e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801ab72:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ab74:	4401      	add	r1, r0
 801ab76:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ab78:	f10e 0e01 	add.w	lr, lr, #1
 801ab7c:	4402      	add	r2, r0
 801ab7e:	e7db      	b.n	801ab38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ab80:	b2f0      	uxtb	r0, r6
 801ab82:	2e00      	cmp	r6, #0
 801ab84:	d0f5      	beq.n	801ab72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ab86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ab8a:	fa1f f980 	uxth.w	r9, r0
 801ab8e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ab92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ab96:	43c0      	mvns	r0, r0
 801ab98:	b2c0      	uxtb	r0, r0
 801ab9a:	fb16 f609 	smulbb	r6, r6, r9
 801ab9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aba2:	fb07 6700 	mla	r7, r7, r0, r6
 801aba6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801abaa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801abae:	b2ed      	uxtb	r5, r5
 801abb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801abb4:	fa5f fc8c 	uxtb.w	ip, ip
 801abb8:	fb15 f509 	smulbb	r5, r5, r9
 801abbc:	fb0c 5500 	mla	r5, ip, r0, r5
 801abc0:	b2bf      	uxth	r7, r7
 801abc2:	fb1a fa09 	smulbb	sl, sl, r9
 801abc6:	b2ad      	uxth	r5, r5
 801abc8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801abcc:	fb06 a600 	mla	r6, r6, r0, sl
 801abd0:	1c78      	adds	r0, r7, #1
 801abd2:	f105 0a01 	add.w	sl, r5, #1
 801abd6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801abda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abde:	b2b6      	uxth	r6, r6
 801abe0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abe4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801abe8:	ea4a 0707 	orr.w	r7, sl, r7
 801abec:	f106 0a01 	add.w	sl, r6, #1
 801abf0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801abf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abf8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abfc:	ea47 070a 	orr.w	r7, r7, sl
 801ac00:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801ac04:	e7b5      	b.n	801ab72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ac06:	b005      	add	sp, #20
 801ac08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac0c:	fffff800 	.word	0xfffff800

0801ac10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac14:	b087      	sub	sp, #28
 801ac16:	468b      	mov	fp, r1
 801ac18:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ac1a:	9203      	str	r2, [sp, #12]
 801ac1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ac20:	9204      	str	r2, [sp, #16]
 801ac22:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ac26:	6841      	ldr	r1, [r0, #4]
 801ac28:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801ac2c:	fb01 2404 	mla	r4, r1, r4, r2
 801ac30:	6802      	ldr	r2, [r0, #0]
 801ac32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac36:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ac3a:	3201      	adds	r2, #1
 801ac3c:	f022 0201 	bic.w	r2, r2, #1
 801ac40:	9200      	str	r2, [sp, #0]
 801ac42:	f8d9 2000 	ldr.w	r2, [r9]
 801ac46:	9201      	str	r2, [sp, #4]
 801ac48:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac4c:	f1bb 0f00 	cmp.w	fp, #0
 801ac50:	dc03      	bgt.n	801ac5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ac52:	9a03      	ldr	r2, [sp, #12]
 801ac54:	2a00      	cmp	r2, #0
 801ac56:	f340 8169 	ble.w	801af2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ac5a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ac5c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ac60:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ac64:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ac68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ac6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac6e:	2b00      	cmp	r3, #0
 801ac70:	dd0e      	ble.n	801ac90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ac72:	1402      	asrs	r2, r0, #16
 801ac74:	d405      	bmi.n	801ac82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac76:	42ba      	cmp	r2, r7
 801ac78:	da03      	bge.n	801ac82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac7a:	140a      	asrs	r2, r1, #16
 801ac7c:	d401      	bmi.n	801ac82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac7e:	42b2      	cmp	r2, r6
 801ac80:	db07      	blt.n	801ac92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ac82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac84:	4410      	add	r0, r2
 801ac86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac88:	3b01      	subs	r3, #1
 801ac8a:	4411      	add	r1, r2
 801ac8c:	3402      	adds	r4, #2
 801ac8e:	e7ee      	b.n	801ac6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ac90:	d017      	beq.n	801acc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ac92:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac94:	1e5a      	subs	r2, r3, #1
 801ac96:	fb05 0502 	mla	r5, r5, r2, r0
 801ac9a:	142d      	asrs	r5, r5, #16
 801ac9c:	d409      	bmi.n	801acb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ac9e:	42bd      	cmp	r5, r7
 801aca0:	da07      	bge.n	801acb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aca2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aca4:	fb05 1202 	mla	r2, r5, r2, r1
 801aca8:	1412      	asrs	r2, r2, #16
 801acaa:	d402      	bmi.n	801acb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801acac:	42b2      	cmp	r2, r6
 801acae:	f2c0 80c7 	blt.w	801ae40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801acb2:	2700      	movs	r7, #0
 801acb4:	19da      	adds	r2, r3, r7
 801acb6:	2a00      	cmp	r2, #0
 801acb8:	dc3e      	bgt.n	801ad38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801acba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801acc2:	f1bb 0f00 	cmp.w	fp, #0
 801acc6:	f340 8131 	ble.w	801af2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801acca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801acd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801acd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801acd8:	f1bb 0b01 	subs.w	fp, fp, #1
 801acdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ace0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ace4:	eeb0 6a62 	vmov.f32	s12, s5
 801ace8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acf4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801acf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acfc:	eeb0 6a43 	vmov.f32	s12, s6
 801ad00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad04:	ee12 2a90 	vmov	r2, s5
 801ad08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad10:	ee13 2a10 	vmov	r2, s6
 801ad14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad18:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad20:	9a03      	ldr	r2, [sp, #12]
 801ad22:	9314      	str	r3, [sp, #80]	; 0x50
 801ad24:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ad28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad2a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad2e:	bf08      	it	eq
 801ad30:	4613      	moveq	r3, r2
 801ad32:	eef0 2a47 	vmov.f32	s5, s14
 801ad36:	e789      	b.n	801ac4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ad38:	1405      	asrs	r5, r0, #16
 801ad3a:	d435      	bmi.n	801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad3c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ad40:	42aa      	cmp	r2, r5
 801ad42:	dd31      	ble.n	801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad44:	140e      	asrs	r6, r1, #16
 801ad46:	d42f      	bmi.n	801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad48:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ad4c:	42b2      	cmp	r2, r6
 801ad4e:	dd2b      	ble.n	801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad50:	9a00      	ldr	r2, [sp, #0]
 801ad52:	fb06 5502 	mla	r5, r6, r2, r5
 801ad56:	086a      	lsrs	r2, r5, #1
 801ad58:	9e01      	ldr	r6, [sp, #4]
 801ad5a:	5cb2      	ldrb	r2, [r6, r2]
 801ad5c:	07ee      	lsls	r6, r5, #31
 801ad5e:	bf54      	ite	pl
 801ad60:	f002 020f 	andpl.w	r2, r2, #15
 801ad64:	1112      	asrmi	r2, r2, #4
 801ad66:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ad6a:	b2d2      	uxtb	r2, r2
 801ad6c:	b1e2      	cbz	r2, 801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad6e:	9d04      	ldr	r5, [sp, #16]
 801ad70:	436a      	muls	r2, r5
 801ad72:	1c55      	adds	r5, r2, #1
 801ad74:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ad78:	4d6e      	ldr	r5, [pc, #440]	; (801af34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ad7a:	682d      	ldr	r5, [r5, #0]
 801ad7c:	1212      	asrs	r2, r2, #8
 801ad7e:	0a2e      	lsrs	r6, r5, #8
 801ad80:	2aff      	cmp	r2, #255	; 0xff
 801ad82:	9605      	str	r6, [sp, #20]
 801ad84:	d116      	bne.n	801adb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ad86:	f06f 0201 	mvn.w	r2, #1
 801ad8a:	fb02 fc07 	mul.w	ip, r2, r7
 801ad8e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ad92:	096a      	lsrs	r2, r5, #5
 801ad94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad98:	f026 0607 	bic.w	r6, r6, #7
 801ad9c:	4316      	orrs	r6, r2
 801ad9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ada2:	432e      	orrs	r6, r5
 801ada4:	f824 600c 	strh.w	r6, [r4, ip]
 801ada8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801adaa:	4410      	add	r0, r2
 801adac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801adae:	3f01      	subs	r7, #1
 801adb0:	4411      	add	r1, r2
 801adb2:	e77f      	b.n	801acb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801adb4:	f06f 0601 	mvn.w	r6, #1
 801adb8:	437e      	muls	r6, r7
 801adba:	fa1f fa82 	uxth.w	sl, r2
 801adbe:	f834 8006 	ldrh.w	r8, [r4, r6]
 801adc2:	9602      	str	r6, [sp, #8]
 801adc4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801adc8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801adcc:	43d2      	mvns	r2, r2
 801adce:	b2d2      	uxtb	r2, r2
 801add0:	fb1c fc0a 	smulbb	ip, ip, sl
 801add4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801add8:	fb0e ce02 	mla	lr, lr, r2, ip
 801addc:	b2ed      	uxtb	r5, r5
 801adde:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ade2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ade6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801adea:	fa5f f888 	uxtb.w	r8, r8
 801adee:	fb15 f50a 	smulbb	r5, r5, sl
 801adf2:	fb08 5502 	mla	r5, r8, r2, r5
 801adf6:	fa1f fe8e 	uxth.w	lr, lr
 801adfa:	fb16 f60a 	smulbb	r6, r6, sl
 801adfe:	b2ad      	uxth	r5, r5
 801ae00:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ae04:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ae08:	f10e 0201 	add.w	r2, lr, #1
 801ae0c:	1c6e      	adds	r6, r5, #1
 801ae0e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ae12:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ae16:	fa1f fc8c 	uxth.w	ip, ip
 801ae1a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ae1e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ae22:	ea46 0e0e 	orr.w	lr, r6, lr
 801ae26:	f10c 0601 	add.w	r6, ip, #1
 801ae2a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ae2e:	0976      	lsrs	r6, r6, #5
 801ae30:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ae34:	9a02      	ldr	r2, [sp, #8]
 801ae36:	ea4e 0e06 	orr.w	lr, lr, r6
 801ae3a:	f824 e002 	strh.w	lr, [r4, r2]
 801ae3e:	e7b3      	b.n	801ada8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ae40:	f04f 0800 	mov.w	r8, #0
 801ae44:	eba3 0208 	sub.w	r2, r3, r8
 801ae48:	2a00      	cmp	r2, #0
 801ae4a:	f77f af36 	ble.w	801acba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ae4e:	9e00      	ldr	r6, [sp, #0]
 801ae50:	1402      	asrs	r2, r0, #16
 801ae52:	140d      	asrs	r5, r1, #16
 801ae54:	fb06 2505 	mla	r5, r6, r5, r2
 801ae58:	086a      	lsrs	r2, r5, #1
 801ae5a:	9e01      	ldr	r6, [sp, #4]
 801ae5c:	5cb2      	ldrb	r2, [r6, r2]
 801ae5e:	07ed      	lsls	r5, r5, #31
 801ae60:	bf54      	ite	pl
 801ae62:	f002 020f 	andpl.w	r2, r2, #15
 801ae66:	1112      	asrmi	r2, r2, #4
 801ae68:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae6c:	b2d2      	uxtb	r2, r2
 801ae6e:	b1c2      	cbz	r2, 801aea2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ae70:	9d04      	ldr	r5, [sp, #16]
 801ae72:	436a      	muls	r2, r5
 801ae74:	1c55      	adds	r5, r2, #1
 801ae76:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ae7a:	4d2e      	ldr	r5, [pc, #184]	; (801af34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ae7c:	1212      	asrs	r2, r2, #8
 801ae7e:	682e      	ldr	r6, [r5, #0]
 801ae80:	2aff      	cmp	r2, #255	; 0xff
 801ae82:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ae86:	d113      	bne.n	801aeb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ae88:	0972      	lsrs	r2, r6, #5
 801ae8a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ae8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae92:	f025 0507 	bic.w	r5, r5, #7
 801ae96:	4315      	orrs	r5, r2
 801ae98:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ae9c:	4335      	orrs	r5, r6
 801ae9e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801aea2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aea4:	4410      	add	r0, r2
 801aea6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aea8:	f108 0801 	add.w	r8, r8, #1
 801aeac:	4411      	add	r1, r2
 801aeae:	e7c9      	b.n	801ae44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aeb0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801aeb4:	fa1f fa82 	uxth.w	sl, r2
 801aeb8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801aebc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801aec0:	43d2      	mvns	r2, r2
 801aec2:	b2d2      	uxtb	r2, r2
 801aec4:	fb17 f70a 	smulbb	r7, r7, sl
 801aec8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aecc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801aed0:	b2f6      	uxtb	r6, r6
 801aed2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801aed6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aeda:	fa5f fe8e 	uxtb.w	lr, lr
 801aede:	fb16 f60a 	smulbb	r6, r6, sl
 801aee2:	fb0e 6602 	mla	r6, lr, r2, r6
 801aee6:	b2ed      	uxtb	r5, r5
 801aee8:	fa1f fc8c 	uxth.w	ip, ip
 801aeec:	fb15 f50a 	smulbb	r5, r5, sl
 801aef0:	b2b6      	uxth	r6, r6
 801aef2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aef6:	fb07 5702 	mla	r7, r7, r2, r5
 801aefa:	f10c 0201 	add.w	r2, ip, #1
 801aefe:	1c75      	adds	r5, r6, #1
 801af00:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801af04:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801af08:	b2bf      	uxth	r7, r7
 801af0a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801af0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af12:	ea45 0c0c 	orr.w	ip, r5, ip
 801af16:	1c7d      	adds	r5, r7, #1
 801af18:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801af1c:	096d      	lsrs	r5, r5, #5
 801af1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801af22:	ea4c 0c05 	orr.w	ip, ip, r5
 801af26:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801af2a:	e7ba      	b.n	801aea2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801af2c:	b007      	add	sp, #28
 801af2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af32:	bf00      	nop
 801af34:	20012e6c 	.word	0x20012e6c

0801af38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af3c:	b087      	sub	sp, #28
 801af3e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801b24c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801af42:	9815      	ldr	r0, [sp, #84]	; 0x54
 801af44:	9205      	str	r2, [sp, #20]
 801af46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801af4a:	9101      	str	r1, [sp, #4]
 801af4c:	6841      	ldr	r1, [r0, #4]
 801af4e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801af52:	fb01 2404 	mla	r4, r1, r4, r2
 801af56:	6802      	ldr	r2, [r0, #0]
 801af58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801af5c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801af60:	3201      	adds	r2, #1
 801af62:	f022 0201 	bic.w	r2, r2, #1
 801af66:	9202      	str	r2, [sp, #8]
 801af68:	f8db 2000 	ldr.w	r2, [fp]
 801af6c:	9203      	str	r2, [sp, #12]
 801af6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801af72:	9a01      	ldr	r2, [sp, #4]
 801af74:	2a00      	cmp	r2, #0
 801af76:	dc03      	bgt.n	801af80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801af78:	9a05      	ldr	r2, [sp, #20]
 801af7a:	2a00      	cmp	r2, #0
 801af7c:	f340 8162 	ble.w	801b244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801af80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801af82:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801af86:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801af8a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801af8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801af90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801af94:	2b00      	cmp	r3, #0
 801af96:	dd0e      	ble.n	801afb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801af98:	1402      	asrs	r2, r0, #16
 801af9a:	d405      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801af9c:	42ba      	cmp	r2, r7
 801af9e:	da03      	bge.n	801afa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801afa0:	140a      	asrs	r2, r1, #16
 801afa2:	d401      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801afa4:	42b2      	cmp	r2, r6
 801afa6:	db07      	blt.n	801afb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801afa8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801afaa:	4410      	add	r0, r2
 801afac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afae:	3b01      	subs	r3, #1
 801afb0:	4411      	add	r1, r2
 801afb2:	3402      	adds	r4, #2
 801afb4:	e7ee      	b.n	801af94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801afb6:	d017      	beq.n	801afe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801afb8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801afba:	1e5a      	subs	r2, r3, #1
 801afbc:	fb05 0502 	mla	r5, r5, r2, r0
 801afc0:	142d      	asrs	r5, r5, #16
 801afc2:	d409      	bmi.n	801afd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801afc4:	42bd      	cmp	r5, r7
 801afc6:	da07      	bge.n	801afd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801afc8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801afca:	fb05 1202 	mla	r2, r5, r2, r1
 801afce:	1412      	asrs	r2, r2, #16
 801afd0:	d402      	bmi.n	801afd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801afd2:	42b2      	cmp	r2, r6
 801afd4:	f2c0 80c3 	blt.w	801b15e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801afd8:	2500      	movs	r5, #0
 801afda:	195a      	adds	r2, r3, r5
 801afdc:	2a00      	cmp	r2, #0
 801afde:	dc3f      	bgt.n	801b060 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801afe0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afe4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afe8:	9b01      	ldr	r3, [sp, #4]
 801afea:	2b00      	cmp	r3, #0
 801afec:	f340 812a 	ble.w	801b244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aff0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aff4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aff8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801affc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801affe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b002:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b006:	eeb0 6a62 	vmov.f32	s12, s5
 801b00a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b00e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b012:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b016:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b01a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b01e:	eeb0 6a43 	vmov.f32	s12, s6
 801b022:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b026:	ee12 2a90 	vmov	r2, s5
 801b02a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b02e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b032:	ee13 2a10 	vmov	r2, s6
 801b036:	9313      	str	r3, [sp, #76]	; 0x4c
 801b038:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b03a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b03e:	9314      	str	r3, [sp, #80]	; 0x50
 801b040:	9b01      	ldr	r3, [sp, #4]
 801b042:	9a05      	ldr	r2, [sp, #20]
 801b044:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b048:	3b01      	subs	r3, #1
 801b04a:	9301      	str	r3, [sp, #4]
 801b04c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b050:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b052:	eeb0 3a67 	vmov.f32	s6, s15
 801b056:	bf08      	it	eq
 801b058:	4613      	moveq	r3, r2
 801b05a:	eef0 2a47 	vmov.f32	s5, s14
 801b05e:	e788      	b.n	801af72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b060:	1406      	asrs	r6, r0, #16
 801b062:	d42c      	bmi.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b064:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b068:	42b2      	cmp	r2, r6
 801b06a:	dd28      	ble.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b06c:	140f      	asrs	r7, r1, #16
 801b06e:	d426      	bmi.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b070:	f8db 200c 	ldr.w	r2, [fp, #12]
 801b074:	42ba      	cmp	r2, r7
 801b076:	dd22      	ble.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b078:	9a02      	ldr	r2, [sp, #8]
 801b07a:	fb07 6602 	mla	r6, r7, r2, r6
 801b07e:	0872      	lsrs	r2, r6, #1
 801b080:	9f03      	ldr	r7, [sp, #12]
 801b082:	5cba      	ldrb	r2, [r7, r2]
 801b084:	07f6      	lsls	r6, r6, #31
 801b086:	bf54      	ite	pl
 801b088:	f002 020f 	andpl.w	r2, r2, #15
 801b08c:	1112      	asrmi	r2, r2, #4
 801b08e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b092:	b2d2      	uxtb	r2, r2
 801b094:	2aff      	cmp	r2, #255	; 0xff
 801b096:	d118      	bne.n	801b0ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801b098:	f8d8 2000 	ldr.w	r2, [r8]
 801b09c:	f06f 0601 	mvn.w	r6, #1
 801b0a0:	fb06 f705 	mul.w	r7, r6, r5
 801b0a4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801b0a8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801b0ac:	0956      	lsrs	r6, r2, #5
 801b0ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b0b2:	ea4c 0606 	orr.w	r6, ip, r6
 801b0b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b0ba:	4316      	orrs	r6, r2
 801b0bc:	53e6      	strh	r6, [r4, r7]
 801b0be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b0c0:	4410      	add	r0, r2
 801b0c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b0c4:	3d01      	subs	r5, #1
 801b0c6:	4411      	add	r1, r2
 801b0c8:	e787      	b.n	801afda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b0ca:	2a00      	cmp	r2, #0
 801b0cc:	d0f7      	beq.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b0ce:	f06f 0601 	mvn.w	r6, #1
 801b0d2:	436e      	muls	r6, r5
 801b0d4:	f8d8 c000 	ldr.w	ip, [r8]
 801b0d8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801b0dc:	9604      	str	r6, [sp, #16]
 801b0de:	fa1f f982 	uxth.w	r9, r2
 801b0e2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b0e6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801b0ea:	43d2      	mvns	r2, r2
 801b0ec:	b2d2      	uxtb	r2, r2
 801b0ee:	fb16 f609 	smulbb	r6, r6, r9
 801b0f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b0f6:	fb07 6702 	mla	r7, r7, r2, r6
 801b0fa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801b0fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b102:	fa5f fc8c 	uxtb.w	ip, ip
 801b106:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b10a:	fa5f fe8e 	uxtb.w	lr, lr
 801b10e:	fb1c fc09 	smulbb	ip, ip, r9
 801b112:	fb0e cc02 	mla	ip, lr, r2, ip
 801b116:	b2bf      	uxth	r7, r7
 801b118:	fb1a fa09 	smulbb	sl, sl, r9
 801b11c:	fa1f fc8c 	uxth.w	ip, ip
 801b120:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b124:	fb06 a602 	mla	r6, r6, r2, sl
 801b128:	1c7a      	adds	r2, r7, #1
 801b12a:	f10c 0a01 	add.w	sl, ip, #1
 801b12e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b132:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801b136:	b2b6      	uxth	r6, r6
 801b138:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b13c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b140:	ea4a 0707 	orr.w	r7, sl, r7
 801b144:	f106 0a01 	add.w	sl, r6, #1
 801b148:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b14c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b150:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b154:	9a04      	ldr	r2, [sp, #16]
 801b156:	ea47 070a 	orr.w	r7, r7, sl
 801b15a:	52a7      	strh	r7, [r4, r2]
 801b15c:	e7af      	b.n	801b0be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b15e:	f04f 0e00 	mov.w	lr, #0
 801b162:	eba3 020e 	sub.w	r2, r3, lr
 801b166:	2a00      	cmp	r2, #0
 801b168:	f77f af3a 	ble.w	801afe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b16c:	9e02      	ldr	r6, [sp, #8]
 801b16e:	1402      	asrs	r2, r0, #16
 801b170:	140d      	asrs	r5, r1, #16
 801b172:	fb06 2505 	mla	r5, r6, r5, r2
 801b176:	086a      	lsrs	r2, r5, #1
 801b178:	9e03      	ldr	r6, [sp, #12]
 801b17a:	5cb2      	ldrb	r2, [r6, r2]
 801b17c:	07ed      	lsls	r5, r5, #31
 801b17e:	bf54      	ite	pl
 801b180:	f002 020f 	andpl.w	r2, r2, #15
 801b184:	1112      	asrmi	r2, r2, #4
 801b186:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b18a:	b2d2      	uxtb	r2, r2
 801b18c:	2aff      	cmp	r2, #255	; 0xff
 801b18e:	d115      	bne.n	801b1bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801b190:	f8d8 5000 	ldr.w	r5, [r8]
 801b194:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801b198:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801b19c:	096a      	lsrs	r2, r5, #5
 801b19e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1a2:	4332      	orrs	r2, r6
 801b1a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b1a8:	432a      	orrs	r2, r5
 801b1aa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801b1ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1b0:	4410      	add	r0, r2
 801b1b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b1b4:	f10e 0e01 	add.w	lr, lr, #1
 801b1b8:	4411      	add	r1, r2
 801b1ba:	e7d2      	b.n	801b162 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b1bc:	2a00      	cmp	r2, #0
 801b1be:	d0f6      	beq.n	801b1ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b1c0:	f8d8 7000 	ldr.w	r7, [r8]
 801b1c4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b1c8:	fa1f f982 	uxth.w	r9, r2
 801b1cc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801b1d0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801b1d4:	43d2      	mvns	r2, r2
 801b1d6:	b2d2      	uxtb	r2, r2
 801b1d8:	fb15 f509 	smulbb	r5, r5, r9
 801b1dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b1e0:	fb06 5602 	mla	r6, r6, r2, r5
 801b1e4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801b1e8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b1ec:	b2ff      	uxtb	r7, r7
 801b1ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b1f2:	fa5f fc8c 	uxtb.w	ip, ip
 801b1f6:	fb17 f709 	smulbb	r7, r7, r9
 801b1fa:	fb0c 7702 	mla	r7, ip, r2, r7
 801b1fe:	b2b6      	uxth	r6, r6
 801b200:	fb1a fa09 	smulbb	sl, sl, r9
 801b204:	b2bf      	uxth	r7, r7
 801b206:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b20a:	fb05 a502 	mla	r5, r5, r2, sl
 801b20e:	1c72      	adds	r2, r6, #1
 801b210:	f107 0a01 	add.w	sl, r7, #1
 801b214:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b218:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b21c:	b2ad      	uxth	r5, r5
 801b21e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b222:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b226:	ea4a 0606 	orr.w	r6, sl, r6
 801b22a:	f105 0a01 	add.w	sl, r5, #1
 801b22e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b232:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b236:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b23a:	ea46 060a 	orr.w	r6, r6, sl
 801b23e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b242:	e7b4      	b.n	801b1ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b244:	b007      	add	sp, #28
 801b246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b24a:	bf00      	nop
 801b24c:	20012e6c 	.word	0x20012e6c

0801b250 <_ZN8touchgfx8LCD16bppD1Ev>:
 801b250:	4770      	bx	lr

0801b252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b252:	4770      	bx	lr

0801b254 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b254:	4770      	bx	lr

0801b256 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b256:	4770      	bx	lr

0801b258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b258:	4770      	bx	lr

0801b25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b25a:	4770      	bx	lr

0801b25c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b25c:	4770      	bx	lr

0801b25e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b25e:	4770      	bx	lr

0801b260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b260:	4770      	bx	lr

0801b262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b262:	4770      	bx	lr

0801b264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b264:	4770      	bx	lr

0801b266 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b266:	4770      	bx	lr

0801b268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b268:	4770      	bx	lr

0801b26a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b26a:	4770      	bx	lr

0801b26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b26c:	4770      	bx	lr

0801b26e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b26e:	4770      	bx	lr

0801b270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b270:	4770      	bx	lr

0801b272 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b272:	4770      	bx	lr

0801b274 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b274:	4770      	bx	lr

0801b276 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b276:	4770      	bx	lr

0801b278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b278:	4770      	bx	lr

0801b27a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b27a:	4770      	bx	lr

0801b27c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b27c:	4770      	bx	lr

0801b27e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b27e:	4770      	bx	lr

0801b280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b280:	4770      	bx	lr

0801b282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b282:	4770      	bx	lr

0801b284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b284:	4770      	bx	lr

0801b286 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b286:	4770      	bx	lr

0801b288 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b288:	4770      	bx	lr

0801b28a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b28a:	4770      	bx	lr

0801b28c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b28c:	4770      	bx	lr

0801b28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b28e:	4770      	bx	lr

0801b290 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b294:	b088      	sub	sp, #32
 801b296:	ac08      	add	r4, sp, #32
 801b298:	4606      	mov	r6, r0
 801b29a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b29e:	4620      	mov	r0, r4
 801b2a0:	4688      	mov	r8, r1
 801b2a2:	4691      	mov	r9, r2
 801b2a4:	f7fd fc62 	bl	8018b6c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b2a8:	6833      	ldr	r3, [r6, #0]
 801b2aa:	4605      	mov	r5, r0
 801b2ac:	4620      	mov	r0, r4
 801b2ae:	699f      	ldr	r7, [r3, #24]
 801b2b0:	f7fd fb70 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b2b4:	4682      	mov	sl, r0
 801b2b6:	4620      	mov	r0, r4
 801b2b8:	f7fd fba0 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b2bc:	9500      	str	r5, [sp, #0]
 801b2be:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b2c2:	464b      	mov	r3, r9
 801b2c4:	a806      	add	r0, sp, #24
 801b2c6:	4642      	mov	r2, r8
 801b2c8:	4631      	mov	r1, r6
 801b2ca:	47b8      	blx	r7
 801b2cc:	4628      	mov	r0, r5
 801b2ce:	b008      	add	sp, #32
 801b2d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b2d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b2d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b2d8:	2300      	movs	r3, #0
 801b2da:	9300      	str	r3, [sp, #0]
 801b2dc:	4b3d      	ldr	r3, [pc, #244]	; (801b3d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b2de:	781b      	ldrb	r3, [r3, #0]
 801b2e0:	2b00      	cmp	r3, #0
 801b2e2:	d137      	bne.n	801b354 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b2e4:	4a3c      	ldr	r2, [pc, #240]	; (801b3d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b2e6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b2ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b2ee:	2b00      	cmp	r3, #0
 801b2f0:	d132      	bne.n	801b358 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b2f2:	4b3a      	ldr	r3, [pc, #232]	; (801b3dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b2f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b2f8:	6808      	ldr	r0, [r1, #0]
 801b2fa:	6849      	ldr	r1, [r1, #4]
 801b2fc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b300:	ac02      	add	r4, sp, #8
 801b302:	ab02      	add	r3, sp, #8
 801b304:	c303      	stmia	r3!, {r0, r1}
 801b306:	4669      	mov	r1, sp
 801b308:	4620      	mov	r0, r4
 801b30a:	f7f9 fdc1 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b30e:	4668      	mov	r0, sp
 801b310:	f7f9 fd7a 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b314:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b318:	f8bd 2000 	ldrh.w	r2, [sp]
 801b31c:	4d30      	ldr	r5, [pc, #192]	; (801b3e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b31e:	4413      	add	r3, r2
 801b320:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b324:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b328:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b32c:	6828      	ldr	r0, [r5, #0]
 801b32e:	4413      	add	r3, r2
 801b330:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b334:	6803      	ldr	r3, [r0, #0]
 801b336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b338:	4798      	blx	r3
 801b33a:	f010 0f01 	tst.w	r0, #1
 801b33e:	462f      	mov	r7, r5
 801b340:	d00c      	beq.n	801b35c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b342:	6828      	ldr	r0, [r5, #0]
 801b344:	6803      	ldr	r3, [r0, #0]
 801b346:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b34a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b34c:	4798      	blx	r3
 801b34e:	b004      	add	sp, #16
 801b350:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b354:	4a21      	ldr	r2, [pc, #132]	; (801b3dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b356:	e7c6      	b.n	801b2e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b358:	4b1f      	ldr	r3, [pc, #124]	; (801b3d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b35a:	e7cb      	b.n	801b2f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b35c:	6838      	ldr	r0, [r7, #0]
 801b35e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b362:	6803      	ldr	r3, [r0, #0]
 801b364:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b36a:	4798      	blx	r3
 801b36c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b370:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b374:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b378:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b37c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b380:	6838      	ldr	r0, [r7, #0]
 801b382:	6803      	ldr	r3, [r0, #0]
 801b384:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b386:	4798      	blx	r3
 801b388:	4a13      	ldr	r2, [pc, #76]	; (801b3d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b38a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b38e:	8813      	ldrh	r3, [r2, #0]
 801b390:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b394:	fb03 1404 	mla	r4, r3, r4, r1
 801b398:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b39c:	435d      	muls	r5, r3
 801b39e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b3a2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b3a6:	4691      	mov	r9, r2
 801b3a8:	6838      	ldr	r0, [r7, #0]
 801b3aa:	42ac      	cmp	r4, r5
 801b3ac:	6803      	ldr	r3, [r0, #0]
 801b3ae:	d20e      	bcs.n	801b3ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b3b0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b3b4:	4632      	mov	r2, r6
 801b3b6:	4643      	mov	r3, r8
 801b3b8:	4621      	mov	r1, r4
 801b3ba:	47d0      	blx	sl
 801b3bc:	f8b9 3000 	ldrh.w	r3, [r9]
 801b3c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b3c4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b3c8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b3cc:	e7ec      	b.n	801b3a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b3ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b3d0:	4798      	blx	r3
 801b3d2:	e7bc      	b.n	801b34e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b3d4:	20012e54 	.word	0x20012e54
 801b3d8:	20012e56 	.word	0x20012e56
 801b3dc:	20012e58 	.word	0x20012e58
 801b3e0:	20012e5c 	.word	0x20012e5c

0801b3e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3e8:	b08b      	sub	sp, #44	; 0x2c
 801b3ea:	460f      	mov	r7, r1
 801b3ec:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b3f0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b3f4:	4616      	mov	r6, r2
 801b3f6:	f1bb 0f00 	cmp.w	fp, #0
 801b3fa:	d04a      	beq.n	801b492 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b3fc:	6810      	ldr	r0, [r2, #0]
 801b3fe:	6851      	ldr	r1, [r2, #4]
 801b400:	ad06      	add	r5, sp, #24
 801b402:	c503      	stmia	r5!, {r0, r1}
 801b404:	6818      	ldr	r0, [r3, #0]
 801b406:	6859      	ldr	r1, [r3, #4]
 801b408:	ad08      	add	r5, sp, #32
 801b40a:	c503      	stmia	r5!, {r0, r1}
 801b40c:	a806      	add	r0, sp, #24
 801b40e:	f7f9 fcfb 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b412:	4631      	mov	r1, r6
 801b414:	a808      	add	r0, sp, #32
 801b416:	f7f9 fd3b 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b41a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b41e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b422:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b426:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b42a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b42e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b432:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b436:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b43a:	4f5f      	ldr	r7, [pc, #380]	; (801b5b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b43c:	440a      	add	r2, r1
 801b43e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b442:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b446:	6838      	ldr	r0, [r7, #0]
 801b448:	4413      	add	r3, r2
 801b44a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b44e:	6803      	ldr	r3, [r0, #0]
 801b450:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b452:	4798      	blx	r3
 801b454:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b458:	46b9      	mov	r9, r7
 801b45a:	d11d      	bne.n	801b498 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b45c:	b9fc      	cbnz	r4, 801b49e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b45e:	f010 0f01 	tst.w	r0, #1
 801b462:	d01c      	beq.n	801b49e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b464:	f8d9 0000 	ldr.w	r0, [r9]
 801b468:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b46c:	6801      	ldr	r1, [r0, #0]
 801b46e:	f8cd b00c 	str.w	fp, [sp, #12]
 801b472:	2700      	movs	r7, #0
 801b474:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b478:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b47c:	9402      	str	r4, [sp, #8]
 801b47e:	b2ad      	uxth	r5, r5
 801b480:	fa1f f488 	uxth.w	r4, r8
 801b484:	9501      	str	r5, [sp, #4]
 801b486:	9400      	str	r4, [sp, #0]
 801b488:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b48a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b48e:	4631      	mov	r1, r6
 801b490:	47a0      	blx	r4
 801b492:	b00b      	add	sp, #44	; 0x2c
 801b494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b498:	f010 0f04 	tst.w	r0, #4
 801b49c:	e7e1      	b.n	801b462 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b49e:	f8d9 0000 	ldr.w	r0, [r9]
 801b4a2:	6803      	ldr	r3, [r0, #0]
 801b4a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b4a6:	4798      	blx	r3
 801b4a8:	4b44      	ldr	r3, [pc, #272]	; (801b5bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b4aa:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b4ae:	881a      	ldrh	r2, [r3, #0]
 801b4b0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b4b4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b4b8:	fb02 1404 	mla	r4, r2, r4, r1
 801b4bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b4c0:	469a      	mov	sl, r3
 801b4c2:	fb05 f502 	mul.w	r5, r5, r2
 801b4c6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b4ca:	d059      	beq.n	801b580 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b4cc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b4d0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b4d4:	fa1f f28b 	uxth.w	r2, fp
 801b4d8:	fa1f f989 	uxth.w	r9, r9
 801b4dc:	469e      	mov	lr, r3
 801b4de:	42ac      	cmp	r4, r5
 801b4e0:	d264      	bcs.n	801b5ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b4e2:	eb04 0a07 	add.w	sl, r4, r7
 801b4e6:	4554      	cmp	r4, sl
 801b4e8:	d23d      	bcs.n	801b566 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b4ea:	8821      	ldrh	r1, [r4, #0]
 801b4ec:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b4f0:	1208      	asrs	r0, r1, #8
 801b4f2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b4f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b4fa:	fb10 f009 	smulbb	r0, r0, r9
 801b4fe:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b502:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b506:	00c9      	lsls	r1, r1, #3
 801b508:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b50c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b510:	10d8      	asrs	r0, r3, #3
 801b512:	b2c9      	uxtb	r1, r1
 801b514:	00db      	lsls	r3, r3, #3
 801b516:	fa1f fc8c 	uxth.w	ip, ip
 801b51a:	fb1b fb09 	smulbb	fp, fp, r9
 801b51e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b522:	b2db      	uxtb	r3, r3
 801b524:	fb11 f109 	smulbb	r1, r1, r9
 801b528:	fb00 b002 	mla	r0, r0, r2, fp
 801b52c:	fb03 1302 	mla	r3, r3, r2, r1
 801b530:	f10c 0b01 	add.w	fp, ip, #1
 801b534:	b29b      	uxth	r3, r3
 801b536:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b53a:	b280      	uxth	r0, r0
 801b53c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b540:	f103 0c01 	add.w	ip, r3, #1
 801b544:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b548:	1c43      	adds	r3, r0, #1
 801b54a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b54e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b552:	0940      	lsrs	r0, r0, #5
 801b554:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b558:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b55c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b560:	f824 cb02 	strh.w	ip, [r4], #2
 801b564:	e7bf      	b.n	801b4e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b566:	f8be 3000 	ldrh.w	r3, [lr]
 801b56a:	eba3 0308 	sub.w	r3, r3, r8
 801b56e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b572:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b576:	eba3 0308 	sub.w	r3, r3, r8
 801b57a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b57e:	e7ae      	b.n	801b4de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b580:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b584:	f8d9 0000 	ldr.w	r0, [r9]
 801b588:	42ac      	cmp	r4, r5
 801b58a:	6803      	ldr	r3, [r0, #0]
 801b58c:	d20e      	bcs.n	801b5ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b58e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b592:	4632      	mov	r2, r6
 801b594:	463b      	mov	r3, r7
 801b596:	4621      	mov	r1, r4
 801b598:	47c0      	blx	r8
 801b59a:	f8ba 3000 	ldrh.w	r3, [sl]
 801b59e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b5a2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b5a6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b5aa:	e7eb      	b.n	801b584 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b5ac:	4b02      	ldr	r3, [pc, #8]	; (801b5b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b5ae:	6818      	ldr	r0, [r3, #0]
 801b5b0:	6803      	ldr	r3, [r0, #0]
 801b5b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b5b4:	4798      	blx	r3
 801b5b6:	e76c      	b.n	801b492 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b5b8:	20012e5c 	.word	0x20012e5c
 801b5bc:	20012e56 	.word	0x20012e56

0801b5c0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b5c0:	b510      	push	{r4, lr}
 801b5c2:	2184      	movs	r1, #132	; 0x84
 801b5c4:	4604      	mov	r4, r0
 801b5c6:	f00d fe4a 	bl	802925e <_ZdlPvj>
 801b5ca:	4620      	mov	r0, r4
 801b5cc:	bd10      	pop	{r4, pc}

0801b5ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b5ce:	b510      	push	{r4, lr}
 801b5d0:	2104      	movs	r1, #4
 801b5d2:	4604      	mov	r4, r0
 801b5d4:	f00d fe43 	bl	802925e <_ZdlPvj>
 801b5d8:	4620      	mov	r0, r4
 801b5da:	bd10      	pop	{r4, pc}

0801b5dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b5dc:	b510      	push	{r4, lr}
 801b5de:	2104      	movs	r1, #4
 801b5e0:	4604      	mov	r4, r0
 801b5e2:	f00d fe3c 	bl	802925e <_ZdlPvj>
 801b5e6:	4620      	mov	r0, r4
 801b5e8:	bd10      	pop	{r4, pc}

0801b5ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b5ea:	b510      	push	{r4, lr}
 801b5ec:	f640 0144 	movw	r1, #2116	; 0x844
 801b5f0:	4604      	mov	r4, r0
 801b5f2:	f00d fe34 	bl	802925e <_ZdlPvj>
 801b5f6:	4620      	mov	r0, r4
 801b5f8:	bd10      	pop	{r4, pc}

0801b5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b5fa:	b510      	push	{r4, lr}
 801b5fc:	2104      	movs	r1, #4
 801b5fe:	4604      	mov	r4, r0
 801b600:	f00d fe2d 	bl	802925e <_ZdlPvj>
 801b604:	4620      	mov	r0, r4
 801b606:	bd10      	pop	{r4, pc}

0801b608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b608:	b510      	push	{r4, lr}
 801b60a:	2104      	movs	r1, #4
 801b60c:	4604      	mov	r4, r0
 801b60e:	f00d fe26 	bl	802925e <_ZdlPvj>
 801b612:	4620      	mov	r0, r4
 801b614:	bd10      	pop	{r4, pc}

0801b616 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b616:	b510      	push	{r4, lr}
 801b618:	2104      	movs	r1, #4
 801b61a:	4604      	mov	r4, r0
 801b61c:	f00d fe1f 	bl	802925e <_ZdlPvj>
 801b620:	4620      	mov	r0, r4
 801b622:	bd10      	pop	{r4, pc}

0801b624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b624:	b510      	push	{r4, lr}
 801b626:	2104      	movs	r1, #4
 801b628:	4604      	mov	r4, r0
 801b62a:	f00d fe18 	bl	802925e <_ZdlPvj>
 801b62e:	4620      	mov	r0, r4
 801b630:	bd10      	pop	{r4, pc}

0801b632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b632:	b510      	push	{r4, lr}
 801b634:	2104      	movs	r1, #4
 801b636:	4604      	mov	r4, r0
 801b638:	f00d fe11 	bl	802925e <_ZdlPvj>
 801b63c:	4620      	mov	r0, r4
 801b63e:	bd10      	pop	{r4, pc}

0801b640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b640:	b510      	push	{r4, lr}
 801b642:	2104      	movs	r1, #4
 801b644:	4604      	mov	r4, r0
 801b646:	f00d fe0a 	bl	802925e <_ZdlPvj>
 801b64a:	4620      	mov	r0, r4
 801b64c:	bd10      	pop	{r4, pc}

0801b64e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b64e:	b510      	push	{r4, lr}
 801b650:	2104      	movs	r1, #4
 801b652:	4604      	mov	r4, r0
 801b654:	f00d fe03 	bl	802925e <_ZdlPvj>
 801b658:	4620      	mov	r0, r4
 801b65a:	bd10      	pop	{r4, pc}

0801b65c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b65c:	b510      	push	{r4, lr}
 801b65e:	2104      	movs	r1, #4
 801b660:	4604      	mov	r4, r0
 801b662:	f00d fdfc 	bl	802925e <_ZdlPvj>
 801b666:	4620      	mov	r0, r4
 801b668:	bd10      	pop	{r4, pc}

0801b66a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b66a:	b510      	push	{r4, lr}
 801b66c:	2104      	movs	r1, #4
 801b66e:	4604      	mov	r4, r0
 801b670:	f00d fdf5 	bl	802925e <_ZdlPvj>
 801b674:	4620      	mov	r0, r4
 801b676:	bd10      	pop	{r4, pc}

0801b678 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b678:	b510      	push	{r4, lr}
 801b67a:	2104      	movs	r1, #4
 801b67c:	4604      	mov	r4, r0
 801b67e:	f00d fdee 	bl	802925e <_ZdlPvj>
 801b682:	4620      	mov	r0, r4
 801b684:	bd10      	pop	{r4, pc}

0801b686 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b686:	b510      	push	{r4, lr}
 801b688:	2104      	movs	r1, #4
 801b68a:	4604      	mov	r4, r0
 801b68c:	f00d fde7 	bl	802925e <_ZdlPvj>
 801b690:	4620      	mov	r0, r4
 801b692:	bd10      	pop	{r4, pc}

0801b694 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b694:	b510      	push	{r4, lr}
 801b696:	2104      	movs	r1, #4
 801b698:	4604      	mov	r4, r0
 801b69a:	f00d fde0 	bl	802925e <_ZdlPvj>
 801b69e:	4620      	mov	r0, r4
 801b6a0:	bd10      	pop	{r4, pc}

0801b6a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b6a2:	b510      	push	{r4, lr}
 801b6a4:	2104      	movs	r1, #4
 801b6a6:	4604      	mov	r4, r0
 801b6a8:	f00d fdd9 	bl	802925e <_ZdlPvj>
 801b6ac:	4620      	mov	r0, r4
 801b6ae:	bd10      	pop	{r4, pc}

0801b6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b6b0:	b510      	push	{r4, lr}
 801b6b2:	2104      	movs	r1, #4
 801b6b4:	4604      	mov	r4, r0
 801b6b6:	f00d fdd2 	bl	802925e <_ZdlPvj>
 801b6ba:	4620      	mov	r0, r4
 801b6bc:	bd10      	pop	{r4, pc}

0801b6be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b6be:	b510      	push	{r4, lr}
 801b6c0:	2104      	movs	r1, #4
 801b6c2:	4604      	mov	r4, r0
 801b6c4:	f00d fdcb 	bl	802925e <_ZdlPvj>
 801b6c8:	4620      	mov	r0, r4
 801b6ca:	bd10      	pop	{r4, pc}

0801b6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b6cc:	b510      	push	{r4, lr}
 801b6ce:	2104      	movs	r1, #4
 801b6d0:	4604      	mov	r4, r0
 801b6d2:	f00d fdc4 	bl	802925e <_ZdlPvj>
 801b6d6:	4620      	mov	r0, r4
 801b6d8:	bd10      	pop	{r4, pc}

0801b6da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b6da:	b510      	push	{r4, lr}
 801b6dc:	2104      	movs	r1, #4
 801b6de:	4604      	mov	r4, r0
 801b6e0:	f00d fdbd 	bl	802925e <_ZdlPvj>
 801b6e4:	4620      	mov	r0, r4
 801b6e6:	bd10      	pop	{r4, pc}

0801b6e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b6e8:	b510      	push	{r4, lr}
 801b6ea:	2104      	movs	r1, #4
 801b6ec:	4604      	mov	r4, r0
 801b6ee:	f00d fdb6 	bl	802925e <_ZdlPvj>
 801b6f2:	4620      	mov	r0, r4
 801b6f4:	bd10      	pop	{r4, pc}

0801b6f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b6f6:	b510      	push	{r4, lr}
 801b6f8:	2104      	movs	r1, #4
 801b6fa:	4604      	mov	r4, r0
 801b6fc:	f00d fdaf 	bl	802925e <_ZdlPvj>
 801b700:	4620      	mov	r0, r4
 801b702:	bd10      	pop	{r4, pc}

0801b704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b704:	b510      	push	{r4, lr}
 801b706:	2104      	movs	r1, #4
 801b708:	4604      	mov	r4, r0
 801b70a:	f00d fda8 	bl	802925e <_ZdlPvj>
 801b70e:	4620      	mov	r0, r4
 801b710:	bd10      	pop	{r4, pc}

0801b712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b712:	b510      	push	{r4, lr}
 801b714:	2104      	movs	r1, #4
 801b716:	4604      	mov	r4, r0
 801b718:	f00d fda1 	bl	802925e <_ZdlPvj>
 801b71c:	4620      	mov	r0, r4
 801b71e:	bd10      	pop	{r4, pc}

0801b720 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b720:	b510      	push	{r4, lr}
 801b722:	2104      	movs	r1, #4
 801b724:	4604      	mov	r4, r0
 801b726:	f00d fd9a 	bl	802925e <_ZdlPvj>
 801b72a:	4620      	mov	r0, r4
 801b72c:	bd10      	pop	{r4, pc}

0801b72e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b72e:	b510      	push	{r4, lr}
 801b730:	2104      	movs	r1, #4
 801b732:	4604      	mov	r4, r0
 801b734:	f00d fd93 	bl	802925e <_ZdlPvj>
 801b738:	4620      	mov	r0, r4
 801b73a:	bd10      	pop	{r4, pc}

0801b73c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b73c:	b510      	push	{r4, lr}
 801b73e:	2104      	movs	r1, #4
 801b740:	4604      	mov	r4, r0
 801b742:	f00d fd8c 	bl	802925e <_ZdlPvj>
 801b746:	4620      	mov	r0, r4
 801b748:	bd10      	pop	{r4, pc}

0801b74a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b74a:	b510      	push	{r4, lr}
 801b74c:	2104      	movs	r1, #4
 801b74e:	4604      	mov	r4, r0
 801b750:	f00d fd85 	bl	802925e <_ZdlPvj>
 801b754:	4620      	mov	r0, r4
 801b756:	bd10      	pop	{r4, pc}

0801b758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b758:	b510      	push	{r4, lr}
 801b75a:	2104      	movs	r1, #4
 801b75c:	4604      	mov	r4, r0
 801b75e:	f00d fd7e 	bl	802925e <_ZdlPvj>
 801b762:	4620      	mov	r0, r4
 801b764:	bd10      	pop	{r4, pc}

0801b766 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b766:	b510      	push	{r4, lr}
 801b768:	2104      	movs	r1, #4
 801b76a:	4604      	mov	r4, r0
 801b76c:	f00d fd77 	bl	802925e <_ZdlPvj>
 801b770:	4620      	mov	r0, r4
 801b772:	bd10      	pop	{r4, pc}

0801b774 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b774:	b510      	push	{r4, lr}
 801b776:	2104      	movs	r1, #4
 801b778:	4604      	mov	r4, r0
 801b77a:	f00d fd70 	bl	802925e <_ZdlPvj>
 801b77e:	4620      	mov	r0, r4
 801b780:	bd10      	pop	{r4, pc}
	...

0801b784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b788:	b08f      	sub	sp, #60	; 0x3c
 801b78a:	461c      	mov	r4, r3
 801b78c:	9205      	str	r2, [sp, #20]
 801b78e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b792:	9100      	str	r1, [sp, #0]
 801b794:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b796:	9201      	str	r2, [sp, #4]
 801b798:	2a00      	cmp	r2, #0
 801b79a:	f000 8115 	beq.w	801b9c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b79e:	6820      	ldr	r0, [r4, #0]
 801b7a0:	6861      	ldr	r1, [r4, #4]
 801b7a2:	aa0a      	add	r2, sp, #40	; 0x28
 801b7a4:	c203      	stmia	r2!, {r0, r1}
 801b7a6:	6818      	ldr	r0, [r3, #0]
 801b7a8:	6859      	ldr	r1, [r3, #4]
 801b7aa:	aa0c      	add	r2, sp, #48	; 0x30
 801b7ac:	c203      	stmia	r2!, {r0, r1}
 801b7ae:	a80a      	add	r0, sp, #40	; 0x28
 801b7b0:	f7f9 fb2a 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7b4:	4621      	mov	r1, r4
 801b7b6:	a80c      	add	r0, sp, #48	; 0x30
 801b7b8:	f7f9 fb6a 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b7c0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b7c4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b7c8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b7cc:	bfde      	ittt	le
 801b7ce:	b2b3      	uxthle	r3, r6
 801b7d0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b7d4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b7d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b7dc:	bfc8      	it	gt
 801b7de:	2301      	movgt	r3, #1
 801b7e0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b7e4:	fa1f fc81 	uxth.w	ip, r1
 801b7e8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b7ec:	fb14 f406 	smulbb	r4, r4, r6
 801b7f0:	441d      	add	r5, r3
 801b7f2:	4404      	add	r4, r0
 801b7f4:	4661      	mov	r1, ip
 801b7f6:	3d01      	subs	r5, #1
 801b7f8:	b2a4      	uxth	r4, r4
 801b7fa:	fb95 f5f3 	sdiv	r5, r5, r3
 801b7fe:	b131      	cbz	r1, 801b80e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b800:	9b05      	ldr	r3, [sp, #20]
 801b802:	9900      	ldr	r1, [sp, #0]
 801b804:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b808:	ba1b      	rev	r3, r3
 801b80a:	4419      	add	r1, r3
 801b80c:	9100      	str	r1, [sp, #0]
 801b80e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b812:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b816:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b81a:	4418      	add	r0, r3
 801b81c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b820:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b824:	441a      	add	r2, r3
 801b826:	4b6a      	ldr	r3, [pc, #424]	; (801b9d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b828:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b82c:	6818      	ldr	r0, [r3, #0]
 801b82e:	6803      	ldr	r3, [r0, #0]
 801b830:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b832:	4798      	blx	r3
 801b834:	4967      	ldr	r1, [pc, #412]	; (801b9d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b836:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b83a:	880b      	ldrh	r3, [r1, #0]
 801b83c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b840:	9109      	str	r1, [sp, #36]	; 0x24
 801b842:	fb03 c202 	mla	r2, r3, r2, ip
 801b846:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b84a:	4373      	muls	r3, r6
 801b84c:	b2ad      	uxth	r5, r5
 801b84e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b852:	00ad      	lsls	r5, r5, #2
 801b854:	9306      	str	r3, [sp, #24]
 801b856:	1d2b      	adds	r3, r5, #4
 801b858:	9307      	str	r3, [sp, #28]
 801b85a:	9b01      	ldr	r3, [sp, #4]
 801b85c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b860:	9103      	str	r1, [sp, #12]
 801b862:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b866:	2c00      	cmp	r4, #0
 801b868:	bf0c      	ite	eq
 801b86a:	46c6      	moveq	lr, r8
 801b86c:	f04f 0e00 	movne.w	lr, #0
 801b870:	2300      	movs	r3, #0
 801b872:	b292      	uxth	r2, r2
 801b874:	fa1f fe8e 	uxth.w	lr, lr
 801b878:	9302      	str	r3, [sp, #8]
 801b87a:	9204      	str	r2, [sp, #16]
 801b87c:	9a06      	ldr	r2, [sp, #24]
 801b87e:	4282      	cmp	r2, r0
 801b880:	f240 809d 	bls.w	801b9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b884:	b963      	cbnz	r3, 801b8a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b886:	9b00      	ldr	r3, [sp, #0]
 801b888:	781a      	ldrb	r2, [r3, #0]
 801b88a:	0993      	lsrs	r3, r2, #6
 801b88c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b890:	9202      	str	r2, [sp, #8]
 801b892:	1e5a      	subs	r2, r3, #1
 801b894:	2a02      	cmp	r2, #2
 801b896:	d815      	bhi.n	801b8c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b898:	9a00      	ldr	r2, [sp, #0]
 801b89a:	3201      	adds	r2, #1
 801b89c:	9200      	str	r2, [sp, #0]
 801b89e:	b29b      	uxth	r3, r3
 801b8a0:	b1b4      	cbz	r4, 801b8d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b8a2:	429c      	cmp	r4, r3
 801b8a4:	bf95      	itete	ls
 801b8a6:	1b1c      	subls	r4, r3, r4
 801b8a8:	1ae4      	subhi	r4, r4, r3
 801b8aa:	fa1f fa84 	uxthls.w	sl, r4
 801b8ae:	b2a4      	uxthhi	r4, r4
 801b8b0:	bf87      	ittee	hi
 801b8b2:	4671      	movhi	r1, lr
 801b8b4:	f04f 0a00 	movhi.w	sl, #0
 801b8b8:	fa1f f188 	uxthls.w	r1, r8
 801b8bc:	2400      	movls	r4, #0
 801b8be:	4653      	mov	r3, sl
 801b8c0:	468e      	mov	lr, r1
 801b8c2:	e7db      	b.n	801b87c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b8c4:	9a00      	ldr	r2, [sp, #0]
 801b8c6:	9b00      	ldr	r3, [sp, #0]
 801b8c8:	3202      	adds	r2, #2
 801b8ca:	785b      	ldrb	r3, [r3, #1]
 801b8cc:	9200      	str	r2, [sp, #0]
 801b8ce:	e7e7      	b.n	801b8a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b8d0:	2202      	movs	r2, #2
 801b8d2:	4615      	mov	r5, r2
 801b8d4:	9907      	ldr	r1, [sp, #28]
 801b8d6:	9a02      	ldr	r2, [sp, #8]
 801b8d8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b8dc:	9905      	ldr	r1, [sp, #20]
 801b8de:	4573      	cmp	r3, lr
 801b8e0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b8e4:	9a01      	ldr	r2, [sp, #4]
 801b8e6:	bf2b      	itete	cs
 801b8e8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b8ec:	ebae 0103 	subcc.w	r1, lr, r3
 801b8f0:	46f1      	movcs	r9, lr
 801b8f2:	4699      	movcc	r9, r3
 801b8f4:	bf27      	ittee	cs
 801b8f6:	fa1f fa8a 	uxthcs.w	sl, sl
 801b8fa:	4621      	movcs	r1, r4
 801b8fc:	b289      	uxthcc	r1, r1
 801b8fe:	46a2      	movcc	sl, r4
 801b900:	2aff      	cmp	r2, #255	; 0xff
 801b902:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b906:	d105      	bne.n	801b914 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b908:	4481      	add	r9, r0
 801b90a:	4581      	cmp	r9, r0
 801b90c:	d045      	beq.n	801b99a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b90e:	f820 cb02 	strh.w	ip, [r0], #2
 801b912:	e7fa      	b.n	801b90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b914:	9d03      	ldr	r5, [sp, #12]
 801b916:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b91a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b91e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b922:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b926:	436a      	muls	r2, r5
 801b928:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b92c:	fa5f fc8c 	uxtb.w	ip, ip
 801b930:	9208      	str	r2, [sp, #32]
 801b932:	fb0b fb05 	mul.w	fp, fp, r5
 801b936:	fb0c fc05 	mul.w	ip, ip, r5
 801b93a:	4481      	add	r9, r0
 801b93c:	4581      	cmp	r9, r0
 801b93e:	d02c      	beq.n	801b99a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b940:	8802      	ldrh	r2, [r0, #0]
 801b942:	9d04      	ldr	r5, [sp, #16]
 801b944:	9f04      	ldr	r7, [sp, #16]
 801b946:	1216      	asrs	r6, r2, #8
 801b948:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b94c:	fb16 f605 	smulbb	r6, r6, r5
 801b950:	9d08      	ldr	r5, [sp, #32]
 801b952:	442e      	add	r6, r5
 801b954:	10d5      	asrs	r5, r2, #3
 801b956:	00d2      	lsls	r2, r2, #3
 801b958:	b2d2      	uxtb	r2, r2
 801b95a:	fb12 f207 	smulbb	r2, r2, r7
 801b95e:	b2b6      	uxth	r6, r6
 801b960:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b964:	4462      	add	r2, ip
 801b966:	fb15 f507 	smulbb	r5, r5, r7
 801b96a:	b292      	uxth	r2, r2
 801b96c:	1c77      	adds	r7, r6, #1
 801b96e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b972:	1c57      	adds	r7, r2, #1
 801b974:	445d      	add	r5, fp
 801b976:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b97a:	b2ad      	uxth	r5, r5
 801b97c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b980:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b984:	4316      	orrs	r6, r2
 801b986:	1c6a      	adds	r2, r5, #1
 801b988:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b98c:	096d      	lsrs	r5, r5, #5
 801b98e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b992:	432e      	orrs	r6, r5
 801b994:	f820 6b02 	strh.w	r6, [r0], #2
 801b998:	e7d0      	b.n	801b93c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b99a:	4573      	cmp	r3, lr
 801b99c:	d38f      	bcc.n	801b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b99e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b9a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b9a4:	fa1f f188 	uxth.w	r1, r8
 801b9a8:	1a64      	subs	r4, r4, r1
 801b9aa:	881b      	ldrh	r3, [r3, #0]
 801b9ac:	b2a4      	uxth	r4, r4
 801b9ae:	2c00      	cmp	r4, #0
 801b9b0:	eba3 0308 	sub.w	r3, r3, r8
 801b9b4:	bf18      	it	ne
 801b9b6:	2100      	movne	r1, #0
 801b9b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b9bc:	e77f      	b.n	801b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b9be:	4b04      	ldr	r3, [pc, #16]	; (801b9d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b9c0:	6818      	ldr	r0, [r3, #0]
 801b9c2:	6803      	ldr	r3, [r0, #0]
 801b9c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b9c6:	4798      	blx	r3
 801b9c8:	b00f      	add	sp, #60	; 0x3c
 801b9ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9ce:	bf00      	nop
 801b9d0:	20012e5c 	.word	0x20012e5c
 801b9d4:	20012e56 	.word	0x20012e56

0801b9d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9dc:	b09f      	sub	sp, #124	; 0x7c
 801b9de:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b9e2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b9e6:	9209      	str	r2, [sp, #36]	; 0x24
 801b9e8:	461d      	mov	r5, r3
 801b9ea:	4604      	mov	r4, r0
 801b9ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9ee:	2a00      	cmp	r2, #0
 801b9f0:	f000 81eb 	beq.w	801bdca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b9f4:	6828      	ldr	r0, [r5, #0]
 801b9f6:	6869      	ldr	r1, [r5, #4]
 801b9f8:	aa1a      	add	r2, sp, #104	; 0x68
 801b9fa:	c203      	stmia	r2!, {r0, r1}
 801b9fc:	6818      	ldr	r0, [r3, #0]
 801b9fe:	6859      	ldr	r1, [r3, #4]
 801ba00:	aa1c      	add	r2, sp, #112	; 0x70
 801ba02:	c203      	stmia	r2!, {r0, r1}
 801ba04:	a81a      	add	r0, sp, #104	; 0x68
 801ba06:	f7f9 f9ff 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba0a:	4629      	mov	r1, r5
 801ba0c:	a81c      	add	r0, sp, #112	; 0x70
 801ba0e:	f7f9 fa3f 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba12:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ba16:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801ba1a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801ba1e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ba22:	bfd7      	itett	le
 801ba24:	b29a      	uxthle	r2, r3
 801ba26:	2201      	movgt	r2, #1
 801ba28:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ba2c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ba30:	9202      	str	r2, [sp, #8]
 801ba32:	9802      	ldr	r0, [sp, #8]
 801ba34:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ba38:	fb92 f0f0 	sdiv	r0, r2, r0
 801ba3c:	b280      	uxth	r0, r0
 801ba3e:	9010      	str	r0, [sp, #64]	; 0x40
 801ba40:	9902      	ldr	r1, [sp, #8]
 801ba42:	9802      	ldr	r0, [sp, #8]
 801ba44:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ba46:	4488      	add	r8, r1
 801ba48:	fb05 2510 	mls	r5, r5, r0, r2
 801ba4c:	fb15 f503 	smulbb	r5, r5, r3
 801ba50:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba54:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ba58:	fb98 f8f1 	sdiv	r8, r8, r1
 801ba5c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801ba60:	440d      	add	r5, r1
 801ba62:	4419      	add	r1, r3
 801ba64:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801ba68:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801ba6c:	441a      	add	r2, r3
 801ba6e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801ba72:	9304      	str	r3, [sp, #16]
 801ba74:	4b95      	ldr	r3, [pc, #596]	; (801bccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801ba76:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801ba7a:	6818      	ldr	r0, [r3, #0]
 801ba7c:	6803      	ldr	r3, [r0, #0]
 801ba7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba80:	4798      	blx	r3
 801ba82:	4b93      	ldr	r3, [pc, #588]	; (801bcd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801ba84:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801ba88:	881a      	ldrh	r2, [r3, #0]
 801ba8a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801ba8e:	9318      	str	r3, [sp, #96]	; 0x60
 801ba90:	fb02 7101 	mla	r1, r2, r1, r7
 801ba94:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ba98:	4356      	muls	r6, r2
 801ba9a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801ba9e:	f108 0801 	add.w	r8, r8, #1
 801baa2:	920a      	str	r2, [sp, #40]	; 0x28
 801baa4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801baa6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801baaa:	930f      	str	r3, [sp, #60]	; 0x3c
 801baac:	fa1f f888 	uxth.w	r8, r8
 801bab0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801bab4:	f108 0204 	add.w	r2, r8, #4
 801bab8:	9211      	str	r2, [sp, #68]	; 0x44
 801baba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801babc:	4b85      	ldr	r3, [pc, #532]	; (801bcd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801babe:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801bac2:	b2ad      	uxth	r5, r5
 801bac4:	9215      	str	r2, [sp, #84]	; 0x54
 801bac6:	2d00      	cmp	r5, #0
 801bac8:	9a04      	ldr	r2, [sp, #16]
 801baca:	f04f 0100 	mov.w	r1, #0
 801bace:	bf18      	it	ne
 801bad0:	2200      	movne	r2, #0
 801bad2:	1b1b      	subs	r3, r3, r4
 801bad4:	b292      	uxth	r2, r2
 801bad6:	910d      	str	r1, [sp, #52]	; 0x34
 801bad8:	9319      	str	r3, [sp, #100]	; 0x64
 801bada:	9910      	ldr	r1, [sp, #64]	; 0x40
 801badc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bade:	fa11 f383 	uxtah	r3, r1, r3
 801bae2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bae4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bae8:	3304      	adds	r3, #4
 801baea:	9306      	str	r3, [sp, #24]
 801baec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801baee:	4283      	cmp	r3, r0
 801baf0:	f240 8166 	bls.w	801bdc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801baf4:	9902      	ldr	r1, [sp, #8]
 801baf6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801bafa:	fbb5 f3f3 	udiv	r3, r5, r3
 801bafe:	1acb      	subs	r3, r1, r3
 801bb00:	b29b      	uxth	r3, r3
 801bb02:	9316      	str	r3, [sp, #88]	; 0x58
 801bb04:	9b06      	ldr	r3, [sp, #24]
 801bb06:	9e06      	ldr	r6, [sp, #24]
 801bb08:	7859      	ldrb	r1, [r3, #1]
 801bb0a:	789b      	ldrb	r3, [r3, #2]
 801bb0c:	7836      	ldrb	r6, [r6, #0]
 801bb0e:	9612      	str	r6, [sp, #72]	; 0x48
 801bb10:	021b      	lsls	r3, r3, #8
 801bb12:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801bb16:	9906      	ldr	r1, [sp, #24]
 801bb18:	78c9      	ldrb	r1, [r1, #3]
 801bb1a:	430b      	orrs	r3, r1
 801bb1c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801bb1e:	3601      	adds	r6, #1
 801bb20:	4419      	add	r1, r3
 801bb22:	9605      	str	r6, [sp, #20]
 801bb24:	1c4e      	adds	r6, r1, #1
 801bb26:	9603      	str	r6, [sp, #12]
 801bb28:	7849      	ldrb	r1, [r1, #1]
 801bb2a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bb2c:	0209      	lsls	r1, r1, #8
 801bb2e:	5cf3      	ldrb	r3, [r6, r3]
 801bb30:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801bb34:	4319      	orrs	r1, r3
 801bb36:	b28b      	uxth	r3, r1
 801bb38:	930c      	str	r3, [sp, #48]	; 0x30
 801bb3a:	2300      	movs	r3, #0
 801bb3c:	f04f 0a01 	mov.w	sl, #1
 801bb40:	9307      	str	r3, [sp, #28]
 801bb42:	469c      	mov	ip, r3
 801bb44:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bb48:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801bb4c:	46d3      	mov	fp, sl
 801bb4e:	4657      	mov	r7, sl
 801bb50:	930e      	str	r3, [sp, #56]	; 0x38
 801bb52:	2d00      	cmp	r5, #0
 801bb54:	d07e      	beq.n	801bc54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801bb56:	42af      	cmp	r7, r5
 801bb58:	d26e      	bcs.n	801bc38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801bb5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bb5c:	9201      	str	r2, [sp, #4]
 801bb5e:	1bed      	subs	r5, r5, r7
 801bb60:	4283      	cmp	r3, r0
 801bb62:	b2ad      	uxth	r5, r5
 801bb64:	d802      	bhi.n	801bb6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801bb66:	e073      	b.n	801bc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801bb68:	2b00      	cmp	r3, #0
 801bb6a:	d15f      	bne.n	801bc2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801bb6c:	9b03      	ldr	r3, [sp, #12]
 801bb6e:	785b      	ldrb	r3, [r3, #1]
 801bb70:	f1cb 0207 	rsb	r2, fp, #7
 801bb74:	4093      	lsls	r3, r2
 801bb76:	005b      	lsls	r3, r3, #1
 801bb78:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bb7c:	9b03      	ldr	r3, [sp, #12]
 801bb7e:	781b      	ldrb	r3, [r3, #0]
 801bb80:	fa43 f30b 	asr.w	r3, r3, fp
 801bb84:	b2db      	uxtb	r3, r3
 801bb86:	4313      	orrs	r3, r2
 801bb88:	f10b 0201 	add.w	r2, fp, #1
 801bb8c:	fa5f fb82 	uxtb.w	fp, r2
 801bb90:	9a03      	ldr	r2, [sp, #12]
 801bb92:	f1bb 0f08 	cmp.w	fp, #8
 801bb96:	bf15      	itete	ne
 801bb98:	3201      	addne	r2, #1
 801bb9a:	3202      	addeq	r2, #2
 801bb9c:	9203      	strne	r2, [sp, #12]
 801bb9e:	9203      	streq	r2, [sp, #12]
 801bba0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bba2:	b29f      	uxth	r7, r3
 801bba4:	bf08      	it	eq
 801bba6:	f04f 0b00 	moveq.w	fp, #0
 801bbaa:	42ba      	cmp	r2, r7
 801bbac:	d309      	bcc.n	801bbc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bbae:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bbb2:	2301      	movs	r3, #1
 801bbb4:	9a05      	ldr	r2, [sp, #20]
 801bbb6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801bbba:	d30e      	bcc.n	801bbda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801bbbc:	469a      	mov	sl, r3
 801bbbe:	2600      	movs	r6, #0
 801bbc0:	e035      	b.n	801bc2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801bbc2:	9b05      	ldr	r3, [sp, #20]
 801bbc4:	429f      	cmp	r7, r3
 801bbc6:	d318      	bcc.n	801bbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801bbc8:	eb04 030a 	add.w	r3, r4, sl
 801bbcc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801bbd0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801bbd4:	f10a 0301 	add.w	r3, sl, #1
 801bbd8:	b29b      	uxth	r3, r3
 801bbda:	9a05      	ldr	r2, [sp, #20]
 801bbdc:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801bbe0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bbe2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bbe6:	7116      	strb	r6, [r2, #4]
 801bbe8:	f10a 0601 	add.w	r6, sl, #1
 801bbec:	80d1      	strh	r1, [r2, #6]
 801bbee:	7156      	strb	r6, [r2, #5]
 801bbf0:	9a05      	ldr	r2, [sp, #20]
 801bbf2:	3201      	adds	r2, #1
 801bbf4:	b292      	uxth	r2, r2
 801bbf6:	9205      	str	r2, [sp, #20]
 801bbf8:	e7e0      	b.n	801bbbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801bbfa:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801bbfe:	463a      	mov	r2, r7
 801bc00:	795b      	ldrb	r3, [r3, #5]
 801bc02:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801bc06:	4426      	add	r6, r4
 801bc08:	9919      	ldr	r1, [sp, #100]	; 0x64
 801bc0a:	eb01 0c06 	add.w	ip, r1, r6
 801bc0e:	f1bc 0f00 	cmp.w	ip, #0
 801bc12:	dd07      	ble.n	801bc24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801bc14:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bc18:	f892 c004 	ldrb.w	ip, [r2, #4]
 801bc1c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801bc20:	88d2      	ldrh	r2, [r2, #6]
 801bc22:	e7f1      	b.n	801bc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801bc24:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bc28:	b29b      	uxth	r3, r3
 801bc2a:	e7c3      	b.n	801bbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801bc2c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bc2e:	970c      	str	r7, [sp, #48]	; 0x30
 801bc30:	9a01      	ldr	r2, [sp, #4]
 801bc32:	46b4      	mov	ip, r6
 801bc34:	461f      	mov	r7, r3
 801bc36:	e78c      	b.n	801bb52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801bc38:	1b7b      	subs	r3, r7, r5
 801bc3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bc3e:	9201      	str	r2, [sp, #4]
 801bc40:	eb0c 0605 	add.w	r6, ip, r5
 801bc44:	b29b      	uxth	r3, r3
 801bc46:	b2b6      	uxth	r6, r6
 801bc48:	2500      	movs	r5, #0
 801bc4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bc4c:	4282      	cmp	r2, r0
 801bc4e:	d88b      	bhi.n	801bb68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bc50:	9a01      	ldr	r2, [sp, #4]
 801bc52:	e74b      	b.n	801baec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801bc54:	4297      	cmp	r7, r2
 801bc56:	d332      	bcc.n	801bcbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801bc58:	1abb      	subs	r3, r7, r2
 801bc5a:	b29b      	uxth	r3, r3
 801bc5c:	9208      	str	r2, [sp, #32]
 801bc5e:	9501      	str	r5, [sp, #4]
 801bc60:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bc62:	29ff      	cmp	r1, #255	; 0xff
 801bc64:	9908      	ldr	r1, [sp, #32]
 801bc66:	eb0c 0601 	add.w	r6, ip, r1
 801bc6a:	d135      	bne.n	801bcd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801bc6c:	f1a0 0e02 	sub.w	lr, r0, #2
 801bc70:	b2b6      	uxth	r6, r6
 801bc72:	45b4      	cmp	ip, r6
 801bc74:	f040 808c 	bne.w	801bd90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801bc78:	9908      	ldr	r1, [sp, #32]
 801bc7a:	4297      	cmp	r7, r2
 801bc7c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bc80:	d3e2      	bcc.n	801bc48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801bc82:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bc84:	9904      	ldr	r1, [sp, #16]
 801bc86:	8812      	ldrh	r2, [r2, #0]
 801bc88:	1a52      	subs	r2, r2, r1
 801bc8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bc8e:	9a07      	ldr	r2, [sp, #28]
 801bc90:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bc92:	3201      	adds	r2, #1
 801bc94:	428a      	cmp	r2, r1
 801bc96:	9207      	str	r2, [sp, #28]
 801bc98:	f040 8087 	bne.w	801bdaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bc9c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801bca0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801bca4:	9b04      	ldr	r3, [sp, #16]
 801bca6:	1bed      	subs	r5, r5, r7
 801bca8:	b2ad      	uxth	r5, r5
 801bcaa:	2d00      	cmp	r5, #0
 801bcac:	bf08      	it	eq
 801bcae:	461a      	moveq	r2, r3
 801bcb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcb2:	bf18      	it	ne
 801bcb4:	2200      	movne	r2, #0
 801bcb6:	3301      	adds	r3, #1
 801bcb8:	930d      	str	r3, [sp, #52]	; 0x34
 801bcba:	b292      	uxth	r2, r2
 801bcbc:	e70d      	b.n	801bada <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801bcbe:	1bd1      	subs	r1, r2, r7
 801bcc0:	b28b      	uxth	r3, r1
 801bcc2:	9301      	str	r3, [sp, #4]
 801bcc4:	9708      	str	r7, [sp, #32]
 801bcc6:	462b      	mov	r3, r5
 801bcc8:	e7ca      	b.n	801bc60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801bcca:	bf00      	nop
 801bccc:	20012e5c 	.word	0x20012e5c
 801bcd0:	20012e56 	.word	0x20012e56
 801bcd4:	fffff7fb 	.word	0xfffff7fb
 801bcd8:	b2b6      	uxth	r6, r6
 801bcda:	900b      	str	r0, [sp, #44]	; 0x2c
 801bcdc:	45b4      	cmp	ip, r6
 801bcde:	d0cb      	beq.n	801bc78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801bce0:	f10c 0101 	add.w	r1, ip, #1
 801bce4:	44a4      	add	ip, r4
 801bce6:	9117      	str	r1, [sp, #92]	; 0x5c
 801bce8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bcec:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bcee:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bcf2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bcf4:	f8b1 c000 	ldrh.w	ip, [r1]
 801bcf8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bcfa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801bcfe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bd02:	fb1e fe01 	smulbb	lr, lr, r1
 801bd06:	ea4f 2825 	mov.w	r8, r5, asr #8
 801bd0a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bd0c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bd10:	fb08 e801 	mla	r8, r8, r1, lr
 801bd14:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801bd18:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bd1a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bd1e:	fb19 f901 	smulbb	r9, r9, r1
 801bd22:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801bd26:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bd28:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bd2c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801bd30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd34:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bd36:	fa5f fc8c 	uxtb.w	ip, ip
 801bd3a:	fb1c fc01 	smulbb	ip, ip, r1
 801bd3e:	00ed      	lsls	r5, r5, #3
 801bd40:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bd42:	b2ed      	uxtb	r5, r5
 801bd44:	fb05 c501 	mla	r5, r5, r1, ip
 801bd48:	fa1f f888 	uxth.w	r8, r8
 801bd4c:	fa1f fe8e 	uxth.w	lr, lr
 801bd50:	b2ad      	uxth	r5, r5
 801bd52:	f108 0c01 	add.w	ip, r8, #1
 801bd56:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801bd5a:	f10e 0901 	add.w	r9, lr, #1
 801bd5e:	f105 0c01 	add.w	ip, r5, #1
 801bd62:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801bd66:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801bd6a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bd6e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bd72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bd76:	ea4c 0808 	orr.w	r8, ip, r8
 801bd7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bd7c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801bd80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bd84:	ea48 0809 	orr.w	r8, r8, r9
 801bd88:	f821 8b02 	strh.w	r8, [r1], #2
 801bd8c:	910b      	str	r1, [sp, #44]	; 0x2c
 801bd8e:	e7a5      	b.n	801bcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bd90:	f10c 0801 	add.w	r8, ip, #1
 801bd94:	44a4      	add	ip, r4
 801bd96:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bd98:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bd9c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bda0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bda4:	fa1f fc88 	uxth.w	ip, r8
 801bda8:	e763      	b.n	801bc72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bdaa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bdae:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bdb2:	1aad      	subs	r5, r5, r2
 801bdb4:	b2ad      	uxth	r5, r5
 801bdb6:	2d00      	cmp	r5, #0
 801bdb8:	bf18      	it	ne
 801bdba:	2200      	movne	r2, #0
 801bdbc:	9201      	str	r2, [sp, #4]
 801bdbe:	e744      	b.n	801bc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801bdc0:	4b03      	ldr	r3, [pc, #12]	; (801bdd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801bdc2:	6818      	ldr	r0, [r3, #0]
 801bdc4:	6803      	ldr	r3, [r0, #0]
 801bdc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bdc8:	4798      	blx	r3
 801bdca:	b01f      	add	sp, #124	; 0x7c
 801bdcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdd0:	20012e5c 	.word	0x20012e5c

0801bdd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bdd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdd8:	b08f      	sub	sp, #60	; 0x3c
 801bdda:	461c      	mov	r4, r3
 801bddc:	9203      	str	r2, [sp, #12]
 801bdde:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bde2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bde4:	9202      	str	r2, [sp, #8]
 801bde6:	460f      	mov	r7, r1
 801bde8:	2a00      	cmp	r2, #0
 801bdea:	f000 8128 	beq.w	801c03e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bdee:	6820      	ldr	r0, [r4, #0]
 801bdf0:	6861      	ldr	r1, [r4, #4]
 801bdf2:	aa0a      	add	r2, sp, #40	; 0x28
 801bdf4:	c203      	stmia	r2!, {r0, r1}
 801bdf6:	6818      	ldr	r0, [r3, #0]
 801bdf8:	6859      	ldr	r1, [r3, #4]
 801bdfa:	aa0c      	add	r2, sp, #48	; 0x30
 801bdfc:	c203      	stmia	r2!, {r0, r1}
 801bdfe:	a80a      	add	r0, sp, #40	; 0x28
 801be00:	f7f9 f802 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be04:	4621      	mov	r1, r4
 801be06:	a80c      	add	r0, sp, #48	; 0x30
 801be08:	f7f9 f842 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be0c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801be10:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801be14:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801be18:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801be1c:	bfde      	ittt	le
 801be1e:	b2b3      	uxthle	r3, r6
 801be20:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801be24:	fb92 f3f3 	sdivle	r3, r2, r3
 801be28:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801be2c:	bfc8      	it	gt
 801be2e:	2301      	movgt	r3, #1
 801be30:	fb92 f1f3 	sdiv	r1, r2, r3
 801be34:	fa1f fc81 	uxth.w	ip, r1
 801be38:	fb0c 2413 	mls	r4, ip, r3, r2
 801be3c:	fb14 f406 	smulbb	r4, r4, r6
 801be40:	441d      	add	r5, r3
 801be42:	4404      	add	r4, r0
 801be44:	4661      	mov	r1, ip
 801be46:	3d01      	subs	r5, #1
 801be48:	b2a4      	uxth	r4, r4
 801be4a:	fb95 f5f3 	sdiv	r5, r5, r3
 801be4e:	b121      	cbz	r1, 801be5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801be50:	9b03      	ldr	r3, [sp, #12]
 801be52:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801be56:	ba1b      	rev	r3, r3
 801be58:	441f      	add	r7, r3
 801be5a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801be5e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801be62:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801be66:	4418      	add	r0, r3
 801be68:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801be6c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801be70:	441a      	add	r2, r3
 801be72:	4b74      	ldr	r3, [pc, #464]	; (801c044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801be74:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801be78:	6818      	ldr	r0, [r3, #0]
 801be7a:	6803      	ldr	r3, [r0, #0]
 801be7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be7e:	4798      	blx	r3
 801be80:	4a71      	ldr	r2, [pc, #452]	; (801c048 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801be82:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801be86:	8813      	ldrh	r3, [r2, #0]
 801be88:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801be8c:	9209      	str	r2, [sp, #36]	; 0x24
 801be8e:	fb03 c101 	mla	r1, r3, r1, ip
 801be92:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801be96:	4373      	muls	r3, r6
 801be98:	b2ad      	uxth	r5, r5
 801be9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801be9e:	00ad      	lsls	r5, r5, #2
 801bea0:	2c00      	cmp	r4, #0
 801bea2:	9304      	str	r3, [sp, #16]
 801bea4:	f105 0304 	add.w	r3, r5, #4
 801bea8:	9305      	str	r3, [sp, #20]
 801beaa:	bf0c      	ite	eq
 801beac:	46c8      	moveq	r8, r9
 801beae:	f04f 0800 	movne.w	r8, #0
 801beb2:	2300      	movs	r3, #0
 801beb4:	fa1f f888 	uxth.w	r8, r8
 801beb8:	9301      	str	r3, [sp, #4]
 801beba:	9a04      	ldr	r2, [sp, #16]
 801bebc:	4282      	cmp	r2, r0
 801bebe:	f240 80b9 	bls.w	801c034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bec2:	b95b      	cbnz	r3, 801bedc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bec4:	783a      	ldrb	r2, [r7, #0]
 801bec6:	0993      	lsrs	r3, r2, #6
 801bec8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801becc:	9201      	str	r2, [sp, #4]
 801bece:	1e5a      	subs	r2, r3, #1
 801bed0:	2a02      	cmp	r2, #2
 801bed2:	bf8d      	iteet	hi
 801bed4:	787b      	ldrbhi	r3, [r7, #1]
 801bed6:	3701      	addls	r7, #1
 801bed8:	b29b      	uxthls	r3, r3
 801beda:	3702      	addhi	r7, #2
 801bedc:	b184      	cbz	r4, 801bf00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bede:	429c      	cmp	r4, r3
 801bee0:	bf95      	itete	ls
 801bee2:	1b1c      	subls	r4, r3, r4
 801bee4:	1ae4      	subhi	r4, r4, r3
 801bee6:	fa1f fa84 	uxthls.w	sl, r4
 801beea:	b2a4      	uxthhi	r4, r4
 801beec:	bf87      	ittee	hi
 801beee:	46c4      	movhi	ip, r8
 801bef0:	f04f 0a00 	movhi.w	sl, #0
 801bef4:	fa1f fc89 	uxthls.w	ip, r9
 801bef8:	2400      	movls	r4, #0
 801befa:	4653      	mov	r3, sl
 801befc:	46e0      	mov	r8, ip
 801befe:	e7dc      	b.n	801beba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bf00:	2204      	movs	r2, #4
 801bf02:	4615      	mov	r5, r2
 801bf04:	9905      	ldr	r1, [sp, #20]
 801bf06:	9a01      	ldr	r2, [sp, #4]
 801bf08:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bf0c:	9903      	ldr	r1, [sp, #12]
 801bf0e:	588a      	ldr	r2, [r1, r2]
 801bf10:	4543      	cmp	r3, r8
 801bf12:	bf27      	ittee	cs
 801bf14:	eba3 0a08 	subcs.w	sl, r3, r8
 801bf18:	46c6      	movcs	lr, r8
 801bf1a:	eba8 0c03 	subcc.w	ip, r8, r3
 801bf1e:	469e      	movcc	lr, r3
 801bf20:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bf24:	bf27      	ittee	cs
 801bf26:	fa1f fa8a 	uxthcs.w	sl, sl
 801bf2a:	46a4      	movcs	ip, r4
 801bf2c:	fa1f fc8c 	uxthcc.w	ip, ip
 801bf30:	46a2      	movcc	sl, r4
 801bf32:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bf36:	2900      	cmp	r1, #0
 801bf38:	d066      	beq.n	801c008 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bf3a:	29ff      	cmp	r1, #255	; 0xff
 801bf3c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bf40:	d114      	bne.n	801bf6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bf42:	9d02      	ldr	r5, [sp, #8]
 801bf44:	2dff      	cmp	r5, #255	; 0xff
 801bf46:	d111      	bne.n	801bf6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bf48:	0951      	lsrs	r1, r2, #5
 801bf4a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bf4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf52:	f026 0607 	bic.w	r6, r6, #7
 801bf56:	430e      	orrs	r6, r1
 801bf58:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bf5c:	4316      	orrs	r6, r2
 801bf5e:	b2b6      	uxth	r6, r6
 801bf60:	4486      	add	lr, r0
 801bf62:	4586      	cmp	lr, r0
 801bf64:	d051      	beq.n	801c00a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bf66:	f820 6b02 	strh.w	r6, [r0], #2
 801bf6a:	e7fa      	b.n	801bf62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bf6c:	9d02      	ldr	r5, [sp, #8]
 801bf6e:	4369      	muls	r1, r5
 801bf70:	1c4d      	adds	r5, r1, #1
 801bf72:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bf76:	122d      	asrs	r5, r5, #8
 801bf78:	ea6f 0b05 	mvn.w	fp, r5
 801bf7c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bf80:	b2ad      	uxth	r5, r5
 801bf82:	b2f6      	uxtb	r6, r6
 801bf84:	b2d2      	uxtb	r2, r2
 801bf86:	fb11 f105 	smulbb	r1, r1, r5
 801bf8a:	fb16 f605 	smulbb	r6, r6, r5
 801bf8e:	fb12 f205 	smulbb	r2, r2, r5
 801bf92:	b289      	uxth	r1, r1
 801bf94:	b2b6      	uxth	r6, r6
 801bf96:	b292      	uxth	r2, r2
 801bf98:	9106      	str	r1, [sp, #24]
 801bf9a:	9607      	str	r6, [sp, #28]
 801bf9c:	9208      	str	r2, [sp, #32]
 801bf9e:	4486      	add	lr, r0
 801bfa0:	fa5f fb8b 	uxtb.w	fp, fp
 801bfa4:	4586      	cmp	lr, r0
 801bfa6:	d030      	beq.n	801c00a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bfa8:	8802      	ldrh	r2, [r0, #0]
 801bfaa:	9906      	ldr	r1, [sp, #24]
 801bfac:	1216      	asrs	r6, r2, #8
 801bfae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bfb2:	10d5      	asrs	r5, r2, #3
 801bfb4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bfb8:	fb06 160b 	mla	r6, r6, fp, r1
 801bfbc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bfc0:	9907      	ldr	r1, [sp, #28]
 801bfc2:	00d2      	lsls	r2, r2, #3
 801bfc4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bfc8:	fb05 150b 	mla	r5, r5, fp, r1
 801bfcc:	b2d2      	uxtb	r2, r2
 801bfce:	9908      	ldr	r1, [sp, #32]
 801bfd0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bfd4:	b2b6      	uxth	r6, r6
 801bfd6:	fb02 120b 	mla	r2, r2, fp, r1
 801bfda:	b292      	uxth	r2, r2
 801bfdc:	1c71      	adds	r1, r6, #1
 801bfde:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bfe2:	1c51      	adds	r1, r2, #1
 801bfe4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bfe8:	b2ad      	uxth	r5, r5
 801bfea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bfee:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bff2:	4316      	orrs	r6, r2
 801bff4:	1c6a      	adds	r2, r5, #1
 801bff6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bffa:	096d      	lsrs	r5, r5, #5
 801bffc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c000:	432e      	orrs	r6, r5
 801c002:	f820 6b02 	strh.w	r6, [r0], #2
 801c006:	e7cd      	b.n	801bfa4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c008:	4470      	add	r0, lr
 801c00a:	4543      	cmp	r3, r8
 801c00c:	f4ff af75 	bcc.w	801befa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c010:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c014:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c016:	fa1f fc89 	uxth.w	ip, r9
 801c01a:	eba4 040c 	sub.w	r4, r4, ip
 801c01e:	881b      	ldrh	r3, [r3, #0]
 801c020:	b2a4      	uxth	r4, r4
 801c022:	2c00      	cmp	r4, #0
 801c024:	eba3 0309 	sub.w	r3, r3, r9
 801c028:	bf18      	it	ne
 801c02a:	f04f 0c00 	movne.w	ip, #0
 801c02e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c032:	e762      	b.n	801befa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c034:	4b03      	ldr	r3, [pc, #12]	; (801c044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c036:	6818      	ldr	r0, [r3, #0]
 801c038:	6803      	ldr	r3, [r0, #0]
 801c03a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c03c:	4798      	blx	r3
 801c03e:	b00f      	add	sp, #60	; 0x3c
 801c040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c044:	20012e5c 	.word	0x20012e5c
 801c048:	20012e56 	.word	0x20012e56

0801c04c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c04c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c050:	b093      	sub	sp, #76	; 0x4c
 801c052:	461c      	mov	r4, r3
 801c054:	9205      	str	r2, [sp, #20]
 801c056:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801c05a:	9101      	str	r1, [sp, #4]
 801c05c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c05e:	9202      	str	r2, [sp, #8]
 801c060:	2a00      	cmp	r2, #0
 801c062:	f000 812c 	beq.w	801c2be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c066:	6820      	ldr	r0, [r4, #0]
 801c068:	6861      	ldr	r1, [r4, #4]
 801c06a:	aa0e      	add	r2, sp, #56	; 0x38
 801c06c:	c203      	stmia	r2!, {r0, r1}
 801c06e:	6818      	ldr	r0, [r3, #0]
 801c070:	6859      	ldr	r1, [r3, #4]
 801c072:	aa10      	add	r2, sp, #64	; 0x40
 801c074:	c203      	stmia	r2!, {r0, r1}
 801c076:	a80e      	add	r0, sp, #56	; 0x38
 801c078:	f7f8 fec6 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c07c:	4621      	mov	r1, r4
 801c07e:	a810      	add	r0, sp, #64	; 0x40
 801c080:	f7f8 ff06 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c084:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c088:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801c08c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801c090:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c094:	bfde      	ittt	le
 801c096:	b2b3      	uxthle	r3, r6
 801c098:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c09c:	fb92 f3f3 	sdivle	r3, r2, r3
 801c0a0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c0a4:	bfc8      	it	gt
 801c0a6:	2301      	movgt	r3, #1
 801c0a8:	fb92 f1f3 	sdiv	r1, r2, r3
 801c0ac:	fa1f fc81 	uxth.w	ip, r1
 801c0b0:	fb0c 2413 	mls	r4, ip, r3, r2
 801c0b4:	fb14 f406 	smulbb	r4, r4, r6
 801c0b8:	441d      	add	r5, r3
 801c0ba:	4404      	add	r4, r0
 801c0bc:	4661      	mov	r1, ip
 801c0be:	3d01      	subs	r5, #1
 801c0c0:	b2a4      	uxth	r4, r4
 801c0c2:	fb95 f5f3 	sdiv	r5, r5, r3
 801c0c6:	b131      	cbz	r1, 801c0d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c0c8:	9b05      	ldr	r3, [sp, #20]
 801c0ca:	9901      	ldr	r1, [sp, #4]
 801c0cc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c0d0:	ba1b      	rev	r3, r3
 801c0d2:	4419      	add	r1, r3
 801c0d4:	9101      	str	r1, [sp, #4]
 801c0d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c0da:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c0de:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801c0e2:	4418      	add	r0, r3
 801c0e4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801c0e8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801c0ec:	441a      	add	r2, r3
 801c0ee:	4b75      	ldr	r3, [pc, #468]	; (801c2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c0f0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801c0f4:	6818      	ldr	r0, [r3, #0]
 801c0f6:	6803      	ldr	r3, [r0, #0]
 801c0f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0fa:	4798      	blx	r3
 801c0fc:	4972      	ldr	r1, [pc, #456]	; (801c2c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c0fe:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801c102:	880b      	ldrh	r3, [r1, #0]
 801c104:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c108:	910d      	str	r1, [sp, #52]	; 0x34
 801c10a:	fb03 c202 	mla	r2, r3, r2, ip
 801c10e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c112:	4373      	muls	r3, r6
 801c114:	b2ad      	uxth	r5, r5
 801c116:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c11a:	00ad      	lsls	r5, r5, #2
 801c11c:	9308      	str	r3, [sp, #32]
 801c11e:	1d2b      	adds	r3, r5, #4
 801c120:	9309      	str	r3, [sp, #36]	; 0x24
 801c122:	9b02      	ldr	r3, [sp, #8]
 801c124:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c128:	9106      	str	r1, [sp, #24]
 801c12a:	43da      	mvns	r2, r3
 801c12c:	2c00      	cmp	r4, #0
 801c12e:	bf0c      	ite	eq
 801c130:	46dc      	moveq	ip, fp
 801c132:	f04f 0c00 	movne.w	ip, #0
 801c136:	2300      	movs	r3, #0
 801c138:	b2d2      	uxtb	r2, r2
 801c13a:	fa1f fc8c 	uxth.w	ip, ip
 801c13e:	9303      	str	r3, [sp, #12]
 801c140:	9207      	str	r2, [sp, #28]
 801c142:	9a08      	ldr	r2, [sp, #32]
 801c144:	4282      	cmp	r2, r0
 801c146:	f240 80b5 	bls.w	801c2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c14a:	b963      	cbnz	r3, 801c166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c14c:	9b01      	ldr	r3, [sp, #4]
 801c14e:	781a      	ldrb	r2, [r3, #0]
 801c150:	0993      	lsrs	r3, r2, #6
 801c152:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c156:	9203      	str	r2, [sp, #12]
 801c158:	1e5a      	subs	r2, r3, #1
 801c15a:	2a02      	cmp	r2, #2
 801c15c:	d815      	bhi.n	801c18a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c15e:	9a01      	ldr	r2, [sp, #4]
 801c160:	3201      	adds	r2, #1
 801c162:	9201      	str	r2, [sp, #4]
 801c164:	b29b      	uxth	r3, r3
 801c166:	b1b4      	cbz	r4, 801c196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c168:	429c      	cmp	r4, r3
 801c16a:	bf95      	itete	ls
 801c16c:	1b1c      	subls	r4, r3, r4
 801c16e:	1ae4      	subhi	r4, r4, r3
 801c170:	fa1f f884 	uxthls.w	r8, r4
 801c174:	b2a4      	uxthhi	r4, r4
 801c176:	bf87      	ittee	hi
 801c178:	4666      	movhi	r6, ip
 801c17a:	f04f 0800 	movhi.w	r8, #0
 801c17e:	fa1f f68b 	uxthls.w	r6, fp
 801c182:	2400      	movls	r4, #0
 801c184:	4643      	mov	r3, r8
 801c186:	46b4      	mov	ip, r6
 801c188:	e7db      	b.n	801c142 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c18a:	9a01      	ldr	r2, [sp, #4]
 801c18c:	9b01      	ldr	r3, [sp, #4]
 801c18e:	3202      	adds	r2, #2
 801c190:	785b      	ldrb	r3, [r3, #1]
 801c192:	9201      	str	r2, [sp, #4]
 801c194:	e7e7      	b.n	801c166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c196:	2203      	movs	r2, #3
 801c198:	4615      	mov	r5, r2
 801c19a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c19c:	9a03      	ldr	r2, [sp, #12]
 801c19e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c1a2:	9905      	ldr	r1, [sp, #20]
 801c1a4:	4563      	cmp	r3, ip
 801c1a6:	eb01 0502 	add.w	r5, r1, r2
 801c1aa:	9902      	ldr	r1, [sp, #8]
 801c1ac:	bf29      	itett	cs
 801c1ae:	eba3 080c 	subcs.w	r8, r3, ip
 801c1b2:	ebac 0603 	subcc.w	r6, ip, r3
 801c1b6:	fa1f f888 	uxthcs.w	r8, r8
 801c1ba:	46e1      	movcs	r9, ip
 801c1bc:	bf2f      	iteee	cs
 801c1be:	4626      	movcs	r6, r4
 801c1c0:	b2b6      	uxthcc	r6, r6
 801c1c2:	4699      	movcc	r9, r3
 801c1c4:	46a0      	movcc	r8, r4
 801c1c6:	29ff      	cmp	r1, #255	; 0xff
 801c1c8:	d04a      	beq.n	801c260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c1ca:	9f06      	ldr	r7, [sp, #24]
 801c1cc:	78a9      	ldrb	r1, [r5, #2]
 801c1ce:	9004      	str	r0, [sp, #16]
 801c1d0:	4379      	muls	r1, r7
 801c1d2:	910a      	str	r1, [sp, #40]	; 0x28
 801c1d4:	7869      	ldrb	r1, [r5, #1]
 801c1d6:	4379      	muls	r1, r7
 801c1d8:	910b      	str	r1, [sp, #44]	; 0x2c
 801c1da:	9905      	ldr	r1, [sp, #20]
 801c1dc:	5c8a      	ldrb	r2, [r1, r2]
 801c1de:	437a      	muls	r2, r7
 801c1e0:	920c      	str	r2, [sp, #48]	; 0x30
 801c1e2:	46ca      	mov	sl, r9
 801c1e4:	f1ba 0f00 	cmp.w	sl, #0
 801c1e8:	d03d      	beq.n	801c266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c1ea:	9a04      	ldr	r2, [sp, #16]
 801c1ec:	9f07      	ldr	r7, [sp, #28]
 801c1ee:	8812      	ldrh	r2, [r2, #0]
 801c1f0:	1215      	asrs	r5, r2, #8
 801c1f2:	46be      	mov	lr, r7
 801c1f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c1f8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c1fa:	10d1      	asrs	r1, r2, #3
 801c1fc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c200:	fb05 750e 	mla	r5, r5, lr, r7
 801c204:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c208:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c20a:	00d2      	lsls	r2, r2, #3
 801c20c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c210:	fb01 710e 	mla	r1, r1, lr, r7
 801c214:	b2d2      	uxtb	r2, r2
 801c216:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c218:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c21c:	b2ad      	uxth	r5, r5
 801c21e:	fb02 720e 	mla	r2, r2, lr, r7
 801c222:	b292      	uxth	r2, r2
 801c224:	f105 0e01 	add.w	lr, r5, #1
 801c228:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c22c:	f102 0e01 	add.w	lr, r2, #1
 801c230:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c234:	b289      	uxth	r1, r1
 801c236:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c23a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c23e:	4315      	orrs	r5, r2
 801c240:	1c4a      	adds	r2, r1, #1
 801c242:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c246:	0949      	lsrs	r1, r1, #5
 801c248:	9a04      	ldr	r2, [sp, #16]
 801c24a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c24e:	430d      	orrs	r5, r1
 801c250:	f822 5b02 	strh.w	r5, [r2], #2
 801c254:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c258:	9204      	str	r2, [sp, #16]
 801c25a:	fa1f fa8a 	uxth.w	sl, sl
 801c25e:	e7c1      	b.n	801c1e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c260:	4649      	mov	r1, r9
 801c262:	4686      	mov	lr, r0
 801c264:	b999      	cbnz	r1, 801c28e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c266:	4563      	cmp	r3, ip
 801c268:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c26c:	d38a      	bcc.n	801c184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c26e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801c272:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c274:	fa1f f68b 	uxth.w	r6, fp
 801c278:	1ba4      	subs	r4, r4, r6
 801c27a:	881b      	ldrh	r3, [r3, #0]
 801c27c:	b2a4      	uxth	r4, r4
 801c27e:	2c00      	cmp	r4, #0
 801c280:	eba3 030b 	sub.w	r3, r3, fp
 801c284:	bf18      	it	ne
 801c286:	2600      	movne	r6, #0
 801c288:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c28c:	e77a      	b.n	801c184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c28e:	78aa      	ldrb	r2, [r5, #2]
 801c290:	4f0e      	ldr	r7, [pc, #56]	; (801c2cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c292:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c296:	786a      	ldrb	r2, [r5, #1]
 801c298:	00d2      	lsls	r2, r2, #3
 801c29a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c29e:	ea4a 0202 	orr.w	r2, sl, r2
 801c2a2:	f895 a000 	ldrb.w	sl, [r5]
 801c2a6:	3901      	subs	r1, #1
 801c2a8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c2ac:	f82e 2b02 	strh.w	r2, [lr], #2
 801c2b0:	b289      	uxth	r1, r1
 801c2b2:	e7d7      	b.n	801c264 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c2b4:	4b03      	ldr	r3, [pc, #12]	; (801c2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c2b6:	6818      	ldr	r0, [r3, #0]
 801c2b8:	6803      	ldr	r3, [r0, #0]
 801c2ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c2bc:	4798      	blx	r3
 801c2be:	b013      	add	sp, #76	; 0x4c
 801c2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2c4:	20012e5c 	.word	0x20012e5c
 801c2c8:	20012e56 	.word	0x20012e56
 801c2cc:	fffff800 	.word	0xfffff800

0801c2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2d4:	b09d      	sub	sp, #116	; 0x74
 801c2d6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c2da:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c2de:	920e      	str	r2, [sp, #56]	; 0x38
 801c2e0:	461c      	mov	r4, r3
 801c2e2:	4683      	mov	fp, r0
 801c2e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c2e6:	2a00      	cmp	r2, #0
 801c2e8:	f000 81e0 	beq.w	801c6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c2ec:	6820      	ldr	r0, [r4, #0]
 801c2ee:	6861      	ldr	r1, [r4, #4]
 801c2f0:	aa18      	add	r2, sp, #96	; 0x60
 801c2f2:	c203      	stmia	r2!, {r0, r1}
 801c2f4:	6818      	ldr	r0, [r3, #0]
 801c2f6:	6859      	ldr	r1, [r3, #4]
 801c2f8:	aa1a      	add	r2, sp, #104	; 0x68
 801c2fa:	c203      	stmia	r2!, {r0, r1}
 801c2fc:	a818      	add	r0, sp, #96	; 0x60
 801c2fe:	f7f8 fd83 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c302:	4621      	mov	r1, r4
 801c304:	a81a      	add	r0, sp, #104	; 0x68
 801c306:	f7f8 fdc3 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c30a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c30e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c312:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c316:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c31a:	bfd7      	itett	le
 801c31c:	b29a      	uxthle	r2, r3
 801c31e:	2201      	movgt	r2, #1
 801c320:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c324:	fb91 f2f2 	sdivle	r2, r1, r2
 801c328:	9202      	str	r2, [sp, #8]
 801c32a:	9802      	ldr	r0, [sp, #8]
 801c32c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c330:	fb92 f0f0 	sdiv	r0, r2, r0
 801c334:	b280      	uxth	r0, r0
 801c336:	900f      	str	r0, [sp, #60]	; 0x3c
 801c338:	9902      	ldr	r1, [sp, #8]
 801c33a:	9802      	ldr	r0, [sp, #8]
 801c33c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c33e:	440c      	add	r4, r1
 801c340:	fb05 2510 	mls	r5, r5, r0, r2
 801c344:	fb15 f503 	smulbb	r5, r5, r3
 801c348:	3c01      	subs	r4, #1
 801c34a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c34e:	fb94 f4f1 	sdiv	r4, r4, r1
 801c352:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c356:	440d      	add	r5, r1
 801c358:	4419      	add	r1, r3
 801c35a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c35e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c362:	441a      	add	r2, r3
 801c364:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c368:	9306      	str	r3, [sp, #24]
 801c36a:	4bb3      	ldr	r3, [pc, #716]	; (801c638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c36c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c370:	6818      	ldr	r0, [r3, #0]
 801c372:	6803      	ldr	r3, [r0, #0]
 801c374:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c376:	4798      	blx	r3
 801c378:	4bb0      	ldr	r3, [pc, #704]	; (801c63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c37a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c37e:	881a      	ldrh	r2, [r3, #0]
 801c380:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c384:	9316      	str	r3, [sp, #88]	; 0x58
 801c386:	fb02 7101 	mla	r1, r2, r1, r7
 801c38a:	3401      	adds	r4, #1
 801c38c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c390:	b2a4      	uxth	r4, r4
 801c392:	4356      	muls	r6, r2
 801c394:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c398:	00a4      	lsls	r4, r4, #2
 801c39a:	920a      	str	r2, [sp, #40]	; 0x28
 801c39c:	1d22      	adds	r2, r4, #4
 801c39e:	b2ad      	uxth	r5, r5
 801c3a0:	9213      	str	r2, [sp, #76]	; 0x4c
 801c3a2:	4ba7      	ldr	r3, [pc, #668]	; (801c640 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c3a4:	9a06      	ldr	r2, [sp, #24]
 801c3a6:	2d00      	cmp	r5, #0
 801c3a8:	bf0c      	ite	eq
 801c3aa:	4611      	moveq	r1, r2
 801c3ac:	2100      	movne	r1, #0
 801c3ae:	2200      	movs	r2, #0
 801c3b0:	eba3 030b 	sub.w	r3, r3, fp
 801c3b4:	b289      	uxth	r1, r1
 801c3b6:	920d      	str	r2, [sp, #52]	; 0x34
 801c3b8:	9317      	str	r3, [sp, #92]	; 0x5c
 801c3ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c3bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3be:	fa12 f383 	uxtah	r3, r2, r3
 801c3c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c3c4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c3c8:	3304      	adds	r3, #4
 801c3ca:	9308      	str	r3, [sp, #32]
 801c3cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c3ce:	4543      	cmp	r3, r8
 801c3d0:	f240 8167 	bls.w	801c6a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c3d4:	9a02      	ldr	r2, [sp, #8]
 801c3d6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c3da:	fbb5 f3f3 	udiv	r3, r5, r3
 801c3de:	1ad3      	subs	r3, r2, r3
 801c3e0:	b29b      	uxth	r3, r3
 801c3e2:	9314      	str	r3, [sp, #80]	; 0x50
 801c3e4:	9b08      	ldr	r3, [sp, #32]
 801c3e6:	9808      	ldr	r0, [sp, #32]
 801c3e8:	785a      	ldrb	r2, [r3, #1]
 801c3ea:	789b      	ldrb	r3, [r3, #2]
 801c3ec:	7800      	ldrb	r0, [r0, #0]
 801c3ee:	9010      	str	r0, [sp, #64]	; 0x40
 801c3f0:	021b      	lsls	r3, r3, #8
 801c3f2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c3f6:	9a08      	ldr	r2, [sp, #32]
 801c3f8:	78d2      	ldrb	r2, [r2, #3]
 801c3fa:	4313      	orrs	r3, r2
 801c3fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c3fe:	3001      	adds	r0, #1
 801c400:	441a      	add	r2, r3
 801c402:	9007      	str	r0, [sp, #28]
 801c404:	1c50      	adds	r0, r2, #1
 801c406:	9005      	str	r0, [sp, #20]
 801c408:	7852      	ldrb	r2, [r2, #1]
 801c40a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c40c:	0212      	lsls	r2, r2, #8
 801c40e:	5cc3      	ldrb	r3, [r0, r3]
 801c410:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c414:	431a      	orrs	r2, r3
 801c416:	b293      	uxth	r3, r2
 801c418:	930b      	str	r3, [sp, #44]	; 0x2c
 801c41a:	2300      	movs	r3, #0
 801c41c:	9309      	str	r3, [sp, #36]	; 0x24
 801c41e:	2301      	movs	r3, #1
 801c420:	9301      	str	r3, [sp, #4]
 801c422:	9304      	str	r3, [sp, #16]
 801c424:	2300      	movs	r3, #0
 801c426:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c42a:	9303      	str	r3, [sp, #12]
 801c42c:	f04f 0e01 	mov.w	lr, #1
 801c430:	2d00      	cmp	r5, #0
 801c432:	d07c      	beq.n	801c52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c434:	45ae      	cmp	lr, r5
 801c436:	d26b      	bcs.n	801c510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c438:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c43a:	eba5 050e 	sub.w	r5, r5, lr
 801c43e:	4543      	cmp	r3, r8
 801c440:	b2ad      	uxth	r5, r5
 801c442:	460c      	mov	r4, r1
 801c444:	d802      	bhi.n	801c44c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c446:	e070      	b.n	801c52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c448:	2b00      	cmp	r3, #0
 801c44a:	d15c      	bne.n	801c506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c44c:	9b05      	ldr	r3, [sp, #20]
 801c44e:	9a04      	ldr	r2, [sp, #16]
 801c450:	785b      	ldrb	r3, [r3, #1]
 801c452:	9904      	ldr	r1, [sp, #16]
 801c454:	f1c2 0207 	rsb	r2, r2, #7
 801c458:	4093      	lsls	r3, r2
 801c45a:	005b      	lsls	r3, r3, #1
 801c45c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c460:	9b05      	ldr	r3, [sp, #20]
 801c462:	781b      	ldrb	r3, [r3, #0]
 801c464:	410b      	asrs	r3, r1
 801c466:	3101      	adds	r1, #1
 801c468:	b2c9      	uxtb	r1, r1
 801c46a:	2908      	cmp	r1, #8
 801c46c:	9104      	str	r1, [sp, #16]
 801c46e:	9905      	ldr	r1, [sp, #20]
 801c470:	bf0a      	itet	eq
 801c472:	3102      	addeq	r1, #2
 801c474:	3101      	addne	r1, #1
 801c476:	9105      	streq	r1, [sp, #20]
 801c478:	b2db      	uxtb	r3, r3
 801c47a:	bf0a      	itet	eq
 801c47c:	2100      	moveq	r1, #0
 801c47e:	9105      	strne	r1, [sp, #20]
 801c480:	9104      	streq	r1, [sp, #16]
 801c482:	4313      	orrs	r3, r2
 801c484:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c486:	b29a      	uxth	r2, r3
 801c488:	4291      	cmp	r1, r2
 801c48a:	d30a      	bcc.n	801c4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c48c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c490:	2301      	movs	r3, #1
 801c492:	9907      	ldr	r1, [sp, #28]
 801c494:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c498:	d30f      	bcc.n	801c4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c49a:	2100      	movs	r1, #0
 801c49c:	9301      	str	r3, [sp, #4]
 801c49e:	9103      	str	r1, [sp, #12]
 801c4a0:	e032      	b.n	801c508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c4a2:	9b07      	ldr	r3, [sp, #28]
 801c4a4:	429a      	cmp	r2, r3
 801c4a6:	d318      	bcc.n	801c4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c4a8:	9b01      	ldr	r3, [sp, #4]
 801c4aa:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c4ae:	445b      	add	r3, fp
 801c4b0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c4b4:	9b01      	ldr	r3, [sp, #4]
 801c4b6:	3301      	adds	r3, #1
 801c4b8:	b29b      	uxth	r3, r3
 801c4ba:	9907      	ldr	r1, [sp, #28]
 801c4bc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c4c0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c4c4:	7108      	strb	r0, [r1, #4]
 801c4c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c4c8:	80c8      	strh	r0, [r1, #6]
 801c4ca:	9801      	ldr	r0, [sp, #4]
 801c4cc:	3001      	adds	r0, #1
 801c4ce:	7148      	strb	r0, [r1, #5]
 801c4d0:	9907      	ldr	r1, [sp, #28]
 801c4d2:	3101      	adds	r1, #1
 801c4d4:	b289      	uxth	r1, r1
 801c4d6:	9107      	str	r1, [sp, #28]
 801c4d8:	e7df      	b.n	801c49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c4da:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c4de:	4611      	mov	r1, r2
 801c4e0:	795b      	ldrb	r3, [r3, #5]
 801c4e2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c4e6:	4458      	add	r0, fp
 801c4e8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c4ea:	4406      	add	r6, r0
 801c4ec:	2e00      	cmp	r6, #0
 801c4ee:	dd06      	ble.n	801c4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c4f0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c4f4:	790e      	ldrb	r6, [r1, #4]
 801c4f6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c4fa:	88c9      	ldrh	r1, [r1, #6]
 801c4fc:	e7f4      	b.n	801c4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c4fe:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c502:	b29b      	uxth	r3, r3
 801c504:	e7c5      	b.n	801c492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c506:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c508:	920b      	str	r2, [sp, #44]	; 0x2c
 801c50a:	4621      	mov	r1, r4
 801c50c:	469e      	mov	lr, r3
 801c50e:	e78f      	b.n	801c430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c510:	9a03      	ldr	r2, [sp, #12]
 801c512:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c516:	442a      	add	r2, r5
 801c518:	ebae 0305 	sub.w	r3, lr, r5
 801c51c:	b292      	uxth	r2, r2
 801c51e:	b29b      	uxth	r3, r3
 801c520:	9203      	str	r2, [sp, #12]
 801c522:	2500      	movs	r5, #0
 801c524:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c526:	4542      	cmp	r2, r8
 801c528:	d88e      	bhi.n	801c448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c52a:	4621      	mov	r1, r4
 801c52c:	e74e      	b.n	801c3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c52e:	458e      	cmp	lr, r1
 801c530:	bf29      	itett	cs
 801c532:	ebae 0301 	subcs.w	r3, lr, r1
 801c536:	eba1 040e 	subcc.w	r4, r1, lr
 801c53a:	b29b      	uxthcs	r3, r3
 801c53c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c53e:	bf2f      	iteee	cs
 801c540:	462c      	movcs	r4, r5
 801c542:	b2a4      	uxthcc	r4, r4
 801c544:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c548:	462b      	movcc	r3, r5
 801c54a:	f04f 0900 	mov.w	r9, #0
 801c54e:	9a03      	ldr	r2, [sp, #12]
 801c550:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c552:	444a      	add	r2, r9
 801c554:	4548      	cmp	r0, r9
 801c556:	b292      	uxth	r2, r2
 801c558:	d074      	beq.n	801c644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c55a:	445a      	add	r2, fp
 801c55c:	2004      	movs	r0, #4
 801c55e:	4605      	mov	r5, r0
 801c560:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c564:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c566:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c56a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c56c:	5880      	ldr	r0, [r0, r2]
 801c56e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c572:	d014      	beq.n	801c59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c574:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c578:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c57c:	d112      	bne.n	801c5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c57e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c580:	2aff      	cmp	r2, #255	; 0xff
 801c582:	d10f      	bne.n	801c5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c584:	0942      	lsrs	r2, r0, #5
 801c586:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c58a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c58e:	f025 0507 	bic.w	r5, r5, #7
 801c592:	4315      	orrs	r5, r2
 801c594:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c598:	4305      	orrs	r5, r0
 801c59a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c59e:	f109 0901 	add.w	r9, r9, #1
 801c5a2:	e7d4      	b.n	801c54e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c5a4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c5a8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c5ac:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c5b0:	9215      	str	r2, [sp, #84]	; 0x54
 801c5b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c5b4:	fb02 fa0a 	mul.w	sl, r2, sl
 801c5b8:	f10a 0201 	add.w	r2, sl, #1
 801c5bc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c5c0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c5c4:	1212      	asrs	r2, r2, #8
 801c5c6:	fa1f fa82 	uxth.w	sl, r2
 801c5ca:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c5ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c5d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c5d6:	43d2      	mvns	r2, r2
 801c5d8:	b2d2      	uxtb	r2, r2
 801c5da:	fb16 f60a 	smulbb	r6, r6, sl
 801c5de:	fa5f fc8c 	uxtb.w	ip, ip
 801c5e2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c5e6:	b2c0      	uxtb	r0, r0
 801c5e8:	fb07 6702 	mla	r7, r7, r2, r6
 801c5ec:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c5f0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c5f2:	fb10 f00a 	smulbb	r0, r0, sl
 801c5f6:	fb0c 0002 	mla	r0, ip, r2, r0
 801c5fa:	b2ed      	uxtb	r5, r5
 801c5fc:	b2bf      	uxth	r7, r7
 801c5fe:	fb15 f50a 	smulbb	r5, r5, sl
 801c602:	b280      	uxth	r0, r0
 801c604:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c608:	fb06 5602 	mla	r6, r6, r2, r5
 801c60c:	1c7a      	adds	r2, r7, #1
 801c60e:	1c45      	adds	r5, r0, #1
 801c610:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c614:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c618:	b2b6      	uxth	r6, r6
 801c61a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c61e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c622:	432f      	orrs	r7, r5
 801c624:	1c75      	adds	r5, r6, #1
 801c626:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c62a:	096d      	lsrs	r5, r5, #5
 801c62c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c630:	432f      	orrs	r7, r5
 801c632:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c636:	e7b2      	b.n	801c59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c638:	20012e5c 	.word	0x20012e5c
 801c63c:	20012e56 	.word	0x20012e56
 801c640:	fffff7fb 	.word	0xfffff7fb
 801c644:	9203      	str	r2, [sp, #12]
 801c646:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c648:	458e      	cmp	lr, r1
 801c64a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c64e:	f4ff af68 	bcc.w	801c522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c652:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c654:	9906      	ldr	r1, [sp, #24]
 801c656:	8812      	ldrh	r2, [r2, #0]
 801c658:	1a52      	subs	r2, r2, r1
 801c65a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c65e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c660:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c662:	3201      	adds	r2, #1
 801c664:	428a      	cmp	r2, r1
 801c666:	9209      	str	r2, [sp, #36]	; 0x24
 801c668:	d111      	bne.n	801c68e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c66a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c66e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c672:	9b06      	ldr	r3, [sp, #24]
 801c674:	eba5 0509 	sub.w	r5, r5, r9
 801c678:	b2ad      	uxth	r5, r5
 801c67a:	2d00      	cmp	r5, #0
 801c67c:	bf08      	it	eq
 801c67e:	4619      	moveq	r1, r3
 801c680:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c682:	bf18      	it	ne
 801c684:	2100      	movne	r1, #0
 801c686:	3301      	adds	r3, #1
 801c688:	930d      	str	r3, [sp, #52]	; 0x34
 801c68a:	b289      	uxth	r1, r1
 801c68c:	e695      	b.n	801c3ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c68e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c692:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c696:	1b2d      	subs	r5, r5, r4
 801c698:	b2ad      	uxth	r5, r5
 801c69a:	2d00      	cmp	r5, #0
 801c69c:	bf18      	it	ne
 801c69e:	2400      	movne	r4, #0
 801c6a0:	e740      	b.n	801c524 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c6a2:	4b04      	ldr	r3, [pc, #16]	; (801c6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c6a4:	6818      	ldr	r0, [r3, #0]
 801c6a6:	6803      	ldr	r3, [r0, #0]
 801c6a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6aa:	4798      	blx	r3
 801c6ac:	b01d      	add	sp, #116	; 0x74
 801c6ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6b2:	bf00      	nop
 801c6b4:	20012e5c 	.word	0x20012e5c

0801c6b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6bc:	b09f      	sub	sp, #124	; 0x7c
 801c6be:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c6c2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c6c6:	920a      	str	r2, [sp, #40]	; 0x28
 801c6c8:	461d      	mov	r5, r3
 801c6ca:	4604      	mov	r4, r0
 801c6cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c6ce:	2a00      	cmp	r2, #0
 801c6d0:	f000 81fa 	beq.w	801cac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c6d4:	6828      	ldr	r0, [r5, #0]
 801c6d6:	6869      	ldr	r1, [r5, #4]
 801c6d8:	aa1a      	add	r2, sp, #104	; 0x68
 801c6da:	c203      	stmia	r2!, {r0, r1}
 801c6dc:	6818      	ldr	r0, [r3, #0]
 801c6de:	6859      	ldr	r1, [r3, #4]
 801c6e0:	aa1c      	add	r2, sp, #112	; 0x70
 801c6e2:	c203      	stmia	r2!, {r0, r1}
 801c6e4:	a81a      	add	r0, sp, #104	; 0x68
 801c6e6:	f7f8 fb8f 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6ea:	4629      	mov	r1, r5
 801c6ec:	a81c      	add	r0, sp, #112	; 0x70
 801c6ee:	f7f8 fbcf 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c6f2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c6f6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c6fa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c6fe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c702:	bfd7      	itett	le
 801c704:	b29a      	uxthle	r2, r3
 801c706:	2201      	movgt	r2, #1
 801c708:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c70c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c710:	9201      	str	r2, [sp, #4]
 801c712:	9801      	ldr	r0, [sp, #4]
 801c714:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c718:	fb92 f0f0 	sdiv	r0, r2, r0
 801c71c:	b280      	uxth	r0, r0
 801c71e:	9010      	str	r0, [sp, #64]	; 0x40
 801c720:	9901      	ldr	r1, [sp, #4]
 801c722:	9801      	ldr	r0, [sp, #4]
 801c724:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c726:	440e      	add	r6, r1
 801c728:	fb05 2510 	mls	r5, r5, r0, r2
 801c72c:	fb15 f503 	smulbb	r5, r5, r3
 801c730:	3e01      	subs	r6, #1
 801c732:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c736:	fb96 f6f1 	sdiv	r6, r6, r1
 801c73a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c73e:	440d      	add	r5, r1
 801c740:	4419      	add	r1, r3
 801c742:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c746:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c74a:	441a      	add	r2, r3
 801c74c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c750:	9304      	str	r3, [sp, #16]
 801c752:	4b96      	ldr	r3, [pc, #600]	; (801c9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c754:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c758:	6818      	ldr	r0, [r3, #0]
 801c75a:	6803      	ldr	r3, [r0, #0]
 801c75c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c75e:	4798      	blx	r3
 801c760:	4b93      	ldr	r3, [pc, #588]	; (801c9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c762:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c766:	881a      	ldrh	r2, [r3, #0]
 801c768:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c76c:	9318      	str	r3, [sp, #96]	; 0x60
 801c76e:	fb02 c101 	mla	r1, r2, r1, ip
 801c772:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c776:	4357      	muls	r7, r2
 801c778:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c77c:	3601      	adds	r6, #1
 801c77e:	920b      	str	r2, [sp, #44]	; 0x2c
 801c780:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c782:	4b8c      	ldr	r3, [pc, #560]	; (801c9b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c784:	b2b6      	uxth	r6, r6
 801c786:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c78a:	1d32      	adds	r2, r6, #4
 801c78c:	9206      	str	r2, [sp, #24]
 801c78e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c790:	43d2      	mvns	r2, r2
 801c792:	b2d2      	uxtb	r2, r2
 801c794:	b2ad      	uxth	r5, r5
 801c796:	9215      	str	r2, [sp, #84]	; 0x54
 801c798:	9a04      	ldr	r2, [sp, #16]
 801c79a:	2d00      	cmp	r5, #0
 801c79c:	bf0c      	ite	eq
 801c79e:	4611      	moveq	r1, r2
 801c7a0:	2100      	movne	r1, #0
 801c7a2:	2200      	movs	r2, #0
 801c7a4:	1b1b      	subs	r3, r3, r4
 801c7a6:	b289      	uxth	r1, r1
 801c7a8:	920d      	str	r2, [sp, #52]	; 0x34
 801c7aa:	9319      	str	r3, [sp, #100]	; 0x64
 801c7ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c7ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c7b0:	fa12 f383 	uxtah	r3, r2, r3
 801c7b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c7b6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c7ba:	3304      	adds	r3, #4
 801c7bc:	9307      	str	r3, [sp, #28]
 801c7be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c7c0:	455b      	cmp	r3, fp
 801c7c2:	f240 817c 	bls.w	801cabe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c7c6:	9a01      	ldr	r2, [sp, #4]
 801c7c8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c7cc:	fbb5 f3f3 	udiv	r3, r5, r3
 801c7d0:	1ad3      	subs	r3, r2, r3
 801c7d2:	b29b      	uxth	r3, r3
 801c7d4:	9316      	str	r3, [sp, #88]	; 0x58
 801c7d6:	9b07      	ldr	r3, [sp, #28]
 801c7d8:	9807      	ldr	r0, [sp, #28]
 801c7da:	785a      	ldrb	r2, [r3, #1]
 801c7dc:	789b      	ldrb	r3, [r3, #2]
 801c7de:	7800      	ldrb	r0, [r0, #0]
 801c7e0:	9011      	str	r0, [sp, #68]	; 0x44
 801c7e2:	021b      	lsls	r3, r3, #8
 801c7e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c7e8:	9a07      	ldr	r2, [sp, #28]
 801c7ea:	78d2      	ldrb	r2, [r2, #3]
 801c7ec:	4313      	orrs	r3, r2
 801c7ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c7f0:	3001      	adds	r0, #1
 801c7f2:	441a      	add	r2, r3
 801c7f4:	9005      	str	r0, [sp, #20]
 801c7f6:	1c50      	adds	r0, r2, #1
 801c7f8:	9003      	str	r0, [sp, #12]
 801c7fa:	7852      	ldrb	r2, [r2, #1]
 801c7fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c7fe:	0212      	lsls	r2, r2, #8
 801c800:	5cc3      	ldrb	r3, [r0, r3]
 801c802:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c806:	431a      	orrs	r2, r3
 801c808:	b293      	uxth	r3, r2
 801c80a:	930c      	str	r3, [sp, #48]	; 0x30
 801c80c:	2300      	movs	r3, #0
 801c80e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c812:	9308      	str	r3, [sp, #32]
 801c814:	461a      	mov	r2, r3
 801c816:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c81a:	930e      	str	r3, [sp, #56]	; 0x38
 801c81c:	f04f 0801 	mov.w	r8, #1
 801c820:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c824:	f8cd 8008 	str.w	r8, [sp, #8]
 801c828:	46c4      	mov	ip, r8
 801c82a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c82c:	2d00      	cmp	r5, #0
 801c82e:	d07c      	beq.n	801c92a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c830:	45ac      	cmp	ip, r5
 801c832:	d26c      	bcs.n	801c90e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c834:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c836:	eba5 050c 	sub.w	r5, r5, ip
 801c83a:	455b      	cmp	r3, fp
 801c83c:	b2ad      	uxth	r5, r5
 801c83e:	4608      	mov	r0, r1
 801c840:	d802      	bhi.n	801c848 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c842:	e070      	b.n	801c926 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c844:	2b00      	cmp	r3, #0
 801c846:	d15c      	bne.n	801c902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c848:	9b03      	ldr	r3, [sp, #12]
 801c84a:	9a02      	ldr	r2, [sp, #8]
 801c84c:	785b      	ldrb	r3, [r3, #1]
 801c84e:	9902      	ldr	r1, [sp, #8]
 801c850:	f1c2 0207 	rsb	r2, r2, #7
 801c854:	4093      	lsls	r3, r2
 801c856:	005b      	lsls	r3, r3, #1
 801c858:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c85c:	9b03      	ldr	r3, [sp, #12]
 801c85e:	781b      	ldrb	r3, [r3, #0]
 801c860:	410b      	asrs	r3, r1
 801c862:	3101      	adds	r1, #1
 801c864:	b2c9      	uxtb	r1, r1
 801c866:	2908      	cmp	r1, #8
 801c868:	9102      	str	r1, [sp, #8]
 801c86a:	9903      	ldr	r1, [sp, #12]
 801c86c:	bf0a      	itet	eq
 801c86e:	3102      	addeq	r1, #2
 801c870:	3101      	addne	r1, #1
 801c872:	9103      	streq	r1, [sp, #12]
 801c874:	b2db      	uxtb	r3, r3
 801c876:	bf0a      	itet	eq
 801c878:	2100      	moveq	r1, #0
 801c87a:	9103      	strne	r1, [sp, #12]
 801c87c:	9102      	streq	r1, [sp, #8]
 801c87e:	4313      	orrs	r3, r2
 801c880:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c882:	b29a      	uxth	r2, r3
 801c884:	4291      	cmp	r1, r2
 801c886:	d30a      	bcc.n	801c89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c888:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c88c:	2301      	movs	r3, #1
 801c88e:	9905      	ldr	r1, [sp, #20]
 801c890:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c894:	d30f      	bcc.n	801c8b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c896:	2100      	movs	r1, #0
 801c898:	4698      	mov	r8, r3
 801c89a:	9100      	str	r1, [sp, #0]
 801c89c:	e032      	b.n	801c904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c89e:	9b05      	ldr	r3, [sp, #20]
 801c8a0:	429a      	cmp	r2, r3
 801c8a2:	d318      	bcc.n	801c8d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c8a4:	eb04 0308 	add.w	r3, r4, r8
 801c8a8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c8ac:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c8b0:	f108 0301 	add.w	r3, r8, #1
 801c8b4:	b29b      	uxth	r3, r3
 801c8b6:	9905      	ldr	r1, [sp, #20]
 801c8b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c8bc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c8c0:	710e      	strb	r6, [r1, #4]
 801c8c2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c8c4:	80ce      	strh	r6, [r1, #6]
 801c8c6:	f108 0601 	add.w	r6, r8, #1
 801c8ca:	714e      	strb	r6, [r1, #5]
 801c8cc:	9905      	ldr	r1, [sp, #20]
 801c8ce:	3101      	adds	r1, #1
 801c8d0:	b289      	uxth	r1, r1
 801c8d2:	9105      	str	r1, [sp, #20]
 801c8d4:	e7df      	b.n	801c896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c8d6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c8da:	4611      	mov	r1, r2
 801c8dc:	795b      	ldrb	r3, [r3, #5]
 801c8de:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c8e2:	4426      	add	r6, r4
 801c8e4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c8e6:	4437      	add	r7, r6
 801c8e8:	2f00      	cmp	r7, #0
 801c8ea:	dd06      	ble.n	801c8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c8ec:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c8f0:	790f      	ldrb	r7, [r1, #4]
 801c8f2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c8f6:	88c9      	ldrh	r1, [r1, #6]
 801c8f8:	e7f4      	b.n	801c8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c8fa:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c8fe:	b29b      	uxth	r3, r3
 801c900:	e7c5      	b.n	801c88e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c902:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c904:	920c      	str	r2, [sp, #48]	; 0x30
 801c906:	4601      	mov	r1, r0
 801c908:	9a00      	ldr	r2, [sp, #0]
 801c90a:	469c      	mov	ip, r3
 801c90c:	e78e      	b.n	801c82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c90e:	1957      	adds	r7, r2, r5
 801c910:	ebac 0305 	sub.w	r3, ip, r5
 801c914:	b2ba      	uxth	r2, r7
 801c916:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c91a:	9200      	str	r2, [sp, #0]
 801c91c:	b29b      	uxth	r3, r3
 801c91e:	2500      	movs	r5, #0
 801c920:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c922:	455a      	cmp	r2, fp
 801c924:	d88e      	bhi.n	801c844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c926:	4601      	mov	r1, r0
 801c928:	e749      	b.n	801c7be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c92a:	458c      	cmp	ip, r1
 801c92c:	bf2c      	ite	cs
 801c92e:	4628      	movcs	r0, r5
 801c930:	462b      	movcc	r3, r5
 801c932:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c934:	bf27      	ittee	cs
 801c936:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c938:	ebac 0301 	subcs.w	r3, ip, r1
 801c93c:	eba1 000c 	subcc.w	r0, r1, ip
 801c940:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c944:	bf2c      	ite	cs
 801c946:	b29b      	uxthcs	r3, r3
 801c948:	b280      	uxthcc	r0, r0
 801c94a:	2dff      	cmp	r5, #255	; 0xff
 801c94c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c94e:	eb02 0705 	add.w	r7, r2, r5
 801c952:	b2bd      	uxth	r5, r7
 801c954:	9500      	str	r5, [sp, #0]
 801c956:	d12f      	bne.n	801c9b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c958:	465e      	mov	r6, fp
 801c95a:	9d00      	ldr	r5, [sp, #0]
 801c95c:	42aa      	cmp	r2, r5
 801c95e:	f040 8084 	bne.w	801ca6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c962:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c964:	458c      	cmp	ip, r1
 801c966:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c96a:	d3d8      	bcc.n	801c91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c96c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c96e:	9904      	ldr	r1, [sp, #16]
 801c970:	8812      	ldrh	r2, [r2, #0]
 801c972:	1a52      	subs	r2, r2, r1
 801c974:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c978:	9a08      	ldr	r2, [sp, #32]
 801c97a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c97c:	3201      	adds	r2, #1
 801c97e:	428a      	cmp	r2, r1
 801c980:	9208      	str	r2, [sp, #32]
 801c982:	f040 8092 	bne.w	801caaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c986:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c98a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c98e:	9b04      	ldr	r3, [sp, #16]
 801c990:	eba5 050c 	sub.w	r5, r5, ip
 801c994:	b2ad      	uxth	r5, r5
 801c996:	2d00      	cmp	r5, #0
 801c998:	bf08      	it	eq
 801c99a:	4619      	moveq	r1, r3
 801c99c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c99e:	bf18      	it	ne
 801c9a0:	2100      	movne	r1, #0
 801c9a2:	3301      	adds	r3, #1
 801c9a4:	930d      	str	r3, [sp, #52]	; 0x34
 801c9a6:	b289      	uxth	r1, r1
 801c9a8:	e700      	b.n	801c7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c9aa:	bf00      	nop
 801c9ac:	20012e5c 	.word	0x20012e5c
 801c9b0:	20012e56 	.word	0x20012e56
 801c9b4:	fffff7fb 	.word	0xfffff7fb
 801c9b8:	46d9      	mov	r9, fp
 801c9ba:	9d00      	ldr	r5, [sp, #0]
 801c9bc:	42aa      	cmp	r2, r5
 801c9be:	d0d0      	beq.n	801c962 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c9c0:	1c55      	adds	r5, r2, #1
 801c9c2:	4422      	add	r2, r4
 801c9c4:	9517      	str	r5, [sp, #92]	; 0x5c
 801c9c6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c9ca:	9a06      	ldr	r2, [sp, #24]
 801c9cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c9d0:	4472      	add	r2, lr
 801c9d2:	9212      	str	r2, [sp, #72]	; 0x48
 801c9d4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c9d6:	f8b9 2000 	ldrh.w	r2, [r9]
 801c9da:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c9de:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c9e0:	1216      	asrs	r6, r2, #8
 801c9e2:	fb1a fa07 	smulbb	sl, sl, r7
 801c9e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c9ea:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c9ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c9f0:	fb06 a607 	mla	r6, r6, r7, sl
 801c9f4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c9f6:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c9fa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c9fc:	10d5      	asrs	r5, r2, #3
 801c9fe:	fb1a fa07 	smulbb	sl, sl, r7
 801ca02:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ca06:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ca08:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ca0c:	fb05 a507 	mla	r5, r5, r7, sl
 801ca10:	9f06      	ldr	r7, [sp, #24]
 801ca12:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ca16:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ca18:	00d2      	lsls	r2, r2, #3
 801ca1a:	fb1e fe07 	smulbb	lr, lr, r7
 801ca1e:	b2d2      	uxtb	r2, r2
 801ca20:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ca22:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ca26:	b2b6      	uxth	r6, r6
 801ca28:	fb02 e207 	mla	r2, r2, r7, lr
 801ca2c:	b292      	uxth	r2, r2
 801ca2e:	b2ad      	uxth	r5, r5
 801ca30:	f106 0a01 	add.w	sl, r6, #1
 801ca34:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ca38:	f102 0e01 	add.w	lr, r2, #1
 801ca3c:	f105 0a01 	add.w	sl, r5, #1
 801ca40:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801ca44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ca48:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ca4c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ca50:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ca54:	ea4e 0606 	orr.w	r6, lr, r6
 801ca58:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ca5c:	ea46 060a 	orr.w	r6, r6, sl
 801ca60:	f829 6b02 	strh.w	r6, [r9], #2
 801ca64:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ca68:	e7a7      	b.n	801c9ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801ca6a:	f102 0e01 	add.w	lr, r2, #1
 801ca6e:	4422      	add	r2, r4
 801ca70:	9f06      	ldr	r7, [sp, #24]
 801ca72:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801ca76:	9a06      	ldr	r2, [sp, #24]
 801ca78:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ca7c:	eb02 0a05 	add.w	sl, r2, r5
 801ca80:	4a13      	ldr	r2, [pc, #76]	; (801cad0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801ca82:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801ca86:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801ca8a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ca8e:	00d2      	lsls	r2, r2, #3
 801ca90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca94:	ea49 0202 	orr.w	r2, r9, r2
 801ca98:	f817 9005 	ldrb.w	r9, [r7, r5]
 801ca9c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801caa0:	f826 2b02 	strh.w	r2, [r6], #2
 801caa4:	fa1f f28e 	uxth.w	r2, lr
 801caa8:	e757      	b.n	801c95a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801caaa:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801caae:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cab2:	1a2d      	subs	r5, r5, r0
 801cab4:	b2ad      	uxth	r5, r5
 801cab6:	2d00      	cmp	r5, #0
 801cab8:	bf18      	it	ne
 801caba:	2000      	movne	r0, #0
 801cabc:	e730      	b.n	801c920 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cabe:	4b05      	ldr	r3, [pc, #20]	; (801cad4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cac0:	6818      	ldr	r0, [r3, #0]
 801cac2:	6803      	ldr	r3, [r0, #0]
 801cac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cac6:	4798      	blx	r3
 801cac8:	b01f      	add	sp, #124	; 0x7c
 801caca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cace:	bf00      	nop
 801cad0:	fffff800 	.word	0xfffff800
 801cad4:	20012e5c 	.word	0x20012e5c

0801cad8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801cad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cadc:	b091      	sub	sp, #68	; 0x44
 801cade:	469b      	mov	fp, r3
 801cae0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801cae4:	4616      	mov	r6, r2
 801cae6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801caea:	f9b3 2000 	ldrsh.w	r2, [r3]
 801caee:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801caf2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801caf6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cafa:	4604      	mov	r4, r0
 801cafc:	460d      	mov	r5, r1
 801cafe:	4640      	mov	r0, r8
 801cb00:	4659      	mov	r1, fp
 801cb02:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cb06:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801cb0a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801cb0e:	f7f3 fa1d 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 801cb12:	4631      	mov	r1, r6
 801cb14:	4640      	mov	r0, r8
 801cb16:	f7f3 fa19 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 801cb1a:	4b74      	ldr	r3, [pc, #464]	; (801ccec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801cb1c:	8818      	ldrh	r0, [r3, #0]
 801cb1e:	4b74      	ldr	r3, [pc, #464]	; (801ccf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801cb20:	8819      	ldrh	r1, [r3, #0]
 801cb22:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cb26:	2b00      	cmp	r3, #0
 801cb28:	b202      	sxth	r2, r0
 801cb2a:	b20e      	sxth	r6, r1
 801cb2c:	da07      	bge.n	801cb3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801cb2e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801cb32:	4463      	add	r3, ip
 801cb34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801cb38:	2300      	movs	r3, #0
 801cb3a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801cb3e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cb42:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cb46:	1ad2      	subs	r2, r2, r3
 801cb48:	4594      	cmp	ip, r2
 801cb4a:	bfc4      	itt	gt
 801cb4c:	1ac2      	subgt	r2, r0, r3
 801cb4e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801cb52:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cb56:	2a00      	cmp	r2, #0
 801cb58:	da07      	bge.n	801cb6a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801cb5a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801cb5e:	4462      	add	r2, ip
 801cb60:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801cb64:	2200      	movs	r2, #0
 801cb66:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801cb6a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801cb6e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801cb72:	eba6 060a 	sub.w	r6, r6, sl
 801cb76:	42b2      	cmp	r2, r6
 801cb78:	bfc4      	itt	gt
 801cb7a:	eba1 020a 	subgt.w	r2, r1, sl
 801cb7e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801cb82:	4a5c      	ldr	r2, [pc, #368]	; (801ccf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801cb84:	7812      	ldrb	r2, [r2, #0]
 801cb86:	b9a2      	cbnz	r2, 801cbb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801cb88:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cb8c:	4286      	cmp	r6, r0
 801cb8e:	4640      	mov	r0, r8
 801cb90:	9303      	str	r3, [sp, #12]
 801cb92:	bf14      	ite	ne
 801cb94:	2600      	movne	r6, #0
 801cb96:	2601      	moveq	r6, #1
 801cb98:	f7f3 fa1b 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cb9c:	9b03      	ldr	r3, [sp, #12]
 801cb9e:	b160      	cbz	r0, 801cbba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801cba0:	2300      	movs	r3, #0
 801cba2:	8023      	strh	r3, [r4, #0]
 801cba4:	8063      	strh	r3, [r4, #2]
 801cba6:	80a3      	strh	r3, [r4, #4]
 801cba8:	4620      	mov	r0, r4
 801cbaa:	80e3      	strh	r3, [r4, #6]
 801cbac:	b011      	add	sp, #68	; 0x44
 801cbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbb2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cbb6:	428e      	cmp	r6, r1
 801cbb8:	e7e9      	b.n	801cb8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801cbba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801cbbe:	9205      	str	r2, [sp, #20]
 801cbc0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801cbc4:	9206      	str	r2, [sp, #24]
 801cbc6:	f8bb 2000 	ldrh.w	r2, [fp]
 801cbca:	900e      	str	r0, [sp, #56]	; 0x38
 801cbcc:	1a9b      	subs	r3, r3, r2
 801cbce:	b21b      	sxth	r3, r3
 801cbd0:	9303      	str	r3, [sp, #12]
 801cbd2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cbd6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801cbda:	ebaa 0a03 	sub.w	sl, sl, r3
 801cbde:	fa0f f38a 	sxth.w	r3, sl
 801cbe2:	9304      	str	r3, [sp, #16]
 801cbe4:	9b03      	ldr	r3, [sp, #12]
 801cbe6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801cbea:	9b04      	ldr	r3, [sp, #16]
 801cbec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cbf0:	9b05      	ldr	r3, [sp, #20]
 801cbf2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801cbf6:	a90e      	add	r1, sp, #56	; 0x38
 801cbf8:	9b06      	ldr	r3, [sp, #24]
 801cbfa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801cbfe:	a80c      	add	r0, sp, #48	; 0x30
 801cc00:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801cc04:	f7f8 f944 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc08:	4640      	mov	r0, r8
 801cc0a:	f7f8 f8fd 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc0e:	a80e      	add	r0, sp, #56	; 0x38
 801cc10:	f7f8 f8fa 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc14:	4b38      	ldr	r3, [pc, #224]	; (801ccf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801cc16:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801cc1a:	881b      	ldrh	r3, [r3, #0]
 801cc1c:	9307      	str	r3, [sp, #28]
 801cc1e:	682b      	ldr	r3, [r5, #0]
 801cc20:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801ccfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cc24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cc26:	4628      	mov	r0, r5
 801cc28:	4798      	blx	r3
 801cc2a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801cc2e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801cc32:	4681      	mov	r9, r0
 801cc34:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801cc38:	f8db 0000 	ldr.w	r0, [fp]
 801cc3c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801cc3e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801cc42:	6803      	ldr	r3, [r0, #0]
 801cc44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cc46:	4798      	blx	r3
 801cc48:	4607      	mov	r7, r0
 801cc4a:	f8db 0000 	ldr.w	r0, [fp]
 801cc4e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801cc52:	6803      	ldr	r3, [r0, #0]
 801cc54:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cc58:	9109      	str	r1, [sp, #36]	; 0x24
 801cc5a:	9208      	str	r2, [sp, #32]
 801cc5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc5e:	4798      	blx	r3
 801cc60:	f010 0f01 	tst.w	r0, #1
 801cc64:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cc68:	d012      	beq.n	801cc90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801cc6a:	f8db 0000 	ldr.w	r0, [fp]
 801cc6e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801cc72:	6803      	ldr	r3, [r0, #0]
 801cc74:	9200      	str	r2, [sp, #0]
 801cc76:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801cc78:	e898 0006 	ldmia.w	r8, {r1, r2}
 801cc7c:	462b      	mov	r3, r5
 801cc7e:	47b0      	blx	r6
 801cc80:	9b03      	ldr	r3, [sp, #12]
 801cc82:	8023      	strh	r3, [r4, #0]
 801cc84:	9b04      	ldr	r3, [sp, #16]
 801cc86:	8063      	strh	r3, [r4, #2]
 801cc88:	9b05      	ldr	r3, [sp, #20]
 801cc8a:	80a3      	strh	r3, [r4, #4]
 801cc8c:	9b06      	ldr	r3, [sp, #24]
 801cc8e:	e78b      	b.n	801cba8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801cc90:	fb09 f202 	mul.w	r2, r9, r2
 801cc94:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801cc98:	440f      	add	r7, r1
 801cc9a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801cc9e:	b166      	cbz	r6, 801ccba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cca0:	9a07      	ldr	r2, [sp, #28]
 801cca2:	4592      	cmp	sl, r2
 801cca4:	d109      	bne.n	801ccba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cca6:	f8db 0000 	ldr.w	r0, [fp]
 801ccaa:	6802      	ldr	r2, [r0, #0]
 801ccac:	fb09 f303 	mul.w	r3, r9, r3
 801ccb0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801ccb2:	4629      	mov	r1, r5
 801ccb4:	463a      	mov	r2, r7
 801ccb6:	47b0      	blx	r6
 801ccb8:	e7e2      	b.n	801cc80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ccba:	fb0a f303 	mul.w	r3, sl, r3
 801ccbe:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801ccfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ccc2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801ccc6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801ccca:	4545      	cmp	r5, r8
 801cccc:	d2d8      	bcs.n	801cc80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ccce:	f8db 0000 	ldr.w	r0, [fp]
 801ccd2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ccd6:	6802      	ldr	r2, [r0, #0]
 801ccd8:	4629      	mov	r1, r5
 801ccda:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ccde:	005b      	lsls	r3, r3, #1
 801cce0:	463a      	mov	r2, r7
 801cce2:	47d0      	blx	sl
 801cce4:	444f      	add	r7, r9
 801cce6:	4435      	add	r5, r6
 801cce8:	e7ef      	b.n	801ccca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ccea:	bf00      	nop
 801ccec:	20012e50 	.word	0x20012e50
 801ccf0:	20012e52 	.word	0x20012e52
 801ccf4:	20012e54 	.word	0x20012e54
 801ccf8:	20012e56 	.word	0x20012e56
 801ccfc:	20012e5c 	.word	0x20012e5c

0801cd00 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cd00:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cd02:	4606      	mov	r6, r0
 801cd04:	b087      	sub	sp, #28
 801cd06:	460c      	mov	r4, r1
 801cd08:	4617      	mov	r7, r2
 801cd0a:	461d      	mov	r5, r3
 801cd0c:	b333      	cbz	r3, 801cd5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cd0e:	4608      	mov	r0, r1
 801cd10:	f7f3 f95f 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cd14:	bb10      	cbnz	r0, 801cd5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cd16:	6820      	ldr	r0, [r4, #0]
 801cd18:	6861      	ldr	r1, [r4, #4]
 801cd1a:	4c1c      	ldr	r4, [pc, #112]	; (801cd8c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cd1c:	ab04      	add	r3, sp, #16
 801cd1e:	c303      	stmia	r3!, {r0, r1}
 801cd20:	a804      	add	r0, sp, #16
 801cd22:	f7f8 f871 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd26:	6820      	ldr	r0, [r4, #0]
 801cd28:	6803      	ldr	r3, [r0, #0]
 801cd2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd2c:	4798      	blx	r3
 801cd2e:	2dff      	cmp	r5, #255	; 0xff
 801cd30:	d016      	beq.n	801cd60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cd32:	f010 0f08 	tst.w	r0, #8
 801cd36:	6820      	ldr	r0, [r4, #0]
 801cd38:	d015      	beq.n	801cd66 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cd3a:	2400      	movs	r4, #0
 801cd3c:	6801      	ldr	r1, [r0, #0]
 801cd3e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cd42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cd46:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cd4a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cd4e:	9401      	str	r4, [sp, #4]
 801cd50:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cd54:	9400      	str	r4, [sp, #0]
 801cd56:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801cd58:	4639      	mov	r1, r7
 801cd5a:	47a0      	blx	r4
 801cd5c:	b007      	add	sp, #28
 801cd5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cd60:	f010 0f02 	tst.w	r0, #2
 801cd64:	e7e7      	b.n	801cd36 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cd66:	6803      	ldr	r3, [r0, #0]
 801cd68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd6a:	4798      	blx	r3
 801cd6c:	4b08      	ldr	r3, [pc, #32]	; (801cd90 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cd6e:	881a      	ldrh	r2, [r3, #0]
 801cd70:	6833      	ldr	r3, [r6, #0]
 801cd72:	e9cd 7500 	strd	r7, r5, [sp]
 801cd76:	4601      	mov	r1, r0
 801cd78:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801cd7a:	4630      	mov	r0, r6
 801cd7c:	ab04      	add	r3, sp, #16
 801cd7e:	47a8      	blx	r5
 801cd80:	6820      	ldr	r0, [r4, #0]
 801cd82:	6803      	ldr	r3, [r0, #0]
 801cd84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd86:	4798      	blx	r3
 801cd88:	e7e8      	b.n	801cd5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cd8a:	bf00      	nop
 801cd8c:	20012e5c 	.word	0x20012e5c
 801cd90:	20012e56 	.word	0x20012e56

0801cd94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cd94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cd98:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cd9c:	9e08      	ldr	r6, [sp, #32]
 801cd9e:	4688      	mov	r8, r1
 801cda0:	4614      	mov	r4, r2
 801cda2:	461d      	mov	r5, r3
 801cda4:	2f00      	cmp	r7, #0
 801cda6:	f000 80a9 	beq.w	801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cdaa:	4618      	mov	r0, r3
 801cdac:	f7f3 f911 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cdb0:	2800      	cmp	r0, #0
 801cdb2:	f040 80a3 	bne.w	801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cdb6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cdba:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cdbe:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cdc2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cdc6:	fb04 1303 	mla	r3, r4, r3, r1
 801cdca:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cdce:	4365      	muls	r5, r4
 801cdd0:	2fff      	cmp	r7, #255	; 0xff
 801cdd2:	eba4 0200 	sub.w	r2, r4, r0
 801cdd6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cdda:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cdde:	d04a      	beq.n	801ce76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cde0:	b2bc      	uxth	r4, r7
 801cde2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cde6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cdea:	fa5f f788 	uxtb.w	r7, r8
 801cdee:	b2f3      	uxtb	r3, r6
 801cdf0:	0040      	lsls	r0, r0, #1
 801cdf2:	fb0e fe04 	mul.w	lr, lr, r4
 801cdf6:	4367      	muls	r7, r4
 801cdf8:	4363      	muls	r3, r4
 801cdfa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cdfe:	fa1f fc8c 	uxth.w	ip, ip
 801ce02:	42a9      	cmp	r1, r5
 801ce04:	d27a      	bcs.n	801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ce06:	eb01 0900 	add.w	r9, r1, r0
 801ce0a:	4549      	cmp	r1, r9
 801ce0c:	d231      	bcs.n	801ce72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801ce0e:	880a      	ldrh	r2, [r1, #0]
 801ce10:	1214      	asrs	r4, r2, #8
 801ce12:	10d6      	asrs	r6, r2, #3
 801ce14:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ce18:	00d2      	lsls	r2, r2, #3
 801ce1a:	b2d2      	uxtb	r2, r2
 801ce1c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ce20:	fb14 f40c 	smulbb	r4, r4, ip
 801ce24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce28:	4474      	add	r4, lr
 801ce2a:	fb12 f20c 	smulbb	r2, r2, ip
 801ce2e:	b2a4      	uxth	r4, r4
 801ce30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ce34:	441a      	add	r2, r3
 801ce36:	b292      	uxth	r2, r2
 801ce38:	f104 0a01 	add.w	sl, r4, #1
 801ce3c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ce40:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ce44:	fb16 f60c 	smulbb	r6, r6, ip
 801ce48:	f102 0a01 	add.w	sl, r2, #1
 801ce4c:	443e      	add	r6, r7
 801ce4e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ce52:	b2b6      	uxth	r6, r6
 801ce54:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ce58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce5c:	4322      	orrs	r2, r4
 801ce5e:	1c74      	adds	r4, r6, #1
 801ce60:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ce64:	0976      	lsrs	r6, r6, #5
 801ce66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ce6a:	4332      	orrs	r2, r6
 801ce6c:	f821 2b02 	strh.w	r2, [r1], #2
 801ce70:	e7cb      	b.n	801ce0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ce72:	4441      	add	r1, r8
 801ce74:	e7c5      	b.n	801ce02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ce76:	4f22      	ldr	r7, [pc, #136]	; (801cf00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ce78:	0973      	lsrs	r3, r6, #5
 801ce7a:	ea08 0707 	and.w	r7, r8, r7
 801ce7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce82:	433b      	orrs	r3, r7
 801ce84:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ce88:	4333      	orrs	r3, r6
 801ce8a:	07e7      	lsls	r7, r4, #31
 801ce8c:	b29b      	uxth	r3, r3
 801ce8e:	d50b      	bpl.n	801cea8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ce90:	0040      	lsls	r0, r0, #1
 801ce92:	0052      	lsls	r2, r2, #1
 801ce94:	42a9      	cmp	r1, r5
 801ce96:	d231      	bcs.n	801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ce98:	180c      	adds	r4, r1, r0
 801ce9a:	42a1      	cmp	r1, r4
 801ce9c:	d202      	bcs.n	801cea4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ce9e:	f821 3b02 	strh.w	r3, [r1], #2
 801cea2:	e7fa      	b.n	801ce9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cea4:	4411      	add	r1, r2
 801cea6:	e7f5      	b.n	801ce94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cea8:	078e      	lsls	r6, r1, #30
 801ceaa:	d008      	beq.n	801cebe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ceac:	0066      	lsls	r6, r4, #1
 801ceae:	460a      	mov	r2, r1
 801ceb0:	42aa      	cmp	r2, r5
 801ceb2:	d202      	bcs.n	801ceba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ceb4:	8013      	strh	r3, [r2, #0]
 801ceb6:	4432      	add	r2, r6
 801ceb8:	e7fa      	b.n	801ceb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ceba:	3102      	adds	r1, #2
 801cebc:	3801      	subs	r0, #1
 801cebe:	07c2      	lsls	r2, r0, #31
 801cec0:	d50b      	bpl.n	801ceda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cec2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cec6:	3a01      	subs	r2, #1
 801cec8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cecc:	0066      	lsls	r6, r4, #1
 801cece:	42aa      	cmp	r2, r5
 801ced0:	d202      	bcs.n	801ced8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ced2:	8013      	strh	r3, [r2, #0]
 801ced4:	4432      	add	r2, r6
 801ced6:	e7fa      	b.n	801cece <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ced8:	3801      	subs	r0, #1
 801ceda:	b178      	cbz	r0, 801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cedc:	1040      	asrs	r0, r0, #1
 801cede:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cee2:	0080      	lsls	r0, r0, #2
 801cee4:	0064      	lsls	r4, r4, #1
 801cee6:	42a9      	cmp	r1, r5
 801cee8:	d208      	bcs.n	801cefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ceea:	180e      	adds	r6, r1, r0
 801ceec:	460a      	mov	r2, r1
 801ceee:	42b2      	cmp	r2, r6
 801cef0:	d202      	bcs.n	801cef8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801cef2:	f842 3b04 	str.w	r3, [r2], #4
 801cef6:	e7fa      	b.n	801ceee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801cef8:	4421      	add	r1, r4
 801cefa:	e7f4      	b.n	801cee6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801cefc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cf00:	00fff800 	.word	0x00fff800

0801cf04 <_ZN8touchgfx8LCD16bppC1Ev>:
 801cf04:	2200      	movs	r2, #0
 801cf06:	4912      	ldr	r1, [pc, #72]	; (801cf50 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cf08:	6042      	str	r2, [r0, #4]
 801cf0a:	6001      	str	r1, [r0, #0]
 801cf0c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cf10:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cf14:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cf18:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cf1c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cf20:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cf24:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cf28:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cf2c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cf30:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cf34:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cf38:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cf3c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cf40:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cf44:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cf48:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cf4c:	4770      	bx	lr
 801cf4e:	bf00      	nop
 801cf50:	0802ea70 	.word	0x0802ea70

0801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cf54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf58:	460d      	mov	r5, r1
 801cf5a:	b08d      	sub	sp, #52	; 0x34
 801cf5c:	4604      	mov	r4, r0
 801cf5e:	6808      	ldr	r0, [r1, #0]
 801cf60:	6849      	ldr	r1, [r1, #4]
 801cf62:	4699      	mov	r9, r3
 801cf64:	ab08      	add	r3, sp, #32
 801cf66:	c303      	stmia	r3!, {r0, r1}
 801cf68:	6810      	ldr	r0, [r2, #0]
 801cf6a:	6851      	ldr	r1, [r2, #4]
 801cf6c:	ab0a      	add	r3, sp, #40	; 0x28
 801cf6e:	c303      	stmia	r3!, {r0, r1}
 801cf70:	a808      	add	r0, sp, #32
 801cf72:	f7f7 ff49 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf76:	4629      	mov	r1, r5
 801cf78:	a80a      	add	r0, sp, #40	; 0x28
 801cf7a:	f7f7 ff89 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf7e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801cf82:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801cf86:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801cf8a:	4d63      	ldr	r5, [pc, #396]	; (801d118 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cf8c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801cf90:	6828      	ldr	r0, [r5, #0]
 801cf92:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cf96:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf9a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cf9e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801cfa2:	440a      	add	r2, r1
 801cfa4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cfa8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801cfac:	4413      	add	r3, r2
 801cfae:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cfb2:	6803      	ldr	r3, [r0, #0]
 801cfb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cfb6:	4798      	blx	r3
 801cfb8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cfbc:	d119      	bne.n	801cff2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cfbe:	f010 0f20 	tst.w	r0, #32
 801cfc2:	6828      	ldr	r0, [r5, #0]
 801cfc4:	d018      	beq.n	801cff8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801cfc6:	2500      	movs	r5, #0
 801cfc8:	6801      	ldr	r1, [r0, #0]
 801cfca:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cfce:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801cfd2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801cfd6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cfda:	9502      	str	r5, [sp, #8]
 801cfdc:	b2b6      	uxth	r6, r6
 801cfde:	fa1f f588 	uxth.w	r5, r8
 801cfe2:	9601      	str	r6, [sp, #4]
 801cfe4:	9500      	str	r5, [sp, #0]
 801cfe6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cfe8:	4621      	mov	r1, r4
 801cfea:	47a8      	blx	r5
 801cfec:	b00d      	add	sp, #52	; 0x34
 801cfee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cff2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cff6:	e7e4      	b.n	801cfc2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cff8:	6803      	ldr	r3, [r0, #0]
 801cffa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cffc:	4798      	blx	r3
 801cffe:	4947      	ldr	r1, [pc, #284]	; (801d11c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d000:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d004:	880b      	ldrh	r3, [r1, #0]
 801d006:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801d00a:	fb03 5202 	mla	r2, r3, r2, r5
 801d00e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d012:	4373      	muls	r3, r6
 801d014:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d018:	9307      	str	r3, [sp, #28]
 801d01a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d01e:	9306      	str	r3, [sp, #24]
 801d020:	468a      	mov	sl, r1
 801d022:	9b07      	ldr	r3, [sp, #28]
 801d024:	4298      	cmp	r0, r3
 801d026:	d270      	bcs.n	801d10a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d028:	9b06      	ldr	r3, [sp, #24]
 801d02a:	4621      	mov	r1, r4
 801d02c:	eb00 0b03 	add.w	fp, r0, r3
 801d030:	4558      	cmp	r0, fp
 801d032:	d25d      	bcs.n	801d0f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d034:	f851 4b04 	ldr.w	r4, [r1], #4
 801d038:	0e23      	lsrs	r3, r4, #24
 801d03a:	d014      	beq.n	801d066 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d03c:	2bff      	cmp	r3, #255	; 0xff
 801d03e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d042:	d112      	bne.n	801d06a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d044:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d048:	d10f      	bne.n	801d06a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d04a:	0963      	lsrs	r3, r4, #5
 801d04c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801d050:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d054:	f02c 0c07 	bic.w	ip, ip, #7
 801d058:	ea43 0c0c 	orr.w	ip, r3, ip
 801d05c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d060:	ea4c 0404 	orr.w	r4, ip, r4
 801d064:	8004      	strh	r4, [r0, #0]
 801d066:	3002      	adds	r0, #2
 801d068:	e7e2      	b.n	801d030 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d06a:	fb09 f303 	mul.w	r3, r9, r3
 801d06e:	8807      	ldrh	r7, [r0, #0]
 801d070:	1c5a      	adds	r2, r3, #1
 801d072:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d076:	1212      	asrs	r2, r2, #8
 801d078:	123e      	asrs	r6, r7, #8
 801d07a:	b293      	uxth	r3, r2
 801d07c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d080:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d084:	43d2      	mvns	r2, r2
 801d086:	b2d2      	uxtb	r2, r2
 801d088:	10fd      	asrs	r5, r7, #3
 801d08a:	fb1e fe03 	smulbb	lr, lr, r3
 801d08e:	00ff      	lsls	r7, r7, #3
 801d090:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d094:	fb06 e602 	mla	r6, r6, r2, lr
 801d098:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d09c:	b2ff      	uxtb	r7, r7
 801d09e:	fa5f fc8c 	uxtb.w	ip, ip
 801d0a2:	b2e4      	uxtb	r4, r4
 801d0a4:	b2b6      	uxth	r6, r6
 801d0a6:	fb1c fc03 	smulbb	ip, ip, r3
 801d0aa:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d0ae:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d0b2:	fb14 f403 	smulbb	r4, r4, r3
 801d0b6:	fb05 c502 	mla	r5, r5, r2, ip
 801d0ba:	f106 0e01 	add.w	lr, r6, #1
 801d0be:	fb07 4702 	mla	r7, r7, r2, r4
 801d0c2:	b2ad      	uxth	r5, r5
 801d0c4:	b2bf      	uxth	r7, r7
 801d0c6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d0ca:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801d0ce:	f105 0c01 	add.w	ip, r5, #1
 801d0d2:	1c7e      	adds	r6, r7, #1
 801d0d4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d0d8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d0dc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d0e0:	096d      	lsrs	r5, r5, #5
 801d0e2:	ea46 060e 	orr.w	r6, r6, lr
 801d0e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0ea:	432e      	orrs	r6, r5
 801d0ec:	8006      	strh	r6, [r0, #0]
 801d0ee:	e7ba      	b.n	801d066 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d0f0:	f8ba 3000 	ldrh.w	r3, [sl]
 801d0f4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801d0f8:	eba3 0308 	sub.w	r3, r3, r8
 801d0fc:	eba4 0408 	sub.w	r4, r4, r8
 801d100:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d104:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d108:	e78b      	b.n	801d022 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d10a:	4b03      	ldr	r3, [pc, #12]	; (801d118 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d10c:	6818      	ldr	r0, [r3, #0]
 801d10e:	6803      	ldr	r3, [r0, #0]
 801d110:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d112:	4798      	blx	r3
 801d114:	e76a      	b.n	801cfec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d116:	bf00      	nop
 801d118:	20012e5c 	.word	0x20012e5c
 801d11c:	20012e56 	.word	0x20012e56

0801d120 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d120:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d124:	460c      	mov	r4, r1
 801d126:	b085      	sub	sp, #20
 801d128:	6810      	ldr	r0, [r2, #0]
 801d12a:	6851      	ldr	r1, [r2, #4]
 801d12c:	466d      	mov	r5, sp
 801d12e:	c503      	stmia	r5!, {r0, r1}
 801d130:	6818      	ldr	r0, [r3, #0]
 801d132:	6859      	ldr	r1, [r3, #4]
 801d134:	4616      	mov	r6, r2
 801d136:	c503      	stmia	r5!, {r0, r1}
 801d138:	4668      	mov	r0, sp
 801d13a:	f7f7 fe65 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d13e:	4631      	mov	r1, r6
 801d140:	a802      	add	r0, sp, #8
 801d142:	f7f7 fea5 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d146:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d14a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d14e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d152:	4d28      	ldr	r5, [pc, #160]	; (801d1f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d154:	4e28      	ldr	r6, [pc, #160]	; (801d1f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d156:	6828      	ldr	r0, [r5, #0]
 801d158:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d15c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d160:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d164:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d168:	f8bd 1000 	ldrh.w	r1, [sp]
 801d16c:	440a      	add	r2, r1
 801d16e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d172:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d176:	4413      	add	r3, r2
 801d178:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d17c:	6803      	ldr	r3, [r0, #0]
 801d17e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d180:	4798      	blx	r3
 801d182:	8833      	ldrh	r3, [r6, #0]
 801d184:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d188:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d18c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801d1fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d190:	fb03 1202 	mla	r2, r3, r2, r1
 801d194:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d198:	fb08 f303 	mul.w	r3, r8, r3
 801d19c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d1a0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d1a4:	4298      	cmp	r0, r3
 801d1a6:	d21d      	bcs.n	801d1e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d1a8:	eb00 080c 	add.w	r8, r0, ip
 801d1ac:	4540      	cmp	r0, r8
 801d1ae:	d20f      	bcs.n	801d1d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d1b0:	f854 1b04 	ldr.w	r1, [r4], #4
 801d1b4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d1b8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d1bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d1c0:	ea42 0209 	orr.w	r2, r2, r9
 801d1c4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d1c8:	430a      	orrs	r2, r1
 801d1ca:	f820 2b02 	strh.w	r2, [r0], #2
 801d1ce:	e7ed      	b.n	801d1ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d1d0:	8832      	ldrh	r2, [r6, #0]
 801d1d2:	1bd2      	subs	r2, r2, r7
 801d1d4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d1d8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d1dc:	1bd2      	subs	r2, r2, r7
 801d1de:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d1e2:	e7df      	b.n	801d1a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d1e4:	6828      	ldr	r0, [r5, #0]
 801d1e6:	6803      	ldr	r3, [r0, #0]
 801d1e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1ea:	4798      	blx	r3
 801d1ec:	b005      	add	sp, #20
 801d1ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d1f2:	bf00      	nop
 801d1f4:	20012e5c 	.word	0x20012e5c
 801d1f8:	20012e56 	.word	0x20012e56
 801d1fc:	fffff800 	.word	0xfffff800

0801d200 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d204:	460e      	mov	r6, r1
 801d206:	b08e      	sub	sp, #56	; 0x38
 801d208:	4604      	mov	r4, r0
 801d20a:	6808      	ldr	r0, [r1, #0]
 801d20c:	6849      	ldr	r1, [r1, #4]
 801d20e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d3e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d212:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d3ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d216:	461d      	mov	r5, r3
 801d218:	ab0a      	add	r3, sp, #40	; 0x28
 801d21a:	c303      	stmia	r3!, {r0, r1}
 801d21c:	6810      	ldr	r0, [r2, #0]
 801d21e:	6851      	ldr	r1, [r2, #4]
 801d220:	ab0c      	add	r3, sp, #48	; 0x30
 801d222:	c303      	stmia	r3!, {r0, r1}
 801d224:	a80a      	add	r0, sp, #40	; 0x28
 801d226:	f7f7 fdef 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d22a:	4631      	mov	r1, r6
 801d22c:	a80c      	add	r0, sp, #48	; 0x30
 801d22e:	f7f7 fe2f 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d232:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d236:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d23a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d23e:	f8d8 0000 	ldr.w	r0, [r8]
 801d242:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d246:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d24a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d24e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d252:	440c      	add	r4, r1
 801d254:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d258:	440a      	add	r2, r1
 801d25a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d25e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d262:	4413      	add	r3, r2
 801d264:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d268:	6803      	ldr	r3, [r0, #0]
 801d26a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d26c:	4798      	blx	r3
 801d26e:	2dff      	cmp	r5, #255	; 0xff
 801d270:	d124      	bne.n	801d2bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d272:	f010 0f01 	tst.w	r0, #1
 801d276:	f8d8 0000 	ldr.w	r0, [r8]
 801d27a:	d022      	beq.n	801d2c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d27c:	2100      	movs	r1, #0
 801d27e:	f8d0 c000 	ldr.w	ip, [r0]
 801d282:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d286:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d28a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d28e:	f04f 0e01 	mov.w	lr, #1
 801d292:	f8cd e018 	str.w	lr, [sp, #24]
 801d296:	f8b9 e000 	ldrh.w	lr, [r9]
 801d29a:	9503      	str	r5, [sp, #12]
 801d29c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d2a0:	b2b6      	uxth	r6, r6
 801d2a2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d2a6:	9102      	str	r1, [sp, #8]
 801d2a8:	b2bf      	uxth	r7, r7
 801d2aa:	9601      	str	r6, [sp, #4]
 801d2ac:	9700      	str	r7, [sp, #0]
 801d2ae:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d2b2:	4621      	mov	r1, r4
 801d2b4:	47a8      	blx	r5
 801d2b6:	b00e      	add	sp, #56	; 0x38
 801d2b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d2bc:	f010 0f04 	tst.w	r0, #4
 801d2c0:	e7d9      	b.n	801d276 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d2c2:	6803      	ldr	r3, [r0, #0]
 801d2c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d2c6:	4798      	blx	r3
 801d2c8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d2cc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d2d0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d2d4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d2d8:	fb03 1202 	mla	r2, r3, r2, r1
 801d2dc:	ebac 0c07 	sub.w	ip, ip, r7
 801d2e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d2e4:	435e      	muls	r6, r3
 801d2e6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d2ea:	2dff      	cmp	r5, #255	; 0xff
 801d2ec:	eba3 0707 	sub.w	r7, r3, r7
 801d2f0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d2f4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d2f8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d2fc:	d049      	beq.n	801d392 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d2fe:	43eb      	mvns	r3, r5
 801d300:	fa1f f985 	uxth.w	r9, r5
 801d304:	b2db      	uxtb	r3, r3
 801d306:	42b0      	cmp	r0, r6
 801d308:	d266      	bcs.n	801d3d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d30a:	eb00 0a0e 	add.w	sl, r0, lr
 801d30e:	4550      	cmp	r0, sl
 801d310:	4621      	mov	r1, r4
 801d312:	f104 0403 	add.w	r4, r4, #3
 801d316:	d25b      	bcs.n	801d3d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d318:	8802      	ldrh	r2, [r0, #0]
 801d31a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d31e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d322:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d326:	fb11 f109 	smulbb	r1, r1, r9
 801d32a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d32e:	10d5      	asrs	r5, r2, #3
 801d330:	fb08 1803 	mla	r8, r8, r3, r1
 801d334:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d338:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d33c:	fb11 f109 	smulbb	r1, r1, r9
 801d340:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d344:	fb05 1503 	mla	r5, r5, r3, r1
 801d348:	00d2      	lsls	r2, r2, #3
 801d34a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d34e:	b2d2      	uxtb	r2, r2
 801d350:	fb11 f109 	smulbb	r1, r1, r9
 801d354:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d358:	fa1f f888 	uxth.w	r8, r8
 801d35c:	fb02 1203 	mla	r2, r2, r3, r1
 801d360:	b292      	uxth	r2, r2
 801d362:	f108 0101 	add.w	r1, r8, #1
 801d366:	b2ad      	uxth	r5, r5
 801d368:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d36c:	1c51      	adds	r1, r2, #1
 801d36e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d372:	1c69      	adds	r1, r5, #1
 801d374:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d378:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d37c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d380:	096d      	lsrs	r5, r5, #5
 801d382:	ea42 0208 	orr.w	r2, r2, r8
 801d386:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d38a:	432a      	orrs	r2, r5
 801d38c:	f820 2b02 	strh.w	r2, [r0], #2
 801d390:	e7bd      	b.n	801d30e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d392:	4a14      	ldr	r2, [pc, #80]	; (801d3e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d394:	42b0      	cmp	r0, r6
 801d396:	d21f      	bcs.n	801d3d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d398:	eb00 050e 	add.w	r5, r0, lr
 801d39c:	42a8      	cmp	r0, r5
 801d39e:	4621      	mov	r1, r4
 801d3a0:	f104 0403 	add.w	r4, r4, #3
 801d3a4:	d210      	bcs.n	801d3c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d3a6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d3aa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d3ae:	00db      	lsls	r3, r3, #3
 801d3b0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d3b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3b8:	430b      	orrs	r3, r1
 801d3ba:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d3be:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d3c2:	f820 3b02 	strh.w	r3, [r0], #2
 801d3c6:	e7e9      	b.n	801d39c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d3c8:	4438      	add	r0, r7
 801d3ca:	eb01 040c 	add.w	r4, r1, ip
 801d3ce:	e7e1      	b.n	801d394 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d3d0:	4438      	add	r0, r7
 801d3d2:	eb01 040c 	add.w	r4, r1, ip
 801d3d6:	e796      	b.n	801d306 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d3d8:	4b03      	ldr	r3, [pc, #12]	; (801d3e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d3da:	6818      	ldr	r0, [r3, #0]
 801d3dc:	6803      	ldr	r3, [r0, #0]
 801d3de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3e0:	4798      	blx	r3
 801d3e2:	e768      	b.n	801d2b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d3e4:	fffff800 	.word	0xfffff800
 801d3e8:	20012e5c 	.word	0x20012e5c
 801d3ec:	20012e56 	.word	0x20012e56

0801d3f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d3f0:	b4f0      	push	{r4, r5, r6, r7}
 801d3f2:	4616      	mov	r6, r2
 801d3f4:	2e01      	cmp	r6, #1
 801d3f6:	461c      	mov	r4, r3
 801d3f8:	460d      	mov	r5, r1
 801d3fa:	9a04      	ldr	r2, [sp, #16]
 801d3fc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d400:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d404:	d012      	beq.n	801d42c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d406:	d303      	bcc.n	801d410 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d408:	2e02      	cmp	r6, #2
 801d40a:	d00a      	beq.n	801d422 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d40c:	bcf0      	pop	{r4, r5, r6, r7}
 801d40e:	4770      	bx	lr
 801d410:	6805      	ldr	r5, [r0, #0]
 801d412:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d416:	68ed      	ldr	r5, [r5, #12]
 801d418:	4613      	mov	r3, r2
 801d41a:	46ac      	mov	ip, r5
 801d41c:	4622      	mov	r2, r4
 801d41e:	bcf0      	pop	{r4, r5, r6, r7}
 801d420:	4760      	bx	ip
 801d422:	4621      	mov	r1, r4
 801d424:	4628      	mov	r0, r5
 801d426:	bcf0      	pop	{r4, r5, r6, r7}
 801d428:	f7ff bd94 	b.w	801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d42c:	4621      	mov	r1, r4
 801d42e:	4628      	mov	r0, r5
 801d430:	bcf0      	pop	{r4, r5, r6, r7}
 801d432:	f7ff bee5 	b.w	801d200 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d438 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d43c:	4681      	mov	r9, r0
 801d43e:	b093      	sub	sp, #76	; 0x4c
 801d440:	6810      	ldr	r0, [r2, #0]
 801d442:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d446:	4f6d      	ldr	r7, [pc, #436]	; (801d5fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d448:	4688      	mov	r8, r1
 801d44a:	6851      	ldr	r1, [r2, #4]
 801d44c:	ac0e      	add	r4, sp, #56	; 0x38
 801d44e:	c403      	stmia	r4!, {r0, r1}
 801d450:	6818      	ldr	r0, [r3, #0]
 801d452:	6859      	ldr	r1, [r3, #4]
 801d454:	ac10      	add	r4, sp, #64	; 0x40
 801d456:	4616      	mov	r6, r2
 801d458:	c403      	stmia	r4!, {r0, r1}
 801d45a:	a80e      	add	r0, sp, #56	; 0x38
 801d45c:	f7f7 fcd4 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d460:	4631      	mov	r1, r6
 801d462:	a810      	add	r0, sp, #64	; 0x40
 801d464:	f7f7 fd14 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d468:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d46c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d470:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d474:	4e62      	ldr	r6, [pc, #392]	; (801d600 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d476:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d47a:	6830      	ldr	r0, [r6, #0]
 801d47c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d480:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d484:	4489      	add	r9, r1
 801d486:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d48a:	440a      	add	r2, r1
 801d48c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d490:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d494:	4413      	add	r3, r2
 801d496:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d49a:	6803      	ldr	r3, [r0, #0]
 801d49c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d49e:	4798      	blx	r3
 801d4a0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d4a4:	6830      	ldr	r0, [r6, #0]
 801d4a6:	d01d      	beq.n	801d4e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d4a8:	2200      	movs	r2, #0
 801d4aa:	6801      	ldr	r1, [r0, #0]
 801d4ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d4b0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d4b4:	220b      	movs	r2, #11
 801d4b6:	9207      	str	r2, [sp, #28]
 801d4b8:	883a      	ldrh	r2, [r7, #0]
 801d4ba:	9206      	str	r2, [sp, #24]
 801d4bc:	2201      	movs	r2, #1
 801d4be:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d4c2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d4c6:	9203      	str	r2, [sp, #12]
 801d4c8:	b2a4      	uxth	r4, r4
 801d4ca:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d4ce:	9200      	str	r2, [sp, #0]
 801d4d0:	b2ad      	uxth	r5, r5
 801d4d2:	9502      	str	r5, [sp, #8]
 801d4d4:	9401      	str	r4, [sp, #4]
 801d4d6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d4d8:	4642      	mov	r2, r8
 801d4da:	4649      	mov	r1, r9
 801d4dc:	47a0      	blx	r4
 801d4de:	b013      	add	sp, #76	; 0x4c
 801d4e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4e4:	6803      	ldr	r3, [r0, #0]
 801d4e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d4e8:	4798      	blx	r3
 801d4ea:	883b      	ldrh	r3, [r7, #0]
 801d4ec:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d4f0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d4f4:	fb03 1202 	mla	r2, r3, r2, r1
 801d4f8:	435d      	muls	r5, r3
 801d4fa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d4fe:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d502:	920c      	str	r2, [sp, #48]	; 0x30
 801d504:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d508:	1b12      	subs	r2, r2, r4
 801d50a:	920d      	str	r2, [sp, #52]	; 0x34
 801d50c:	0062      	lsls	r2, r4, #1
 801d50e:	1b1c      	subs	r4, r3, r4
 801d510:	0063      	lsls	r3, r4, #1
 801d512:	920a      	str	r2, [sp, #40]	; 0x28
 801d514:	930b      	str	r3, [sp, #44]	; 0x2c
 801d516:	f04f 0e04 	mov.w	lr, #4
 801d51a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d51c:	4298      	cmp	r0, r3
 801d51e:	d266      	bcs.n	801d5ee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d520:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d522:	eb00 0b03 	add.w	fp, r0, r3
 801d526:	4558      	cmp	r0, fp
 801d528:	d25c      	bcs.n	801d5e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d52a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d52e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d532:	f858 2003 	ldr.w	r2, [r8, r3]
 801d536:	0e11      	lsrs	r1, r2, #24
 801d538:	d012      	beq.n	801d560 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d53a:	29ff      	cmp	r1, #255	; 0xff
 801d53c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d540:	d110      	bne.n	801d564 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d542:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d546:	d10d      	bne.n	801d564 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d548:	0953      	lsrs	r3, r2, #5
 801d54a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d54e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d552:	f027 0707 	bic.w	r7, r7, #7
 801d556:	431f      	orrs	r7, r3
 801d558:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d55c:	433a      	orrs	r2, r7
 801d55e:	8002      	strh	r2, [r0, #0]
 801d560:	3002      	adds	r0, #2
 801d562:	e7e0      	b.n	801d526 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d564:	fb0a f101 	mul.w	r1, sl, r1
 801d568:	8806      	ldrh	r6, [r0, #0]
 801d56a:	1c4b      	adds	r3, r1, #1
 801d56c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d570:	1235      	asrs	r5, r6, #8
 801d572:	10f4      	asrs	r4, r6, #3
 801d574:	121b      	asrs	r3, r3, #8
 801d576:	00f6      	lsls	r6, r6, #3
 801d578:	b299      	uxth	r1, r3
 801d57a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d57e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d582:	b2f6      	uxtb	r6, r6
 801d584:	43db      	mvns	r3, r3
 801d586:	b2d2      	uxtb	r2, r2
 801d588:	b2db      	uxtb	r3, r3
 801d58a:	fb1c fc01 	smulbb	ip, ip, r1
 801d58e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d592:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d596:	fb12 f201 	smulbb	r2, r2, r1
 801d59a:	fb05 c503 	mla	r5, r5, r3, ip
 801d59e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d5a2:	b2ff      	uxtb	r7, r7
 801d5a4:	fb06 2203 	mla	r2, r6, r3, r2
 801d5a8:	b2ad      	uxth	r5, r5
 801d5aa:	fb17 f701 	smulbb	r7, r7, r1
 801d5ae:	b292      	uxth	r2, r2
 801d5b0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d5b4:	fb04 7403 	mla	r4, r4, r3, r7
 801d5b8:	f105 0c01 	add.w	ip, r5, #1
 801d5bc:	1c57      	adds	r7, r2, #1
 801d5be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d5c2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d5c6:	b2a4      	uxth	r4, r4
 801d5c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d5cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d5d0:	433d      	orrs	r5, r7
 801d5d2:	1c67      	adds	r7, r4, #1
 801d5d4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d5d8:	0964      	lsrs	r4, r4, #5
 801d5da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d5de:	4325      	orrs	r5, r4
 801d5e0:	8005      	strh	r5, [r0, #0]
 801d5e2:	e7bd      	b.n	801d560 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d5e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d5e6:	4418      	add	r0, r3
 801d5e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5ea:	4499      	add	r9, r3
 801d5ec:	e795      	b.n	801d51a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d5ee:	4b04      	ldr	r3, [pc, #16]	; (801d600 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d5f0:	6818      	ldr	r0, [r3, #0]
 801d5f2:	6803      	ldr	r3, [r0, #0]
 801d5f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5f6:	4798      	blx	r3
 801d5f8:	e771      	b.n	801d4de <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d5fa:	bf00      	nop
 801d5fc:	20012e56 	.word	0x20012e56
 801d600:	20012e5c 	.word	0x20012e5c

0801d604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d608:	b087      	sub	sp, #28
 801d60a:	4680      	mov	r8, r0
 801d60c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d610:	460d      	mov	r5, r1
 801d612:	4614      	mov	r4, r2
 801d614:	2e00      	cmp	r6, #0
 801d616:	f000 80b9 	beq.w	801d78c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d61a:	6810      	ldr	r0, [r2, #0]
 801d61c:	6851      	ldr	r1, [r2, #4]
 801d61e:	af02      	add	r7, sp, #8
 801d620:	c703      	stmia	r7!, {r0, r1}
 801d622:	6818      	ldr	r0, [r3, #0]
 801d624:	6859      	ldr	r1, [r3, #4]
 801d626:	af04      	add	r7, sp, #16
 801d628:	c703      	stmia	r7!, {r0, r1}
 801d62a:	a802      	add	r0, sp, #8
 801d62c:	f7f7 fbec 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d630:	4621      	mov	r1, r4
 801d632:	a804      	add	r0, sp, #16
 801d634:	f7f7 fc2c 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d638:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d63c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d640:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d644:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d648:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d64c:	eb08 0401 	add.w	r4, r8, r1
 801d650:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d654:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d658:	440a      	add	r2, r1
 801d65a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d65e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d662:	4413      	add	r3, r2
 801d664:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d668:	4b4a      	ldr	r3, [pc, #296]	; (801d794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d66a:	6818      	ldr	r0, [r3, #0]
 801d66c:	6803      	ldr	r3, [r0, #0]
 801d66e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d670:	4798      	blx	r3
 801d672:	4b49      	ldr	r3, [pc, #292]	; (801d798 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d674:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d678:	881a      	ldrh	r2, [r3, #0]
 801d67a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d67e:	2eff      	cmp	r6, #255	; 0xff
 801d680:	fb02 c101 	mla	r1, r2, r1, ip
 801d684:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d688:	fb02 f207 	mul.w	r2, r2, r7
 801d68c:	f105 0104 	add.w	r1, r5, #4
 801d690:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d694:	461d      	mov	r5, r3
 801d696:	d05a      	beq.n	801d74e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d698:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d69c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d6a0:	b2b6      	uxth	r6, r6
 801d6a2:	fa1f fe8e 	uxth.w	lr, lr
 801d6a6:	9301      	str	r3, [sp, #4]
 801d6a8:	4282      	cmp	r2, r0
 801d6aa:	d96a      	bls.n	801d782 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d6ac:	eb00 0b0a 	add.w	fp, r0, sl
 801d6b0:	4583      	cmp	fp, r0
 801d6b2:	d940      	bls.n	801d736 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d6b4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d6b8:	8805      	ldrh	r5, [r0, #0]
 801d6ba:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d6be:	122f      	asrs	r7, r5, #8
 801d6c0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d6c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d6c8:	fb17 f70e 	smulbb	r7, r7, lr
 801d6cc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d6d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6d4:	00ed      	lsls	r5, r5, #3
 801d6d6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d6da:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d6de:	10df      	asrs	r7, r3, #3
 801d6e0:	b2ed      	uxtb	r5, r5
 801d6e2:	00db      	lsls	r3, r3, #3
 801d6e4:	fa1f fc8c 	uxth.w	ip, ip
 801d6e8:	fb19 f90e 	smulbb	r9, r9, lr
 801d6ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d6f0:	b2db      	uxtb	r3, r3
 801d6f2:	fb15 f50e 	smulbb	r5, r5, lr
 801d6f6:	fb07 9706 	mla	r7, r7, r6, r9
 801d6fa:	fb03 5306 	mla	r3, r3, r6, r5
 801d6fe:	f10c 0901 	add.w	r9, ip, #1
 801d702:	b29b      	uxth	r3, r3
 801d704:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d708:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d70c:	f103 0c01 	add.w	ip, r3, #1
 801d710:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d714:	b2bf      	uxth	r7, r7
 801d716:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d71a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d71e:	f107 0901 	add.w	r9, r7, #1
 801d722:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d726:	097f      	lsrs	r7, r7, #5
 801d728:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d72c:	ea4c 0c07 	orr.w	ip, ip, r7
 801d730:	f820 cb02 	strh.w	ip, [r0], #2
 801d734:	e7bc      	b.n	801d6b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d736:	9b01      	ldr	r3, [sp, #4]
 801d738:	881b      	ldrh	r3, [r3, #0]
 801d73a:	eba3 0308 	sub.w	r3, r3, r8
 801d73e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d742:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d746:	eba3 0308 	sub.w	r3, r3, r8
 801d74a:	441c      	add	r4, r3
 801d74c:	e7ac      	b.n	801d6a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d74e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d752:	4282      	cmp	r2, r0
 801d754:	d915      	bls.n	801d782 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d756:	eb00 060a 	add.w	r6, r0, sl
 801d75a:	4286      	cmp	r6, r0
 801d75c:	d906      	bls.n	801d76c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d75e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d762:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d766:	f820 3b02 	strh.w	r3, [r0], #2
 801d76a:	e7f6      	b.n	801d75a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d76c:	882b      	ldrh	r3, [r5, #0]
 801d76e:	eba3 0308 	sub.w	r3, r3, r8
 801d772:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d776:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d77a:	eba3 0308 	sub.w	r3, r3, r8
 801d77e:	441c      	add	r4, r3
 801d780:	e7e7      	b.n	801d752 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d782:	4b04      	ldr	r3, [pc, #16]	; (801d794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d784:	6818      	ldr	r0, [r3, #0]
 801d786:	6803      	ldr	r3, [r0, #0]
 801d788:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d78a:	4798      	blx	r3
 801d78c:	b007      	add	sp, #28
 801d78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d792:	bf00      	nop
 801d794:	20012e5c 	.word	0x20012e5c
 801d798:	20012e56 	.word	0x20012e56

0801d79c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7a0:	b091      	sub	sp, #68	; 0x44
 801d7a2:	4680      	mov	r8, r0
 801d7a4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d7a8:	460f      	mov	r7, r1
 801d7aa:	4614      	mov	r4, r2
 801d7ac:	2d00      	cmp	r5, #0
 801d7ae:	d051      	beq.n	801d854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d7b0:	6810      	ldr	r0, [r2, #0]
 801d7b2:	6851      	ldr	r1, [r2, #4]
 801d7b4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d9b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d7b8:	ae0c      	add	r6, sp, #48	; 0x30
 801d7ba:	c603      	stmia	r6!, {r0, r1}
 801d7bc:	6818      	ldr	r0, [r3, #0]
 801d7be:	6859      	ldr	r1, [r3, #4]
 801d7c0:	ae0e      	add	r6, sp, #56	; 0x38
 801d7c2:	c603      	stmia	r6!, {r0, r1}
 801d7c4:	a80c      	add	r0, sp, #48	; 0x30
 801d7c6:	f7f7 fb1f 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7ca:	4621      	mov	r1, r4
 801d7cc:	a80e      	add	r0, sp, #56	; 0x38
 801d7ce:	f7f7 fb5f 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7d2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d7d6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d7da:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d7de:	f8d9 0000 	ldr.w	r0, [r9]
 801d7e2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d7e6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d7ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d7ee:	eb08 0401 	add.w	r4, r8, r1
 801d7f2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d7f6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d9bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d7fa:	440a      	add	r2, r1
 801d7fc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d800:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d804:	4413      	add	r3, r2
 801d806:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d80a:	6803      	ldr	r3, [r0, #0]
 801d80c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d80e:	4798      	blx	r3
 801d810:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d814:	f8d9 0000 	ldr.w	r0, [r9]
 801d818:	d01f      	beq.n	801d85a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d81a:	2200      	movs	r2, #0
 801d81c:	6801      	ldr	r1, [r0, #0]
 801d81e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d822:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d826:	220b      	movs	r2, #11
 801d828:	9207      	str	r2, [sp, #28]
 801d82a:	f8b8 2000 	ldrh.w	r2, [r8]
 801d82e:	9206      	str	r2, [sp, #24]
 801d830:	2201      	movs	r2, #1
 801d832:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d836:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d83a:	9203      	str	r2, [sp, #12]
 801d83c:	fa1f f28a 	uxth.w	r2, sl
 801d840:	9202      	str	r2, [sp, #8]
 801d842:	b2b6      	uxth	r6, r6
 801d844:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d848:	9200      	str	r2, [sp, #0]
 801d84a:	9601      	str	r6, [sp, #4]
 801d84c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d84e:	463a      	mov	r2, r7
 801d850:	4621      	mov	r1, r4
 801d852:	47a8      	blx	r5
 801d854:	b011      	add	sp, #68	; 0x44
 801d856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d85a:	6803      	ldr	r3, [r0, #0]
 801d85c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d85e:	4798      	blx	r3
 801d860:	f8b8 2000 	ldrh.w	r2, [r8]
 801d864:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d868:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d86c:	2dff      	cmp	r5, #255	; 0xff
 801d86e:	fb02 1303 	mla	r3, r2, r3, r1
 801d872:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d876:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d87a:	fb0a fa02 	mul.w	sl, sl, r2
 801d87e:	d062      	beq.n	801d946 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d880:	ea6f 0c05 	mvn.w	ip, r5
 801d884:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d888:	930a      	str	r3, [sp, #40]	; 0x28
 801d88a:	b2ad      	uxth	r5, r5
 801d88c:	fa5f fc8c 	uxtb.w	ip, ip
 801d890:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d894:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d896:	4298      	cmp	r0, r3
 801d898:	f080 8085 	bcs.w	801d9a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d89c:	eb00 0b09 	add.w	fp, r0, r9
 801d8a0:	4558      	cmp	r0, fp
 801d8a2:	d246      	bcs.n	801d932 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d8a4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d8a8:	2303      	movs	r3, #3
 801d8aa:	2204      	movs	r2, #4
 801d8ac:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d8b0:	eb07 0a0e 	add.w	sl, r7, lr
 801d8b4:	8803      	ldrh	r3, [r0, #0]
 801d8b6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d8ba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d8be:	1219      	asrs	r1, r3, #8
 801d8c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d8c4:	fb18 f805 	smulbb	r8, r8, r5
 801d8c8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d8cc:	10da      	asrs	r2, r3, #3
 801d8ce:	fb01 810c 	mla	r1, r1, ip, r8
 801d8d2:	00db      	lsls	r3, r3, #3
 801d8d4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d8d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d8dc:	b2db      	uxtb	r3, r3
 801d8de:	fb18 f805 	smulbb	r8, r8, r5
 801d8e2:	fb1e fe05 	smulbb	lr, lr, r5
 801d8e6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d8ea:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d8ee:	b289      	uxth	r1, r1
 801d8f0:	fb02 820c 	mla	r2, r2, ip, r8
 801d8f4:	fb03 e30c 	mla	r3, r3, ip, lr
 801d8f8:	b292      	uxth	r2, r2
 801d8fa:	b29b      	uxth	r3, r3
 801d8fc:	f101 0801 	add.w	r8, r1, #1
 801d900:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d904:	f103 0e01 	add.w	lr, r3, #1
 801d908:	f102 0801 	add.w	r8, r2, #1
 801d90c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d910:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d914:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d918:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d91c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d920:	ea4e 0101 	orr.w	r1, lr, r1
 801d924:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d928:	ea41 0108 	orr.w	r1, r1, r8
 801d92c:	f820 1b02 	strh.w	r1, [r0], #2
 801d930:	e7b6      	b.n	801d8a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d932:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d934:	881b      	ldrh	r3, [r3, #0]
 801d936:	1b9b      	subs	r3, r3, r6
 801d938:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d93c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d940:	1b9b      	subs	r3, r3, r6
 801d942:	441c      	add	r4, r3
 801d944:	e7a6      	b.n	801d894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d946:	491b      	ldr	r1, [pc, #108]	; (801d9b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d948:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d94c:	2203      	movs	r2, #3
 801d94e:	2504      	movs	r5, #4
 801d950:	4550      	cmp	r0, sl
 801d952:	d228      	bcs.n	801d9a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d954:	eb00 0c09 	add.w	ip, r0, r9
 801d958:	4560      	cmp	r0, ip
 801d95a:	4623      	mov	r3, r4
 801d95c:	d219      	bcs.n	801d992 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d95e:	f893 e000 	ldrb.w	lr, [r3]
 801d962:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d966:	eb07 0b0e 	add.w	fp, r7, lr
 801d96a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d96e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d972:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d976:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d97a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d97e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d982:	ea43 030b 	orr.w	r3, r3, fp
 801d986:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d98a:	3401      	adds	r4, #1
 801d98c:	f820 3b02 	strh.w	r3, [r0], #2
 801d990:	e7e2      	b.n	801d958 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d992:	f8b8 3000 	ldrh.w	r3, [r8]
 801d996:	1b9b      	subs	r3, r3, r6
 801d998:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d99c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d9a0:	1b9b      	subs	r3, r3, r6
 801d9a2:	441c      	add	r4, r3
 801d9a4:	e7d4      	b.n	801d950 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d9a6:	4b04      	ldr	r3, [pc, #16]	; (801d9b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d9a8:	6818      	ldr	r0, [r3, #0]
 801d9aa:	6803      	ldr	r3, [r0, #0]
 801d9ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9ae:	4798      	blx	r3
 801d9b0:	e750      	b.n	801d854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d9b2:	bf00      	nop
 801d9b4:	fffff800 	.word	0xfffff800
 801d9b8:	20012e5c 	.word	0x20012e5c
 801d9bc:	20012e56 	.word	0x20012e56

0801d9c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d9c0:	b4f0      	push	{r4, r5, r6, r7}
 801d9c2:	460c      	mov	r4, r1
 801d9c4:	4611      	mov	r1, r2
 801d9c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d9ca:	780f      	ldrb	r7, [r1, #0]
 801d9cc:	784e      	ldrb	r6, [r1, #1]
 801d9ce:	2f01      	cmp	r7, #1
 801d9d0:	461a      	mov	r2, r3
 801d9d2:	9b04      	ldr	r3, [sp, #16]
 801d9d4:	d036      	beq.n	801da44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d9d6:	d31e      	bcc.n	801da16 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d9d8:	2f02      	cmp	r7, #2
 801d9da:	d14a      	bne.n	801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d9dc:	2e03      	cmp	r6, #3
 801d9de:	d848      	bhi.n	801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d9e0:	e8df f006 	tbb	[pc, r6]
 801d9e4:	16140702 	.word	0x16140702
 801d9e8:	9504      	str	r5, [sp, #16]
 801d9ea:	4620      	mov	r0, r4
 801d9ec:	bcf0      	pop	{r4, r5, r6, r7}
 801d9ee:	f7ff be09 	b.w	801d604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d9f2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d9f4:	2800      	cmp	r0, #0
 801d9f6:	d03c      	beq.n	801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d9f8:	6806      	ldr	r6, [r0, #0]
 801d9fa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d9fe:	68b5      	ldr	r5, [r6, #8]
 801da00:	4613      	mov	r3, r2
 801da02:	46ac      	mov	ip, r5
 801da04:	460a      	mov	r2, r1
 801da06:	4621      	mov	r1, r4
 801da08:	bcf0      	pop	{r4, r5, r6, r7}
 801da0a:	4760      	bx	ip
 801da0c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801da0e:	e7f1      	b.n	801d9f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801da10:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801da14:	e7ee      	b.n	801d9f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801da16:	2e03      	cmp	r6, #3
 801da18:	d82b      	bhi.n	801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801da1a:	e8df f006 	tbb	[pc, r6]
 801da1e:	0702      	.short	0x0702
 801da20:	100e      	.short	0x100e
 801da22:	9504      	str	r5, [sp, #16]
 801da24:	4620      	mov	r0, r4
 801da26:	bcf0      	pop	{r4, r5, r6, r7}
 801da28:	f7ff bd06 	b.w	801d438 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801da2c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801da2e:	b300      	cbz	r0, 801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801da30:	6806      	ldr	r6, [r0, #0]
 801da32:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801da36:	68f5      	ldr	r5, [r6, #12]
 801da38:	e7e2      	b.n	801da00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801da3a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801da3c:	e7f7      	b.n	801da2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801da3e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801da42:	e7f4      	b.n	801da2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801da44:	2e03      	cmp	r6, #3
 801da46:	d814      	bhi.n	801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801da48:	e8df f006 	tbb	[pc, r6]
 801da4c:	100e0702 	.word	0x100e0702
 801da50:	9504      	str	r5, [sp, #16]
 801da52:	4620      	mov	r0, r4
 801da54:	bcf0      	pop	{r4, r5, r6, r7}
 801da56:	f7ff bea1 	b.w	801d79c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801da5a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801da5c:	b148      	cbz	r0, 801da72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801da5e:	6806      	ldr	r6, [r0, #0]
 801da60:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801da64:	6935      	ldr	r5, [r6, #16]
 801da66:	e7cb      	b.n	801da00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801da68:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801da6a:	e7f7      	b.n	801da5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801da6c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801da70:	e7f4      	b.n	801da5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801da72:	bcf0      	pop	{r4, r5, r6, r7}
 801da74:	4770      	bx	lr
	...

0801da78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801da78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da7c:	4604      	mov	r4, r0
 801da7e:	b087      	sub	sp, #28
 801da80:	6810      	ldr	r0, [r2, #0]
 801da82:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801da86:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801dcc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801da8a:	460e      	mov	r6, r1
 801da8c:	6851      	ldr	r1, [r2, #4]
 801da8e:	ad02      	add	r5, sp, #8
 801da90:	c503      	stmia	r5!, {r0, r1}
 801da92:	6818      	ldr	r0, [r3, #0]
 801da94:	6859      	ldr	r1, [r3, #4]
 801da96:	ad04      	add	r5, sp, #16
 801da98:	4617      	mov	r7, r2
 801da9a:	c503      	stmia	r5!, {r0, r1}
 801da9c:	a802      	add	r0, sp, #8
 801da9e:	f7f7 f9b3 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801daa2:	4639      	mov	r1, r7
 801daa4:	a804      	add	r0, sp, #16
 801daa6:	f7f7 f9f3 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801daaa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801daae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dab2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801dab6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801daba:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801dabe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dac2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801dac6:	440e      	add	r6, r1
 801dac8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dacc:	440a      	add	r2, r1
 801dace:	f8ad 2010 	strh.w	r2, [sp, #16]
 801dad2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dad6:	4413      	add	r3, r2
 801dad8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801dadc:	4b77      	ldr	r3, [pc, #476]	; (801dcbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dade:	6818      	ldr	r0, [r3, #0]
 801dae0:	6803      	ldr	r3, [r0, #0]
 801dae2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dae4:	4798      	blx	r3
 801dae6:	f8b9 b000 	ldrh.w	fp, [r9]
 801daea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801daee:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801daf2:	fb0b 2303 	mla	r3, fp, r3, r2
 801daf6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dafa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dafe:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801db02:	fb05 f50b 	mul.w	r5, r5, fp
 801db06:	9300      	str	r3, [sp, #0]
 801db08:	d069      	beq.n	801dbde <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801db0a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801db0e:	4558      	cmp	r0, fp
 801db10:	f080 80cc 	bcs.w	801dcac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801db14:	9b00      	ldr	r3, [sp, #0]
 801db16:	18c3      	adds	r3, r0, r3
 801db18:	9301      	str	r3, [sp, #4]
 801db1a:	4631      	mov	r1, r6
 801db1c:	9b01      	ldr	r3, [sp, #4]
 801db1e:	4298      	cmp	r0, r3
 801db20:	d24f      	bcs.n	801dbc2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801db22:	f811 2b01 	ldrb.w	r2, [r1], #1
 801db26:	2a00      	cmp	r2, #0
 801db28:	d048      	beq.n	801dbbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801db2a:	fb0a f202 	mul.w	r2, sl, r2
 801db2e:	1c53      	adds	r3, r2, #1
 801db30:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801db34:	121b      	asrs	r3, r3, #8
 801db36:	d041      	beq.n	801dbbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801db38:	8802      	ldrh	r2, [r0, #0]
 801db3a:	f8b4 c000 	ldrh.w	ip, [r4]
 801db3e:	b29e      	uxth	r6, r3
 801db40:	1215      	asrs	r5, r2, #8
 801db42:	43db      	mvns	r3, r3
 801db44:	b2db      	uxtb	r3, r3
 801db46:	ea4f 272c 	mov.w	r7, ip, asr #8
 801db4a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801db4e:	fb15 f503 	smulbb	r5, r5, r3
 801db52:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801db56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801db5a:	00d2      	lsls	r2, r2, #3
 801db5c:	fb07 5706 	mla	r7, r7, r6, r5
 801db60:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801db64:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801db68:	b2d2      	uxtb	r2, r2
 801db6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801db6e:	b2bf      	uxth	r7, r7
 801db70:	fb1e fe03 	smulbb	lr, lr, r3
 801db74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db78:	fa5f fc8c 	uxtb.w	ip, ip
 801db7c:	fb12 f203 	smulbb	r2, r2, r3
 801db80:	fb05 e506 	mla	r5, r5, r6, lr
 801db84:	fb0c 2c06 	mla	ip, ip, r6, r2
 801db88:	f107 0e01 	add.w	lr, r7, #1
 801db8c:	fa1f fc8c 	uxth.w	ip, ip
 801db90:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801db94:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801db98:	f10c 0701 	add.w	r7, ip, #1
 801db9c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dba0:	b2ad      	uxth	r5, r5
 801dba2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dba6:	ea47 070e 	orr.w	r7, r7, lr
 801dbaa:	f105 0e01 	add.w	lr, r5, #1
 801dbae:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801dbb2:	096d      	lsrs	r5, r5, #5
 801dbb4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbb8:	432f      	orrs	r7, r5
 801dbba:	8007      	strh	r7, [r0, #0]
 801dbbc:	3002      	adds	r0, #2
 801dbbe:	3402      	adds	r4, #2
 801dbc0:	e7ac      	b.n	801db1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801dbc2:	f8b9 3000 	ldrh.w	r3, [r9]
 801dbc6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dbca:	eba3 0308 	sub.w	r3, r3, r8
 801dbce:	eba6 0608 	sub.w	r6, r6, r8
 801dbd2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dbd6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dbda:	440e      	add	r6, r1
 801dbdc:	e797      	b.n	801db0e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801dbde:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801dbe2:	42a8      	cmp	r0, r5
 801dbe4:	d262      	bcs.n	801dcac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dbe6:	9b00      	ldr	r3, [sp, #0]
 801dbe8:	4631      	mov	r1, r6
 801dbea:	eb00 0b03 	add.w	fp, r0, r3
 801dbee:	4558      	cmp	r0, fp
 801dbf0:	d24e      	bcs.n	801dc90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801dbf2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801dbf6:	b12b      	cbz	r3, 801dc04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dbf8:	2bff      	cmp	r3, #255	; 0xff
 801dbfa:	f8b4 e000 	ldrh.w	lr, [r4]
 801dbfe:	d104      	bne.n	801dc0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801dc00:	f8a0 e000 	strh.w	lr, [r0]
 801dc04:	3002      	adds	r0, #2
 801dc06:	3402      	adds	r4, #2
 801dc08:	e7f1      	b.n	801dbee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801dc0a:	8802      	ldrh	r2, [r0, #0]
 801dc0c:	b29f      	uxth	r7, r3
 801dc0e:	1216      	asrs	r6, r2, #8
 801dc10:	43db      	mvns	r3, r3
 801dc12:	b2db      	uxtb	r3, r3
 801dc14:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dc18:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dc1c:	fb16 f603 	smulbb	r6, r6, r3
 801dc20:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801dc24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dc28:	00d2      	lsls	r2, r2, #3
 801dc2a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dc2e:	b2d2      	uxtb	r2, r2
 801dc30:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801dc34:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dc38:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801dc3c:	fb1a fa03 	smulbb	sl, sl, r3
 801dc40:	fa1f fc8c 	uxth.w	ip, ip
 801dc44:	fb12 f303 	smulbb	r3, r2, r3
 801dc48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dc4c:	fa5f fe8e 	uxtb.w	lr, lr
 801dc50:	fb06 a607 	mla	r6, r6, r7, sl
 801dc54:	f10c 0201 	add.w	r2, ip, #1
 801dc58:	fb0e 3307 	mla	r3, lr, r7, r3
 801dc5c:	b2b6      	uxth	r6, r6
 801dc5e:	b29b      	uxth	r3, r3
 801dc60:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801dc64:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801dc68:	f106 0a01 	add.w	sl, r6, #1
 801dc6c:	f103 0c01 	add.w	ip, r3, #1
 801dc70:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801dc74:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dc78:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dc7c:	0976      	lsrs	r6, r6, #5
 801dc7e:	ea4c 0c02 	orr.w	ip, ip, r2
 801dc82:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801dc86:	ea4c 0c06 	orr.w	ip, ip, r6
 801dc8a:	f8a0 c000 	strh.w	ip, [r0]
 801dc8e:	e7b9      	b.n	801dc04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dc90:	f8b9 3000 	ldrh.w	r3, [r9]
 801dc94:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dc98:	eba3 0308 	sub.w	r3, r3, r8
 801dc9c:	eba6 0608 	sub.w	r6, r6, r8
 801dca0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dca4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dca8:	440e      	add	r6, r1
 801dcaa:	e79a      	b.n	801dbe2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801dcac:	4b03      	ldr	r3, [pc, #12]	; (801dcbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dcae:	6818      	ldr	r0, [r3, #0]
 801dcb0:	6803      	ldr	r3, [r0, #0]
 801dcb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcb4:	4798      	blx	r3
 801dcb6:	b007      	add	sp, #28
 801dcb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcbc:	20012e5c 	.word	0x20012e5c
 801dcc0:	20012e56 	.word	0x20012e56

0801dcc4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801dcc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dcc8:	b089      	sub	sp, #36	; 0x24
 801dcca:	4682      	mov	sl, r0
 801dccc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801dcd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dcd2:	460f      	mov	r7, r1
 801dcd4:	4691      	mov	r9, r2
 801dcd6:	4698      	mov	r8, r3
 801dcd8:	2e00      	cmp	r6, #0
 801dcda:	d03d      	beq.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcdc:	4608      	mov	r0, r1
 801dcde:	f7fa fe59 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dce2:	4605      	mov	r5, r0
 801dce4:	4638      	mov	r0, r7
 801dce6:	f7fa fe89 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801dcea:	f8ad 000e 	strh.w	r0, [sp, #14]
 801dcee:	4638      	mov	r0, r7
 801dcf0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801dcf4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801dcf8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801dcfc:	f7fa ff36 	bl	8018b6c <_ZNK8touchgfx6Bitmap7getDataEv>
 801dd00:	4605      	mov	r5, r0
 801dd02:	4638      	mov	r0, r7
 801dd04:	f7fa ff62 	bl	8018bcc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801dd08:	4681      	mov	r9, r0
 801dd0a:	4638      	mov	r0, r7
 801dd0c:	f7fa ffb2 	bl	8018c74 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801dd10:	280b      	cmp	r0, #11
 801dd12:	d821      	bhi.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dd14:	e8df f000 	tbb	[pc, r0]
 801dd18:	2006aebe 	.word	0x2006aebe
 801dd1c:	20202020 	.word	0x20202020
 801dd20:	b5202020 	.word	0xb5202020
 801dd24:	4bb0      	ldr	r3, [pc, #704]	; (801dfe8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801dd26:	6818      	ldr	r0, [r3, #0]
 801dd28:	6803      	ldr	r3, [r0, #0]
 801dd2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dd2c:	4798      	blx	r3
 801dd2e:	2eff      	cmp	r6, #255	; 0xff
 801dd30:	d101      	bne.n	801dd36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801dd32:	0683      	lsls	r3, r0, #26
 801dd34:	d506      	bpl.n	801dd44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801dd36:	4633      	mov	r3, r6
 801dd38:	4622      	mov	r2, r4
 801dd3a:	a902      	add	r1, sp, #8
 801dd3c:	4628      	mov	r0, r5
 801dd3e:	f7ff f909 	bl	801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dd42:	e009      	b.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dd44:	4638      	mov	r0, r7
 801dd46:	f7fa fed9 	bl	8018afc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dd4a:	b940      	cbnz	r0, 801dd5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801dd4c:	4623      	mov	r3, r4
 801dd4e:	aa02      	add	r2, sp, #8
 801dd50:	4629      	mov	r1, r5
 801dd52:	4650      	mov	r0, sl
 801dd54:	f7ff f9e4 	bl	801d120 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801dd58:	b009      	add	sp, #36	; 0x24
 801dd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd5e:	f10d 0818 	add.w	r8, sp, #24
 801dd62:	4639      	mov	r1, r7
 801dd64:	4640      	mov	r0, r8
 801dd66:	f7fa fe7d 	bl	8018a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dd6a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dd6e:	af04      	add	r7, sp, #16
 801dd70:	e887 0003 	stmia.w	r7, {r0, r1}
 801dd74:	4638      	mov	r0, r7
 801dd76:	4621      	mov	r1, r4
 801dd78:	f7f2 f8e8 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 801dd7c:	4638      	mov	r0, r7
 801dd7e:	f7f2 f928 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dd82:	2800      	cmp	r0, #0
 801dd84:	d1d7      	bne.n	801dd36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801dd86:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd8a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dd8e:	4293      	cmp	r3, r2
 801dd90:	dd12      	ble.n	801ddb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801dd92:	1a9b      	subs	r3, r3, r2
 801dd94:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dd98:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dd9c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dda0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dda4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dda8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ddac:	4642      	mov	r2, r8
 801ddae:	4633      	mov	r3, r6
 801ddb0:	a902      	add	r1, sp, #8
 801ddb2:	4628      	mov	r0, r5
 801ddb4:	f7ff f8ce 	bl	801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ddb8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ddbc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ddc0:	4293      	cmp	r3, r2
 801ddc2:	dd12      	ble.n	801ddea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801ddc4:	1a9b      	subs	r3, r3, r2
 801ddc6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ddca:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ddce:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ddd2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ddd6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ddda:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ddde:	23ff      	movs	r3, #255	; 0xff
 801dde0:	4642      	mov	r2, r8
 801dde2:	a902      	add	r1, sp, #8
 801dde4:	4628      	mov	r0, r5
 801dde6:	f7ff f8b5 	bl	801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ddea:	463b      	mov	r3, r7
 801ddec:	aa02      	add	r2, sp, #8
 801ddee:	4629      	mov	r1, r5
 801ddf0:	4650      	mov	r0, sl
 801ddf2:	f7ff f995 	bl	801d120 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ddf6:	88a2      	ldrh	r2, [r4, #4]
 801ddf8:	8823      	ldrh	r3, [r4, #0]
 801ddfa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ddfe:	4413      	add	r3, r2
 801de00:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801de04:	440a      	add	r2, r1
 801de06:	b29b      	uxth	r3, r3
 801de08:	b292      	uxth	r2, r2
 801de0a:	b211      	sxth	r1, r2
 801de0c:	b218      	sxth	r0, r3
 801de0e:	4288      	cmp	r0, r1
 801de10:	dd12      	ble.n	801de38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801de12:	1a9b      	subs	r3, r3, r2
 801de14:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801de18:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801de1c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801de20:	f8ad 301c 	strh.w	r3, [sp, #28]
 801de24:	f8ad 001e 	strh.w	r0, [sp, #30]
 801de28:	23ff      	movs	r3, #255	; 0xff
 801de2a:	4642      	mov	r2, r8
 801de2c:	a902      	add	r1, sp, #8
 801de2e:	4628      	mov	r0, r5
 801de30:	f8ad 601a 	strh.w	r6, [sp, #26]
 801de34:	f7ff f88e 	bl	801cf54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801de38:	88e2      	ldrh	r2, [r4, #6]
 801de3a:	8863      	ldrh	r3, [r4, #2]
 801de3c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801de40:	4413      	add	r3, r2
 801de42:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801de46:	440a      	add	r2, r1
 801de48:	b29b      	uxth	r3, r3
 801de4a:	b292      	uxth	r2, r2
 801de4c:	b211      	sxth	r1, r2
 801de4e:	b218      	sxth	r0, r3
 801de50:	4288      	cmp	r0, r1
 801de52:	dd81      	ble.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801de54:	1a9b      	subs	r3, r3, r2
 801de56:	f9b4 6000 	ldrsh.w	r6, [r4]
 801de5a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801de5e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801de62:	f8ad 6018 	strh.w	r6, [sp, #24]
 801de66:	f8ad 101a 	strh.w	r1, [sp, #26]
 801de6a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801de6e:	23ff      	movs	r3, #255	; 0xff
 801de70:	4642      	mov	r2, r8
 801de72:	e762      	b.n	801dd3a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801de74:	4633      	mov	r3, r6
 801de76:	4622      	mov	r2, r4
 801de78:	a902      	add	r1, sp, #8
 801de7a:	4628      	mov	r0, r5
 801de7c:	f7ff f9c0 	bl	801d200 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801de80:	e76a      	b.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801de82:	e9cd 4600 	strd	r4, r6, [sp]
 801de86:	ab02      	add	r3, sp, #8
 801de88:	464a      	mov	r2, r9
 801de8a:	4629      	mov	r1, r5
 801de8c:	4650      	mov	r0, sl
 801de8e:	f7ff fd97 	bl	801d9c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801de92:	e761      	b.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801de94:	4638      	mov	r0, r7
 801de96:	f7fa fe31 	bl	8018afc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801de9a:	b950      	cbnz	r0, 801deb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801de9c:	e9cd 6000 	strd	r6, r0, [sp]
 801dea0:	f8da 3000 	ldr.w	r3, [sl]
 801dea4:	aa02      	add	r2, sp, #8
 801dea6:	68de      	ldr	r6, [r3, #12]
 801dea8:	4629      	mov	r1, r5
 801deaa:	4623      	mov	r3, r4
 801deac:	4650      	mov	r0, sl
 801deae:	47b0      	blx	r6
 801deb0:	e752      	b.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801deb2:	f10d 0818 	add.w	r8, sp, #24
 801deb6:	4639      	mov	r1, r7
 801deb8:	4640      	mov	r0, r8
 801deba:	f7fa fdd3 	bl	8018a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801debe:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dec2:	af04      	add	r7, sp, #16
 801dec4:	e887 0003 	stmia.w	r7, {r0, r1}
 801dec8:	4638      	mov	r0, r7
 801deca:	4621      	mov	r1, r4
 801decc:	f7f2 f83e 	bl	800ff4c <_ZN8touchgfx4RectaNERKS0_>
 801ded0:	4638      	mov	r0, r7
 801ded2:	f7f2 f87e 	bl	800ffd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ded6:	b138      	cbz	r0, 801dee8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ded8:	9600      	str	r6, [sp, #0]
 801deda:	4623      	mov	r3, r4
 801dedc:	aa02      	add	r2, sp, #8
 801dede:	4649      	mov	r1, r9
 801dee0:	4628      	mov	r0, r5
 801dee2:	f7ff fdc9 	bl	801da78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dee6:	e737      	b.n	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dee8:	e9cd 6000 	strd	r6, r0, [sp]
 801deec:	f8da 3000 	ldr.w	r3, [sl]
 801def0:	aa02      	add	r2, sp, #8
 801def2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801def6:	4629      	mov	r1, r5
 801def8:	463b      	mov	r3, r7
 801defa:	4650      	mov	r0, sl
 801defc:	47d8      	blx	fp
 801defe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801df02:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801df06:	4293      	cmp	r3, r2
 801df08:	dd13      	ble.n	801df32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801df0a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801df0e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801df12:	f8ad 0018 	strh.w	r0, [sp, #24]
 801df16:	1a9b      	subs	r3, r3, r2
 801df18:	f8ad 201a 	strh.w	r2, [sp, #26]
 801df1c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801df20:	f8ad 301e 	strh.w	r3, [sp, #30]
 801df24:	9600      	str	r6, [sp, #0]
 801df26:	4643      	mov	r3, r8
 801df28:	aa02      	add	r2, sp, #8
 801df2a:	4649      	mov	r1, r9
 801df2c:	4628      	mov	r0, r5
 801df2e:	f7ff fda3 	bl	801da78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801df32:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801df36:	f9b4 2000 	ldrsh.w	r2, [r4]
 801df3a:	4293      	cmp	r3, r2
 801df3c:	dd13      	ble.n	801df66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801df3e:	1a9b      	subs	r3, r3, r2
 801df40:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801df44:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801df48:	f8ad 2018 	strh.w	r2, [sp, #24]
 801df4c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801df50:	f8ad 301c 	strh.w	r3, [sp, #28]
 801df54:	f8ad 101e 	strh.w	r1, [sp, #30]
 801df58:	9600      	str	r6, [sp, #0]
 801df5a:	4643      	mov	r3, r8
 801df5c:	aa02      	add	r2, sp, #8
 801df5e:	4649      	mov	r1, r9
 801df60:	4628      	mov	r0, r5
 801df62:	f7ff fd89 	bl	801da78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801df66:	88a2      	ldrh	r2, [r4, #4]
 801df68:	8823      	ldrh	r3, [r4, #0]
 801df6a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801df6e:	4413      	add	r3, r2
 801df70:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801df74:	440a      	add	r2, r1
 801df76:	b29b      	uxth	r3, r3
 801df78:	b292      	uxth	r2, r2
 801df7a:	b211      	sxth	r1, r2
 801df7c:	b218      	sxth	r0, r3
 801df7e:	4288      	cmp	r0, r1
 801df80:	dd13      	ble.n	801dfaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801df82:	1a9b      	subs	r3, r3, r2
 801df84:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801df88:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801df8c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801df90:	f8ad 301c 	strh.w	r3, [sp, #28]
 801df94:	f8ad 001e 	strh.w	r0, [sp, #30]
 801df98:	9600      	str	r6, [sp, #0]
 801df9a:	4643      	mov	r3, r8
 801df9c:	aa02      	add	r2, sp, #8
 801df9e:	4649      	mov	r1, r9
 801dfa0:	4628      	mov	r0, r5
 801dfa2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801dfa6:	f7ff fd67 	bl	801da78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dfaa:	88e2      	ldrh	r2, [r4, #6]
 801dfac:	8863      	ldrh	r3, [r4, #2]
 801dfae:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dfb2:	4413      	add	r3, r2
 801dfb4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dfb8:	440a      	add	r2, r1
 801dfba:	b29b      	uxth	r3, r3
 801dfbc:	b292      	uxth	r2, r2
 801dfbe:	b211      	sxth	r1, r2
 801dfc0:	b218      	sxth	r0, r3
 801dfc2:	4288      	cmp	r0, r1
 801dfc4:	f77f aec8 	ble.w	801dd58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dfc8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dfcc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dfd0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dfd4:	1a9b      	subs	r3, r3, r2
 801dfd6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dfda:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dfde:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dfe2:	9600      	str	r6, [sp, #0]
 801dfe4:	4643      	mov	r3, r8
 801dfe6:	e779      	b.n	801dedc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dfe8:	20012e5c 	.word	0x20012e5c

0801dfec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dfec:	b180      	cbz	r0, 801e010 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dfee:	2903      	cmp	r1, #3
 801dff0:	d81c      	bhi.n	801e02c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dff2:	e8df f001 	tbb	[pc, r1]
 801dff6:	1d02      	.short	0x1d02
 801dff8:	1f08      	.short	0x1f08
 801dffa:	4b10      	ldr	r3, [pc, #64]	; (801e03c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dffc:	8818      	ldrh	r0, [r3, #0]
 801dffe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e002:	4240      	negs	r0, r0
 801e004:	4770      	bx	lr
 801e006:	4b0d      	ldr	r3, [pc, #52]	; (801e03c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e008:	8818      	ldrh	r0, [r3, #0]
 801e00a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e00e:	4770      	bx	lr
 801e010:	2903      	cmp	r1, #3
 801e012:	d80b      	bhi.n	801e02c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e014:	a301      	add	r3, pc, #4	; (adr r3, 801e01c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e016:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e01a:	bf00      	nop
 801e01c:	0801e031 	.word	0x0801e031
 801e020:	0801e007 	.word	0x0801e007
 801e024:	0801e035 	.word	0x0801e035
 801e028:	0801dffb 	.word	0x0801dffb
 801e02c:	2000      	movs	r0, #0
 801e02e:	4770      	bx	lr
 801e030:	2001      	movs	r0, #1
 801e032:	4770      	bx	lr
 801e034:	f04f 30ff 	mov.w	r0, #4294967295
 801e038:	4770      	bx	lr
 801e03a:	bf00      	nop
 801e03c:	20012e56 	.word	0x20012e56

0801e040 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e040:	b180      	cbz	r0, 801e064 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e042:	2903      	cmp	r1, #3
 801e044:	d81c      	bhi.n	801e080 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e046:	e8df f001 	tbb	[pc, r1]
 801e04a:	021d      	.short	0x021d
 801e04c:	071f      	.short	0x071f
 801e04e:	4b10      	ldr	r3, [pc, #64]	; (801e090 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e050:	8818      	ldrh	r0, [r3, #0]
 801e052:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e056:	4770      	bx	lr
 801e058:	4b0d      	ldr	r3, [pc, #52]	; (801e090 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e05a:	8818      	ldrh	r0, [r3, #0]
 801e05c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e060:	4240      	negs	r0, r0
 801e062:	4770      	bx	lr
 801e064:	2903      	cmp	r1, #3
 801e066:	d80b      	bhi.n	801e080 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e068:	a301      	add	r3, pc, #4	; (adr r3, 801e070 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e06a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e06e:	bf00      	nop
 801e070:	0801e04f 	.word	0x0801e04f
 801e074:	0801e089 	.word	0x0801e089
 801e078:	0801e059 	.word	0x0801e059
 801e07c:	0801e085 	.word	0x0801e085
 801e080:	2000      	movs	r0, #0
 801e082:	4770      	bx	lr
 801e084:	2001      	movs	r0, #1
 801e086:	4770      	bx	lr
 801e088:	f04f 30ff 	mov.w	r0, #4294967295
 801e08c:	4770      	bx	lr
 801e08e:	bf00      	nop
 801e090:	20012e56 	.word	0x20012e56

0801e094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e098:	b099      	sub	sp, #100	; 0x64
 801e09a:	910b      	str	r1, [sp, #44]	; 0x2c
 801e09c:	a914      	add	r1, sp, #80	; 0x50
 801e09e:	e881 000c 	stmia.w	r1, {r2, r3}
 801e0a2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801e0a6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801e0aa:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e0ae:	9309      	str	r3, [sp, #36]	; 0x24
 801e0b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e0b4:	9310      	str	r3, [sp, #64]	; 0x40
 801e0b6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e0ba:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801e0be:	930c      	str	r3, [sp, #48]	; 0x30
 801e0c0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801e0c4:	798f      	ldrb	r7, [r1, #6]
 801e0c6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801e0ca:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801e0ce:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801e0d2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801e0d6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801e0da:	431f      	orrs	r7, r3
 801e0dc:	f000 8195 	beq.w	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e0e0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e0e4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801e0e8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e0ec:	ea59 0903 	orrs.w	r9, r9, r3
 801e0f0:	f000 818b 	beq.w	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e0f4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e0f8:	b29b      	uxth	r3, r3
 801e0fa:	2d00      	cmp	r5, #0
 801e0fc:	f000 812e 	beq.w	801e35c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e100:	1aed      	subs	r5, r5, r3
 801e102:	b2ad      	uxth	r5, r5
 801e104:	042b      	lsls	r3, r5, #16
 801e106:	d502      	bpl.n	801e10e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e108:	1b64      	subs	r4, r4, r5
 801e10a:	b224      	sxth	r4, r4
 801e10c:	2500      	movs	r5, #0
 801e10e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e112:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801e116:	428c      	cmp	r4, r1
 801e118:	b28b      	uxth	r3, r1
 801e11a:	bfbf      	itttt	lt
 801e11c:	18ed      	addlt	r5, r5, r3
 801e11e:	1b2c      	sublt	r4, r5, r4
 801e120:	b2a5      	uxthlt	r5, r4
 801e122:	460c      	movlt	r4, r1
 801e124:	8891      	ldrh	r1, [r2, #4]
 801e126:	440b      	add	r3, r1
 801e128:	b21b      	sxth	r3, r3
 801e12a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e12c:	88d3      	ldrh	r3, [r2, #6]
 801e12e:	8852      	ldrh	r2, [r2, #2]
 801e130:	4413      	add	r3, r2
 801e132:	b21b      	sxth	r3, r3
 801e134:	930d      	str	r3, [sp, #52]	; 0x34
 801e136:	4bbe      	ldr	r3, [pc, #760]	; (801e430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e138:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e13a:	f893 b000 	ldrb.w	fp, [r3]
 801e13e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e142:	f1dc 0300 	rsbs	r3, ip, #0
 801e146:	eb43 030c 	adc.w	r3, r3, ip
 801e14a:	930e      	str	r3, [sp, #56]	; 0x38
 801e14c:	4621      	mov	r1, r4
 801e14e:	4653      	mov	r3, sl
 801e150:	a814      	add	r0, sp, #80	; 0x50
 801e152:	f7f6 fcce 	bl	8014af2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e156:	4621      	mov	r1, r4
 801e158:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801e15c:	4653      	mov	r3, sl
 801e15e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e160:	a814      	add	r0, sp, #80	; 0x50
 801e162:	f7f6 fce3 	bl	8014b2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e166:	a918      	add	r1, sp, #96	; 0x60
 801e168:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e16c:	a817      	add	r0, sp, #92	; 0x5c
 801e16e:	f7f6 fe09 	bl	8014d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e172:	f1ba 0f00 	cmp.w	sl, #0
 801e176:	f040 80f4 	bne.w	801e362 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e17a:	f1bb 0f01 	cmp.w	fp, #1
 801e17e:	f040 80f8 	bne.w	801e372 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e182:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e184:	2b00      	cmp	r3, #0
 801e186:	f040 8145 	bne.w	801e414 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e18a:	b2ba      	uxth	r2, r7
 801e18c:	b905      	cbnz	r5, 801e190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e18e:	b16e      	cbz	r6, 801e1ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e190:	fb06 5302 	mla	r3, r6, r2, r5
 801e194:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e196:	fb08 f303 	mul.w	r3, r8, r3
 801e19a:	4631      	mov	r1, r6
 801e19c:	f003 0607 	and.w	r6, r3, #7
 801e1a0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e1a4:	9328      	str	r3, [sp, #160]	; 0xa0
 801e1a6:	eba9 0301 	sub.w	r3, r9, r1
 801e1aa:	930a      	str	r3, [sp, #40]	; 0x28
 801e1ac:	4651      	mov	r1, sl
 801e1ae:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e1b0:	f7ff ff1c 	bl	801dfec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e1b4:	4681      	mov	r9, r0
 801e1b6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e1b8:	f7ff ff42 	bl	801e040 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e1bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e1be:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e1c0:	eba3 0a01 	sub.w	sl, r3, r1
 801e1c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e1c6:	459a      	cmp	sl, r3
 801e1c8:	bfa8      	it	ge
 801e1ca:	469a      	movge	sl, r3
 801e1cc:	f1ba 0f00 	cmp.w	sl, #0
 801e1d0:	4683      	mov	fp, r0
 801e1d2:	f340 811a 	ble.w	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e1d8:	1b64      	subs	r4, r4, r5
 801e1da:	1b1c      	subs	r4, r3, r4
 801e1dc:	42bc      	cmp	r4, r7
 801e1de:	bfd4      	ite	le
 801e1e0:	ebc5 0504 	rsble	r5, r5, r4
 801e1e4:	ebc5 0507 	rsbgt	r5, r5, r7
 801e1e8:	2d00      	cmp	r5, #0
 801e1ea:	f340 810e 	ble.w	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1ee:	1b52      	subs	r2, r2, r5
 801e1f0:	fb08 f302 	mul.w	r3, r8, r2
 801e1f4:	930f      	str	r3, [sp, #60]	; 0x3c
 801e1f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e1f8:	2b00      	cmp	r3, #0
 801e1fa:	f040 8116 	bne.w	801e42a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e1fe:	4b8d      	ldr	r3, [pc, #564]	; (801e434 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e200:	6818      	ldr	r0, [r3, #0]
 801e202:	6803      	ldr	r3, [r0, #0]
 801e204:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e206:	4798      	blx	r3
 801e208:	2301      	movs	r3, #1
 801e20a:	fa03 f308 	lsl.w	r3, r3, r8
 801e20e:	4a8a      	ldr	r2, [pc, #552]	; (801e438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e210:	3b01      	subs	r3, #1
 801e212:	b2db      	uxtb	r3, r3
 801e214:	8811      	ldrh	r1, [r2, #0]
 801e216:	930e      	str	r3, [sp, #56]	; 0x38
 801e218:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801e21c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e220:	fb01 2303 	mla	r3, r1, r3, r2
 801e224:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e228:	930a      	str	r3, [sp, #40]	; 0x28
 801e22a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e22c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e230:	9313      	str	r3, [sp, #76]	; 0x4c
 801e232:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e234:	0a19      	lsrs	r1, r3, #8
 801e236:	b2cb      	uxtb	r3, r1
 801e238:	9312      	str	r3, [sp, #72]	; 0x48
 801e23a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e23c:	b2db      	uxtb	r3, r3
 801e23e:	9311      	str	r3, [sp, #68]	; 0x44
 801e240:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e242:	095a      	lsrs	r2, r3, #5
 801e244:	4b7d      	ldr	r3, [pc, #500]	; (801e43c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e246:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e24a:	400b      	ands	r3, r1
 801e24c:	4313      	orrs	r3, r2
 801e24e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e250:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e254:	4313      	orrs	r3, r2
 801e256:	b29b      	uxth	r3, r3
 801e258:	9310      	str	r3, [sp, #64]	; 0x40
 801e25a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e25c:	781a      	ldrb	r2, [r3, #0]
 801e25e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e262:	4132      	asrs	r2, r6
 801e264:	fb05 b919 	mls	r9, r5, r9, fp
 801e268:	fb03 fb05 	mul.w	fp, r3, r5
 801e26c:	b2d2      	uxtb	r2, r2
 801e26e:	930d      	str	r3, [sp, #52]	; 0x34
 801e270:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e274:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e278:	f0c0 80f5 	bcc.w	801e466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e27c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e280:	46ae      	mov	lr, r5
 801e282:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e286:	f0c0 80dd 	bcc.w	801e444 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e28a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e28c:	4013      	ands	r3, r2
 801e28e:	d055      	beq.n	801e33c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e290:	20ff      	movs	r0, #255	; 0xff
 801e292:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e294:	fb90 f1f1 	sdiv	r1, r0, r1
 801e298:	434b      	muls	r3, r1
 801e29a:	2bfe      	cmp	r3, #254	; 0xfe
 801e29c:	dd03      	ble.n	801e2a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e29e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e2a0:	4281      	cmp	r1, r0
 801e2a2:	f000 80cd 	beq.w	801e440 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e2a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e2a8:	f8bc 4000 	ldrh.w	r4, [ip]
 801e2ac:	fb11 f303 	smulbb	r3, r1, r3
 801e2b0:	b29b      	uxth	r3, r3
 801e2b2:	1c59      	adds	r1, r3, #1
 801e2b4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e2b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e2bc:	b29f      	uxth	r7, r3
 801e2be:	43db      	mvns	r3, r3
 801e2c0:	b2db      	uxtb	r3, r3
 801e2c2:	9309      	str	r3, [sp, #36]	; 0x24
 801e2c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e2c6:	1220      	asrs	r0, r4, #8
 801e2c8:	fb13 f907 	smulbb	r9, r3, r7
 801e2cc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e2d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2d2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e2d6:	fb00 9003 	mla	r0, r0, r3, r9
 801e2da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e2dc:	10e1      	asrs	r1, r4, #3
 801e2de:	fb13 f907 	smulbb	r9, r3, r7
 801e2e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e2e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2e8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e2ec:	fb01 9103 	mla	r1, r1, r3, r9
 801e2f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e2f2:	00e4      	lsls	r4, r4, #3
 801e2f4:	fb13 f707 	smulbb	r7, r3, r7
 801e2f8:	b2e4      	uxtb	r4, r4
 801e2fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2fc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e300:	fb04 7403 	mla	r4, r4, r3, r7
 801e304:	b280      	uxth	r0, r0
 801e306:	b2a4      	uxth	r4, r4
 801e308:	1c43      	adds	r3, r0, #1
 801e30a:	f104 0901 	add.w	r9, r4, #1
 801e30e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e312:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e316:	b289      	uxth	r1, r1
 801e318:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e31c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e320:	ea49 0000 	orr.w	r0, r9, r0
 801e324:	f101 0901 	add.w	r9, r1, #1
 801e328:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e32c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e330:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e334:	ea40 0009 	orr.w	r0, r0, r9
 801e338:	f8ac 0000 	strh.w	r0, [ip]
 801e33c:	4446      	add	r6, r8
 801e33e:	b2b6      	uxth	r6, r6
 801e340:	2e07      	cmp	r6, #7
 801e342:	bf81      	itttt	hi
 801e344:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e346:	785a      	ldrbhi	r2, [r3, #1]
 801e348:	3301      	addhi	r3, #1
 801e34a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e34c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e34e:	bf9a      	itte	ls
 801e350:	fa42 f208 	asrls.w	r2, r2, r8
 801e354:	b2d2      	uxtbls	r2, r2
 801e356:	2600      	movhi	r6, #0
 801e358:	449c      	add	ip, r3
 801e35a:	e792      	b.n	801e282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e35c:	441c      	add	r4, r3
 801e35e:	b224      	sxth	r4, r4
 801e360:	e6d5      	b.n	801e10e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e362:	f1ba 0f01 	cmp.w	sl, #1
 801e366:	f47f af0c 	bne.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e36a:	f1bb 0f01 	cmp.w	fp, #1
 801e36e:	f47f af08 	bne.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e372:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e434 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e376:	f8db 0000 	ldr.w	r0, [fp]
 801e37a:	6803      	ldr	r3, [r0, #0]
 801e37c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e37e:	4798      	blx	r3
 801e380:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e384:	465a      	mov	r2, fp
 801e386:	d006      	beq.n	801e396 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e388:	f1b8 0f04 	cmp.w	r8, #4
 801e38c:	d140      	bne.n	801e410 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e38e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e390:	3300      	adds	r3, #0
 801e392:	bf18      	it	ne
 801e394:	2301      	movne	r3, #1
 801e396:	0580      	lsls	r0, r0, #22
 801e398:	d56e      	bpl.n	801e478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e39a:	f1b8 0f08 	cmp.w	r8, #8
 801e39e:	d16b      	bne.n	801e478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e3a0:	2b00      	cmp	r3, #0
 801e3a2:	bf0c      	ite	eq
 801e3a4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e3a8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e3ac:	2d00      	cmp	r5, #0
 801e3ae:	f47f aee8 	bne.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e3b2:	2e00      	cmp	r6, #0
 801e3b4:	f47f aee5 	bne.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e3b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e3ba:	19e3      	adds	r3, r4, r7
 801e3bc:	4283      	cmp	r3, r0
 801e3be:	f73f aee0 	bgt.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e3c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3c4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e3c6:	444b      	add	r3, r9
 801e3c8:	4283      	cmp	r3, r0
 801e3ca:	f73f aeda 	bgt.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e3ce:	6810      	ldr	r0, [r2, #0]
 801e3d0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e3d4:	6804      	ldr	r4, [r0, #0]
 801e3d6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e3da:	b2bf      	uxth	r7, r7
 801e3dc:	f1b8 0f08 	cmp.w	r8, #8
 801e3e0:	f04f 0500 	mov.w	r5, #0
 801e3e4:	bf18      	it	ne
 801e3e6:	3701      	addne	r7, #1
 801e3e8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e3ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e3ee:	9104      	str	r1, [sp, #16]
 801e3f0:	bf18      	it	ne
 801e3f2:	f027 0701 	bicne.w	r7, r7, #1
 801e3f6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e3f8:	bf18      	it	ne
 801e3fa:	b2bf      	uxthne	r7, r7
 801e3fc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e400:	e9cd 7900 	strd	r7, r9, [sp]
 801e404:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e406:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e408:	47a0      	blx	r4
 801e40a:	b019      	add	sp, #100	; 0x64
 801e40c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e410:	2300      	movs	r3, #0
 801e412:	e7c0      	b.n	801e396 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e414:	2208      	movs	r2, #8
 801e416:	fb92 f3f8 	sdiv	r3, r2, r8
 801e41a:	1e5a      	subs	r2, r3, #1
 801e41c:	443a      	add	r2, r7
 801e41e:	fb92 f2f3 	sdiv	r2, r2, r3
 801e422:	fb12 f203 	smulbb	r2, r2, r3
 801e426:	b292      	uxth	r2, r2
 801e428:	e6b0      	b.n	801e18c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e42a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e42c:	e6ec      	b.n	801e208 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e42e:	bf00      	nop
 801e430:	20012e54 	.word	0x20012e54
 801e434:	20012e5c 	.word	0x20012e5c
 801e438:	20012e56 	.word	0x20012e56
 801e43c:	00fff800 	.word	0x00fff800
 801e440:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e442:	e779      	b.n	801e338 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e444:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e446:	b153      	cbz	r3, 801e45e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e448:	441e      	add	r6, r3
 801e44a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e44c:	b2b6      	uxth	r6, r6
 801e44e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e452:	f006 0607 	and.w	r6, r6, #7
 801e456:	781a      	ldrb	r2, [r3, #0]
 801e458:	9328      	str	r3, [sp, #160]	; 0xa0
 801e45a:	4132      	asrs	r2, r6
 801e45c:	b2d2      	uxtb	r2, r2
 801e45e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e460:	445b      	add	r3, fp
 801e462:	930a      	str	r3, [sp, #40]	; 0x28
 801e464:	e706      	b.n	801e274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e468:	2b00      	cmp	r3, #0
 801e46a:	d1ce      	bne.n	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e46c:	4b05      	ldr	r3, [pc, #20]	; (801e484 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e46e:	6818      	ldr	r0, [r3, #0]
 801e470:	6803      	ldr	r3, [r0, #0]
 801e472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e474:	4798      	blx	r3
 801e476:	e7c8      	b.n	801e40a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e478:	2b00      	cmp	r3, #0
 801e47a:	f43f ae82 	beq.w	801e182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e47e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e482:	e793      	b.n	801e3ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e484:	20012e5c 	.word	0x20012e5c

0801e488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e488:	b538      	push	{r3, r4, r5, lr}
 801e48a:	4c15      	ldr	r4, [pc, #84]	; (801e4e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e48c:	7823      	ldrb	r3, [r4, #0]
 801e48e:	f3bf 8f5b 	dmb	ish
 801e492:	07da      	lsls	r2, r3, #31
 801e494:	4605      	mov	r5, r0
 801e496:	d40b      	bmi.n	801e4b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e498:	4620      	mov	r0, r4
 801e49a:	f00a fee2 	bl	8029262 <__cxa_guard_acquire>
 801e49e:	b138      	cbz	r0, 801e4b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e4a0:	4620      	mov	r0, r4
 801e4a2:	f00a feea 	bl	802927a <__cxa_guard_release>
 801e4a6:	4a0f      	ldr	r2, [pc, #60]	; (801e4e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e4a8:	490f      	ldr	r1, [pc, #60]	; (801e4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e4aa:	4810      	ldr	r0, [pc, #64]	; (801e4ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e4ac:	f00a fed2 	bl	8029254 <__aeabi_atexit>
 801e4b0:	4c0f      	ldr	r4, [pc, #60]	; (801e4f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e4b2:	7823      	ldrb	r3, [r4, #0]
 801e4b4:	f3bf 8f5b 	dmb	ish
 801e4b8:	07db      	lsls	r3, r3, #31
 801e4ba:	d40b      	bmi.n	801e4d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	f00a fed0 	bl	8029262 <__cxa_guard_acquire>
 801e4c2:	b138      	cbz	r0, 801e4d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e4c4:	4620      	mov	r0, r4
 801e4c6:	f00a fed8 	bl	802927a <__cxa_guard_release>
 801e4ca:	4a06      	ldr	r2, [pc, #24]	; (801e4e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e4cc:	4909      	ldr	r1, [pc, #36]	; (801e4f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e4ce:	480a      	ldr	r0, [pc, #40]	; (801e4f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e4d0:	f00a fec0 	bl	8029254 <__aeabi_atexit>
 801e4d4:	4b05      	ldr	r3, [pc, #20]	; (801e4ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e4d6:	612b      	str	r3, [r5, #16]
 801e4d8:	4b07      	ldr	r3, [pc, #28]	; (801e4f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e4da:	616b      	str	r3, [r5, #20]
 801e4dc:	bd38      	pop	{r3, r4, r5, pc}
 801e4de:	bf00      	nop
 801e4e0:	20012f3c 	.word	0x20012f3c
 801e4e4:	20000000 	.word	0x20000000
 801e4e8:	0801b28b 	.word	0x0801b28b
 801e4ec:	200000d4 	.word	0x200000d4
 801e4f0:	20012f40 	.word	0x20012f40
 801e4f4:	0801b289 	.word	0x0801b289
 801e4f8:	200000d8 	.word	0x200000d8

0801e4fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e4fc:	b538      	push	{r3, r4, r5, lr}
 801e4fe:	4c15      	ldr	r4, [pc, #84]	; (801e554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e500:	7823      	ldrb	r3, [r4, #0]
 801e502:	f3bf 8f5b 	dmb	ish
 801e506:	07da      	lsls	r2, r3, #31
 801e508:	4605      	mov	r5, r0
 801e50a:	d40b      	bmi.n	801e524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e50c:	4620      	mov	r0, r4
 801e50e:	f00a fea8 	bl	8029262 <__cxa_guard_acquire>
 801e512:	b138      	cbz	r0, 801e524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e514:	4620      	mov	r0, r4
 801e516:	f00a feb0 	bl	802927a <__cxa_guard_release>
 801e51a:	4a0f      	ldr	r2, [pc, #60]	; (801e558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e51c:	490f      	ldr	r1, [pc, #60]	; (801e55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e51e:	4810      	ldr	r0, [pc, #64]	; (801e560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e520:	f00a fe98 	bl	8029254 <__aeabi_atexit>
 801e524:	4c0f      	ldr	r4, [pc, #60]	; (801e564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e526:	7823      	ldrb	r3, [r4, #0]
 801e528:	f3bf 8f5b 	dmb	ish
 801e52c:	07db      	lsls	r3, r3, #31
 801e52e:	d40b      	bmi.n	801e548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e530:	4620      	mov	r0, r4
 801e532:	f00a fe96 	bl	8029262 <__cxa_guard_acquire>
 801e536:	b138      	cbz	r0, 801e548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e538:	4620      	mov	r0, r4
 801e53a:	f00a fe9e 	bl	802927a <__cxa_guard_release>
 801e53e:	4a06      	ldr	r2, [pc, #24]	; (801e558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e540:	4909      	ldr	r1, [pc, #36]	; (801e568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e542:	480a      	ldr	r0, [pc, #40]	; (801e56c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e544:	f00a fe86 	bl	8029254 <__aeabi_atexit>
 801e548:	4b05      	ldr	r3, [pc, #20]	; (801e560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e54a:	60ab      	str	r3, [r5, #8]
 801e54c:	4b07      	ldr	r3, [pc, #28]	; (801e56c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e54e:	60eb      	str	r3, [r5, #12]
 801e550:	bd38      	pop	{r3, r4, r5, pc}
 801e552:	bf00      	nop
 801e554:	20012f14 	.word	0x20012f14
 801e558:	20000000 	.word	0x20000000
 801e55c:	0801b28f 	.word	0x0801b28f
 801e560:	200000ac 	.word	0x200000ac
 801e564:	20012f18 	.word	0x20012f18
 801e568:	0801b28d 	.word	0x0801b28d
 801e56c:	200000b0 	.word	0x200000b0

0801e570 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e570:	b510      	push	{r4, lr}
 801e572:	4604      	mov	r4, r0
 801e574:	f7ff ff88 	bl	801e488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e578:	4620      	mov	r0, r4
 801e57a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e57e:	f7ff bfbd 	b.w	801e4fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e584:	b538      	push	{r3, r4, r5, lr}
 801e586:	4c15      	ldr	r4, [pc, #84]	; (801e5dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e588:	7823      	ldrb	r3, [r4, #0]
 801e58a:	f3bf 8f5b 	dmb	ish
 801e58e:	07da      	lsls	r2, r3, #31
 801e590:	4605      	mov	r5, r0
 801e592:	d40b      	bmi.n	801e5ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e594:	4620      	mov	r0, r4
 801e596:	f00a fe64 	bl	8029262 <__cxa_guard_acquire>
 801e59a:	b138      	cbz	r0, 801e5ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e59c:	4620      	mov	r0, r4
 801e59e:	f00a fe6c 	bl	802927a <__cxa_guard_release>
 801e5a2:	4a0f      	ldr	r2, [pc, #60]	; (801e5e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e5a4:	490f      	ldr	r1, [pc, #60]	; (801e5e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e5a6:	4810      	ldr	r0, [pc, #64]	; (801e5e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e5a8:	f00a fe54 	bl	8029254 <__aeabi_atexit>
 801e5ac:	4c0f      	ldr	r4, [pc, #60]	; (801e5ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e5ae:	7823      	ldrb	r3, [r4, #0]
 801e5b0:	f3bf 8f5b 	dmb	ish
 801e5b4:	07db      	lsls	r3, r3, #31
 801e5b6:	d40b      	bmi.n	801e5d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e5b8:	4620      	mov	r0, r4
 801e5ba:	f00a fe52 	bl	8029262 <__cxa_guard_acquire>
 801e5be:	b138      	cbz	r0, 801e5d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e5c0:	4620      	mov	r0, r4
 801e5c2:	f00a fe5a 	bl	802927a <__cxa_guard_release>
 801e5c6:	4a06      	ldr	r2, [pc, #24]	; (801e5e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e5c8:	4909      	ldr	r1, [pc, #36]	; (801e5f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e5ca:	480a      	ldr	r0, [pc, #40]	; (801e5f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e5cc:	f00a fe42 	bl	8029254 <__aeabi_atexit>
 801e5d0:	4b05      	ldr	r3, [pc, #20]	; (801e5e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e5d2:	622b      	str	r3, [r5, #32]
 801e5d4:	4b07      	ldr	r3, [pc, #28]	; (801e5f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e5d6:	626b      	str	r3, [r5, #36]	; 0x24
 801e5d8:	bd38      	pop	{r3, r4, r5, pc}
 801e5da:	bf00      	nop
 801e5dc:	20012f44 	.word	0x20012f44
 801e5e0:	20000000 	.word	0x20000000
 801e5e4:	0801b283 	.word	0x0801b283
 801e5e8:	200000dc 	.word	0x200000dc
 801e5ec:	20012f48 	.word	0x20012f48
 801e5f0:	0801b281 	.word	0x0801b281
 801e5f4:	200000e0 	.word	0x200000e0

0801e5f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e5f8:	b538      	push	{r3, r4, r5, lr}
 801e5fa:	4c15      	ldr	r4, [pc, #84]	; (801e650 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e5fc:	7823      	ldrb	r3, [r4, #0]
 801e5fe:	f3bf 8f5b 	dmb	ish
 801e602:	07da      	lsls	r2, r3, #31
 801e604:	4605      	mov	r5, r0
 801e606:	d40b      	bmi.n	801e620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e608:	4620      	mov	r0, r4
 801e60a:	f00a fe2a 	bl	8029262 <__cxa_guard_acquire>
 801e60e:	b138      	cbz	r0, 801e620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e610:	4620      	mov	r0, r4
 801e612:	f00a fe32 	bl	802927a <__cxa_guard_release>
 801e616:	4a0f      	ldr	r2, [pc, #60]	; (801e654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e618:	490f      	ldr	r1, [pc, #60]	; (801e658 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e61a:	4810      	ldr	r0, [pc, #64]	; (801e65c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e61c:	f00a fe1a 	bl	8029254 <__aeabi_atexit>
 801e620:	4c0f      	ldr	r4, [pc, #60]	; (801e660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e622:	7823      	ldrb	r3, [r4, #0]
 801e624:	f3bf 8f5b 	dmb	ish
 801e628:	07db      	lsls	r3, r3, #31
 801e62a:	d40b      	bmi.n	801e644 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e62c:	4620      	mov	r0, r4
 801e62e:	f00a fe18 	bl	8029262 <__cxa_guard_acquire>
 801e632:	b138      	cbz	r0, 801e644 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e634:	4620      	mov	r0, r4
 801e636:	f00a fe20 	bl	802927a <__cxa_guard_release>
 801e63a:	4a06      	ldr	r2, [pc, #24]	; (801e654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e63c:	4909      	ldr	r1, [pc, #36]	; (801e664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e63e:	480a      	ldr	r0, [pc, #40]	; (801e668 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e640:	f00a fe08 	bl	8029254 <__aeabi_atexit>
 801e644:	4b05      	ldr	r3, [pc, #20]	; (801e65c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e646:	61ab      	str	r3, [r5, #24]
 801e648:	4b07      	ldr	r3, [pc, #28]	; (801e668 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e64a:	61eb      	str	r3, [r5, #28]
 801e64c:	bd38      	pop	{r3, r4, r5, pc}
 801e64e:	bf00      	nop
 801e650:	20012f1c 	.word	0x20012f1c
 801e654:	20000000 	.word	0x20000000
 801e658:	0801b287 	.word	0x0801b287
 801e65c:	200000b4 	.word	0x200000b4
 801e660:	20012f20 	.word	0x20012f20
 801e664:	0801b285 	.word	0x0801b285
 801e668:	200000b8 	.word	0x200000b8

0801e66c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e66c:	b510      	push	{r4, lr}
 801e66e:	4604      	mov	r4, r0
 801e670:	f7ff ff88 	bl	801e584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e674:	4620      	mov	r0, r4
 801e676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e67a:	f7ff bfbd 	b.w	801e5f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e680:	b538      	push	{r3, r4, r5, lr}
 801e682:	4c15      	ldr	r4, [pc, #84]	; (801e6d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e684:	7823      	ldrb	r3, [r4, #0]
 801e686:	f3bf 8f5b 	dmb	ish
 801e68a:	07da      	lsls	r2, r3, #31
 801e68c:	4605      	mov	r5, r0
 801e68e:	d40b      	bmi.n	801e6a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e690:	4620      	mov	r0, r4
 801e692:	f00a fde6 	bl	8029262 <__cxa_guard_acquire>
 801e696:	b138      	cbz	r0, 801e6a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e698:	4620      	mov	r0, r4
 801e69a:	f00a fdee 	bl	802927a <__cxa_guard_release>
 801e69e:	4a0f      	ldr	r2, [pc, #60]	; (801e6dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e6a0:	490f      	ldr	r1, [pc, #60]	; (801e6e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e6a2:	4810      	ldr	r0, [pc, #64]	; (801e6e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e6a4:	f00a fdd6 	bl	8029254 <__aeabi_atexit>
 801e6a8:	4c0f      	ldr	r4, [pc, #60]	; (801e6e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e6aa:	7823      	ldrb	r3, [r4, #0]
 801e6ac:	f3bf 8f5b 	dmb	ish
 801e6b0:	07db      	lsls	r3, r3, #31
 801e6b2:	d40b      	bmi.n	801e6cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e6b4:	4620      	mov	r0, r4
 801e6b6:	f00a fdd4 	bl	8029262 <__cxa_guard_acquire>
 801e6ba:	b138      	cbz	r0, 801e6cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e6bc:	4620      	mov	r0, r4
 801e6be:	f00a fddc 	bl	802927a <__cxa_guard_release>
 801e6c2:	4a06      	ldr	r2, [pc, #24]	; (801e6dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e6c4:	4909      	ldr	r1, [pc, #36]	; (801e6ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e6c6:	480a      	ldr	r0, [pc, #40]	; (801e6f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e6c8:	f00a fdc4 	bl	8029254 <__aeabi_atexit>
 801e6cc:	4b05      	ldr	r3, [pc, #20]	; (801e6e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e6ce:	632b      	str	r3, [r5, #48]	; 0x30
 801e6d0:	4b07      	ldr	r3, [pc, #28]	; (801e6f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e6d2:	636b      	str	r3, [r5, #52]	; 0x34
 801e6d4:	bd38      	pop	{r3, r4, r5, pc}
 801e6d6:	bf00      	nop
 801e6d8:	20012f54 	.word	0x20012f54
 801e6dc:	20000000 	.word	0x20000000
 801e6e0:	0801b27b 	.word	0x0801b27b
 801e6e4:	200000ec 	.word	0x200000ec
 801e6e8:	20012f58 	.word	0x20012f58
 801e6ec:	0801b279 	.word	0x0801b279
 801e6f0:	200000f0 	.word	0x200000f0

0801e6f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e6f4:	b538      	push	{r3, r4, r5, lr}
 801e6f6:	4c15      	ldr	r4, [pc, #84]	; (801e74c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e6f8:	7823      	ldrb	r3, [r4, #0]
 801e6fa:	f3bf 8f5b 	dmb	ish
 801e6fe:	07da      	lsls	r2, r3, #31
 801e700:	4605      	mov	r5, r0
 801e702:	d40b      	bmi.n	801e71c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e704:	4620      	mov	r0, r4
 801e706:	f00a fdac 	bl	8029262 <__cxa_guard_acquire>
 801e70a:	b138      	cbz	r0, 801e71c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e70c:	4620      	mov	r0, r4
 801e70e:	f00a fdb4 	bl	802927a <__cxa_guard_release>
 801e712:	4a0f      	ldr	r2, [pc, #60]	; (801e750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e714:	490f      	ldr	r1, [pc, #60]	; (801e754 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e716:	4810      	ldr	r0, [pc, #64]	; (801e758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e718:	f00a fd9c 	bl	8029254 <__aeabi_atexit>
 801e71c:	4c0f      	ldr	r4, [pc, #60]	; (801e75c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e71e:	7823      	ldrb	r3, [r4, #0]
 801e720:	f3bf 8f5b 	dmb	ish
 801e724:	07db      	lsls	r3, r3, #31
 801e726:	d40b      	bmi.n	801e740 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e728:	4620      	mov	r0, r4
 801e72a:	f00a fd9a 	bl	8029262 <__cxa_guard_acquire>
 801e72e:	b138      	cbz	r0, 801e740 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e730:	4620      	mov	r0, r4
 801e732:	f00a fda2 	bl	802927a <__cxa_guard_release>
 801e736:	4a06      	ldr	r2, [pc, #24]	; (801e750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e738:	4909      	ldr	r1, [pc, #36]	; (801e760 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e73a:	480a      	ldr	r0, [pc, #40]	; (801e764 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e73c:	f00a fd8a 	bl	8029254 <__aeabi_atexit>
 801e740:	4b05      	ldr	r3, [pc, #20]	; (801e758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e742:	62ab      	str	r3, [r5, #40]	; 0x28
 801e744:	4b07      	ldr	r3, [pc, #28]	; (801e764 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e746:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e748:	bd38      	pop	{r3, r4, r5, pc}
 801e74a:	bf00      	nop
 801e74c:	20012f24 	.word	0x20012f24
 801e750:	20000000 	.word	0x20000000
 801e754:	0801b27f 	.word	0x0801b27f
 801e758:	200000bc 	.word	0x200000bc
 801e75c:	20012f28 	.word	0x20012f28
 801e760:	0801b27d 	.word	0x0801b27d
 801e764:	200000c0 	.word	0x200000c0

0801e768 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e768:	b510      	push	{r4, lr}
 801e76a:	4604      	mov	r4, r0
 801e76c:	f7ff ff88 	bl	801e680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e770:	4620      	mov	r0, r4
 801e772:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e776:	f7ff bfbd 	b.w	801e6f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e77c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e77c:	b538      	push	{r3, r4, r5, lr}
 801e77e:	4c15      	ldr	r4, [pc, #84]	; (801e7d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e780:	7823      	ldrb	r3, [r4, #0]
 801e782:	f3bf 8f5b 	dmb	ish
 801e786:	07da      	lsls	r2, r3, #31
 801e788:	4605      	mov	r5, r0
 801e78a:	d40b      	bmi.n	801e7a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e78c:	4620      	mov	r0, r4
 801e78e:	f00a fd68 	bl	8029262 <__cxa_guard_acquire>
 801e792:	b138      	cbz	r0, 801e7a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e794:	4620      	mov	r0, r4
 801e796:	f00a fd70 	bl	802927a <__cxa_guard_release>
 801e79a:	4a0f      	ldr	r2, [pc, #60]	; (801e7d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e79c:	490f      	ldr	r1, [pc, #60]	; (801e7dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e79e:	4810      	ldr	r0, [pc, #64]	; (801e7e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e7a0:	f00a fd58 	bl	8029254 <__aeabi_atexit>
 801e7a4:	4c0f      	ldr	r4, [pc, #60]	; (801e7e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e7a6:	7823      	ldrb	r3, [r4, #0]
 801e7a8:	f3bf 8f5b 	dmb	ish
 801e7ac:	07db      	lsls	r3, r3, #31
 801e7ae:	d40b      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e7b0:	4620      	mov	r0, r4
 801e7b2:	f00a fd56 	bl	8029262 <__cxa_guard_acquire>
 801e7b6:	b138      	cbz	r0, 801e7c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e7b8:	4620      	mov	r0, r4
 801e7ba:	f00a fd5e 	bl	802927a <__cxa_guard_release>
 801e7be:	4a06      	ldr	r2, [pc, #24]	; (801e7d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e7c0:	4909      	ldr	r1, [pc, #36]	; (801e7e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e7c2:	480a      	ldr	r0, [pc, #40]	; (801e7ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e7c4:	f00a fd46 	bl	8029254 <__aeabi_atexit>
 801e7c8:	4b05      	ldr	r3, [pc, #20]	; (801e7e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e7ca:	652b      	str	r3, [r5, #80]	; 0x50
 801e7cc:	4b07      	ldr	r3, [pc, #28]	; (801e7ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e7ce:	656b      	str	r3, [r5, #84]	; 0x54
 801e7d0:	bd38      	pop	{r3, r4, r5, pc}
 801e7d2:	bf00      	nop
 801e7d4:	20012f5c 	.word	0x20012f5c
 801e7d8:	20000000 	.word	0x20000000
 801e7dc:	0801b26b 	.word	0x0801b26b
 801e7e0:	200000f4 	.word	0x200000f4
 801e7e4:	20012f60 	.word	0x20012f60
 801e7e8:	0801b269 	.word	0x0801b269
 801e7ec:	200000f8 	.word	0x200000f8

0801e7f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e7f0:	b538      	push	{r3, r4, r5, lr}
 801e7f2:	4c15      	ldr	r4, [pc, #84]	; (801e848 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e7f4:	7823      	ldrb	r3, [r4, #0]
 801e7f6:	f3bf 8f5b 	dmb	ish
 801e7fa:	07da      	lsls	r2, r3, #31
 801e7fc:	4605      	mov	r5, r0
 801e7fe:	d40b      	bmi.n	801e818 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e800:	4620      	mov	r0, r4
 801e802:	f00a fd2e 	bl	8029262 <__cxa_guard_acquire>
 801e806:	b138      	cbz	r0, 801e818 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e808:	4620      	mov	r0, r4
 801e80a:	f00a fd36 	bl	802927a <__cxa_guard_release>
 801e80e:	4a0f      	ldr	r2, [pc, #60]	; (801e84c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e810:	490f      	ldr	r1, [pc, #60]	; (801e850 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e812:	4810      	ldr	r0, [pc, #64]	; (801e854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e814:	f00a fd1e 	bl	8029254 <__aeabi_atexit>
 801e818:	4c0f      	ldr	r4, [pc, #60]	; (801e858 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e81a:	7823      	ldrb	r3, [r4, #0]
 801e81c:	f3bf 8f5b 	dmb	ish
 801e820:	07db      	lsls	r3, r3, #31
 801e822:	d40b      	bmi.n	801e83c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e824:	4620      	mov	r0, r4
 801e826:	f00a fd1c 	bl	8029262 <__cxa_guard_acquire>
 801e82a:	b138      	cbz	r0, 801e83c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e82c:	4620      	mov	r0, r4
 801e82e:	f00a fd24 	bl	802927a <__cxa_guard_release>
 801e832:	4a06      	ldr	r2, [pc, #24]	; (801e84c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e834:	4909      	ldr	r1, [pc, #36]	; (801e85c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e836:	480a      	ldr	r0, [pc, #40]	; (801e860 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e838:	f00a fd0c 	bl	8029254 <__aeabi_atexit>
 801e83c:	4b05      	ldr	r3, [pc, #20]	; (801e854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e83e:	64ab      	str	r3, [r5, #72]	; 0x48
 801e840:	4b07      	ldr	r3, [pc, #28]	; (801e860 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e842:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e844:	bd38      	pop	{r3, r4, r5, pc}
 801e846:	bf00      	nop
 801e848:	20012f64 	.word	0x20012f64
 801e84c:	20000000 	.word	0x20000000
 801e850:	0801b26f 	.word	0x0801b26f
 801e854:	200000fc 	.word	0x200000fc
 801e858:	20012f68 	.word	0x20012f68
 801e85c:	0801b26d 	.word	0x0801b26d
 801e860:	20000100 	.word	0x20000100

0801e864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e864:	b538      	push	{r3, r4, r5, lr}
 801e866:	4c15      	ldr	r4, [pc, #84]	; (801e8bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e868:	7823      	ldrb	r3, [r4, #0]
 801e86a:	f3bf 8f5b 	dmb	ish
 801e86e:	07da      	lsls	r2, r3, #31
 801e870:	4605      	mov	r5, r0
 801e872:	d40b      	bmi.n	801e88c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e874:	4620      	mov	r0, r4
 801e876:	f00a fcf4 	bl	8029262 <__cxa_guard_acquire>
 801e87a:	b138      	cbz	r0, 801e88c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e87c:	4620      	mov	r0, r4
 801e87e:	f00a fcfc 	bl	802927a <__cxa_guard_release>
 801e882:	4a0f      	ldr	r2, [pc, #60]	; (801e8c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e884:	490f      	ldr	r1, [pc, #60]	; (801e8c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e886:	4810      	ldr	r0, [pc, #64]	; (801e8c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e888:	f00a fce4 	bl	8029254 <__aeabi_atexit>
 801e88c:	4c0f      	ldr	r4, [pc, #60]	; (801e8cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e88e:	7823      	ldrb	r3, [r4, #0]
 801e890:	f3bf 8f5b 	dmb	ish
 801e894:	07db      	lsls	r3, r3, #31
 801e896:	d40b      	bmi.n	801e8b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e898:	4620      	mov	r0, r4
 801e89a:	f00a fce2 	bl	8029262 <__cxa_guard_acquire>
 801e89e:	b138      	cbz	r0, 801e8b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e8a0:	4620      	mov	r0, r4
 801e8a2:	f00a fcea 	bl	802927a <__cxa_guard_release>
 801e8a6:	4a06      	ldr	r2, [pc, #24]	; (801e8c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e8a8:	4909      	ldr	r1, [pc, #36]	; (801e8d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e8aa:	480a      	ldr	r0, [pc, #40]	; (801e8d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e8ac:	f00a fcd2 	bl	8029254 <__aeabi_atexit>
 801e8b0:	4b05      	ldr	r3, [pc, #20]	; (801e8c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e8b2:	642b      	str	r3, [r5, #64]	; 0x40
 801e8b4:	4b07      	ldr	r3, [pc, #28]	; (801e8d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e8b6:	646b      	str	r3, [r5, #68]	; 0x44
 801e8b8:	bd38      	pop	{r3, r4, r5, pc}
 801e8ba:	bf00      	nop
 801e8bc:	20012f2c 	.word	0x20012f2c
 801e8c0:	20000000 	.word	0x20000000
 801e8c4:	0801b273 	.word	0x0801b273
 801e8c8:	200000c4 	.word	0x200000c4
 801e8cc:	20012f30 	.word	0x20012f30
 801e8d0:	0801b271 	.word	0x0801b271
 801e8d4:	200000c8 	.word	0x200000c8

0801e8d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e8d8:	b538      	push	{r3, r4, r5, lr}
 801e8da:	4c15      	ldr	r4, [pc, #84]	; (801e930 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e8dc:	7823      	ldrb	r3, [r4, #0]
 801e8de:	f3bf 8f5b 	dmb	ish
 801e8e2:	07da      	lsls	r2, r3, #31
 801e8e4:	4605      	mov	r5, r0
 801e8e6:	d40b      	bmi.n	801e900 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e8e8:	4620      	mov	r0, r4
 801e8ea:	f00a fcba 	bl	8029262 <__cxa_guard_acquire>
 801e8ee:	b138      	cbz	r0, 801e900 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e8f0:	4620      	mov	r0, r4
 801e8f2:	f00a fcc2 	bl	802927a <__cxa_guard_release>
 801e8f6:	4a0f      	ldr	r2, [pc, #60]	; (801e934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e8f8:	490f      	ldr	r1, [pc, #60]	; (801e938 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e8fa:	4810      	ldr	r0, [pc, #64]	; (801e93c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e8fc:	f00a fcaa 	bl	8029254 <__aeabi_atexit>
 801e900:	4c0f      	ldr	r4, [pc, #60]	; (801e940 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e902:	7823      	ldrb	r3, [r4, #0]
 801e904:	f3bf 8f5b 	dmb	ish
 801e908:	07db      	lsls	r3, r3, #31
 801e90a:	d40b      	bmi.n	801e924 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e90c:	4620      	mov	r0, r4
 801e90e:	f00a fca8 	bl	8029262 <__cxa_guard_acquire>
 801e912:	b138      	cbz	r0, 801e924 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e914:	4620      	mov	r0, r4
 801e916:	f00a fcb0 	bl	802927a <__cxa_guard_release>
 801e91a:	4a06      	ldr	r2, [pc, #24]	; (801e934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e91c:	4909      	ldr	r1, [pc, #36]	; (801e944 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e91e:	480a      	ldr	r0, [pc, #40]	; (801e948 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e920:	f00a fc98 	bl	8029254 <__aeabi_atexit>
 801e924:	4b05      	ldr	r3, [pc, #20]	; (801e93c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e926:	63ab      	str	r3, [r5, #56]	; 0x38
 801e928:	4b07      	ldr	r3, [pc, #28]	; (801e948 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e92a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e92c:	bd38      	pop	{r3, r4, r5, pc}
 801e92e:	bf00      	nop
 801e930:	20012f4c 	.word	0x20012f4c
 801e934:	20000000 	.word	0x20000000
 801e938:	0801b277 	.word	0x0801b277
 801e93c:	200000e4 	.word	0x200000e4
 801e940:	20012f50 	.word	0x20012f50
 801e944:	0801b275 	.word	0x0801b275
 801e948:	200000e8 	.word	0x200000e8

0801e94c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e94c:	b510      	push	{r4, lr}
 801e94e:	4604      	mov	r4, r0
 801e950:	f7ff ff14 	bl	801e77c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e954:	4620      	mov	r0, r4
 801e956:	f7ff ff85 	bl	801e864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e95a:	4620      	mov	r0, r4
 801e95c:	f7ff ff48 	bl	801e7f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e960:	4620      	mov	r0, r4
 801e962:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e966:	f7ff bfb7 	b.w	801e8d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e96c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e96c:	b538      	push	{r3, r4, r5, lr}
 801e96e:	4c15      	ldr	r4, [pc, #84]	; (801e9c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e970:	7823      	ldrb	r3, [r4, #0]
 801e972:	f3bf 8f5b 	dmb	ish
 801e976:	07da      	lsls	r2, r3, #31
 801e978:	4605      	mov	r5, r0
 801e97a:	d40b      	bmi.n	801e994 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e97c:	4620      	mov	r0, r4
 801e97e:	f00a fc70 	bl	8029262 <__cxa_guard_acquire>
 801e982:	b138      	cbz	r0, 801e994 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e984:	4620      	mov	r0, r4
 801e986:	f00a fc78 	bl	802927a <__cxa_guard_release>
 801e98a:	4a0f      	ldr	r2, [pc, #60]	; (801e9c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e98c:	490f      	ldr	r1, [pc, #60]	; (801e9cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e98e:	4810      	ldr	r0, [pc, #64]	; (801e9d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e990:	f00a fc60 	bl	8029254 <__aeabi_atexit>
 801e994:	4c0f      	ldr	r4, [pc, #60]	; (801e9d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e996:	7823      	ldrb	r3, [r4, #0]
 801e998:	f3bf 8f5b 	dmb	ish
 801e99c:	07db      	lsls	r3, r3, #31
 801e99e:	d40b      	bmi.n	801e9b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e9a0:	4620      	mov	r0, r4
 801e9a2:	f00a fc5e 	bl	8029262 <__cxa_guard_acquire>
 801e9a6:	b138      	cbz	r0, 801e9b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e9a8:	4620      	mov	r0, r4
 801e9aa:	f00a fc66 	bl	802927a <__cxa_guard_release>
 801e9ae:	4a06      	ldr	r2, [pc, #24]	; (801e9c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e9b0:	4909      	ldr	r1, [pc, #36]	; (801e9d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e9b2:	480a      	ldr	r0, [pc, #40]	; (801e9dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e9b4:	f00a fc4e 	bl	8029254 <__aeabi_atexit>
 801e9b8:	4b05      	ldr	r3, [pc, #20]	; (801e9d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e9ba:	662b      	str	r3, [r5, #96]	; 0x60
 801e9bc:	4b07      	ldr	r3, [pc, #28]	; (801e9dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e9be:	666b      	str	r3, [r5, #100]	; 0x64
 801e9c0:	bd38      	pop	{r3, r4, r5, pc}
 801e9c2:	bf00      	nop
 801e9c4:	20012f34 	.word	0x20012f34
 801e9c8:	20000000 	.word	0x20000000
 801e9cc:	0801b263 	.word	0x0801b263
 801e9d0:	200000cc 	.word	0x200000cc
 801e9d4:	20012f38 	.word	0x20012f38
 801e9d8:	0801b261 	.word	0x0801b261
 801e9dc:	200000d0 	.word	0x200000d0

0801e9e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e9e0:	b538      	push	{r3, r4, r5, lr}
 801e9e2:	4c15      	ldr	r4, [pc, #84]	; (801ea38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e9e4:	7823      	ldrb	r3, [r4, #0]
 801e9e6:	f3bf 8f5b 	dmb	ish
 801e9ea:	07da      	lsls	r2, r3, #31
 801e9ec:	4605      	mov	r5, r0
 801e9ee:	d40b      	bmi.n	801ea08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e9f0:	4620      	mov	r0, r4
 801e9f2:	f00a fc36 	bl	8029262 <__cxa_guard_acquire>
 801e9f6:	b138      	cbz	r0, 801ea08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e9f8:	4620      	mov	r0, r4
 801e9fa:	f00a fc3e 	bl	802927a <__cxa_guard_release>
 801e9fe:	4a0f      	ldr	r2, [pc, #60]	; (801ea3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ea00:	490f      	ldr	r1, [pc, #60]	; (801ea40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ea02:	4810      	ldr	r0, [pc, #64]	; (801ea44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ea04:	f00a fc26 	bl	8029254 <__aeabi_atexit>
 801ea08:	4c0f      	ldr	r4, [pc, #60]	; (801ea48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ea0a:	7823      	ldrb	r3, [r4, #0]
 801ea0c:	f3bf 8f5b 	dmb	ish
 801ea10:	07db      	lsls	r3, r3, #31
 801ea12:	d40b      	bmi.n	801ea2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ea14:	4620      	mov	r0, r4
 801ea16:	f00a fc24 	bl	8029262 <__cxa_guard_acquire>
 801ea1a:	b138      	cbz	r0, 801ea2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ea1c:	4620      	mov	r0, r4
 801ea1e:	f00a fc2c 	bl	802927a <__cxa_guard_release>
 801ea22:	4a06      	ldr	r2, [pc, #24]	; (801ea3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ea24:	4909      	ldr	r1, [pc, #36]	; (801ea4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ea26:	480a      	ldr	r0, [pc, #40]	; (801ea50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ea28:	f00a fc14 	bl	8029254 <__aeabi_atexit>
 801ea2c:	4b05      	ldr	r3, [pc, #20]	; (801ea44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ea2e:	65ab      	str	r3, [r5, #88]	; 0x58
 801ea30:	4b07      	ldr	r3, [pc, #28]	; (801ea50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ea32:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ea34:	bd38      	pop	{r3, r4, r5, pc}
 801ea36:	bf00      	nop
 801ea38:	20012f0c 	.word	0x20012f0c
 801ea3c:	20000000 	.word	0x20000000
 801ea40:	0801b267 	.word	0x0801b267
 801ea44:	200000a4 	.word	0x200000a4
 801ea48:	20012f10 	.word	0x20012f10
 801ea4c:	0801b265 	.word	0x0801b265
 801ea50:	200000a8 	.word	0x200000a8

0801ea54 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801ea54:	b510      	push	{r4, lr}
 801ea56:	4604      	mov	r4, r0
 801ea58:	f7ff ff88 	bl	801e96c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ea5c:	4620      	mov	r0, r4
 801ea5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea62:	f7ff bfbd 	b.w	801e9e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ea68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ea68:	b538      	push	{r3, r4, r5, lr}
 801ea6a:	4c15      	ldr	r4, [pc, #84]	; (801eac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ea6c:	7823      	ldrb	r3, [r4, #0]
 801ea6e:	f3bf 8f5b 	dmb	ish
 801ea72:	07da      	lsls	r2, r3, #31
 801ea74:	4605      	mov	r5, r0
 801ea76:	d40b      	bmi.n	801ea90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ea78:	4620      	mov	r0, r4
 801ea7a:	f00a fbf2 	bl	8029262 <__cxa_guard_acquire>
 801ea7e:	b138      	cbz	r0, 801ea90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ea80:	4620      	mov	r0, r4
 801ea82:	f00a fbfa 	bl	802927a <__cxa_guard_release>
 801ea86:	4a0f      	ldr	r2, [pc, #60]	; (801eac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ea88:	490f      	ldr	r1, [pc, #60]	; (801eac8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ea8a:	4810      	ldr	r0, [pc, #64]	; (801eacc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ea8c:	f00a fbe2 	bl	8029254 <__aeabi_atexit>
 801ea90:	4c0f      	ldr	r4, [pc, #60]	; (801ead0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ea92:	7823      	ldrb	r3, [r4, #0]
 801ea94:	f3bf 8f5b 	dmb	ish
 801ea98:	07db      	lsls	r3, r3, #31
 801ea9a:	d40b      	bmi.n	801eab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ea9c:	4620      	mov	r0, r4
 801ea9e:	f00a fbe0 	bl	8029262 <__cxa_guard_acquire>
 801eaa2:	b138      	cbz	r0, 801eab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801eaa4:	4620      	mov	r0, r4
 801eaa6:	f00a fbe8 	bl	802927a <__cxa_guard_release>
 801eaaa:	4a06      	ldr	r2, [pc, #24]	; (801eac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801eaac:	4909      	ldr	r1, [pc, #36]	; (801ead4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801eaae:	480a      	ldr	r0, [pc, #40]	; (801ead8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801eab0:	f00a fbd0 	bl	8029254 <__aeabi_atexit>
 801eab4:	4b05      	ldr	r3, [pc, #20]	; (801eacc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801eab6:	672b      	str	r3, [r5, #112]	; 0x70
 801eab8:	4b07      	ldr	r3, [pc, #28]	; (801ead8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801eaba:	676b      	str	r3, [r5, #116]	; 0x74
 801eabc:	bd38      	pop	{r3, r4, r5, pc}
 801eabe:	bf00      	nop
 801eac0:	20012f04 	.word	0x20012f04
 801eac4:	20000000 	.word	0x20000000
 801eac8:	0801b25b 	.word	0x0801b25b
 801eacc:	2000009c 	.word	0x2000009c
 801ead0:	20012f08 	.word	0x20012f08
 801ead4:	0801b259 	.word	0x0801b259
 801ead8:	200000a0 	.word	0x200000a0

0801eadc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801eadc:	b538      	push	{r3, r4, r5, lr}
 801eade:	4c15      	ldr	r4, [pc, #84]	; (801eb34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801eae0:	7823      	ldrb	r3, [r4, #0]
 801eae2:	f3bf 8f5b 	dmb	ish
 801eae6:	07da      	lsls	r2, r3, #31
 801eae8:	4605      	mov	r5, r0
 801eaea:	d40b      	bmi.n	801eb04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801eaec:	4620      	mov	r0, r4
 801eaee:	f00a fbb8 	bl	8029262 <__cxa_guard_acquire>
 801eaf2:	b138      	cbz	r0, 801eb04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801eaf4:	4620      	mov	r0, r4
 801eaf6:	f00a fbc0 	bl	802927a <__cxa_guard_release>
 801eafa:	4a0f      	ldr	r2, [pc, #60]	; (801eb38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801eafc:	490f      	ldr	r1, [pc, #60]	; (801eb3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801eafe:	4810      	ldr	r0, [pc, #64]	; (801eb40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801eb00:	f00a fba8 	bl	8029254 <__aeabi_atexit>
 801eb04:	4c0f      	ldr	r4, [pc, #60]	; (801eb44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801eb06:	7823      	ldrb	r3, [r4, #0]
 801eb08:	f3bf 8f5b 	dmb	ish
 801eb0c:	07db      	lsls	r3, r3, #31
 801eb0e:	d40b      	bmi.n	801eb28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801eb10:	4620      	mov	r0, r4
 801eb12:	f00a fba6 	bl	8029262 <__cxa_guard_acquire>
 801eb16:	b138      	cbz	r0, 801eb28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801eb18:	4620      	mov	r0, r4
 801eb1a:	f00a fbae 	bl	802927a <__cxa_guard_release>
 801eb1e:	4a06      	ldr	r2, [pc, #24]	; (801eb38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801eb20:	4909      	ldr	r1, [pc, #36]	; (801eb48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801eb22:	480a      	ldr	r0, [pc, #40]	; (801eb4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801eb24:	f00a fb96 	bl	8029254 <__aeabi_atexit>
 801eb28:	4b05      	ldr	r3, [pc, #20]	; (801eb40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801eb2a:	66ab      	str	r3, [r5, #104]	; 0x68
 801eb2c:	4b07      	ldr	r3, [pc, #28]	; (801eb4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801eb2e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801eb30:	bd38      	pop	{r3, r4, r5, pc}
 801eb32:	bf00      	nop
 801eb34:	20012efc 	.word	0x20012efc
 801eb38:	20000000 	.word	0x20000000
 801eb3c:	0801b25f 	.word	0x0801b25f
 801eb40:	20000094 	.word	0x20000094
 801eb44:	20012f00 	.word	0x20012f00
 801eb48:	0801b25d 	.word	0x0801b25d
 801eb4c:	20000098 	.word	0x20000098

0801eb50 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801eb50:	b510      	push	{r4, lr}
 801eb52:	4604      	mov	r4, r0
 801eb54:	f7ff ff88 	bl	801ea68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801eb58:	4620      	mov	r0, r4
 801eb5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb5e:	f7ff bfbd 	b.w	801eadc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801eb62 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801eb62:	b510      	push	{r4, lr}
 801eb64:	4604      	mov	r4, r0
 801eb66:	f7ff fff3 	bl	801eb50 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801eb6a:	4620      	mov	r0, r4
 801eb6c:	f7ff ff72 	bl	801ea54 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801eb70:	4620      	mov	r0, r4
 801eb72:	f7ff fdf9 	bl	801e768 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801eb76:	4620      	mov	r0, r4
 801eb78:	f7ff fcfa 	bl	801e570 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801eb7c:	4620      	mov	r0, r4
 801eb7e:	f7ff fd75 	bl	801e66c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801eb82:	4620      	mov	r0, r4
 801eb84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb88:	f7ff bee0 	b.w	801e94c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801eb8c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801eb8c:	b538      	push	{r3, r4, r5, lr}
 801eb8e:	4c0b      	ldr	r4, [pc, #44]	; (801ebbc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801eb90:	7823      	ldrb	r3, [r4, #0]
 801eb92:	f3bf 8f5b 	dmb	ish
 801eb96:	07db      	lsls	r3, r3, #31
 801eb98:	4605      	mov	r5, r0
 801eb9a:	d40b      	bmi.n	801ebb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801eb9c:	4620      	mov	r0, r4
 801eb9e:	f00a fb60 	bl	8029262 <__cxa_guard_acquire>
 801eba2:	b138      	cbz	r0, 801ebb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801eba4:	4620      	mov	r0, r4
 801eba6:	f00a fb68 	bl	802927a <__cxa_guard_release>
 801ebaa:	4a05      	ldr	r2, [pc, #20]	; (801ebc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ebac:	4905      	ldr	r1, [pc, #20]	; (801ebc4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ebae:	4806      	ldr	r0, [pc, #24]	; (801ebc8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ebb0:	f00a fb50 	bl	8029254 <__aeabi_atexit>
 801ebb4:	4b04      	ldr	r3, [pc, #16]	; (801ebc8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ebb6:	67ab      	str	r3, [r5, #120]	; 0x78
 801ebb8:	bd38      	pop	{r3, r4, r5, pc}
 801ebba:	bf00      	nop
 801ebbc:	20012ef0 	.word	0x20012ef0
 801ebc0:	20000000 	.word	0x20000000
 801ebc4:	0801b257 	.word	0x0801b257
 801ebc8:	2000008c 	.word	0x2000008c

0801ebcc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ebcc:	b538      	push	{r3, r4, r5, lr}
 801ebce:	4c0b      	ldr	r4, [pc, #44]	; (801ebfc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ebd0:	7823      	ldrb	r3, [r4, #0]
 801ebd2:	f3bf 8f5b 	dmb	ish
 801ebd6:	07db      	lsls	r3, r3, #31
 801ebd8:	4605      	mov	r5, r0
 801ebda:	d40b      	bmi.n	801ebf4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ebdc:	4620      	mov	r0, r4
 801ebde:	f00a fb40 	bl	8029262 <__cxa_guard_acquire>
 801ebe2:	b138      	cbz	r0, 801ebf4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ebe4:	4620      	mov	r0, r4
 801ebe6:	f00a fb48 	bl	802927a <__cxa_guard_release>
 801ebea:	4a05      	ldr	r2, [pc, #20]	; (801ec00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ebec:	4905      	ldr	r1, [pc, #20]	; (801ec04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ebee:	4806      	ldr	r0, [pc, #24]	; (801ec08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ebf0:	f00a fb30 	bl	8029254 <__aeabi_atexit>
 801ebf4:	4b04      	ldr	r3, [pc, #16]	; (801ec08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ebf6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801ebf8:	bd38      	pop	{r3, r4, r5, pc}
 801ebfa:	bf00      	nop
 801ebfc:	20012ef4 	.word	0x20012ef4
 801ec00:	20000000 	.word	0x20000000
 801ec04:	0801b255 	.word	0x0801b255
 801ec08:	20000090 	.word	0x20000090

0801ec0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ec0c:	b570      	push	{r4, r5, r6, lr}
 801ec0e:	4d0d      	ldr	r5, [pc, #52]	; (801ec44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ec10:	4c0d      	ldr	r4, [pc, #52]	; (801ec48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ec12:	782b      	ldrb	r3, [r5, #0]
 801ec14:	f3bf 8f5b 	dmb	ish
 801ec18:	f013 0f01 	tst.w	r3, #1
 801ec1c:	4606      	mov	r6, r0
 801ec1e:	d10d      	bne.n	801ec3c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ec20:	4628      	mov	r0, r5
 801ec22:	f00a fb1e 	bl	8029262 <__cxa_guard_acquire>
 801ec26:	b148      	cbz	r0, 801ec3c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ec28:	4b08      	ldr	r3, [pc, #32]	; (801ec4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ec2a:	6023      	str	r3, [r4, #0]
 801ec2c:	4628      	mov	r0, r5
 801ec2e:	f00a fb24 	bl	802927a <__cxa_guard_release>
 801ec32:	4a07      	ldr	r2, [pc, #28]	; (801ec50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ec34:	4907      	ldr	r1, [pc, #28]	; (801ec54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ec36:	4620      	mov	r0, r4
 801ec38:	f00a fb0c 	bl	8029254 <__aeabi_atexit>
 801ec3c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ec40:	bd70      	pop	{r4, r5, r6, pc}
 801ec42:	bf00      	nop
 801ec44:	20012ef8 	.word	0x20012ef8
 801ec48:	20012f6c 	.word	0x20012f6c
 801ec4c:	0802e824 	.word	0x0802e824
 801ec50:	20000000 	.word	0x20000000
 801ec54:	0801b253 	.word	0x0801b253

0801ec58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ec58:	b510      	push	{r4, lr}
 801ec5a:	4604      	mov	r4, r0
 801ec5c:	f7ff ff96 	bl	801eb8c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ec60:	4620      	mov	r0, r4
 801ec62:	f7ff ffb3 	bl	801ebcc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ec66:	4620      	mov	r0, r4
 801ec68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec6c:	f7ff bfce 	b.w	801ec0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ec70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ec70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec74:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801ec78:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801ec7c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801ec80:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801ec84:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801ec88:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801ec8c:	8808      	ldrh	r0, [r1, #0]
 801ec8e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ec92:	2d00      	cmp	r5, #0
 801ec94:	eb02 0a0c 	add.w	sl, r2, ip
 801ec98:	f2c0 80b0 	blt.w	801edfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ec9c:	45ab      	cmp	fp, r5
 801ec9e:	f340 80ad 	ble.w	801edfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801eca2:	2c00      	cmp	r4, #0
 801eca4:	f2c0 80a8 	blt.w	801edf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801eca8:	45a6      	cmp	lr, r4
 801ecaa:	f340 80a5 	ble.w	801edf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ecae:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ecb2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ecb6:	1c62      	adds	r2, r4, #1
 801ecb8:	f100 80a3 	bmi.w	801ee02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ecbc:	4596      	cmp	lr, r2
 801ecbe:	f340 80a0 	ble.w	801ee02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ecc2:	f1b9 0f00 	cmp.w	r9, #0
 801ecc6:	f000 809c 	beq.w	801ee02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ecca:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ecce:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ecd2:	3501      	adds	r5, #1
 801ecd4:	f100 8099 	bmi.w	801ee0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ecd8:	45ab      	cmp	fp, r5
 801ecda:	f340 8096 	ble.w	801ee0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ecde:	2f00      	cmp	r7, #0
 801ece0:	f000 8093 	beq.w	801ee0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ece4:	2c00      	cmp	r4, #0
 801ece6:	f2c0 808e 	blt.w	801ee06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ecea:	45a6      	cmp	lr, r4
 801ecec:	f340 808b 	ble.w	801ee06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ecf0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ecf4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ecf8:	3401      	adds	r4, #1
 801ecfa:	f100 8089 	bmi.w	801ee10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ecfe:	45a6      	cmp	lr, r4
 801ed00:	f340 8086 	ble.w	801ee10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ed04:	f1b9 0f00 	cmp.w	r9, #0
 801ed08:	f000 8082 	beq.w	801ee10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ed0c:	44d6      	add	lr, sl
 801ed0e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ed12:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ed16:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ed1a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ed1e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ed22:	fb19 fe07 	smulbb	lr, r9, r7
 801ed26:	ea44 0808 	orr.w	r8, r4, r8
 801ed2a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ed2e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ed32:	f1c7 0210 	rsb	r2, r7, #16
 801ed36:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ed3a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ed3e:	ea44 0c0c 	orr.w	ip, r4, ip
 801ed42:	eba2 0209 	sub.w	r2, r2, r9
 801ed46:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ed4a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ed4e:	fb04 f40c 	mul.w	r4, r4, ip
 801ed52:	fb02 4808 	mla	r8, r2, r8, r4
 801ed56:	041a      	lsls	r2, r3, #16
 801ed58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ed5c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed60:	4313      	orrs	r3, r2
 801ed62:	042a      	lsls	r2, r5, #16
 801ed64:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ed68:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ed6c:	fb0e 8303 	mla	r3, lr, r3, r8
 801ed70:	432a      	orrs	r2, r5
 801ed72:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ed76:	fb07 3202 	mla	r2, r7, r2, r3
 801ed7a:	0d53      	lsrs	r3, r2, #21
 801ed7c:	0952      	lsrs	r2, r2, #5
 801ed7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ed86:	431a      	orrs	r2, r3
 801ed88:	b293      	uxth	r3, r2
 801ed8a:	b2b4      	uxth	r4, r6
 801ed8c:	1202      	asrs	r2, r0, #8
 801ed8e:	43f6      	mvns	r6, r6
 801ed90:	b2f6      	uxtb	r6, r6
 801ed92:	121d      	asrs	r5, r3, #8
 801ed94:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ed98:	fb12 f206 	smulbb	r2, r2, r6
 801ed9c:	10c7      	asrs	r7, r0, #3
 801ed9e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eda2:	00c0      	lsls	r0, r0, #3
 801eda4:	fb05 2504 	mla	r5, r5, r4, r2
 801eda8:	b2c0      	uxtb	r0, r0
 801edaa:	10da      	asrs	r2, r3, #3
 801edac:	00db      	lsls	r3, r3, #3
 801edae:	b2db      	uxtb	r3, r3
 801edb0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801edb4:	fb10 f006 	smulbb	r0, r0, r6
 801edb8:	b2ad      	uxth	r5, r5
 801edba:	fb03 0004 	mla	r0, r3, r4, r0
 801edbe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801edc2:	fb17 f706 	smulbb	r7, r7, r6
 801edc6:	b280      	uxth	r0, r0
 801edc8:	1c6b      	adds	r3, r5, #1
 801edca:	fb02 7204 	mla	r2, r2, r4, r7
 801edce:	b292      	uxth	r2, r2
 801edd0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801edd4:	1c43      	adds	r3, r0, #1
 801edd6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801edda:	1c50      	adds	r0, r2, #1
 801eddc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ede0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ede4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ede8:	0952      	lsrs	r2, r2, #5
 801edea:	432b      	orrs	r3, r5
 801edec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edf0:	4313      	orrs	r3, r2
 801edf2:	800b      	strh	r3, [r1, #0]
 801edf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801edf8:	4680      	mov	r8, r0
 801edfa:	e75c      	b.n	801ecb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801edfc:	4684      	mov	ip, r0
 801edfe:	4680      	mov	r8, r0
 801ee00:	e767      	b.n	801ecd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ee02:	4684      	mov	ip, r0
 801ee04:	e765      	b.n	801ecd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ee06:	4605      	mov	r5, r0
 801ee08:	e776      	b.n	801ecf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ee0a:	4603      	mov	r3, r0
 801ee0c:	4605      	mov	r5, r0
 801ee0e:	e782      	b.n	801ed16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ee10:	4603      	mov	r3, r0
 801ee12:	e780      	b.n	801ed16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ee14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee18:	b099      	sub	sp, #100	; 0x64
 801ee1a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801ee1e:	9215      	str	r2, [sp, #84]	; 0x54
 801ee20:	9309      	str	r3, [sp, #36]	; 0x24
 801ee22:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801ee24:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801ee28:	930d      	str	r3, [sp, #52]	; 0x34
 801ee2a:	910c      	str	r1, [sp, #48]	; 0x30
 801ee2c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801ee30:	9016      	str	r0, [sp, #88]	; 0x58
 801ee32:	6850      	ldr	r0, [r2, #4]
 801ee34:	6812      	ldr	r2, [r2, #0]
 801ee36:	fb00 1303 	mla	r3, r0, r3, r1
 801ee3a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ee3e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee40:	681b      	ldr	r3, [r3, #0]
 801ee42:	930b      	str	r3, [sp, #44]	; 0x2c
 801ee44:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee46:	685e      	ldr	r6, [r3, #4]
 801ee48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ee4a:	43db      	mvns	r3, r3
 801ee4c:	b2db      	uxtb	r3, r3
 801ee4e:	3604      	adds	r6, #4
 801ee50:	930a      	str	r3, [sp, #40]	; 0x28
 801ee52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee54:	2b00      	cmp	r3, #0
 801ee56:	dc03      	bgt.n	801ee60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ee58:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801ee5a:	2b00      	cmp	r3, #0
 801ee5c:	f340 8225 	ble.w	801f2aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ee60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee6a:	1e48      	subs	r0, r1, #1
 801ee6c:	1e57      	subs	r7, r2, #1
 801ee6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee70:	2b00      	cmp	r3, #0
 801ee72:	f340 80e3 	ble.w	801f03c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ee76:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ee7a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ee7e:	d406      	bmi.n	801ee8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee80:	4584      	cmp	ip, r0
 801ee82:	da04      	bge.n	801ee8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee84:	2b00      	cmp	r3, #0
 801ee86:	db02      	blt.n	801ee8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ee88:	42bb      	cmp	r3, r7
 801ee8a:	f2c0 80d8 	blt.w	801f03e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ee8e:	f11c 0c01 	adds.w	ip, ip, #1
 801ee92:	f100 80c9 	bmi.w	801f028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ee96:	4561      	cmp	r1, ip
 801ee98:	f2c0 80c6 	blt.w	801f028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ee9c:	3301      	adds	r3, #1
 801ee9e:	f100 80c3 	bmi.w	801f028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801eea2:	429a      	cmp	r2, r3
 801eea4:	f2c0 80c0 	blt.w	801f028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801eea8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801eeac:	4647      	mov	r7, r8
 801eeae:	f1bb 0f00 	cmp.w	fp, #0
 801eeb2:	f340 80e3 	ble.w	801f07c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801eeb6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801eeb8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eeba:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eebe:	689b      	ldr	r3, [r3, #8]
 801eec0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801eec4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801eec8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801eecc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eed0:	f100 8121 	bmi.w	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eed4:	f103 39ff 	add.w	r9, r3, #4294967295
 801eed8:	454a      	cmp	r2, r9
 801eeda:	f280 811c 	bge.w	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eede:	f1bc 0f00 	cmp.w	ip, #0
 801eee2:	f2c0 8118 	blt.w	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eee6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801eeea:	45cc      	cmp	ip, r9
 801eeec:	f280 8113 	bge.w	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eef0:	b21b      	sxth	r3, r3
 801eef2:	fb0c 2203 	mla	r2, ip, r3, r2
 801eef6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eef8:	eb04 0902 	add.w	r9, r4, r2
 801eefc:	5ca2      	ldrb	r2, [r4, r2]
 801eefe:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ef02:	2800      	cmp	r0, #0
 801ef04:	f000 80fe 	beq.w	801f104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ef08:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ef0c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ef10:	9211      	str	r2, [sp, #68]	; 0x44
 801ef12:	b151      	cbz	r1, 801ef2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ef14:	eb09 0203 	add.w	r2, r9, r3
 801ef18:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ef1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef20:	930f      	str	r3, [sp, #60]	; 0x3c
 801ef22:	7853      	ldrb	r3, [r2, #1]
 801ef24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef28:	9312      	str	r3, [sp, #72]	; 0x48
 801ef2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ef2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ef2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef32:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef3a:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ef40:	041b      	lsls	r3, r3, #16
 801ef42:	fb10 f201 	smulbb	r2, r0, r1
 801ef46:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ef4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef4e:	10d2      	asrs	r2, r2, #3
 801ef50:	4323      	orrs	r3, r4
 801ef52:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ef56:	4353      	muls	r3, r2
 801ef58:	fb09 330c 	mla	r3, r9, ip, r3
 801ef5c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ef60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef64:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ef68:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ef6c:	f1c1 0c10 	rsb	ip, r1, #16
 801ef70:	ebac 0c00 	sub.w	ip, ip, r0
 801ef74:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef78:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ef7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ef7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef80:	0418      	lsls	r0, r3, #16
 801ef82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ef86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef8a:	4318      	orrs	r0, r3
 801ef8c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ef90:	fb02 c200 	mla	r2, r2, r0, ip
 801ef94:	0d53      	lsrs	r3, r2, #21
 801ef96:	0952      	lsrs	r2, r2, #5
 801ef98:	8838      	ldrh	r0, [r7, #0]
 801ef9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801efa2:	431a      	orrs	r2, r3
 801efa4:	b292      	uxth	r2, r2
 801efa6:	1201      	asrs	r1, r0, #8
 801efa8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801efac:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801efb0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801efb4:	fb11 f104 	smulbb	r1, r1, r4
 801efb8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801efbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801efc0:	00c0      	lsls	r0, r0, #3
 801efc2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801efc6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801efca:	10d1      	asrs	r1, r2, #3
 801efcc:	b2c0      	uxtb	r0, r0
 801efce:	00d2      	lsls	r2, r2, #3
 801efd0:	b2d2      	uxtb	r2, r2
 801efd2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801efd6:	fb1e fe04 	smulbb	lr, lr, r4
 801efda:	fb10 f004 	smulbb	r0, r0, r4
 801efde:	fa1f fc8c 	uxth.w	ip, ip
 801efe2:	fb01 e103 	mla	r1, r1, r3, lr
 801efe6:	fb02 0303 	mla	r3, r2, r3, r0
 801efea:	b29a      	uxth	r2, r3
 801efec:	f10c 0301 	add.w	r3, ip, #1
 801eff0:	b289      	uxth	r1, r1
 801eff2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801eff6:	1c53      	adds	r3, r2, #1
 801eff8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801effc:	1c4a      	adds	r2, r1, #1
 801effe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f002:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f006:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f00a:	0949      	lsrs	r1, r1, #5
 801f00c:	ea43 030c 	orr.w	r3, r3, ip
 801f010:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f014:	430b      	orrs	r3, r1
 801f016:	803b      	strh	r3, [r7, #0]
 801f018:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f01a:	449a      	add	sl, r3
 801f01c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f01e:	3702      	adds	r7, #2
 801f020:	441d      	add	r5, r3
 801f022:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f026:	e742      	b.n	801eeae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f028:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f02a:	449a      	add	sl, r3
 801f02c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f02e:	441d      	add	r5, r3
 801f030:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f032:	3b01      	subs	r3, #1
 801f034:	9309      	str	r3, [sp, #36]	; 0x24
 801f036:	f108 0802 	add.w	r8, r8, #2
 801f03a:	e718      	b.n	801ee6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f03c:	d023      	beq.n	801f086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f03e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f040:	9825      	ldr	r0, [sp, #148]	; 0x94
 801f042:	3b01      	subs	r3, #1
 801f044:	fb00 a003 	mla	r0, r0, r3, sl
 801f048:	1400      	asrs	r0, r0, #16
 801f04a:	f53f af2d 	bmi.w	801eea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f04e:	3901      	subs	r1, #1
 801f050:	4288      	cmp	r0, r1
 801f052:	f6bf af29 	bge.w	801eea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f056:	9926      	ldr	r1, [sp, #152]	; 0x98
 801f058:	fb01 5303 	mla	r3, r1, r3, r5
 801f05c:	141b      	asrs	r3, r3, #16
 801f05e:	f53f af23 	bmi.w	801eea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f062:	3a01      	subs	r2, #1
 801f064:	4293      	cmp	r3, r2
 801f066:	f6bf af1f 	bge.w	801eea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f06a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801f06e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801f072:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801f076:	f1be 0f00 	cmp.w	lr, #0
 801f07a:	dc6c      	bgt.n	801f156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f07c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f07e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f082:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f086:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f088:	2b00      	cmp	r3, #0
 801f08a:	f340 810e 	ble.w	801f2aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f08e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f092:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f096:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f09a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f09c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f0a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f0a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f0a8:	eef0 6a62 	vmov.f32	s13, s5
 801f0ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f0b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f0b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f0b8:	ee16 aa90 	vmov	sl, s13
 801f0bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f0c0:	eef0 6a43 	vmov.f32	s13, s6
 801f0c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f0c8:	ee12 2a90 	vmov	r2, s5
 801f0cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f0d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0d4:	ee13 2a10 	vmov	r2, s6
 801f0d8:	9325      	str	r3, [sp, #148]	; 0x94
 801f0da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f0dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0e0:	9326      	str	r3, [sp, #152]	; 0x98
 801f0e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0e4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801f0e6:	3b01      	subs	r3, #1
 801f0e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f0ec:	930c      	str	r3, [sp, #48]	; 0x30
 801f0ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f0f0:	bf08      	it	eq
 801f0f2:	4613      	moveq	r3, r2
 801f0f4:	ee16 5a90 	vmov	r5, s13
 801f0f8:	9309      	str	r3, [sp, #36]	; 0x24
 801f0fa:	eeb0 3a67 	vmov.f32	s6, s15
 801f0fe:	eef0 2a47 	vmov.f32	s5, s14
 801f102:	e6a6      	b.n	801ee52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f104:	2900      	cmp	r1, #0
 801f106:	f43f af10 	beq.w	801ef2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f10a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f10e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f112:	930f      	str	r3, [sp, #60]	; 0x3c
 801f114:	e709      	b.n	801ef2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f116:	f112 0901 	adds.w	r9, r2, #1
 801f11a:	f53f af7d 	bmi.w	801f018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f11e:	454b      	cmp	r3, r9
 801f120:	f6ff af7a 	blt.w	801f018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f124:	f11c 0901 	adds.w	r9, ip, #1
 801f128:	f53f af76 	bmi.w	801f018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f12c:	45ce      	cmp	lr, r9
 801f12e:	f6ff af73 	blt.w	801f018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f132:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f134:	9202      	str	r2, [sp, #8]
 801f136:	b21b      	sxth	r3, r3
 801f138:	fa0f f28e 	sxth.w	r2, lr
 801f13c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f140:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f144:	9201      	str	r2, [sp, #4]
 801f146:	9300      	str	r3, [sp, #0]
 801f148:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f14a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801f14c:	4633      	mov	r3, r6
 801f14e:	4639      	mov	r1, r7
 801f150:	f7ff fd8e 	bl	801ec70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f154:	e760      	b.n	801f018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f156:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f158:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f15a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f15e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f162:	1429      	asrs	r1, r5, #16
 801f164:	fb03 2101 	mla	r1, r3, r1, r2
 801f168:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f16a:	440a      	add	r2, r1
 801f16c:	5c61      	ldrb	r1, [r4, r1]
 801f16e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f172:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f176:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f17a:	f1bc 0f00 	cmp.w	ip, #0
 801f17e:	f000 808c 	beq.w	801f29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f182:	7857      	ldrb	r7, [r2, #1]
 801f184:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f188:	9413      	str	r4, [sp, #76]	; 0x4c
 801f18a:	b140      	cbz	r0, 801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f18c:	18d7      	adds	r7, r2, r3
 801f18e:	5cd3      	ldrb	r3, [r2, r3]
 801f190:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f194:	9310      	str	r3, [sp, #64]	; 0x40
 801f196:	787b      	ldrb	r3, [r7, #1]
 801f198:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f19c:	9314      	str	r3, [sp, #80]	; 0x50
 801f19e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f1a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f1a2:	fb1c f200 	smulbb	r2, ip, r0
 801f1a6:	041f      	lsls	r7, r3, #16
 801f1a8:	10d2      	asrs	r2, r2, #3
 801f1aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f1ae:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801f1b2:	431f      	orrs	r7, r3
 801f1b4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f1b8:	9317      	str	r3, [sp, #92]	; 0x5c
 801f1ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f1bc:	041b      	lsls	r3, r3, #16
 801f1be:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801f1c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f1c6:	ea43 030b 	orr.w	r3, r3, fp
 801f1ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f1cc:	4353      	muls	r3, r2
 801f1ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f1d2:	fb04 3707 	mla	r7, r4, r7, r3
 801f1d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f1da:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f1de:	ea43 0b01 	orr.w	fp, r3, r1
 801f1e2:	f1c0 0110 	rsb	r1, r0, #16
 801f1e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f1e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f1ea:	eba1 0c0c 	sub.w	ip, r1, ip
 801f1ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f1f2:	fb0c 770b 	mla	r7, ip, fp, r7
 801f1f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f1fa:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801f1fe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f202:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f206:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f20a:	fb02 770c 	mla	r7, r2, ip, r7
 801f20e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f210:	0d79      	lsrs	r1, r7, #21
 801f212:	097f      	lsrs	r7, r7, #5
 801f214:	8812      	ldrh	r2, [r2, #0]
 801f216:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f21a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f21e:	430f      	orrs	r7, r1
 801f220:	b2bb      	uxth	r3, r7
 801f222:	1211      	asrs	r1, r2, #8
 801f224:	1218      	asrs	r0, r3, #8
 801f226:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f22a:	fb11 f104 	smulbb	r1, r1, r4
 801f22e:	10d7      	asrs	r7, r2, #3
 801f230:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f234:	00d2      	lsls	r2, r2, #3
 801f236:	fb00 1009 	mla	r0, r0, r9, r1
 801f23a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f23e:	10d9      	asrs	r1, r3, #3
 801f240:	b2d2      	uxtb	r2, r2
 801f242:	00db      	lsls	r3, r3, #3
 801f244:	fb17 f704 	smulbb	r7, r7, r4
 801f248:	fb12 f204 	smulbb	r2, r2, r4
 801f24c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f250:	b2db      	uxtb	r3, r3
 801f252:	b280      	uxth	r0, r0
 801f254:	fb01 7109 	mla	r1, r1, r9, r7
 801f258:	fb03 2309 	mla	r3, r3, r9, r2
 801f25c:	b29b      	uxth	r3, r3
 801f25e:	b289      	uxth	r1, r1
 801f260:	1c42      	adds	r2, r0, #1
 801f262:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f266:	1c4f      	adds	r7, r1, #1
 801f268:	1c5a      	adds	r2, r3, #1
 801f26a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f26e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f272:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f276:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f27a:	0949      	lsrs	r1, r1, #5
 801f27c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f27e:	4310      	orrs	r0, r2
 801f280:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f284:	4308      	orrs	r0, r1
 801f286:	f823 0b02 	strh.w	r0, [r3], #2
 801f28a:	930e      	str	r3, [sp, #56]	; 0x38
 801f28c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f28e:	449a      	add	sl, r3
 801f290:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f292:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f296:	441d      	add	r5, r3
 801f298:	e6ed      	b.n	801f076 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f29a:	2800      	cmp	r0, #0
 801f29c:	f43f af7f 	beq.w	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f2a0:	5cd3      	ldrb	r3, [r2, r3]
 801f2a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f2a6:	9310      	str	r3, [sp, #64]	; 0x40
 801f2a8:	e779      	b.n	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f2aa:	b019      	add	sp, #100	; 0x64
 801f2ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f2b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f2b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f2b4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801f2b8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f2bc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801f2c0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801f2c4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f2c8:	8808      	ldrh	r0, [r1, #0]
 801f2ca:	fb08 470e 	mla	r7, r8, lr, r4
 801f2ce:	f1b8 0f00 	cmp.w	r8, #0
 801f2d2:	eb02 0907 	add.w	r9, r2, r7
 801f2d6:	db67      	blt.n	801f3a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f2d8:	45c2      	cmp	sl, r8
 801f2da:	dd65      	ble.n	801f3a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f2dc:	2c00      	cmp	r4, #0
 801f2de:	db61      	blt.n	801f3a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f2e0:	45a6      	cmp	lr, r4
 801f2e2:	dd5f      	ble.n	801f3a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f2e4:	5dd2      	ldrb	r2, [r2, r7]
 801f2e6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f2ea:	1c62      	adds	r2, r4, #1
 801f2ec:	d45f      	bmi.n	801f3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f2ee:	4596      	cmp	lr, r2
 801f2f0:	dd5d      	ble.n	801f3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f2f2:	2d00      	cmp	r5, #0
 801f2f4:	d05b      	beq.n	801f3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f2f6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f2fa:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f2fe:	f118 0801 	adds.w	r8, r8, #1
 801f302:	d458      	bmi.n	801f3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f304:	45c2      	cmp	sl, r8
 801f306:	dd56      	ble.n	801f3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f308:	2e00      	cmp	r6, #0
 801f30a:	d054      	beq.n	801f3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f30c:	2c00      	cmp	r4, #0
 801f30e:	db50      	blt.n	801f3b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f310:	45a6      	cmp	lr, r4
 801f312:	dd4e      	ble.n	801f3b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f314:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f318:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f31c:	3401      	adds	r4, #1
 801f31e:	d407      	bmi.n	801f330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f320:	45a6      	cmp	lr, r4
 801f322:	dd05      	ble.n	801f330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f324:	b125      	cbz	r5, 801f330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f326:	44ce      	add	lr, r9
 801f328:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f32c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f330:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f334:	fb15 f406 	smulbb	r4, r5, r6
 801f338:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f33c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f340:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f344:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f348:	ea43 0c0c 	orr.w	ip, r3, ip
 801f34c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f350:	f1c6 0310 	rsb	r3, r6, #16
 801f354:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f358:	1b5b      	subs	r3, r3, r5
 801f35a:	ea4e 0707 	orr.w	r7, lr, r7
 801f35e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f362:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f366:	437d      	muls	r5, r7
 801f368:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f36c:	0403      	lsls	r3, r0, #16
 801f36e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f372:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f376:	4318      	orrs	r0, r3
 801f378:	0413      	lsls	r3, r2, #16
 801f37a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f37e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f382:	4313      	orrs	r3, r2
 801f384:	fb04 c000 	mla	r0, r4, r0, ip
 801f388:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f38c:	fb06 0003 	mla	r0, r6, r3, r0
 801f390:	0d43      	lsrs	r3, r0, #21
 801f392:	0940      	lsrs	r0, r0, #5
 801f394:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f398:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f39c:	4318      	orrs	r0, r3
 801f39e:	8008      	strh	r0, [r1, #0]
 801f3a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f3a4:	4684      	mov	ip, r0
 801f3a6:	e7a0      	b.n	801f2ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f3a8:	4607      	mov	r7, r0
 801f3aa:	4684      	mov	ip, r0
 801f3ac:	e7a7      	b.n	801f2fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f3ae:	4607      	mov	r7, r0
 801f3b0:	e7a5      	b.n	801f2fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f3b2:	4602      	mov	r2, r0
 801f3b4:	e7b2      	b.n	801f31c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f3b6:	4602      	mov	r2, r0
 801f3b8:	e7ba      	b.n	801f330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f3ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3be:	b093      	sub	sp, #76	; 0x4c
 801f3c0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f3c4:	920f      	str	r2, [sp, #60]	; 0x3c
 801f3c6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f3c8:	9108      	str	r1, [sp, #32]
 801f3ca:	9306      	str	r3, [sp, #24]
 801f3cc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f3d0:	9010      	str	r0, [sp, #64]	; 0x40
 801f3d2:	6850      	ldr	r0, [r2, #4]
 801f3d4:	6812      	ldr	r2, [r2, #0]
 801f3d6:	fb00 1303 	mla	r3, r0, r3, r1
 801f3da:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f3de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3e0:	681b      	ldr	r3, [r3, #0]
 801f3e2:	9307      	str	r3, [sp, #28]
 801f3e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3e6:	685f      	ldr	r7, [r3, #4]
 801f3e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f3ec:	3704      	adds	r7, #4
 801f3ee:	9b08      	ldr	r3, [sp, #32]
 801f3f0:	2b00      	cmp	r3, #0
 801f3f2:	dc03      	bgt.n	801f3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f3f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f3f6:	2b00      	cmp	r3, #0
 801f3f8:	f340 81b2 	ble.w	801f760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f3fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f402:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f406:	1e48      	subs	r0, r1, #1
 801f408:	f102 3cff 	add.w	ip, r2, #4294967295
 801f40c:	9b06      	ldr	r3, [sp, #24]
 801f40e:	2b00      	cmp	r3, #0
 801f410:	f340 80a9 	ble.w	801f566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f414:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f418:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f41c:	d406      	bmi.n	801f42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f41e:	4586      	cmp	lr, r0
 801f420:	da04      	bge.n	801f42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f422:	2b00      	cmp	r3, #0
 801f424:	db02      	blt.n	801f42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f426:	4563      	cmp	r3, ip
 801f428:	f2c0 809e 	blt.w	801f568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f42c:	f11e 0e01 	adds.w	lr, lr, #1
 801f430:	f100 808f 	bmi.w	801f552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f434:	4571      	cmp	r1, lr
 801f436:	f2c0 808c 	blt.w	801f552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f43a:	3301      	adds	r3, #1
 801f43c:	f100 8089 	bmi.w	801f552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f440:	429a      	cmp	r2, r3
 801f442:	f2c0 8086 	blt.w	801f552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f446:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f44a:	46c8      	mov	r8, r9
 801f44c:	f1bb 0f00 	cmp.w	fp, #0
 801f450:	f340 80a6 	ble.w	801f5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f454:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f456:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f458:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f45c:	689b      	ldr	r3, [r3, #8]
 801f45e:	1422      	asrs	r2, r4, #16
 801f460:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f464:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f468:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f46c:	f100 80e3 	bmi.w	801f636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f470:	f103 3aff 	add.w	sl, r3, #4294967295
 801f474:	4552      	cmp	r2, sl
 801f476:	f280 80de 	bge.w	801f636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f47a:	f1bc 0f00 	cmp.w	ip, #0
 801f47e:	f2c0 80da 	blt.w	801f636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f482:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f486:	45d4      	cmp	ip, sl
 801f488:	f280 80d5 	bge.w	801f636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f48c:	b21b      	sxth	r3, r3
 801f48e:	fb0c 2203 	mla	r2, ip, r3, r2
 801f492:	9d07      	ldr	r5, [sp, #28]
 801f494:	eb05 0a02 	add.w	sl, r5, r2
 801f498:	5caa      	ldrb	r2, [r5, r2]
 801f49a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f49e:	2800      	cmp	r0, #0
 801f4a0:	f000 80c0 	beq.w	801f624 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f4a4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f4a8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f4ac:	920b      	str	r2, [sp, #44]	; 0x2c
 801f4ae:	b151      	cbz	r1, 801f4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f4b0:	eb0a 0203 	add.w	r2, sl, r3
 801f4b4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f4b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f4bc:	9309      	str	r3, [sp, #36]	; 0x24
 801f4be:	7853      	ldrb	r3, [r2, #1]
 801f4c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f4c4:	930c      	str	r3, [sp, #48]	; 0x30
 801f4c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f4ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f4ce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f4d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f4d6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f4da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f4dc:	041b      	lsls	r3, r3, #16
 801f4de:	fb10 f201 	smulbb	r2, r0, r1
 801f4e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f4e6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f4ea:	10d2      	asrs	r2, r2, #3
 801f4ec:	432b      	orrs	r3, r5
 801f4ee:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f4f2:	4353      	muls	r3, r2
 801f4f4:	fb0a 330c 	mla	r3, sl, ip, r3
 801f4f8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f4fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f500:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f504:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f508:	f1c1 0c10 	rsb	ip, r1, #16
 801f50c:	ebac 0c00 	sub.w	ip, ip, r0
 801f510:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f514:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f518:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f51a:	0418      	lsls	r0, r3, #16
 801f51c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f520:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f524:	4318      	orrs	r0, r3
 801f526:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f52a:	fb02 c200 	mla	r2, r2, r0, ip
 801f52e:	0d53      	lsrs	r3, r2, #21
 801f530:	0952      	lsrs	r2, r2, #5
 801f532:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f536:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f53a:	431a      	orrs	r2, r3
 801f53c:	f8a8 2000 	strh.w	r2, [r8]
 801f540:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f542:	441c      	add	r4, r3
 801f544:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f546:	f108 0802 	add.w	r8, r8, #2
 801f54a:	441e      	add	r6, r3
 801f54c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f550:	e77c      	b.n	801f44c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f552:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f554:	441c      	add	r4, r3
 801f556:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f558:	441e      	add	r6, r3
 801f55a:	9b06      	ldr	r3, [sp, #24]
 801f55c:	3b01      	subs	r3, #1
 801f55e:	9306      	str	r3, [sp, #24]
 801f560:	f109 0902 	add.w	r9, r9, #2
 801f564:	e752      	b.n	801f40c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f566:	d020      	beq.n	801f5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f568:	9b06      	ldr	r3, [sp, #24]
 801f56a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f56c:	3b01      	subs	r3, #1
 801f56e:	fb00 4003 	mla	r0, r0, r3, r4
 801f572:	1400      	asrs	r0, r0, #16
 801f574:	f53f af67 	bmi.w	801f446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f578:	3901      	subs	r1, #1
 801f57a:	4288      	cmp	r0, r1
 801f57c:	f6bf af63 	bge.w	801f446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f580:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f582:	fb01 6303 	mla	r3, r1, r3, r6
 801f586:	141b      	asrs	r3, r3, #16
 801f588:	f53f af5d 	bmi.w	801f446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f58c:	3a01      	subs	r2, #1
 801f58e:	4293      	cmp	r3, r2
 801f590:	f6bf af59 	bge.w	801f446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f594:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f598:	46ca      	mov	sl, r9
 801f59a:	f1b8 0f00 	cmp.w	r8, #0
 801f59e:	dc67      	bgt.n	801f670 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f5a0:	9b06      	ldr	r3, [sp, #24]
 801f5a2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f5a6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f5aa:	9b08      	ldr	r3, [sp, #32]
 801f5ac:	2b00      	cmp	r3, #0
 801f5ae:	f340 80d7 	ble.w	801f760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f5b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f5b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f5ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f5be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f5c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f5c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f5c8:	eeb0 6a62 	vmov.f32	s12, s5
 801f5cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f5d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f5d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5d8:	ee16 4a10 	vmov	r4, s12
 801f5dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5e0:	eeb0 6a43 	vmov.f32	s12, s6
 801f5e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5e8:	ee12 2a90 	vmov	r2, s5
 801f5ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5f4:	ee13 2a10 	vmov	r2, s6
 801f5f8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f5fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f5fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f600:	9320      	str	r3, [sp, #128]	; 0x80
 801f602:	9b08      	ldr	r3, [sp, #32]
 801f604:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f606:	3b01      	subs	r3, #1
 801f608:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f60c:	9308      	str	r3, [sp, #32]
 801f60e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f610:	bf08      	it	eq
 801f612:	4613      	moveq	r3, r2
 801f614:	ee16 6a10 	vmov	r6, s12
 801f618:	9306      	str	r3, [sp, #24]
 801f61a:	eeb0 3a67 	vmov.f32	s6, s15
 801f61e:	eef0 2a47 	vmov.f32	s5, s14
 801f622:	e6e4      	b.n	801f3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f624:	2900      	cmp	r1, #0
 801f626:	f43f af4e 	beq.w	801f4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f62a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f62e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f632:	9309      	str	r3, [sp, #36]	; 0x24
 801f634:	e747      	b.n	801f4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f636:	f112 0a01 	adds.w	sl, r2, #1
 801f63a:	d481      	bmi.n	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f63c:	4553      	cmp	r3, sl
 801f63e:	f6ff af7f 	blt.w	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f642:	f11c 0a01 	adds.w	sl, ip, #1
 801f646:	f53f af7b 	bmi.w	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f64a:	45d6      	cmp	lr, sl
 801f64c:	f6ff af78 	blt.w	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f650:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f654:	b21b      	sxth	r3, r3
 801f656:	fa0f f28e 	sxth.w	r2, lr
 801f65a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f65e:	9201      	str	r2, [sp, #4]
 801f660:	9300      	str	r3, [sp, #0]
 801f662:	9a07      	ldr	r2, [sp, #28]
 801f664:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f666:	463b      	mov	r3, r7
 801f668:	4641      	mov	r1, r8
 801f66a:	f7ff fe21 	bl	801f2b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f66e:	e767      	b.n	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f670:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f672:	9d07      	ldr	r5, [sp, #28]
 801f674:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f678:	1422      	asrs	r2, r4, #16
 801f67a:	1431      	asrs	r1, r6, #16
 801f67c:	fb03 2101 	mla	r1, r3, r1, r2
 801f680:	9a07      	ldr	r2, [sp, #28]
 801f682:	440a      	add	r2, r1
 801f684:	5c69      	ldrb	r1, [r5, r1]
 801f686:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f68a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f68e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f692:	f1be 0f00 	cmp.w	lr, #0
 801f696:	d05c      	beq.n	801f752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f698:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f69c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f6a0:	950d      	str	r5, [sp, #52]	; 0x34
 801f6a2:	b150      	cbz	r0, 801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f6a4:	eb02 0c03 	add.w	ip, r2, r3
 801f6a8:	5cd3      	ldrb	r3, [r2, r3]
 801f6aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f6ae:	930a      	str	r3, [sp, #40]	; 0x28
 801f6b0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f6b4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f6b8:	930e      	str	r3, [sp, #56]	; 0x38
 801f6ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f6be:	fb1e f200 	smulbb	r2, lr, r0
 801f6c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f6c6:	10d2      	asrs	r2, r2, #3
 801f6c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f6cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f6d0:	ea4c 0c03 	orr.w	ip, ip, r3
 801f6d4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f6d8:	9311      	str	r3, [sp, #68]	; 0x44
 801f6da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6dc:	041b      	lsls	r3, r3, #16
 801f6de:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f6e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f6e6:	ea43 030b 	orr.w	r3, r3, fp
 801f6ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f6ec:	4353      	muls	r3, r2
 801f6ee:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f6f2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f6f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f6fa:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f6fe:	ea43 0b01 	orr.w	fp, r3, r1
 801f702:	f1c0 0110 	rsb	r1, r0, #16
 801f706:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f708:	eba1 0e0e 	sub.w	lr, r1, lr
 801f70c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f710:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f714:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f718:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f71c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f720:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f724:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f728:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f72c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f730:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f734:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f738:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f73c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f740:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f742:	f82a cb02 	strh.w	ip, [sl], #2
 801f746:	441c      	add	r4, r3
 801f748:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f74a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f74e:	441e      	add	r6, r3
 801f750:	e723      	b.n	801f59a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f752:	2800      	cmp	r0, #0
 801f754:	d0b1      	beq.n	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f756:	5cd3      	ldrb	r3, [r2, r3]
 801f758:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f75c:	930a      	str	r3, [sp, #40]	; 0x28
 801f75e:	e7ac      	b.n	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f760:	b013      	add	sp, #76	; 0x4c
 801f762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f766:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f76a:	880d      	ldrh	r5, [r1, #0]
 801f76c:	b087      	sub	sp, #28
 801f76e:	10ef      	asrs	r7, r5, #3
 801f770:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f774:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f778:	00ed      	lsls	r5, r5, #3
 801f77a:	9701      	str	r7, [sp, #4]
 801f77c:	b2ed      	uxtb	r5, r5
 801f77e:	9502      	str	r5, [sp, #8]
 801f780:	9d01      	ldr	r5, [sp, #4]
 801f782:	9103      	str	r1, [sp, #12]
 801f784:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f788:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f78c:	9902      	ldr	r1, [sp, #8]
 801f78e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f792:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f796:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f79a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f79e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f7a2:	022d      	lsls	r5, r5, #8
 801f7a4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f7a8:	fb06 0709 	mla	r7, r6, r9, r0
 801f7ac:	430d      	orrs	r5, r1
 801f7ae:	2e00      	cmp	r6, #0
 801f7b0:	eb02 0c07 	add.w	ip, r2, r7
 801f7b4:	9505      	str	r5, [sp, #20]
 801f7b6:	f2c0 80b6 	blt.w	801f926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f7ba:	45b3      	cmp	fp, r6
 801f7bc:	f340 80b3 	ble.w	801f926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f7c0:	2800      	cmp	r0, #0
 801f7c2:	f2c0 80ae 	blt.w	801f922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f7c6:	4581      	cmp	r9, r0
 801f7c8:	f340 80ab 	ble.w	801f922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f7cc:	5dd7      	ldrb	r7, [r2, r7]
 801f7ce:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f7d2:	441f      	add	r7, r3
 801f7d4:	1c42      	adds	r2, r0, #1
 801f7d6:	f100 80a9 	bmi.w	801f92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f7da:	4591      	cmp	r9, r2
 801f7dc:	f340 80a6 	ble.w	801f92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f7e0:	2c00      	cmp	r4, #0
 801f7e2:	f000 80a3 	beq.w	801f92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f7e6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f7ea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f7ee:	441d      	add	r5, r3
 801f7f0:	3601      	adds	r6, #1
 801f7f2:	f100 809f 	bmi.w	801f934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f7f6:	45b3      	cmp	fp, r6
 801f7f8:	f340 809c 	ble.w	801f934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f7fc:	f1be 0f00 	cmp.w	lr, #0
 801f800:	f000 8098 	beq.w	801f934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f804:	2800      	cmp	r0, #0
 801f806:	f2c0 8093 	blt.w	801f930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f80a:	4581      	cmp	r9, r0
 801f80c:	f340 8090 	ble.w	801f930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f810:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f814:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f818:	441e      	add	r6, r3
 801f81a:	3001      	adds	r0, #1
 801f81c:	f100 808d 	bmi.w	801f93a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f820:	4581      	cmp	r9, r0
 801f822:	f340 808a 	ble.w	801f93a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f826:	2c00      	cmp	r4, #0
 801f828:	f000 8087 	beq.w	801f93a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f82c:	44e1      	add	r9, ip
 801f82e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f832:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f836:	4413      	add	r3, r2
 801f838:	b2a4      	uxth	r4, r4
 801f83a:	fa1f fe8e 	uxth.w	lr, lr
 801f83e:	fb04 fb0e 	mul.w	fp, r4, lr
 801f842:	0124      	lsls	r4, r4, #4
 801f844:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f848:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f84c:	eba4 040b 	sub.w	r4, r4, fp
 801f850:	fa1f f08e 	uxth.w	r0, lr
 801f854:	b2a2      	uxth	r2, r4
 801f856:	78ac      	ldrb	r4, [r5, #2]
 801f858:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f85c:	9901      	ldr	r1, [sp, #4]
 801f85e:	eba9 0900 	sub.w	r9, r9, r0
 801f862:	fa1f f989 	uxth.w	r9, r9
 801f866:	4354      	muls	r4, r2
 801f868:	fb09 440c 	mla	r4, r9, ip, r4
 801f86c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f870:	fb00 440c 	mla	r4, r0, ip, r4
 801f874:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f878:	fa1f fe88 	uxth.w	lr, r8
 801f87c:	ea6f 0808 	mvn.w	r8, r8
 801f880:	fa5f f888 	uxtb.w	r8, r8
 801f884:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f888:	fb1a fa08 	smulbb	sl, sl, r8
 801f88c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f890:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f894:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f898:	787c      	ldrb	r4, [r7, #1]
 801f89a:	782d      	ldrb	r5, [r5, #0]
 801f89c:	783f      	ldrb	r7, [r7, #0]
 801f89e:	fb02 fa0a 	mul.w	sl, r2, sl
 801f8a2:	fb09 aa04 	mla	sl, r9, r4, sl
 801f8a6:	7874      	ldrb	r4, [r6, #1]
 801f8a8:	436a      	muls	r2, r5
 801f8aa:	7835      	ldrb	r5, [r6, #0]
 801f8ac:	fb00 aa04 	mla	sl, r0, r4, sl
 801f8b0:	fb09 2207 	mla	r2, r9, r7, r2
 801f8b4:	785c      	ldrb	r4, [r3, #1]
 801f8b6:	781b      	ldrb	r3, [r3, #0]
 801f8b8:	fb00 2005 	mla	r0, r0, r5, r2
 801f8bc:	fb0b a404 	mla	r4, fp, r4, sl
 801f8c0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f8c4:	9b02      	ldr	r3, [sp, #8]
 801f8c6:	fb11 fa08 	smulbb	sl, r1, r8
 801f8ca:	fa1f fc8c 	uxth.w	ip, ip
 801f8ce:	fb13 f808 	smulbb	r8, r3, r8
 801f8d2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f8d6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f8da:	fb04 a40e 	mla	r4, r4, lr, sl
 801f8de:	f10c 0301 	add.w	r3, ip, #1
 801f8e2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f8e6:	fa1f fe8e 	uxth.w	lr, lr
 801f8ea:	b2a4      	uxth	r4, r4
 801f8ec:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f8f0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f8f4:	f104 0a01 	add.w	sl, r4, #1
 801f8f8:	f10e 0c01 	add.w	ip, lr, #1
 801f8fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f900:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f904:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f908:	0964      	lsrs	r4, r4, #5
 801f90a:	ea4c 0c03 	orr.w	ip, ip, r3
 801f90e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f912:	9b03      	ldr	r3, [sp, #12]
 801f914:	ea4c 0c04 	orr.w	ip, ip, r4
 801f918:	f8a3 c000 	strh.w	ip, [r3]
 801f91c:	b007      	add	sp, #28
 801f91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f922:	af05      	add	r7, sp, #20
 801f924:	e756      	b.n	801f7d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f926:	ad05      	add	r5, sp, #20
 801f928:	462f      	mov	r7, r5
 801f92a:	e761      	b.n	801f7f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f92c:	ad05      	add	r5, sp, #20
 801f92e:	e75f      	b.n	801f7f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f930:	ae05      	add	r6, sp, #20
 801f932:	e772      	b.n	801f81a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f934:	ab05      	add	r3, sp, #20
 801f936:	461e      	mov	r6, r3
 801f938:	e77e      	b.n	801f838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f93a:	ab05      	add	r3, sp, #20
 801f93c:	e77c      	b.n	801f838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f93e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f942:	b095      	sub	sp, #84	; 0x54
 801f944:	9212      	str	r2, [sp, #72]	; 0x48
 801f946:	9309      	str	r3, [sp, #36]	; 0x24
 801f948:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f94a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f94e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f950:	910e      	str	r1, [sp, #56]	; 0x38
 801f952:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f956:	9013      	str	r0, [sp, #76]	; 0x4c
 801f958:	6850      	ldr	r0, [r2, #4]
 801f95a:	6812      	ldr	r2, [r2, #0]
 801f95c:	fb00 1303 	mla	r3, r0, r3, r1
 801f960:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f964:	930a      	str	r3, [sp, #40]	; 0x28
 801f966:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f968:	681b      	ldr	r3, [r3, #0]
 801f96a:	930d      	str	r3, [sp, #52]	; 0x34
 801f96c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f96e:	685c      	ldr	r4, [r3, #4]
 801f970:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f972:	43db      	mvns	r3, r3
 801f974:	b2db      	uxtb	r3, r3
 801f976:	3404      	adds	r4, #4
 801f978:	930b      	str	r3, [sp, #44]	; 0x2c
 801f97a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f97c:	2b00      	cmp	r3, #0
 801f97e:	dc03      	bgt.n	801f988 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f980:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f982:	2b00      	cmp	r3, #0
 801f984:	f340 8255 	ble.w	801fe32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f988:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f98a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f98e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f992:	1e48      	subs	r0, r1, #1
 801f994:	1e55      	subs	r5, r2, #1
 801f996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f998:	2b00      	cmp	r3, #0
 801f99a:	f340 80f9 	ble.w	801fb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f99e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f9a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9a2:	1436      	asrs	r6, r6, #16
 801f9a4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f9a8:	d406      	bmi.n	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f9aa:	4286      	cmp	r6, r0
 801f9ac:	da04      	bge.n	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f9ae:	2b00      	cmp	r3, #0
 801f9b0:	db02      	blt.n	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f9b2:	42ab      	cmp	r3, r5
 801f9b4:	f2c0 80ed 	blt.w	801fb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f9b8:	3601      	adds	r6, #1
 801f9ba:	f100 80da 	bmi.w	801fb72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f9be:	42b1      	cmp	r1, r6
 801f9c0:	f2c0 80d7 	blt.w	801fb72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f9c4:	3301      	adds	r3, #1
 801f9c6:	f100 80d4 	bmi.w	801fb72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f9ca:	429a      	cmp	r2, r3
 801f9cc:	f2c0 80d1 	blt.w	801fb72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f9d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d2:	9311      	str	r3, [sp, #68]	; 0x44
 801f9d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9d6:	930c      	str	r3, [sp, #48]	; 0x30
 801f9d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f9da:	2b00      	cmp	r3, #0
 801f9dc:	f340 80fa 	ble.w	801fbd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f9e0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f9e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9e4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f9e6:	68c6      	ldr	r6, [r0, #12]
 801f9e8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f9ea:	141d      	asrs	r5, r3, #16
 801f9ec:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f9f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f9f4:	1400      	asrs	r0, r0, #16
 801f9f6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f9fa:	6892      	ldr	r2, [r2, #8]
 801f9fc:	f100 813e 	bmi.w	801fc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fa00:	1e57      	subs	r7, r2, #1
 801fa02:	42b8      	cmp	r0, r7
 801fa04:	f280 813a 	bge.w	801fc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fa08:	2d00      	cmp	r5, #0
 801fa0a:	f2c0 8137 	blt.w	801fc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fa0e:	1e77      	subs	r7, r6, #1
 801fa10:	42bd      	cmp	r5, r7
 801fa12:	f280 8133 	bge.w	801fc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fa16:	b212      	sxth	r2, r2
 801fa18:	fb05 0002 	mla	r0, r5, r2, r0
 801fa1c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fa1e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fa22:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fa26:	182e      	adds	r6, r5, r0
 801fa28:	eb04 050a 	add.w	r5, r4, sl
 801fa2c:	2b00      	cmp	r3, #0
 801fa2e:	f000 8117 	beq.w	801fc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fa32:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fa36:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fa3a:	44a4      	add	ip, r4
 801fa3c:	2900      	cmp	r1, #0
 801fa3e:	f000 8117 	beq.w	801fc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fa42:	18b0      	adds	r0, r6, r2
 801fa44:	5cb2      	ldrb	r2, [r6, r2]
 801fa46:	7840      	ldrb	r0, [r0, #1]
 801fa48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa50:	4422      	add	r2, r4
 801fa52:	4420      	add	r0, r4
 801fa54:	b29b      	uxth	r3, r3
 801fa56:	b289      	uxth	r1, r1
 801fa58:	fb03 f901 	mul.w	r9, r3, r1
 801fa5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fa60:	011b      	lsls	r3, r3, #4
 801fa62:	b289      	uxth	r1, r1
 801fa64:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fa68:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fa6c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fa6e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fa72:	f8b6 e000 	ldrh.w	lr, [r6]
 801fa76:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801fa7a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801fa7e:	eba3 0309 	sub.w	r3, r3, r9
 801fa82:	b29b      	uxth	r3, r3
 801fa84:	eba8 0801 	sub.w	r8, r8, r1
 801fa88:	fa1f f888 	uxth.w	r8, r8
 801fa8c:	435f      	muls	r7, r3
 801fa8e:	fb08 770b 	mla	r7, r8, fp, r7
 801fa92:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fa96:	9310      	str	r3, [sp, #64]	; 0x40
 801fa98:	fb01 770b 	mla	r7, r1, fp, r7
 801fa9c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801faa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faa2:	fb09 770b 	mla	r7, r9, fp, r7
 801faa6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801faaa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801faae:	fb1b fb03 	smulbb	fp, fp, r3
 801fab2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fab6:	fb07 b706 	mla	r7, r7, r6, fp
 801faba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fabc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fac0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fac4:	f89c c000 	ldrb.w	ip, [ip]
 801fac8:	435d      	muls	r5, r3
 801faca:	fb08 550b 	mla	r5, r8, fp, r5
 801face:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fad2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fad4:	fb01 550b 	mla	r5, r1, fp, r5
 801fad8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fadc:	fb09 550b 	mla	r5, r9, fp, r5
 801fae0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fae4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fae8:	fb1b fb03 	smulbb	fp, fp, r3
 801faec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801faee:	fb03 f30c 	mul.w	r3, r3, ip
 801faf2:	f892 c000 	ldrb.w	ip, [r2]
 801faf6:	fb08 330a 	mla	r3, r8, sl, r3
 801fafa:	fb01 330c 	mla	r3, r1, ip, r3
 801fafe:	f890 c000 	ldrb.w	ip, [r0]
 801fb02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fb06:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fb0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb0c:	fa5f fe8e 	uxtb.w	lr, lr
 801fb10:	b2bf      	uxth	r7, r7
 801fb12:	fb1e fe03 	smulbb	lr, lr, r3
 801fb16:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fb1a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fb1e:	fb05 b506 	mla	r5, r5, r6, fp
 801fb22:	1c7b      	adds	r3, r7, #1
 801fb24:	fb0c e606 	mla	r6, ip, r6, lr
 801fb28:	b2ad      	uxth	r5, r5
 801fb2a:	b2b6      	uxth	r6, r6
 801fb2c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fb30:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801fb34:	f105 0b01 	add.w	fp, r5, #1
 801fb38:	1c77      	adds	r7, r6, #1
 801fb3a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fb3e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fb42:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb46:	096d      	lsrs	r5, r5, #5
 801fb48:	431f      	orrs	r7, r3
 801fb4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fb4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb50:	433d      	orrs	r5, r7
 801fb52:	801d      	strh	r5, [r3, #0]
 801fb54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb56:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fb58:	3302      	adds	r3, #2
 801fb5a:	930c      	str	r3, [sp, #48]	; 0x30
 801fb5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb5e:	4413      	add	r3, r2
 801fb60:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb62:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fb64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb66:	4413      	add	r3, r2
 801fb68:	9320      	str	r3, [sp, #128]	; 0x80
 801fb6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb6c:	3b01      	subs	r3, #1
 801fb6e:	9311      	str	r3, [sp, #68]	; 0x44
 801fb70:	e732      	b.n	801f9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fb72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb74:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801fb76:	4433      	add	r3, r6
 801fb78:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb7a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801fb7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb7e:	4433      	add	r3, r6
 801fb80:	9320      	str	r3, [sp, #128]	; 0x80
 801fb82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb84:	3b01      	subs	r3, #1
 801fb86:	9309      	str	r3, [sp, #36]	; 0x24
 801fb88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb8a:	3302      	adds	r3, #2
 801fb8c:	930a      	str	r3, [sp, #40]	; 0x28
 801fb8e:	e702      	b.n	801f996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fb90:	d027      	beq.n	801fbe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fb92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb94:	9821      	ldr	r0, [sp, #132]	; 0x84
 801fb96:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fb98:	3b01      	subs	r3, #1
 801fb9a:	fb00 5003 	mla	r0, r0, r3, r5
 801fb9e:	1400      	asrs	r0, r0, #16
 801fba0:	f53f af16 	bmi.w	801f9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fba4:	3901      	subs	r1, #1
 801fba6:	4288      	cmp	r0, r1
 801fba8:	f6bf af12 	bge.w	801f9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbac:	9922      	ldr	r1, [sp, #136]	; 0x88
 801fbae:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fbb0:	fb01 0303 	mla	r3, r1, r3, r0
 801fbb4:	141b      	asrs	r3, r3, #16
 801fbb6:	f53f af0b 	bmi.w	801f9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbba:	3a01      	subs	r2, #1
 801fbbc:	4293      	cmp	r3, r2
 801fbbe:	f6bf af07 	bge.w	801f9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbc4:	9311      	str	r3, [sp, #68]	; 0x44
 801fbc6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801fbca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbcc:	930c      	str	r3, [sp, #48]	; 0x30
 801fbce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fbd0:	2b00      	cmp	r3, #0
 801fbd2:	dc70      	bgt.n	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fbd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fbd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fbdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fbe0:	930a      	str	r3, [sp, #40]	; 0x28
 801fbe2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fbe4:	2b00      	cmp	r3, #0
 801fbe6:	f340 8124 	ble.w	801fe32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fbea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fbf2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbf6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fbf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc04:	eef0 6a62 	vmov.f32	s13, s5
 801fc08:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc10:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc14:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801fc18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc1c:	eef0 6a43 	vmov.f32	s13, s6
 801fc20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc24:	ee12 2a90 	vmov	r2, s5
 801fc28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc2c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc30:	ee13 2a10 	vmov	r2, s6
 801fc34:	9321      	str	r3, [sp, #132]	; 0x84
 801fc36:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fc38:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc3c:	9322      	str	r3, [sp, #136]	; 0x88
 801fc3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fc40:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fc42:	3b01      	subs	r3, #1
 801fc44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc48:	930e      	str	r3, [sp, #56]	; 0x38
 801fc4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fc4c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801fc50:	bf08      	it	eq
 801fc52:	4613      	moveq	r3, r2
 801fc54:	9309      	str	r3, [sp, #36]	; 0x24
 801fc56:	eeb0 3a67 	vmov.f32	s6, s15
 801fc5a:	eef0 2a47 	vmov.f32	s5, s14
 801fc5e:	e68c      	b.n	801f97a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fc60:	b149      	cbz	r1, 801fc76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801fc62:	5cb2      	ldrb	r2, [r6, r2]
 801fc64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc68:	4422      	add	r2, r4
 801fc6a:	4628      	mov	r0, r5
 801fc6c:	46ac      	mov	ip, r5
 801fc6e:	e6f1      	b.n	801fa54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fc70:	4628      	mov	r0, r5
 801fc72:	462a      	mov	r2, r5
 801fc74:	e6ee      	b.n	801fa54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fc76:	4628      	mov	r0, r5
 801fc78:	462a      	mov	r2, r5
 801fc7a:	e7f7      	b.n	801fc6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801fc7c:	1c47      	adds	r7, r0, #1
 801fc7e:	f53f af69 	bmi.w	801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fc82:	42ba      	cmp	r2, r7
 801fc84:	f6ff af66 	blt.w	801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fc88:	1c6f      	adds	r7, r5, #1
 801fc8a:	f53f af63 	bmi.w	801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fc8e:	42be      	cmp	r6, r7
 801fc90:	f6ff af60 	blt.w	801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fc94:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801fc96:	9002      	str	r0, [sp, #8]
 801fc98:	b236      	sxth	r6, r6
 801fc9a:	b212      	sxth	r2, r2
 801fc9c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801fca0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fca4:	9200      	str	r2, [sp, #0]
 801fca6:	9601      	str	r6, [sp, #4]
 801fca8:	4623      	mov	r3, r4
 801fcaa:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801fcae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fcb0:	f7ff fd59 	bl	801f766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801fcb4:	e74e      	b.n	801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fcb6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fcb8:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fcba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fcbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fcbe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fcc2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fcc4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fcc8:	142d      	asrs	r5, r5, #16
 801fcca:	1400      	asrs	r0, r0, #16
 801fccc:	fb02 5000 	mla	r0, r2, r0, r5
 801fcd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fcd2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fcd6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fcda:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fcde:	182e      	adds	r6, r5, r0
 801fce0:	eb04 0509 	add.w	r5, r4, r9
 801fce4:	2b00      	cmp	r3, #0
 801fce6:	f000 8096 	beq.w	801fe16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fcea:	7877      	ldrb	r7, [r6, #1]
 801fcec:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fcf0:	4427      	add	r7, r4
 801fcf2:	2900      	cmp	r1, #0
 801fcf4:	f000 8097 	beq.w	801fe26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fcf8:	18b0      	adds	r0, r6, r2
 801fcfa:	5cb2      	ldrb	r2, [r6, r2]
 801fcfc:	7840      	ldrb	r0, [r0, #1]
 801fcfe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd06:	4422      	add	r2, r4
 801fd08:	4420      	add	r0, r4
 801fd0a:	b29b      	uxth	r3, r3
 801fd0c:	b289      	uxth	r1, r1
 801fd0e:	fb03 f801 	mul.w	r8, r3, r1
 801fd12:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fd14:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fd18:	f8b6 c000 	ldrh.w	ip, [r6]
 801fd1c:	78be      	ldrb	r6, [r7, #2]
 801fd1e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fd22:	011b      	lsls	r3, r3, #4
 801fd24:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fd28:	b289      	uxth	r1, r1
 801fd2a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fd2e:	eba3 0308 	sub.w	r3, r3, r8
 801fd32:	b29b      	uxth	r3, r3
 801fd34:	ebae 0e01 	sub.w	lr, lr, r1
 801fd38:	fa1f fe8e 	uxth.w	lr, lr
 801fd3c:	435e      	muls	r6, r3
 801fd3e:	fb0e 660b 	mla	r6, lr, fp, r6
 801fd42:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fd46:	9310      	str	r3, [sp, #64]	; 0x40
 801fd48:	fb01 660b 	mla	r6, r1, fp, r6
 801fd4c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fd50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd52:	fb08 660b 	mla	r6, r8, fp, r6
 801fd56:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fd5a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fd5e:	fb1b fb03 	smulbb	fp, fp, r3
 801fd62:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fd66:	fb06 b60a 	mla	r6, r6, sl, fp
 801fd6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd6c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fd70:	787d      	ldrb	r5, [r7, #1]
 801fd72:	783f      	ldrb	r7, [r7, #0]
 801fd74:	435d      	muls	r5, r3
 801fd76:	fb0e 550b 	mla	r5, lr, fp, r5
 801fd7a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fd7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd80:	fb01 550b 	mla	r5, r1, fp, r5
 801fd84:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fd88:	fb08 550b 	mla	r5, r8, fp, r5
 801fd8c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fd90:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fd94:	fb1b fb03 	smulbb	fp, fp, r3
 801fd98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd9a:	437b      	muls	r3, r7
 801fd9c:	7817      	ldrb	r7, [r2, #0]
 801fd9e:	fb0e 3309 	mla	r3, lr, r9, r3
 801fda2:	fb01 3307 	mla	r3, r1, r7, r3
 801fda6:	7807      	ldrb	r7, [r0, #0]
 801fda8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fdac:	fb08 3707 	mla	r7, r8, r7, r3
 801fdb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdb2:	fa5f fc8c 	uxtb.w	ip, ip
 801fdb6:	fb1c fc03 	smulbb	ip, ip, r3
 801fdba:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fdbe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fdc2:	fb05 b50a 	mla	r5, r5, sl, fp
 801fdc6:	fb07 c70a 	mla	r7, r7, sl, ip
 801fdca:	b2b6      	uxth	r6, r6
 801fdcc:	b2ad      	uxth	r5, r5
 801fdce:	b2bf      	uxth	r7, r7
 801fdd0:	1c73      	adds	r3, r6, #1
 801fdd2:	1c7a      	adds	r2, r7, #1
 801fdd4:	f105 0b01 	add.w	fp, r5, #1
 801fdd8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fddc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fde0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fde4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fde8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fdec:	096d      	lsrs	r5, r5, #5
 801fdee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fdf0:	4316      	orrs	r6, r2
 801fdf2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fdf6:	432e      	orrs	r6, r5
 801fdf8:	f823 6b02 	strh.w	r6, [r3], #2
 801fdfc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fdfe:	930c      	str	r3, [sp, #48]	; 0x30
 801fe00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fe02:	4413      	add	r3, r2
 801fe04:	931f      	str	r3, [sp, #124]	; 0x7c
 801fe06:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fe08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fe0a:	4413      	add	r3, r2
 801fe0c:	9320      	str	r3, [sp, #128]	; 0x80
 801fe0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fe10:	3b01      	subs	r3, #1
 801fe12:	9311      	str	r3, [sp, #68]	; 0x44
 801fe14:	e6db      	b.n	801fbce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fe16:	b149      	cbz	r1, 801fe2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fe18:	5cb2      	ldrb	r2, [r6, r2]
 801fe1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe1e:	4422      	add	r2, r4
 801fe20:	4628      	mov	r0, r5
 801fe22:	462f      	mov	r7, r5
 801fe24:	e771      	b.n	801fd0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fe26:	4628      	mov	r0, r5
 801fe28:	462a      	mov	r2, r5
 801fe2a:	e76e      	b.n	801fd0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fe2c:	4628      	mov	r0, r5
 801fe2e:	462a      	mov	r2, r5
 801fe30:	e7f7      	b.n	801fe22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fe32:	b015      	add	sp, #84	; 0x54
 801fe34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fe38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe3c:	880f      	ldrh	r7, [r1, #0]
 801fe3e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fe42:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fe46:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fe4a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fe4e:	023c      	lsls	r4, r7, #8
 801fe50:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fe54:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fe58:	017c      	lsls	r4, r7, #5
 801fe5a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fe5e:	00ff      	lsls	r7, r7, #3
 801fe60:	ea4b 0404 	orr.w	r4, fp, r4
 801fe64:	b2ff      	uxtb	r7, r7
 801fe66:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fe6a:	4327      	orrs	r7, r4
 801fe6c:	2d00      	cmp	r5, #0
 801fe6e:	eb02 080a 	add.w	r8, r2, sl
 801fe72:	9701      	str	r7, [sp, #4]
 801fe74:	db7e      	blt.n	801ff74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fe76:	45a9      	cmp	r9, r5
 801fe78:	dd7c      	ble.n	801ff74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fe7a:	f1bc 0f00 	cmp.w	ip, #0
 801fe7e:	db77      	blt.n	801ff70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fe80:	45e6      	cmp	lr, ip
 801fe82:	dd75      	ble.n	801ff70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fe84:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fe88:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fe8c:	441f      	add	r7, r3
 801fe8e:	f11c 0201 	adds.w	r2, ip, #1
 801fe92:	d472      	bmi.n	801ff7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fe94:	4596      	cmp	lr, r2
 801fe96:	dd70      	ble.n	801ff7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fe98:	2800      	cmp	r0, #0
 801fe9a:	d06e      	beq.n	801ff7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fe9c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fea0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fea4:	441c      	add	r4, r3
 801fea6:	3501      	adds	r5, #1
 801fea8:	d46b      	bmi.n	801ff82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801feaa:	45a9      	cmp	r9, r5
 801feac:	dd69      	ble.n	801ff82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801feae:	2e00      	cmp	r6, #0
 801feb0:	d067      	beq.n	801ff82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801feb2:	f1bc 0f00 	cmp.w	ip, #0
 801feb6:	db62      	blt.n	801ff7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801feb8:	45e6      	cmp	lr, ip
 801feba:	dd60      	ble.n	801ff7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801febc:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fec0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fec4:	441d      	add	r5, r3
 801fec6:	f11c 0201 	adds.w	r2, ip, #1
 801feca:	d45d      	bmi.n	801ff88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fecc:	4596      	cmp	lr, r2
 801fece:	dd5b      	ble.n	801ff88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fed0:	2800      	cmp	r0, #0
 801fed2:	d059      	beq.n	801ff88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fed4:	44c6      	add	lr, r8
 801fed6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801feda:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fede:	4413      	add	r3, r2
 801fee0:	b280      	uxth	r0, r0
 801fee2:	b2b2      	uxth	r2, r6
 801fee4:	fb00 f602 	mul.w	r6, r0, r2
 801fee8:	0100      	lsls	r0, r0, #4
 801feea:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801feee:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801fef2:	1b80      	subs	r0, r0, r6
 801fef4:	fa1f fc82 	uxth.w	ip, r2
 801fef8:	b282      	uxth	r2, r0
 801fefa:	78a0      	ldrb	r0, [r4, #2]
 801fefc:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ff00:	f897 9000 	ldrb.w	r9, [r7]
 801ff04:	787f      	ldrb	r7, [r7, #1]
 801ff06:	eba8 080c 	sub.w	r8, r8, ip
 801ff0a:	fa1f f888 	uxth.w	r8, r8
 801ff0e:	4350      	muls	r0, r2
 801ff10:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ff14:	78a8      	ldrb	r0, [r5, #2]
 801ff16:	fb0c e000 	mla	r0, ip, r0, lr
 801ff1a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ff1e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ff22:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801ff26:	f894 e000 	ldrb.w	lr, [r4]
 801ff2a:	fb02 fe0e 	mul.w	lr, r2, lr
 801ff2e:	fb08 e909 	mla	r9, r8, r9, lr
 801ff32:	f895 e000 	ldrb.w	lr, [r5]
 801ff36:	fb0c 990e 	mla	r9, ip, lr, r9
 801ff3a:	f893 e000 	ldrb.w	lr, [r3]
 801ff3e:	785b      	ldrb	r3, [r3, #1]
 801ff40:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ff44:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ff48:	ea4e 0e00 	orr.w	lr, lr, r0
 801ff4c:	7860      	ldrb	r0, [r4, #1]
 801ff4e:	4350      	muls	r0, r2
 801ff50:	786a      	ldrb	r2, [r5, #1]
 801ff52:	fb08 0007 	mla	r0, r8, r7, r0
 801ff56:	fb0c 0202 	mla	r2, ip, r2, r0
 801ff5a:	fb06 2303 	mla	r3, r6, r3, r2
 801ff5e:	095b      	lsrs	r3, r3, #5
 801ff60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff64:	ea4e 0303 	orr.w	r3, lr, r3
 801ff68:	800b      	strh	r3, [r1, #0]
 801ff6a:	b003      	add	sp, #12
 801ff6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff70:	af01      	add	r7, sp, #4
 801ff72:	e78c      	b.n	801fe8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801ff74:	ac01      	add	r4, sp, #4
 801ff76:	4627      	mov	r7, r4
 801ff78:	e795      	b.n	801fea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ff7a:	ac01      	add	r4, sp, #4
 801ff7c:	e793      	b.n	801fea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ff7e:	ad01      	add	r5, sp, #4
 801ff80:	e7a1      	b.n	801fec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801ff82:	ab01      	add	r3, sp, #4
 801ff84:	461d      	mov	r5, r3
 801ff86:	e7ab      	b.n	801fee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ff88:	ab01      	add	r3, sp, #4
 801ff8a:	e7a9      	b.n	801fee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ff8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff90:	b08f      	sub	sp, #60	; 0x3c
 801ff92:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801ff96:	920c      	str	r2, [sp, #48]	; 0x30
 801ff98:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801ff9a:	910a      	str	r1, [sp, #40]	; 0x28
 801ff9c:	9306      	str	r3, [sp, #24]
 801ff9e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801ffa2:	900d      	str	r0, [sp, #52]	; 0x34
 801ffa4:	6850      	ldr	r0, [r2, #4]
 801ffa6:	6812      	ldr	r2, [r2, #0]
 801ffa8:	fb00 1303 	mla	r3, r0, r3, r1
 801ffac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ffb0:	9307      	str	r3, [sp, #28]
 801ffb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffb4:	681b      	ldr	r3, [r3, #0]
 801ffb6:	9308      	str	r3, [sp, #32]
 801ffb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffba:	685c      	ldr	r4, [r3, #4]
 801ffbc:	3404      	adds	r4, #4
 801ffbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ffc0:	2b00      	cmp	r3, #0
 801ffc2:	dc03      	bgt.n	801ffcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ffc4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ffc6:	2b00      	cmp	r3, #0
 801ffc8:	f340 81d6 	ble.w	8020378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ffcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ffd2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ffd6:	1e48      	subs	r0, r1, #1
 801ffd8:	1e56      	subs	r6, r2, #1
 801ffda:	9b06      	ldr	r3, [sp, #24]
 801ffdc:	2b00      	cmp	r3, #0
 801ffde:	f340 80b7 	ble.w	8020150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ffe2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ffe6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ffea:	d406      	bmi.n	801fffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ffec:	4287      	cmp	r7, r0
 801ffee:	da04      	bge.n	801fffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fff0:	2b00      	cmp	r3, #0
 801fff2:	db02      	blt.n	801fffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fff4:	42b3      	cmp	r3, r6
 801fff6:	f2c0 80ac 	blt.w	8020152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fffa:	3701      	adds	r7, #1
 801fffc:	f100 809d 	bmi.w	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020000:	42b9      	cmp	r1, r7
 8020002:	f2c0 809a 	blt.w	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020006:	3301      	adds	r3, #1
 8020008:	f100 8097 	bmi.w	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802000c:	429a      	cmp	r2, r3
 802000e:	f2c0 8094 	blt.w	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020012:	9b06      	ldr	r3, [sp, #24]
 8020014:	930b      	str	r3, [sp, #44]	; 0x2c
 8020016:	9b07      	ldr	r3, [sp, #28]
 8020018:	9309      	str	r3, [sp, #36]	; 0x24
 802001a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802001c:	2b00      	cmp	r3, #0
 802001e:	f340 80b5 	ble.w	802018c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020022:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020024:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020026:	68c7      	ldr	r7, [r0, #12]
 8020028:	6892      	ldr	r2, [r2, #8]
 802002a:	ea5f 402b 	movs.w	r0, fp, asr #16
 802002e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020032:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020036:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802003a:	f100 80fb 	bmi.w	8020234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802003e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020042:	4560      	cmp	r0, ip
 8020044:	f280 80f6 	bge.w	8020234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020048:	2e00      	cmp	r6, #0
 802004a:	f2c0 80f3 	blt.w	8020234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802004e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020052:	4566      	cmp	r6, ip
 8020054:	f280 80ee 	bge.w	8020234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020058:	b212      	sxth	r2, r2
 802005a:	fb06 0002 	mla	r0, r6, r2, r0
 802005e:	9e08      	ldr	r6, [sp, #32]
 8020060:	1837      	adds	r7, r6, r0
 8020062:	5c30      	ldrb	r0, [r6, r0]
 8020064:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020068:	eb04 0c08 	add.w	ip, r4, r8
 802006c:	2b00      	cmp	r3, #0
 802006e:	f000 80d3 	beq.w	8020218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020072:	787e      	ldrb	r6, [r7, #1]
 8020074:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020078:	4426      	add	r6, r4
 802007a:	2900      	cmp	r1, #0
 802007c:	f000 80d4 	beq.w	8020228 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020080:	18b8      	adds	r0, r7, r2
 8020082:	5cba      	ldrb	r2, [r7, r2]
 8020084:	7840      	ldrb	r0, [r0, #1]
 8020086:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802008a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802008e:	4422      	add	r2, r4
 8020090:	4420      	add	r0, r4
 8020092:	b29b      	uxth	r3, r3
 8020094:	b289      	uxth	r1, r1
 8020096:	fb03 f901 	mul.w	r9, r3, r1
 802009a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802009e:	011b      	lsls	r3, r3, #4
 80200a0:	b289      	uxth	r1, r1
 80200a2:	78b7      	ldrb	r7, [r6, #2]
 80200a4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80200a8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80200ac:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80200b0:	eba3 0309 	sub.w	r3, r3, r9
 80200b4:	b29b      	uxth	r3, r3
 80200b6:	ebae 0e01 	sub.w	lr, lr, r1
 80200ba:	fa1f fe8e 	uxth.w	lr, lr
 80200be:	435f      	muls	r7, r3
 80200c0:	fb0e 770a 	mla	r7, lr, sl, r7
 80200c4:	f892 a002 	ldrb.w	sl, [r2, #2]
 80200c8:	fb01 770a 	mla	r7, r1, sl, r7
 80200cc:	f890 a002 	ldrb.w	sl, [r0, #2]
 80200d0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80200d4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80200d8:	f896 8000 	ldrb.w	r8, [r6]
 80200dc:	7876      	ldrb	r6, [r6, #1]
 80200de:	fb03 f808 	mul.w	r8, r3, r8
 80200e2:	fb0e 8807 	mla	r8, lr, r7, r8
 80200e6:	7817      	ldrb	r7, [r2, #0]
 80200e8:	fb01 8807 	mla	r8, r1, r7, r8
 80200ec:	7807      	ldrb	r7, [r0, #0]
 80200ee:	fb09 8707 	mla	r7, r9, r7, r8
 80200f2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80200f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80200fa:	ea47 070a 	orr.w	r7, r7, sl
 80200fe:	4373      	muls	r3, r6
 8020100:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020104:	fb0e 330c 	mla	r3, lr, ip, r3
 8020108:	fb01 310a 	mla	r1, r1, sl, r3
 802010c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020110:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020112:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020116:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802011a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802011e:	ea47 070a 	orr.w	r7, r7, sl
 8020122:	801f      	strh	r7, [r3, #0]
 8020124:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020126:	3302      	adds	r3, #2
 8020128:	9309      	str	r3, [sp, #36]	; 0x24
 802012a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802012c:	449b      	add	fp, r3
 802012e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020130:	441d      	add	r5, r3
 8020132:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020134:	3b01      	subs	r3, #1
 8020136:	930b      	str	r3, [sp, #44]	; 0x2c
 8020138:	e76f      	b.n	802001a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802013a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802013c:	449b      	add	fp, r3
 802013e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020140:	441d      	add	r5, r3
 8020142:	9b06      	ldr	r3, [sp, #24]
 8020144:	3b01      	subs	r3, #1
 8020146:	9306      	str	r3, [sp, #24]
 8020148:	9b07      	ldr	r3, [sp, #28]
 802014a:	3302      	adds	r3, #2
 802014c:	9307      	str	r3, [sp, #28]
 802014e:	e744      	b.n	801ffda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020150:	d023      	beq.n	802019a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020152:	9b06      	ldr	r3, [sp, #24]
 8020154:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020156:	3b01      	subs	r3, #1
 8020158:	fb00 b003 	mla	r0, r0, r3, fp
 802015c:	1400      	asrs	r0, r0, #16
 802015e:	f53f af58 	bmi.w	8020012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020162:	3901      	subs	r1, #1
 8020164:	4288      	cmp	r0, r1
 8020166:	f6bf af54 	bge.w	8020012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802016a:	991c      	ldr	r1, [sp, #112]	; 0x70
 802016c:	fb01 5303 	mla	r3, r1, r3, r5
 8020170:	141b      	asrs	r3, r3, #16
 8020172:	f53f af4e 	bmi.w	8020012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020176:	3a01      	subs	r2, #1
 8020178:	4293      	cmp	r3, r2
 802017a:	f6bf af4a 	bge.w	8020012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802017e:	9b06      	ldr	r3, [sp, #24]
 8020180:	9309      	str	r3, [sp, #36]	; 0x24
 8020182:	9b07      	ldr	r3, [sp, #28]
 8020184:	930b      	str	r3, [sp, #44]	; 0x2c
 8020186:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020188:	2b00      	cmp	r3, #0
 802018a:	dc70      	bgt.n	802026e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 802018c:	9b06      	ldr	r3, [sp, #24]
 802018e:	9a07      	ldr	r2, [sp, #28]
 8020190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020194:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020198:	9307      	str	r3, [sp, #28]
 802019a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802019c:	2b00      	cmp	r3, #0
 802019e:	f340 80eb 	ble.w	8020378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80201a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80201a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80201aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80201ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80201b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80201b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80201b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80201bc:	eef0 6a62 	vmov.f32	s13, s5
 80201c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80201c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80201c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80201cc:	ee16 ba90 	vmov	fp, s13
 80201d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80201d4:	eef0 6a43 	vmov.f32	s13, s6
 80201d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80201dc:	ee12 2a90 	vmov	r2, s5
 80201e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80201e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80201e8:	ee13 2a10 	vmov	r2, s6
 80201ec:	931b      	str	r3, [sp, #108]	; 0x6c
 80201ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80201f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80201f4:	931c      	str	r3, [sp, #112]	; 0x70
 80201f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80201f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201fa:	3b01      	subs	r3, #1
 80201fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020200:	930a      	str	r3, [sp, #40]	; 0x28
 8020202:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020204:	bf08      	it	eq
 8020206:	4613      	moveq	r3, r2
 8020208:	ee16 5a90 	vmov	r5, s13
 802020c:	9306      	str	r3, [sp, #24]
 802020e:	eeb0 3a67 	vmov.f32	s6, s15
 8020212:	eef0 2a47 	vmov.f32	s5, s14
 8020216:	e6d2      	b.n	801ffbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020218:	b149      	cbz	r1, 802022e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802021a:	5cba      	ldrb	r2, [r7, r2]
 802021c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020220:	4422      	add	r2, r4
 8020222:	4660      	mov	r0, ip
 8020224:	4666      	mov	r6, ip
 8020226:	e734      	b.n	8020092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020228:	4660      	mov	r0, ip
 802022a:	4662      	mov	r2, ip
 802022c:	e731      	b.n	8020092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802022e:	4660      	mov	r0, ip
 8020230:	4662      	mov	r2, ip
 8020232:	e7f7      	b.n	8020224 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020234:	f110 0c01 	adds.w	ip, r0, #1
 8020238:	f53f af74 	bmi.w	8020124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802023c:	4562      	cmp	r2, ip
 802023e:	f6ff af71 	blt.w	8020124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020242:	f116 0c01 	adds.w	ip, r6, #1
 8020246:	f53f af6d 	bmi.w	8020124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802024a:	4567      	cmp	r7, ip
 802024c:	f6ff af6a 	blt.w	8020124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020250:	b23f      	sxth	r7, r7
 8020252:	b212      	sxth	r2, r2
 8020254:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020258:	e9cd 0602 	strd	r0, r6, [sp, #8]
 802025c:	9200      	str	r2, [sp, #0]
 802025e:	9701      	str	r7, [sp, #4]
 8020260:	4623      	mov	r3, r4
 8020262:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020266:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020268:	f7ff fde6 	bl	801fe38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802026c:	e75a      	b.n	8020124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802026e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020270:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020274:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020278:	1428      	asrs	r0, r5, #16
 802027a:	fb02 6000 	mla	r0, r2, r0, r6
 802027e:	9e08      	ldr	r6, [sp, #32]
 8020280:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020284:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020288:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802028c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020290:	1837      	adds	r7, r6, r0
 8020292:	eb04 0c08 	add.w	ip, r4, r8
 8020296:	2b00      	cmp	r3, #0
 8020298:	d060      	beq.n	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 802029a:	787e      	ldrb	r6, [r7, #1]
 802029c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80202a0:	4426      	add	r6, r4
 80202a2:	2900      	cmp	r1, #0
 80202a4:	d062      	beq.n	802036c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80202a6:	18b8      	adds	r0, r7, r2
 80202a8:	5cba      	ldrb	r2, [r7, r2]
 80202aa:	7840      	ldrb	r0, [r0, #1]
 80202ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80202b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80202b4:	4422      	add	r2, r4
 80202b6:	4420      	add	r0, r4
 80202b8:	b29b      	uxth	r3, r3
 80202ba:	b289      	uxth	r1, r1
 80202bc:	fb03 f901 	mul.w	r9, r3, r1
 80202c0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80202c4:	011b      	lsls	r3, r3, #4
 80202c6:	b289      	uxth	r1, r1
 80202c8:	78b7      	ldrb	r7, [r6, #2]
 80202ca:	f89c a002 	ldrb.w	sl, [ip, #2]
 80202ce:	f89c c001 	ldrb.w	ip, [ip, #1]
 80202d2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80202d6:	eba3 0309 	sub.w	r3, r3, r9
 80202da:	b29b      	uxth	r3, r3
 80202dc:	ebae 0e01 	sub.w	lr, lr, r1
 80202e0:	fa1f fe8e 	uxth.w	lr, lr
 80202e4:	435f      	muls	r7, r3
 80202e6:	fb0e 770a 	mla	r7, lr, sl, r7
 80202ea:	f892 a002 	ldrb.w	sl, [r2, #2]
 80202ee:	fb01 770a 	mla	r7, r1, sl, r7
 80202f2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80202f6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80202fa:	f814 7008 	ldrb.w	r7, [r4, r8]
 80202fe:	f896 8000 	ldrb.w	r8, [r6]
 8020302:	7876      	ldrb	r6, [r6, #1]
 8020304:	fb03 f808 	mul.w	r8, r3, r8
 8020308:	fb0e 8807 	mla	r8, lr, r7, r8
 802030c:	7817      	ldrb	r7, [r2, #0]
 802030e:	fb01 8807 	mla	r8, r1, r7, r8
 8020312:	7807      	ldrb	r7, [r0, #0]
 8020314:	fb09 8707 	mla	r7, r9, r7, r8
 8020318:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 802031c:	4373      	muls	r3, r6
 802031e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020322:	7856      	ldrb	r6, [r2, #1]
 8020324:	ea47 070a 	orr.w	r7, r7, sl
 8020328:	fb0e 330c 	mla	r3, lr, ip, r3
 802032c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020330:	fb01 3306 	mla	r3, r1, r6, r3
 8020334:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020338:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802033c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802033e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020342:	ea47 070a 	orr.w	r7, r7, sl
 8020346:	f823 7b02 	strh.w	r7, [r3], #2
 802034a:	930b      	str	r3, [sp, #44]	; 0x2c
 802034c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802034e:	449b      	add	fp, r3
 8020350:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020352:	441d      	add	r5, r3
 8020354:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020356:	3b01      	subs	r3, #1
 8020358:	9309      	str	r3, [sp, #36]	; 0x24
 802035a:	e714      	b.n	8020186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 802035c:	b149      	cbz	r1, 8020372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802035e:	5cba      	ldrb	r2, [r7, r2]
 8020360:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020364:	4422      	add	r2, r4
 8020366:	4660      	mov	r0, ip
 8020368:	4666      	mov	r6, ip
 802036a:	e7a5      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802036c:	4660      	mov	r0, ip
 802036e:	4662      	mov	r2, ip
 8020370:	e7a2      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020372:	4660      	mov	r0, ip
 8020374:	4662      	mov	r2, ip
 8020376:	e7f7      	b.n	8020368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020378:	b00f      	add	sp, #60	; 0x3c
 802037a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802037e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802037e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020382:	b085      	sub	sp, #20
 8020384:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020388:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802038c:	9102      	str	r1, [sp, #8]
 802038e:	2c00      	cmp	r4, #0
 8020390:	fb04 710c 	mla	r1, r4, ip, r7
 8020394:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020398:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 802039c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80203a0:	eb02 0e01 	add.w	lr, r2, r1
 80203a4:	f2c0 8122 	blt.w	80205ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80203a8:	45a0      	cmp	r8, r4
 80203aa:	f340 811f 	ble.w	80205ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80203ae:	2f00      	cmp	r7, #0
 80203b0:	f2c0 811a 	blt.w	80205e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80203b4:	45bc      	cmp	ip, r7
 80203b6:	f340 8117 	ble.w	80205e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80203ba:	5c52      	ldrb	r2, [r2, r1]
 80203bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80203c0:	1c7a      	adds	r2, r7, #1
 80203c2:	f100 8116 	bmi.w	80205f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80203c6:	4594      	cmp	ip, r2
 80203c8:	f340 8113 	ble.w	80205f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80203cc:	2e00      	cmp	r6, #0
 80203ce:	f000 8112 	beq.w	80205f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80203d2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80203d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80203da:	3401      	adds	r4, #1
 80203dc:	f100 810f 	bmi.w	80205fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80203e0:	45a0      	cmp	r8, r4
 80203e2:	f340 810c 	ble.w	80205fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80203e6:	2800      	cmp	r0, #0
 80203e8:	f000 810c 	beq.w	8020604 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80203ec:	2f00      	cmp	r7, #0
 80203ee:	f2c0 8104 	blt.w	80205fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80203f2:	45bc      	cmp	ip, r7
 80203f4:	f340 8101 	ble.w	80205fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80203f8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80203fc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020400:	3701      	adds	r7, #1
 8020402:	f100 8102 	bmi.w	802060a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020406:	45bc      	cmp	ip, r7
 8020408:	f340 80ff 	ble.w	802060a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802040c:	2e00      	cmp	r6, #0
 802040e:	f000 80fe 	beq.w	802060e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020412:	44f4      	add	ip, lr
 8020414:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020418:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802041c:	b2b6      	uxth	r6, r6
 802041e:	b280      	uxth	r0, r0
 8020420:	fb00 fe06 	mul.w	lr, r0, r6
 8020424:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020428:	0136      	lsls	r6, r6, #4
 802042a:	eba6 070e 	sub.w	r7, r6, lr
 802042e:	b280      	uxth	r0, r0
 8020430:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020434:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020438:	b2bf      	uxth	r7, r7
 802043a:	1a1b      	subs	r3, r3, r0
 802043c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020440:	b29b      	uxth	r3, r3
 8020442:	fb0a f607 	mul.w	r6, sl, r7
 8020446:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802044a:	fb0b 6603 	mla	r6, fp, r3, r6
 802044e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020452:	fb00 6609 	mla	r6, r0, r9, r6
 8020456:	fb0e 6608 	mla	r6, lr, r8, r6
 802045a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802045e:	9600      	str	r6, [sp, #0]
 8020460:	2e00      	cmp	r6, #0
 8020462:	f000 80be 	beq.w	80205e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020466:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802046a:	fb0b fc0c 	mul.w	ip, fp, ip
 802046e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020472:	fb0b f505 	mul.w	r5, fp, r5
 8020476:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802047a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802047e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020482:	44dc      	add	ip, fp
 8020484:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020488:	9501      	str	r5, [sp, #4]
 802048a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802048e:	9503      	str	r5, [sp, #12]
 8020490:	9d01      	ldr	r5, [sp, #4]
 8020492:	9e02      	ldr	r6, [sp, #8]
 8020494:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020498:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802049c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80204a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80204a4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80204a8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80204ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80204b0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80204b4:	4465      	add	r5, ip
 80204b6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80204ba:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80204be:	fb09 fc0c 	mul.w	ip, r9, ip
 80204c2:	fb09 f904 	mul.w	r9, r9, r4
 80204c6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80204ca:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80204ce:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80204d2:	fb08 f404 	mul.w	r4, r8, r4
 80204d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80204da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80204de:	fb08 f802 	mul.w	r8, r8, r2
 80204e2:	fb0a fa01 	mul.w	sl, sl, r1
 80204e6:	0a22      	lsrs	r2, r4, #8
 80204e8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80204ec:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80204f0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80204f4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80204f8:	4414      	add	r4, r2
 80204fa:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80204fe:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020502:	0a2d      	lsrs	r5, r5, #8
 8020504:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020508:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802050c:	9a03      	ldr	r2, [sp, #12]
 802050e:	8836      	ldrh	r6, [r6, #0]
 8020510:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020514:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020518:	437d      	muls	r5, r7
 802051a:	4461      	add	r1, ip
 802051c:	0a24      	lsrs	r4, r4, #8
 802051e:	fb02 5503 	mla	r5, r2, r3, r5
 8020522:	0a09      	lsrs	r1, r1, #8
 8020524:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020528:	fb04 540e 	mla	r4, r4, lr, r5
 802052c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020530:	fb01 4100 	mla	r1, r1, r0, r4
 8020534:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020538:	0a09      	lsrs	r1, r1, #8
 802053a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802053e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020542:	fb07 f70a 	mul.w	r7, r7, sl
 8020546:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802054a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802054e:	fb03 7101 	mla	r1, r3, r1, r7
 8020552:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020556:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802055a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802055e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020562:	fb00 e101 	mla	r1, r0, r1, lr
 8020566:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802056a:	9a00      	ldr	r2, [sp, #0]
 802056c:	b287      	uxth	r7, r0
 802056e:	437a      	muls	r2, r7
 8020570:	0a09      	lsrs	r1, r1, #8
 8020572:	1c53      	adds	r3, r2, #1
 8020574:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020578:	4321      	orrs	r1, r4
 802057a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802057e:	1235      	asrs	r5, r6, #8
 8020580:	0c0a      	lsrs	r2, r1, #16
 8020582:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020586:	b2db      	uxtb	r3, r3
 8020588:	fb12 f207 	smulbb	r2, r2, r7
 802058c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020590:	fb05 2503 	mla	r5, r5, r3, r2
 8020594:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020598:	10f2      	asrs	r2, r6, #3
 802059a:	b2c8      	uxtb	r0, r1
 802059c:	00f6      	lsls	r6, r6, #3
 802059e:	fb14 f407 	smulbb	r4, r4, r7
 80205a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80205a6:	b2f6      	uxtb	r6, r6
 80205a8:	fb10 f007 	smulbb	r0, r0, r7
 80205ac:	fb02 4203 	mla	r2, r2, r3, r4
 80205b0:	b2ad      	uxth	r5, r5
 80205b2:	fb06 0303 	mla	r3, r6, r3, r0
 80205b6:	b299      	uxth	r1, r3
 80205b8:	b294      	uxth	r4, r2
 80205ba:	1c6b      	adds	r3, r5, #1
 80205bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80205c0:	1c62      	adds	r2, r4, #1
 80205c2:	1c4b      	adds	r3, r1, #1
 80205c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80205c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80205cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80205d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80205d4:	0952      	lsrs	r2, r2, #5
 80205d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80205da:	432b      	orrs	r3, r5
 80205dc:	4313      	orrs	r3, r2
 80205de:	9a02      	ldr	r2, [sp, #8]
 80205e0:	8013      	strh	r3, [r2, #0]
 80205e2:	b005      	add	sp, #20
 80205e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205e8:	2500      	movs	r5, #0
 80205ea:	e6e9      	b.n	80203c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80205ec:	2100      	movs	r1, #0
 80205ee:	460d      	mov	r5, r1
 80205f0:	e6f3      	b.n	80203da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80205f2:	2100      	movs	r1, #0
 80205f4:	e6f1      	b.n	80203da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80205f6:	4631      	mov	r1, r6
 80205f8:	e6ef      	b.n	80203da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80205fa:	2400      	movs	r4, #0
 80205fc:	e700      	b.n	8020400 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80205fe:	2200      	movs	r2, #0
 8020600:	4614      	mov	r4, r2
 8020602:	e70b      	b.n	802041c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020604:	4602      	mov	r2, r0
 8020606:	4604      	mov	r4, r0
 8020608:	e708      	b.n	802041c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802060a:	2200      	movs	r2, #0
 802060c:	e706      	b.n	802041c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802060e:	4632      	mov	r2, r6
 8020610:	e704      	b.n	802041c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020612 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020612:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020616:	b09f      	sub	sp, #124	; 0x7c
 8020618:	921b      	str	r2, [sp, #108]	; 0x6c
 802061a:	9309      	str	r3, [sp, #36]	; 0x24
 802061c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802061e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020622:	931c      	str	r3, [sp, #112]	; 0x70
 8020624:	9119      	str	r1, [sp, #100]	; 0x64
 8020626:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802062a:	901d      	str	r0, [sp, #116]	; 0x74
 802062c:	6850      	ldr	r0, [r2, #4]
 802062e:	6812      	ldr	r2, [r2, #0]
 8020630:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020632:	fb00 1303 	mla	r3, r0, r3, r1
 8020636:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802063a:	930c      	str	r3, [sp, #48]	; 0x30
 802063c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802063e:	681b      	ldr	r3, [r3, #0]
 8020640:	9312      	str	r3, [sp, #72]	; 0x48
 8020642:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020644:	685e      	ldr	r6, [r3, #4]
 8020646:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802064a:	930d      	str	r3, [sp, #52]	; 0x34
 802064c:	3604      	adds	r6, #4
 802064e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020650:	2b00      	cmp	r3, #0
 8020652:	dc03      	bgt.n	802065c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020654:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020656:	2b00      	cmp	r3, #0
 8020658:	f340 8388 	ble.w	8020d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802065c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802065e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020662:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020666:	1e48      	subs	r0, r1, #1
 8020668:	1e57      	subs	r7, r2, #1
 802066a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802066c:	2b00      	cmp	r3, #0
 802066e:	f340 8195 	ble.w	802099c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020672:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020674:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020678:	ea4f 4325 	mov.w	r3, r5, asr #16
 802067c:	d406      	bmi.n	802068c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802067e:	4584      	cmp	ip, r0
 8020680:	da04      	bge.n	802068c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020682:	2b00      	cmp	r3, #0
 8020684:	db02      	blt.n	802068c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020686:	42bb      	cmp	r3, r7
 8020688:	f2c0 8189 	blt.w	802099e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802068c:	f11c 0c01 	adds.w	ip, ip, #1
 8020690:	f100 8177 	bmi.w	8020982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020694:	4561      	cmp	r1, ip
 8020696:	f2c0 8174 	blt.w	8020982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802069a:	3301      	adds	r3, #1
 802069c:	f100 8171 	bmi.w	8020982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80206a0:	429a      	cmp	r2, r3
 80206a2:	f2c0 816e 	blt.w	8020982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80206a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206a8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80206aa:	931a      	str	r3, [sp, #104]	; 0x68
 80206ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80206ae:	2b00      	cmp	r3, #0
 80206b0:	f340 8193 	ble.w	80209da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80206b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80206b6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80206ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80206bc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80206c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80206c2:	141b      	asrs	r3, r3, #16
 80206c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80206c8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80206cc:	f100 81d6 	bmi.w	8020a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80206d0:	f100 38ff 	add.w	r8, r0, #4294967295
 80206d4:	4543      	cmp	r3, r8
 80206d6:	f280 81d1 	bge.w	8020a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80206da:	f1bc 0f00 	cmp.w	ip, #0
 80206de:	f2c0 81cd 	blt.w	8020a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80206e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80206e6:	45c4      	cmp	ip, r8
 80206e8:	f280 81c8 	bge.w	8020a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80206ec:	b200      	sxth	r0, r0
 80206ee:	fb0c 3300 	mla	r3, ip, r0, r3
 80206f2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206f4:	eb04 0803 	add.w	r8, r4, r3
 80206f8:	5ce3      	ldrb	r3, [r4, r3]
 80206fa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80206fe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020702:	2a00      	cmp	r2, #0
 8020704:	f000 81af 	beq.w	8020a66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020708:	f898 c001 	ldrb.w	ip, [r8, #1]
 802070c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020710:	940e      	str	r4, [sp, #56]	; 0x38
 8020712:	0e24      	lsrs	r4, r4, #24
 8020714:	9415      	str	r4, [sp, #84]	; 0x54
 8020716:	b179      	cbz	r1, 8020738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020718:	eb08 0c00 	add.w	ip, r8, r0
 802071c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020720:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020724:	900a      	str	r0, [sp, #40]	; 0x28
 8020726:	0e00      	lsrs	r0, r0, #24
 8020728:	9013      	str	r0, [sp, #76]	; 0x4c
 802072a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802072e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020732:	900f      	str	r0, [sp, #60]	; 0x3c
 8020734:	0e00      	lsrs	r0, r0, #24
 8020736:	9016      	str	r0, [sp, #88]	; 0x58
 8020738:	b292      	uxth	r2, r2
 802073a:	b289      	uxth	r1, r1
 802073c:	fb02 f901 	mul.w	r9, r2, r1
 8020740:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020744:	0112      	lsls	r2, r2, #4
 8020746:	eba2 0809 	sub.w	r8, r2, r9
 802074a:	b289      	uxth	r1, r1
 802074c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020750:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020752:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020754:	fa1f f888 	uxth.w	r8, r8
 8020758:	1a52      	subs	r2, r2, r1
 802075a:	b292      	uxth	r2, r2
 802075c:	fb08 f000 	mul.w	r0, r8, r0
 8020760:	fb02 000e 	mla	r0, r2, lr, r0
 8020764:	fb01 0004 	mla	r0, r1, r4, r0
 8020768:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802076a:	fb09 0004 	mla	r0, r9, r4, r0
 802076e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020772:	2800      	cmp	r0, #0
 8020774:	f000 80fa 	beq.w	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020778:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802077c:	d01b      	beq.n	80207b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802077e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020782:	fb0e fa0a 	mul.w	sl, lr, sl
 8020786:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802078a:	fb0e fe03 	mul.w	lr, lr, r3
 802078e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020792:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020796:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802079a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802079e:	4453      	add	r3, sl
 80207a0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80207a4:	0a1b      	lsrs	r3, r3, #8
 80207a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80207ae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80207b2:	ea43 030c 	orr.w	r3, r3, ip
 80207b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80207b8:	2cff      	cmp	r4, #255	; 0xff
 80207ba:	d021      	beq.n	8020800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80207bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80207be:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80207c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80207c4:	fb04 fb0b 	mul.w	fp, r4, fp
 80207c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80207ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80207ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80207d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80207d4:	fb04 fa0a 	mul.w	sl, r4, sl
 80207d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80207dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80207e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80207e4:	44de      	add	lr, fp
 80207e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80207ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80207ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80207f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207fa:	ea4e 040a 	orr.w	r4, lr, sl
 80207fe:	940e      	str	r4, [sp, #56]	; 0x38
 8020800:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020802:	2cff      	cmp	r4, #255	; 0xff
 8020804:	d021      	beq.n	802084a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020806:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020808:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802080c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802080e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020812:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020814:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020818:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802081a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802081e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020822:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020826:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802082a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802082e:	44de      	add	lr, fp
 8020830:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020834:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020838:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802083c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020840:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020844:	ea4e 040a 	orr.w	r4, lr, sl
 8020848:	940a      	str	r4, [sp, #40]	; 0x28
 802084a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802084c:	2cff      	cmp	r4, #255	; 0xff
 802084e:	d021      	beq.n	8020894 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020850:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020852:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020856:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020858:	fb04 fb0b 	mul.w	fp, r4, fp
 802085c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802085e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020862:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020864:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020868:	fb04 fa0a 	mul.w	sl, r4, sl
 802086c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020870:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020874:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020878:	44de      	add	lr, fp
 802087a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802087e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020882:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020886:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802088a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802088e:	ea4e 040a 	orr.w	r4, lr, sl
 8020892:	940f      	str	r4, [sp, #60]	; 0x3c
 8020894:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020896:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802089a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802089c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80208a0:	fb08 fc0c 	mul.w	ip, r8, ip
 80208a4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80208a8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80208ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80208ae:	fb01 cc0e 	mla	ip, r1, lr, ip
 80208b2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80208b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80208b8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80208bc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80208c0:	fb08 f80e 	mul.w	r8, r8, lr
 80208c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80208c8:	fb02 8303 	mla	r3, r2, r3, r8
 80208cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80208ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80208d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80208d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80208d6:	fb01 330a 	mla	r3, r1, sl, r3
 80208da:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80208de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80208e0:	fb09 3901 	mla	r9, r9, r1, r3
 80208e4:	4342      	muls	r2, r0
 80208e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80208ee:	883b      	ldrh	r3, [r7, #0]
 80208f0:	1c50      	adds	r0, r2, #1
 80208f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80208fa:	ea4c 0c09 	orr.w	ip, ip, r9
 80208fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020902:	1219      	asrs	r1, r3, #8
 8020904:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020908:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802090c:	b2c0      	uxtb	r0, r0
 802090e:	fb12 f204 	smulbb	r2, r2, r4
 8020912:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020916:	fb01 2100 	mla	r1, r1, r0, r2
 802091a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802091e:	10da      	asrs	r2, r3, #3
 8020920:	fa5f fc8c 	uxtb.w	ip, ip
 8020924:	00db      	lsls	r3, r3, #3
 8020926:	fb1c fc04 	smulbb	ip, ip, r4
 802092a:	b2db      	uxtb	r3, r3
 802092c:	b289      	uxth	r1, r1
 802092e:	fb03 c300 	mla	r3, r3, r0, ip
 8020932:	fa1f fc83 	uxth.w	ip, r3
 8020936:	1c4b      	adds	r3, r1, #1
 8020938:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802093c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020940:	fb1e fe04 	smulbb	lr, lr, r4
 8020944:	f10c 0301 	add.w	r3, ip, #1
 8020948:	fb02 e200 	mla	r2, r2, r0, lr
 802094c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020950:	b292      	uxth	r2, r2
 8020952:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020956:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802095a:	430b      	orrs	r3, r1
 802095c:	1c51      	adds	r1, r2, #1
 802095e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020962:	0952      	lsrs	r2, r2, #5
 8020964:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020968:	4313      	orrs	r3, r2
 802096a:	803b      	strh	r3, [r7, #0]
 802096c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802096e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020970:	441a      	add	r2, r3
 8020972:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020974:	9229      	str	r2, [sp, #164]	; 0xa4
 8020976:	441d      	add	r5, r3
 8020978:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802097a:	3b01      	subs	r3, #1
 802097c:	3702      	adds	r7, #2
 802097e:	931a      	str	r3, [sp, #104]	; 0x68
 8020980:	e694      	b.n	80206ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020982:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020984:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020986:	441c      	add	r4, r3
 8020988:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802098a:	9429      	str	r4, [sp, #164]	; 0xa4
 802098c:	441d      	add	r5, r3
 802098e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020990:	3b01      	subs	r3, #1
 8020992:	9309      	str	r3, [sp, #36]	; 0x24
 8020994:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020996:	3302      	adds	r3, #2
 8020998:	930c      	str	r3, [sp, #48]	; 0x30
 802099a:	e666      	b.n	802066a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802099c:	d024      	beq.n	80209e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802099e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209a0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80209a2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80209a4:	3b01      	subs	r3, #1
 80209a6:	fb00 4003 	mla	r0, r0, r3, r4
 80209aa:	1400      	asrs	r0, r0, #16
 80209ac:	f53f ae7b 	bmi.w	80206a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80209b0:	3901      	subs	r1, #1
 80209b2:	4288      	cmp	r0, r1
 80209b4:	f6bf ae77 	bge.w	80206a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80209b8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80209ba:	fb01 5303 	mla	r3, r1, r3, r5
 80209be:	141b      	asrs	r3, r3, #16
 80209c0:	f53f ae71 	bmi.w	80206a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80209c4:	3a01      	subs	r2, #1
 80209c6:	4293      	cmp	r3, r2
 80209c8:	f6bf ae6d 	bge.w	80206a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80209cc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80209d0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80209d4:	f1bb 0f00 	cmp.w	fp, #0
 80209d8:	dc70      	bgt.n	8020abc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80209da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209dc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80209e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80209e2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80209e6:	930c      	str	r3, [sp, #48]	; 0x30
 80209e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80209ea:	2b00      	cmp	r3, #0
 80209ec:	f340 81be 	ble.w	8020d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80209f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80209f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80209f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80209fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80209fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a0a:	eef0 6a62 	vmov.f32	s13, s5
 8020a0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a1a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020a1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020a22:	eef0 6a43 	vmov.f32	s13, s6
 8020a26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020a2a:	ee12 2a90 	vmov	r2, s5
 8020a2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a36:	ee13 2a10 	vmov	r2, s6
 8020a3a:	932b      	str	r3, [sp, #172]	; 0xac
 8020a3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a42:	932c      	str	r3, [sp, #176]	; 0xb0
 8020a44:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020a46:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020a48:	3b01      	subs	r3, #1
 8020a4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a4e:	9319      	str	r3, [sp, #100]	; 0x64
 8020a50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a52:	bf08      	it	eq
 8020a54:	4613      	moveq	r3, r2
 8020a56:	ee16 5a90 	vmov	r5, s13
 8020a5a:	9309      	str	r3, [sp, #36]	; 0x24
 8020a5c:	eeb0 3a67 	vmov.f32	s6, s15
 8020a60:	eef0 2a47 	vmov.f32	s5, s14
 8020a64:	e5f3      	b.n	802064e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020a66:	2900      	cmp	r1, #0
 8020a68:	f43f ae66 	beq.w	8020738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020a6c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020a70:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020a74:	900a      	str	r0, [sp, #40]	; 0x28
 8020a76:	0e00      	lsrs	r0, r0, #24
 8020a78:	9013      	str	r0, [sp, #76]	; 0x4c
 8020a7a:	e65d      	b.n	8020738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020a7c:	f113 0801 	adds.w	r8, r3, #1
 8020a80:	f53f af74 	bmi.w	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a84:	4540      	cmp	r0, r8
 8020a86:	f6ff af71 	blt.w	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a8a:	f11c 0801 	adds.w	r8, ip, #1
 8020a8e:	f53f af6d 	bmi.w	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a92:	45c6      	cmp	lr, r8
 8020a94:	f6ff af6a 	blt.w	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a98:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020a9a:	9302      	str	r3, [sp, #8]
 8020a9c:	b200      	sxth	r0, r0
 8020a9e:	fa0f f38e 	sxth.w	r3, lr
 8020aa2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020aa6:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020aaa:	9301      	str	r3, [sp, #4]
 8020aac:	9000      	str	r0, [sp, #0]
 8020aae:	4633      	mov	r3, r6
 8020ab0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020ab2:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020ab4:	4639      	mov	r1, r7
 8020ab6:	f7ff fc62 	bl	802037e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020aba:	e757      	b.n	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020abc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020abe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020ac0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020ac4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020ac6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020aca:	1427      	asrs	r7, r4, #16
 8020acc:	142b      	asrs	r3, r5, #16
 8020ace:	fb01 7303 	mla	r3, r1, r3, r7
 8020ad2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ad4:	18e7      	adds	r7, r4, r3
 8020ad6:	5ce3      	ldrb	r3, [r4, r3]
 8020ad8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020adc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ae0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020ae4:	2a00      	cmp	r2, #0
 8020ae6:	f000 8137 	beq.w	8020d58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020aea:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020aee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020af2:	9410      	str	r4, [sp, #64]	; 0x40
 8020af4:	0e24      	lsrs	r4, r4, #24
 8020af6:	9417      	str	r4, [sp, #92]	; 0x5c
 8020af8:	b170      	cbz	r0, 8020b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020afa:	eb07 0e01 	add.w	lr, r7, r1
 8020afe:	5c79      	ldrb	r1, [r7, r1]
 8020b00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b04:	910b      	str	r1, [sp, #44]	; 0x2c
 8020b06:	0e09      	lsrs	r1, r1, #24
 8020b08:	9114      	str	r1, [sp, #80]	; 0x50
 8020b0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020b0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b12:	9111      	str	r1, [sp, #68]	; 0x44
 8020b14:	0e09      	lsrs	r1, r1, #24
 8020b16:	9118      	str	r1, [sp, #96]	; 0x60
 8020b18:	b292      	uxth	r2, r2
 8020b1a:	b280      	uxth	r0, r0
 8020b1c:	fb02 f800 	mul.w	r8, r2, r0
 8020b20:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020b24:	0112      	lsls	r2, r2, #4
 8020b26:	eba2 0e08 	sub.w	lr, r2, r8
 8020b2a:	b280      	uxth	r0, r0
 8020b2c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020b30:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020b32:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020b34:	fa1f fe8e 	uxth.w	lr, lr
 8020b38:	1a12      	subs	r2, r2, r0
 8020b3a:	b292      	uxth	r2, r2
 8020b3c:	fb0e f101 	mul.w	r1, lr, r1
 8020b40:	fb02 110c 	mla	r1, r2, ip, r1
 8020b44:	fb00 1104 	mla	r1, r0, r4, r1
 8020b48:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020b4a:	fb08 1104 	mla	r1, r8, r4, r1
 8020b4e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020b52:	2900      	cmp	r1, #0
 8020b54:	f000 80f5 	beq.w	8020d42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020b58:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020b5c:	d019      	beq.n	8020b92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020b5e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020b62:	fb0c fa0a 	mul.w	sl, ip, sl
 8020b66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b6a:	fb0c fc03 	mul.w	ip, ip, r3
 8020b6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020b72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b76:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020b7a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020b7e:	4453      	add	r3, sl
 8020b80:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020b84:	0a1b      	lsrs	r3, r3, #8
 8020b86:	0a3f      	lsrs	r7, r7, #8
 8020b88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b8c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020b90:	433b      	orrs	r3, r7
 8020b92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020b94:	2cff      	cmp	r4, #255	; 0xff
 8020b96:	d020      	beq.n	8020bda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020b98:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b9e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020ba0:	4367      	muls	r7, r4
 8020ba2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020ba4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ba8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020baa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020bae:	fb04 fa0a 	mul.w	sl, r4, sl
 8020bb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020bb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020bba:	44bc      	add	ip, r7
 8020bbc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020bc0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020bc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020bcc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020bd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020bd4:	ea4c 040a 	orr.w	r4, ip, sl
 8020bd8:	9410      	str	r4, [sp, #64]	; 0x40
 8020bda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020bdc:	2cff      	cmp	r4, #255	; 0xff
 8020bde:	d020      	beq.n	8020c22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020be0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020be2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020be6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020be8:	4367      	muls	r7, r4
 8020bea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020bf0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020bf2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020bf6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020bfa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020bfe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c02:	44bc      	add	ip, r7
 8020c04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020c08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020c0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c1c:	ea4c 040a 	orr.w	r4, ip, sl
 8020c20:	940b      	str	r4, [sp, #44]	; 0x2c
 8020c22:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020c24:	2cff      	cmp	r4, #255	; 0xff
 8020c26:	d020      	beq.n	8020c6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020c28:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020c2e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020c30:	4367      	muls	r7, r4
 8020c32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c38:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020c3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c4a:	44bc      	add	ip, r7
 8020c4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020c50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020c54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c64:	ea4c 040a 	orr.w	r4, ip, sl
 8020c68:	9411      	str	r4, [sp, #68]	; 0x44
 8020c6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c6c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020c70:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c72:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020c76:	fb0e f707 	mul.w	r7, lr, r7
 8020c7a:	fb02 770c 	mla	r7, r2, ip, r7
 8020c7e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020c82:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c84:	fb00 770c 	mla	r7, r0, ip, r7
 8020c88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020c8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c8e:	fb08 770c 	mla	r7, r8, ip, r7
 8020c92:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020c96:	fb0e fe0c 	mul.w	lr, lr, ip
 8020c9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c9e:	fb02 e303 	mla	r3, r2, r3, lr
 8020ca2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020ca4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ca6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020caa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020cac:	fb00 330a 	mla	r3, r0, sl, r3
 8020cb0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020cb4:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020cb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020cba:	f8b9 0000 	ldrh.w	r0, [r9]
 8020cbe:	434b      	muls	r3, r1
 8020cc0:	0a3f      	lsrs	r7, r7, #8
 8020cc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cc6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020cca:	1c59      	adds	r1, r3, #1
 8020ccc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020cd0:	ea47 070c 	orr.w	r7, r7, ip
 8020cd4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020cd8:	1202      	asrs	r2, r0, #8
 8020cda:	0c3b      	lsrs	r3, r7, #16
 8020cdc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020ce0:	b2c9      	uxtb	r1, r1
 8020ce2:	fb13 f304 	smulbb	r3, r3, r4
 8020ce6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020cea:	fb02 3201 	mla	r2, r2, r1, r3
 8020cee:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020cf2:	10c3      	asrs	r3, r0, #3
 8020cf4:	b2ff      	uxtb	r7, r7
 8020cf6:	00c0      	lsls	r0, r0, #3
 8020cf8:	b292      	uxth	r2, r2
 8020cfa:	fb1c fc04 	smulbb	ip, ip, r4
 8020cfe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020d02:	b2c0      	uxtb	r0, r0
 8020d04:	fb17 f704 	smulbb	r7, r7, r4
 8020d08:	fb03 c301 	mla	r3, r3, r1, ip
 8020d0c:	fb00 7001 	mla	r0, r0, r1, r7
 8020d10:	f102 0c01 	add.w	ip, r2, #1
 8020d14:	b280      	uxth	r0, r0
 8020d16:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020d1a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020d1e:	1c42      	adds	r2, r0, #1
 8020d20:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020d24:	b29b      	uxth	r3, r3
 8020d26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020d2a:	ea42 020c 	orr.w	r2, r2, ip
 8020d2e:	f103 0c01 	add.w	ip, r3, #1
 8020d32:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020d36:	095b      	lsrs	r3, r3, #5
 8020d38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d3c:	431a      	orrs	r2, r3
 8020d3e:	f8a9 2000 	strh.w	r2, [r9]
 8020d42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020d44:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020d46:	441a      	add	r2, r3
 8020d48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d4a:	9229      	str	r2, [sp, #164]	; 0xa4
 8020d4c:	f109 0902 	add.w	r9, r9, #2
 8020d50:	441d      	add	r5, r3
 8020d52:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020d56:	e63d      	b.n	80209d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020d58:	2800      	cmp	r0, #0
 8020d5a:	f43f aedd 	beq.w	8020b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020d5e:	5c79      	ldrb	r1, [r7, r1]
 8020d60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d64:	910b      	str	r1, [sp, #44]	; 0x2c
 8020d66:	0e09      	lsrs	r1, r1, #24
 8020d68:	9114      	str	r1, [sp, #80]	; 0x50
 8020d6a:	e6d5      	b.n	8020b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020d6c:	b01f      	add	sp, #124	; 0x7c
 8020d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020d72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020d72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d76:	b089      	sub	sp, #36	; 0x24
 8020d78:	9101      	str	r1, [sp, #4]
 8020d7a:	9801      	ldr	r0, [sp, #4]
 8020d7c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020d80:	8800      	ldrh	r0, [r0, #0]
 8020d82:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020d86:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020d8a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020d8e:	1206      	asrs	r6, r0, #8
 8020d90:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020d94:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020d98:	9602      	str	r6, [sp, #8]
 8020d9a:	10c6      	asrs	r6, r0, #3
 8020d9c:	00c0      	lsls	r0, r0, #3
 8020d9e:	b2c0      	uxtb	r0, r0
 8020da0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020da4:	9004      	str	r0, [sp, #16]
 8020da6:	2f00      	cmp	r7, #0
 8020da8:	fb07 100c 	mla	r0, r7, ip, r1
 8020dac:	9603      	str	r6, [sp, #12]
 8020dae:	eb02 0e00 	add.w	lr, r2, r0
 8020db2:	f2c0 810a 	blt.w	8020fca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020db6:	45b8      	cmp	r8, r7
 8020db8:	f340 8107 	ble.w	8020fca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020dbc:	2900      	cmp	r1, #0
 8020dbe:	f2c0 8102 	blt.w	8020fc6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020dc2:	458c      	cmp	ip, r1
 8020dc4:	f340 80ff 	ble.w	8020fc6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020dc8:	5c12      	ldrb	r2, [r2, r0]
 8020dca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020dce:	1c4a      	adds	r2, r1, #1
 8020dd0:	f100 80fe 	bmi.w	8020fd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020dd4:	4594      	cmp	ip, r2
 8020dd6:	f340 80fb 	ble.w	8020fd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020dda:	2d00      	cmp	r5, #0
 8020ddc:	f000 80fa 	beq.w	8020fd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020de0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020de4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020de8:	3701      	adds	r7, #1
 8020dea:	f100 80f7 	bmi.w	8020fdc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020dee:	45b8      	cmp	r8, r7
 8020df0:	f340 80f4 	ble.w	8020fdc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020df4:	2c00      	cmp	r4, #0
 8020df6:	f000 80f4 	beq.w	8020fe2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020dfa:	2900      	cmp	r1, #0
 8020dfc:	eb0e 020c 	add.w	r2, lr, ip
 8020e00:	f2c0 80ea 	blt.w	8020fd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020e04:	458c      	cmp	ip, r1
 8020e06:	f340 80e7 	ble.w	8020fd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020e0a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020e0e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020e12:	3101      	adds	r1, #1
 8020e14:	f100 80e8 	bmi.w	8020fe8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020e18:	458c      	cmp	ip, r1
 8020e1a:	f340 80e5 	ble.w	8020fe8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020e1e:	2d00      	cmp	r5, #0
 8020e20:	f000 80e4 	beq.w	8020fec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020e24:	7852      	ldrb	r2, [r2, #1]
 8020e26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020e2a:	0e0b      	lsrs	r3, r1, #24
 8020e2c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020e30:	9300      	str	r3, [sp, #0]
 8020e32:	b2a4      	uxth	r4, r4
 8020e34:	b2ab      	uxth	r3, r5
 8020e36:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020e3a:	fb03 f904 	mul.w	r9, r3, r4
 8020e3e:	fb0a f505 	mul.w	r5, sl, r5
 8020e42:	011b      	lsls	r3, r3, #4
 8020e44:	eba3 0e09 	sub.w	lr, r3, r9
 8020e48:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020e4c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020e50:	0a28      	lsrs	r0, r5, #8
 8020e52:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020e56:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020e5a:	4405      	add	r5, r0
 8020e5c:	0a2d      	lsrs	r5, r5, #8
 8020e5e:	fb0a f303 	mul.w	r3, sl, r3
 8020e62:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020e66:	9005      	str	r0, [sp, #20]
 8020e68:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020e6c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020e70:	0a1b      	lsrs	r3, r3, #8
 8020e72:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020e76:	9306      	str	r3, [sp, #24]
 8020e78:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020e7c:	fb0b f303 	mul.w	r3, fp, r3
 8020e80:	0a1d      	lsrs	r5, r3, #8
 8020e82:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020e86:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020e8a:	fb0b f606 	mul.w	r6, fp, r6
 8020e8e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020e92:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020e96:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020e9a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020e9e:	fb08 f707 	mul.w	r7, r8, r7
 8020ea2:	441d      	add	r5, r3
 8020ea4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020ea8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020eac:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020eb0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020eb4:	fb08 fc0c 	mul.w	ip, r8, ip
 8020eb8:	0a1b      	lsrs	r3, r3, #8
 8020eba:	9307      	str	r3, [sp, #28]
 8020ebc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020ec0:	0e0b      	lsrs	r3, r1, #24
 8020ec2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020ec6:	435f      	muls	r7, r3
 8020ec8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020ecc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020ed0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020ed4:	4460      	add	r0, ip
 8020ed6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020eda:	b2a4      	uxth	r4, r4
 8020edc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ee0:	0a2d      	lsrs	r5, r5, #8
 8020ee2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020ee6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eea:	fa1f fe8e 	uxth.w	lr, lr
 8020eee:	4359      	muls	r1, r3
 8020ef0:	1b12      	subs	r2, r2, r4
 8020ef2:	9b05      	ldr	r3, [sp, #20]
 8020ef4:	44bc      	add	ip, r7
 8020ef6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020efa:	b292      	uxth	r2, r2
 8020efc:	fb05 f50e 	mul.w	r5, r5, lr
 8020f00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f04:	fb03 5502 	mla	r5, r3, r2, r5
 8020f08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f0c:	9b06      	ldr	r3, [sp, #24]
 8020f0e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020f12:	0a36      	lsrs	r6, r6, #8
 8020f14:	0a00      	lsrs	r0, r0, #8
 8020f16:	fb0c 5509 	mla	r5, ip, r9, r5
 8020f1a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020f1e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020f22:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020f26:	fb00 5504 	mla	r5, r0, r4, r5
 8020f2a:	fb0e f606 	mul.w	r6, lr, r6
 8020f2e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020f32:	0a09      	lsrs	r1, r1, #8
 8020f34:	9b07      	ldr	r3, [sp, #28]
 8020f36:	fb02 6000 	mla	r0, r2, r0, r6
 8020f3a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020f3e:	fb09 0001 	mla	r0, r9, r1, r0
 8020f42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f46:	fb0e fe0b 	mul.w	lr, lr, fp
 8020f4a:	fb04 0003 	mla	r0, r4, r3, r0
 8020f4e:	fb02 e20a 	mla	r2, r2, sl, lr
 8020f52:	9b00      	ldr	r3, [sp, #0]
 8020f54:	fb04 2408 	mla	r4, r4, r8, r2
 8020f58:	fb09 4903 	mla	r9, r9, r3, r4
 8020f5c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020f60:	9b02      	ldr	r3, [sp, #8]
 8020f62:	9a04      	ldr	r2, [sp, #16]
 8020f64:	fa5f f989 	uxtb.w	r9, r9
 8020f68:	fb03 f109 	mul.w	r1, r3, r9
 8020f6c:	9b03      	ldr	r3, [sp, #12]
 8020f6e:	0a2d      	lsrs	r5, r5, #8
 8020f70:	0a00      	lsrs	r0, r0, #8
 8020f72:	fb03 f309 	mul.w	r3, r3, r9
 8020f76:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020f7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f7e:	4305      	orrs	r5, r0
 8020f80:	fb02 f909 	mul.w	r9, r2, r9
 8020f84:	1c58      	adds	r0, r3, #1
 8020f86:	1c4a      	adds	r2, r1, #1
 8020f88:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020f8c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f90:	0a2b      	lsrs	r3, r5, #8
 8020f92:	0c2a      	lsrs	r2, r5, #16
 8020f94:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020f98:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020f9c:	00db      	lsls	r3, r3, #3
 8020f9e:	0212      	lsls	r2, r2, #8
 8020fa0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020fa4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020fa8:	4313      	orrs	r3, r2
 8020faa:	f109 0201 	add.w	r2, r9, #1
 8020fae:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020fb2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020fb6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020fba:	431d      	orrs	r5, r3
 8020fbc:	9b01      	ldr	r3, [sp, #4]
 8020fbe:	801d      	strh	r5, [r3, #0]
 8020fc0:	b009      	add	sp, #36	; 0x24
 8020fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fc6:	2000      	movs	r0, #0
 8020fc8:	e701      	b.n	8020dce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020fca:	2600      	movs	r6, #0
 8020fcc:	4630      	mov	r0, r6
 8020fce:	e70b      	b.n	8020de8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020fd0:	2600      	movs	r6, #0
 8020fd2:	e709      	b.n	8020de8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020fd4:	462e      	mov	r6, r5
 8020fd6:	e707      	b.n	8020de8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020fd8:	2700      	movs	r7, #0
 8020fda:	e71a      	b.n	8020e12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020fdc:	2100      	movs	r1, #0
 8020fde:	460f      	mov	r7, r1
 8020fe0:	e723      	b.n	8020e2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020fe2:	4621      	mov	r1, r4
 8020fe4:	4627      	mov	r7, r4
 8020fe6:	e720      	b.n	8020e2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020fe8:	2100      	movs	r1, #0
 8020fea:	e71e      	b.n	8020e2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020fec:	4629      	mov	r1, r5
 8020fee:	e71c      	b.n	8020e2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ff4:	b09b      	sub	sp, #108	; 0x6c
 8020ff6:	9218      	str	r2, [sp, #96]	; 0x60
 8020ff8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020ffa:	9116      	str	r1, [sp, #88]	; 0x58
 8020ffc:	9307      	str	r3, [sp, #28]
 8020ffe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021002:	9019      	str	r0, [sp, #100]	; 0x64
 8021004:	6850      	ldr	r0, [r2, #4]
 8021006:	6812      	ldr	r2, [r2, #0]
 8021008:	9d26      	ldr	r5, [sp, #152]	; 0x98
 802100a:	fb00 1303 	mla	r3, r0, r3, r1
 802100e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021012:	930a      	str	r3, [sp, #40]	; 0x28
 8021014:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021016:	681b      	ldr	r3, [r3, #0]
 8021018:	930f      	str	r3, [sp, #60]	; 0x3c
 802101a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802101c:	685e      	ldr	r6, [r3, #4]
 802101e:	3604      	adds	r6, #4
 8021020:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021022:	2b00      	cmp	r3, #0
 8021024:	dc03      	bgt.n	802102e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021026:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021028:	2b00      	cmp	r3, #0
 802102a:	f340 8373 	ble.w	8021714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802102e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021030:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021034:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021038:	1e48      	subs	r0, r1, #1
 802103a:	1e57      	subs	r7, r2, #1
 802103c:	9b07      	ldr	r3, [sp, #28]
 802103e:	2b00      	cmp	r3, #0
 8021040:	f340 8190 	ble.w	8021364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021044:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021046:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802104a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802104e:	d406      	bmi.n	802105e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021050:	4584      	cmp	ip, r0
 8021052:	da04      	bge.n	802105e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021054:	2b00      	cmp	r3, #0
 8021056:	db02      	blt.n	802105e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021058:	42bb      	cmp	r3, r7
 802105a:	f2c0 8184 	blt.w	8021366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802105e:	f11c 0c01 	adds.w	ip, ip, #1
 8021062:	f100 8172 	bmi.w	802134a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021066:	4561      	cmp	r1, ip
 8021068:	f2c0 816f 	blt.w	802134a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802106c:	3301      	adds	r3, #1
 802106e:	f100 816c 	bmi.w	802134a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021072:	429a      	cmp	r2, r3
 8021074:	f2c0 8169 	blt.w	802134a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021078:	9b07      	ldr	r3, [sp, #28]
 802107a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802107c:	9317      	str	r3, [sp, #92]	; 0x5c
 802107e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021080:	2b00      	cmp	r3, #0
 8021082:	f340 818e 	ble.w	80213a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021086:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021088:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802108c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802108e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021092:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021094:	141b      	asrs	r3, r3, #16
 8021096:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802109a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802109e:	f100 81d1 	bmi.w	8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80210a2:	f101 38ff 	add.w	r8, r1, #4294967295
 80210a6:	4543      	cmp	r3, r8
 80210a8:	f280 81cc 	bge.w	8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80210ac:	f1bc 0f00 	cmp.w	ip, #0
 80210b0:	f2c0 81c8 	blt.w	8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80210b4:	f10e 38ff 	add.w	r8, lr, #4294967295
 80210b8:	45c4      	cmp	ip, r8
 80210ba:	f280 81c3 	bge.w	8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80210be:	b209      	sxth	r1, r1
 80210c0:	fb0c 3301 	mla	r3, ip, r1, r3
 80210c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80210c6:	eb04 0803 	add.w	r8, r4, r3
 80210ca:	5ce3      	ldrb	r3, [r4, r3]
 80210cc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80210d0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80210d4:	2a00      	cmp	r2, #0
 80210d6:	f000 81aa 	beq.w	802142e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80210da:	f898 c001 	ldrb.w	ip, [r8, #1]
 80210de:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80210e2:	940b      	str	r4, [sp, #44]	; 0x2c
 80210e4:	0e24      	lsrs	r4, r4, #24
 80210e6:	9412      	str	r4, [sp, #72]	; 0x48
 80210e8:	b178      	cbz	r0, 802110a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80210ea:	eb08 0c01 	add.w	ip, r8, r1
 80210ee:	f818 1001 	ldrb.w	r1, [r8, r1]
 80210f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80210f6:	9108      	str	r1, [sp, #32]
 80210f8:	0e09      	lsrs	r1, r1, #24
 80210fa:	9110      	str	r1, [sp, #64]	; 0x40
 80210fc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021100:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021104:	910c      	str	r1, [sp, #48]	; 0x30
 8021106:	0e09      	lsrs	r1, r1, #24
 8021108:	9113      	str	r1, [sp, #76]	; 0x4c
 802110a:	b292      	uxth	r2, r2
 802110c:	b280      	uxth	r0, r0
 802110e:	fb02 f900 	mul.w	r9, r2, r0
 8021112:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021116:	0112      	lsls	r2, r2, #4
 8021118:	eba2 0809 	sub.w	r8, r2, r9
 802111c:	b280      	uxth	r0, r0
 802111e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021122:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021124:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021126:	fa1f f888 	uxth.w	r8, r8
 802112a:	1a12      	subs	r2, r2, r0
 802112c:	b292      	uxth	r2, r2
 802112e:	fb08 f101 	mul.w	r1, r8, r1
 8021132:	fb02 110e 	mla	r1, r2, lr, r1
 8021136:	fb00 1104 	mla	r1, r0, r4, r1
 802113a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802113c:	fb09 1104 	mla	r1, r9, r4, r1
 8021140:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021144:	2900      	cmp	r1, #0
 8021146:	f000 80f5 	beq.w	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802114a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802114e:	d01b      	beq.n	8021188 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021150:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021154:	fb0e fa0a 	mul.w	sl, lr, sl
 8021158:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802115c:	fb0e fe03 	mul.w	lr, lr, r3
 8021160:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021164:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021168:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802116c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021170:	4453      	add	r3, sl
 8021172:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021176:	0a1b      	lsrs	r3, r3, #8
 8021178:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802117c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021180:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021184:	ea43 030c 	orr.w	r3, r3, ip
 8021188:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802118a:	2cff      	cmp	r4, #255	; 0xff
 802118c:	d021      	beq.n	80211d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802118e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021190:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021194:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021196:	fb04 fb0b 	mul.w	fp, r4, fp
 802119a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802119c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80211a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80211a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80211aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80211b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80211b6:	44de      	add	lr, fp
 80211b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80211bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80211c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80211c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80211cc:	ea4e 040a 	orr.w	r4, lr, sl
 80211d0:	940b      	str	r4, [sp, #44]	; 0x2c
 80211d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80211d4:	2cff      	cmp	r4, #255	; 0xff
 80211d6:	d021      	beq.n	802121c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80211d8:	9c08      	ldr	r4, [sp, #32]
 80211da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80211de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80211e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80211e4:	9c08      	ldr	r4, [sp, #32]
 80211e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211ea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80211ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80211f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80211f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80211fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021200:	44de      	add	lr, fp
 8021202:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802120a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802120e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021212:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021216:	ea4e 040a 	orr.w	r4, lr, sl
 802121a:	9408      	str	r4, [sp, #32]
 802121c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802121e:	2cff      	cmp	r4, #255	; 0xff
 8021220:	d021      	beq.n	8021266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021222:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021224:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021228:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802122a:	fb04 fb0b 	mul.w	fp, r4, fp
 802122e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021230:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021234:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021236:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802123a:	fb04 fa0a 	mul.w	sl, r4, sl
 802123e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021242:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021246:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802124a:	44de      	add	lr, fp
 802124c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021250:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021254:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021258:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802125c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021260:	ea4e 040a 	orr.w	r4, lr, sl
 8021264:	940c      	str	r4, [sp, #48]	; 0x30
 8021266:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021268:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802126c:	9c08      	ldr	r4, [sp, #32]
 802126e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021272:	fb08 fc0c 	mul.w	ip, r8, ip
 8021276:	fb02 cc0e 	mla	ip, r2, lr, ip
 802127a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802127e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021280:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021284:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021288:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802128a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802128e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021292:	fb08 f80e 	mul.w	r8, r8, lr
 8021296:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802129a:	fb02 8303 	mla	r3, r2, r3, r8
 802129e:	9a08      	ldr	r2, [sp, #32]
 80212a0:	f8b7 8000 	ldrh.w	r8, [r7]
 80212a4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80212a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80212aa:	fb00 330a 	mla	r3, r0, sl, r3
 80212ae:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80212b2:	fb09 3900 	mla	r9, r9, r0, r3
 80212b6:	43c9      	mvns	r1, r1
 80212b8:	ea4f 2228 	mov.w	r2, r8, asr #8
 80212bc:	fa5f fe81 	uxtb.w	lr, r1
 80212c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80212c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80212cc:	fb02 f20e 	mul.w	r2, r2, lr
 80212d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212d4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80212d8:	ea4c 0c09 	orr.w	ip, ip, r9
 80212dc:	1c53      	adds	r3, r2, #1
 80212de:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80212e2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80212e6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80212ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80212ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80212f2:	4a63      	ldr	r2, [pc, #396]	; (8021480 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80212f4:	fb00 f00e 	mul.w	r0, r0, lr
 80212f8:	b2db      	uxtb	r3, r3
 80212fa:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80212fe:	1c43      	adds	r3, r0, #1
 8021300:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021304:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021308:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 802130c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021310:	b2c9      	uxtb	r1, r1
 8021312:	00db      	lsls	r3, r3, #3
 8021314:	fb01 f10e 	mul.w	r1, r1, lr
 8021318:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802131c:	4313      	orrs	r3, r2
 802131e:	1c4a      	adds	r2, r1, #1
 8021320:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021324:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021328:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802132c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021330:	f8a7 c000 	strh.w	ip, [r7]
 8021334:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021336:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021338:	441a      	add	r2, r3
 802133a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802133c:	9225      	str	r2, [sp, #148]	; 0x94
 802133e:	441d      	add	r5, r3
 8021340:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021342:	3b01      	subs	r3, #1
 8021344:	3702      	adds	r7, #2
 8021346:	9317      	str	r3, [sp, #92]	; 0x5c
 8021348:	e699      	b.n	802107e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802134a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802134c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802134e:	441c      	add	r4, r3
 8021350:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021352:	9425      	str	r4, [sp, #148]	; 0x94
 8021354:	441d      	add	r5, r3
 8021356:	9b07      	ldr	r3, [sp, #28]
 8021358:	3b01      	subs	r3, #1
 802135a:	9307      	str	r3, [sp, #28]
 802135c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802135e:	3302      	adds	r3, #2
 8021360:	930a      	str	r3, [sp, #40]	; 0x28
 8021362:	e66b      	b.n	802103c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021364:	d024      	beq.n	80213b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021366:	9b07      	ldr	r3, [sp, #28]
 8021368:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802136a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802136c:	3b01      	subs	r3, #1
 802136e:	fb00 4003 	mla	r0, r0, r3, r4
 8021372:	1400      	asrs	r0, r0, #16
 8021374:	f53f ae80 	bmi.w	8021078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021378:	3901      	subs	r1, #1
 802137a:	4288      	cmp	r0, r1
 802137c:	f6bf ae7c 	bge.w	8021078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021380:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021382:	fb01 5303 	mla	r3, r1, r3, r5
 8021386:	141b      	asrs	r3, r3, #16
 8021388:	f53f ae76 	bmi.w	8021078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802138c:	3a01      	subs	r2, #1
 802138e:	4293      	cmp	r3, r2
 8021390:	f6bf ae72 	bge.w	8021078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021394:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021398:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802139c:	f1bb 0f00 	cmp.w	fp, #0
 80213a0:	dc70      	bgt.n	8021484 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80213a2:	9b07      	ldr	r3, [sp, #28]
 80213a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80213a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80213aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80213ae:	930a      	str	r3, [sp, #40]	; 0x28
 80213b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80213b2:	2b00      	cmp	r3, #0
 80213b4:	f340 81ae 	ble.w	8021714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80213b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80213bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80213c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80213c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80213d2:	eef0 6a62 	vmov.f32	s13, s5
 80213d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80213da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80213e2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80213e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213ea:	eef0 6a43 	vmov.f32	s13, s6
 80213ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213f2:	ee12 2a90 	vmov	r2, s5
 80213f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80213fe:	ee13 2a10 	vmov	r2, s6
 8021402:	9327      	str	r3, [sp, #156]	; 0x9c
 8021404:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021406:	fb92 f3f3 	sdiv	r3, r2, r3
 802140a:	9328      	str	r3, [sp, #160]	; 0xa0
 802140c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802140e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021410:	3b01      	subs	r3, #1
 8021412:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021416:	9316      	str	r3, [sp, #88]	; 0x58
 8021418:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802141a:	bf08      	it	eq
 802141c:	4613      	moveq	r3, r2
 802141e:	ee16 5a90 	vmov	r5, s13
 8021422:	9307      	str	r3, [sp, #28]
 8021424:	eeb0 3a67 	vmov.f32	s6, s15
 8021428:	eef0 2a47 	vmov.f32	s5, s14
 802142c:	e5f8      	b.n	8021020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802142e:	2800      	cmp	r0, #0
 8021430:	f43f ae6b 	beq.w	802110a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021434:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021438:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802143c:	9108      	str	r1, [sp, #32]
 802143e:	0e09      	lsrs	r1, r1, #24
 8021440:	9110      	str	r1, [sp, #64]	; 0x40
 8021442:	e662      	b.n	802110a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021444:	f113 0801 	adds.w	r8, r3, #1
 8021448:	f53f af74 	bmi.w	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802144c:	4541      	cmp	r1, r8
 802144e:	f6ff af71 	blt.w	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021452:	f11c 0801 	adds.w	r8, ip, #1
 8021456:	f53f af6d 	bmi.w	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802145a:	45c6      	cmp	lr, r8
 802145c:	f6ff af6a 	blt.w	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021460:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021464:	b209      	sxth	r1, r1
 8021466:	fa0f f38e 	sxth.w	r3, lr
 802146a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802146e:	9301      	str	r3, [sp, #4]
 8021470:	9100      	str	r1, [sp, #0]
 8021472:	4633      	mov	r3, r6
 8021474:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021476:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021478:	4639      	mov	r1, r7
 802147a:	f7ff fc7a 	bl	8020d72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802147e:	e759      	b.n	8021334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021480:	fffff800 	.word	0xfffff800
 8021484:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021486:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021488:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802148c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802148e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021492:	1427      	asrs	r7, r4, #16
 8021494:	142b      	asrs	r3, r5, #16
 8021496:	fb01 7303 	mla	r3, r1, r3, r7
 802149a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802149c:	18e7      	adds	r7, r4, r3
 802149e:	5ce3      	ldrb	r3, [r4, r3]
 80214a0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80214a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80214a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80214ac:	2a00      	cmp	r2, #0
 80214ae:	f000 8127 	beq.w	8021700 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80214b2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80214b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80214ba:	940d      	str	r4, [sp, #52]	; 0x34
 80214bc:	0e24      	lsrs	r4, r4, #24
 80214be:	9414      	str	r4, [sp, #80]	; 0x50
 80214c0:	b170      	cbz	r0, 80214e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80214c2:	eb07 0e01 	add.w	lr, r7, r1
 80214c6:	5c79      	ldrb	r1, [r7, r1]
 80214c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80214cc:	9109      	str	r1, [sp, #36]	; 0x24
 80214ce:	0e09      	lsrs	r1, r1, #24
 80214d0:	9111      	str	r1, [sp, #68]	; 0x44
 80214d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80214d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80214da:	910e      	str	r1, [sp, #56]	; 0x38
 80214dc:	0e09      	lsrs	r1, r1, #24
 80214de:	9115      	str	r1, [sp, #84]	; 0x54
 80214e0:	b292      	uxth	r2, r2
 80214e2:	b280      	uxth	r0, r0
 80214e4:	fb02 f800 	mul.w	r8, r2, r0
 80214e8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80214ec:	0112      	lsls	r2, r2, #4
 80214ee:	eba2 0e08 	sub.w	lr, r2, r8
 80214f2:	b280      	uxth	r0, r0
 80214f4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80214f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80214fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80214fc:	fa1f fe8e 	uxth.w	lr, lr
 8021500:	1a09      	subs	r1, r1, r0
 8021502:	b289      	uxth	r1, r1
 8021504:	fb0e f202 	mul.w	r2, lr, r2
 8021508:	fb01 220c 	mla	r2, r1, ip, r2
 802150c:	fb00 2204 	mla	r2, r0, r4, r2
 8021510:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021512:	fb08 2204 	mla	r2, r8, r4, r2
 8021516:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802151a:	2a00      	cmp	r2, #0
 802151c:	f000 80e5 	beq.w	80216ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021520:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021524:	d019      	beq.n	802155a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021526:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802152a:	fb0c fa0a 	mul.w	sl, ip, sl
 802152e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021532:	fb0c fc03 	mul.w	ip, ip, r3
 8021536:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802153a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802153e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021542:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021546:	4453      	add	r3, sl
 8021548:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802154c:	0a1b      	lsrs	r3, r3, #8
 802154e:	0a3f      	lsrs	r7, r7, #8
 8021550:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021554:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021558:	433b      	orrs	r3, r7
 802155a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802155c:	2cff      	cmp	r4, #255	; 0xff
 802155e:	d020      	beq.n	80215a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021560:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021562:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021566:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021568:	4367      	muls	r7, r4
 802156a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802156c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021570:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021572:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021576:	fb04 fa0a 	mul.w	sl, r4, sl
 802157a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802157e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021582:	44bc      	add	ip, r7
 8021584:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021588:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802158c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021590:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021594:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802159c:	ea4c 040a 	orr.w	r4, ip, sl
 80215a0:	940d      	str	r4, [sp, #52]	; 0x34
 80215a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80215a4:	2cff      	cmp	r4, #255	; 0xff
 80215a6:	d020      	beq.n	80215ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80215a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80215aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80215ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80215b0:	4367      	muls	r7, r4
 80215b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80215b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80215b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80215ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80215be:	fb04 fa0a 	mul.w	sl, r4, sl
 80215c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80215c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215ca:	44bc      	add	ip, r7
 80215cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80215d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80215d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80215dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80215e4:	ea4c 040a 	orr.w	r4, ip, sl
 80215e8:	9409      	str	r4, [sp, #36]	; 0x24
 80215ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80215ec:	2cff      	cmp	r4, #255	; 0xff
 80215ee:	d020      	beq.n	8021632 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80215f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80215f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80215f8:	4367      	muls	r7, r4
 80215fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021600:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021606:	fb04 fa0a 	mul.w	sl, r4, sl
 802160a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802160e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021612:	44bc      	add	ip, r7
 8021614:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021618:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802161c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021620:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021624:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021628:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802162c:	ea4c 040a 	orr.w	r4, ip, sl
 8021630:	940e      	str	r4, [sp, #56]	; 0x38
 8021632:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021634:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021638:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802163a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802163e:	fb0e f707 	mul.w	r7, lr, r7
 8021642:	fb01 770c 	mla	r7, r1, ip, r7
 8021646:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802164a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802164c:	fb00 770c 	mla	r7, r0, ip, r7
 8021650:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021654:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021656:	fb08 770c 	mla	r7, r8, ip, r7
 802165a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802165e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021662:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021666:	fb01 e303 	mla	r3, r1, r3, lr
 802166a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802166c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021670:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021672:	fb00 330a 	mla	r3, r0, sl, r3
 8021676:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802167a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802167e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021682:	43d2      	mvns	r2, r2
 8021684:	1218      	asrs	r0, r3, #8
 8021686:	b2d2      	uxtb	r2, r2
 8021688:	10d9      	asrs	r1, r3, #3
 802168a:	0a3f      	lsrs	r7, r7, #8
 802168c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021690:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021694:	00db      	lsls	r3, r3, #3
 8021696:	4350      	muls	r0, r2
 8021698:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802169c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80216a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80216a4:	b2db      	uxtb	r3, r3
 80216a6:	ea47 070c 	orr.w	r7, r7, ip
 80216aa:	4351      	muls	r1, r2
 80216ac:	4353      	muls	r3, r2
 80216ae:	1c42      	adds	r2, r0, #1
 80216b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80216b4:	0c3a      	lsrs	r2, r7, #16
 80216b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80216ba:	4a18      	ldr	r2, [pc, #96]	; (802171c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80216bc:	b2c0      	uxtb	r0, r0
 80216be:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80216c2:	1c4a      	adds	r2, r1, #1
 80216c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80216c8:	0a3a      	lsrs	r2, r7, #8
 80216ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80216ce:	00c9      	lsls	r1, r1, #3
 80216d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80216d4:	4301      	orrs	r1, r0
 80216d6:	1c58      	adds	r0, r3, #1
 80216d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80216dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80216e0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80216e4:	4308      	orrs	r0, r1
 80216e6:	f8a9 0000 	strh.w	r0, [r9]
 80216ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80216ec:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80216ee:	441a      	add	r2, r3
 80216f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80216f2:	9225      	str	r2, [sp, #148]	; 0x94
 80216f4:	f109 0902 	add.w	r9, r9, #2
 80216f8:	441d      	add	r5, r3
 80216fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80216fe:	e64d      	b.n	802139c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021700:	2800      	cmp	r0, #0
 8021702:	f43f aeed 	beq.w	80214e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021706:	5c79      	ldrb	r1, [r7, r1]
 8021708:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802170c:	9109      	str	r1, [sp, #36]	; 0x24
 802170e:	0e09      	lsrs	r1, r1, #24
 8021710:	9111      	str	r1, [sp, #68]	; 0x44
 8021712:	e6e5      	b.n	80214e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021714:	b01b      	add	sp, #108	; 0x6c
 8021716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802171a:	bf00      	nop
 802171c:	fffff800 	.word	0xfffff800

08021720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021724:	b085      	sub	sp, #20
 8021726:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802172a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802172e:	9103      	str	r1, [sp, #12]
 8021730:	fb00 7406 	mla	r4, r0, r6, r7
 8021734:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021738:	2800      	cmp	r0, #0
 802173a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802173e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021742:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021746:	9501      	str	r5, [sp, #4]
 8021748:	eb03 0904 	add.w	r9, r3, r4
 802174c:	f2c0 8150 	blt.w	80219f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021750:	4583      	cmp	fp, r0
 8021752:	f340 814d 	ble.w	80219f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021756:	2f00      	cmp	r7, #0
 8021758:	f2c0 8146 	blt.w	80219e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802175c:	42be      	cmp	r6, r7
 802175e:	f340 8143 	ble.w	80219e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021762:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021766:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802176a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802176e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021772:	4355      	muls	r5, r2
 8021774:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021778:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802177c:	fb0c f203 	mul.w	r2, ip, r3
 8021780:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021784:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021788:	441d      	add	r5, r3
 802178a:	f102 0320 	add.w	r3, r2, #32
 802178e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021792:	0a1b      	lsrs	r3, r3, #8
 8021794:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021798:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802179c:	431c      	orrs	r4, r3
 802179e:	1c7b      	adds	r3, r7, #1
 80217a0:	f100 812b 	bmi.w	80219fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80217a4:	429e      	cmp	r6, r3
 80217a6:	f340 8128 	ble.w	80219fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80217aa:	2900      	cmp	r1, #0
 80217ac:	f000 8128 	beq.w	8021a00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80217b0:	9a01      	ldr	r2, [sp, #4]
 80217b2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80217b6:	8855      	ldrh	r5, [r2, #2]
 80217b8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80217bc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80217c0:	fb08 f802 	mul.w	r8, r8, r2
 80217c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80217c8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80217cc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80217d0:	435d      	muls	r5, r3
 80217d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80217d6:	44d0      	add	r8, sl
 80217d8:	f105 0a20 	add.w	sl, r5, #32
 80217dc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80217e0:	0a2d      	lsrs	r5, r5, #8
 80217e2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80217e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80217ea:	432a      	orrs	r2, r5
 80217ec:	3001      	adds	r0, #1
 80217ee:	f100 810d 	bmi.w	8021a0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80217f2:	4583      	cmp	fp, r0
 80217f4:	f340 810a 	ble.w	8021a0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80217f8:	f1be 0f00 	cmp.w	lr, #0
 80217fc:	f000 810b 	beq.w	8021a16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021800:	2f00      	cmp	r7, #0
 8021802:	f2c0 8100 	blt.w	8021a06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021806:	42be      	cmp	r6, r7
 8021808:	f340 80fd 	ble.w	8021a06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802180c:	9801      	ldr	r0, [sp, #4]
 802180e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021812:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021816:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802181a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802181e:	fb0a fa00 	mul.w	sl, sl, r0
 8021822:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021826:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802182a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802182e:	fb05 f808 	mul.w	r8, r5, r8
 8021832:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021836:	4482      	add	sl, r0
 8021838:	f108 0020 	add.w	r0, r8, #32
 802183c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021840:	0a00      	lsrs	r0, r0, #8
 8021842:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021846:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802184a:	ea4b 0b00 	orr.w	fp, fp, r0
 802184e:	3701      	adds	r7, #1
 8021850:	f100 80e6 	bmi.w	8021a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021854:	42be      	cmp	r6, r7
 8021856:	f340 80e3 	ble.w	8021a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802185a:	2900      	cmp	r1, #0
 802185c:	f000 80e3 	beq.w	8021a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021860:	3601      	adds	r6, #1
 8021862:	9801      	ldr	r0, [sp, #4]
 8021864:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021868:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802186c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021870:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021874:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021878:	fb09 f906 	mul.w	r9, r9, r6
 802187c:	fb07 f800 	mul.w	r8, r7, r0
 8021880:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021884:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021888:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802188c:	44d1      	add	r9, sl
 802188e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021892:	f108 0020 	add.w	r0, r8, #32
 8021896:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802189a:	0a00      	lsrs	r0, r0, #8
 802189c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218a0:	4330      	orrs	r0, r6
 80218a2:	b28e      	uxth	r6, r1
 80218a4:	fa1f f98e 	uxth.w	r9, lr
 80218a8:	fb06 f809 	mul.w	r8, r6, r9
 80218ac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80218b0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80218b4:	0136      	lsls	r6, r6, #4
 80218b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218ba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80218be:	9601      	str	r6, [sp, #4]
 80218c0:	ea4a 0404 	orr.w	r4, sl, r4
 80218c4:	fa1f f689 	uxth.w	r6, r9
 80218c8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80218cc:	fb11 f90e 	smulbb	r9, r1, lr
 80218d0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80218d4:	9602      	str	r6, [sp, #8]
 80218d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218da:	4626      	mov	r6, r4
 80218dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80218e0:	f1ce 0410 	rsb	r4, lr, #16
 80218e4:	1a64      	subs	r4, r4, r1
 80218e6:	ea4a 0202 	orr.w	r2, sl, r2
 80218ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80218ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80218f2:	434a      	muls	r2, r1
 80218f4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80218f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021900:	fb04 2406 	mla	r4, r4, r6, r2
 8021904:	ea4a 0000 	orr.w	r0, sl, r0
 8021908:	fb09 4200 	mla	r2, r9, r0, r4
 802190c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021910:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021914:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021918:	ea44 0b0b 	orr.w	fp, r4, fp
 802191c:	9c01      	ldr	r4, [sp, #4]
 802191e:	9e02      	ldr	r6, [sp, #8]
 8021920:	9903      	ldr	r1, [sp, #12]
 8021922:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021926:	1ba4      	subs	r4, r4, r6
 8021928:	9e01      	ldr	r6, [sp, #4]
 802192a:	8808      	ldrh	r0, [r1, #0]
 802192c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021930:	eba6 0608 	sub.w	r6, r6, r8
 8021934:	b2b6      	uxth	r6, r6
 8021936:	b2a4      	uxth	r4, r4
 8021938:	4373      	muls	r3, r6
 802193a:	fb0c 3304 	mla	r3, ip, r4, r3
 802193e:	9c02      	ldr	r4, [sp, #8]
 8021940:	fb04 3505 	mla	r5, r4, r5, r3
 8021944:	fb08 5707 	mla	r7, r8, r7, r5
 8021948:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802194c:	b289      	uxth	r1, r1
 802194e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021952:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021956:	434f      	muls	r7, r1
 8021958:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802195c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021964:	1c7b      	adds	r3, r7, #1
 8021966:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802196a:	ea42 0e0e 	orr.w	lr, r2, lr
 802196e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021972:	fa1f f28e 	uxth.w	r2, lr
 8021976:	1203      	asrs	r3, r0, #8
 8021978:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802197c:	b2ff      	uxtb	r7, r7
 802197e:	1215      	asrs	r5, r2, #8
 8021980:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021984:	fb13 f307 	smulbb	r3, r3, r7
 8021988:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802198c:	fb05 3501 	mla	r5, r5, r1, r3
 8021990:	10c3      	asrs	r3, r0, #3
 8021992:	10d4      	asrs	r4, r2, #3
 8021994:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021998:	fb13 f307 	smulbb	r3, r3, r7
 802199c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80219a0:	fb04 3401 	mla	r4, r4, r1, r3
 80219a4:	00c3      	lsls	r3, r0, #3
 80219a6:	00d2      	lsls	r2, r2, #3
 80219a8:	b2db      	uxtb	r3, r3
 80219aa:	fb13 f307 	smulbb	r3, r3, r7
 80219ae:	b2d2      	uxtb	r2, r2
 80219b0:	fb02 3101 	mla	r1, r2, r1, r3
 80219b4:	b2ad      	uxth	r5, r5
 80219b6:	b289      	uxth	r1, r1
 80219b8:	b2a4      	uxth	r4, r4
 80219ba:	1c6b      	adds	r3, r5, #1
 80219bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80219c0:	1c62      	adds	r2, r4, #1
 80219c2:	1c4b      	adds	r3, r1, #1
 80219c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80219c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80219cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80219d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80219d4:	0964      	lsrs	r4, r4, #5
 80219d6:	432b      	orrs	r3, r5
 80219d8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80219dc:	9a03      	ldr	r2, [sp, #12]
 80219de:	4323      	orrs	r3, r4
 80219e0:	8013      	strh	r3, [r2, #0]
 80219e2:	b005      	add	sp, #20
 80219e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80219e8:	f04f 0c00 	mov.w	ip, #0
 80219ec:	4664      	mov	r4, ip
 80219ee:	e6d6      	b.n	802179e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80219f0:	2300      	movs	r3, #0
 80219f2:	469c      	mov	ip, r3
 80219f4:	461a      	mov	r2, r3
 80219f6:	461c      	mov	r4, r3
 80219f8:	e6f8      	b.n	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80219fa:	2300      	movs	r3, #0
 80219fc:	461a      	mov	r2, r3
 80219fe:	e6f5      	b.n	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021a00:	460b      	mov	r3, r1
 8021a02:	460a      	mov	r2, r1
 8021a04:	e6f2      	b.n	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021a06:	2500      	movs	r5, #0
 8021a08:	46ab      	mov	fp, r5
 8021a0a:	e720      	b.n	802184e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021a0c:	2700      	movs	r7, #0
 8021a0e:	463d      	mov	r5, r7
 8021a10:	4638      	mov	r0, r7
 8021a12:	46bb      	mov	fp, r7
 8021a14:	e745      	b.n	80218a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021a16:	4677      	mov	r7, lr
 8021a18:	4675      	mov	r5, lr
 8021a1a:	4670      	mov	r0, lr
 8021a1c:	46f3      	mov	fp, lr
 8021a1e:	e740      	b.n	80218a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021a20:	2700      	movs	r7, #0
 8021a22:	4638      	mov	r0, r7
 8021a24:	e73d      	b.n	80218a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021a26:	460f      	mov	r7, r1
 8021a28:	4608      	mov	r0, r1
 8021a2a:	e73a      	b.n	80218a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a30:	b097      	sub	sp, #92	; 0x5c
 8021a32:	9214      	str	r2, [sp, #80]	; 0x50
 8021a34:	9308      	str	r3, [sp, #32]
 8021a36:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021a38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021a3c:	9312      	str	r3, [sp, #72]	; 0x48
 8021a3e:	9111      	str	r1, [sp, #68]	; 0x44
 8021a40:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021a44:	9015      	str	r0, [sp, #84]	; 0x54
 8021a46:	6850      	ldr	r0, [r2, #4]
 8021a48:	6812      	ldr	r2, [r2, #0]
 8021a4a:	fb00 1303 	mla	r3, r0, r3, r1
 8021a4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a52:	9309      	str	r3, [sp, #36]	; 0x24
 8021a54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021a56:	681b      	ldr	r3, [r3, #0]
 8021a58:	930b      	str	r3, [sp, #44]	; 0x2c
 8021a5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021a5c:	685b      	ldr	r3, [r3, #4]
 8021a5e:	930c      	str	r3, [sp, #48]	; 0x30
 8021a60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021a64:	930a      	str	r3, [sp, #40]	; 0x28
 8021a66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a68:	2b00      	cmp	r3, #0
 8021a6a:	dc03      	bgt.n	8021a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021a6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021a6e:	2b00      	cmp	r3, #0
 8021a70:	f340 83cb 	ble.w	802220a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021a74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021a76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a7e:	1e48      	subs	r0, r1, #1
 8021a80:	1e55      	subs	r5, r2, #1
 8021a82:	9b08      	ldr	r3, [sp, #32]
 8021a84:	2b00      	cmp	r3, #0
 8021a86:	f340 81a3 	ble.w	8021dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021a8a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021a8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021a8e:	1436      	asrs	r6, r6, #16
 8021a90:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021a94:	d406      	bmi.n	8021aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021a96:	4286      	cmp	r6, r0
 8021a98:	da04      	bge.n	8021aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021a9a:	2b00      	cmp	r3, #0
 8021a9c:	db02      	blt.n	8021aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021a9e:	42ab      	cmp	r3, r5
 8021aa0:	f2c0 8197 	blt.w	8021dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021aa4:	3601      	adds	r6, #1
 8021aa6:	f100 8184 	bmi.w	8021db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021aaa:	42b1      	cmp	r1, r6
 8021aac:	f2c0 8181 	blt.w	8021db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021ab0:	3301      	adds	r3, #1
 8021ab2:	f100 817e 	bmi.w	8021db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021ab6:	429a      	cmp	r2, r3
 8021ab8:	f2c0 817b 	blt.w	8021db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021abc:	9b08      	ldr	r3, [sp, #32]
 8021abe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021ac0:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ac2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021ac6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ac8:	2b00      	cmp	r3, #0
 8021aca:	f340 81a4 	ble.w	8021e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021ace:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021ad0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021ad2:	1418      	asrs	r0, r3, #16
 8021ad4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ad6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021ada:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021adc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021ae0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ae2:	142d      	asrs	r5, r5, #16
 8021ae4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021ae8:	f100 81f8 	bmi.w	8021edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021aec:	f102 3eff 	add.w	lr, r2, #4294967295
 8021af0:	4575      	cmp	r5, lr
 8021af2:	f280 81f3 	bge.w	8021edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021af6:	2800      	cmp	r0, #0
 8021af8:	f2c0 81f0 	blt.w	8021edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021afc:	f103 3eff 	add.w	lr, r3, #4294967295
 8021b00:	4570      	cmp	r0, lr
 8021b02:	f280 81eb 	bge.w	8021edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021b06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b08:	b212      	sxth	r2, r2
 8021b0a:	fb00 5002 	mla	r0, r0, r2, r5
 8021b0e:	fa1f fe81 	uxth.w	lr, r1
 8021b12:	eb03 0a00 	add.w	sl, r3, r0
 8021b16:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021b1a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021b1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021b22:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021b26:	b29b      	uxth	r3, r3
 8021b28:	f1bc 0f00 	cmp.w	ip, #0
 8021b2c:	f000 81b9 	beq.w	8021ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021b30:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021b34:	940d      	str	r4, [sp, #52]	; 0x34
 8021b36:	eb0a 0b02 	add.w	fp, sl, r2
 8021b3a:	fa1f fa8c 	uxth.w	sl, ip
 8021b3e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b42:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021b46:	fa1f fa8a 	uxth.w	sl, sl
 8021b4a:	eba5 050e 	sub.w	r5, r5, lr
 8021b4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021b52:	940e      	str	r4, [sp, #56]	; 0x38
 8021b54:	eba3 030a 	sub.w	r3, r3, sl
 8021b58:	b2ad      	uxth	r5, r5
 8021b5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021b5c:	b29b      	uxth	r3, r3
 8021b5e:	fb08 f505 	mul.w	r5, r8, r5
 8021b62:	fb09 5303 	mla	r3, r9, r3, r5
 8021b66:	fb0a 3304 	mla	r3, sl, r4, r3
 8021b6a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021b6c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021b70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b74:	2b00      	cmp	r3, #0
 8021b76:	f000 810f 	beq.w	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021b7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021b80:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021b84:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021b88:	f000 8190 	beq.w	8021eac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021b8c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021b90:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021b94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b98:	fb09 f000 	mul.w	r0, r9, r0
 8021b9c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021ba0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021ba4:	f100 0b20 	add.w	fp, r0, #32
 8021ba8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021bac:	44ce      	add	lr, r9
 8021bae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021bb2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021bb6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021bba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bbe:	ea4e 0909 	orr.w	r9, lr, r9
 8021bc2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021bc6:	8868      	ldrh	r0, [r5, #2]
 8021bc8:	d019      	beq.n	8021bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021bca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021bce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021bd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bd6:	fb08 f800 	mul.w	r8, r8, r0
 8021bda:	fb0a fe0e 	mul.w	lr, sl, lr
 8021bde:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021be2:	f108 0b20 	add.w	fp, r8, #32
 8021be6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021bea:	4486      	add	lr, r0
 8021bec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021bf0:	0a00      	lsrs	r0, r0, #8
 8021bf2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021bf6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bfa:	ea4e 0000 	orr.w	r0, lr, r0
 8021bfe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021c02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c06:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021c0a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021c0e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c16:	ea4e 0909 	orr.w	r9, lr, r9
 8021c1a:	ea4a 0000 	orr.w	r0, sl, r0
 8021c1e:	f1bc 0f00 	cmp.w	ip, #0
 8021c22:	f000 8145 	beq.w	8021eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021c26:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021c2a:	3a01      	subs	r2, #1
 8021c2c:	0052      	lsls	r2, r2, #1
 8021c2e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021c30:	3202      	adds	r2, #2
 8021c32:	2cff      	cmp	r4, #255	; 0xff
 8021c34:	eb05 0e02 	add.w	lr, r5, r2
 8021c38:	5aaa      	ldrh	r2, [r5, r2]
 8021c3a:	d018      	beq.n	8021c6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021c3c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021c40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c44:	fb04 fa02 	mul.w	sl, r4, r2
 8021c48:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c4c:	fb08 f805 	mul.w	r8, r8, r5
 8021c50:	f10a 0520 	add.w	r5, sl, #32
 8021c54:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021c58:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021c5c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c60:	4442      	add	r2, r8
 8021c62:	0a2d      	lsrs	r5, r5, #8
 8021c64:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021c68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c6c:	432a      	orrs	r2, r5
 8021c6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021c70:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021c74:	2cff      	cmp	r4, #255	; 0xff
 8021c76:	d01a      	beq.n	8021cae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021c78:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021c7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c80:	fb04 fa05 	mul.w	sl, r4, r5
 8021c84:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c88:	fb08 f80e 	mul.w	r8, r8, lr
 8021c8c:	f10a 0e20 	add.w	lr, sl, #32
 8021c90:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021c94:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021c98:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c9c:	4445      	add	r5, r8
 8021c9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ca2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021ca6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021caa:	ea45 050e 	orr.w	r5, r5, lr
 8021cae:	fb1c fe01 	smulbb	lr, ip, r1
 8021cb2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021cb6:	f1cc 0810 	rsb	r8, ip, #16
 8021cba:	eba8 0801 	sub.w	r8, r8, r1
 8021cbe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021cc2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021cc6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021cca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021cce:	4341      	muls	r1, r0
 8021cd0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021cd4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021cd8:	ea4a 0202 	orr.w	r2, sl, r2
 8021cdc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021ce0:	fb09 1108 	mla	r1, r9, r8, r1
 8021ce4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ce8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021cec:	fb0c 1102 	mla	r1, ip, r2, r1
 8021cf0:	ea4b 0505 	orr.w	r5, fp, r5
 8021cf4:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021cf8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021cfc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021d00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d04:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021d08:	ea42 0e0e 	orr.w	lr, r2, lr
 8021d0c:	fa1f f28e 	uxth.w	r2, lr
 8021d10:	2bff      	cmp	r3, #255	; 0xff
 8021d12:	d103      	bne.n	8021d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021d14:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021d16:	29ff      	cmp	r1, #255	; 0xff
 8021d18:	f000 80de 	beq.w	8021ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021d1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021d1e:	8838      	ldrh	r0, [r7, #0]
 8021d20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021d22:	434b      	muls	r3, r1
 8021d24:	f103 0c01 	add.w	ip, r3, #1
 8021d28:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021d2c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021d30:	fa5f fc83 	uxtb.w	ip, r3
 8021d34:	1203      	asrs	r3, r0, #8
 8021d36:	1215      	asrs	r5, r2, #8
 8021d38:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021d3c:	fb13 f30c 	smulbb	r3, r3, ip
 8021d40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021d44:	fb05 3501 	mla	r5, r5, r1, r3
 8021d48:	10c3      	asrs	r3, r0, #3
 8021d4a:	10d1      	asrs	r1, r2, #3
 8021d4c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021d50:	fb13 f30c 	smulbb	r3, r3, ip
 8021d54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021d58:	fb01 3104 	mla	r1, r1, r4, r3
 8021d5c:	00c3      	lsls	r3, r0, #3
 8021d5e:	00d2      	lsls	r2, r2, #3
 8021d60:	b2db      	uxtb	r3, r3
 8021d62:	b2d2      	uxtb	r2, r2
 8021d64:	fb13 f30c 	smulbb	r3, r3, ip
 8021d68:	b2ad      	uxth	r5, r5
 8021d6a:	fb02 3304 	mla	r3, r2, r4, r3
 8021d6e:	b29a      	uxth	r2, r3
 8021d70:	1c6b      	adds	r3, r5, #1
 8021d72:	b289      	uxth	r1, r1
 8021d74:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021d78:	1c53      	adds	r3, r2, #1
 8021d7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d7e:	1c4a      	adds	r2, r1, #1
 8021d80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021d84:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021d88:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d8c:	0949      	lsrs	r1, r1, #5
 8021d8e:	432b      	orrs	r3, r5
 8021d90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d94:	430b      	orrs	r3, r1
 8021d96:	803b      	strh	r3, [r7, #0]
 8021d98:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021d9a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021d9c:	4413      	add	r3, r2
 8021d9e:	9321      	str	r3, [sp, #132]	; 0x84
 8021da0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021da2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021da4:	441a      	add	r2, r3
 8021da6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021da8:	9222      	str	r2, [sp, #136]	; 0x88
 8021daa:	3b01      	subs	r3, #1
 8021dac:	3702      	adds	r7, #2
 8021dae:	9313      	str	r3, [sp, #76]	; 0x4c
 8021db0:	e689      	b.n	8021ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021db2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021db4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021db6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021db8:	4433      	add	r3, r6
 8021dba:	9321      	str	r3, [sp, #132]	; 0x84
 8021dbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dbe:	441c      	add	r4, r3
 8021dc0:	9b08      	ldr	r3, [sp, #32]
 8021dc2:	9422      	str	r4, [sp, #136]	; 0x88
 8021dc4:	3b01      	subs	r3, #1
 8021dc6:	9308      	str	r3, [sp, #32]
 8021dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021dca:	3302      	adds	r3, #2
 8021dcc:	9309      	str	r3, [sp, #36]	; 0x24
 8021dce:	e658      	b.n	8021a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021dd0:	d028      	beq.n	8021e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021dd2:	9b08      	ldr	r3, [sp, #32]
 8021dd4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021dd6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021dd8:	3b01      	subs	r3, #1
 8021dda:	fb00 5003 	mla	r0, r0, r3, r5
 8021dde:	1400      	asrs	r0, r0, #16
 8021de0:	f53f ae6c 	bmi.w	8021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021de4:	3901      	subs	r1, #1
 8021de6:	4288      	cmp	r0, r1
 8021de8:	f6bf ae68 	bge.w	8021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021dec:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021dee:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021df0:	fb01 0303 	mla	r3, r1, r3, r0
 8021df4:	141b      	asrs	r3, r3, #16
 8021df6:	f53f ae61 	bmi.w	8021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021dfa:	3a01      	subs	r2, #1
 8021dfc:	4293      	cmp	r3, r2
 8021dfe:	f6bf ae5d 	bge.w	8021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021e02:	9b08      	ldr	r3, [sp, #32]
 8021e04:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021e08:	9313      	str	r3, [sp, #76]	; 0x4c
 8021e0a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021e0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021e10:	2b00      	cmp	r3, #0
 8021e12:	f300 8082 	bgt.w	8021f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021e16:	9b08      	ldr	r3, [sp, #32]
 8021e18:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e1e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021e22:	9309      	str	r3, [sp, #36]	; 0x24
 8021e24:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021e26:	2b00      	cmp	r3, #0
 8021e28:	f340 81ef 	ble.w	802220a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021e2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021e34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021e38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021e46:	eef0 6a62 	vmov.f32	s13, s5
 8021e4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021e56:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021e5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021e5e:	eef0 6a43 	vmov.f32	s13, s6
 8021e62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e66:	ee12 2a90 	vmov	r2, s5
 8021e6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e72:	ee13 2a10 	vmov	r2, s6
 8021e76:	9323      	str	r3, [sp, #140]	; 0x8c
 8021e78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e7e:	9324      	str	r3, [sp, #144]	; 0x90
 8021e80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021e82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021e84:	3b01      	subs	r3, #1
 8021e86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e8a:	9311      	str	r3, [sp, #68]	; 0x44
 8021e8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e8e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021e92:	bf08      	it	eq
 8021e94:	4613      	moveq	r3, r2
 8021e96:	9308      	str	r3, [sp, #32]
 8021e98:	eeb0 3a67 	vmov.f32	s6, s15
 8021e9c:	eef0 2a47 	vmov.f32	s5, s14
 8021ea0:	e5e1      	b.n	8021a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021ea2:	fb08 f505 	mul.w	r5, r8, r5
 8021ea6:	fb09 5303 	mla	r3, r9, r3, r5
 8021eaa:	e661      	b.n	8021b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021eac:	4681      	mov	r9, r0
 8021eae:	e688      	b.n	8021bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021eb0:	f1c1 0210 	rsb	r2, r1, #16
 8021eb4:	4341      	muls	r1, r0
 8021eb6:	fb09 1902 	mla	r9, r9, r2, r1
 8021eba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021ebe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021ec2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021ec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021eca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021ece:	ea42 0909 	orr.w	r9, r2, r9
 8021ed2:	fa1f f289 	uxth.w	r2, r9
 8021ed6:	e71b      	b.n	8021d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021ed8:	803a      	strh	r2, [r7, #0]
 8021eda:	e75d      	b.n	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021edc:	f115 0e01 	adds.w	lr, r5, #1
 8021ee0:	f53f af5a 	bmi.w	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021ee4:	4572      	cmp	r2, lr
 8021ee6:	f6ff af57 	blt.w	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021eea:	f110 0e01 	adds.w	lr, r0, #1
 8021eee:	f53f af53 	bmi.w	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021ef2:	4573      	cmp	r3, lr
 8021ef4:	f6ff af50 	blt.w	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021ef8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021efa:	9502      	str	r5, [sp, #8]
 8021efc:	b21b      	sxth	r3, r3
 8021efe:	b212      	sxth	r2, r2
 8021f00:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021f04:	9301      	str	r3, [sp, #4]
 8021f06:	9200      	str	r2, [sp, #0]
 8021f08:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021f0c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021f10:	4639      	mov	r1, r7
 8021f12:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021f14:	f7ff fc04 	bl	8021720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021f18:	e73e      	b.n	8021d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021f1a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021f1c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f20:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021f22:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021f26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021f2e:	141f      	asrs	r7, r3, #16
 8021f30:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021f32:	141b      	asrs	r3, r3, #16
 8021f34:	fb01 3707 	mla	r7, r1, r7, r3
 8021f38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021f3a:	fa1f fc82 	uxth.w	ip, r2
 8021f3e:	eb03 0a07 	add.w	sl, r3, r7
 8021f42:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021f46:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021f4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021f4e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021f52:	b29b      	uxth	r3, r3
 8021f54:	2d00      	cmp	r5, #0
 8021f56:	f000 813d 	beq.w	80221d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021f5a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021f5e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021f60:	eb0a 0b01 	add.w	fp, sl, r1
 8021f64:	fa1f fa85 	uxth.w	sl, r5
 8021f68:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f6c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021f70:	fa1f fa8a 	uxth.w	sl, sl
 8021f74:	eba0 000c 	sub.w	r0, r0, ip
 8021f78:	eba3 030a 	sub.w	r3, r3, sl
 8021f7c:	b280      	uxth	r0, r0
 8021f7e:	fb08 f000 	mul.w	r0, r8, r0
 8021f82:	b29b      	uxth	r3, r3
 8021f84:	fb09 0303 	mla	r3, r9, r3, r0
 8021f88:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021f8a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021f8e:	9410      	str	r4, [sp, #64]	; 0x40
 8021f90:	fb0a 3300 	mla	r3, sl, r0, r3
 8021f94:	fb0c 3304 	mla	r3, ip, r4, r3
 8021f98:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f9c:	2b00      	cmp	r3, #0
 8021f9e:	f000 810b 	beq.w	80221b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021fa2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021fa4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fa6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021faa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021fae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021fb2:	f000 8114 	beq.w	80221de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021fb6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021fba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021fbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021fc2:	fb09 f707 	mul.w	r7, r9, r7
 8021fc6:	fb0a fc0c 	mul.w	ip, sl, ip
 8021fca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021fce:	f107 0b20 	add.w	fp, r7, #32
 8021fd2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021fd6:	44cc      	add	ip, r9
 8021fd8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021fdc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021fe0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021fe4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021fe8:	ea4c 0909 	orr.w	r9, ip, r9
 8021fec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021ff0:	8847      	ldrh	r7, [r0, #2]
 8021ff2:	d019      	beq.n	8022028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021ff4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021ff8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021ffc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022000:	fb08 f807 	mul.w	r8, r8, r7
 8022004:	fb0a fc0c 	mul.w	ip, sl, ip
 8022008:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802200c:	f108 0b20 	add.w	fp, r8, #32
 8022010:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022014:	44bc      	add	ip, r7
 8022016:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802201a:	0a3f      	lsrs	r7, r7, #8
 802201c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022020:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022024:	ea4c 0707 	orr.w	r7, ip, r7
 8022028:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802202c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022030:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022034:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022038:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802203c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022040:	ea4c 0909 	orr.w	r9, ip, r9
 8022044:	ea4a 0707 	orr.w	r7, sl, r7
 8022048:	2d00      	cmp	r5, #0
 802204a:	f000 80ca 	beq.w	80221e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802204e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022052:	3901      	subs	r1, #1
 8022054:	0049      	lsls	r1, r1, #1
 8022056:	3102      	adds	r1, #2
 8022058:	eb00 0c01 	add.w	ip, r0, r1
 802205c:	5a41      	ldrh	r1, [r0, r1]
 802205e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022060:	28ff      	cmp	r0, #255	; 0xff
 8022062:	d019      	beq.n	8022098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022064:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022066:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802206a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802206e:	fb04 fa01 	mul.w	sl, r4, r1
 8022072:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022076:	fb08 f800 	mul.w	r8, r8, r0
 802207a:	f10a 0020 	add.w	r0, sl, #32
 802207e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022082:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022086:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802208a:	4441      	add	r1, r8
 802208c:	0a00      	lsrs	r0, r0, #8
 802208e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022092:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022096:	4301      	orrs	r1, r0
 8022098:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802209a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802209e:	2cff      	cmp	r4, #255	; 0xff
 80220a0:	d01a      	beq.n	80220d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80220a2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80220a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220aa:	fb04 fa00 	mul.w	sl, r4, r0
 80220ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80220b2:	fb08 f80c 	mul.w	r8, r8, ip
 80220b6:	f10a 0c20 	add.w	ip, sl, #32
 80220ba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80220be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80220c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220c6:	4440      	add	r0, r8
 80220c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220cc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80220d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80220d4:	ea40 000c 	orr.w	r0, r0, ip
 80220d8:	fb15 fc02 	smulbb	ip, r5, r2
 80220dc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80220e0:	f1c5 0810 	rsb	r8, r5, #16
 80220e4:	eba8 0802 	sub.w	r8, r8, r2
 80220e8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80220ec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80220f0:	437a      	muls	r2, r7
 80220f2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80220f6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80220fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022102:	fb09 2208 	mla	r2, r9, r8, r2
 8022106:	ea4a 0101 	orr.w	r1, sl, r1
 802210a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802210e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022112:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022116:	fb05 2201 	mla	r2, r5, r1, r2
 802211a:	ea4b 0000 	orr.w	r0, fp, r0
 802211e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022122:	0d57      	lsrs	r7, r2, #21
 8022124:	0952      	lsrs	r2, r2, #5
 8022126:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802212a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802212e:	433a      	orrs	r2, r7
 8022130:	2bff      	cmp	r3, #255	; 0xff
 8022132:	b292      	uxth	r2, r2
 8022134:	d102      	bne.n	802213c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022136:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022138:	29ff      	cmp	r1, #255	; 0xff
 802213a:	d063      	beq.n	8022204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 802213c:	980a      	ldr	r0, [sp, #40]	; 0x28
 802213e:	f8be 1000 	ldrh.w	r1, [lr]
 8022142:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022144:	4343      	muls	r3, r0
 8022146:	1c58      	adds	r0, r3, #1
 8022148:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802214c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022150:	1208      	asrs	r0, r1, #8
 8022152:	b2db      	uxtb	r3, r3
 8022154:	1215      	asrs	r5, r2, #8
 8022156:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802215a:	fb10 f003 	smulbb	r0, r0, r3
 802215e:	10cf      	asrs	r7, r1, #3
 8022160:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022164:	00c9      	lsls	r1, r1, #3
 8022166:	fb05 0504 	mla	r5, r5, r4, r0
 802216a:	b2c9      	uxtb	r1, r1
 802216c:	10d0      	asrs	r0, r2, #3
 802216e:	00d2      	lsls	r2, r2, #3
 8022170:	fb11 f103 	smulbb	r1, r1, r3
 8022174:	b2d2      	uxtb	r2, r2
 8022176:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802217a:	fb02 1204 	mla	r2, r2, r4, r1
 802217e:	fb17 f703 	smulbb	r7, r7, r3
 8022182:	b2ad      	uxth	r5, r5
 8022184:	b292      	uxth	r2, r2
 8022186:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802218a:	fb00 7004 	mla	r0, r0, r4, r7
 802218e:	1c6b      	adds	r3, r5, #1
 8022190:	1c57      	adds	r7, r2, #1
 8022192:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022196:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802219a:	b280      	uxth	r0, r0
 802219c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80221a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80221a4:	433d      	orrs	r5, r7
 80221a6:	1c47      	adds	r7, r0, #1
 80221a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80221ac:	097f      	lsrs	r7, r7, #5
 80221ae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80221b2:	433d      	orrs	r5, r7
 80221b4:	f8ae 5000 	strh.w	r5, [lr]
 80221b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80221ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80221bc:	4413      	add	r3, r2
 80221be:	9321      	str	r3, [sp, #132]	; 0x84
 80221c0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80221c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80221c4:	441a      	add	r2, r3
 80221c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80221c8:	9222      	str	r2, [sp, #136]	; 0x88
 80221ca:	3b01      	subs	r3, #1
 80221cc:	f10e 0e02 	add.w	lr, lr, #2
 80221d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80221d2:	e61c      	b.n	8021e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80221d4:	fb08 f000 	mul.w	r0, r8, r0
 80221d8:	fb09 0303 	mla	r3, r9, r3, r0
 80221dc:	e6dc      	b.n	8021f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80221de:	46b9      	mov	r9, r7
 80221e0:	e704      	b.n	8021fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80221e2:	f1c2 0110 	rsb	r1, r2, #16
 80221e6:	437a      	muls	r2, r7
 80221e8:	fb09 2901 	mla	r9, r9, r1, r2
 80221ec:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80221f0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80221f4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80221f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80221fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022200:	4302      	orrs	r2, r0
 8022202:	e795      	b.n	8022130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022204:	f8ae 2000 	strh.w	r2, [lr]
 8022208:	e7d6      	b.n	80221b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802220a:	b017      	add	sp, #92	; 0x5c
 802220c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022214:	b085      	sub	sp, #20
 8022216:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802221a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802221e:	9103      	str	r1, [sp, #12]
 8022220:	fb00 7406 	mla	r4, r0, r6, r7
 8022224:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022228:	2800      	cmp	r0, #0
 802222a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802222e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022232:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022236:	9501      	str	r5, [sp, #4]
 8022238:	eb02 0904 	add.w	r9, r2, r4
 802223c:	f2c0 8141 	blt.w	80224c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022240:	4583      	cmp	fp, r0
 8022242:	f340 813e 	ble.w	80224c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022246:	2f00      	cmp	r7, #0
 8022248:	f2c0 8137 	blt.w	80224ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802224c:	42be      	cmp	r6, r7
 802224e:	f340 8134 	ble.w	80224ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022252:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022256:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802225a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802225e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022262:	4355      	muls	r5, r2
 8022264:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022268:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802226c:	fb0c f203 	mul.w	r2, ip, r3
 8022270:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022274:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022278:	441d      	add	r5, r3
 802227a:	f102 0320 	add.w	r3, r2, #32
 802227e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022282:	0a1b      	lsrs	r3, r3, #8
 8022284:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022288:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802228c:	431c      	orrs	r4, r3
 802228e:	1c7b      	adds	r3, r7, #1
 8022290:	f100 811c 	bmi.w	80224cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022294:	429e      	cmp	r6, r3
 8022296:	f340 8119 	ble.w	80224cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802229a:	2900      	cmp	r1, #0
 802229c:	f000 8119 	beq.w	80224d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80222a0:	9a01      	ldr	r2, [sp, #4]
 80222a2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80222a6:	8855      	ldrh	r5, [r2, #2]
 80222a8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80222ac:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80222b0:	fb08 f802 	mul.w	r8, r8, r2
 80222b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80222b8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80222bc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80222c0:	435d      	muls	r5, r3
 80222c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80222c6:	44d0      	add	r8, sl
 80222c8:	f105 0a20 	add.w	sl, r5, #32
 80222cc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80222d0:	0a2d      	lsrs	r5, r5, #8
 80222d2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80222d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80222da:	432a      	orrs	r2, r5
 80222dc:	3001      	adds	r0, #1
 80222de:	f100 80fe 	bmi.w	80224de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80222e2:	4583      	cmp	fp, r0
 80222e4:	f340 80fb 	ble.w	80224de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80222e8:	f1be 0f00 	cmp.w	lr, #0
 80222ec:	f000 80fc 	beq.w	80224e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80222f0:	2f00      	cmp	r7, #0
 80222f2:	f2c0 80f1 	blt.w	80224d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80222f6:	42be      	cmp	r6, r7
 80222f8:	f340 80ee 	ble.w	80224d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80222fc:	9801      	ldr	r0, [sp, #4]
 80222fe:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022302:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022306:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802230a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802230e:	fb0a fa00 	mul.w	sl, sl, r0
 8022312:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022316:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802231a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802231e:	fb05 f808 	mul.w	r8, r5, r8
 8022322:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022326:	4482      	add	sl, r0
 8022328:	f108 0020 	add.w	r0, r8, #32
 802232c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022330:	0a00      	lsrs	r0, r0, #8
 8022332:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022336:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802233a:	ea4b 0b00 	orr.w	fp, fp, r0
 802233e:	3701      	adds	r7, #1
 8022340:	f100 80d7 	bmi.w	80224f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022344:	42be      	cmp	r6, r7
 8022346:	f340 80d4 	ble.w	80224f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802234a:	2900      	cmp	r1, #0
 802234c:	f000 80d4 	beq.w	80224f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022350:	3601      	adds	r6, #1
 8022352:	9801      	ldr	r0, [sp, #4]
 8022354:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022358:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802235c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022360:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022364:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022368:	fb09 f906 	mul.w	r9, r9, r6
 802236c:	fb07 f800 	mul.w	r8, r7, r0
 8022370:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022374:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022378:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802237c:	44d1      	add	r9, sl
 802237e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022382:	f108 0020 	add.w	r0, r8, #32
 8022386:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802238a:	0a00      	lsrs	r0, r0, #8
 802238c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022390:	4330      	orrs	r0, r6
 8022392:	b28e      	uxth	r6, r1
 8022394:	fa1f f98e 	uxth.w	r9, lr
 8022398:	fb06 f809 	mul.w	r8, r6, r9
 802239c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80223a0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80223a4:	0136      	lsls	r6, r6, #4
 80223a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223aa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80223ae:	9601      	str	r6, [sp, #4]
 80223b0:	ea4a 0404 	orr.w	r4, sl, r4
 80223b4:	fa1f f689 	uxth.w	r6, r9
 80223b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80223bc:	fb11 f90e 	smulbb	r9, r1, lr
 80223c0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80223c4:	9602      	str	r6, [sp, #8]
 80223c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223ca:	4626      	mov	r6, r4
 80223cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80223d0:	f1ce 0410 	rsb	r4, lr, #16
 80223d4:	1a64      	subs	r4, r4, r1
 80223d6:	ea4a 0202 	orr.w	r2, sl, r2
 80223da:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80223de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80223e2:	434a      	muls	r2, r1
 80223e4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80223e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80223f0:	fb04 2406 	mla	r4, r4, r6, r2
 80223f4:	ea4a 0000 	orr.w	r0, sl, r0
 80223f8:	fb09 4200 	mla	r2, r9, r0, r4
 80223fc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022400:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022404:	9801      	ldr	r0, [sp, #4]
 8022406:	9903      	ldr	r1, [sp, #12]
 8022408:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802240c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022410:	9c02      	ldr	r4, [sp, #8]
 8022412:	8809      	ldrh	r1, [r1, #0]
 8022414:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022418:	1b00      	subs	r0, r0, r4
 802241a:	9c01      	ldr	r4, [sp, #4]
 802241c:	eba4 0608 	sub.w	r6, r4, r8
 8022420:	b2b6      	uxth	r6, r6
 8022422:	b280      	uxth	r0, r0
 8022424:	4373      	muls	r3, r6
 8022426:	fb0c 3300 	mla	r3, ip, r0, r3
 802242a:	9802      	ldr	r0, [sp, #8]
 802242c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022430:	fb00 3505 	mla	r5, r0, r5, r3
 8022434:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022438:	fb08 5707 	mla	r7, r8, r7, r5
 802243c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022440:	120b      	asrs	r3, r1, #8
 8022442:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022446:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802244a:	b2ff      	uxtb	r7, r7
 802244c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022450:	10c8      	asrs	r0, r1, #3
 8022452:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022456:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802245a:	00c9      	lsls	r1, r1, #3
 802245c:	437b      	muls	r3, r7
 802245e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022462:	b2c9      	uxtb	r1, r1
 8022464:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022468:	fa1f f28e 	uxth.w	r2, lr
 802246c:	4378      	muls	r0, r7
 802246e:	434f      	muls	r7, r1
 8022470:	1c59      	adds	r1, r3, #1
 8022472:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022476:	1213      	asrs	r3, r2, #8
 8022478:	f023 0307 	bic.w	r3, r3, #7
 802247c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022480:	1c41      	adds	r1, r0, #1
 8022482:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022486:	10d1      	asrs	r1, r2, #3
 8022488:	f021 0103 	bic.w	r1, r1, #3
 802248c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022490:	021b      	lsls	r3, r3, #8
 8022492:	00c9      	lsls	r1, r1, #3
 8022494:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022498:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802249c:	430b      	orrs	r3, r1
 802249e:	1c79      	adds	r1, r7, #1
 80224a0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80224a4:	00d2      	lsls	r2, r2, #3
 80224a6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80224aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80224ae:	431a      	orrs	r2, r3
 80224b0:	9b03      	ldr	r3, [sp, #12]
 80224b2:	801a      	strh	r2, [r3, #0]
 80224b4:	b005      	add	sp, #20
 80224b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224ba:	f04f 0c00 	mov.w	ip, #0
 80224be:	4664      	mov	r4, ip
 80224c0:	e6e5      	b.n	802228e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80224c2:	2300      	movs	r3, #0
 80224c4:	469c      	mov	ip, r3
 80224c6:	461a      	mov	r2, r3
 80224c8:	461c      	mov	r4, r3
 80224ca:	e707      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80224cc:	2300      	movs	r3, #0
 80224ce:	461a      	mov	r2, r3
 80224d0:	e704      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80224d2:	460b      	mov	r3, r1
 80224d4:	460a      	mov	r2, r1
 80224d6:	e701      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80224d8:	2500      	movs	r5, #0
 80224da:	46ab      	mov	fp, r5
 80224dc:	e72f      	b.n	802233e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80224de:	2700      	movs	r7, #0
 80224e0:	463d      	mov	r5, r7
 80224e2:	4638      	mov	r0, r7
 80224e4:	46bb      	mov	fp, r7
 80224e6:	e754      	b.n	8022392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80224e8:	4677      	mov	r7, lr
 80224ea:	4675      	mov	r5, lr
 80224ec:	4670      	mov	r0, lr
 80224ee:	46f3      	mov	fp, lr
 80224f0:	e74f      	b.n	8022392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80224f2:	2700      	movs	r7, #0
 80224f4:	4638      	mov	r0, r7
 80224f6:	e74c      	b.n	8022392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80224f8:	460f      	mov	r7, r1
 80224fa:	4608      	mov	r0, r1
 80224fc:	e749      	b.n	8022392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022500 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022504:	b093      	sub	sp, #76	; 0x4c
 8022506:	9210      	str	r2, [sp, #64]	; 0x40
 8022508:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802250a:	910e      	str	r1, [sp, #56]	; 0x38
 802250c:	9306      	str	r3, [sp, #24]
 802250e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022512:	9011      	str	r0, [sp, #68]	; 0x44
 8022514:	6850      	ldr	r0, [r2, #4]
 8022516:	6812      	ldr	r2, [r2, #0]
 8022518:	fb00 1303 	mla	r3, r0, r3, r1
 802251c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022520:	9307      	str	r3, [sp, #28]
 8022522:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022524:	681b      	ldr	r3, [r3, #0]
 8022526:	9308      	str	r3, [sp, #32]
 8022528:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802252a:	685b      	ldr	r3, [r3, #4]
 802252c:	9309      	str	r3, [sp, #36]	; 0x24
 802252e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022530:	2b00      	cmp	r3, #0
 8022532:	dc03      	bgt.n	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022534:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022536:	2b00      	cmp	r3, #0
 8022538:	f340 83b4 	ble.w	8022ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802253c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802253e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022542:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022546:	1e48      	subs	r0, r1, #1
 8022548:	1e55      	subs	r5, r2, #1
 802254a:	9b06      	ldr	r3, [sp, #24]
 802254c:	2b00      	cmp	r3, #0
 802254e:	f340 8163 	ble.w	8022818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022552:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022554:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022556:	1436      	asrs	r6, r6, #16
 8022558:	ea4f 4323 	mov.w	r3, r3, asr #16
 802255c:	d406      	bmi.n	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802255e:	4286      	cmp	r6, r0
 8022560:	da04      	bge.n	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022562:	2b00      	cmp	r3, #0
 8022564:	db02      	blt.n	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022566:	42ab      	cmp	r3, r5
 8022568:	f2c0 8157 	blt.w	802281a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802256c:	3601      	adds	r6, #1
 802256e:	f100 8144 	bmi.w	80227fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022572:	42b1      	cmp	r1, r6
 8022574:	f2c0 8141 	blt.w	80227fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022578:	3301      	adds	r3, #1
 802257a:	f100 813e 	bmi.w	80227fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802257e:	429a      	cmp	r2, r3
 8022580:	f2c0 813b 	blt.w	80227fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022584:	9b06      	ldr	r3, [sp, #24]
 8022586:	9f07      	ldr	r7, [sp, #28]
 8022588:	930f      	str	r3, [sp, #60]	; 0x3c
 802258a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802258e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022590:	2b00      	cmp	r3, #0
 8022592:	f340 8164 	ble.w	802285e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022596:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022598:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802259a:	1418      	asrs	r0, r3, #16
 802259c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802259e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80225a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80225a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80225a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80225aa:	142d      	asrs	r5, r5, #16
 80225ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80225b0:	f100 81ee 	bmi.w	8022990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80225b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80225b8:	4575      	cmp	r5, lr
 80225ba:	f280 81e9 	bge.w	8022990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80225be:	2800      	cmp	r0, #0
 80225c0:	f2c0 81e6 	blt.w	8022990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80225c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80225c8:	4570      	cmp	r0, lr
 80225ca:	f280 81e1 	bge.w	8022990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80225ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80225d0:	b212      	sxth	r2, r2
 80225d2:	fb00 5002 	mla	r0, r0, r2, r5
 80225d6:	fa1f fe81 	uxth.w	lr, r1
 80225da:	eb03 0a00 	add.w	sl, r3, r0
 80225de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80225e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80225e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80225ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80225ee:	b29b      	uxth	r3, r3
 80225f0:	f1bc 0f00 	cmp.w	ip, #0
 80225f4:	f000 8179 	beq.w	80228ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80225f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80225fc:	940a      	str	r4, [sp, #40]	; 0x28
 80225fe:	eb0a 0b02 	add.w	fp, sl, r2
 8022602:	fa1f fa8c 	uxth.w	sl, ip
 8022606:	fb0a fe0e 	mul.w	lr, sl, lr
 802260a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802260e:	fa1f fa8a 	uxth.w	sl, sl
 8022612:	eba5 050e 	sub.w	r5, r5, lr
 8022616:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802261a:	940b      	str	r4, [sp, #44]	; 0x2c
 802261c:	eba3 030a 	sub.w	r3, r3, sl
 8022620:	b2ad      	uxth	r5, r5
 8022622:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022624:	b29b      	uxth	r3, r3
 8022626:	fb08 f505 	mul.w	r5, r8, r5
 802262a:	fb09 5303 	mla	r3, r9, r3, r5
 802262e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022632:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022634:	fb0e 3304 	mla	r3, lr, r4, r3
 8022638:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802263c:	2b00      	cmp	r3, #0
 802263e:	f000 80cf 	beq.w	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022642:	9c08      	ldr	r4, [sp, #32]
 8022644:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022648:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802264c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022650:	f000 8150 	beq.w	80228f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022654:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022658:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802265c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022660:	fb09 f000 	mul.w	r0, r9, r0
 8022664:	fb0a fe0e 	mul.w	lr, sl, lr
 8022668:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802266c:	f100 0b20 	add.w	fp, r0, #32
 8022670:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022674:	44ce      	add	lr, r9
 8022676:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802267a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802267e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022682:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022686:	ea4e 0909 	orr.w	r9, lr, r9
 802268a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802268e:	8868      	ldrh	r0, [r5, #2]
 8022690:	d019      	beq.n	80226c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022692:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022696:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802269a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802269e:	fb08 f800 	mul.w	r8, r8, r0
 80226a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80226a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80226aa:	f108 0b20 	add.w	fp, r8, #32
 80226ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80226b2:	4486      	add	lr, r0
 80226b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80226b8:	0a00      	lsrs	r0, r0, #8
 80226ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80226be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226c2:	ea4e 0000 	orr.w	r0, lr, r0
 80226c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80226ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80226ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80226d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80226d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80226de:	ea4e 0909 	orr.w	r9, lr, r9
 80226e2:	ea4a 0000 	orr.w	r0, sl, r0
 80226e6:	f1bc 0f00 	cmp.w	ip, #0
 80226ea:	f000 8105 	beq.w	80228f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80226ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80226f2:	3a01      	subs	r2, #1
 80226f4:	0052      	lsls	r2, r2, #1
 80226f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80226f8:	3202      	adds	r2, #2
 80226fa:	2cff      	cmp	r4, #255	; 0xff
 80226fc:	eb05 0e02 	add.w	lr, r5, r2
 8022700:	5aaa      	ldrh	r2, [r5, r2]
 8022702:	d018      	beq.n	8022736 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022704:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022708:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802270c:	fb04 fa02 	mul.w	sl, r4, r2
 8022710:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022714:	fb08 f805 	mul.w	r8, r8, r5
 8022718:	f10a 0520 	add.w	r5, sl, #32
 802271c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022720:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022724:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022728:	4442      	add	r2, r8
 802272a:	0a2d      	lsrs	r5, r5, #8
 802272c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022730:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022734:	432a      	orrs	r2, r5
 8022736:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022738:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802273c:	2cff      	cmp	r4, #255	; 0xff
 802273e:	d01a      	beq.n	8022776 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022740:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022744:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022748:	fb04 fa05 	mul.w	sl, r4, r5
 802274c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022750:	fb08 f80e 	mul.w	r8, r8, lr
 8022754:	f10a 0e20 	add.w	lr, sl, #32
 8022758:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802275c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022760:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022764:	4445      	add	r5, r8
 8022766:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802276a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802276e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022772:	ea45 050e 	orr.w	r5, r5, lr
 8022776:	fb1c fe01 	smulbb	lr, ip, r1
 802277a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802277e:	f1cc 0810 	rsb	r8, ip, #16
 8022782:	eba8 0801 	sub.w	r8, r8, r1
 8022786:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802278a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802278e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022792:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022796:	4341      	muls	r1, r0
 8022798:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802279c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80227a0:	ea4a 0202 	orr.w	r2, sl, r2
 80227a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80227a8:	fb09 1108 	mla	r1, r9, r8, r1
 80227ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80227b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80227b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80227b8:	ea4b 0505 	orr.w	r5, fp, r5
 80227bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80227c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80227c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80227c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80227d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80227d4:	fa1f f28e 	uxth.w	r2, lr
 80227d8:	2bff      	cmp	r3, #255	; 0xff
 80227da:	f040 80a1 	bne.w	8022920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80227de:	803a      	strh	r2, [r7, #0]
 80227e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227e2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80227e4:	4413      	add	r3, r2
 80227e6:	931d      	str	r3, [sp, #116]	; 0x74
 80227e8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80227ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80227ec:	441a      	add	r2, r3
 80227ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80227f0:	921e      	str	r2, [sp, #120]	; 0x78
 80227f2:	3b01      	subs	r3, #1
 80227f4:	3702      	adds	r7, #2
 80227f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80227f8:	e6c9      	b.n	802258e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80227fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227fc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80227fe:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022800:	4433      	add	r3, r6
 8022802:	931d      	str	r3, [sp, #116]	; 0x74
 8022804:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022806:	441c      	add	r4, r3
 8022808:	9b06      	ldr	r3, [sp, #24]
 802280a:	941e      	str	r4, [sp, #120]	; 0x78
 802280c:	3b01      	subs	r3, #1
 802280e:	9306      	str	r3, [sp, #24]
 8022810:	9b07      	ldr	r3, [sp, #28]
 8022812:	3302      	adds	r3, #2
 8022814:	9307      	str	r3, [sp, #28]
 8022816:	e698      	b.n	802254a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022818:	d028      	beq.n	802286c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802281a:	9b06      	ldr	r3, [sp, #24]
 802281c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802281e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022820:	3b01      	subs	r3, #1
 8022822:	fb00 5003 	mla	r0, r0, r3, r5
 8022826:	1400      	asrs	r0, r0, #16
 8022828:	f53f aeac 	bmi.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802282c:	3901      	subs	r1, #1
 802282e:	4288      	cmp	r0, r1
 8022830:	f6bf aea8 	bge.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022834:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022836:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022838:	fb01 0303 	mla	r3, r1, r3, r0
 802283c:	141b      	asrs	r3, r3, #16
 802283e:	f53f aea1 	bmi.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022842:	3a01      	subs	r2, #1
 8022844:	4293      	cmp	r3, r2
 8022846:	f6bf ae9d 	bge.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802284a:	9b06      	ldr	r3, [sp, #24]
 802284c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022850:	930f      	str	r3, [sp, #60]	; 0x3c
 8022852:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022856:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022858:	2b00      	cmp	r3, #0
 802285a:	f300 80b6 	bgt.w	80229ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802285e:	9b06      	ldr	r3, [sp, #24]
 8022860:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022864:	9b07      	ldr	r3, [sp, #28]
 8022866:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802286a:	9307      	str	r3, [sp, #28]
 802286c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802286e:	2b00      	cmp	r3, #0
 8022870:	f340 8218 	ble.w	8022ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022874:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022878:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802287c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022880:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022882:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022886:	ee31 1a05 	vadd.f32	s2, s2, s10
 802288a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802288e:	eef0 6a62 	vmov.f32	s13, s5
 8022892:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802289a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802289e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80228a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80228a6:	eef0 6a43 	vmov.f32	s13, s6
 80228aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80228ae:	ee12 2a90 	vmov	r2, s5
 80228b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80228b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80228ba:	ee13 2a10 	vmov	r2, s6
 80228be:	931f      	str	r3, [sp, #124]	; 0x7c
 80228c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80228c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80228c6:	9320      	str	r3, [sp, #128]	; 0x80
 80228c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80228ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80228cc:	3b01      	subs	r3, #1
 80228ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228d2:	930e      	str	r3, [sp, #56]	; 0x38
 80228d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80228d6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80228da:	bf08      	it	eq
 80228dc:	4613      	moveq	r3, r2
 80228de:	9306      	str	r3, [sp, #24]
 80228e0:	eeb0 3a67 	vmov.f32	s6, s15
 80228e4:	eef0 2a47 	vmov.f32	s5, s14
 80228e8:	e621      	b.n	802252e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80228ea:	fb08 f505 	mul.w	r5, r8, r5
 80228ee:	fb09 5303 	mla	r3, r9, r3, r5
 80228f2:	e6a1      	b.n	8022638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80228f4:	4681      	mov	r9, r0
 80228f6:	e6c8      	b.n	802268a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80228f8:	f1c1 0210 	rsb	r2, r1, #16
 80228fc:	4341      	muls	r1, r0
 80228fe:	fb09 1902 	mla	r9, r9, r2, r1
 8022902:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022906:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802290a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802290e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022912:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022916:	ea42 0909 	orr.w	r9, r2, r9
 802291a:	fa1f f289 	uxth.w	r2, r9
 802291e:	e75b      	b.n	80227d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022920:	f8b7 c000 	ldrh.w	ip, [r7]
 8022924:	43db      	mvns	r3, r3
 8022926:	ea4f 202c 	mov.w	r0, ip, asr #8
 802292a:	fa5f fe83 	uxtb.w	lr, r3
 802292e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022932:	fb00 f00e 	mul.w	r0, r0, lr
 8022936:	1c41      	adds	r1, r0, #1
 8022938:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802293c:	1211      	asrs	r1, r2, #8
 802293e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022942:	f021 0107 	bic.w	r1, r1, #7
 8022946:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802294a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802294e:	48d7      	ldr	r0, [pc, #860]	; (8022cac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022950:	fb05 f50e 	mul.w	r5, r5, lr
 8022954:	b2c9      	uxtb	r1, r1
 8022956:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802295a:	1c69      	adds	r1, r5, #1
 802295c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022960:	10d1      	asrs	r1, r2, #3
 8022962:	f021 0103 	bic.w	r1, r1, #3
 8022966:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802296a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802296e:	b2db      	uxtb	r3, r3
 8022970:	00c9      	lsls	r1, r1, #3
 8022972:	fb03 f30e 	mul.w	r3, r3, lr
 8022976:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802297a:	4301      	orrs	r1, r0
 802297c:	1c58      	adds	r0, r3, #1
 802297e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022982:	00d2      	lsls	r2, r2, #3
 8022984:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022988:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802298c:	430a      	orrs	r2, r1
 802298e:	e726      	b.n	80227de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022990:	f115 0e01 	adds.w	lr, r5, #1
 8022994:	f53f af24 	bmi.w	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022998:	4572      	cmp	r2, lr
 802299a:	f6ff af21 	blt.w	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802299e:	f110 0e01 	adds.w	lr, r0, #1
 80229a2:	f53f af1d 	bmi.w	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80229a6:	4573      	cmp	r3, lr
 80229a8:	f6ff af1a 	blt.w	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80229ac:	b21b      	sxth	r3, r3
 80229ae:	b212      	sxth	r2, r2
 80229b0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80229b4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80229b8:	9301      	str	r3, [sp, #4]
 80229ba:	9200      	str	r2, [sp, #0]
 80229bc:	4639      	mov	r1, r7
 80229be:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80229c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80229c4:	f7ff fc24 	bl	8022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80229c8:	e70a      	b.n	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80229ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80229cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80229d0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80229d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80229d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229dc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80229de:	141f      	asrs	r7, r3, #16
 80229e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80229e2:	141b      	asrs	r3, r3, #16
 80229e4:	fb01 3707 	mla	r7, r1, r7, r3
 80229e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229ea:	fa1f fc82 	uxth.w	ip, r2
 80229ee:	eb03 0a07 	add.w	sl, r3, r7
 80229f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80229f6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80229fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80229fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022a02:	b29b      	uxth	r3, r3
 8022a04:	2d00      	cmp	r5, #0
 8022a06:	f000 80fe 	beq.w	8022c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022a0a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022a0e:	940c      	str	r4, [sp, #48]	; 0x30
 8022a10:	eb0a 0b01 	add.w	fp, sl, r1
 8022a14:	fa1f fa85 	uxth.w	sl, r5
 8022a18:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a1c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022a20:	fa1f fa8a 	uxth.w	sl, sl
 8022a24:	eba0 000c 	sub.w	r0, r0, ip
 8022a28:	eba3 030a 	sub.w	r3, r3, sl
 8022a2c:	b280      	uxth	r0, r0
 8022a2e:	fb08 f000 	mul.w	r0, r8, r0
 8022a32:	b29b      	uxth	r3, r3
 8022a34:	fb09 0303 	mla	r3, r9, r3, r0
 8022a38:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022a3a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022a3e:	940d      	str	r4, [sp, #52]	; 0x34
 8022a40:	fb0a 3300 	mla	r3, sl, r0, r3
 8022a44:	fb0c 3304 	mla	r3, ip, r4, r3
 8022a48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022a4c:	2b00      	cmp	r3, #0
 8022a4e:	f000 80cc 	beq.w	8022bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022a52:	9808      	ldr	r0, [sp, #32]
 8022a54:	9c08      	ldr	r4, [sp, #32]
 8022a56:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022a5a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022a5e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022a62:	f000 80d5 	beq.w	8022c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022a66:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a6a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022a6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a72:	fb09 f707 	mul.w	r7, r9, r7
 8022a76:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a7a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022a7e:	f107 0b20 	add.w	fp, r7, #32
 8022a82:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022a86:	44cc      	add	ip, r9
 8022a88:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022a8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a90:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022a94:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022a98:	ea4c 0909 	orr.w	r9, ip, r9
 8022a9c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022aa0:	8847      	ldrh	r7, [r0, #2]
 8022aa2:	d019      	beq.n	8022ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022aa4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022aa8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022aac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ab0:	fb08 f807 	mul.w	r8, r8, r7
 8022ab4:	fb0a fc0c 	mul.w	ip, sl, ip
 8022ab8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022abc:	f108 0b20 	add.w	fp, r8, #32
 8022ac0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022ac4:	44bc      	add	ip, r7
 8022ac6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022aca:	0a3f      	lsrs	r7, r7, #8
 8022acc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022ad0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ad4:	ea4c 0707 	orr.w	r7, ip, r7
 8022ad8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022adc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022ae0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ae4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ae8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022aec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022af0:	ea4c 0909 	orr.w	r9, ip, r9
 8022af4:	ea4a 0707 	orr.w	r7, sl, r7
 8022af8:	2d00      	cmp	r5, #0
 8022afa:	f000 808b 	beq.w	8022c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022afe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022b02:	3901      	subs	r1, #1
 8022b04:	0049      	lsls	r1, r1, #1
 8022b06:	3102      	adds	r1, #2
 8022b08:	eb00 0c01 	add.w	ip, r0, r1
 8022b0c:	5a41      	ldrh	r1, [r0, r1]
 8022b0e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022b10:	28ff      	cmp	r0, #255	; 0xff
 8022b12:	d019      	beq.n	8022b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022b14:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022b16:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022b1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b1e:	fb04 fa01 	mul.w	sl, r4, r1
 8022b22:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b26:	fb08 f800 	mul.w	r8, r8, r0
 8022b2a:	f10a 0020 	add.w	r0, sl, #32
 8022b2e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022b32:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022b36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b3a:	4441      	add	r1, r8
 8022b3c:	0a00      	lsrs	r0, r0, #8
 8022b3e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022b42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b46:	4301      	orrs	r1, r0
 8022b48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b4a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022b4e:	2cff      	cmp	r4, #255	; 0xff
 8022b50:	d01a      	beq.n	8022b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022b52:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022b56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b5a:	fb04 fa00 	mul.w	sl, r4, r0
 8022b5e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b62:	fb08 f80c 	mul.w	r8, r8, ip
 8022b66:	f10a 0c20 	add.w	ip, sl, #32
 8022b6a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022b6e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022b72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b76:	4440      	add	r0, r8
 8022b78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b7c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022b80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022b84:	ea40 000c 	orr.w	r0, r0, ip
 8022b88:	fb15 fc02 	smulbb	ip, r5, r2
 8022b8c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022b90:	f1c5 0810 	rsb	r8, r5, #16
 8022b94:	eba8 0802 	sub.w	r8, r8, r2
 8022b98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022b9c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022ba0:	437a      	muls	r2, r7
 8022ba2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022ba6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022baa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022bae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022bb2:	fb09 2208 	mla	r2, r9, r8, r2
 8022bb6:	ea4a 0101 	orr.w	r1, sl, r1
 8022bba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022bbe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022bc6:	fb05 2201 	mla	r2, r5, r1, r2
 8022bca:	ea4b 0000 	orr.w	r0, fp, r0
 8022bce:	fb0c 2200 	mla	r2, ip, r0, r2
 8022bd2:	0d57      	lsrs	r7, r2, #21
 8022bd4:	0952      	lsrs	r2, r2, #5
 8022bd6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022bde:	433a      	orrs	r2, r7
 8022be0:	2bff      	cmp	r3, #255	; 0xff
 8022be2:	b292      	uxth	r2, r2
 8022be4:	d127      	bne.n	8022c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022be6:	f8ae 2000 	strh.w	r2, [lr]
 8022bea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022bec:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022bee:	4413      	add	r3, r2
 8022bf0:	931d      	str	r3, [sp, #116]	; 0x74
 8022bf2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022bf4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022bf6:	441a      	add	r2, r3
 8022bf8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022bfa:	921e      	str	r2, [sp, #120]	; 0x78
 8022bfc:	3b01      	subs	r3, #1
 8022bfe:	f10e 0e02 	add.w	lr, lr, #2
 8022c02:	930f      	str	r3, [sp, #60]	; 0x3c
 8022c04:	e627      	b.n	8022856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022c06:	fb08 f000 	mul.w	r0, r8, r0
 8022c0a:	fb09 0303 	mla	r3, r9, r3, r0
 8022c0e:	e71b      	b.n	8022a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022c10:	46b9      	mov	r9, r7
 8022c12:	e743      	b.n	8022a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022c14:	f1c2 0110 	rsb	r1, r2, #16
 8022c18:	437a      	muls	r2, r7
 8022c1a:	fb09 2901 	mla	r9, r9, r1, r2
 8022c1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022c22:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022c26:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022c2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c32:	4302      	orrs	r2, r0
 8022c34:	e7d4      	b.n	8022be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022c36:	f8be 7000 	ldrh.w	r7, [lr]
 8022c3a:	4c1c      	ldr	r4, [pc, #112]	; (8022cac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022c3c:	43db      	mvns	r3, r3
 8022c3e:	1238      	asrs	r0, r7, #8
 8022c40:	fa5f fc83 	uxtb.w	ip, r3
 8022c44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c48:	10fd      	asrs	r5, r7, #3
 8022c4a:	fb00 f00c 	mul.w	r0, r0, ip
 8022c4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022c52:	fb05 f10c 	mul.w	r1, r5, ip
 8022c56:	1c45      	adds	r5, r0, #1
 8022c58:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022c5c:	1215      	asrs	r5, r2, #8
 8022c5e:	f025 0507 	bic.w	r5, r5, #7
 8022c62:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022c66:	1c4d      	adds	r5, r1, #1
 8022c68:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022c6c:	10d1      	asrs	r1, r2, #3
 8022c6e:	f021 0103 	bic.w	r1, r1, #3
 8022c72:	00fb      	lsls	r3, r7, #3
 8022c74:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022c78:	b2db      	uxtb	r3, r3
 8022c7a:	b2c0      	uxtb	r0, r0
 8022c7c:	00c9      	lsls	r1, r1, #3
 8022c7e:	fb03 f30c 	mul.w	r3, r3, ip
 8022c82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022c8a:	4308      	orrs	r0, r1
 8022c8c:	1c59      	adds	r1, r3, #1
 8022c8e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022c92:	00d2      	lsls	r2, r2, #3
 8022c94:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022c98:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022c9c:	4318      	orrs	r0, r3
 8022c9e:	f8ae 0000 	strh.w	r0, [lr]
 8022ca2:	e7a2      	b.n	8022bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022ca4:	b013      	add	sp, #76	; 0x4c
 8022ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022caa:	bf00      	nop
 8022cac:	fffff800 	.word	0xfffff800

08022cb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022cb4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022cb8:	fb05 4c03 	mla	ip, r5, r3, r4
 8022cbc:	2d00      	cmp	r5, #0
 8022cbe:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022cc2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022cc6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022cca:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022cce:	8808      	ldrh	r0, [r1, #0]
 8022cd0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022cd4:	f2c0 80a7 	blt.w	8022e26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022cd8:	45aa      	cmp	sl, r5
 8022cda:	f340 80a4 	ble.w	8022e26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022cde:	2c00      	cmp	r4, #0
 8022ce0:	f2c0 809f 	blt.w	8022e22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ce4:	42a3      	cmp	r3, r4
 8022ce6:	f340 809c 	ble.w	8022e22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022cea:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022cee:	1c62      	adds	r2, r4, #1
 8022cf0:	f100 809c 	bmi.w	8022e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022cf4:	4293      	cmp	r3, r2
 8022cf6:	f340 8099 	ble.w	8022e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022cfa:	f1b9 0f00 	cmp.w	r9, #0
 8022cfe:	f000 8095 	beq.w	8022e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022d02:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022d06:	3501      	adds	r5, #1
 8022d08:	f100 8094 	bmi.w	8022e34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022d0c:	45aa      	cmp	sl, r5
 8022d0e:	f340 8091 	ble.w	8022e34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022d12:	2f00      	cmp	r7, #0
 8022d14:	f000 808e 	beq.w	8022e34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022d18:	2c00      	cmp	r4, #0
 8022d1a:	f2c0 8089 	blt.w	8022e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022d1e:	42a3      	cmp	r3, r4
 8022d20:	f340 8086 	ble.w	8022e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022d24:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022d28:	3401      	adds	r4, #1
 8022d2a:	f100 8086 	bmi.w	8022e3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022d2e:	42a3      	cmp	r3, r4
 8022d30:	f340 8083 	ble.w	8022e3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022d34:	f1b9 0f00 	cmp.w	r9, #0
 8022d38:	d07f      	beq.n	8022e3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022d3a:	3301      	adds	r3, #1
 8022d3c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022d40:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022d44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022d48:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022d4c:	fb19 fe07 	smulbb	lr, r9, r7
 8022d50:	ea44 0808 	orr.w	r8, r4, r8
 8022d54:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022d58:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022d5c:	f1c7 0210 	rsb	r2, r7, #16
 8022d60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022d64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d68:	ea44 0c0c 	orr.w	ip, r4, ip
 8022d6c:	eba2 0209 	sub.w	r2, r2, r9
 8022d70:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022d74:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022d78:	fb04 f40c 	mul.w	r4, r4, ip
 8022d7c:	fb02 4808 	mla	r8, r2, r8, r4
 8022d80:	041a      	lsls	r2, r3, #16
 8022d82:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d8a:	4313      	orrs	r3, r2
 8022d8c:	042a      	lsls	r2, r5, #16
 8022d8e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d92:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022d96:	fb0e 8303 	mla	r3, lr, r3, r8
 8022d9a:	432a      	orrs	r2, r5
 8022d9c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022da0:	fb07 3202 	mla	r2, r7, r2, r3
 8022da4:	0d53      	lsrs	r3, r2, #21
 8022da6:	0952      	lsrs	r2, r2, #5
 8022da8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022dac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022db0:	431a      	orrs	r2, r3
 8022db2:	b293      	uxth	r3, r2
 8022db4:	b2b4      	uxth	r4, r6
 8022db6:	1202      	asrs	r2, r0, #8
 8022db8:	43f6      	mvns	r6, r6
 8022dba:	b2f6      	uxtb	r6, r6
 8022dbc:	121d      	asrs	r5, r3, #8
 8022dbe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022dc2:	fb12 f206 	smulbb	r2, r2, r6
 8022dc6:	10c7      	asrs	r7, r0, #3
 8022dc8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022dcc:	00c0      	lsls	r0, r0, #3
 8022dce:	fb05 2504 	mla	r5, r5, r4, r2
 8022dd2:	b2c0      	uxtb	r0, r0
 8022dd4:	10da      	asrs	r2, r3, #3
 8022dd6:	00db      	lsls	r3, r3, #3
 8022dd8:	b2db      	uxtb	r3, r3
 8022dda:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022dde:	fb10 f006 	smulbb	r0, r0, r6
 8022de2:	b2ad      	uxth	r5, r5
 8022de4:	fb03 0004 	mla	r0, r3, r4, r0
 8022de8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022dec:	fb17 f706 	smulbb	r7, r7, r6
 8022df0:	b280      	uxth	r0, r0
 8022df2:	1c6b      	adds	r3, r5, #1
 8022df4:	fb02 7204 	mla	r2, r2, r4, r7
 8022df8:	b292      	uxth	r2, r2
 8022dfa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022dfe:	1c43      	adds	r3, r0, #1
 8022e00:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022e04:	1c50      	adds	r0, r2, #1
 8022e06:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022e0a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022e0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022e12:	0952      	lsrs	r2, r2, #5
 8022e14:	432b      	orrs	r3, r5
 8022e16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e1a:	4313      	orrs	r3, r2
 8022e1c:	800b      	strh	r3, [r1, #0]
 8022e1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022e22:	4680      	mov	r8, r0
 8022e24:	e763      	b.n	8022cee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022e26:	4684      	mov	ip, r0
 8022e28:	4680      	mov	r8, r0
 8022e2a:	e76c      	b.n	8022d06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022e2c:	4684      	mov	ip, r0
 8022e2e:	e76a      	b.n	8022d06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022e30:	4605      	mov	r5, r0
 8022e32:	e779      	b.n	8022d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022e34:	4603      	mov	r3, r0
 8022e36:	4605      	mov	r5, r0
 8022e38:	e782      	b.n	8022d40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022e3a:	4603      	mov	r3, r0
 8022e3c:	e780      	b.n	8022d40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e42:	b093      	sub	sp, #76	; 0x4c
 8022e44:	461d      	mov	r5, r3
 8022e46:	9210      	str	r2, [sp, #64]	; 0x40
 8022e48:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022e4a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022e4e:	920b      	str	r2, [sp, #44]	; 0x2c
 8022e50:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022e54:	910a      	str	r1, [sp, #40]	; 0x28
 8022e56:	6859      	ldr	r1, [r3, #4]
 8022e58:	681b      	ldr	r3, [r3, #0]
 8022e5a:	9011      	str	r0, [sp, #68]	; 0x44
 8022e5c:	fb01 2707 	mla	r7, r1, r7, r2
 8022e60:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022e64:	9307      	str	r3, [sp, #28]
 8022e66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e68:	681b      	ldr	r3, [r3, #0]
 8022e6a:	9309      	str	r3, [sp, #36]	; 0x24
 8022e6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022e6e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022e72:	43db      	mvns	r3, r3
 8022e74:	b2db      	uxtb	r3, r3
 8022e76:	9308      	str	r3, [sp, #32]
 8022e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e7a:	2b00      	cmp	r3, #0
 8022e7c:	dc03      	bgt.n	8022e86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022e7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022e80:	2b00      	cmp	r3, #0
 8022e82:	f340 8203 	ble.w	802328c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022e86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022e90:	1e48      	subs	r0, r1, #1
 8022e92:	f102 3cff 	add.w	ip, r2, #4294967295
 8022e96:	2d00      	cmp	r5, #0
 8022e98:	f340 80da 	ble.w	8023050 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022e9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ea0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022ea4:	d406      	bmi.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022ea6:	4586      	cmp	lr, r0
 8022ea8:	da04      	bge.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022eaa:	2b00      	cmp	r3, #0
 8022eac:	db02      	blt.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022eae:	4563      	cmp	r3, ip
 8022eb0:	f2c0 80cf 	blt.w	8023052 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022eb4:	f11e 0e01 	adds.w	lr, lr, #1
 8022eb8:	f100 80c1 	bmi.w	802303e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ebc:	4571      	cmp	r1, lr
 8022ebe:	f2c0 80be 	blt.w	802303e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ec2:	3301      	adds	r3, #1
 8022ec4:	f100 80bb 	bmi.w	802303e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ec8:	429a      	cmp	r2, r3
 8022eca:	f2c0 80b8 	blt.w	802303e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ece:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022ed2:	46a9      	mov	r9, r5
 8022ed4:	f1b9 0f00 	cmp.w	r9, #0
 8022ed8:	f340 80d8 	ble.w	802308c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022edc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ede:	1421      	asrs	r1, r4, #16
 8022ee0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022ee4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022ee8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022eec:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022ef0:	f100 8111 	bmi.w	8023116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022ef4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022ef8:	4551      	cmp	r1, sl
 8022efa:	f280 810c 	bge.w	8023116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022efe:	2800      	cmp	r0, #0
 8022f00:	f2c0 8109 	blt.w	8023116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022f04:	f103 3aff 	add.w	sl, r3, #4294967295
 8022f08:	4550      	cmp	r0, sl
 8022f0a:	f280 8104 	bge.w	8023116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022f0e:	fa0f f38e 	sxth.w	r3, lr
 8022f12:	fb00 1103 	mla	r1, r0, r3, r1
 8022f16:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022f18:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022f1c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022f20:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022f24:	f1bc 0f00 	cmp.w	ip, #0
 8022f28:	d007      	beq.n	8022f3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022f2a:	005b      	lsls	r3, r3, #1
 8022f2c:	eb0a 0003 	add.w	r0, sl, r3
 8022f30:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022f34:	930c      	str	r3, [sp, #48]	; 0x30
 8022f36:	8843      	ldrh	r3, [r0, #2]
 8022f38:	930d      	str	r3, [sp, #52]	; 0x34
 8022f3a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022f3e:	fb12 f30c 	smulbb	r3, r2, ip
 8022f42:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022f46:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022f4a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f4e:	10db      	asrs	r3, r3, #3
 8022f50:	ea40 000e 	orr.w	r0, r0, lr
 8022f54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f58:	f1cc 0e10 	rsb	lr, ip, #16
 8022f5c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f60:	ebae 0e02 	sub.w	lr, lr, r2
 8022f64:	ea4a 0101 	orr.w	r1, sl, r1
 8022f68:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f6c:	4351      	muls	r1, r2
 8022f6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022f70:	9f08      	ldr	r7, [sp, #32]
 8022f72:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022f76:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022f7a:	0410      	lsls	r0, r2, #16
 8022f7c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f80:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f84:	4310      	orrs	r0, r2
 8022f86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022f88:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022f8a:	0412      	lsls	r2, r2, #16
 8022f8c:	fb03 e000 	mla	r0, r3, r0, lr
 8022f90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f94:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022f98:	ea42 020e 	orr.w	r2, r2, lr
 8022f9c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022fa0:	fb03 0302 	mla	r3, r3, r2, r0
 8022fa4:	0d5a      	lsrs	r2, r3, #21
 8022fa6:	095b      	lsrs	r3, r3, #5
 8022fa8:	f8b8 0000 	ldrh.w	r0, [r8]
 8022fac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fb0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022fb4:	4313      	orrs	r3, r2
 8022fb6:	b29b      	uxth	r3, r3
 8022fb8:	1201      	asrs	r1, r0, #8
 8022fba:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022fbe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022fc2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022fc6:	fb11 f107 	smulbb	r1, r1, r7
 8022fca:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022fce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022fd2:	00c0      	lsls	r0, r0, #3
 8022fd4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022fd8:	b2c0      	uxtb	r0, r0
 8022fda:	10d9      	asrs	r1, r3, #3
 8022fdc:	00db      	lsls	r3, r3, #3
 8022fde:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022fe2:	b2db      	uxtb	r3, r3
 8022fe4:	fb10 f007 	smulbb	r0, r0, r7
 8022fe8:	fa1f fc8c 	uxth.w	ip, ip
 8022fec:	fb03 0302 	mla	r3, r3, r2, r0
 8022ff0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022ff4:	fb1e fe07 	smulbb	lr, lr, r7
 8022ff8:	fb01 e102 	mla	r1, r1, r2, lr
 8022ffc:	b29a      	uxth	r2, r3
 8022ffe:	f10c 0301 	add.w	r3, ip, #1
 8023002:	b289      	uxth	r1, r1
 8023004:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023008:	1c53      	adds	r3, r2, #1
 802300a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802300e:	1c4a      	adds	r2, r1, #1
 8023010:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023014:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023018:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802301c:	0949      	lsrs	r1, r1, #5
 802301e:	ea43 030c 	orr.w	r3, r3, ip
 8023022:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023026:	430b      	orrs	r3, r1
 8023028:	f8a8 3000 	strh.w	r3, [r8]
 802302c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802302e:	441c      	add	r4, r3
 8023030:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023032:	f108 0802 	add.w	r8, r8, #2
 8023036:	441e      	add	r6, r3
 8023038:	f109 39ff 	add.w	r9, r9, #4294967295
 802303c:	e74a      	b.n	8022ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802303e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023040:	441c      	add	r4, r3
 8023042:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023044:	441e      	add	r6, r3
 8023046:	9b07      	ldr	r3, [sp, #28]
 8023048:	3302      	adds	r3, #2
 802304a:	3d01      	subs	r5, #1
 802304c:	9307      	str	r3, [sp, #28]
 802304e:	e722      	b.n	8022e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023050:	d022      	beq.n	8023098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023052:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023054:	1e6b      	subs	r3, r5, #1
 8023056:	fb00 4003 	mla	r0, r0, r3, r4
 802305a:	1400      	asrs	r0, r0, #16
 802305c:	f53f af37 	bmi.w	8022ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023060:	3901      	subs	r1, #1
 8023062:	4288      	cmp	r0, r1
 8023064:	f6bf af33 	bge.w	8022ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023068:	9920      	ldr	r1, [sp, #128]	; 0x80
 802306a:	fb01 6303 	mla	r3, r1, r3, r6
 802306e:	141b      	asrs	r3, r3, #16
 8023070:	f53f af2d 	bmi.w	8022ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023074:	3a01      	subs	r2, #1
 8023076:	4293      	cmp	r3, r2
 8023078:	f6bf af29 	bge.w	8022ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802307c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023080:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023084:	46a8      	mov	r8, r5
 8023086:	f1b8 0f00 	cmp.w	r8, #0
 802308a:	dc5e      	bgt.n	802314a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802308c:	9b07      	ldr	r3, [sp, #28]
 802308e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023092:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023096:	9307      	str	r3, [sp, #28]
 8023098:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802309a:	2b00      	cmp	r3, #0
 802309c:	f340 80f6 	ble.w	802328c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80230a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80230a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80230a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80230ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80230ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80230b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80230b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80230ba:	eef0 6a62 	vmov.f32	s13, s5
 80230be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80230c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80230c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80230ca:	ee16 4a90 	vmov	r4, s13
 80230ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80230d2:	eef0 6a43 	vmov.f32	s13, s6
 80230d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80230da:	ee12 2a90 	vmov	r2, s5
 80230de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80230e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80230e6:	ee13 2a10 	vmov	r2, s6
 80230ea:	931f      	str	r3, [sp, #124]	; 0x7c
 80230ec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80230ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80230f2:	9320      	str	r3, [sp, #128]	; 0x80
 80230f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80230f8:	3b01      	subs	r3, #1
 80230fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80230fe:	930a      	str	r3, [sp, #40]	; 0x28
 8023100:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023102:	ee16 6a90 	vmov	r6, s13
 8023106:	bf14      	ite	ne
 8023108:	461d      	movne	r5, r3
 802310a:	4615      	moveq	r5, r2
 802310c:	eeb0 3a67 	vmov.f32	s6, s15
 8023110:	eef0 2a47 	vmov.f32	s5, s14
 8023114:	e6b0      	b.n	8022e78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023116:	f111 0a01 	adds.w	sl, r1, #1
 802311a:	d487      	bmi.n	802302c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802311c:	45d6      	cmp	lr, sl
 802311e:	db85      	blt.n	802302c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023120:	f110 0a01 	adds.w	sl, r0, #1
 8023124:	d482      	bmi.n	802302c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023126:	4553      	cmp	r3, sl
 8023128:	db80      	blt.n	802302c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802312a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802312c:	9101      	str	r1, [sp, #4]
 802312e:	b21b      	sxth	r3, r3
 8023130:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023134:	9300      	str	r3, [sp, #0]
 8023136:	e9cd c704 	strd	ip, r7, [sp, #16]
 802313a:	fa0f f38e 	sxth.w	r3, lr
 802313e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023140:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023142:	4641      	mov	r1, r8
 8023144:	f7ff fdb4 	bl	8022cb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023148:	e770      	b.n	802302c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802314a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802314c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802314e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023152:	1430      	asrs	r0, r6, #16
 8023154:	1423      	asrs	r3, r4, #16
 8023156:	fb01 3000 	mla	r0, r1, r0, r3
 802315a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802315c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023160:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023164:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023168:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802316c:	8858      	ldrh	r0, [r3, #2]
 802316e:	f1be 0f00 	cmp.w	lr, #0
 8023172:	d00b      	beq.n	802318c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023174:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023178:	3901      	subs	r1, #1
 802317a:	0049      	lsls	r1, r1, #1
 802317c:	3102      	adds	r1, #2
 802317e:	eb03 0b01 	add.w	fp, r3, r1
 8023182:	5a5b      	ldrh	r3, [r3, r1]
 8023184:	930e      	str	r3, [sp, #56]	; 0x38
 8023186:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802318a:	930f      	str	r3, [sp, #60]	; 0x3c
 802318c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023190:	fb12 f30e 	smulbb	r3, r2, lr
 8023194:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023198:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802319c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80231a0:	10db      	asrs	r3, r3, #3
 80231a2:	ea41 010c 	orr.w	r1, r1, ip
 80231a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231aa:	f1ce 0c10 	rsb	ip, lr, #16
 80231ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80231b2:	ebac 0c02 	sub.w	ip, ip, r2
 80231b6:	ea4b 0000 	orr.w	r0, fp, r0
 80231ba:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231be:	4350      	muls	r0, r2
 80231c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80231c2:	9f08      	ldr	r7, [sp, #32]
 80231c4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80231c8:	fb0c 0c01 	mla	ip, ip, r1, r0
 80231cc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80231d0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80231d4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80231d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80231d8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231dc:	0412      	lsls	r2, r2, #16
 80231de:	ea4b 0101 	orr.w	r1, fp, r1
 80231e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80231e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80231ea:	fb03 c101 	mla	r1, r3, r1, ip
 80231ee:	4302      	orrs	r2, r0
 80231f0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80231f4:	fb03 1202 	mla	r2, r3, r2, r1
 80231f8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80231fc:	0952      	lsrs	r2, r2, #5
 80231fe:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023202:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023206:	f8b9 2000 	ldrh.w	r2, [r9]
 802320a:	ea4b 0303 	orr.w	r3, fp, r3
 802320e:	b29b      	uxth	r3, r3
 8023210:	1211      	asrs	r1, r2, #8
 8023212:	1218      	asrs	r0, r3, #8
 8023214:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023218:	fb11 f107 	smulbb	r1, r1, r7
 802321c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023220:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023224:	00d2      	lsls	r2, r2, #3
 8023226:	fb00 100a 	mla	r0, r0, sl, r1
 802322a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802322e:	10d9      	asrs	r1, r3, #3
 8023230:	b2d2      	uxtb	r2, r2
 8023232:	00db      	lsls	r3, r3, #3
 8023234:	fb1c fc07 	smulbb	ip, ip, r7
 8023238:	fb12 f207 	smulbb	r2, r2, r7
 802323c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023240:	b2db      	uxtb	r3, r3
 8023242:	b280      	uxth	r0, r0
 8023244:	fb01 c10a 	mla	r1, r1, sl, ip
 8023248:	fb03 230a 	mla	r3, r3, sl, r2
 802324c:	b29b      	uxth	r3, r3
 802324e:	b289      	uxth	r1, r1
 8023250:	1c42      	adds	r2, r0, #1
 8023252:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023256:	f101 0c01 	add.w	ip, r1, #1
 802325a:	1c5a      	adds	r2, r3, #1
 802325c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023260:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023264:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023266:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802326a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802326e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023272:	4310      	orrs	r0, r2
 8023274:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023278:	441c      	add	r4, r3
 802327a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802327c:	ea40 000c 	orr.w	r0, r0, ip
 8023280:	f829 0b02 	strh.w	r0, [r9], #2
 8023284:	441e      	add	r6, r3
 8023286:	f108 38ff 	add.w	r8, r8, #4294967295
 802328a:	e6fc      	b.n	8023086 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802328c:	b013      	add	sp, #76	; 0x4c
 802328e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023292 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023292:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023296:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802329a:	fb0e 4703 	mla	r7, lr, r3, r4
 802329e:	f1be 0f00 	cmp.w	lr, #0
 80232a2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80232a6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80232aa:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80232ae:	8808      	ldrh	r0, [r1, #0]
 80232b0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80232b4:	db60      	blt.n	8023378 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80232b6:	45f1      	cmp	r9, lr
 80232b8:	dd5e      	ble.n	8023378 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80232ba:	2c00      	cmp	r4, #0
 80232bc:	db5a      	blt.n	8023374 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80232be:	42a3      	cmp	r3, r4
 80232c0:	dd58      	ble.n	8023374 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80232c2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80232c6:	1c62      	adds	r2, r4, #1
 80232c8:	d459      	bmi.n	802337e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80232ca:	4293      	cmp	r3, r2
 80232cc:	dd57      	ble.n	802337e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80232ce:	2d00      	cmp	r5, #0
 80232d0:	d055      	beq.n	802337e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80232d2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80232d6:	f11e 0e01 	adds.w	lr, lr, #1
 80232da:	d454      	bmi.n	8023386 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80232dc:	45f1      	cmp	r9, lr
 80232de:	dd52      	ble.n	8023386 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80232e0:	2e00      	cmp	r6, #0
 80232e2:	d050      	beq.n	8023386 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80232e4:	2c00      	cmp	r4, #0
 80232e6:	db4c      	blt.n	8023382 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80232e8:	42a3      	cmp	r3, r4
 80232ea:	dd4a      	ble.n	8023382 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80232ec:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80232f0:	3401      	adds	r4, #1
 80232f2:	d405      	bmi.n	8023300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80232f4:	42a3      	cmp	r3, r4
 80232f6:	dd03      	ble.n	8023300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80232f8:	b115      	cbz	r5, 8023300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80232fa:	3301      	adds	r3, #1
 80232fc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023300:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023304:	fb15 f406 	smulbb	r4, r5, r6
 8023308:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802330c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023310:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023314:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023318:	ea43 0c0c 	orr.w	ip, r3, ip
 802331c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023320:	f1c6 0310 	rsb	r3, r6, #16
 8023324:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023328:	1b5b      	subs	r3, r3, r5
 802332a:	ea4e 0707 	orr.w	r7, lr, r7
 802332e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023332:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023336:	437d      	muls	r5, r7
 8023338:	fb03 5c0c 	mla	ip, r3, ip, r5
 802333c:	0403      	lsls	r3, r0, #16
 802333e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023342:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023346:	4318      	orrs	r0, r3
 8023348:	0413      	lsls	r3, r2, #16
 802334a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802334e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023352:	4313      	orrs	r3, r2
 8023354:	fb04 c000 	mla	r0, r4, r0, ip
 8023358:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 802335c:	fb06 0003 	mla	r0, r6, r3, r0
 8023360:	0d43      	lsrs	r3, r0, #21
 8023362:	0940      	lsrs	r0, r0, #5
 8023364:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023368:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802336c:	4318      	orrs	r0, r3
 802336e:	8008      	strh	r0, [r1, #0]
 8023370:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023374:	4684      	mov	ip, r0
 8023376:	e7a6      	b.n	80232c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023378:	4607      	mov	r7, r0
 802337a:	4684      	mov	ip, r0
 802337c:	e7ab      	b.n	80232d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802337e:	4607      	mov	r7, r0
 8023380:	e7a9      	b.n	80232d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023382:	4602      	mov	r2, r0
 8023384:	e7b4      	b.n	80232f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023386:	4602      	mov	r2, r0
 8023388:	e7ba      	b.n	8023300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802338a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802338a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802338e:	b08f      	sub	sp, #60	; 0x3c
 8023390:	461d      	mov	r5, r3
 8023392:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023394:	920c      	str	r2, [sp, #48]	; 0x30
 8023396:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802339a:	9107      	str	r1, [sp, #28]
 802339c:	6859      	ldr	r1, [r3, #4]
 802339e:	681b      	ldr	r3, [r3, #0]
 80233a0:	900d      	str	r0, [sp, #52]	; 0x34
 80233a2:	fb01 2707 	mla	r7, r1, r7, r2
 80233a6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80233aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233ac:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80233b0:	f8d3 8000 	ldr.w	r8, [r3]
 80233b4:	9b07      	ldr	r3, [sp, #28]
 80233b6:	2b00      	cmp	r3, #0
 80233b8:	dc03      	bgt.n	80233c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80233ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80233bc:	2b00      	cmp	r3, #0
 80233be:	f340 8181 	ble.w	80236c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80233c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80233cc:	1e48      	subs	r0, r1, #1
 80233ce:	f102 3cff 	add.w	ip, r2, #4294967295
 80233d2:	2d00      	cmp	r5, #0
 80233d4:	f340 809b 	ble.w	802350e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80233d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80233dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80233e0:	d406      	bmi.n	80233f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80233e2:	4586      	cmp	lr, r0
 80233e4:	da04      	bge.n	80233f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80233e6:	2b00      	cmp	r3, #0
 80233e8:	db02      	blt.n	80233f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80233ea:	4563      	cmp	r3, ip
 80233ec:	f2c0 8090 	blt.w	8023510 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80233f0:	f11e 0e01 	adds.w	lr, lr, #1
 80233f4:	f100 8084 	bmi.w	8023500 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80233f8:	4571      	cmp	r1, lr
 80233fa:	f2c0 8081 	blt.w	8023500 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80233fe:	3301      	adds	r3, #1
 8023400:	d47e      	bmi.n	8023500 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023402:	429a      	cmp	r2, r3
 8023404:	db7c      	blt.n	8023500 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023406:	46aa      	mov	sl, r5
 8023408:	46b9      	mov	r9, r7
 802340a:	f1ba 0f00 	cmp.w	sl, #0
 802340e:	f340 8099 	ble.w	8023544 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023412:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023414:	1421      	asrs	r1, r4, #16
 8023416:	ea4f 4026 	mov.w	r0, r6, asr #16
 802341a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802341e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023422:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023426:	f100 80d0 	bmi.w	80235ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802342a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802342e:	4559      	cmp	r1, fp
 8023430:	f280 80cb 	bge.w	80235ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023434:	2800      	cmp	r0, #0
 8023436:	f2c0 80c8 	blt.w	80235ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802343a:	f103 3bff 	add.w	fp, r3, #4294967295
 802343e:	4558      	cmp	r0, fp
 8023440:	f280 80c3 	bge.w	80235ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023444:	fa0f fe8e 	sxth.w	lr, lr
 8023448:	fb00 110e 	mla	r1, r0, lr, r1
 802344c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023450:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023454:	8841      	ldrh	r1, [r0, #2]
 8023456:	f1bc 0f00 	cmp.w	ip, #0
 802345a:	d00b      	beq.n	8023474 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802345c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023460:	3b01      	subs	r3, #1
 8023462:	005b      	lsls	r3, r3, #1
 8023464:	3302      	adds	r3, #2
 8023466:	eb00 0e03 	add.w	lr, r0, r3
 802346a:	5ac3      	ldrh	r3, [r0, r3]
 802346c:	9308      	str	r3, [sp, #32]
 802346e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023472:	9309      	str	r3, [sp, #36]	; 0x24
 8023474:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023478:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802347c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023480:	ea40 000b 	orr.w	r0, r0, fp
 8023484:	fb12 f30c 	smulbb	r3, r2, ip
 8023488:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802348c:	10db      	asrs	r3, r3, #3
 802348e:	f1cc 0e10 	rsb	lr, ip, #16
 8023492:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023496:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802349a:	ebae 0e02 	sub.w	lr, lr, r2
 802349e:	ea4b 0101 	orr.w	r1, fp, r1
 80234a2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80234a6:	4351      	muls	r1, r2
 80234a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80234aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80234ae:	fb0e 1e00 	mla	lr, lr, r0, r1
 80234b2:	0410      	lsls	r0, r2, #16
 80234b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80234b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80234bc:	4310      	orrs	r0, r2
 80234be:	9a08      	ldr	r2, [sp, #32]
 80234c0:	9908      	ldr	r1, [sp, #32]
 80234c2:	0412      	lsls	r2, r2, #16
 80234c4:	fb03 e000 	mla	r0, r3, r0, lr
 80234c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80234cc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80234d0:	ea42 020e 	orr.w	r2, r2, lr
 80234d4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80234d8:	fb03 0302 	mla	r3, r3, r2, r0
 80234dc:	0d5a      	lsrs	r2, r3, #21
 80234de:	095b      	lsrs	r3, r3, #5
 80234e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80234e8:	4313      	orrs	r3, r2
 80234ea:	f8a9 3000 	strh.w	r3, [r9]
 80234ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80234f0:	441c      	add	r4, r3
 80234f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234f4:	f109 0902 	add.w	r9, r9, #2
 80234f8:	441e      	add	r6, r3
 80234fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80234fe:	e784      	b.n	802340a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023500:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023502:	441c      	add	r4, r3
 8023504:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023506:	3d01      	subs	r5, #1
 8023508:	441e      	add	r6, r3
 802350a:	3702      	adds	r7, #2
 802350c:	e761      	b.n	80233d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802350e:	d01d      	beq.n	802354c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023510:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023512:	1e6b      	subs	r3, r5, #1
 8023514:	fb00 4003 	mla	r0, r0, r3, r4
 8023518:	1400      	asrs	r0, r0, #16
 802351a:	f53f af74 	bmi.w	8023406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802351e:	3901      	subs	r1, #1
 8023520:	4288      	cmp	r0, r1
 8023522:	f6bf af70 	bge.w	8023406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023526:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023528:	fb01 6303 	mla	r3, r1, r3, r6
 802352c:	141b      	asrs	r3, r3, #16
 802352e:	f53f af6a 	bmi.w	8023406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023532:	3a01      	subs	r2, #1
 8023534:	4293      	cmp	r3, r2
 8023536:	f6bf af66 	bge.w	8023406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802353a:	46a9      	mov	r9, r5
 802353c:	46ba      	mov	sl, r7
 802353e:	f1b9 0f00 	cmp.w	r9, #0
 8023542:	dc5a      	bgt.n	80235fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023544:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023548:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802354c:	9b07      	ldr	r3, [sp, #28]
 802354e:	2b00      	cmp	r3, #0
 8023550:	f340 80b8 	ble.w	80236c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023554:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023558:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802355c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023560:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023562:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023566:	ee31 1a05 	vadd.f32	s2, s2, s10
 802356a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802356e:	eef0 6a62 	vmov.f32	s13, s5
 8023572:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023576:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802357a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802357e:	ee16 4a90 	vmov	r4, s13
 8023582:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023586:	eef0 6a43 	vmov.f32	s13, s6
 802358a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802358e:	ee12 2a90 	vmov	r2, s5
 8023592:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023596:	fb92 f3f3 	sdiv	r3, r2, r3
 802359a:	ee13 2a10 	vmov	r2, s6
 802359e:	931b      	str	r3, [sp, #108]	; 0x6c
 80235a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80235a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80235a6:	931c      	str	r3, [sp, #112]	; 0x70
 80235a8:	9b07      	ldr	r3, [sp, #28]
 80235aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80235ac:	3b01      	subs	r3, #1
 80235ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235b2:	9307      	str	r3, [sp, #28]
 80235b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80235b6:	ee16 6a90 	vmov	r6, s13
 80235ba:	bf14      	ite	ne
 80235bc:	461d      	movne	r5, r3
 80235be:	4615      	moveq	r5, r2
 80235c0:	eeb0 3a67 	vmov.f32	s6, s15
 80235c4:	eef0 2a47 	vmov.f32	s5, s14
 80235c8:	e6f4      	b.n	80233b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80235ca:	f111 0b01 	adds.w	fp, r1, #1
 80235ce:	d48e      	bmi.n	80234ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80235d0:	45de      	cmp	lr, fp
 80235d2:	db8c      	blt.n	80234ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80235d4:	f110 0b01 	adds.w	fp, r0, #1
 80235d8:	d489      	bmi.n	80234ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80235da:	455b      	cmp	r3, fp
 80235dc:	db87      	blt.n	80234ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80235de:	b21b      	sxth	r3, r3
 80235e0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80235e4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80235e8:	9300      	str	r3, [sp, #0]
 80235ea:	4642      	mov	r2, r8
 80235ec:	fa0f f38e 	sxth.w	r3, lr
 80235f0:	4649      	mov	r1, r9
 80235f2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80235f4:	f7ff fe4d 	bl	8023292 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80235f8:	e779      	b.n	80234ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80235fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023600:	1420      	asrs	r0, r4, #16
 8023602:	1431      	asrs	r1, r6, #16
 8023604:	fb03 0101 	mla	r1, r3, r1, r0
 8023608:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802360c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023610:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023614:	8841      	ldrh	r1, [r0, #2]
 8023616:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802361a:	f1be 0f00 	cmp.w	lr, #0
 802361e:	d00b      	beq.n	8023638 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023620:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023624:	3b01      	subs	r3, #1
 8023626:	005b      	lsls	r3, r3, #1
 8023628:	3302      	adds	r3, #2
 802362a:	eb00 0b03 	add.w	fp, r0, r3
 802362e:	5ac3      	ldrh	r3, [r0, r3]
 8023630:	930a      	str	r3, [sp, #40]	; 0x28
 8023632:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023636:	930b      	str	r3, [sp, #44]	; 0x2c
 8023638:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802363c:	fb12 f30e 	smulbb	r3, r2, lr
 8023640:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023644:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023648:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802364c:	10db      	asrs	r3, r3, #3
 802364e:	ea40 000c 	orr.w	r0, r0, ip
 8023652:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023656:	f1ce 0c10 	rsb	ip, lr, #16
 802365a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802365e:	ebac 0c02 	sub.w	ip, ip, r2
 8023662:	ea4b 0101 	orr.w	r1, fp, r1
 8023666:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802366a:	4351      	muls	r1, r2
 802366c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802366e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023672:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023676:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802367a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802367e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023680:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023682:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023686:	0412      	lsls	r2, r2, #16
 8023688:	ea4b 0000 	orr.w	r0, fp, r0
 802368c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023690:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8023694:	fb03 c000 	mla	r0, r3, r0, ip
 8023698:	ea42 0b0b 	orr.w	fp, r2, fp
 802369c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80236a0:	fb03 000b 	mla	r0, r3, fp, r0
 80236a4:	0d43      	lsrs	r3, r0, #21
 80236a6:	0940      	lsrs	r0, r0, #5
 80236a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80236ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80236b0:	4318      	orrs	r0, r3
 80236b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80236b4:	f82a 0b02 	strh.w	r0, [sl], #2
 80236b8:	441c      	add	r4, r3
 80236ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80236bc:	f109 39ff 	add.w	r9, r9, #4294967295
 80236c0:	441e      	add	r6, r3
 80236c2:	e73c      	b.n	802353e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80236c4:	b00f      	add	sp, #60	; 0x3c
 80236c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80236ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236ce:	b085      	sub	sp, #20
 80236d0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80236d4:	9102      	str	r1, [sp, #8]
 80236d6:	2c00      	cmp	r4, #0
 80236d8:	fb04 7103 	mla	r1, r4, r3, r7
 80236dc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80236e0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80236e4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80236e8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80236ec:	f2c0 811b 	blt.w	8023926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80236f0:	45a6      	cmp	lr, r4
 80236f2:	f340 8118 	ble.w	8023926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80236f6:	2f00      	cmp	r7, #0
 80236f8:	f2c0 8113 	blt.w	8023922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80236fc:	42bb      	cmp	r3, r7
 80236fe:	f340 8110 	ble.w	8023922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023702:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023706:	1c7a      	adds	r2, r7, #1
 8023708:	f100 8110 	bmi.w	802392c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802370c:	4293      	cmp	r3, r2
 802370e:	f340 810d 	ble.w	802392c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023712:	2e00      	cmp	r6, #0
 8023714:	f000 810c 	beq.w	8023930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023718:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802371c:	3401      	adds	r4, #1
 802371e:	f100 810b 	bmi.w	8023938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023722:	45a6      	cmp	lr, r4
 8023724:	f340 8108 	ble.w	8023938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023728:	2800      	cmp	r0, #0
 802372a:	f000 8108 	beq.w	802393e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802372e:	2f00      	cmp	r7, #0
 8023730:	f2c0 8100 	blt.w	8023934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023734:	42bb      	cmp	r3, r7
 8023736:	f340 80fd 	ble.w	8023934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802373a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802373e:	3701      	adds	r7, #1
 8023740:	f100 8100 	bmi.w	8023944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023744:	42bb      	cmp	r3, r7
 8023746:	f340 80fd 	ble.w	8023944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802374a:	2e00      	cmp	r6, #0
 802374c:	f000 80fc 	beq.w	8023948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023750:	3301      	adds	r3, #1
 8023752:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023756:	b2b6      	uxth	r6, r6
 8023758:	b280      	uxth	r0, r0
 802375a:	fb00 fe06 	mul.w	lr, r0, r6
 802375e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023762:	0136      	lsls	r6, r6, #4
 8023764:	eba6 070e 	sub.w	r7, r6, lr
 8023768:	b280      	uxth	r0, r0
 802376a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802376e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023772:	b2bf      	uxth	r7, r7
 8023774:	1a1b      	subs	r3, r3, r0
 8023776:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802377a:	b29b      	uxth	r3, r3
 802377c:	fb0a f607 	mul.w	r6, sl, r7
 8023780:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023784:	fb0b 6603 	mla	r6, fp, r3, r6
 8023788:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802378c:	fb00 6609 	mla	r6, r0, r9, r6
 8023790:	fb0e 6608 	mla	r6, lr, r8, r6
 8023794:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023798:	9600      	str	r6, [sp, #0]
 802379a:	2e00      	cmp	r6, #0
 802379c:	f000 80be 	beq.w	802391c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80237a0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80237a4:	fb0b fc0c 	mul.w	ip, fp, ip
 80237a8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80237ac:	fb0b f505 	mul.w	r5, fp, r5
 80237b0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80237b4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80237b8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80237bc:	44dc      	add	ip, fp
 80237be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237c2:	9501      	str	r5, [sp, #4]
 80237c4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80237c8:	9503      	str	r5, [sp, #12]
 80237ca:	9d01      	ldr	r5, [sp, #4]
 80237cc:	9e02      	ldr	r6, [sp, #8]
 80237ce:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80237d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80237d6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80237da:	fb0a fc0c 	mul.w	ip, sl, ip
 80237de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80237e2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80237e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80237ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80237ee:	4465      	add	r5, ip
 80237f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80237f4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80237f8:	fb09 fc0c 	mul.w	ip, r9, ip
 80237fc:	fb09 f904 	mul.w	r9, r9, r4
 8023800:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023804:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023808:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802380c:	fb08 f404 	mul.w	r4, r8, r4
 8023810:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023814:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023818:	fb08 f802 	mul.w	r8, r8, r2
 802381c:	fb0a fa01 	mul.w	sl, sl, r1
 8023820:	0a22      	lsrs	r2, r4, #8
 8023822:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023826:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802382a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802382e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023832:	4414      	add	r4, r2
 8023834:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023838:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802383c:	0a2d      	lsrs	r5, r5, #8
 802383e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023842:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023846:	9a03      	ldr	r2, [sp, #12]
 8023848:	8836      	ldrh	r6, [r6, #0]
 802384a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802384e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023852:	437d      	muls	r5, r7
 8023854:	4461      	add	r1, ip
 8023856:	0a24      	lsrs	r4, r4, #8
 8023858:	fb02 5503 	mla	r5, r2, r3, r5
 802385c:	0a09      	lsrs	r1, r1, #8
 802385e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023862:	fb04 540e 	mla	r4, r4, lr, r5
 8023866:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802386a:	fb01 4100 	mla	r1, r1, r0, r4
 802386e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023872:	0a09      	lsrs	r1, r1, #8
 8023874:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023878:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802387c:	fb07 f70a 	mul.w	r7, r7, sl
 8023880:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023884:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023888:	fb03 7101 	mla	r1, r3, r1, r7
 802388c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023890:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023894:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023898:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802389c:	fb00 e101 	mla	r1, r0, r1, lr
 80238a0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80238a4:	9a00      	ldr	r2, [sp, #0]
 80238a6:	b287      	uxth	r7, r0
 80238a8:	437a      	muls	r2, r7
 80238aa:	0a09      	lsrs	r1, r1, #8
 80238ac:	1c53      	adds	r3, r2, #1
 80238ae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80238b2:	4321      	orrs	r1, r4
 80238b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80238b8:	1235      	asrs	r5, r6, #8
 80238ba:	0c0a      	lsrs	r2, r1, #16
 80238bc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80238c0:	b2db      	uxtb	r3, r3
 80238c2:	fb12 f207 	smulbb	r2, r2, r7
 80238c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80238ca:	fb05 2503 	mla	r5, r5, r3, r2
 80238ce:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80238d2:	10f2      	asrs	r2, r6, #3
 80238d4:	b2c8      	uxtb	r0, r1
 80238d6:	00f6      	lsls	r6, r6, #3
 80238d8:	fb14 f407 	smulbb	r4, r4, r7
 80238dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80238e0:	b2f6      	uxtb	r6, r6
 80238e2:	fb10 f007 	smulbb	r0, r0, r7
 80238e6:	fb02 4203 	mla	r2, r2, r3, r4
 80238ea:	b2ad      	uxth	r5, r5
 80238ec:	fb06 0303 	mla	r3, r6, r3, r0
 80238f0:	b299      	uxth	r1, r3
 80238f2:	b294      	uxth	r4, r2
 80238f4:	1c6b      	adds	r3, r5, #1
 80238f6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80238fa:	1c62      	adds	r2, r4, #1
 80238fc:	1c4b      	adds	r3, r1, #1
 80238fe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023902:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023906:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802390a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802390e:	0952      	lsrs	r2, r2, #5
 8023910:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023914:	432b      	orrs	r3, r5
 8023916:	4313      	orrs	r3, r2
 8023918:	9a02      	ldr	r2, [sp, #8]
 802391a:	8013      	strh	r3, [r2, #0]
 802391c:	b005      	add	sp, #20
 802391e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023922:	2500      	movs	r5, #0
 8023924:	e6ef      	b.n	8023706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023926:	2100      	movs	r1, #0
 8023928:	460d      	mov	r5, r1
 802392a:	e6f7      	b.n	802371c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802392c:	2100      	movs	r1, #0
 802392e:	e6f5      	b.n	802371c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023930:	4631      	mov	r1, r6
 8023932:	e6f3      	b.n	802371c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023934:	2400      	movs	r4, #0
 8023936:	e702      	b.n	802373e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023938:	2200      	movs	r2, #0
 802393a:	4614      	mov	r4, r2
 802393c:	e70b      	b.n	8023756 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802393e:	4602      	mov	r2, r0
 8023940:	4604      	mov	r4, r0
 8023942:	e708      	b.n	8023756 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023944:	2200      	movs	r2, #0
 8023946:	e706      	b.n	8023756 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023948:	4632      	mov	r2, r6
 802394a:	e704      	b.n	8023756 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802394c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802394c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023950:	b09d      	sub	sp, #116	; 0x74
 8023952:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023956:	9219      	str	r2, [sp, #100]	; 0x64
 8023958:	9307      	str	r3, [sp, #28]
 802395a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802395c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023960:	931a      	str	r3, [sp, #104]	; 0x68
 8023962:	9117      	str	r1, [sp, #92]	; 0x5c
 8023964:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023968:	901b      	str	r0, [sp, #108]	; 0x6c
 802396a:	6850      	ldr	r0, [r2, #4]
 802396c:	6812      	ldr	r2, [r2, #0]
 802396e:	fb00 1303 	mla	r3, r0, r3, r1
 8023972:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023976:	930a      	str	r3, [sp, #40]	; 0x28
 8023978:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802397a:	681b      	ldr	r3, [r3, #0]
 802397c:	9310      	str	r3, [sp, #64]	; 0x40
 802397e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023982:	930b      	str	r3, [sp, #44]	; 0x2c
 8023984:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023986:	2b00      	cmp	r3, #0
 8023988:	dc03      	bgt.n	8023992 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802398a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802398c:	2b00      	cmp	r3, #0
 802398e:	f340 8375 	ble.w	802407c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023992:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023994:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023998:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802399c:	1e48      	subs	r0, r1, #1
 802399e:	1e57      	subs	r7, r2, #1
 80239a0:	9b07      	ldr	r3, [sp, #28]
 80239a2:	2b00      	cmp	r3, #0
 80239a4:	f340 818e 	ble.w	8023cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80239a8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80239ac:	ea4f 4326 	mov.w	r3, r6, asr #16
 80239b0:	d406      	bmi.n	80239c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80239b2:	4584      	cmp	ip, r0
 80239b4:	da04      	bge.n	80239c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80239b6:	2b00      	cmp	r3, #0
 80239b8:	db02      	blt.n	80239c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80239ba:	42bb      	cmp	r3, r7
 80239bc:	f2c0 8183 	blt.w	8023cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80239c0:	f11c 0c01 	adds.w	ip, ip, #1
 80239c4:	f100 8173 	bmi.w	8023cae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80239c8:	4561      	cmp	r1, ip
 80239ca:	f2c0 8170 	blt.w	8023cae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80239ce:	3301      	adds	r3, #1
 80239d0:	f100 816d 	bmi.w	8023cae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80239d4:	429a      	cmp	r2, r3
 80239d6:	f2c0 816a 	blt.w	8023cae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80239da:	9b07      	ldr	r3, [sp, #28]
 80239dc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80239de:	9318      	str	r3, [sp, #96]	; 0x60
 80239e0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80239e2:	2b00      	cmp	r3, #0
 80239e4:	f340 818c 	ble.w	8023d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80239e8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80239ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80239ec:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80239f0:	689b      	ldr	r3, [r3, #8]
 80239f2:	1422      	asrs	r2, r4, #16
 80239f4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80239f8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80239fc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023a00:	f100 81cd 	bmi.w	8023d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023a04:	f103 38ff 	add.w	r8, r3, #4294967295
 8023a08:	4542      	cmp	r2, r8
 8023a0a:	f280 81c8 	bge.w	8023d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023a0e:	f1bc 0f00 	cmp.w	ip, #0
 8023a12:	f2c0 81c4 	blt.w	8023d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023a16:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023a1a:	45c4      	cmp	ip, r8
 8023a1c:	f280 81bf 	bge.w	8023d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023a20:	b21b      	sxth	r3, r3
 8023a22:	fb0c 2203 	mla	r2, ip, r3, r2
 8023a26:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a28:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023a2c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023a30:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023a34:	2800      	cmp	r0, #0
 8023a36:	f000 81a9 	beq.w	8023d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023a3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023a3e:	950c      	str	r5, [sp, #48]	; 0x30
 8023a40:	0e2d      	lsrs	r5, r5, #24
 8023a42:	9513      	str	r5, [sp, #76]	; 0x4c
 8023a44:	b181      	cbz	r1, 8023a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023a46:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023a4a:	3b01      	subs	r3, #1
 8023a4c:	009b      	lsls	r3, r3, #2
 8023a4e:	3304      	adds	r3, #4
 8023a50:	eb08 0c03 	add.w	ip, r8, r3
 8023a54:	f858 3003 	ldr.w	r3, [r8, r3]
 8023a58:	9308      	str	r3, [sp, #32]
 8023a5a:	0e1b      	lsrs	r3, r3, #24
 8023a5c:	9311      	str	r3, [sp, #68]	; 0x44
 8023a5e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023a62:	930d      	str	r3, [sp, #52]	; 0x34
 8023a64:	0e1b      	lsrs	r3, r3, #24
 8023a66:	9314      	str	r3, [sp, #80]	; 0x50
 8023a68:	b280      	uxth	r0, r0
 8023a6a:	b289      	uxth	r1, r1
 8023a6c:	fb00 f901 	mul.w	r9, r0, r1
 8023a70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023a74:	0100      	lsls	r0, r0, #4
 8023a76:	eba0 0809 	sub.w	r8, r0, r9
 8023a7a:	b289      	uxth	r1, r1
 8023a7c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023a80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023a82:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023a84:	fa1f f888 	uxth.w	r8, r8
 8023a88:	1a5b      	subs	r3, r3, r1
 8023a8a:	b29b      	uxth	r3, r3
 8023a8c:	fb08 f000 	mul.w	r0, r8, r0
 8023a90:	fb03 000e 	mla	r0, r3, lr, r0
 8023a94:	fb01 0005 	mla	r0, r1, r5, r0
 8023a98:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023a9a:	fb09 0005 	mla	r0, r9, r5, r0
 8023a9e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023aa2:	2800      	cmp	r0, #0
 8023aa4:	f000 80fa 	beq.w	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023aa8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023aac:	d01b      	beq.n	8023ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023aae:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023ab2:	fb0e fa0a 	mul.w	sl, lr, sl
 8023ab6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023aba:	fb0e fe02 	mul.w	lr, lr, r2
 8023abe:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023ac2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ac6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023aca:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023ace:	4452      	add	r2, sl
 8023ad0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023ad4:	0a12      	lsrs	r2, r2, #8
 8023ad6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ada:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ade:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ae2:	ea42 020c 	orr.w	r2, r2, ip
 8023ae6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023ae8:	2dff      	cmp	r5, #255	; 0xff
 8023aea:	d021      	beq.n	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023aec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023aee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023af2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023af4:	fb05 fb0b 	mul.w	fp, r5, fp
 8023af8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023afa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023afe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023b00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b04:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023b10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023b14:	44de      	add	lr, fp
 8023b16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023b1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b2a:	ea4e 050a 	orr.w	r5, lr, sl
 8023b2e:	950c      	str	r5, [sp, #48]	; 0x30
 8023b30:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b32:	2dff      	cmp	r5, #255	; 0xff
 8023b34:	d021      	beq.n	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023b36:	9d08      	ldr	r5, [sp, #32]
 8023b38:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023b3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b3e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023b42:	9d08      	ldr	r5, [sp, #32]
 8023b44:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b4e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023b5a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023b5e:	44de      	add	lr, fp
 8023b60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023b64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b74:	ea4e 050a 	orr.w	r5, lr, sl
 8023b78:	9508      	str	r5, [sp, #32]
 8023b7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023b7c:	2dff      	cmp	r5, #255	; 0xff
 8023b7e:	d021      	beq.n	8023bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023b80:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023b82:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023b86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023b88:	fb05 fb0b 	mul.w	fp, r5, fp
 8023b8c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023b8e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023b94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b98:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ba0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023ba4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023ba8:	44de      	add	lr, fp
 8023baa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023bba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023bbe:	ea4e 050a 	orr.w	r5, lr, sl
 8023bc2:	950d      	str	r5, [sp, #52]	; 0x34
 8023bc4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023bc6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023bca:	9d08      	ldr	r5, [sp, #32]
 8023bcc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023bd0:	fb08 fc0c 	mul.w	ip, r8, ip
 8023bd4:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023bd8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023bdc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023bde:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023be2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023be6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023be8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023bec:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023bf0:	fb08 f80e 	mul.w	r8, r8, lr
 8023bf4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023bf8:	fb03 8202 	mla	r2, r3, r2, r8
 8023bfc:	9b08      	ldr	r3, [sp, #32]
 8023bfe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023c00:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023c04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023c06:	fb01 220a 	mla	r2, r1, sl, r2
 8023c0a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023c0e:	fb09 2901 	mla	r9, r9, r1, r2
 8023c12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023c14:	883b      	ldrh	r3, [r7, #0]
 8023c16:	4342      	muls	r2, r0
 8023c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c1c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c20:	1c50      	adds	r0, r2, #1
 8023c22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c26:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023c2a:	ea4c 0c09 	orr.w	ip, ip, r9
 8023c2e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023c32:	1219      	asrs	r1, r3, #8
 8023c34:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023c38:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023c3c:	b2c0      	uxtb	r0, r0
 8023c3e:	fb12 f205 	smulbb	r2, r2, r5
 8023c42:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023c46:	fb01 2100 	mla	r1, r1, r0, r2
 8023c4a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023c4e:	10da      	asrs	r2, r3, #3
 8023c50:	fa5f fc8c 	uxtb.w	ip, ip
 8023c54:	00db      	lsls	r3, r3, #3
 8023c56:	fb1c fc05 	smulbb	ip, ip, r5
 8023c5a:	b2db      	uxtb	r3, r3
 8023c5c:	b289      	uxth	r1, r1
 8023c5e:	fb03 c300 	mla	r3, r3, r0, ip
 8023c62:	fa1f fc83 	uxth.w	ip, r3
 8023c66:	1c4b      	adds	r3, r1, #1
 8023c68:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023c6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023c70:	fb1e fe05 	smulbb	lr, lr, r5
 8023c74:	f10c 0301 	add.w	r3, ip, #1
 8023c78:	fb02 e200 	mla	r2, r2, r0, lr
 8023c7c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023c80:	b292      	uxth	r2, r2
 8023c82:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023c86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c8a:	430b      	orrs	r3, r1
 8023c8c:	1c51      	adds	r1, r2, #1
 8023c8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023c92:	0952      	lsrs	r2, r2, #5
 8023c94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c98:	4313      	orrs	r3, r2
 8023c9a:	803b      	strh	r3, [r7, #0]
 8023c9c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023c9e:	441c      	add	r4, r3
 8023ca0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023ca2:	441e      	add	r6, r3
 8023ca4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ca6:	3b01      	subs	r3, #1
 8023ca8:	3702      	adds	r7, #2
 8023caa:	9318      	str	r3, [sp, #96]	; 0x60
 8023cac:	e698      	b.n	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023cae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023cb0:	441c      	add	r4, r3
 8023cb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023cb4:	441e      	add	r6, r3
 8023cb6:	9b07      	ldr	r3, [sp, #28]
 8023cb8:	3b01      	subs	r3, #1
 8023cba:	9307      	str	r3, [sp, #28]
 8023cbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cbe:	3302      	adds	r3, #2
 8023cc0:	930a      	str	r3, [sp, #40]	; 0x28
 8023cc2:	e66d      	b.n	80239a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023cc4:	d023      	beq.n	8023d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023cc6:	9b07      	ldr	r3, [sp, #28]
 8023cc8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023cca:	3b01      	subs	r3, #1
 8023ccc:	fb00 4003 	mla	r0, r0, r3, r4
 8023cd0:	1400      	asrs	r0, r0, #16
 8023cd2:	f53f ae82 	bmi.w	80239da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023cd6:	3901      	subs	r1, #1
 8023cd8:	4288      	cmp	r0, r1
 8023cda:	f6bf ae7e 	bge.w	80239da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023cde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023ce0:	fb01 6303 	mla	r3, r1, r3, r6
 8023ce4:	141b      	asrs	r3, r3, #16
 8023ce6:	f53f ae78 	bmi.w	80239da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023cea:	3a01      	subs	r2, #1
 8023cec:	4293      	cmp	r3, r2
 8023cee:	f6bf ae74 	bge.w	80239da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023cf2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023cf6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023cfa:	f1bb 0f00 	cmp.w	fp, #0
 8023cfe:	dc6c      	bgt.n	8023dda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023d00:	9b07      	ldr	r3, [sp, #28]
 8023d02:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023d06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d08:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023d0c:	930a      	str	r3, [sp, #40]	; 0x28
 8023d0e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023d10:	2b00      	cmp	r3, #0
 8023d12:	f340 81b3 	ble.w	802407c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023d16:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023d24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d28:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d30:	eef0 6a62 	vmov.f32	s13, s5
 8023d34:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d40:	ee16 4a90 	vmov	r4, s13
 8023d44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d48:	eef0 6a43 	vmov.f32	s13, s6
 8023d4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d50:	ee12 2a90 	vmov	r2, s5
 8023d54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d58:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d5c:	ee13 2a10 	vmov	r2, s6
 8023d60:	9329      	str	r3, [sp, #164]	; 0xa4
 8023d62:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023d64:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d68:	932a      	str	r3, [sp, #168]	; 0xa8
 8023d6a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023d6c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023d6e:	3b01      	subs	r3, #1
 8023d70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d74:	9317      	str	r3, [sp, #92]	; 0x5c
 8023d76:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023d78:	bf08      	it	eq
 8023d7a:	4613      	moveq	r3, r2
 8023d7c:	ee16 6a90 	vmov	r6, s13
 8023d80:	9307      	str	r3, [sp, #28]
 8023d82:	eeb0 3a67 	vmov.f32	s6, s15
 8023d86:	eef0 2a47 	vmov.f32	s5, s14
 8023d8a:	e5fb      	b.n	8023984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023d8c:	2900      	cmp	r1, #0
 8023d8e:	f43f ae6b 	beq.w	8023a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023d92:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023d96:	9308      	str	r3, [sp, #32]
 8023d98:	0e1b      	lsrs	r3, r3, #24
 8023d9a:	9311      	str	r3, [sp, #68]	; 0x44
 8023d9c:	e664      	b.n	8023a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023d9e:	f112 0801 	adds.w	r8, r2, #1
 8023da2:	f53f af7b 	bmi.w	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023da6:	4543      	cmp	r3, r8
 8023da8:	f6ff af78 	blt.w	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023dac:	f11c 0801 	adds.w	r8, ip, #1
 8023db0:	f53f af74 	bmi.w	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023db4:	45c6      	cmp	lr, r8
 8023db6:	f6ff af71 	blt.w	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023dba:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023dbc:	9201      	str	r2, [sp, #4]
 8023dbe:	fa0f f28e 	sxth.w	r2, lr
 8023dc2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023dc6:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023dca:	9200      	str	r2, [sp, #0]
 8023dcc:	b21b      	sxth	r3, r3
 8023dce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023dd0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023dd2:	4639      	mov	r1, r7
 8023dd4:	f7ff fc79 	bl	80236ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023dd8:	e760      	b.n	8023c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023dda:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023ddc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023dde:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023de2:	1427      	asrs	r7, r4, #16
 8023de4:	1433      	asrs	r3, r6, #16
 8023de6:	fb01 7303 	mla	r3, r1, r3, r7
 8023dea:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023dee:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023df2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023df6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023dfa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023dfe:	2a00      	cmp	r2, #0
 8023e00:	f000 8133 	beq.w	802406a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023e04:	687d      	ldr	r5, [r7, #4]
 8023e06:	950e      	str	r5, [sp, #56]	; 0x38
 8023e08:	0e2d      	lsrs	r5, r5, #24
 8023e0a:	9515      	str	r5, [sp, #84]	; 0x54
 8023e0c:	b178      	cbz	r0, 8023e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023e0e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023e12:	3901      	subs	r1, #1
 8023e14:	0089      	lsls	r1, r1, #2
 8023e16:	3104      	adds	r1, #4
 8023e18:	eb07 0e01 	add.w	lr, r7, r1
 8023e1c:	5879      	ldr	r1, [r7, r1]
 8023e1e:	9109      	str	r1, [sp, #36]	; 0x24
 8023e20:	0e09      	lsrs	r1, r1, #24
 8023e22:	9112      	str	r1, [sp, #72]	; 0x48
 8023e24:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023e28:	910f      	str	r1, [sp, #60]	; 0x3c
 8023e2a:	0e09      	lsrs	r1, r1, #24
 8023e2c:	9116      	str	r1, [sp, #88]	; 0x58
 8023e2e:	b292      	uxth	r2, r2
 8023e30:	b280      	uxth	r0, r0
 8023e32:	fb02 f800 	mul.w	r8, r2, r0
 8023e36:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023e3a:	0112      	lsls	r2, r2, #4
 8023e3c:	eba2 0e08 	sub.w	lr, r2, r8
 8023e40:	b280      	uxth	r0, r0
 8023e42:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023e46:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023e48:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023e4a:	fa1f fe8e 	uxth.w	lr, lr
 8023e4e:	1a12      	subs	r2, r2, r0
 8023e50:	b292      	uxth	r2, r2
 8023e52:	fb0e f101 	mul.w	r1, lr, r1
 8023e56:	fb02 110c 	mla	r1, r2, ip, r1
 8023e5a:	fb00 1105 	mla	r1, r0, r5, r1
 8023e5e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023e60:	fb08 1105 	mla	r1, r8, r5, r1
 8023e64:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023e68:	2900      	cmp	r1, #0
 8023e6a:	f000 80f5 	beq.w	8024058 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023e6e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023e72:	d019      	beq.n	8023ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023e74:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023e78:	fb0c fa0a 	mul.w	sl, ip, sl
 8023e7c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e80:	fb0c fc03 	mul.w	ip, ip, r3
 8023e84:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023e88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023e8c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023e90:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023e94:	4453      	add	r3, sl
 8023e96:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023e9a:	0a1b      	lsrs	r3, r3, #8
 8023e9c:	0a3f      	lsrs	r7, r7, #8
 8023e9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023ea2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023ea6:	433b      	orrs	r3, r7
 8023ea8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023eaa:	2dff      	cmp	r5, #255	; 0xff
 8023eac:	d020      	beq.n	8023ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023eae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023eb0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023eb4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023eb6:	436f      	muls	r7, r5
 8023eb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023eba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023ebe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023ec0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ec4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ec8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023ecc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ed0:	44bc      	add	ip, r7
 8023ed2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ed6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023eda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ede:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ee2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ee6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023eea:	ea4c 050a 	orr.w	r5, ip, sl
 8023eee:	950e      	str	r5, [sp, #56]	; 0x38
 8023ef0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023ef2:	2dff      	cmp	r5, #255	; 0xff
 8023ef4:	d020      	beq.n	8023f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023ef6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023ef8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023efc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023efe:	436f      	muls	r7, r5
 8023f00:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023f02:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f06:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f08:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f0c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f10:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f18:	44bc      	add	ip, r7
 8023f1a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f1e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f32:	ea4c 050a 	orr.w	r5, ip, sl
 8023f36:	9509      	str	r5, [sp, #36]	; 0x24
 8023f38:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023f3a:	2dff      	cmp	r5, #255	; 0xff
 8023f3c:	d020      	beq.n	8023f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023f3e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023f40:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023f44:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023f46:	436f      	muls	r7, r5
 8023f48:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023f4a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f4e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023f50:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f54:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f58:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f60:	44bc      	add	ip, r7
 8023f62:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f66:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f7a:	ea4c 050a 	orr.w	r5, ip, sl
 8023f7e:	950f      	str	r5, [sp, #60]	; 0x3c
 8023f80:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023f82:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023f86:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023f88:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023f8c:	fb0e f707 	mul.w	r7, lr, r7
 8023f90:	fb02 770c 	mla	r7, r2, ip, r7
 8023f94:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023f98:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023f9a:	fb00 770c 	mla	r7, r0, ip, r7
 8023f9e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023fa2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023fa4:	fb08 770c 	mla	r7, r8, ip, r7
 8023fa8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023fac:	fb0e fe0c 	mul.w	lr, lr, ip
 8023fb0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023fb4:	fb02 e303 	mla	r3, r2, r3, lr
 8023fb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023fba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023fbc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023fc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023fc2:	fb00 330a 	mla	r3, r0, sl, r3
 8023fc6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023fca:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023fce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023fd0:	f8b9 0000 	ldrh.w	r0, [r9]
 8023fd4:	4359      	muls	r1, r3
 8023fd6:	0a3f      	lsrs	r7, r7, #8
 8023fd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fdc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023fe0:	1c4b      	adds	r3, r1, #1
 8023fe2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023fe6:	ea47 070c 	orr.w	r7, r7, ip
 8023fea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023fee:	1202      	asrs	r2, r0, #8
 8023ff0:	0c3b      	lsrs	r3, r7, #16
 8023ff2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023ff6:	b2c9      	uxtb	r1, r1
 8023ff8:	fb13 f305 	smulbb	r3, r3, r5
 8023ffc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024000:	fb02 3201 	mla	r2, r2, r1, r3
 8024004:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024008:	10c3      	asrs	r3, r0, #3
 802400a:	b2ff      	uxtb	r7, r7
 802400c:	00c0      	lsls	r0, r0, #3
 802400e:	b2c0      	uxtb	r0, r0
 8024010:	fb17 f705 	smulbb	r7, r7, r5
 8024014:	fb00 7001 	mla	r0, r0, r1, r7
 8024018:	b292      	uxth	r2, r2
 802401a:	fb1c fc05 	smulbb	ip, ip, r5
 802401e:	b280      	uxth	r0, r0
 8024020:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024024:	fb03 c301 	mla	r3, r3, r1, ip
 8024028:	1c51      	adds	r1, r2, #1
 802402a:	f100 0c01 	add.w	ip, r0, #1
 802402e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024032:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024036:	b29b      	uxth	r3, r3
 8024038:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802403c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024040:	ea4c 0202 	orr.w	r2, ip, r2
 8024044:	f103 0c01 	add.w	ip, r3, #1
 8024048:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802404c:	095b      	lsrs	r3, r3, #5
 802404e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024052:	431a      	orrs	r2, r3
 8024054:	f8a9 2000 	strh.w	r2, [r9]
 8024058:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802405a:	441c      	add	r4, r3
 802405c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802405e:	f109 0902 	add.w	r9, r9, #2
 8024062:	441e      	add	r6, r3
 8024064:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024068:	e647      	b.n	8023cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802406a:	2800      	cmp	r0, #0
 802406c:	f43f aedf 	beq.w	8023e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024070:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024074:	9109      	str	r1, [sp, #36]	; 0x24
 8024076:	0e09      	lsrs	r1, r1, #24
 8024078:	9112      	str	r1, [sp, #72]	; 0x48
 802407a:	e6d8      	b.n	8023e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802407c:	b01d      	add	sp, #116	; 0x74
 802407e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024082 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024082:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024086:	b085      	sub	sp, #20
 8024088:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802408c:	9102      	str	r1, [sp, #8]
 802408e:	2c00      	cmp	r4, #0
 8024090:	fb04 7103 	mla	r1, r4, r3, r7
 8024094:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024098:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802409c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80240a0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80240a4:	f2c0 810c 	blt.w	80242c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80240a8:	45a6      	cmp	lr, r4
 80240aa:	f340 8109 	ble.w	80242c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80240ae:	2f00      	cmp	r7, #0
 80240b0:	f2c0 8104 	blt.w	80242bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80240b4:	42bb      	cmp	r3, r7
 80240b6:	f340 8101 	ble.w	80242bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80240ba:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80240be:	1c7a      	adds	r2, r7, #1
 80240c0:	f100 8101 	bmi.w	80242c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80240c4:	4293      	cmp	r3, r2
 80240c6:	f340 80fe 	ble.w	80242c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80240ca:	2e00      	cmp	r6, #0
 80240cc:	f000 80fd 	beq.w	80242ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80240d0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80240d4:	3401      	adds	r4, #1
 80240d6:	f100 80fc 	bmi.w	80242d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80240da:	45a6      	cmp	lr, r4
 80240dc:	f340 80f9 	ble.w	80242d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80240e0:	2800      	cmp	r0, #0
 80240e2:	f000 80f9 	beq.w	80242d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80240e6:	2f00      	cmp	r7, #0
 80240e8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80240ec:	f2c0 80ef 	blt.w	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80240f0:	42bb      	cmp	r3, r7
 80240f2:	f340 80ec 	ble.w	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80240f6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80240fa:	3701      	adds	r7, #1
 80240fc:	f100 80ef 	bmi.w	80242de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024100:	42bb      	cmp	r3, r7
 8024102:	f340 80ec 	ble.w	80242de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024106:	2e00      	cmp	r6, #0
 8024108:	f000 80eb 	beq.w	80242e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802410c:	6852      	ldr	r2, [r2, #4]
 802410e:	b2b6      	uxth	r6, r6
 8024110:	b280      	uxth	r0, r0
 8024112:	fb00 fe06 	mul.w	lr, r0, r6
 8024116:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802411a:	0136      	lsls	r6, r6, #4
 802411c:	eba6 070e 	sub.w	r7, r6, lr
 8024120:	b280      	uxth	r0, r0
 8024122:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024126:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802412a:	b2bf      	uxth	r7, r7
 802412c:	1a1b      	subs	r3, r3, r0
 802412e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024132:	b29b      	uxth	r3, r3
 8024134:	fb07 f60a 	mul.w	r6, r7, sl
 8024138:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802413c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024140:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024144:	fb00 6609 	mla	r6, r0, r9, r6
 8024148:	fb0e 6608 	mla	r6, lr, r8, r6
 802414c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024150:	9600      	str	r6, [sp, #0]
 8024152:	2e00      	cmp	r6, #0
 8024154:	f000 80af 	beq.w	80242b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024158:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802415c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024160:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024164:	fb0b f505 	mul.w	r5, fp, r5
 8024168:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802416c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024170:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024174:	44dc      	add	ip, fp
 8024176:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802417a:	9501      	str	r5, [sp, #4]
 802417c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024180:	9503      	str	r5, [sp, #12]
 8024182:	9d01      	ldr	r5, [sp, #4]
 8024184:	9e02      	ldr	r6, [sp, #8]
 8024186:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802418a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802418e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024192:	fb0a fc0c 	mul.w	ip, sl, ip
 8024196:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802419a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802419e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80241a2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80241a6:	4465      	add	r5, ip
 80241a8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80241ac:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80241b0:	fb09 fc0c 	mul.w	ip, r9, ip
 80241b4:	fb09 f904 	mul.w	r9, r9, r4
 80241b8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80241bc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80241c0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80241c4:	fb08 f404 	mul.w	r4, r8, r4
 80241c8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80241cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80241d0:	fb08 f802 	mul.w	r8, r8, r2
 80241d4:	fb0a fa01 	mul.w	sl, sl, r1
 80241d8:	0a22      	lsrs	r2, r4, #8
 80241da:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80241de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80241e2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80241e6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80241ea:	4414      	add	r4, r2
 80241ec:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80241f0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80241f4:	0a2d      	lsrs	r5, r5, #8
 80241f6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80241fa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80241fe:	9a03      	ldr	r2, [sp, #12]
 8024200:	8836      	ldrh	r6, [r6, #0]
 8024202:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024206:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802420a:	437d      	muls	r5, r7
 802420c:	4461      	add	r1, ip
 802420e:	0a24      	lsrs	r4, r4, #8
 8024210:	fb02 5503 	mla	r5, r2, r3, r5
 8024214:	0a09      	lsrs	r1, r1, #8
 8024216:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802421a:	fb04 540e 	mla	r4, r4, lr, r5
 802421e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024222:	fb01 4100 	mla	r1, r1, r0, r4
 8024226:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802422a:	0a09      	lsrs	r1, r1, #8
 802422c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024230:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024234:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024238:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802423c:	fb07 f70a 	mul.w	r7, r7, sl
 8024240:	fb03 7101 	mla	r1, r3, r1, r7
 8024244:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024248:	9b00      	ldr	r3, [sp, #0]
 802424a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802424e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024252:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024256:	fb00 e101 	mla	r1, r0, r1, lr
 802425a:	43da      	mvns	r2, r3
 802425c:	1233      	asrs	r3, r6, #8
 802425e:	b2d2      	uxtb	r2, r2
 8024260:	10f0      	asrs	r0, r6, #3
 8024262:	0a09      	lsrs	r1, r1, #8
 8024264:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024268:	00f6      	lsls	r6, r6, #3
 802426a:	4353      	muls	r3, r2
 802426c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024270:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024274:	b2f6      	uxtb	r6, r6
 8024276:	4321      	orrs	r1, r4
 8024278:	4350      	muls	r0, r2
 802427a:	4356      	muls	r6, r2
 802427c:	1c5a      	adds	r2, r3, #1
 802427e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024282:	0c0b      	lsrs	r3, r1, #16
 8024284:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024288:	1c42      	adds	r2, r0, #1
 802428a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802428e:	0a0a      	lsrs	r2, r1, #8
 8024290:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024294:	021b      	lsls	r3, r3, #8
 8024296:	00d2      	lsls	r2, r2, #3
 8024298:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802429c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80242a0:	4313      	orrs	r3, r2
 80242a2:	1c72      	adds	r2, r6, #1
 80242a4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80242a8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80242ac:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80242b0:	4319      	orrs	r1, r3
 80242b2:	9b02      	ldr	r3, [sp, #8]
 80242b4:	8019      	strh	r1, [r3, #0]
 80242b6:	b005      	add	sp, #20
 80242b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242bc:	2500      	movs	r5, #0
 80242be:	e6fe      	b.n	80240be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80242c0:	2100      	movs	r1, #0
 80242c2:	460d      	mov	r5, r1
 80242c4:	e706      	b.n	80240d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80242c6:	2100      	movs	r1, #0
 80242c8:	e704      	b.n	80240d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80242ca:	4631      	mov	r1, r6
 80242cc:	e702      	b.n	80240d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80242ce:	2400      	movs	r4, #0
 80242d0:	e713      	b.n	80240fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80242d2:	2200      	movs	r2, #0
 80242d4:	4614      	mov	r4, r2
 80242d6:	e71a      	b.n	802410e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80242d8:	4602      	mov	r2, r0
 80242da:	4604      	mov	r4, r0
 80242dc:	e717      	b.n	802410e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80242de:	2200      	movs	r2, #0
 80242e0:	e715      	b.n	802410e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80242e2:	4632      	mov	r2, r6
 80242e4:	e713      	b.n	802410e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080242e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80242e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242ec:	b09b      	sub	sp, #108	; 0x6c
 80242ee:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80242f2:	9218      	str	r2, [sp, #96]	; 0x60
 80242f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80242f6:	9116      	str	r1, [sp, #88]	; 0x58
 80242f8:	9307      	str	r3, [sp, #28]
 80242fa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80242fe:	9019      	str	r0, [sp, #100]	; 0x64
 8024300:	6850      	ldr	r0, [r2, #4]
 8024302:	6812      	ldr	r2, [r2, #0]
 8024304:	fb00 1303 	mla	r3, r0, r3, r1
 8024308:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802430c:	930a      	str	r3, [sp, #40]	; 0x28
 802430e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024310:	681b      	ldr	r3, [r3, #0]
 8024312:	930f      	str	r3, [sp, #60]	; 0x3c
 8024314:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024316:	2b00      	cmp	r3, #0
 8024318:	dc03      	bgt.n	8024322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802431a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802431c:	2b00      	cmp	r3, #0
 802431e:	f340 8386 	ble.w	8024a2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024322:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024324:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024328:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802432c:	1e48      	subs	r0, r1, #1
 802432e:	1e57      	subs	r7, r2, #1
 8024330:	9b07      	ldr	r3, [sp, #28]
 8024332:	2b00      	cmp	r3, #0
 8024334:	f340 8166 	ble.w	8024604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024338:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802433c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024340:	d406      	bmi.n	8024350 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024342:	4584      	cmp	ip, r0
 8024344:	da04      	bge.n	8024350 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024346:	2b00      	cmp	r3, #0
 8024348:	db02      	blt.n	8024350 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802434a:	42bb      	cmp	r3, r7
 802434c:	f2c0 815b 	blt.w	8024606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024350:	f11c 0c01 	adds.w	ip, ip, #1
 8024354:	f100 814b 	bmi.w	80245ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024358:	4561      	cmp	r1, ip
 802435a:	f2c0 8148 	blt.w	80245ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802435e:	3301      	adds	r3, #1
 8024360:	f100 8145 	bmi.w	80245ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024364:	429a      	cmp	r2, r3
 8024366:	f2c0 8142 	blt.w	80245ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802436a:	9b07      	ldr	r3, [sp, #28]
 802436c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802436e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024370:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024372:	2b00      	cmp	r3, #0
 8024374:	f340 8165 	ble.w	8024642 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024378:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802437a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802437c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024380:	689b      	ldr	r3, [r3, #8]
 8024382:	1422      	asrs	r2, r4, #16
 8024384:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024388:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802438c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024390:	f100 81d5 	bmi.w	802473e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024394:	f103 38ff 	add.w	r8, r3, #4294967295
 8024398:	4542      	cmp	r2, r8
 802439a:	f280 81d0 	bge.w	802473e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802439e:	f1bc 0f00 	cmp.w	ip, #0
 80243a2:	f2c0 81cc 	blt.w	802473e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80243a6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80243aa:	45c4      	cmp	ip, r8
 80243ac:	f280 81c7 	bge.w	802473e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80243b0:	b21b      	sxth	r3, r3
 80243b2:	fb0c 2203 	mla	r2, ip, r3, r2
 80243b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80243b8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80243bc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80243c0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80243c4:	2900      	cmp	r1, #0
 80243c6:	f000 8182 	beq.w	80246ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80243ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80243ce:	950b      	str	r5, [sp, #44]	; 0x2c
 80243d0:	0e2d      	lsrs	r5, r5, #24
 80243d2:	9512      	str	r5, [sp, #72]	; 0x48
 80243d4:	b180      	cbz	r0, 80243f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80243d6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80243da:	3b01      	subs	r3, #1
 80243dc:	009b      	lsls	r3, r3, #2
 80243de:	3304      	adds	r3, #4
 80243e0:	eb08 0c03 	add.w	ip, r8, r3
 80243e4:	f858 3003 	ldr.w	r3, [r8, r3]
 80243e8:	9308      	str	r3, [sp, #32]
 80243ea:	0e1b      	lsrs	r3, r3, #24
 80243ec:	9310      	str	r3, [sp, #64]	; 0x40
 80243ee:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80243f2:	930c      	str	r3, [sp, #48]	; 0x30
 80243f4:	0e1b      	lsrs	r3, r3, #24
 80243f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80243f8:	b289      	uxth	r1, r1
 80243fa:	b280      	uxth	r0, r0
 80243fc:	fb01 f900 	mul.w	r9, r1, r0
 8024400:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024404:	0109      	lsls	r1, r1, #4
 8024406:	eba1 0809 	sub.w	r8, r1, r9
 802440a:	b280      	uxth	r0, r0
 802440c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024410:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024412:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024414:	fa1f f888 	uxth.w	r8, r8
 8024418:	1a09      	subs	r1, r1, r0
 802441a:	b289      	uxth	r1, r1
 802441c:	fb08 f303 	mul.w	r3, r8, r3
 8024420:	fb01 330e 	mla	r3, r1, lr, r3
 8024424:	fb00 3305 	mla	r3, r0, r5, r3
 8024428:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802442a:	fb09 3305 	mla	r3, r9, r5, r3
 802442e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024432:	2b00      	cmp	r3, #0
 8024434:	f000 80d2 	beq.w	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024438:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802443c:	d01b      	beq.n	8024476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802443e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024442:	fb0e fa0a 	mul.w	sl, lr, sl
 8024446:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802444a:	fb0e fe02 	mul.w	lr, lr, r2
 802444e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024452:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024456:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802445a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802445e:	4452      	add	r2, sl
 8024460:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024464:	0a12      	lsrs	r2, r2, #8
 8024466:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802446a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802446e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024472:	ea42 020c 	orr.w	r2, r2, ip
 8024476:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024478:	2dff      	cmp	r5, #255	; 0xff
 802447a:	d021      	beq.n	80244c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802447c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802447e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024482:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024484:	fb05 fb0b 	mul.w	fp, r5, fp
 8024488:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802448a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802448e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024490:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024494:	fb05 fa0a 	mul.w	sl, r5, sl
 8024498:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802449c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80244a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80244a4:	44de      	add	lr, fp
 80244a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80244aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80244ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80244b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244ba:	ea4e 050a 	orr.w	r5, lr, sl
 80244be:	950b      	str	r5, [sp, #44]	; 0x2c
 80244c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80244c2:	2dff      	cmp	r5, #255	; 0xff
 80244c4:	d021      	beq.n	802450a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80244c6:	9d08      	ldr	r5, [sp, #32]
 80244c8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80244cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80244ce:	fb05 fb0b 	mul.w	fp, r5, fp
 80244d2:	9d08      	ldr	r5, [sp, #32]
 80244d4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80244d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80244da:	fb05 fa0e 	mul.w	sl, r5, lr
 80244de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80244e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80244e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80244ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80244ee:	44de      	add	lr, fp
 80244f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80244f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80244f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024500:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024504:	ea4e 050a 	orr.w	r5, lr, sl
 8024508:	9508      	str	r5, [sp, #32]
 802450a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802450c:	2dff      	cmp	r5, #255	; 0xff
 802450e:	d021      	beq.n	8024554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024510:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024512:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024516:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024518:	fb05 fb0b 	mul.w	fp, r5, fp
 802451c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802451e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024522:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024524:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024528:	fb05 fa0a 	mul.w	sl, r5, sl
 802452c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024530:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024534:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024538:	44de      	add	lr, fp
 802453a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802453e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024542:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024546:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802454a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802454e:	ea4e 050a 	orr.w	r5, lr, sl
 8024552:	950c      	str	r5, [sp, #48]	; 0x30
 8024554:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024556:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802455a:	9d08      	ldr	r5, [sp, #32]
 802455c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024560:	fb08 fc0c 	mul.w	ip, r8, ip
 8024564:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024568:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802456c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802456e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024572:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024576:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024578:	fb09 cc0e 	mla	ip, r9, lr, ip
 802457c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024580:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024584:	fb08 f80e 	mul.w	r8, r8, lr
 8024588:	fb01 8202 	mla	r2, r1, r2, r8
 802458c:	9908      	ldr	r1, [sp, #32]
 802458e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024592:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024594:	fb00 220a 	mla	r2, r0, sl, r2
 8024598:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802459c:	fb09 2900 	mla	r9, r9, r0, r2
 80245a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80245a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245ac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80245b0:	ea4c 0c09 	orr.w	ip, ip, r9
 80245b4:	2bff      	cmp	r3, #255	; 0xff
 80245b6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80245ba:	f040 8091 	bne.w	80246e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80245be:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80245c2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80245c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245ca:	f022 0207 	bic.w	r2, r2, #7
 80245ce:	431a      	orrs	r2, r3
 80245d0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80245d4:	ea4c 0c02 	orr.w	ip, ip, r2
 80245d8:	f8a7 c000 	strh.w	ip, [r7]
 80245dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80245de:	441c      	add	r4, r3
 80245e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245e2:	441e      	add	r6, r3
 80245e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80245e6:	3b01      	subs	r3, #1
 80245e8:	3702      	adds	r7, #2
 80245ea:	9317      	str	r3, [sp, #92]	; 0x5c
 80245ec:	e6c0      	b.n	8024370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80245ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80245f0:	441c      	add	r4, r3
 80245f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245f4:	441e      	add	r6, r3
 80245f6:	9b07      	ldr	r3, [sp, #28]
 80245f8:	3b01      	subs	r3, #1
 80245fa:	9307      	str	r3, [sp, #28]
 80245fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80245fe:	3302      	adds	r3, #2
 8024600:	930a      	str	r3, [sp, #40]	; 0x28
 8024602:	e695      	b.n	8024330 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024604:	d024      	beq.n	8024650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024606:	9b07      	ldr	r3, [sp, #28]
 8024608:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802460a:	3b01      	subs	r3, #1
 802460c:	fb00 4003 	mla	r0, r0, r3, r4
 8024610:	1400      	asrs	r0, r0, #16
 8024612:	f53f aeaa 	bmi.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024616:	3901      	subs	r1, #1
 8024618:	4288      	cmp	r0, r1
 802461a:	f6bf aea6 	bge.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802461e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024620:	fb01 6303 	mla	r3, r1, r3, r6
 8024624:	141b      	asrs	r3, r3, #16
 8024626:	f53f aea0 	bmi.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802462a:	3a01      	subs	r2, #1
 802462c:	4293      	cmp	r3, r2
 802462e:	f6bf ae9c 	bge.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024632:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024636:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802463a:	f1bb 0f00 	cmp.w	fp, #0
 802463e:	f300 809a 	bgt.w	8024776 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024642:	9b07      	ldr	r3, [sp, #28]
 8024644:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802464a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802464e:	930a      	str	r3, [sp, #40]	; 0x28
 8024650:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024652:	2b00      	cmp	r3, #0
 8024654:	f340 81eb 	ble.w	8024a2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024658:	ee30 0a04 	vadd.f32	s0, s0, s8
 802465c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024660:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024664:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024666:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802466a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802466e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024672:	eef0 6a62 	vmov.f32	s13, s5
 8024676:	ee61 7a27 	vmul.f32	s15, s2, s15
 802467a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802467e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024682:	ee16 4a90 	vmov	r4, s13
 8024686:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802468a:	eef0 6a43 	vmov.f32	s13, s6
 802468e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024692:	ee12 2a90 	vmov	r2, s5
 8024696:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802469a:	fb92 f3f3 	sdiv	r3, r2, r3
 802469e:	ee13 2a10 	vmov	r2, s6
 80246a2:	9327      	str	r3, [sp, #156]	; 0x9c
 80246a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80246a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80246aa:	9328      	str	r3, [sp, #160]	; 0xa0
 80246ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80246ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80246b0:	3b01      	subs	r3, #1
 80246b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246b6:	9316      	str	r3, [sp, #88]	; 0x58
 80246b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80246ba:	bf08      	it	eq
 80246bc:	4613      	moveq	r3, r2
 80246be:	ee16 6a90 	vmov	r6, s13
 80246c2:	9307      	str	r3, [sp, #28]
 80246c4:	eeb0 3a67 	vmov.f32	s6, s15
 80246c8:	eef0 2a47 	vmov.f32	s5, s14
 80246cc:	e622      	b.n	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80246ce:	2800      	cmp	r0, #0
 80246d0:	f43f ae92 	beq.w	80243f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80246d4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80246d8:	9308      	str	r3, [sp, #32]
 80246da:	0e1b      	lsrs	r3, r3, #24
 80246dc:	9310      	str	r3, [sp, #64]	; 0x40
 80246de:	e68b      	b.n	80243f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80246e0:	8839      	ldrh	r1, [r7, #0]
 80246e2:	4dd4      	ldr	r5, [pc, #848]	; (8024a34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80246e4:	43db      	mvns	r3, r3
 80246e6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80246ea:	fa5f f883 	uxtb.w	r8, r3
 80246ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80246f2:	fb0e fe08 	mul.w	lr, lr, r8
 80246f6:	10c8      	asrs	r0, r1, #3
 80246f8:	00cb      	lsls	r3, r1, #3
 80246fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80246fe:	f10e 0101 	add.w	r1, lr, #1
 8024702:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8024706:	fb00 f008 	mul.w	r0, r0, r8
 802470a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802470e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8024712:	f100 0e01 	add.w	lr, r0, #1
 8024716:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802471a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802471e:	b2db      	uxtb	r3, r3
 8024720:	b2c9      	uxtb	r1, r1
 8024722:	00d2      	lsls	r2, r2, #3
 8024724:	fb03 f308 	mul.w	r3, r3, r8
 8024728:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802472c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024730:	430a      	orrs	r2, r1
 8024732:	1c59      	adds	r1, r3, #1
 8024734:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024738:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802473c:	e748      	b.n	80245d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802473e:	f112 0801 	adds.w	r8, r2, #1
 8024742:	f53f af4b 	bmi.w	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024746:	4543      	cmp	r3, r8
 8024748:	f6ff af48 	blt.w	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802474c:	f11c 0801 	adds.w	r8, ip, #1
 8024750:	f53f af44 	bmi.w	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024754:	45c6      	cmp	lr, r8
 8024756:	f6ff af41 	blt.w	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802475a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802475e:	fa0f f28e 	sxth.w	r2, lr
 8024762:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024766:	9200      	str	r2, [sp, #0]
 8024768:	b21b      	sxth	r3, r3
 802476a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802476c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802476e:	4639      	mov	r1, r7
 8024770:	f7ff fc87 	bl	8024082 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024774:	e732      	b.n	80245dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024776:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024778:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802477a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802477e:	1421      	asrs	r1, r4, #16
 8024780:	1433      	asrs	r3, r6, #16
 8024782:	fb07 1303 	mla	r3, r7, r3, r1
 8024786:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024788:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802478c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024790:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024794:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024798:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802479c:	2a00      	cmp	r2, #0
 802479e:	f000 8107 	beq.w	80249b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80247a2:	684d      	ldr	r5, [r1, #4]
 80247a4:	950d      	str	r5, [sp, #52]	; 0x34
 80247a6:	0e2d      	lsrs	r5, r5, #24
 80247a8:	9514      	str	r5, [sp, #80]	; 0x50
 80247aa:	b178      	cbz	r0, 80247cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80247ac:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80247b0:	3f01      	subs	r7, #1
 80247b2:	00bf      	lsls	r7, r7, #2
 80247b4:	3704      	adds	r7, #4
 80247b6:	eb01 0e07 	add.w	lr, r1, r7
 80247ba:	59c9      	ldr	r1, [r1, r7]
 80247bc:	9109      	str	r1, [sp, #36]	; 0x24
 80247be:	0e09      	lsrs	r1, r1, #24
 80247c0:	9111      	str	r1, [sp, #68]	; 0x44
 80247c2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80247c6:	910e      	str	r1, [sp, #56]	; 0x38
 80247c8:	0e09      	lsrs	r1, r1, #24
 80247ca:	9115      	str	r1, [sp, #84]	; 0x54
 80247cc:	b292      	uxth	r2, r2
 80247ce:	b280      	uxth	r0, r0
 80247d0:	fb02 f900 	mul.w	r9, r2, r0
 80247d4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80247d8:	0112      	lsls	r2, r2, #4
 80247da:	eba2 0e09 	sub.w	lr, r2, r9
 80247de:	b280      	uxth	r0, r0
 80247e0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80247e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80247e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80247e8:	fa1f fe8e 	uxth.w	lr, lr
 80247ec:	1a09      	subs	r1, r1, r0
 80247ee:	b289      	uxth	r1, r1
 80247f0:	fb0e f202 	mul.w	r2, lr, r2
 80247f4:	fb01 220c 	mla	r2, r1, ip, r2
 80247f8:	fb00 2205 	mla	r2, r0, r5, r2
 80247fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80247fe:	fb09 2205 	mla	r2, r9, r5, r2
 8024802:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024806:	2a00      	cmp	r2, #0
 8024808:	f000 80c9 	beq.w	802499e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802480c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024810:	d019      	beq.n	8024846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8024812:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024816:	fb0c fa0a 	mul.w	sl, ip, sl
 802481a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802481e:	fb0c fc03 	mul.w	ip, ip, r3
 8024822:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024826:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802482a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802482e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024832:	4453      	add	r3, sl
 8024834:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024838:	0a1b      	lsrs	r3, r3, #8
 802483a:	0a3f      	lsrs	r7, r7, #8
 802483c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024840:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024844:	433b      	orrs	r3, r7
 8024846:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024848:	2dff      	cmp	r5, #255	; 0xff
 802484a:	d020      	beq.n	802488e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802484c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802484e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024852:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024854:	436f      	muls	r7, r5
 8024856:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024858:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802485c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802485e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024862:	fb05 fa0a 	mul.w	sl, r5, sl
 8024866:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802486a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802486e:	44bc      	add	ip, r7
 8024870:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024874:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024878:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802487c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024880:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024884:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024888:	ea4c 050a 	orr.w	r5, ip, sl
 802488c:	950d      	str	r5, [sp, #52]	; 0x34
 802488e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024890:	2dff      	cmp	r5, #255	; 0xff
 8024892:	d020      	beq.n	80248d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024894:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024896:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802489a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802489c:	436f      	muls	r7, r5
 802489e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80248a0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80248a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80248a6:	fb05 fa0c 	mul.w	sl, r5, ip
 80248aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80248ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80248b6:	44bc      	add	ip, r7
 80248b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80248bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80248c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80248c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80248d0:	ea4c 050a 	orr.w	r5, ip, sl
 80248d4:	9509      	str	r5, [sp, #36]	; 0x24
 80248d6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248d8:	2dff      	cmp	r5, #255	; 0xff
 80248da:	d020      	beq.n	802491e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80248dc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80248de:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80248e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248e4:	436f      	muls	r7, r5
 80248e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80248e8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80248ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80248f2:	fb05 fa0a 	mul.w	sl, r5, sl
 80248f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80248fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248fe:	44bc      	add	ip, r7
 8024900:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024904:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024908:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802490c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024910:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024914:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024918:	ea4c 050a 	orr.w	r5, ip, sl
 802491c:	950e      	str	r5, [sp, #56]	; 0x38
 802491e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024920:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024924:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024926:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802492a:	fb0e f707 	mul.w	r7, lr, r7
 802492e:	fb01 770c 	mla	r7, r1, ip, r7
 8024932:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024936:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024938:	fb00 770c 	mla	r7, r0, ip, r7
 802493c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024940:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024942:	fb09 770c 	mla	r7, r9, ip, r7
 8024946:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802494a:	fb0e fe0c 	mul.w	lr, lr, ip
 802494e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024952:	fb01 e303 	mla	r3, r1, r3, lr
 8024956:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024958:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802495c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802495e:	fb00 330a 	mla	r3, r0, sl, r3
 8024962:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024966:	fb09 3c0c 	mla	ip, r9, ip, r3
 802496a:	0a3f      	lsrs	r7, r7, #8
 802496c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024970:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024974:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024978:	ea47 070c 	orr.w	r7, r7, ip
 802497c:	2aff      	cmp	r2, #255	; 0xff
 802497e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024982:	d11e      	bne.n	80249c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024984:	097a      	lsrs	r2, r7, #5
 8024986:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802498a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802498e:	f023 0307 	bic.w	r3, r3, #7
 8024992:	4313      	orrs	r3, r2
 8024994:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024998:	431f      	orrs	r7, r3
 802499a:	f8a8 7000 	strh.w	r7, [r8]
 802499e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80249a0:	441c      	add	r4, r3
 80249a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249a4:	f108 0802 	add.w	r8, r8, #2
 80249a8:	441e      	add	r6, r3
 80249aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80249ae:	e644      	b.n	802463a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80249b0:	2800      	cmp	r0, #0
 80249b2:	f43f af0b 	beq.w	80247cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80249b6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80249ba:	9109      	str	r1, [sp, #36]	; 0x24
 80249bc:	0e09      	lsrs	r1, r1, #24
 80249be:	9111      	str	r1, [sp, #68]	; 0x44
 80249c0:	e704      	b.n	80247cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80249c2:	f8b8 1000 	ldrh.w	r1, [r8]
 80249c6:	43d2      	mvns	r2, r2
 80249c8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80249cc:	fa5f fe82 	uxtb.w	lr, r2
 80249d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80249d4:	fb0c fc0e 	mul.w	ip, ip, lr
 80249d8:	10c8      	asrs	r0, r1, #3
 80249da:	00ca      	lsls	r2, r1, #3
 80249dc:	f10c 0101 	add.w	r1, ip, #1
 80249e0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80249e4:	0c39      	lsrs	r1, r7, #16
 80249e6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80249ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80249ee:	4911      	ldr	r1, [pc, #68]	; (8024a34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80249f0:	fb00 f00e 	mul.w	r0, r0, lr
 80249f4:	fa5f fc8c 	uxtb.w	ip, ip
 80249f8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80249fc:	b2d2      	uxtb	r2, r2
 80249fe:	1c41      	adds	r1, r0, #1
 8024a00:	fb02 f20e 	mul.w	r2, r2, lr
 8024a04:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024a08:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024a0c:	1c51      	adds	r1, r2, #1
 8024a0e:	00c0      	lsls	r0, r0, #3
 8024a10:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024a14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024a18:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024a1c:	ea4c 0c00 	orr.w	ip, ip, r0
 8024a20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024a24:	ea47 0c0c 	orr.w	ip, r7, ip
 8024a28:	f8a8 c000 	strh.w	ip, [r8]
 8024a2c:	e7b7      	b.n	802499e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024a2e:	b01b      	add	sp, #108	; 0x6c
 8024a30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024a34:	fffff800 	.word	0xfffff800

08024a38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024a38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024a3c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024a40:	2d00      	cmp	r5, #0
 8024a42:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024a46:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024a4a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024a4e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024a52:	fb05 0e03 	mla	lr, r5, r3, r0
 8024a56:	f2c0 808c 	blt.w	8024b72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024a5a:	45a9      	cmp	r9, r5
 8024a5c:	f340 8089 	ble.w	8024b72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024a60:	2800      	cmp	r0, #0
 8024a62:	f2c0 8084 	blt.w	8024b6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024a66:	4580      	cmp	r8, r0
 8024a68:	f340 8081 	ble.w	8024b6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024a6c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024a70:	f01e 0f01 	tst.w	lr, #1
 8024a74:	5d16      	ldrb	r6, [r2, r4]
 8024a76:	bf0c      	ite	eq
 8024a78:	f006 060f 	andeq.w	r6, r6, #15
 8024a7c:	1136      	asrne	r6, r6, #4
 8024a7e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024a82:	b2f6      	uxtb	r6, r6
 8024a84:	1c44      	adds	r4, r0, #1
 8024a86:	d477      	bmi.n	8024b78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024a88:	45a0      	cmp	r8, r4
 8024a8a:	dd75      	ble.n	8024b78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024a8c:	2f00      	cmp	r7, #0
 8024a8e:	d075      	beq.n	8024b7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024a90:	f10e 0a01 	add.w	sl, lr, #1
 8024a94:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024a98:	f01a 0f01 	tst.w	sl, #1
 8024a9c:	5d14      	ldrb	r4, [r2, r4]
 8024a9e:	bf0c      	ite	eq
 8024aa0:	f004 040f 	andeq.w	r4, r4, #15
 8024aa4:	1124      	asrne	r4, r4, #4
 8024aa6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024aaa:	b2e4      	uxtb	r4, r4
 8024aac:	3501      	adds	r5, #1
 8024aae:	d469      	bmi.n	8024b84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024ab0:	45a9      	cmp	r9, r5
 8024ab2:	dd67      	ble.n	8024b84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024ab4:	f1bc 0f00 	cmp.w	ip, #0
 8024ab8:	d067      	beq.n	8024b8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024aba:	2800      	cmp	r0, #0
 8024abc:	db60      	blt.n	8024b80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024abe:	4580      	cmp	r8, r0
 8024ac0:	dd5e      	ble.n	8024b80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024ac2:	eb03 090e 	add.w	r9, r3, lr
 8024ac6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024aca:	f019 0f01 	tst.w	r9, #1
 8024ace:	5d55      	ldrb	r5, [r2, r5]
 8024ad0:	bf0c      	ite	eq
 8024ad2:	f005 050f 	andeq.w	r5, r5, #15
 8024ad6:	112d      	asrne	r5, r5, #4
 8024ad8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024adc:	b2ed      	uxtb	r5, r5
 8024ade:	3001      	adds	r0, #1
 8024ae0:	d456      	bmi.n	8024b90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024ae2:	4580      	cmp	r8, r0
 8024ae4:	dd54      	ble.n	8024b90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024ae6:	2f00      	cmp	r7, #0
 8024ae8:	d054      	beq.n	8024b94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024aea:	3301      	adds	r3, #1
 8024aec:	449e      	add	lr, r3
 8024aee:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024af2:	f01e 0f01 	tst.w	lr, #1
 8024af6:	5cd0      	ldrb	r0, [r2, r3]
 8024af8:	bf0c      	ite	eq
 8024afa:	f000 000f 	andeq.w	r0, r0, #15
 8024afe:	1100      	asrne	r0, r0, #4
 8024b00:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024b04:	b2c3      	uxtb	r3, r0
 8024b06:	b2ba      	uxth	r2, r7
 8024b08:	fa1f fc8c 	uxth.w	ip, ip
 8024b0c:	fb02 f00c 	mul.w	r0, r2, ip
 8024b10:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024b14:	0112      	lsls	r2, r2, #4
 8024b16:	fa1f fc8c 	uxth.w	ip, ip
 8024b1a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024b1e:	1a12      	subs	r2, r2, r0
 8024b20:	eba7 070c 	sub.w	r7, r7, ip
 8024b24:	b292      	uxth	r2, r2
 8024b26:	b2bf      	uxth	r7, r7
 8024b28:	4362      	muls	r2, r4
 8024b2a:	fb06 2207 	mla	r2, r6, r7, r2
 8024b2e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024b32:	fb00 5303 	mla	r3, r0, r3, r5
 8024b36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b3a:	b1b3      	cbz	r3, 8024b6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024b3c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024b40:	435a      	muls	r2, r3
 8024b42:	1c53      	adds	r3, r2, #1
 8024b44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b48:	4a2d      	ldr	r2, [pc, #180]	; (8024c00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024b4a:	121b      	asrs	r3, r3, #8
 8024b4c:	6812      	ldr	r2, [r2, #0]
 8024b4e:	2bff      	cmp	r3, #255	; 0xff
 8024b50:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024b54:	d120      	bne.n	8024b98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024b56:	4b2b      	ldr	r3, [pc, #172]	; (8024c04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024b58:	0950      	lsrs	r0, r2, #5
 8024b5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024b5e:	4033      	ands	r3, r6
 8024b60:	4318      	orrs	r0, r3
 8024b62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024b66:	4302      	orrs	r2, r0
 8024b68:	800a      	strh	r2, [r1, #0]
 8024b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024b6e:	2600      	movs	r6, #0
 8024b70:	e788      	b.n	8024a84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024b72:	2400      	movs	r4, #0
 8024b74:	4626      	mov	r6, r4
 8024b76:	e799      	b.n	8024aac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024b78:	2400      	movs	r4, #0
 8024b7a:	e797      	b.n	8024aac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024b7c:	463c      	mov	r4, r7
 8024b7e:	e795      	b.n	8024aac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024b80:	2500      	movs	r5, #0
 8024b82:	e7ac      	b.n	8024ade <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024b84:	2300      	movs	r3, #0
 8024b86:	461d      	mov	r5, r3
 8024b88:	e7bd      	b.n	8024b06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024b8a:	4663      	mov	r3, ip
 8024b8c:	4665      	mov	r5, ip
 8024b8e:	e7ba      	b.n	8024b06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024b90:	2300      	movs	r3, #0
 8024b92:	e7b8      	b.n	8024b06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024b94:	463b      	mov	r3, r7
 8024b96:	e7b6      	b.n	8024b06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024b98:	880d      	ldrh	r5, [r1, #0]
 8024b9a:	b29f      	uxth	r7, r3
 8024b9c:	122c      	asrs	r4, r5, #8
 8024b9e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024ba2:	43db      	mvns	r3, r3
 8024ba4:	b2db      	uxtb	r3, r3
 8024ba6:	fb10 f007 	smulbb	r0, r0, r7
 8024baa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024bae:	fb04 0403 	mla	r4, r4, r3, r0
 8024bb2:	b2f6      	uxtb	r6, r6
 8024bb4:	10e8      	asrs	r0, r5, #3
 8024bb6:	b2d2      	uxtb	r2, r2
 8024bb8:	00ed      	lsls	r5, r5, #3
 8024bba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024bbe:	fb12 f207 	smulbb	r2, r2, r7
 8024bc2:	fb16 f607 	smulbb	r6, r6, r7
 8024bc6:	b2ed      	uxtb	r5, r5
 8024bc8:	b2a4      	uxth	r4, r4
 8024bca:	fb00 6603 	mla	r6, r0, r3, r6
 8024bce:	fb05 2303 	mla	r3, r5, r3, r2
 8024bd2:	b29a      	uxth	r2, r3
 8024bd4:	1c63      	adds	r3, r4, #1
 8024bd6:	b2b0      	uxth	r0, r6
 8024bd8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024bdc:	1c53      	adds	r3, r2, #1
 8024bde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024be2:	1c42      	adds	r2, r0, #1
 8024be4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024be8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024bec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024bf0:	0940      	lsrs	r0, r0, #5
 8024bf2:	4323      	orrs	r3, r4
 8024bf4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024bf8:	4303      	orrs	r3, r0
 8024bfa:	800b      	strh	r3, [r1, #0]
 8024bfc:	e7b5      	b.n	8024b6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024bfe:	bf00      	nop
 8024c00:	20012e6c 	.word	0x20012e6c
 8024c04:	00fff800 	.word	0x00fff800

08024c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c0c:	b097      	sub	sp, #92	; 0x5c
 8024c0e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024c12:	9214      	str	r2, [sp, #80]	; 0x50
 8024c14:	9309      	str	r3, [sp, #36]	; 0x24
 8024c16:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024c18:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024c1c:	910d      	str	r1, [sp, #52]	; 0x34
 8024c1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024c20:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024c24:	9015      	str	r0, [sp, #84]	; 0x54
 8024c26:	6850      	ldr	r0, [r2, #4]
 8024c28:	6812      	ldr	r2, [r2, #0]
 8024c2a:	fb00 1303 	mla	r3, r0, r3, r1
 8024c2e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024c32:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c34:	689b      	ldr	r3, [r3, #8]
 8024c36:	3301      	adds	r3, #1
 8024c38:	f023 0301 	bic.w	r3, r3, #1
 8024c3c:	930a      	str	r3, [sp, #40]	; 0x28
 8024c3e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c40:	681f      	ldr	r7, [r3, #0]
 8024c42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024c44:	2b00      	cmp	r3, #0
 8024c46:	dc03      	bgt.n	8024c50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024c48:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024c4a:	2b00      	cmp	r3, #0
 8024c4c:	f340 8287 	ble.w	802515e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024c50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024c56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024c5a:	1e48      	subs	r0, r1, #1
 8024c5c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024c60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c62:	2b00      	cmp	r3, #0
 8024c64:	f340 80c4 	ble.w	8024df0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024c68:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024c6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024c70:	d406      	bmi.n	8024c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024c72:	4586      	cmp	lr, r0
 8024c74:	da04      	bge.n	8024c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024c76:	2b00      	cmp	r3, #0
 8024c78:	db02      	blt.n	8024c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024c7a:	4563      	cmp	r3, ip
 8024c7c:	f2c0 80b9 	blt.w	8024df2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024c80:	f11e 0e01 	adds.w	lr, lr, #1
 8024c84:	f100 80aa 	bmi.w	8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024c88:	4571      	cmp	r1, lr
 8024c8a:	f2c0 80a7 	blt.w	8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024c8e:	3301      	adds	r3, #1
 8024c90:	f100 80a4 	bmi.w	8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024c94:	429a      	cmp	r2, r3
 8024c96:	f2c0 80a1 	blt.w	8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c9c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024ca0:	930e      	str	r3, [sp, #56]	; 0x38
 8024ca2:	46c8      	mov	r8, r9
 8024ca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024ca6:	2b00      	cmp	r3, #0
 8024ca8:	f340 80c3 	ble.w	8024e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024cae:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024cb2:	1423      	asrs	r3, r4, #16
 8024cb4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024cb8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024cbc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024cc0:	f100 814d 	bmi.w	8024f5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024cc4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024cc8:	455b      	cmp	r3, fp
 8024cca:	f280 8148 	bge.w	8024f5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024cce:	2800      	cmp	r0, #0
 8024cd0:	f2c0 8145 	blt.w	8024f5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024cd4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024cd8:	4558      	cmp	r0, fp
 8024cda:	f280 8140 	bge.w	8024f5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024cde:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024ce0:	fb00 3305 	mla	r3, r0, r5, r3
 8024ce4:	0858      	lsrs	r0, r3, #1
 8024ce6:	07dd      	lsls	r5, r3, #31
 8024ce8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024cec:	bf54      	ite	pl
 8024cee:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024cf2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024cf6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024cfa:	fa5f fc8c 	uxtb.w	ip, ip
 8024cfe:	2a00      	cmp	r2, #0
 8024d00:	f000 80db 	beq.w	8024eba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024d04:	1c58      	adds	r0, r3, #1
 8024d06:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024d0a:	07c0      	lsls	r0, r0, #31
 8024d0c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024d10:	bf54      	ite	pl
 8024d12:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024d16:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024d1a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024d1e:	fa5f f08e 	uxtb.w	r0, lr
 8024d22:	9010      	str	r0, [sp, #64]	; 0x40
 8024d24:	b1c9      	cbz	r1, 8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024d26:	4453      	add	r3, sl
 8024d28:	0858      	lsrs	r0, r3, #1
 8024d2a:	07dd      	lsls	r5, r3, #31
 8024d2c:	5c38      	ldrb	r0, [r7, r0]
 8024d2e:	bf54      	ite	pl
 8024d30:	f000 000f 	andpl.w	r0, r0, #15
 8024d34:	1100      	asrmi	r0, r0, #4
 8024d36:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024d3a:	3301      	adds	r3, #1
 8024d3c:	b2c0      	uxtb	r0, r0
 8024d3e:	900b      	str	r0, [sp, #44]	; 0x2c
 8024d40:	0858      	lsrs	r0, r3, #1
 8024d42:	07dd      	lsls	r5, r3, #31
 8024d44:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024d48:	bf54      	ite	pl
 8024d4a:	f00e 030f 	andpl.w	r3, lr, #15
 8024d4e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024d52:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024d56:	b2db      	uxtb	r3, r3
 8024d58:	9311      	str	r3, [sp, #68]	; 0x44
 8024d5a:	b292      	uxth	r2, r2
 8024d5c:	b289      	uxth	r1, r1
 8024d5e:	fb02 f301 	mul.w	r3, r2, r1
 8024d62:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024d66:	0112      	lsls	r2, r2, #4
 8024d68:	b289      	uxth	r1, r1
 8024d6a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024d6e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024d70:	1ad2      	subs	r2, r2, r3
 8024d72:	1a40      	subs	r0, r0, r1
 8024d74:	b292      	uxth	r2, r2
 8024d76:	436a      	muls	r2, r5
 8024d78:	b280      	uxth	r0, r0
 8024d7a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024d7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024d80:	fb01 c102 	mla	r1, r1, r2, ip
 8024d84:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024d86:	fb03 1302 	mla	r3, r3, r2, r1
 8024d8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d8e:	b1db      	cbz	r3, 8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d92:	4353      	muls	r3, r2
 8024d94:	1c5a      	adds	r2, r3, #1
 8024d96:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024d9a:	4ac6      	ldr	r2, [pc, #792]	; (80250b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024d9c:	121b      	asrs	r3, r3, #8
 8024d9e:	6812      	ldr	r2, [r2, #0]
 8024da0:	2bff      	cmp	r3, #255	; 0xff
 8024da2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024da6:	f040 8099 	bne.w	8024edc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024daa:	0953      	lsrs	r3, r2, #5
 8024dac:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024db0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024db4:	f02c 0c07 	bic.w	ip, ip, #7
 8024db8:	ea43 0c0c 	orr.w	ip, r3, ip
 8024dbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024dc0:	ea4c 0202 	orr.w	r2, ip, r2
 8024dc4:	f8a8 2000 	strh.w	r2, [r8]
 8024dc8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024dca:	441c      	add	r4, r3
 8024dcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dce:	441e      	add	r6, r3
 8024dd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024dd2:	3b01      	subs	r3, #1
 8024dd4:	f108 0802 	add.w	r8, r8, #2
 8024dd8:	930e      	str	r3, [sp, #56]	; 0x38
 8024dda:	e763      	b.n	8024ca4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024ddc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024dde:	441c      	add	r4, r3
 8024de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024de2:	441e      	add	r6, r3
 8024de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024de6:	3b01      	subs	r3, #1
 8024de8:	9309      	str	r3, [sp, #36]	; 0x24
 8024dea:	f109 0902 	add.w	r9, r9, #2
 8024dee:	e737      	b.n	8024c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024df0:	d024      	beq.n	8024e3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024df4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024df6:	3b01      	subs	r3, #1
 8024df8:	fb00 4003 	mla	r0, r0, r3, r4
 8024dfc:	1400      	asrs	r0, r0, #16
 8024dfe:	f53f af4c 	bmi.w	8024c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e02:	3901      	subs	r1, #1
 8024e04:	4288      	cmp	r0, r1
 8024e06:	f6bf af48 	bge.w	8024c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e0a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024e0c:	fb01 6303 	mla	r3, r1, r3, r6
 8024e10:	141b      	asrs	r3, r3, #16
 8024e12:	f53f af42 	bmi.w	8024c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e16:	3a01      	subs	r2, #1
 8024e18:	4293      	cmp	r3, r2
 8024e1a:	f6bf af3e 	bge.w	8024c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e1e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024e22:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024e26:	930e      	str	r3, [sp, #56]	; 0x38
 8024e28:	46c8      	mov	r8, r9
 8024e2a:	f1bb 0f00 	cmp.w	fp, #0
 8024e2e:	f300 80b7 	bgt.w	8024fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e34:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024e38:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024e3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e3e:	2b00      	cmp	r3, #0
 8024e40:	f340 818d 	ble.w	802515e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024e44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024e48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024e4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024e50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024e56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024e5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024e5e:	eef0 6a62 	vmov.f32	s13, s5
 8024e62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024e66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024e6e:	ee16 4a90 	vmov	r4, s13
 8024e72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024e76:	eef0 6a43 	vmov.f32	s13, s6
 8024e7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024e7e:	ee12 2a90 	vmov	r2, s5
 8024e82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024e86:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e8a:	ee13 2a10 	vmov	r2, s6
 8024e8e:	9323      	str	r3, [sp, #140]	; 0x8c
 8024e90:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e96:	9324      	str	r3, [sp, #144]	; 0x90
 8024e98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e9a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024e9c:	3b01      	subs	r3, #1
 8024e9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ea2:	930d      	str	r3, [sp, #52]	; 0x34
 8024ea4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ea6:	bf08      	it	eq
 8024ea8:	4613      	moveq	r3, r2
 8024eaa:	ee16 6a90 	vmov	r6, s13
 8024eae:	9309      	str	r3, [sp, #36]	; 0x24
 8024eb0:	eeb0 3a67 	vmov.f32	s6, s15
 8024eb4:	eef0 2a47 	vmov.f32	s5, s14
 8024eb8:	e6c3      	b.n	8024c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024eba:	2900      	cmp	r1, #0
 8024ebc:	f43f af4d 	beq.w	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024ec0:	eb0a 0003 	add.w	r0, sl, r3
 8024ec4:	0843      	lsrs	r3, r0, #1
 8024ec6:	07c0      	lsls	r0, r0, #31
 8024ec8:	5cfb      	ldrb	r3, [r7, r3]
 8024eca:	bf54      	ite	pl
 8024ecc:	f003 030f 	andpl.w	r3, r3, #15
 8024ed0:	111b      	asrmi	r3, r3, #4
 8024ed2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ed6:	b2db      	uxtb	r3, r3
 8024ed8:	930b      	str	r3, [sp, #44]	; 0x2c
 8024eda:	e73e      	b.n	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024edc:	f8b8 e000 	ldrh.w	lr, [r8]
 8024ee0:	fa1f fb83 	uxth.w	fp, r3
 8024ee4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024ee8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024eec:	43db      	mvns	r3, r3
 8024eee:	b2db      	uxtb	r3, r3
 8024ef0:	fb11 f10b 	smulbb	r1, r1, fp
 8024ef4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024ef8:	fb00 1003 	mla	r0, r0, r3, r1
 8024efc:	fa5f fc8c 	uxtb.w	ip, ip
 8024f00:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024f04:	b2d2      	uxtb	r2, r2
 8024f06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024f0a:	b280      	uxth	r0, r0
 8024f0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f10:	fb1c fc0b 	smulbb	ip, ip, fp
 8024f14:	fa5f fe8e 	uxtb.w	lr, lr
 8024f18:	fb12 fb0b 	smulbb	fp, r2, fp
 8024f1c:	fb01 cc03 	mla	ip, r1, r3, ip
 8024f20:	fb0e bb03 	mla	fp, lr, r3, fp
 8024f24:	1c43      	adds	r3, r0, #1
 8024f26:	fa1f fc8c 	uxth.w	ip, ip
 8024f2a:	fa1f fb8b 	uxth.w	fp, fp
 8024f2e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024f32:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024f36:	f10c 0101 	add.w	r1, ip, #1
 8024f3a:	f10b 0001 	add.w	r0, fp, #1
 8024f3e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024f42:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024f46:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024f4a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024f4e:	4318      	orrs	r0, r3
 8024f50:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024f54:	ea40 000c 	orr.w	r0, r0, ip
 8024f58:	f8a8 0000 	strh.w	r0, [r8]
 8024f5c:	e734      	b.n	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f5e:	f113 0b01 	adds.w	fp, r3, #1
 8024f62:	f53f af31 	bmi.w	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f66:	45dc      	cmp	ip, fp
 8024f68:	f6ff af2e 	blt.w	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f6c:	f110 0b01 	adds.w	fp, r0, #1
 8024f70:	f53f af2a 	bmi.w	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f74:	45de      	cmp	lr, fp
 8024f76:	f6ff af27 	blt.w	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024f7c:	9302      	str	r3, [sp, #8]
 8024f7e:	fa0f f38e 	sxth.w	r3, lr
 8024f82:	9301      	str	r3, [sp, #4]
 8024f84:	fa0f f38c 	sxth.w	r3, ip
 8024f88:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024f8c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024f90:	9300      	str	r3, [sp, #0]
 8024f92:	463a      	mov	r2, r7
 8024f94:	4653      	mov	r3, sl
 8024f96:	4641      	mov	r1, r8
 8024f98:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024f9a:	f7ff fd4d 	bl	8024a38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024f9e:	e713      	b.n	8024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024fa0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024fa2:	1422      	asrs	r2, r4, #16
 8024fa4:	1433      	asrs	r3, r6, #16
 8024fa6:	fb05 2303 	mla	r3, r5, r3, r2
 8024faa:	085a      	lsrs	r2, r3, #1
 8024fac:	07dd      	lsls	r5, r3, #31
 8024fae:	5cba      	ldrb	r2, [r7, r2]
 8024fb0:	bf54      	ite	pl
 8024fb2:	f002 020f 	andpl.w	r2, r2, #15
 8024fb6:	1112      	asrmi	r2, r2, #4
 8024fb8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024fbc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024fc0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024fc4:	b2d2      	uxtb	r2, r2
 8024fc6:	2900      	cmp	r1, #0
 8024fc8:	d076      	beq.n	80250b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024fca:	f103 0e01 	add.w	lr, r3, #1
 8024fce:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024fd2:	f01e 0f01 	tst.w	lr, #1
 8024fd6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024fda:	bf0c      	ite	eq
 8024fdc:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024fe0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024fe4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024fe8:	fa5f f58c 	uxtb.w	r5, ip
 8024fec:	9512      	str	r5, [sp, #72]	; 0x48
 8024fee:	b300      	cbz	r0, 8025032 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024ff0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ff2:	442b      	add	r3, r5
 8024ff4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024ff8:	07dd      	lsls	r5, r3, #31
 8024ffa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024ffe:	bf54      	ite	pl
 8025000:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025004:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025008:	3301      	adds	r3, #1
 802500a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802500e:	fa5f f58c 	uxtb.w	r5, ip
 8025012:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025016:	950c      	str	r5, [sp, #48]	; 0x30
 8025018:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802501c:	07dd      	lsls	r5, r3, #31
 802501e:	bf54      	ite	pl
 8025020:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025024:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025028:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802502c:	fa5f f38c 	uxtb.w	r3, ip
 8025030:	9313      	str	r3, [sp, #76]	; 0x4c
 8025032:	b289      	uxth	r1, r1
 8025034:	b280      	uxth	r0, r0
 8025036:	fb01 f300 	mul.w	r3, r1, r0
 802503a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802503e:	0109      	lsls	r1, r1, #4
 8025040:	b280      	uxth	r0, r0
 8025042:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025046:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025048:	1ac9      	subs	r1, r1, r3
 802504a:	ebac 0c00 	sub.w	ip, ip, r0
 802504e:	b289      	uxth	r1, r1
 8025050:	4369      	muls	r1, r5
 8025052:	fa1f fc8c 	uxth.w	ip, ip
 8025056:	fb02 120c 	mla	r2, r2, ip, r1
 802505a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802505c:	fb00 2001 	mla	r0, r0, r1, r2
 8025060:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025062:	fb03 0302 	mla	r3, r3, r2, r0
 8025066:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802506a:	b1d3      	cbz	r3, 80250a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802506c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802506e:	4353      	muls	r3, r2
 8025070:	1c5a      	adds	r2, r3, #1
 8025072:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025076:	4a0f      	ldr	r2, [pc, #60]	; (80250b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025078:	121b      	asrs	r3, r3, #8
 802507a:	6812      	ldr	r2, [r2, #0]
 802507c:	2bff      	cmp	r3, #255	; 0xff
 802507e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025082:	d12d      	bne.n	80250e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025084:	0953      	lsrs	r3, r2, #5
 8025086:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802508a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802508e:	f02c 0c07 	bic.w	ip, ip, #7
 8025092:	ea43 0c0c 	orr.w	ip, r3, ip
 8025096:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802509a:	ea4c 0202 	orr.w	r2, ip, r2
 802509e:	f8a8 2000 	strh.w	r2, [r8]
 80250a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80250a4:	441c      	add	r4, r3
 80250a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250a8:	f108 0802 	add.w	r8, r8, #2
 80250ac:	441e      	add	r6, r3
 80250ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80250b2:	e6ba      	b.n	8024e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80250b4:	20012e6c 	.word	0x20012e6c
 80250b8:	2800      	cmp	r0, #0
 80250ba:	d0ba      	beq.n	8025032 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80250bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80250be:	442b      	add	r3, r5
 80250c0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80250c4:	07db      	lsls	r3, r3, #31
 80250c6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80250ca:	bf54      	ite	pl
 80250cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80250d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80250d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80250d8:	fa5f f38c 	uxtb.w	r3, ip
 80250dc:	930c      	str	r3, [sp, #48]	; 0x30
 80250de:	e7a8      	b.n	8025032 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80250e0:	f8b8 e000 	ldrh.w	lr, [r8]
 80250e4:	fa1f fa83 	uxth.w	sl, r3
 80250e8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80250ec:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80250f0:	43db      	mvns	r3, r3
 80250f2:	b2db      	uxtb	r3, r3
 80250f4:	fb11 f10a 	smulbb	r1, r1, sl
 80250f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80250fc:	fb00 1003 	mla	r0, r0, r3, r1
 8025100:	b2d2      	uxtb	r2, r2
 8025102:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025106:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802510a:	fa5f fe8e 	uxtb.w	lr, lr
 802510e:	fb12 f20a 	smulbb	r2, r2, sl
 8025112:	fb0e 2203 	mla	r2, lr, r3, r2
 8025116:	fa5f fc8c 	uxtb.w	ip, ip
 802511a:	b280      	uxth	r0, r0
 802511c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025120:	b292      	uxth	r2, r2
 8025122:	fb1c fc0a 	smulbb	ip, ip, sl
 8025126:	fb01 cc03 	mla	ip, r1, r3, ip
 802512a:	1c43      	adds	r3, r0, #1
 802512c:	1c51      	adds	r1, r2, #1
 802512e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025132:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025136:	fa1f fc8c 	uxth.w	ip, ip
 802513a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802513e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025142:	4308      	orrs	r0, r1
 8025144:	f10c 0101 	add.w	r1, ip, #1
 8025148:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802514c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025150:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025154:	ea40 000c 	orr.w	r0, r0, ip
 8025158:	f8a8 0000 	strh.w	r0, [r8]
 802515c:	e7a1      	b.n	80250a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802515e:	b017      	add	sp, #92	; 0x5c
 8025160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025164 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025168:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802516c:	2d00      	cmp	r5, #0
 802516e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025172:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025176:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802517a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802517e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025182:	f2c0 80b0 	blt.w	80252e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025186:	45a9      	cmp	r9, r5
 8025188:	f340 80ad 	ble.w	80252e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802518c:	2800      	cmp	r0, #0
 802518e:	f2c0 80a8 	blt.w	80252e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025192:	4580      	cmp	r8, r0
 8025194:	f340 80a5 	ble.w	80252e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025198:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802519c:	f01e 0f01 	tst.w	lr, #1
 80251a0:	5d16      	ldrb	r6, [r2, r4]
 80251a2:	bf0c      	ite	eq
 80251a4:	f006 060f 	andeq.w	r6, r6, #15
 80251a8:	1136      	asrne	r6, r6, #4
 80251aa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80251ae:	b2f6      	uxtb	r6, r6
 80251b0:	1c44      	adds	r4, r0, #1
 80251b2:	f100 809b 	bmi.w	80252ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80251b6:	45a0      	cmp	r8, r4
 80251b8:	f340 8098 	ble.w	80252ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80251bc:	2f00      	cmp	r7, #0
 80251be:	f000 8097 	beq.w	80252f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80251c2:	f10e 0a01 	add.w	sl, lr, #1
 80251c6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80251ca:	f01a 0f01 	tst.w	sl, #1
 80251ce:	5d14      	ldrb	r4, [r2, r4]
 80251d0:	bf0c      	ite	eq
 80251d2:	f004 040f 	andeq.w	r4, r4, #15
 80251d6:	1124      	asrne	r4, r4, #4
 80251d8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80251dc:	b2e4      	uxtb	r4, r4
 80251de:	3501      	adds	r5, #1
 80251e0:	f100 808a 	bmi.w	80252f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80251e4:	45a9      	cmp	r9, r5
 80251e6:	f340 8087 	ble.w	80252f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80251ea:	f1bc 0f00 	cmp.w	ip, #0
 80251ee:	f000 8086 	beq.w	80252fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80251f2:	2800      	cmp	r0, #0
 80251f4:	db7e      	blt.n	80252f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80251f6:	4580      	cmp	r8, r0
 80251f8:	dd7c      	ble.n	80252f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80251fa:	eb03 090e 	add.w	r9, r3, lr
 80251fe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025202:	f019 0f01 	tst.w	r9, #1
 8025206:	5d55      	ldrb	r5, [r2, r5]
 8025208:	bf0c      	ite	eq
 802520a:	f005 050f 	andeq.w	r5, r5, #15
 802520e:	112d      	asrne	r5, r5, #4
 8025210:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025214:	b2ed      	uxtb	r5, r5
 8025216:	3001      	adds	r0, #1
 8025218:	d474      	bmi.n	8025304 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802521a:	4580      	cmp	r8, r0
 802521c:	dd72      	ble.n	8025304 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802521e:	2f00      	cmp	r7, #0
 8025220:	d072      	beq.n	8025308 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025222:	3301      	adds	r3, #1
 8025224:	449e      	add	lr, r3
 8025226:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802522a:	f01e 0f01 	tst.w	lr, #1
 802522e:	5cd0      	ldrb	r0, [r2, r3]
 8025230:	bf0c      	ite	eq
 8025232:	f000 000f 	andeq.w	r0, r0, #15
 8025236:	1100      	asrne	r0, r0, #4
 8025238:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802523c:	b2c3      	uxtb	r3, r0
 802523e:	b2ba      	uxth	r2, r7
 8025240:	fa1f fc8c 	uxth.w	ip, ip
 8025244:	fb02 f00c 	mul.w	r0, r2, ip
 8025248:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802524c:	0112      	lsls	r2, r2, #4
 802524e:	fa1f fc8c 	uxth.w	ip, ip
 8025252:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025256:	1a12      	subs	r2, r2, r0
 8025258:	eba7 070c 	sub.w	r7, r7, ip
 802525c:	b292      	uxth	r2, r2
 802525e:	b2bf      	uxth	r7, r7
 8025260:	4362      	muls	r2, r4
 8025262:	fb06 2207 	mla	r2, r6, r7, r2
 8025266:	fb0c 2505 	mla	r5, ip, r5, r2
 802526a:	fb00 5303 	mla	r3, r0, r3, r5
 802526e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025272:	b3a3      	cbz	r3, 80252de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025274:	4a25      	ldr	r2, [pc, #148]	; (802530c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025276:	880e      	ldrh	r6, [r1, #0]
 8025278:	6815      	ldr	r5, [r2, #0]
 802527a:	1234      	asrs	r4, r6, #8
 802527c:	b29a      	uxth	r2, r3
 802527e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025282:	43db      	mvns	r3, r3
 8025284:	b2db      	uxtb	r3, r3
 8025286:	fb10 f002 	smulbb	r0, r0, r2
 802528a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802528e:	fb04 0403 	mla	r4, r4, r3, r0
 8025292:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025296:	10f0      	asrs	r0, r6, #3
 8025298:	b2ed      	uxtb	r5, r5
 802529a:	00f6      	lsls	r6, r6, #3
 802529c:	fb17 f702 	smulbb	r7, r7, r2
 80252a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80252a4:	fb15 f202 	smulbb	r2, r5, r2
 80252a8:	b2f6      	uxtb	r6, r6
 80252aa:	b2a4      	uxth	r4, r4
 80252ac:	fb00 7003 	mla	r0, r0, r3, r7
 80252b0:	fb06 2303 	mla	r3, r6, r3, r2
 80252b4:	b29a      	uxth	r2, r3
 80252b6:	1c63      	adds	r3, r4, #1
 80252b8:	b280      	uxth	r0, r0
 80252ba:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80252be:	1c53      	adds	r3, r2, #1
 80252c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80252c4:	1c42      	adds	r2, r0, #1
 80252c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80252ca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80252ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80252d2:	0940      	lsrs	r0, r0, #5
 80252d4:	4323      	orrs	r3, r4
 80252d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80252da:	4303      	orrs	r3, r0
 80252dc:	800b      	strh	r3, [r1, #0]
 80252de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80252e2:	2600      	movs	r6, #0
 80252e4:	e764      	b.n	80251b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80252e6:	2400      	movs	r4, #0
 80252e8:	4626      	mov	r6, r4
 80252ea:	e778      	b.n	80251de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80252ec:	2400      	movs	r4, #0
 80252ee:	e776      	b.n	80251de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80252f0:	463c      	mov	r4, r7
 80252f2:	e774      	b.n	80251de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80252f4:	2500      	movs	r5, #0
 80252f6:	e78e      	b.n	8025216 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80252f8:	2300      	movs	r3, #0
 80252fa:	461d      	mov	r5, r3
 80252fc:	e79f      	b.n	802523e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80252fe:	4663      	mov	r3, ip
 8025300:	4665      	mov	r5, ip
 8025302:	e79c      	b.n	802523e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025304:	2300      	movs	r3, #0
 8025306:	e79a      	b.n	802523e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025308:	463b      	mov	r3, r7
 802530a:	e798      	b.n	802523e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802530c:	20012e6c 	.word	0x20012e6c

08025310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025314:	b093      	sub	sp, #76	; 0x4c
 8025316:	461d      	mov	r5, r3
 8025318:	920c      	str	r2, [sp, #48]	; 0x30
 802531a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802531c:	9107      	str	r1, [sp, #28]
 802531e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025322:	9011      	str	r0, [sp, #68]	; 0x44
 8025324:	6850      	ldr	r0, [r2, #4]
 8025326:	6812      	ldr	r2, [r2, #0]
 8025328:	fb00 1303 	mla	r3, r0, r3, r1
 802532c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025330:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025332:	689b      	ldr	r3, [r3, #8]
 8025334:	3301      	adds	r3, #1
 8025336:	f023 0301 	bic.w	r3, r3, #1
 802533a:	9306      	str	r3, [sp, #24]
 802533c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802533e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025342:	681f      	ldr	r7, [r3, #0]
 8025344:	9b07      	ldr	r3, [sp, #28]
 8025346:	2b00      	cmp	r3, #0
 8025348:	dc03      	bgt.n	8025352 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802534a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802534c:	2b00      	cmp	r3, #0
 802534e:	f340 8267 	ble.w	8025820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025352:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025354:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025358:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802535c:	1e48      	subs	r0, r1, #1
 802535e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025362:	2d00      	cmp	r5, #0
 8025364:	f340 80b8 	ble.w	80254d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025368:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802536c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025370:	d406      	bmi.n	8025380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025372:	4586      	cmp	lr, r0
 8025374:	da04      	bge.n	8025380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025376:	2b00      	cmp	r3, #0
 8025378:	db02      	blt.n	8025380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802537a:	4563      	cmp	r3, ip
 802537c:	f2c0 80ad 	blt.w	80254da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025380:	f11e 0e01 	adds.w	lr, lr, #1
 8025384:	f100 80a0 	bmi.w	80254c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025388:	4571      	cmp	r1, lr
 802538a:	f2c0 809d 	blt.w	80254c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802538e:	3301      	adds	r3, #1
 8025390:	f100 809a 	bmi.w	80254c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025394:	429a      	cmp	r2, r3
 8025396:	f2c0 8097 	blt.w	80254c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802539a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802539e:	9509      	str	r5, [sp, #36]	; 0x24
 80253a0:	46c8      	mov	r8, r9
 80253a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253a4:	2b00      	cmp	r3, #0
 80253a6:	f340 80b6 	ble.w	8025516 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80253aa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80253ae:	9308      	str	r3, [sp, #32]
 80253b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80253b2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80253b6:	1423      	asrs	r3, r4, #16
 80253b8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80253bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80253c0:	f100 813e 	bmi.w	8025640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80253c4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80253c8:	455b      	cmp	r3, fp
 80253ca:	f280 8139 	bge.w	8025640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80253ce:	2800      	cmp	r0, #0
 80253d0:	f2c0 8136 	blt.w	8025640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80253d4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80253d8:	4558      	cmp	r0, fp
 80253da:	f280 8131 	bge.w	8025640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80253de:	9a06      	ldr	r2, [sp, #24]
 80253e0:	fb00 3302 	mla	r3, r0, r2, r3
 80253e4:	0858      	lsrs	r0, r3, #1
 80253e6:	07da      	lsls	r2, r3, #31
 80253e8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80253ec:	9a08      	ldr	r2, [sp, #32]
 80253ee:	bf54      	ite	pl
 80253f0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80253f4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80253f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80253fc:	fa5f fc8c 	uxtb.w	ip, ip
 8025400:	2a00      	cmp	r2, #0
 8025402:	f000 80cb 	beq.w	802559c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025406:	1c58      	adds	r0, r3, #1
 8025408:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802540c:	07c0      	lsls	r0, r0, #31
 802540e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025412:	bf54      	ite	pl
 8025414:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025418:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802541c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025420:	fa5f fe8e 	uxtb.w	lr, lr
 8025424:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025428:	b1b9      	cbz	r1, 802545a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802542a:	4453      	add	r3, sl
 802542c:	0858      	lsrs	r0, r3, #1
 802542e:	07da      	lsls	r2, r3, #31
 8025430:	5c38      	ldrb	r0, [r7, r0]
 8025432:	bf54      	ite	pl
 8025434:	f000 000f 	andpl.w	r0, r0, #15
 8025438:	1100      	asrmi	r0, r0, #4
 802543a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802543e:	b2c0      	uxtb	r0, r0
 8025440:	900a      	str	r0, [sp, #40]	; 0x28
 8025442:	1c58      	adds	r0, r3, #1
 8025444:	0843      	lsrs	r3, r0, #1
 8025446:	07c2      	lsls	r2, r0, #31
 8025448:	5cfb      	ldrb	r3, [r7, r3]
 802544a:	bf54      	ite	pl
 802544c:	f003 030f 	andpl.w	r3, r3, #15
 8025450:	111b      	asrmi	r3, r3, #4
 8025452:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025456:	b2db      	uxtb	r3, r3
 8025458:	930e      	str	r3, [sp, #56]	; 0x38
 802545a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802545e:	b289      	uxth	r1, r1
 8025460:	fb02 f301 	mul.w	r3, r2, r1
 8025464:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025468:	0112      	lsls	r2, r2, #4
 802546a:	b289      	uxth	r1, r1
 802546c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025470:	1a40      	subs	r0, r0, r1
 8025472:	fa1f fe80 	uxth.w	lr, r0
 8025476:	1ad2      	subs	r2, r2, r3
 8025478:	980d      	ldr	r0, [sp, #52]	; 0x34
 802547a:	b292      	uxth	r2, r2
 802547c:	4342      	muls	r2, r0
 802547e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025482:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025484:	fb01 c102 	mla	r1, r1, r2, ip
 8025488:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802548a:	fb03 1302 	mla	r3, r3, r2, r1
 802548e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025492:	2bff      	cmp	r3, #255	; 0xff
 8025494:	f040 8093 	bne.w	80255be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025498:	4bbe      	ldr	r3, [pc, #760]	; (8025794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802549a:	681a      	ldr	r2, [r3, #0]
 802549c:	4bbe      	ldr	r3, [pc, #760]	; (8025798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802549e:	0951      	lsrs	r1, r2, #5
 80254a0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80254a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80254a8:	430b      	orrs	r3, r1
 80254aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80254ae:	4313      	orrs	r3, r2
 80254b0:	f8a8 3000 	strh.w	r3, [r8]
 80254b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80254b6:	441c      	add	r4, r3
 80254b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80254ba:	441e      	add	r6, r3
 80254bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80254be:	3b01      	subs	r3, #1
 80254c0:	f108 0802 	add.w	r8, r8, #2
 80254c4:	9309      	str	r3, [sp, #36]	; 0x24
 80254c6:	e76c      	b.n	80253a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80254c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80254ca:	441c      	add	r4, r3
 80254cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80254ce:	3d01      	subs	r5, #1
 80254d0:	441e      	add	r6, r3
 80254d2:	f109 0902 	add.w	r9, r9, #2
 80254d6:	e744      	b.n	8025362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80254d8:	d021      	beq.n	802551e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80254da:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80254dc:	1e6b      	subs	r3, r5, #1
 80254de:	fb00 4003 	mla	r0, r0, r3, r4
 80254e2:	1400      	asrs	r0, r0, #16
 80254e4:	f53f af59 	bmi.w	802539a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80254e8:	3901      	subs	r1, #1
 80254ea:	4288      	cmp	r0, r1
 80254ec:	f6bf af55 	bge.w	802539a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80254f0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80254f2:	fb01 6303 	mla	r3, r1, r3, r6
 80254f6:	141b      	asrs	r3, r3, #16
 80254f8:	f53f af4f 	bmi.w	802539a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80254fc:	3a01      	subs	r2, #1
 80254fe:	4293      	cmp	r3, r2
 8025500:	f6bf af4b 	bge.w	802539a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025504:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025508:	9308      	str	r3, [sp, #32]
 802550a:	46a8      	mov	r8, r5
 802550c:	46ce      	mov	lr, r9
 802550e:	f1b8 0f00 	cmp.w	r8, #0
 8025512:	f300 80b5 	bgt.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025516:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802551a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802551e:	9b07      	ldr	r3, [sp, #28]
 8025520:	2b00      	cmp	r3, #0
 8025522:	f340 817d 	ble.w	8025820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025526:	ee30 0a04 	vadd.f32	s0, s0, s8
 802552a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802552e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025532:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025534:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025538:	ee31 1a05 	vadd.f32	s2, s2, s10
 802553c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025540:	eef0 6a62 	vmov.f32	s13, s5
 8025544:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025548:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802554c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025550:	ee16 4a90 	vmov	r4, s13
 8025554:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025558:	eef0 6a43 	vmov.f32	s13, s6
 802555c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025560:	ee12 2a90 	vmov	r2, s5
 8025564:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025568:	fb92 f3f3 	sdiv	r3, r2, r3
 802556c:	ee13 2a10 	vmov	r2, s6
 8025570:	931f      	str	r3, [sp, #124]	; 0x7c
 8025572:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025574:	fb92 f3f3 	sdiv	r3, r2, r3
 8025578:	9320      	str	r3, [sp, #128]	; 0x80
 802557a:	9b07      	ldr	r3, [sp, #28]
 802557c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802557e:	3b01      	subs	r3, #1
 8025580:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025584:	9307      	str	r3, [sp, #28]
 8025586:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025588:	ee16 6a90 	vmov	r6, s13
 802558c:	bf14      	ite	ne
 802558e:	461d      	movne	r5, r3
 8025590:	4615      	moveq	r5, r2
 8025592:	eeb0 3a67 	vmov.f32	s6, s15
 8025596:	eef0 2a47 	vmov.f32	s5, s14
 802559a:	e6d3      	b.n	8025344 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802559c:	2900      	cmp	r1, #0
 802559e:	f43f af5c 	beq.w	802545a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80255a2:	eb0a 0003 	add.w	r0, sl, r3
 80255a6:	0843      	lsrs	r3, r0, #1
 80255a8:	07c0      	lsls	r0, r0, #31
 80255aa:	5cfb      	ldrb	r3, [r7, r3]
 80255ac:	bf54      	ite	pl
 80255ae:	f003 030f 	andpl.w	r3, r3, #15
 80255b2:	111b      	asrmi	r3, r3, #4
 80255b4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80255b8:	b2db      	uxtb	r3, r3
 80255ba:	930a      	str	r3, [sp, #40]	; 0x28
 80255bc:	e74d      	b.n	802545a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80255be:	2b00      	cmp	r3, #0
 80255c0:	f43f af78 	beq.w	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80255c4:	4a73      	ldr	r2, [pc, #460]	; (8025794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80255c6:	f8b8 c000 	ldrh.w	ip, [r8]
 80255ca:	6810      	ldr	r0, [r2, #0]
 80255cc:	fa1f fe83 	uxth.w	lr, r3
 80255d0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80255d4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80255d8:	43db      	mvns	r3, r3
 80255da:	b2db      	uxtb	r3, r3
 80255dc:	fb12 f20e 	smulbb	r2, r2, lr
 80255e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80255e4:	fb01 2103 	mla	r1, r1, r3, r2
 80255e8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80255ec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80255f0:	b2c0      	uxtb	r0, r0
 80255f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80255f6:	fb1b fb0e 	smulbb	fp, fp, lr
 80255fa:	b289      	uxth	r1, r1
 80255fc:	fb10 fe0e 	smulbb	lr, r0, lr
 8025600:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025604:	fa5f fc8c 	uxtb.w	ip, ip
 8025608:	fb02 b203 	mla	r2, r2, r3, fp
 802560c:	1c48      	adds	r0, r1, #1
 802560e:	fb0c e303 	mla	r3, ip, r3, lr
 8025612:	b292      	uxth	r2, r2
 8025614:	b29b      	uxth	r3, r3
 8025616:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802561a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802561e:	f102 0b01 	add.w	fp, r2, #1
 8025622:	1c59      	adds	r1, r3, #1
 8025624:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025628:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802562c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025630:	0952      	lsrs	r2, r2, #5
 8025632:	4301      	orrs	r1, r0
 8025634:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025638:	4311      	orrs	r1, r2
 802563a:	f8a8 1000 	strh.w	r1, [r8]
 802563e:	e739      	b.n	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025640:	f113 0b01 	adds.w	fp, r3, #1
 8025644:	f53f af36 	bmi.w	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025648:	45dc      	cmp	ip, fp
 802564a:	f6ff af33 	blt.w	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802564e:	f110 0b01 	adds.w	fp, r0, #1
 8025652:	f53f af2f 	bmi.w	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025656:	45de      	cmp	lr, fp
 8025658:	f6ff af2c 	blt.w	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802565c:	9a08      	ldr	r2, [sp, #32]
 802565e:	9302      	str	r3, [sp, #8]
 8025660:	fa0f f38e 	sxth.w	r3, lr
 8025664:	9301      	str	r3, [sp, #4]
 8025666:	fa0f f38c 	sxth.w	r3, ip
 802566a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802566e:	9105      	str	r1, [sp, #20]
 8025670:	9300      	str	r3, [sp, #0]
 8025672:	463a      	mov	r2, r7
 8025674:	4653      	mov	r3, sl
 8025676:	4641      	mov	r1, r8
 8025678:	9811      	ldr	r0, [sp, #68]	; 0x44
 802567a:	f7ff fd73 	bl	8025164 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802567e:	e719      	b.n	80254b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025680:	9906      	ldr	r1, [sp, #24]
 8025682:	1422      	asrs	r2, r4, #16
 8025684:	1433      	asrs	r3, r6, #16
 8025686:	fb01 2303 	mla	r3, r1, r3, r2
 802568a:	085a      	lsrs	r2, r3, #1
 802568c:	07d9      	lsls	r1, r3, #31
 802568e:	5cba      	ldrb	r2, [r7, r2]
 8025690:	bf54      	ite	pl
 8025692:	f002 020f 	andpl.w	r2, r2, #15
 8025696:	1112      	asrmi	r2, r2, #4
 8025698:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802569c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80256a0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80256a4:	b2d2      	uxtb	r2, r2
 80256a6:	2800      	cmp	r0, #0
 80256a8:	d062      	beq.n	8025770 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80256aa:	f103 0a01 	add.w	sl, r3, #1
 80256ae:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80256b2:	f01a 0f01 	tst.w	sl, #1
 80256b6:	5c79      	ldrb	r1, [r7, r1]
 80256b8:	bf0c      	ite	eq
 80256ba:	f001 010f 	andeq.w	r1, r1, #15
 80256be:	1109      	asrne	r1, r1, #4
 80256c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80256c4:	b2c9      	uxtb	r1, r1
 80256c6:	910f      	str	r1, [sp, #60]	; 0x3c
 80256c8:	f1bc 0f00 	cmp.w	ip, #0
 80256cc:	d019      	beq.n	8025702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80256ce:	9908      	ldr	r1, [sp, #32]
 80256d0:	440b      	add	r3, r1
 80256d2:	0859      	lsrs	r1, r3, #1
 80256d4:	f013 0f01 	tst.w	r3, #1
 80256d8:	5c79      	ldrb	r1, [r7, r1]
 80256da:	bf0c      	ite	eq
 80256dc:	f001 010f 	andeq.w	r1, r1, #15
 80256e0:	1109      	asrne	r1, r1, #4
 80256e2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80256e6:	b2c9      	uxtb	r1, r1
 80256e8:	3301      	adds	r3, #1
 80256ea:	910b      	str	r1, [sp, #44]	; 0x2c
 80256ec:	0859      	lsrs	r1, r3, #1
 80256ee:	07db      	lsls	r3, r3, #31
 80256f0:	5c79      	ldrb	r1, [r7, r1]
 80256f2:	bf54      	ite	pl
 80256f4:	f001 010f 	andpl.w	r1, r1, #15
 80256f8:	1109      	asrmi	r1, r1, #4
 80256fa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80256fe:	b2c9      	uxtb	r1, r1
 8025700:	9110      	str	r1, [sp, #64]	; 0x40
 8025702:	b280      	uxth	r0, r0
 8025704:	fa1f fc8c 	uxth.w	ip, ip
 8025708:	fb00 f30c 	mul.w	r3, r0, ip
 802570c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025710:	0100      	lsls	r0, r0, #4
 8025712:	fa1f fc8c 	uxth.w	ip, ip
 8025716:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802571a:	eba1 010c 	sub.w	r1, r1, ip
 802571e:	fa1f fa81 	uxth.w	sl, r1
 8025722:	1ac0      	subs	r0, r0, r3
 8025724:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025726:	b280      	uxth	r0, r0
 8025728:	4348      	muls	r0, r1
 802572a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802572c:	fb02 020a 	mla	r2, r2, sl, r0
 8025730:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025734:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025736:	fb03 c302 	mla	r3, r3, r2, ip
 802573a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802573e:	2bff      	cmp	r3, #255	; 0xff
 8025740:	d12c      	bne.n	802579c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025742:	4b14      	ldr	r3, [pc, #80]	; (8025794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025744:	681a      	ldr	r2, [r3, #0]
 8025746:	4b14      	ldr	r3, [pc, #80]	; (8025798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025748:	0951      	lsrs	r1, r2, #5
 802574a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802574e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025752:	430b      	orrs	r3, r1
 8025754:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025758:	4313      	orrs	r3, r2
 802575a:	f8ae 3000 	strh.w	r3, [lr]
 802575e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025760:	441c      	add	r4, r3
 8025762:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025764:	f10e 0e02 	add.w	lr, lr, #2
 8025768:	441e      	add	r6, r3
 802576a:	f108 38ff 	add.w	r8, r8, #4294967295
 802576e:	e6ce      	b.n	802550e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025770:	f1bc 0f00 	cmp.w	ip, #0
 8025774:	d0c5      	beq.n	8025702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025776:	9908      	ldr	r1, [sp, #32]
 8025778:	440b      	add	r3, r1
 802577a:	0859      	lsrs	r1, r3, #1
 802577c:	07db      	lsls	r3, r3, #31
 802577e:	5c79      	ldrb	r1, [r7, r1]
 8025780:	bf54      	ite	pl
 8025782:	f001 010f 	andpl.w	r1, r1, #15
 8025786:	1109      	asrmi	r1, r1, #4
 8025788:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802578c:	b2c9      	uxtb	r1, r1
 802578e:	910b      	str	r1, [sp, #44]	; 0x2c
 8025790:	e7b7      	b.n	8025702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025792:	bf00      	nop
 8025794:	20012e6c 	.word	0x20012e6c
 8025798:	fffff800 	.word	0xfffff800
 802579c:	2b00      	cmp	r3, #0
 802579e:	d0de      	beq.n	802575e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80257a0:	4a21      	ldr	r2, [pc, #132]	; (8025828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80257a2:	f8be c000 	ldrh.w	ip, [lr]
 80257a6:	6810      	ldr	r0, [r2, #0]
 80257a8:	fa1f fa83 	uxth.w	sl, r3
 80257ac:	ea4f 212c 	mov.w	r1, ip, asr #8
 80257b0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80257b4:	43db      	mvns	r3, r3
 80257b6:	b2db      	uxtb	r3, r3
 80257b8:	fb12 f20a 	smulbb	r2, r2, sl
 80257bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80257c0:	fb01 2103 	mla	r1, r1, r3, r2
 80257c4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80257c8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80257cc:	b2c0      	uxtb	r0, r0
 80257ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80257d2:	fa5f fc8c 	uxtb.w	ip, ip
 80257d6:	fb10 f00a 	smulbb	r0, r0, sl
 80257da:	fb0c 0003 	mla	r0, ip, r3, r0
 80257de:	b289      	uxth	r1, r1
 80257e0:	fb1b fb0a 	smulbb	fp, fp, sl
 80257e4:	b280      	uxth	r0, r0
 80257e6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80257ea:	fb02 b203 	mla	r2, r2, r3, fp
 80257ee:	1c4b      	adds	r3, r1, #1
 80257f0:	f100 0b01 	add.w	fp, r0, #1
 80257f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80257f8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80257fc:	b292      	uxth	r2, r2
 80257fe:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025802:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025806:	ea4b 0101 	orr.w	r1, fp, r1
 802580a:	f102 0b01 	add.w	fp, r2, #1
 802580e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025812:	0952      	lsrs	r2, r2, #5
 8025814:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025818:	4311      	orrs	r1, r2
 802581a:	f8ae 1000 	strh.w	r1, [lr]
 802581e:	e79e      	b.n	802575e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025820:	b013      	add	sp, #76	; 0x4c
 8025822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025826:	bf00      	nop
 8025828:	20012e6c 	.word	0x20012e6c

0802582c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802582c:	b570      	push	{r4, r5, r6, lr}
 802582e:	1208      	asrs	r0, r1, #8
 8025830:	b29e      	uxth	r6, r3
 8025832:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025836:	1213      	asrs	r3, r2, #8
 8025838:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802583c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025840:	fb13 f305 	smulbb	r3, r3, r5
 8025844:	fb10 f006 	smulbb	r0, r0, r6
 8025848:	4418      	add	r0, r3
 802584a:	10cc      	asrs	r4, r1, #3
 802584c:	10d3      	asrs	r3, r2, #3
 802584e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025852:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025856:	fb13 f305 	smulbb	r3, r3, r5
 802585a:	fb14 f406 	smulbb	r4, r4, r6
 802585e:	00c9      	lsls	r1, r1, #3
 8025860:	00d2      	lsls	r2, r2, #3
 8025862:	441c      	add	r4, r3
 8025864:	b2d2      	uxtb	r2, r2
 8025866:	b2cb      	uxtb	r3, r1
 8025868:	fb12 f205 	smulbb	r2, r2, r5
 802586c:	b280      	uxth	r0, r0
 802586e:	fb13 f306 	smulbb	r3, r3, r6
 8025872:	4413      	add	r3, r2
 8025874:	1c42      	adds	r2, r0, #1
 8025876:	b29b      	uxth	r3, r3
 8025878:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802587c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025880:	1c58      	adds	r0, r3, #1
 8025882:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025886:	b2a4      	uxth	r4, r4
 8025888:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802588c:	4310      	orrs	r0, r2
 802588e:	1c62      	adds	r2, r4, #1
 8025890:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025894:	0964      	lsrs	r4, r4, #5
 8025896:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802589a:	4320      	orrs	r0, r4
 802589c:	bd70      	pop	{r4, r5, r6, pc}
	...

080258a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80258a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80258a4:	b08f      	sub	sp, #60	; 0x3c
 80258a6:	461c      	mov	r4, r3
 80258a8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80258ac:	9004      	str	r0, [sp, #16]
 80258ae:	460d      	mov	r5, r1
 80258b0:	4616      	mov	r6, r2
 80258b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80258b4:	2f00      	cmp	r7, #0
 80258b6:	f000 80f6 	beq.w	8025aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80258ba:	6820      	ldr	r0, [r4, #0]
 80258bc:	6861      	ldr	r1, [r4, #4]
 80258be:	aa0a      	add	r2, sp, #40	; 0x28
 80258c0:	c203      	stmia	r2!, {r0, r1}
 80258c2:	6818      	ldr	r0, [r3, #0]
 80258c4:	6859      	ldr	r1, [r3, #4]
 80258c6:	aa0c      	add	r2, sp, #48	; 0x30
 80258c8:	c203      	stmia	r2!, {r0, r1}
 80258ca:	a80a      	add	r0, sp, #40	; 0x28
 80258cc:	f7ef fa9c 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80258d0:	4621      	mov	r1, r4
 80258d2:	a80c      	add	r0, sp, #48	; 0x30
 80258d4:	f7ef fadc 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80258d8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80258dc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80258e0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80258e4:	f002 0301 	and.w	r3, r2, #1
 80258e8:	9306      	str	r3, [sp, #24]
 80258ea:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80258ee:	f003 0101 	and.w	r1, r3, #1
 80258f2:	9105      	str	r1, [sp, #20]
 80258f4:	9805      	ldr	r0, [sp, #20]
 80258f6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80258fa:	4403      	add	r3, r0
 80258fc:	fb01 2303 	mla	r3, r1, r3, r2
 8025900:	f04f 0802 	mov.w	r8, #2
 8025904:	fb93 f3f8 	sdiv	r3, r3, r8
 8025908:	441d      	add	r5, r3
 802590a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802590e:	441a      	add	r2, r3
 8025910:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025914:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025918:	4419      	add	r1, r3
 802591a:	4b64      	ldr	r3, [pc, #400]	; (8025aac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802591c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025920:	6818      	ldr	r0, [r3, #0]
 8025922:	6803      	ldr	r3, [r0, #0]
 8025924:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025926:	4798      	blx	r3
 8025928:	4a61      	ldr	r2, [pc, #388]	; (8025ab0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802592a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802592e:	8813      	ldrh	r3, [r2, #0]
 8025930:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025934:	2fff      	cmp	r7, #255	; 0xff
 8025936:	fb03 a404 	mla	r4, r3, r4, sl
 802593a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802593e:	f106 0604 	add.w	r6, r6, #4
 8025942:	4611      	mov	r1, r2
 8025944:	fb03 fb0b 	mul.w	fp, r3, fp
 8025948:	d06b      	beq.n	8025a22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802594a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802594e:	9303      	str	r3, [sp, #12]
 8025950:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025954:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025958:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802595c:	9b07      	ldr	r3, [sp, #28]
 802595e:	42a3      	cmp	r3, r4
 8025960:	f240 809c 	bls.w	8025a9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025964:	9b06      	ldr	r3, [sp, #24]
 8025966:	2b00      	cmp	r3, #0
 8025968:	d039      	beq.n	80259de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802596a:	782b      	ldrb	r3, [r5, #0]
 802596c:	8822      	ldrh	r2, [r4, #0]
 802596e:	9804      	ldr	r0, [sp, #16]
 8025970:	f003 030f 	and.w	r3, r3, #15
 8025974:	f105 0801 	add.w	r8, r5, #1
 8025978:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802597c:	9b03      	ldr	r3, [sp, #12]
 802597e:	9300      	str	r3, [sp, #0]
 8025980:	463b      	mov	r3, r7
 8025982:	f7ff ff53 	bl	802582c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025986:	f824 0b02 	strh.w	r0, [r4], #2
 802598a:	f109 3bff 	add.w	fp, r9, #4294967295
 802598e:	f1bb 0f01 	cmp.w	fp, #1
 8025992:	46a2      	mov	sl, r4
 8025994:	f104 0404 	add.w	r4, r4, #4
 8025998:	dd24      	ble.n	80259e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802599a:	f898 3000 	ldrb.w	r3, [r8]
 802599e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80259a2:	9804      	ldr	r0, [sp, #16]
 80259a4:	091b      	lsrs	r3, r3, #4
 80259a6:	f1ab 0b02 	sub.w	fp, fp, #2
 80259aa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80259ae:	9b03      	ldr	r3, [sp, #12]
 80259b0:	9300      	str	r3, [sp, #0]
 80259b2:	463b      	mov	r3, r7
 80259b4:	f7ff ff3a 	bl	802582c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80259b8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80259bc:	f818 3b01 	ldrb.w	r3, [r8], #1
 80259c0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80259c4:	9804      	ldr	r0, [sp, #16]
 80259c6:	f003 030f 	and.w	r3, r3, #15
 80259ca:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80259ce:	9b03      	ldr	r3, [sp, #12]
 80259d0:	9300      	str	r3, [sp, #0]
 80259d2:	463b      	mov	r3, r7
 80259d4:	f7ff ff2a 	bl	802582c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80259d8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80259dc:	e7d7      	b.n	802598e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80259de:	46a8      	mov	r8, r5
 80259e0:	46cb      	mov	fp, r9
 80259e2:	e7d4      	b.n	802598e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80259e4:	d10e      	bne.n	8025a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80259e6:	f898 3000 	ldrb.w	r3, [r8]
 80259ea:	f8ba 2000 	ldrh.w	r2, [sl]
 80259ee:	9804      	ldr	r0, [sp, #16]
 80259f0:	091b      	lsrs	r3, r3, #4
 80259f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80259f6:	9b03      	ldr	r3, [sp, #12]
 80259f8:	9300      	str	r3, [sp, #0]
 80259fa:	463b      	mov	r3, r7
 80259fc:	f7ff ff16 	bl	802582c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025a00:	f82a 0b02 	strh.w	r0, [sl], #2
 8025a04:	9b08      	ldr	r3, [sp, #32]
 8025a06:	9a05      	ldr	r2, [sp, #20]
 8025a08:	881c      	ldrh	r4, [r3, #0]
 8025a0a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025a0e:	eba4 0409 	sub.w	r4, r4, r9
 8025a12:	4413      	add	r3, r2
 8025a14:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025a18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025a1a:	fb93 f3f2 	sdiv	r3, r3, r2
 8025a1e:	441d      	add	r5, r3
 8025a20:	e79c      	b.n	802595c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025a22:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025a26:	45a3      	cmp	fp, r4
 8025a28:	d938      	bls.n	8025a9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025a2a:	9b06      	ldr	r3, [sp, #24]
 8025a2c:	b1f3      	cbz	r3, 8025a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025a2e:	782b      	ldrb	r3, [r5, #0]
 8025a30:	f003 030f 	and.w	r3, r3, #15
 8025a34:	1c6a      	adds	r2, r5, #1
 8025a36:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025a3a:	8023      	strh	r3, [r4, #0]
 8025a3c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025a40:	3402      	adds	r4, #2
 8025a42:	2801      	cmp	r0, #1
 8025a44:	4623      	mov	r3, r4
 8025a46:	f104 0404 	add.w	r4, r4, #4
 8025a4a:	dd12      	ble.n	8025a72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025a4c:	7813      	ldrb	r3, [r2, #0]
 8025a4e:	091b      	lsrs	r3, r3, #4
 8025a50:	3802      	subs	r0, #2
 8025a52:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025a56:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025a5a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025a5e:	f003 030f 	and.w	r3, r3, #15
 8025a62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025a66:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025a6a:	e7ea      	b.n	8025a42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025a6c:	462a      	mov	r2, r5
 8025a6e:	4648      	mov	r0, r9
 8025a70:	e7e7      	b.n	8025a42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025a72:	d106      	bne.n	8025a82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025a74:	7812      	ldrb	r2, [r2, #0]
 8025a76:	0912      	lsrs	r2, r2, #4
 8025a78:	3302      	adds	r3, #2
 8025a7a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025a7e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025a82:	880c      	ldrh	r4, [r1, #0]
 8025a84:	9a05      	ldr	r2, [sp, #20]
 8025a86:	eba4 0409 	sub.w	r4, r4, r9
 8025a8a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025a8e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025a92:	4413      	add	r3, r2
 8025a94:	fb93 f3f8 	sdiv	r3, r3, r8
 8025a98:	441d      	add	r5, r3
 8025a9a:	e7c4      	b.n	8025a26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025a9c:	4b03      	ldr	r3, [pc, #12]	; (8025aac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025a9e:	6818      	ldr	r0, [r3, #0]
 8025aa0:	6803      	ldr	r3, [r0, #0]
 8025aa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025aa4:	4798      	blx	r3
 8025aa6:	b00f      	add	sp, #60	; 0x3c
 8025aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025aac:	20012e5c 	.word	0x20012e5c
 8025ab0:	20012e56 	.word	0x20012e56

08025ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025ab6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025aba:	2dff      	cmp	r5, #255	; 0xff
 8025abc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025ac0:	d10c      	bne.n	8025adc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025ac2:	2bff      	cmp	r3, #255	; 0xff
 8025ac4:	d10a      	bne.n	8025adc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025ac6:	4b25      	ldr	r3, [pc, #148]	; (8025b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025ac8:	0948      	lsrs	r0, r1, #5
 8025aca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ace:	403b      	ands	r3, r7
 8025ad0:	4318      	orrs	r0, r3
 8025ad2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025ad6:	4308      	orrs	r0, r1
 8025ad8:	b280      	uxth	r0, r0
 8025ada:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025adc:	fb15 f503 	smulbb	r5, r5, r3
 8025ae0:	b2ab      	uxth	r3, r5
 8025ae2:	1c5d      	adds	r5, r3, #1
 8025ae4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025ae8:	1214      	asrs	r4, r2, #8
 8025aea:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025aee:	fa1f fc85 	uxth.w	ip, r5
 8025af2:	10d6      	asrs	r6, r2, #3
 8025af4:	00d0      	lsls	r0, r2, #3
 8025af6:	43ed      	mvns	r5, r5
 8025af8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025afc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025b00:	b2eb      	uxtb	r3, r5
 8025b02:	b2c0      	uxtb	r0, r0
 8025b04:	fb12 f20c 	smulbb	r2, r2, ip
 8025b08:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025b0c:	fb04 2403 	mla	r4, r4, r3, r2
 8025b10:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025b14:	b2c8      	uxtb	r0, r1
 8025b16:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025b1a:	b2fd      	uxtb	r5, r7
 8025b1c:	fb10 f00c 	smulbb	r0, r0, ip
 8025b20:	b2a4      	uxth	r4, r4
 8025b22:	fb02 0003 	mla	r0, r2, r3, r0
 8025b26:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025b2a:	fb15 f50c 	smulbb	r5, r5, ip
 8025b2e:	fb06 5503 	mla	r5, r6, r3, r5
 8025b32:	b283      	uxth	r3, r0
 8025b34:	1c60      	adds	r0, r4, #1
 8025b36:	b2ad      	uxth	r5, r5
 8025b38:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025b3c:	1c58      	adds	r0, r3, #1
 8025b3e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025b42:	1c6b      	adds	r3, r5, #1
 8025b44:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025b48:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025b4c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b50:	096d      	lsrs	r5, r5, #5
 8025b52:	4320      	orrs	r0, r4
 8025b54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b58:	4328      	orrs	r0, r5
 8025b5a:	e7be      	b.n	8025ada <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025b5c:	00fff800 	.word	0x00fff800

08025b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b64:	461c      	mov	r4, r3
 8025b66:	b08d      	sub	sp, #52	; 0x34
 8025b68:	460d      	mov	r5, r1
 8025b6a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025b6c:	6861      	ldr	r1, [r4, #4]
 8025b6e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025b72:	4680      	mov	r8, r0
 8025b74:	6820      	ldr	r0, [r4, #0]
 8025b76:	4616      	mov	r6, r2
 8025b78:	aa08      	add	r2, sp, #32
 8025b7a:	c203      	stmia	r2!, {r0, r1}
 8025b7c:	6818      	ldr	r0, [r3, #0]
 8025b7e:	6859      	ldr	r1, [r3, #4]
 8025b80:	aa0a      	add	r2, sp, #40	; 0x28
 8025b82:	c203      	stmia	r2!, {r0, r1}
 8025b84:	a808      	add	r0, sp, #32
 8025b86:	f7ef f93f 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025b8a:	4621      	mov	r1, r4
 8025b8c:	a80a      	add	r0, sp, #40	; 0x28
 8025b8e:	f7ef f97f 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025b92:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025b96:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025b9a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025b9e:	f002 0301 	and.w	r3, r2, #1
 8025ba2:	9303      	str	r3, [sp, #12]
 8025ba4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025ba8:	f003 0101 	and.w	r1, r3, #1
 8025bac:	9102      	str	r1, [sp, #8]
 8025bae:	9802      	ldr	r0, [sp, #8]
 8025bb0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025bb4:	4403      	add	r3, r0
 8025bb6:	fb01 2303 	mla	r3, r1, r3, r2
 8025bba:	f04f 0a02 	mov.w	sl, #2
 8025bbe:	fb93 f3fa 	sdiv	r3, r3, sl
 8025bc2:	441d      	add	r5, r3
 8025bc4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025bc8:	441a      	add	r2, r3
 8025bca:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025bce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8025bd2:	4a3f      	ldr	r2, [pc, #252]	; (8025cd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025bd4:	9205      	str	r2, [sp, #20]
 8025bd6:	4419      	add	r1, r3
 8025bd8:	6810      	ldr	r0, [r2, #0]
 8025bda:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025bde:	6803      	ldr	r3, [r0, #0]
 8025be0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025be2:	4798      	blx	r3
 8025be4:	4b3b      	ldr	r3, [pc, #236]	; (8025cd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025be6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025bea:	8819      	ldrh	r1, [r3, #0]
 8025bec:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025bf0:	fb01 c404 	mla	r4, r1, r4, ip
 8025bf4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025bf8:	434f      	muls	r7, r1
 8025bfa:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025bfe:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025c02:	3604      	adds	r6, #4
 8025c04:	9204      	str	r2, [sp, #16]
 8025c06:	9b04      	ldr	r3, [sp, #16]
 8025c08:	429c      	cmp	r4, r3
 8025c0a:	d258      	bcs.n	8025cbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025c0c:	9b03      	ldr	r3, [sp, #12]
 8025c0e:	2b00      	cmp	r3, #0
 8025c10:	d034      	beq.n	8025c7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025c12:	782b      	ldrb	r3, [r5, #0]
 8025c14:	f003 030f 	and.w	r3, r3, #15
 8025c18:	1c6f      	adds	r7, r5, #1
 8025c1a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025c1e:	0e0b      	lsrs	r3, r1, #24
 8025c20:	d006      	beq.n	8025c30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025c22:	8822      	ldrh	r2, [r4, #0]
 8025c24:	9300      	str	r3, [sp, #0]
 8025c26:	4640      	mov	r0, r8
 8025c28:	464b      	mov	r3, r9
 8025c2a:	f7ff ff43 	bl	8025ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025c2e:	8020      	strh	r0, [r4, #0]
 8025c30:	3402      	adds	r4, #2
 8025c32:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025c36:	f1ba 0f01 	cmp.w	sl, #1
 8025c3a:	dd22      	ble.n	8025c82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025c3c:	783b      	ldrb	r3, [r7, #0]
 8025c3e:	091b      	lsrs	r3, r3, #4
 8025c40:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025c44:	0e0b      	lsrs	r3, r1, #24
 8025c46:	d006      	beq.n	8025c56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025c48:	8822      	ldrh	r2, [r4, #0]
 8025c4a:	9300      	str	r3, [sp, #0]
 8025c4c:	4640      	mov	r0, r8
 8025c4e:	464b      	mov	r3, r9
 8025c50:	f7ff ff30 	bl	8025ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025c54:	8020      	strh	r0, [r4, #0]
 8025c56:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025c5a:	f003 030f 	and.w	r3, r3, #15
 8025c5e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025c62:	0e0b      	lsrs	r3, r1, #24
 8025c64:	d006      	beq.n	8025c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025c66:	8862      	ldrh	r2, [r4, #2]
 8025c68:	9300      	str	r3, [sp, #0]
 8025c6a:	4640      	mov	r0, r8
 8025c6c:	464b      	mov	r3, r9
 8025c6e:	f7ff ff21 	bl	8025ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025c72:	8060      	strh	r0, [r4, #2]
 8025c74:	3404      	adds	r4, #4
 8025c76:	f1aa 0a02 	sub.w	sl, sl, #2
 8025c7a:	e7dc      	b.n	8025c36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025c7c:	462f      	mov	r7, r5
 8025c7e:	46da      	mov	sl, fp
 8025c80:	e7d9      	b.n	8025c36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025c82:	d10d      	bne.n	8025ca0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025c84:	783b      	ldrb	r3, [r7, #0]
 8025c86:	091b      	lsrs	r3, r3, #4
 8025c88:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025c8c:	0e0b      	lsrs	r3, r1, #24
 8025c8e:	d006      	beq.n	8025c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025c90:	8822      	ldrh	r2, [r4, #0]
 8025c92:	9300      	str	r3, [sp, #0]
 8025c94:	4640      	mov	r0, r8
 8025c96:	464b      	mov	r3, r9
 8025c98:	f7ff ff0c 	bl	8025ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025c9c:	8020      	strh	r0, [r4, #0]
 8025c9e:	3402      	adds	r4, #2
 8025ca0:	9b06      	ldr	r3, [sp, #24]
 8025ca2:	9a02      	ldr	r2, [sp, #8]
 8025ca4:	881b      	ldrh	r3, [r3, #0]
 8025ca6:	eba3 030b 	sub.w	r3, r3, fp
 8025caa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025cae:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025cb2:	4413      	add	r3, r2
 8025cb4:	9a07      	ldr	r2, [sp, #28]
 8025cb6:	fb93 f3f2 	sdiv	r3, r3, r2
 8025cba:	441d      	add	r5, r3
 8025cbc:	e7a3      	b.n	8025c06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025cbe:	9b05      	ldr	r3, [sp, #20]
 8025cc0:	6818      	ldr	r0, [r3, #0]
 8025cc2:	6803      	ldr	r3, [r0, #0]
 8025cc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025cc6:	4798      	blx	r3
 8025cc8:	b00d      	add	sp, #52	; 0x34
 8025cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025cce:	bf00      	nop
 8025cd0:	20012e5c 	.word	0x20012e5c
 8025cd4:	20012e56 	.word	0x20012e56

08025cd8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025cd8:	b570      	push	{r4, r5, r6, lr}
 8025cda:	1214      	asrs	r4, r2, #8
 8025cdc:	788d      	ldrb	r5, [r1, #2]
 8025cde:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025ce2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025ce6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025cea:	fb15 f503 	smulbb	r5, r5, r3
 8025cee:	fb04 5506 	mla	r5, r4, r6, r5
 8025cf2:	10d0      	asrs	r0, r2, #3
 8025cf4:	784c      	ldrb	r4, [r1, #1]
 8025cf6:	7809      	ldrb	r1, [r1, #0]
 8025cf8:	00d2      	lsls	r2, r2, #3
 8025cfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025cfe:	b2d2      	uxtb	r2, r2
 8025d00:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025d04:	fb14 f403 	smulbb	r4, r4, r3
 8025d08:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025d0c:	fb11 f303 	smulbb	r3, r1, r3
 8025d10:	fb00 4406 	mla	r4, r0, r6, r4
 8025d14:	fb02 3306 	mla	r3, r2, r6, r3
 8025d18:	b2ad      	uxth	r5, r5
 8025d1a:	b29b      	uxth	r3, r3
 8025d1c:	b2a4      	uxth	r4, r4
 8025d1e:	1c68      	adds	r0, r5, #1
 8025d20:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025d24:	1c62      	adds	r2, r4, #1
 8025d26:	1c58      	adds	r0, r3, #1
 8025d28:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025d2c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025d30:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025d34:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025d38:	0964      	lsrs	r4, r4, #5
 8025d3a:	4328      	orrs	r0, r5
 8025d3c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025d40:	4320      	orrs	r0, r4
 8025d42:	bd70      	pop	{r4, r5, r6, pc}

08025d44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d48:	b08f      	sub	sp, #60	; 0x3c
 8025d4a:	461c      	mov	r4, r3
 8025d4c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025d50:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025d52:	4682      	mov	sl, r0
 8025d54:	460e      	mov	r6, r1
 8025d56:	4615      	mov	r5, r2
 8025d58:	2f00      	cmp	r7, #0
 8025d5a:	f000 8142 	beq.w	8025fe2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025d5e:	6820      	ldr	r0, [r4, #0]
 8025d60:	6861      	ldr	r1, [r4, #4]
 8025d62:	aa0a      	add	r2, sp, #40	; 0x28
 8025d64:	c203      	stmia	r2!, {r0, r1}
 8025d66:	6818      	ldr	r0, [r3, #0]
 8025d68:	6859      	ldr	r1, [r3, #4]
 8025d6a:	aa0c      	add	r2, sp, #48	; 0x30
 8025d6c:	c203      	stmia	r2!, {r0, r1}
 8025d6e:	a80a      	add	r0, sp, #40	; 0x28
 8025d70:	f7ef f84a 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025d74:	4621      	mov	r1, r4
 8025d76:	a80c      	add	r0, sp, #48	; 0x30
 8025d78:	f7ef f88a 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025d7c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025d80:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025d84:	f002 0301 	and.w	r3, r2, #1
 8025d88:	9306      	str	r3, [sp, #24]
 8025d8a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025d8e:	f003 0101 	and.w	r1, r3, #1
 8025d92:	9105      	str	r1, [sp, #20]
 8025d94:	9805      	ldr	r0, [sp, #20]
 8025d96:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025d9a:	4403      	add	r3, r0
 8025d9c:	fb01 2303 	mla	r3, r1, r3, r2
 8025da0:	f04f 0802 	mov.w	r8, #2
 8025da4:	fb93 f3f8 	sdiv	r3, r3, r8
 8025da8:	441e      	add	r6, r3
 8025daa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025dae:	441a      	add	r2, r3
 8025db0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025db4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025db8:	4419      	add	r1, r3
 8025dba:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025dbe:	9303      	str	r3, [sp, #12]
 8025dc0:	4b89      	ldr	r3, [pc, #548]	; (8025fe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025dc2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025dc6:	6818      	ldr	r0, [r3, #0]
 8025dc8:	6803      	ldr	r3, [r0, #0]
 8025dca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025dcc:	4798      	blx	r3
 8025dce:	4a87      	ldr	r2, [pc, #540]	; (8025fec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025dd0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025dd4:	8813      	ldrh	r3, [r2, #0]
 8025dd6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025dda:	2fff      	cmp	r7, #255	; 0xff
 8025ddc:	fb03 9404 	mla	r4, r3, r4, r9
 8025de0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025de4:	f105 0504 	add.w	r5, r5, #4
 8025de8:	4694      	mov	ip, r2
 8025dea:	fb03 f30b 	mul.w	r3, r3, fp
 8025dee:	d071      	beq.n	8025ed4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025df0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025df4:	43f9      	mvns	r1, r7
 8025df6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025dfa:	b2c9      	uxtb	r1, r1
 8025dfc:	9104      	str	r1, [sp, #16]
 8025dfe:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025e02:	9b07      	ldr	r3, [sp, #28]
 8025e04:	42a3      	cmp	r3, r4
 8025e06:	f240 80e7 	bls.w	8025fd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025e0a:	9b06      	ldr	r3, [sp, #24]
 8025e0c:	2b00      	cmp	r3, #0
 8025e0e:	d03d      	beq.n	8025e8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025e10:	7831      	ldrb	r1, [r6, #0]
 8025e12:	9b04      	ldr	r3, [sp, #16]
 8025e14:	8822      	ldrh	r2, [r4, #0]
 8025e16:	9300      	str	r3, [sp, #0]
 8025e18:	f001 010f 	and.w	r1, r1, #15
 8025e1c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025e20:	463b      	mov	r3, r7
 8025e22:	4429      	add	r1, r5
 8025e24:	4650      	mov	r0, sl
 8025e26:	f7ff ff57 	bl	8025cd8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025e2a:	9b03      	ldr	r3, [sp, #12]
 8025e2c:	f824 0b02 	strh.w	r0, [r4], #2
 8025e30:	f106 0801 	add.w	r8, r6, #1
 8025e34:	f103 3bff 	add.w	fp, r3, #4294967295
 8025e38:	f1bb 0f01 	cmp.w	fp, #1
 8025e3c:	46a1      	mov	r9, r4
 8025e3e:	f104 0404 	add.w	r4, r4, #4
 8025e42:	dd27      	ble.n	8025e94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025e44:	f898 1000 	ldrb.w	r1, [r8]
 8025e48:	9b04      	ldr	r3, [sp, #16]
 8025e4a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025e4e:	9300      	str	r3, [sp, #0]
 8025e50:	0909      	lsrs	r1, r1, #4
 8025e52:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025e56:	463b      	mov	r3, r7
 8025e58:	4429      	add	r1, r5
 8025e5a:	4650      	mov	r0, sl
 8025e5c:	f7ff ff3c 	bl	8025cd8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025e60:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025e64:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025e68:	9b04      	ldr	r3, [sp, #16]
 8025e6a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025e6e:	9300      	str	r3, [sp, #0]
 8025e70:	f001 010f 	and.w	r1, r1, #15
 8025e74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025e78:	463b      	mov	r3, r7
 8025e7a:	4429      	add	r1, r5
 8025e7c:	4650      	mov	r0, sl
 8025e7e:	f7ff ff2b 	bl	8025cd8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025e82:	f1ab 0b02 	sub.w	fp, fp, #2
 8025e86:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025e8a:	e7d5      	b.n	8025e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025e8c:	46b0      	mov	r8, r6
 8025e8e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025e92:	e7d1      	b.n	8025e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025e94:	d10f      	bne.n	8025eb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025e96:	f898 1000 	ldrb.w	r1, [r8]
 8025e9a:	9b04      	ldr	r3, [sp, #16]
 8025e9c:	f8b9 2000 	ldrh.w	r2, [r9]
 8025ea0:	9300      	str	r3, [sp, #0]
 8025ea2:	0909      	lsrs	r1, r1, #4
 8025ea4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025ea8:	463b      	mov	r3, r7
 8025eaa:	4429      	add	r1, r5
 8025eac:	4650      	mov	r0, sl
 8025eae:	f7ff ff13 	bl	8025cd8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025eb2:	f829 0b02 	strh.w	r0, [r9], #2
 8025eb6:	9b08      	ldr	r3, [sp, #32]
 8025eb8:	9a05      	ldr	r2, [sp, #20]
 8025eba:	881c      	ldrh	r4, [r3, #0]
 8025ebc:	9b03      	ldr	r3, [sp, #12]
 8025ebe:	1ae4      	subs	r4, r4, r3
 8025ec0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ec4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025ec8:	4413      	add	r3, r2
 8025eca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025ecc:	fb93 f3f2 	sdiv	r3, r3, r2
 8025ed0:	441e      	add	r6, r3
 8025ed2:	e796      	b.n	8025e02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025ed4:	4f46      	ldr	r7, [pc, #280]	; (8025ff0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025ed6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025eda:	42a3      	cmp	r3, r4
 8025edc:	d97c      	bls.n	8025fd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025ede:	9a06      	ldr	r2, [sp, #24]
 8025ee0:	2a00      	cmp	r2, #0
 8025ee2:	d054      	beq.n	8025f8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025ee4:	7830      	ldrb	r0, [r6, #0]
 8025ee6:	f000 000f 	and.w	r0, r0, #15
 8025eea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025eee:	eb05 0e00 	add.w	lr, r5, r0
 8025ef2:	5c28      	ldrb	r0, [r5, r0]
 8025ef4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025ef8:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025efc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025f00:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025f04:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025f08:	ea42 020e 	orr.w	r2, r2, lr
 8025f0c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025f10:	f824 2b02 	strh.w	r2, [r4], #2
 8025f14:	9a03      	ldr	r2, [sp, #12]
 8025f16:	1c71      	adds	r1, r6, #1
 8025f18:	f102 3eff 	add.w	lr, r2, #4294967295
 8025f1c:	f1be 0f01 	cmp.w	lr, #1
 8025f20:	4620      	mov	r0, r4
 8025f22:	f104 0404 	add.w	r4, r4, #4
 8025f26:	dd36      	ble.n	8025f96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025f28:	7808      	ldrb	r0, [r1, #0]
 8025f2a:	0900      	lsrs	r0, r0, #4
 8025f2c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025f30:	eb05 0a00 	add.w	sl, r5, r0
 8025f34:	f1ae 0e02 	sub.w	lr, lr, #2
 8025f38:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025f3c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025f40:	00d2      	lsls	r2, r2, #3
 8025f42:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025f46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025f4a:	ea49 0202 	orr.w	r2, r9, r2
 8025f4e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025f52:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025f56:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025f5a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025f5e:	f000 000f 	and.w	r0, r0, #15
 8025f62:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025f66:	eb05 0a00 	add.w	sl, r5, r0
 8025f6a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025f6e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025f72:	00d2      	lsls	r2, r2, #3
 8025f74:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025f78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025f7c:	ea49 0202 	orr.w	r2, r9, r2
 8025f80:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025f84:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025f88:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025f8c:	e7c6      	b.n	8025f1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025f8e:	4631      	mov	r1, r6
 8025f90:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025f94:	e7c2      	b.n	8025f1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025f96:	d111      	bne.n	8025fbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025f98:	7809      	ldrb	r1, [r1, #0]
 8025f9a:	0909      	lsrs	r1, r1, #4
 8025f9c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025fa0:	186c      	adds	r4, r5, r1
 8025fa2:	5c69      	ldrb	r1, [r5, r1]
 8025fa4:	78a2      	ldrb	r2, [r4, #2]
 8025fa6:	7864      	ldrb	r4, [r4, #1]
 8025fa8:	00e4      	lsls	r4, r4, #3
 8025faa:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025fae:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025fb2:	4322      	orrs	r2, r4
 8025fb4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025fb8:	f820 2b02 	strh.w	r2, [r0], #2
 8025fbc:	9a03      	ldr	r2, [sp, #12]
 8025fbe:	f8bc 4000 	ldrh.w	r4, [ip]
 8025fc2:	9905      	ldr	r1, [sp, #20]
 8025fc4:	1aa4      	subs	r4, r4, r2
 8025fc6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025fca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025fce:	440a      	add	r2, r1
 8025fd0:	fb92 f2f8 	sdiv	r2, r2, r8
 8025fd4:	4416      	add	r6, r2
 8025fd6:	e780      	b.n	8025eda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025fd8:	4b03      	ldr	r3, [pc, #12]	; (8025fe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025fda:	6818      	ldr	r0, [r3, #0]
 8025fdc:	6803      	ldr	r3, [r0, #0]
 8025fde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025fe0:	4798      	blx	r3
 8025fe2:	b00f      	add	sp, #60	; 0x3c
 8025fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025fe8:	20012e5c 	.word	0x20012e5c
 8025fec:	20012e56 	.word	0x20012e56
 8025ff0:	fffff800 	.word	0xfffff800

08025ff4 <CRC_Lock>:
 8025ff4:	b530      	push	{r4, r5, lr}
 8025ff6:	4a20      	ldr	r2, [pc, #128]	; (8026078 <CRC_Lock+0x84>)
 8025ff8:	6813      	ldr	r3, [r2, #0]
 8025ffa:	f023 0301 	bic.w	r3, r3, #1
 8025ffe:	6013      	str	r3, [r2, #0]
 8026000:	4b1e      	ldr	r3, [pc, #120]	; (802607c <CRC_Lock+0x88>)
 8026002:	681a      	ldr	r2, [r3, #0]
 8026004:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026008:	4022      	ands	r2, r4
 802600a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802600e:	42aa      	cmp	r2, r5
 8026010:	d005      	beq.n	802601e <CRC_Lock+0x2a>
 8026012:	681b      	ldr	r3, [r3, #0]
 8026014:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026018:	4023      	ands	r3, r4
 802601a:	4293      	cmp	r3, r2
 802601c:	d124      	bne.n	8026068 <CRC_Lock+0x74>
 802601e:	4b18      	ldr	r3, [pc, #96]	; (8026080 <CRC_Lock+0x8c>)
 8026020:	681b      	ldr	r3, [r3, #0]
 8026022:	bb0b      	cbnz	r3, 8026068 <CRC_Lock+0x74>
 8026024:	4b17      	ldr	r3, [pc, #92]	; (8026084 <CRC_Lock+0x90>)
 8026026:	681a      	ldr	r2, [r3, #0]
 8026028:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802602c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026030:	d00d      	beq.n	802604e <CRC_Lock+0x5a>
 8026032:	681a      	ldr	r2, [r3, #0]
 8026034:	f240 4483 	movw	r4, #1155	; 0x483
 8026038:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802603c:	42a2      	cmp	r2, r4
 802603e:	d006      	beq.n	802604e <CRC_Lock+0x5a>
 8026040:	681b      	ldr	r3, [r3, #0]
 8026042:	f240 4285 	movw	r2, #1157	; 0x485
 8026046:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802604a:	4293      	cmp	r3, r2
 802604c:	d10c      	bne.n	8026068 <CRC_Lock+0x74>
 802604e:	4b0e      	ldr	r3, [pc, #56]	; (8026088 <CRC_Lock+0x94>)
 8026050:	2201      	movs	r2, #1
 8026052:	601a      	str	r2, [r3, #0]
 8026054:	681a      	ldr	r2, [r3, #0]
 8026056:	2a00      	cmp	r2, #0
 8026058:	d1fc      	bne.n	8026054 <CRC_Lock+0x60>
 802605a:	4b0c      	ldr	r3, [pc, #48]	; (802608c <CRC_Lock+0x98>)
 802605c:	6018      	str	r0, [r3, #0]
 802605e:	6818      	ldr	r0, [r3, #0]
 8026060:	1a43      	subs	r3, r0, r1
 8026062:	4258      	negs	r0, r3
 8026064:	4158      	adcs	r0, r3
 8026066:	bd30      	pop	{r4, r5, pc}
 8026068:	4b09      	ldr	r3, [pc, #36]	; (8026090 <CRC_Lock+0x9c>)
 802606a:	2201      	movs	r2, #1
 802606c:	601a      	str	r2, [r3, #0]
 802606e:	681a      	ldr	r2, [r3, #0]
 8026070:	2a00      	cmp	r2, #0
 8026072:	d1fc      	bne.n	802606e <CRC_Lock+0x7a>
 8026074:	4b07      	ldr	r3, [pc, #28]	; (8026094 <CRC_Lock+0xa0>)
 8026076:	e7f1      	b.n	802605c <CRC_Lock+0x68>
 8026078:	e0002000 	.word	0xe0002000
 802607c:	e000ed00 	.word	0xe000ed00
 8026080:	e0042000 	.word	0xe0042000
 8026084:	5c001000 	.word	0x5c001000
 8026088:	58024c08 	.word	0x58024c08
 802608c:	58024c00 	.word	0x58024c00
 8026090:	40023008 	.word	0x40023008
 8026094:	40023000 	.word	0x40023000

08026098 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026098:	6101      	str	r1, [r0, #16]
 802609a:	4770      	bx	lr

0802609c <_ZN8touchgfx8Gestures4tickEv>:
 802609c:	7b83      	ldrb	r3, [r0, #14]
 802609e:	b14b      	cbz	r3, 80260b4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80260a0:	8903      	ldrh	r3, [r0, #8]
 80260a2:	3301      	adds	r3, #1
 80260a4:	b29b      	uxth	r3, r3
 80260a6:	2b07      	cmp	r3, #7
 80260a8:	8103      	strh	r3, [r0, #8]
 80260aa:	bf81      	itttt	hi
 80260ac:	2300      	movhi	r3, #0
 80260ae:	8143      	strhhi	r3, [r0, #10]
 80260b0:	8183      	strhhi	r3, [r0, #12]
 80260b2:	7383      	strbhi	r3, [r0, #14]
 80260b4:	4770      	bx	lr
	...

080260b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80260b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80260bc:	4698      	mov	r8, r3
 80260be:	8883      	ldrh	r3, [r0, #4]
 80260c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80260c4:	eba8 0303 	sub.w	r3, r8, r3
 80260c8:	b21b      	sxth	r3, r3
 80260ca:	4604      	mov	r4, r0
 80260cc:	2b00      	cmp	r3, #0
 80260ce:	4617      	mov	r7, r2
 80260d0:	4a18      	ldr	r2, [pc, #96]	; (8026134 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80260d2:	9200      	str	r2, [sp, #0]
 80260d4:	bfb8      	it	lt
 80260d6:	425b      	neglt	r3, r3
 80260d8:	8aa2      	ldrh	r2, [r4, #20]
 80260da:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80260de:	f8ad 800a 	strh.w	r8, [sp, #10]
 80260e2:	b21b      	sxth	r3, r3
 80260e4:	460e      	mov	r6, r1
 80260e6:	4293      	cmp	r3, r2
 80260e8:	88c1      	ldrh	r1, [r0, #6]
 80260ea:	f8ad 1008 	strh.w	r1, [sp, #8]
 80260ee:	f04f 0000 	mov.w	r0, #0
 80260f2:	f88d 0004 	strb.w	r0, [sp, #4]
 80260f6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80260fa:	dc07      	bgt.n	802610c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80260fc:	1a69      	subs	r1, r5, r1
 80260fe:	b209      	sxth	r1, r1
 8026100:	2900      	cmp	r1, #0
 8026102:	bfb8      	it	lt
 8026104:	4249      	neglt	r1, r1
 8026106:	b209      	sxth	r1, r1
 8026108:	428a      	cmp	r2, r1
 802610a:	da10      	bge.n	802612e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802610c:	6920      	ldr	r0, [r4, #16]
 802610e:	6803      	ldr	r3, [r0, #0]
 8026110:	4669      	mov	r1, sp
 8026112:	685b      	ldr	r3, [r3, #4]
 8026114:	4798      	blx	r3
 8026116:	eba8 0606 	sub.w	r6, r8, r6
 802611a:	2300      	movs	r3, #0
 802611c:	1bef      	subs	r7, r5, r7
 802611e:	2001      	movs	r0, #1
 8026120:	8123      	strh	r3, [r4, #8]
 8026122:	8166      	strh	r6, [r4, #10]
 8026124:	81a7      	strh	r7, [r4, #12]
 8026126:	f8a4 8004 	strh.w	r8, [r4, #4]
 802612a:	80e5      	strh	r5, [r4, #6]
 802612c:	73a0      	strb	r0, [r4, #14]
 802612e:	b004      	add	sp, #16
 8026130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026134:	0802e790 	.word	0x0802e790

08026138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026138:	b5f0      	push	{r4, r5, r6, r7, lr}
 802613a:	461e      	mov	r6, r3
 802613c:	1e4b      	subs	r3, r1, #1
 802613e:	2b01      	cmp	r3, #1
 8026140:	b085      	sub	sp, #20
 8026142:	4604      	mov	r4, r0
 8026144:	460d      	mov	r5, r1
 8026146:	4617      	mov	r7, r2
 8026148:	d84b      	bhi.n	80261e2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802614a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802614e:	1cd3      	adds	r3, r2, #3
 8026150:	b29b      	uxth	r3, r3
 8026152:	2b06      	cmp	r3, #6
 8026154:	d916      	bls.n	8026184 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026156:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80261f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802615a:	f8cd c004 	str.w	ip, [sp, #4]
 802615e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026162:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026166:	6900      	ldr	r0, [r0, #16]
 8026168:	f8ad 100c 	strh.w	r1, [sp, #12]
 802616c:	f04f 0c00 	mov.w	ip, #0
 8026170:	f88d c008 	strb.w	ip, [sp, #8]
 8026174:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026178:	f8ad 300e 	strh.w	r3, [sp, #14]
 802617c:	6803      	ldr	r3, [r0, #0]
 802617e:	a901      	add	r1, sp, #4
 8026180:	689b      	ldr	r3, [r3, #8]
 8026182:	4798      	blx	r3
 8026184:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026188:	1cd3      	adds	r3, r2, #3
 802618a:	b29b      	uxth	r3, r3
 802618c:	2b06      	cmp	r3, #6
 802618e:	d916      	bls.n	80261be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026190:	f8df c064 	ldr.w	ip, [pc, #100]	; 80261f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026194:	f8cd c004 	str.w	ip, [sp, #4]
 8026198:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802619c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80261a0:	6920      	ldr	r0, [r4, #16]
 80261a2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80261a6:	f04f 0c01 	mov.w	ip, #1
 80261aa:	f88d c008 	strb.w	ip, [sp, #8]
 80261ae:	f8ad 200a 	strh.w	r2, [sp, #10]
 80261b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80261b6:	6803      	ldr	r3, [r0, #0]
 80261b8:	a901      	add	r1, sp, #4
 80261ba:	689b      	ldr	r3, [r3, #8]
 80261bc:	4798      	blx	r3
 80261be:	4b0d      	ldr	r3, [pc, #52]	; (80261f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80261c0:	9301      	str	r3, [sp, #4]
 80261c2:	6920      	ldr	r0, [r4, #16]
 80261c4:	f88d 5008 	strb.w	r5, [sp, #8]
 80261c8:	2300      	movs	r3, #0
 80261ca:	f8ad 700a 	strh.w	r7, [sp, #10]
 80261ce:	f8ad 600c 	strh.w	r6, [sp, #12]
 80261d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80261d6:	6803      	ldr	r3, [r0, #0]
 80261d8:	a901      	add	r1, sp, #4
 80261da:	681b      	ldr	r3, [r3, #0]
 80261dc:	4798      	blx	r3
 80261de:	b005      	add	sp, #20
 80261e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80261e2:	2900      	cmp	r1, #0
 80261e4:	d1eb      	bne.n	80261be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80261e6:	80a2      	strh	r2, [r4, #4]
 80261e8:	80c6      	strh	r6, [r0, #6]
 80261ea:	60a1      	str	r1, [r4, #8]
 80261ec:	81a1      	strh	r1, [r4, #12]
 80261ee:	73a1      	strb	r1, [r4, #14]
 80261f0:	e7e5      	b.n	80261be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80261f2:	bf00      	nop
 80261f4:	0802e77c 	.word	0x0802e77c
 80261f8:	0802e7a4 	.word	0x0802e7a4

080261fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80261fc:	10c9      	asrs	r1, r1, #3
 80261fe:	2900      	cmp	r1, #0
 8026200:	bfb8      	it	lt
 8026202:	4249      	neglt	r1, r1
 8026204:	2801      	cmp	r0, #1
 8026206:	d108      	bne.n	802621a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026208:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802620c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026210:	4601      	mov	r1, r0
 8026212:	dd02      	ble.n	802621a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026214:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026218:	4770      	bx	lr
 802621a:	29ff      	cmp	r1, #255	; 0xff
 802621c:	bfa8      	it	ge
 802621e:	21ff      	movge	r1, #255	; 0xff
 8026220:	4608      	mov	r0, r1
 8026222:	4770      	bx	lr

08026224 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026224:	b410      	push	{r4}
 8026226:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802622a:	429c      	cmp	r4, r3
 802622c:	d803      	bhi.n	8026236 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802622e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026232:	f7ed b8ef 	b.w	8013414 <_ZN8touchgfx7Outline6lineToEii>
 8026236:	f85d 4b04 	ldr.w	r4, [sp], #4
 802623a:	4770      	bx	lr

0802623c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802623c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026240:	b08b      	sub	sp, #44	; 0x2c
 8026242:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026246:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802624a:	9308      	str	r3, [sp, #32]
 802624c:	4606      	mov	r6, r0
 802624e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026252:	9309      	str	r3, [sp, #36]	; 0x24
 8026254:	468a      	mov	sl, r1
 8026256:	f7ed fa4a 	bl	80136ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802625a:	68b5      	ldr	r5, [r6, #8]
 802625c:	4604      	mov	r4, r0
 802625e:	2d00      	cmp	r5, #0
 8026260:	d044      	beq.n	80262ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026262:	6873      	ldr	r3, [r6, #4]
 8026264:	42ab      	cmp	r3, r5
 8026266:	d33d      	bcc.n	80262e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026268:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802626c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026270:	eb02 0b03 	add.w	fp, r2, r3
 8026274:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026278:	fb02 1203 	mla	r2, r2, r3, r1
 802627c:	9205      	str	r2, [sp, #20]
 802627e:	1e6a      	subs	r2, r5, #1
 8026280:	9204      	str	r2, [sp, #16]
 8026282:	f04f 0800 	mov.w	r8, #0
 8026286:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802628a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802628e:	454b      	cmp	r3, r9
 8026290:	463a      	mov	r2, r7
 8026292:	d008      	beq.n	80262a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026294:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026298:	eb03 0b09 	add.w	fp, r3, r9
 802629c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80262a0:	fb03 1309 	mla	r3, r3, r9, r1
 80262a4:	9305      	str	r3, [sp, #20]
 80262a6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80262aa:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80262ae:	4498      	add	r8, r3
 80262b0:	9b04      	ldr	r3, [sp, #16]
 80262b2:	3b01      	subs	r3, #1
 80262b4:	9304      	str	r3, [sp, #16]
 80262b6:	9b04      	ldr	r3, [sp, #16]
 80262b8:	3301      	adds	r3, #1
 80262ba:	d015      	beq.n	80262e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80262bc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80262c0:	42bb      	cmp	r3, r7
 80262c2:	d117      	bne.n	80262f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80262c4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80262c8:	9b04      	ldr	r3, [sp, #16]
 80262ca:	4548      	cmp	r0, r9
 80262cc:	f103 33ff 	add.w	r3, r3, #4294967295
 80262d0:	d17f      	bne.n	80263d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80262d2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80262d6:	4401      	add	r1, r0
 80262d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80262dc:	4480      	add	r8, r0
 80262de:	e7e9      	b.n	80262b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80262e0:	461f      	mov	r7, r3
 80262e2:	e044      	b.n	802636e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80262e4:	2000      	movs	r0, #0
 80262e6:	e002      	b.n	80262ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80262e8:	2900      	cmp	r1, #0
 80262ea:	d16f      	bne.n	80263cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80262ec:	2001      	movs	r0, #1
 80262ee:	b00b      	add	sp, #44	; 0x2c
 80262f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262f4:	2900      	cmp	r1, #0
 80262f6:	d030      	beq.n	802635a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80262f8:	2f00      	cmp	r7, #0
 80262fa:	db29      	blt.n	8026350 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80262fc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026300:	42bb      	cmp	r3, r7
 8026302:	dd25      	ble.n	8026350 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026304:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026308:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802630c:	f7ff ff76 	bl	80261fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026312:	fb10 f003 	smulbb	r0, r0, r3
 8026316:	b280      	uxth	r0, r0
 8026318:	1c41      	adds	r1, r0, #1
 802631a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802631e:	1209      	asrs	r1, r1, #8
 8026320:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026324:	d014      	beq.n	8026350 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026326:	9808      	ldr	r0, [sp, #32]
 8026328:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802632a:	b2c9      	uxtb	r1, r1
 802632c:	b2ba      	uxth	r2, r7
 802632e:	9102      	str	r1, [sp, #8]
 8026330:	2101      	movs	r1, #1
 8026332:	4413      	add	r3, r2
 8026334:	9101      	str	r1, [sp, #4]
 8026336:	4402      	add	r2, r0
 8026338:	fa0f f18b 	sxth.w	r1, fp
 802633c:	f8da 0000 	ldr.w	r0, [sl]
 8026340:	9100      	str	r1, [sp, #0]
 8026342:	6941      	ldr	r1, [r0, #20]
 8026344:	b21b      	sxth	r3, r3
 8026346:	460d      	mov	r5, r1
 8026348:	b212      	sxth	r2, r2
 802634a:	9905      	ldr	r1, [sp, #20]
 802634c:	4650      	mov	r0, sl
 802634e:	47a8      	blx	r5
 8026350:	9b04      	ldr	r3, [sp, #16]
 8026352:	3301      	adds	r3, #1
 8026354:	f107 0201 	add.w	r2, r7, #1
 8026358:	d0c8      	beq.n	80262ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802635a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802635e:	1abb      	subs	r3, r7, r2
 8026360:	2b00      	cmp	r3, #0
 8026362:	dd31      	ble.n	80263c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026364:	2a00      	cmp	r2, #0
 8026366:	dabb      	bge.n	80262e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026368:	2f00      	cmp	r7, #0
 802636a:	dd2d      	ble.n	80263c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802636c:	2200      	movs	r2, #0
 802636e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026372:	19d1      	adds	r1, r2, r7
 8026374:	4299      	cmp	r1, r3
 8026376:	db02      	blt.n	802637e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026378:	1a9f      	subs	r7, r3, r2
 802637a:	2f00      	cmp	r7, #0
 802637c:	dd24      	ble.n	80263c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802637e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026382:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026386:	f7ff ff39 	bl	80261fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802638a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802638c:	fb10 f003 	smulbb	r0, r0, r3
 8026390:	b280      	uxth	r0, r0
 8026392:	1c41      	adds	r1, r0, #1
 8026394:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026398:	1209      	asrs	r1, r1, #8
 802639a:	f011 0fff 	tst.w	r1, #255	; 0xff
 802639e:	d013      	beq.n	80263c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80263a0:	9808      	ldr	r0, [sp, #32]
 80263a2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80263a4:	b292      	uxth	r2, r2
 80263a6:	b2c9      	uxtb	r1, r1
 80263a8:	4413      	add	r3, r2
 80263aa:	9102      	str	r1, [sp, #8]
 80263ac:	4402      	add	r2, r0
 80263ae:	b23f      	sxth	r7, r7
 80263b0:	f8da 0000 	ldr.w	r0, [sl]
 80263b4:	9701      	str	r7, [sp, #4]
 80263b6:	fa0f f18b 	sxth.w	r1, fp
 80263ba:	9100      	str	r1, [sp, #0]
 80263bc:	6947      	ldr	r7, [r0, #20]
 80263be:	9905      	ldr	r1, [sp, #20]
 80263c0:	b21b      	sxth	r3, r3
 80263c2:	b212      	sxth	r2, r2
 80263c4:	4650      	mov	r0, sl
 80263c6:	47b8      	blx	r7
 80263c8:	464b      	mov	r3, r9
 80263ca:	e75c      	b.n	8026286 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80263cc:	2f00      	cmp	r7, #0
 80263ce:	da95      	bge.n	80262fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80263d0:	e78c      	b.n	80262ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80263d2:	2900      	cmp	r1, #0
 80263d4:	d0f8      	beq.n	80263c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80263d6:	e78f      	b.n	80262f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080263d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80263d8:	4b4b      	ldr	r3, [pc, #300]	; (8026508 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80263da:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80263de:	2500      	movs	r5, #0
 80263e0:	f100 0620 	add.w	r6, r0, #32
 80263e4:	4604      	mov	r4, r0
 80263e6:	e9c0 3100 	strd	r3, r1, [r0]
 80263ea:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80263ee:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80263f2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80263f6:	f100 0718 	add.w	r7, r0, #24
 80263fa:	4630      	mov	r0, r6
 80263fc:	4690      	mov	r8, r2
 80263fe:	f7ec fb41 	bl	8012a84 <_ZN8touchgfx7OutlineC1Ev>
 8026402:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026406:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802640a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802640e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026412:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026416:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802641a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802641e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026422:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026426:	f9b8 2000 	ldrsh.w	r2, [r8]
 802642a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802642e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026432:	9500      	str	r5, [sp, #0]
 8026434:	4410      	add	r0, r2
 8026436:	b280      	uxth	r0, r0
 8026438:	fa0f fa80 	sxth.w	sl, r0
 802643c:	45aa      	cmp	sl, r5
 802643e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026442:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026446:	dd5c      	ble.n	8026502 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026448:	4591      	cmp	r9, r2
 802644a:	dd5a      	ble.n	8026502 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802644c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026450:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026454:	440b      	add	r3, r1
 8026456:	b29b      	uxth	r3, r3
 8026458:	b21d      	sxth	r5, r3
 802645a:	2d00      	cmp	r5, #0
 802645c:	dd51      	ble.n	8026502 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802645e:	458e      	cmp	lr, r1
 8026460:	dd4f      	ble.n	8026502 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026462:	45d1      	cmp	r9, sl
 8026464:	bfb8      	it	lt
 8026466:	fa1f f089 	uxthlt.w	r0, r9
 802646a:	45ae      	cmp	lr, r5
 802646c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026470:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026474:	bfb8      	it	lt
 8026476:	fa1f f38e 	uxthlt.w	r3, lr
 802647a:	1a80      	subs	r0, r0, r2
 802647c:	1a5b      	subs	r3, r3, r1
 802647e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026482:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026486:	f8ad 2000 	strh.w	r2, [sp]
 802648a:	f8ad 1002 	strh.w	r1, [sp, #2]
 802648e:	466d      	mov	r5, sp
 8026490:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026494:	e887 0003 	stmia.w	r7, {r0, r1}
 8026498:	f8dc 3000 	ldr.w	r3, [ip]
 802649c:	4660      	mov	r0, ip
 802649e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80264a0:	4639      	mov	r1, r7
 80264a2:	4798      	blx	r3
 80264a4:	6861      	ldr	r1, [r4, #4]
 80264a6:	4628      	mov	r0, r5
 80264a8:	3104      	adds	r1, #4
 80264aa:	f7ee fcf1 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80264ae:	4638      	mov	r0, r7
 80264b0:	f7ee fcaa 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80264b4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80264b8:	f8bd 2000 	ldrh.w	r2, [sp]
 80264bc:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80264c0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80264c4:	4630      	mov	r0, r6
 80264c6:	f7ec fac1 	bl	8012a4c <_ZN8touchgfx7Outline5resetEv>
 80264ca:	f9bd 3000 	ldrsh.w	r3, [sp]
 80264ce:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80264d2:	015b      	lsls	r3, r3, #5
 80264d4:	60a3      	str	r3, [r4, #8]
 80264d6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80264da:	015b      	lsls	r3, r3, #5
 80264dc:	60e3      	str	r3, [r4, #12]
 80264de:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80264e2:	015b      	lsls	r3, r3, #5
 80264e4:	6123      	str	r3, [r4, #16]
 80264e6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80264ea:	015b      	lsls	r3, r3, #5
 80264ec:	6163      	str	r3, [r4, #20]
 80264ee:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80264f2:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80264f6:	4620      	mov	r0, r4
 80264f8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80264fc:	b002      	add	sp, #8
 80264fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026502:	2300      	movs	r3, #0
 8026504:	9301      	str	r3, [sp, #4]
 8026506:	e7c2      	b.n	802648e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026508:	0802eac8 	.word	0x0802eac8

0802650c <_ZN8touchgfx6Canvas5closeEv>:
 802650c:	b538      	push	{r3, r4, r5, lr}
 802650e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026512:	4604      	mov	r4, r0
 8026514:	b193      	cbz	r3, 802653c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026516:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802651a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802651e:	4213      	tst	r3, r2
 8026520:	d10c      	bne.n	802653c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026522:	f100 0520 	add.w	r5, r0, #32
 8026526:	b123      	cbz	r3, 8026532 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026528:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802652c:	4628      	mov	r0, r5
 802652e:	f7ff fe79 	bl	8026224 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026532:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026536:	4628      	mov	r0, r5
 8026538:	f7ff fe74 	bl	8026224 <_ZN8touchgfx10Rasterizer6lineToEii>
 802653c:	2300      	movs	r3, #0
 802653e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026542:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026546:	4298      	cmp	r0, r3
 8026548:	bf34      	ite	cc
 802654a:	2000      	movcc	r0, #0
 802654c:	2001      	movcs	r0, #1
 802654e:	bd38      	pop	{r3, r4, r5, pc}

08026550 <_ZN8touchgfx6Canvas6renderEh>:
 8026550:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026554:	4604      	mov	r4, r0
 8026556:	6840      	ldr	r0, [r0, #4]
 8026558:	6803      	ldr	r3, [r0, #0]
 802655a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802655c:	460d      	mov	r5, r1
 802655e:	4798      	blx	r3
 8026560:	fb10 f105 	smulbb	r1, r0, r5
 8026564:	b289      	uxth	r1, r1
 8026566:	1c4d      	adds	r5, r1, #1
 8026568:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802656c:	122d      	asrs	r5, r5, #8
 802656e:	f000 809d 	beq.w	80266ac <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026572:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026576:	2b00      	cmp	r3, #0
 8026578:	f000 8098 	beq.w	80266ac <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802657c:	4620      	mov	r0, r4
 802657e:	f7ff ffc5 	bl	802650c <_ZN8touchgfx6Canvas5closeEv>
 8026582:	4607      	mov	r7, r0
 8026584:	2800      	cmp	r0, #0
 8026586:	d048      	beq.n	802661a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026588:	6863      	ldr	r3, [r4, #4]
 802658a:	4e49      	ldr	r6, [pc, #292]	; (80266b0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802658c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802658e:	6837      	ldr	r7, [r6, #0]
 8026590:	6803      	ldr	r3, [r0, #0]
 8026592:	689b      	ldr	r3, [r3, #8]
 8026594:	4798      	blx	r3
 8026596:	4601      	mov	r1, r0
 8026598:	4638      	mov	r0, r7
 802659a:	f7ea fbc5 	bl	8010d28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802659e:	4607      	mov	r7, r0
 80265a0:	f7dd f9ac 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 80265a4:	6803      	ldr	r3, [r0, #0]
 80265a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80265a8:	4798      	blx	r3
 80265aa:	4680      	mov	r8, r0
 80265ac:	f7dd f9a6 	bl	80038fc <_ZN8touchgfx3HAL3lcdEv>
 80265b0:	6803      	ldr	r3, [r0, #0]
 80265b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80265b4:	4798      	blx	r3
 80265b6:	280b      	cmp	r0, #11
 80265b8:	d85d      	bhi.n	8026676 <_ZN8touchgfx6Canvas6renderEh+0x126>
 80265ba:	e8df f000 	tbb	[pc, r0]
 80265be:	5e53      	.short	0x5e53
 80265c0:	325c066e 	.word	0x325c066e
 80265c4:	67676742 	.word	0x67676742
 80265c8:	6767      	.short	0x6767
 80265ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80265ce:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80265d2:	2208      	movs	r2, #8
 80265d4:	fb91 f2f2 	sdiv	r2, r1, r2
 80265d8:	fb08 2303 	mla	r3, r8, r3, r2
 80265dc:	441f      	add	r7, r3
 80265de:	424b      	negs	r3, r1
 80265e0:	f003 0307 	and.w	r3, r3, #7
 80265e4:	f001 0107 	and.w	r1, r1, #7
 80265e8:	bf58      	it	pl
 80265ea:	4259      	negpl	r1, r3
 80265ec:	b2c9      	uxtb	r1, r1
 80265ee:	b2ed      	uxtb	r5, r5
 80265f0:	e9cd 1500 	strd	r1, r5, [sp]
 80265f4:	6860      	ldr	r0, [r4, #4]
 80265f6:	463a      	mov	r2, r7
 80265f8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80265fa:	fa0f f388 	sxth.w	r3, r8
 80265fe:	f104 0020 	add.w	r0, r4, #32
 8026602:	f7ff fe1b 	bl	802623c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8026606:	6863      	ldr	r3, [r4, #4]
 8026608:	4607      	mov	r7, r0
 802660a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802660c:	6803      	ldr	r3, [r0, #0]
 802660e:	691b      	ldr	r3, [r3, #16]
 8026610:	4798      	blx	r3
 8026612:	6830      	ldr	r0, [r6, #0]
 8026614:	6803      	ldr	r3, [r0, #0]
 8026616:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026618:	4798      	blx	r3
 802661a:	4638      	mov	r0, r7
 802661c:	b002      	add	sp, #8
 802661e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026622:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026626:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802662a:	2204      	movs	r2, #4
 802662c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026630:	fb08 2303 	mla	r3, r8, r3, r2
 8026634:	441f      	add	r7, r3
 8026636:	424b      	negs	r3, r1
 8026638:	f003 0303 	and.w	r3, r3, #3
 802663c:	f001 0103 	and.w	r1, r1, #3
 8026640:	e7d2      	b.n	80265e8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026642:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026646:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802664a:	2900      	cmp	r1, #0
 802664c:	f04f 0202 	mov.w	r2, #2
 8026650:	fb91 f2f2 	sdiv	r2, r1, r2
 8026654:	f001 0101 	and.w	r1, r1, #1
 8026658:	fb08 2303 	mla	r3, r8, r3, r2
 802665c:	441f      	add	r7, r3
 802665e:	bfb8      	it	lt
 8026660:	4249      	neglt	r1, r1
 8026662:	e7c3      	b.n	80265ec <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026664:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026668:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802666c:	fb08 f303 	mul.w	r3, r8, r3
 8026670:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026674:	441f      	add	r7, r3
 8026676:	2100      	movs	r1, #0
 8026678:	e7b9      	b.n	80265ee <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802667a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802667e:	fb08 f203 	mul.w	r2, r8, r3
 8026682:	8b23      	ldrh	r3, [r4, #24]
 8026684:	2103      	movs	r1, #3
 8026686:	fb13 2301 	smlabb	r3, r3, r1, r2
 802668a:	e7f3      	b.n	8026674 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802668c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026690:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026694:	fb08 2303 	mla	r3, r8, r3, r2
 8026698:	e7ec      	b.n	8026674 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802669a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802669e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80266a2:	fb08 f303 	mul.w	r3, r8, r3
 80266a6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80266aa:	e7e3      	b.n	8026674 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80266ac:	2701      	movs	r7, #1
 80266ae:	e7b4      	b.n	802661a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80266b0:	20012e5c 	.word	0x20012e5c

080266b4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80266b4:	b510      	push	{r4, lr}
 80266b6:	4b07      	ldr	r3, [pc, #28]	; (80266d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80266b8:	781b      	ldrb	r3, [r3, #0]
 80266ba:	2b01      	cmp	r3, #1
 80266bc:	d108      	bne.n	80266d0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80266be:	6843      	ldr	r3, [r0, #4]
 80266c0:	6814      	ldr	r4, [r2, #0]
 80266c2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80266c6:	680b      	ldr	r3, [r1, #0]
 80266c8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80266cc:	6013      	str	r3, [r2, #0]
 80266ce:	600c      	str	r4, [r1, #0]
 80266d0:	bd10      	pop	{r4, pc}
 80266d2:	bf00      	nop
 80266d4:	20012e54 	.word	0x20012e54

080266d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80266d8:	b513      	push	{r0, r1, r4, lr}
 80266da:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80266de:	4604      	mov	r4, r0
 80266e0:	e9cd 2100 	strd	r2, r1, [sp]
 80266e4:	b9a3      	cbnz	r3, 8026710 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80266e6:	466a      	mov	r2, sp
 80266e8:	a901      	add	r1, sp, #4
 80266ea:	4620      	mov	r0, r4
 80266ec:	f7ff ffe2 	bl	80266b4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80266f0:	68a3      	ldr	r3, [r4, #8]
 80266f2:	9901      	ldr	r1, [sp, #4]
 80266f4:	9a00      	ldr	r2, [sp, #0]
 80266f6:	1ac9      	subs	r1, r1, r3
 80266f8:	68e3      	ldr	r3, [r4, #12]
 80266fa:	9101      	str	r1, [sp, #4]
 80266fc:	1ad2      	subs	r2, r2, r3
 80266fe:	2a00      	cmp	r2, #0
 8026700:	9200      	str	r2, [sp, #0]
 8026702:	da0b      	bge.n	802671c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8026704:	2301      	movs	r3, #1
 8026706:	2900      	cmp	r1, #0
 8026708:	da0e      	bge.n	8026728 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802670a:	f043 0304 	orr.w	r3, r3, #4
 802670e:	e013      	b.n	8026738 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026710:	f7ff fefc 	bl	802650c <_ZN8touchgfx6Canvas5closeEv>
 8026714:	2800      	cmp	r0, #0
 8026716:	d1e6      	bne.n	80266e6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026718:	b002      	add	sp, #8
 802671a:	bd10      	pop	{r4, pc}
 802671c:	6963      	ldr	r3, [r4, #20]
 802671e:	429a      	cmp	r2, r3
 8026720:	bfac      	ite	ge
 8026722:	2302      	movge	r3, #2
 8026724:	2300      	movlt	r3, #0
 8026726:	e7ee      	b.n	8026706 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026728:	6920      	ldr	r0, [r4, #16]
 802672a:	4281      	cmp	r1, r0
 802672c:	bfac      	ite	ge
 802672e:	2008      	movge	r0, #8
 8026730:	2000      	movlt	r0, #0
 8026732:	4318      	orrs	r0, r3
 8026734:	b2c3      	uxtb	r3, r0
 8026736:	b158      	cbz	r0, 8026750 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026738:	2200      	movs	r2, #0
 802673a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802673e:	9901      	ldr	r1, [sp, #4]
 8026740:	9a00      	ldr	r2, [sp, #0]
 8026742:	66a1      	str	r1, [r4, #104]	; 0x68
 8026744:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026746:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802674a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802674e:	e7e3      	b.n	8026718 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026750:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026754:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026758:	4298      	cmp	r0, r3
 802675a:	d803      	bhi.n	8026764 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802675c:	f104 0020 	add.w	r0, r4, #32
 8026760:	f7ec fe72 	bl	8013448 <_ZN8touchgfx7Outline6moveToEii>
 8026764:	2301      	movs	r3, #1
 8026766:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802676a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802676e:	2300      	movs	r3, #0
 8026770:	e7e5      	b.n	802673e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026772:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026774:	ab02      	add	r3, sp, #8
 8026776:	4604      	mov	r4, r0
 8026778:	f843 2d08 	str.w	r2, [r3, #-8]!
 802677c:	9101      	str	r1, [sp, #4]
 802677e:	461a      	mov	r2, r3
 8026780:	a901      	add	r1, sp, #4
 8026782:	f7ff ff97 	bl	80266b4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026786:	68a3      	ldr	r3, [r4, #8]
 8026788:	9901      	ldr	r1, [sp, #4]
 802678a:	9a00      	ldr	r2, [sp, #0]
 802678c:	1ac9      	subs	r1, r1, r3
 802678e:	68e3      	ldr	r3, [r4, #12]
 8026790:	9101      	str	r1, [sp, #4]
 8026792:	1ad2      	subs	r2, r2, r3
 8026794:	2a00      	cmp	r2, #0
 8026796:	9200      	str	r2, [sp, #0]
 8026798:	db1c      	blt.n	80267d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802679a:	6963      	ldr	r3, [r4, #20]
 802679c:	429a      	cmp	r2, r3
 802679e:	bfac      	ite	ge
 80267a0:	2002      	movge	r0, #2
 80267a2:	2000      	movlt	r0, #0
 80267a4:	2900      	cmp	r1, #0
 80267a6:	db17      	blt.n	80267d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80267a8:	6923      	ldr	r3, [r4, #16]
 80267aa:	4299      	cmp	r1, r3
 80267ac:	bfac      	ite	ge
 80267ae:	2308      	movge	r3, #8
 80267b0:	2300      	movlt	r3, #0
 80267b2:	4303      	orrs	r3, r0
 80267b4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80267b8:	b2dd      	uxtb	r5, r3
 80267ba:	b978      	cbnz	r0, 80267dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80267bc:	f104 0020 	add.w	r0, r4, #32
 80267c0:	f7ff fd30 	bl	8026224 <_ZN8touchgfx10Rasterizer6lineToEii>
 80267c4:	9b01      	ldr	r3, [sp, #4]
 80267c6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80267c8:	9b00      	ldr	r3, [sp, #0]
 80267ca:	6623      	str	r3, [r4, #96]	; 0x60
 80267cc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80267d0:	b002      	add	sp, #8
 80267d2:	bd70      	pop	{r4, r5, r6, pc}
 80267d4:	2001      	movs	r0, #1
 80267d6:	e7e5      	b.n	80267a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80267d8:	2304      	movs	r3, #4
 80267da:	e7ea      	b.n	80267b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80267dc:	b113      	cbz	r3, 80267e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80267de:	ea10 0305 	ands.w	r3, r0, r5
 80267e2:	d11c      	bne.n	802681e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80267e4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80267e8:	f104 0620 	add.w	r6, r4, #32
 80267ec:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80267f0:	b98b      	cbnz	r3, 8026816 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80267f2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80267f6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80267fa:	4298      	cmp	r0, r3
 80267fc:	d802      	bhi.n	8026804 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80267fe:	4630      	mov	r0, r6
 8026800:	f7ec fe22 	bl	8013448 <_ZN8touchgfx7Outline6moveToEii>
 8026804:	2301      	movs	r3, #1
 8026806:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802680a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802680e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8026812:	4630      	mov	r0, r6
 8026814:	e7d4      	b.n	80267c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8026816:	4630      	mov	r0, r6
 8026818:	f7ff fd04 	bl	8026224 <_ZN8touchgfx10Rasterizer6lineToEii>
 802681c:	e7f7      	b.n	802680e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802681e:	461d      	mov	r5, r3
 8026820:	e7d0      	b.n	80267c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026824 <_ZN8touchgfx6CanvasD1Ev>:
 8026824:	b510      	push	{r4, lr}
 8026826:	4b04      	ldr	r3, [pc, #16]	; (8026838 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026828:	4604      	mov	r4, r0
 802682a:	f840 3b20 	str.w	r3, [r0], #32
 802682e:	f7ec f905 	bl	8012a3c <_ZN8touchgfx7OutlineD1Ev>
 8026832:	4620      	mov	r0, r4
 8026834:	bd10      	pop	{r4, pc}
 8026836:	bf00      	nop
 8026838:	0802eac8 	.word	0x0802eac8

0802683c <_ZN8touchgfx6CanvasD0Ev>:
 802683c:	b510      	push	{r4, lr}
 802683e:	4604      	mov	r4, r0
 8026840:	f7ff fff0 	bl	8026824 <_ZN8touchgfx6CanvasD1Ev>
 8026844:	4620      	mov	r0, r4
 8026846:	2170      	movs	r1, #112	; 0x70
 8026848:	f002 fd09 	bl	802925e <_ZdlPvj>
 802684c:	4620      	mov	r0, r4
 802684e:	bd10      	pop	{r4, pc}

08026850 <_ZN8touchgfx6CircleD1Ev>:
 8026850:	4770      	bx	lr

08026852 <_ZN8touchgfx6CircleD0Ev>:
 8026852:	b510      	push	{r4, lr}
 8026854:	2148      	movs	r1, #72	; 0x48
 8026856:	4604      	mov	r4, r0
 8026858:	f002 fd01 	bl	802925e <_ZdlPvj>
 802685c:	4620      	mov	r0, r4
 802685e:	bd10      	pop	{r4, pc}

08026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026860:	b508      	push	{r3, lr}
 8026862:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026866:	f7ea fdb5 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802686a:	bd08      	pop	{r3, pc}

0802686c <_ZN8touchgfx6CircleC1Ev>:
 802686c:	b510      	push	{r4, lr}
 802686e:	4604      	mov	r4, r0
 8026870:	f7ea fc4c 	bl	801110c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026874:	4b08      	ldr	r3, [pc, #32]	; (8026898 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026876:	6023      	str	r3, [r4, #0]
 8026878:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802687c:	2300      	movs	r3, #0
 802687e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026882:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026886:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802688a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802688e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026892:	60a3      	str	r3, [r4, #8]
 8026894:	4620      	mov	r0, r4
 8026896:	bd10      	pop	{r4, pc}
 8026898:	0802eadc 	.word	0x0802eadc

0802689c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802689c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80268a0:	428a      	cmp	r2, r1
 80268a2:	4680      	mov	r8, r0
 80268a4:	4610      	mov	r0, r2
 80268a6:	4699      	mov	r9, r3
 80268a8:	bfa6      	itte	ge
 80268aa:	460a      	movge	r2, r1
 80268ac:	4603      	movge	r3, r0
 80268ae:	460b      	movlt	r3, r1
 80268b0:	1a99      	subs	r1, r3, r2
 80268b2:	b085      	sub	sp, #20
 80268b4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80268b8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80268bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80268be:	bfa4      	itt	ge
 80268c0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80268c4:	2200      	movge	r2, #0
 80268c6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80268ca:	9300      	str	r3, [sp, #0]
 80268cc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80268d0:	f102 0b01 	add.w	fp, r2, #1
 80268d4:	2c00      	cmp	r4, #0
 80268d6:	f040 80af 	bne.w	8026a38 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80268da:	4610      	mov	r0, r2
 80268dc:	9201      	str	r2, [sp, #4]
 80268de:	f7ea fd79 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80268e2:	a903      	add	r1, sp, #12
 80268e4:	9003      	str	r0, [sp, #12]
 80268e6:	4650      	mov	r0, sl
 80268e8:	f7ea fc3c 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268ec:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80268f0:	9a01      	ldr	r2, [sp, #4]
 80268f2:	4408      	add	r0, r1
 80268f4:	f8d9 1000 	ldr.w	r1, [r9]
 80268f8:	4281      	cmp	r1, r0
 80268fa:	bfc8      	it	gt
 80268fc:	f8c9 0000 	strgt.w	r0, [r9]
 8026900:	6839      	ldr	r1, [r7, #0]
 8026902:	4288      	cmp	r0, r1
 8026904:	bfc8      	it	gt
 8026906:	6038      	strgt	r0, [r7, #0]
 8026908:	4610      	mov	r0, r2
 802690a:	f7ff ffa9 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802690e:	a903      	add	r1, sp, #12
 8026910:	9003      	str	r0, [sp, #12]
 8026912:	4650      	mov	r0, sl
 8026914:	f7ea fc26 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026918:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802691c:	1a10      	subs	r0, r2, r0
 802691e:	6832      	ldr	r2, [r6, #0]
 8026920:	4282      	cmp	r2, r0
 8026922:	bfc8      	it	gt
 8026924:	6030      	strgt	r0, [r6, #0]
 8026926:	682a      	ldr	r2, [r5, #0]
 8026928:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802692c:	4290      	cmp	r0, r2
 802692e:	fb9b f2f1 	sdiv	r2, fp, r1
 8026932:	fb01 b212 	mls	r2, r1, r2, fp
 8026936:	eba1 0202 	sub.w	r2, r1, r2
 802693a:	bfc8      	it	gt
 802693c:	6028      	strgt	r0, [r5, #0]
 802693e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026942:	fb01 2210 	mls	r2, r1, r0, r2
 8026946:	4493      	add	fp, r2
 8026948:	9b00      	ldr	r3, [sp, #0]
 802694a:	455b      	cmp	r3, fp
 802694c:	db2a      	blt.n	80269a4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802694e:	4658      	mov	r0, fp
 8026950:	f7ea fd40 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026954:	a903      	add	r1, sp, #12
 8026956:	9003      	str	r0, [sp, #12]
 8026958:	4650      	mov	r0, sl
 802695a:	f7ea fc03 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802695e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026962:	4410      	add	r0, r2
 8026964:	f8d9 2000 	ldr.w	r2, [r9]
 8026968:	4282      	cmp	r2, r0
 802696a:	bfc8      	it	gt
 802696c:	f8c9 0000 	strgt.w	r0, [r9]
 8026970:	683a      	ldr	r2, [r7, #0]
 8026972:	4290      	cmp	r0, r2
 8026974:	bfc8      	it	gt
 8026976:	6038      	strgt	r0, [r7, #0]
 8026978:	4658      	mov	r0, fp
 802697a:	f7ff ff71 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802697e:	a903      	add	r1, sp, #12
 8026980:	9003      	str	r0, [sp, #12]
 8026982:	4650      	mov	r0, sl
 8026984:	f7ea fbee 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026988:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802698c:	1a10      	subs	r0, r2, r0
 802698e:	6832      	ldr	r2, [r6, #0]
 8026990:	4282      	cmp	r2, r0
 8026992:	bfc8      	it	gt
 8026994:	6030      	strgt	r0, [r6, #0]
 8026996:	682a      	ldr	r2, [r5, #0]
 8026998:	4290      	cmp	r0, r2
 802699a:	bfc8      	it	gt
 802699c:	6028      	strgt	r0, [r5, #0]
 802699e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80269a2:	e7d1      	b.n	8026948 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80269a4:	9b00      	ldr	r3, [sp, #0]
 80269a6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80269aa:	455b      	cmp	r3, fp
 80269ac:	dd27      	ble.n	80269fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80269ae:	4618      	mov	r0, r3
 80269b0:	f7ea fd10 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80269b4:	a903      	add	r1, sp, #12
 80269b6:	9003      	str	r0, [sp, #12]
 80269b8:	4650      	mov	r0, sl
 80269ba:	f7ea fbd3 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269be:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80269c2:	4410      	add	r0, r2
 80269c4:	f8d9 2000 	ldr.w	r2, [r9]
 80269c8:	4282      	cmp	r2, r0
 80269ca:	bfc8      	it	gt
 80269cc:	f8c9 0000 	strgt.w	r0, [r9]
 80269d0:	683a      	ldr	r2, [r7, #0]
 80269d2:	4290      	cmp	r0, r2
 80269d4:	bfc8      	it	gt
 80269d6:	6038      	strgt	r0, [r7, #0]
 80269d8:	9800      	ldr	r0, [sp, #0]
 80269da:	f7ff ff41 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269de:	a903      	add	r1, sp, #12
 80269e0:	9003      	str	r0, [sp, #12]
 80269e2:	4650      	mov	r0, sl
 80269e4:	f7ea fbbe 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269e8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80269ec:	1a10      	subs	r0, r2, r0
 80269ee:	6832      	ldr	r2, [r6, #0]
 80269f0:	4282      	cmp	r2, r0
 80269f2:	bfc8      	it	gt
 80269f4:	6030      	strgt	r0, [r6, #0]
 80269f6:	682a      	ldr	r2, [r5, #0]
 80269f8:	4290      	cmp	r0, r2
 80269fa:	bfc8      	it	gt
 80269fc:	6028      	strgt	r0, [r5, #0]
 80269fe:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026a02:	f8d9 1000 	ldr.w	r1, [r9]
 8026a06:	4291      	cmp	r1, r2
 8026a08:	bfc8      	it	gt
 8026a0a:	f8c9 2000 	strgt.w	r2, [r9]
 8026a0e:	683a      	ldr	r2, [r7, #0]
 8026a10:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8026a14:	429a      	cmp	r2, r3
 8026a16:	bfb8      	it	lt
 8026a18:	603b      	strlt	r3, [r7, #0]
 8026a1a:	6832      	ldr	r2, [r6, #0]
 8026a1c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026a20:	429a      	cmp	r2, r3
 8026a22:	bfc8      	it	gt
 8026a24:	6033      	strgt	r3, [r6, #0]
 8026a26:	682a      	ldr	r2, [r5, #0]
 8026a28:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026a2c:	429a      	cmp	r2, r3
 8026a2e:	da00      	bge.n	8026a32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026a30:	602b      	str	r3, [r5, #0]
 8026a32:	b005      	add	sp, #20
 8026a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026a38:	2002      	movs	r0, #2
 8026a3a:	3401      	adds	r4, #1
 8026a3c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026a40:	4610      	mov	r0, r2
 8026a42:	9201      	str	r2, [sp, #4]
 8026a44:	f7ea fcc6 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a48:	a903      	add	r1, sp, #12
 8026a4a:	9003      	str	r0, [sp, #12]
 8026a4c:	4650      	mov	r0, sl
 8026a4e:	f7ea fb89 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a52:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026a56:	9a01      	ldr	r2, [sp, #4]
 8026a58:	4408      	add	r0, r1
 8026a5a:	f8d9 1000 	ldr.w	r1, [r9]
 8026a5e:	1b03      	subs	r3, r0, r4
 8026a60:	4299      	cmp	r1, r3
 8026a62:	bfc8      	it	gt
 8026a64:	f8c9 3000 	strgt.w	r3, [r9]
 8026a68:	6839      	ldr	r1, [r7, #0]
 8026a6a:	428b      	cmp	r3, r1
 8026a6c:	bfc8      	it	gt
 8026a6e:	603b      	strgt	r3, [r7, #0]
 8026a70:	f8d9 1000 	ldr.w	r1, [r9]
 8026a74:	4420      	add	r0, r4
 8026a76:	4281      	cmp	r1, r0
 8026a78:	bfc8      	it	gt
 8026a7a:	f8c9 0000 	strgt.w	r0, [r9]
 8026a7e:	6839      	ldr	r1, [r7, #0]
 8026a80:	4288      	cmp	r0, r1
 8026a82:	bfc8      	it	gt
 8026a84:	6038      	strgt	r0, [r7, #0]
 8026a86:	4610      	mov	r0, r2
 8026a88:	f7ff feea 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a8c:	a903      	add	r1, sp, #12
 8026a8e:	9003      	str	r0, [sp, #12]
 8026a90:	4650      	mov	r0, sl
 8026a92:	f7ea fb67 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a96:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026a9a:	1a10      	subs	r0, r2, r0
 8026a9c:	6832      	ldr	r2, [r6, #0]
 8026a9e:	1b01      	subs	r1, r0, r4
 8026aa0:	428a      	cmp	r2, r1
 8026aa2:	bfc8      	it	gt
 8026aa4:	6031      	strgt	r1, [r6, #0]
 8026aa6:	682a      	ldr	r2, [r5, #0]
 8026aa8:	4291      	cmp	r1, r2
 8026aaa:	bfc8      	it	gt
 8026aac:	6029      	strgt	r1, [r5, #0]
 8026aae:	6832      	ldr	r2, [r6, #0]
 8026ab0:	4420      	add	r0, r4
 8026ab2:	4282      	cmp	r2, r0
 8026ab4:	bfc8      	it	gt
 8026ab6:	6030      	strgt	r0, [r6, #0]
 8026ab8:	682a      	ldr	r2, [r5, #0]
 8026aba:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026abe:	4290      	cmp	r0, r2
 8026ac0:	fb9b f2f1 	sdiv	r2, fp, r1
 8026ac4:	fb01 b212 	mls	r2, r1, r2, fp
 8026ac8:	eba1 0202 	sub.w	r2, r1, r2
 8026acc:	bfc8      	it	gt
 8026ace:	6028      	strgt	r0, [r5, #0]
 8026ad0:	fb92 f0f1 	sdiv	r0, r2, r1
 8026ad4:	fb01 2210 	mls	r2, r1, r0, r2
 8026ad8:	4493      	add	fp, r2
 8026ada:	9b00      	ldr	r3, [sp, #0]
 8026adc:	455b      	cmp	r3, fp
 8026ade:	db40      	blt.n	8026b62 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026ae0:	4658      	mov	r0, fp
 8026ae2:	f7ea fc77 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ae6:	a903      	add	r1, sp, #12
 8026ae8:	9003      	str	r0, [sp, #12]
 8026aea:	4650      	mov	r0, sl
 8026aec:	f7ea fb3a 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026af0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026af4:	4410      	add	r0, r2
 8026af6:	f8d9 2000 	ldr.w	r2, [r9]
 8026afa:	1b01      	subs	r1, r0, r4
 8026afc:	428a      	cmp	r2, r1
 8026afe:	bfc8      	it	gt
 8026b00:	f8c9 1000 	strgt.w	r1, [r9]
 8026b04:	683a      	ldr	r2, [r7, #0]
 8026b06:	4291      	cmp	r1, r2
 8026b08:	bfc8      	it	gt
 8026b0a:	6039      	strgt	r1, [r7, #0]
 8026b0c:	f8d9 2000 	ldr.w	r2, [r9]
 8026b10:	4420      	add	r0, r4
 8026b12:	4282      	cmp	r2, r0
 8026b14:	bfc8      	it	gt
 8026b16:	f8c9 0000 	strgt.w	r0, [r9]
 8026b1a:	683a      	ldr	r2, [r7, #0]
 8026b1c:	4290      	cmp	r0, r2
 8026b1e:	bfc8      	it	gt
 8026b20:	6038      	strgt	r0, [r7, #0]
 8026b22:	4658      	mov	r0, fp
 8026b24:	f7ff fe9c 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b28:	a903      	add	r1, sp, #12
 8026b2a:	9003      	str	r0, [sp, #12]
 8026b2c:	4650      	mov	r0, sl
 8026b2e:	f7ea fb19 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b32:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026b36:	1a10      	subs	r0, r2, r0
 8026b38:	6832      	ldr	r2, [r6, #0]
 8026b3a:	1b01      	subs	r1, r0, r4
 8026b3c:	428a      	cmp	r2, r1
 8026b3e:	bfc8      	it	gt
 8026b40:	6031      	strgt	r1, [r6, #0]
 8026b42:	682a      	ldr	r2, [r5, #0]
 8026b44:	4291      	cmp	r1, r2
 8026b46:	bfc8      	it	gt
 8026b48:	6029      	strgt	r1, [r5, #0]
 8026b4a:	6832      	ldr	r2, [r6, #0]
 8026b4c:	4420      	add	r0, r4
 8026b4e:	4282      	cmp	r2, r0
 8026b50:	bfc8      	it	gt
 8026b52:	6030      	strgt	r0, [r6, #0]
 8026b54:	682a      	ldr	r2, [r5, #0]
 8026b56:	4290      	cmp	r0, r2
 8026b58:	bfc8      	it	gt
 8026b5a:	6028      	strgt	r0, [r5, #0]
 8026b5c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026b60:	e7bb      	b.n	8026ada <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026b62:	9b00      	ldr	r3, [sp, #0]
 8026b64:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026b68:	455b      	cmp	r3, fp
 8026b6a:	f77f af62 	ble.w	8026a32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026b6e:	4618      	mov	r0, r3
 8026b70:	f7ea fc30 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b74:	a903      	add	r1, sp, #12
 8026b76:	9003      	str	r0, [sp, #12]
 8026b78:	4650      	mov	r0, sl
 8026b7a:	f7ea faf3 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b7e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026b82:	4410      	add	r0, r2
 8026b84:	f8d9 2000 	ldr.w	r2, [r9]
 8026b88:	1b01      	subs	r1, r0, r4
 8026b8a:	428a      	cmp	r2, r1
 8026b8c:	bfc8      	it	gt
 8026b8e:	f8c9 1000 	strgt.w	r1, [r9]
 8026b92:	683a      	ldr	r2, [r7, #0]
 8026b94:	4291      	cmp	r1, r2
 8026b96:	bfc8      	it	gt
 8026b98:	6039      	strgt	r1, [r7, #0]
 8026b9a:	f8d9 2000 	ldr.w	r2, [r9]
 8026b9e:	4420      	add	r0, r4
 8026ba0:	4282      	cmp	r2, r0
 8026ba2:	bfc8      	it	gt
 8026ba4:	f8c9 0000 	strgt.w	r0, [r9]
 8026ba8:	683b      	ldr	r3, [r7, #0]
 8026baa:	4298      	cmp	r0, r3
 8026bac:	bfc8      	it	gt
 8026bae:	6038      	strgt	r0, [r7, #0]
 8026bb0:	9800      	ldr	r0, [sp, #0]
 8026bb2:	f7ff fe55 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026bb6:	a903      	add	r1, sp, #12
 8026bb8:	9003      	str	r0, [sp, #12]
 8026bba:	4650      	mov	r0, sl
 8026bbc:	f7ea fad2 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bc0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026bc4:	6832      	ldr	r2, [r6, #0]
 8026bc6:	1a18      	subs	r0, r3, r0
 8026bc8:	1b03      	subs	r3, r0, r4
 8026bca:	429a      	cmp	r2, r3
 8026bcc:	bfc8      	it	gt
 8026bce:	6033      	strgt	r3, [r6, #0]
 8026bd0:	682a      	ldr	r2, [r5, #0]
 8026bd2:	4293      	cmp	r3, r2
 8026bd4:	bfc8      	it	gt
 8026bd6:	602b      	strgt	r3, [r5, #0]
 8026bd8:	6833      	ldr	r3, [r6, #0]
 8026bda:	4404      	add	r4, r0
 8026bdc:	42a3      	cmp	r3, r4
 8026bde:	bfc8      	it	gt
 8026be0:	6034      	strgt	r4, [r6, #0]
 8026be2:	682b      	ldr	r3, [r5, #0]
 8026be4:	429c      	cmp	r4, r3
 8026be6:	bfc8      	it	gt
 8026be8:	602c      	strgt	r4, [r5, #0]
 8026bea:	e722      	b.n	8026a32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026bec <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026bec:	b530      	push	{r4, r5, lr}
 8026bee:	4604      	mov	r4, r0
 8026bf0:	4608      	mov	r0, r1
 8026bf2:	4611      	mov	r1, r2
 8026bf4:	461a      	mov	r2, r3
 8026bf6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026bfa:	b089      	sub	sp, #36	; 0x24
 8026bfc:	015b      	lsls	r3, r3, #5
 8026bfe:	9304      	str	r3, [sp, #16]
 8026c00:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026c04:	2500      	movs	r5, #0
 8026c06:	015b      	lsls	r3, r3, #5
 8026c08:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026c0c:	ab07      	add	r3, sp, #28
 8026c0e:	9302      	str	r3, [sp, #8]
 8026c10:	ab06      	add	r3, sp, #24
 8026c12:	9301      	str	r3, [sp, #4]
 8026c14:	ab05      	add	r3, sp, #20
 8026c16:	9300      	str	r3, [sp, #0]
 8026c18:	ab04      	add	r3, sp, #16
 8026c1a:	9505      	str	r5, [sp, #20]
 8026c1c:	f7ff fe3e 	bl	802689c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026c20:	2520      	movs	r5, #32
 8026c22:	9a04      	ldr	r2, [sp, #16]
 8026c24:	9805      	ldr	r0, [sp, #20]
 8026c26:	fb92 f2f5 	sdiv	r2, r2, r5
 8026c2a:	fb90 f0f5 	sdiv	r0, r0, r5
 8026c2e:	b292      	uxth	r2, r2
 8026c30:	3002      	adds	r0, #2
 8026c32:	1a80      	subs	r0, r0, r2
 8026c34:	9b06      	ldr	r3, [sp, #24]
 8026c36:	9907      	ldr	r1, [sp, #28]
 8026c38:	fb93 f3f5 	sdiv	r3, r3, r5
 8026c3c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026c40:	b29b      	uxth	r3, r3
 8026c42:	3102      	adds	r1, #2
 8026c44:	1ac9      	subs	r1, r1, r3
 8026c46:	3a01      	subs	r2, #1
 8026c48:	3b01      	subs	r3, #1
 8026c4a:	80a0      	strh	r0, [r4, #4]
 8026c4c:	4620      	mov	r0, r4
 8026c4e:	8022      	strh	r2, [r4, #0]
 8026c50:	8063      	strh	r3, [r4, #2]
 8026c52:	80e1      	strh	r1, [r4, #6]
 8026c54:	b009      	add	sp, #36	; 0x24
 8026c56:	bd30      	pop	{r4, r5, pc}

08026c58 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026c58:	b510      	push	{r4, lr}
 8026c5a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026c5e:	4604      	mov	r4, r0
 8026c60:	f7ff ffc4 	bl	8026bec <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026c64:	4620      	mov	r0, r4
 8026c66:	bd10      	pop	{r4, pc}

08026c68 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c6a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026c6e:	4606      	mov	r6, r0
 8026c70:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026c74:	6813      	ldr	r3, [r2, #0]
 8026c76:	42a5      	cmp	r5, r4
 8026c78:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026c7c:	da2b      	bge.n	8026cd6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026c7e:	42a3      	cmp	r3, r4
 8026c80:	dd14      	ble.n	8026cac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026c82:	b168      	cbz	r0, 8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026c84:	4267      	negs	r7, r4
 8026c86:	fb97 f2f0 	sdiv	r2, r7, r0
 8026c8a:	fb00 7212 	mls	r2, r0, r2, r7
 8026c8e:	1a82      	subs	r2, r0, r2
 8026c90:	fb92 f7f0 	sdiv	r7, r2, r0
 8026c94:	fb00 2017 	mls	r0, r0, r7, r2
 8026c98:	1a24      	subs	r4, r4, r0
 8026c9a:	42ac      	cmp	r4, r5
 8026c9c:	bfb8      	it	lt
 8026c9e:	462c      	movlt	r4, r5
 8026ca0:	4630      	mov	r0, r6
 8026ca2:	4622      	mov	r2, r4
 8026ca4:	f7ff ffa2 	bl	8026bec <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026ca8:	4630      	mov	r0, r6
 8026caa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026cac:	42ab      	cmp	r3, r5
 8026cae:	dd0e      	ble.n	8026cce <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026cb0:	b168      	cbz	r0, 8026cce <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026cb2:	425f      	negs	r7, r3
 8026cb4:	fb97 f2f0 	sdiv	r2, r7, r0
 8026cb8:	fb00 7212 	mls	r2, r0, r2, r7
 8026cbc:	1a82      	subs	r2, r0, r2
 8026cbe:	fb92 f7f0 	sdiv	r7, r2, r0
 8026cc2:	fb00 2017 	mls	r0, r0, r7, r2
 8026cc6:	1a1b      	subs	r3, r3, r0
 8026cc8:	42ab      	cmp	r3, r5
 8026cca:	bfb8      	it	lt
 8026ccc:	462b      	movlt	r3, r5
 8026cce:	4622      	mov	r2, r4
 8026cd0:	461c      	mov	r4, r3
 8026cd2:	4613      	mov	r3, r2
 8026cd4:	e7e4      	b.n	8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026cd6:	42a3      	cmp	r3, r4
 8026cd8:	da10      	bge.n	8026cfc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026cda:	b148      	cbz	r0, 8026cf0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026cdc:	fb94 f2f0 	sdiv	r2, r4, r0
 8026ce0:	fb00 4212 	mls	r2, r0, r2, r4
 8026ce4:	1a82      	subs	r2, r0, r2
 8026ce6:	fb92 f7f0 	sdiv	r7, r2, r0
 8026cea:	fb00 2017 	mls	r0, r0, r7, r2
 8026cee:	4404      	add	r4, r0
 8026cf0:	42a5      	cmp	r5, r4
 8026cf2:	bfa8      	it	ge
 8026cf4:	4625      	movge	r5, r4
 8026cf6:	461c      	mov	r4, r3
 8026cf8:	462b      	mov	r3, r5
 8026cfa:	e7d1      	b.n	8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026cfc:	42ab      	cmp	r3, r5
 8026cfe:	dacf      	bge.n	8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026d00:	2800      	cmp	r0, #0
 8026d02:	d0cd      	beq.n	8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026d04:	fb93 f2f0 	sdiv	r2, r3, r0
 8026d08:	fb00 3212 	mls	r2, r0, r2, r3
 8026d0c:	1a82      	subs	r2, r0, r2
 8026d0e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026d12:	fb00 2017 	mls	r0, r0, r7, r2
 8026d16:	4403      	add	r3, r0
 8026d18:	42ab      	cmp	r3, r5
 8026d1a:	bfa8      	it	ge
 8026d1c:	462b      	movge	r3, r5
 8026d1e:	e7bf      	b.n	8026ca0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026d20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d24:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026d28:	42ae      	cmp	r6, r5
 8026d2a:	bfa2      	ittt	ge
 8026d2c:	4633      	movge	r3, r6
 8026d2e:	462e      	movge	r6, r5
 8026d30:	461d      	movge	r5, r3
 8026d32:	1bab      	subs	r3, r5, r6
 8026d34:	468b      	mov	fp, r1
 8026d36:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026d38:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026d3c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026d40:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026d44:	f04f 0220 	mov.w	r2, #32
 8026d48:	b0ab      	sub	sp, #172	; 0xac
 8026d4a:	4604      	mov	r4, r0
 8026d4c:	bfa4      	itt	ge
 8026d4e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026d52:	2600      	movge	r6, #0
 8026d54:	fb99 f9f2 	sdiv	r9, r9, r2
 8026d58:	fb9a faf2 	sdiv	sl, sl, r2
 8026d5c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026d5e:	2900      	cmp	r1, #0
 8026d60:	f000 80f5 	beq.w	8026f4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026d64:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026d68:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026d6c:	eba9 0700 	sub.w	r7, r9, r0
 8026d70:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026d74:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026d78:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026d7c:	ebaa 0802 	sub.w	r8, sl, r2
 8026d80:	4407      	add	r7, r0
 8026d82:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026d86:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026d8a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026d8e:	b23f      	sxth	r7, r7
 8026d90:	4490      	add	r8, r2
 8026d92:	eba9 0707 	sub.w	r7, r9, r7
 8026d96:	fa0f f888 	sxth.w	r8, r8
 8026d9a:	ebaa 0808 	sub.w	r8, sl, r8
 8026d9e:	2f00      	cmp	r7, #0
 8026da0:	bfb8      	it	lt
 8026da2:	427f      	neglt	r7, r7
 8026da4:	f1b8 0f00 	cmp.w	r8, #0
 8026da8:	bfb8      	it	lt
 8026daa:	f1c8 0800 	rsblt	r8, r8, #0
 8026dae:	45bc      	cmp	ip, r7
 8026db0:	bfcc      	ite	gt
 8026db2:	f10c 0701 	addgt.w	r7, ip, #1
 8026db6:	3701      	addle	r7, #1
 8026db8:	4540      	cmp	r0, r8
 8026dba:	bfc8      	it	gt
 8026dbc:	f100 0801 	addgt.w	r8, r0, #1
 8026dc0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8026dc4:	f100 0001 	add.w	r0, r0, #1
 8026dc8:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026dcc:	f04f 0202 	mov.w	r2, #2
 8026dd0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8026dd4:	fb91 f1f2 	sdiv	r1, r1, r2
 8026dd8:	eba3 0301 	sub.w	r3, r3, r1
 8026ddc:	bfd8      	it	le
 8026dde:	f108 0801 	addle.w	r8, r8, #1
 8026de2:	9201      	str	r2, [sp, #4]
 8026de4:	930d      	str	r3, [sp, #52]	; 0x34
 8026de6:	f7ea fad5 	bl	8011394 <_ZN8touchgfx7CWRUtil4sineEi>
 8026dea:	a92a      	add	r1, sp, #168	; 0xa8
 8026dec:	fb08 f808 	mul.w	r8, r8, r8
 8026df0:	f841 0d70 	str.w	r0, [r1, #-112]!
 8026df4:	a80d      	add	r0, sp, #52	; 0x34
 8026df6:	f7ea f9b5 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026dfa:	fb07 8707 	mla	r7, r7, r7, r8
 8026dfe:	f04f 0c20 	mov.w	ip, #32
 8026e02:	fb90 f0fc 	sdiv	r0, r0, ip
 8026e06:	4340      	muls	r0, r0
 8026e08:	4287      	cmp	r7, r0
 8026e0a:	9a01      	ldr	r2, [sp, #4]
 8026e0c:	da04      	bge.n	8026e18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026e0e:	2401      	movs	r4, #1
 8026e10:	4620      	mov	r0, r4
 8026e12:	b02b      	add	sp, #172	; 0xac
 8026e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e18:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026e1a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026e1c:	fb91 f3f2 	sdiv	r3, r1, r2
 8026e20:	4403      	add	r3, r0
 8026e22:	fb93 f3fc 	sdiv	r3, r3, ip
 8026e26:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026e2a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026e2e:	440a      	add	r2, r1
 8026e30:	b212      	sxth	r2, r2
 8026e32:	454a      	cmp	r2, r9
 8026e34:	bfa8      	it	ge
 8026e36:	464a      	movge	r2, r9
 8026e38:	428a      	cmp	r2, r1
 8026e3a:	bfac      	ite	ge
 8026e3c:	eba9 0902 	subge.w	r9, r9, r2
 8026e40:	eba9 0901 	sublt.w	r9, r9, r1
 8026e44:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026e48:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026e4c:	440a      	add	r2, r1
 8026e4e:	b212      	sxth	r2, r2
 8026e50:	4552      	cmp	r2, sl
 8026e52:	bfa8      	it	ge
 8026e54:	4652      	movge	r2, sl
 8026e56:	428a      	cmp	r2, r1
 8026e58:	bfac      	ite	ge
 8026e5a:	ebaa 0a02 	subge.w	sl, sl, r2
 8026e5e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8026e62:	3301      	adds	r3, #1
 8026e64:	fb0a fa0a 	mul.w	sl, sl, sl
 8026e68:	fb09 a909 	mla	r9, r9, r9, sl
 8026e6c:	435b      	muls	r3, r3
 8026e6e:	4599      	cmp	r9, r3
 8026e70:	dccd      	bgt.n	8026e0e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8026e72:	465a      	mov	r2, fp
 8026e74:	4621      	mov	r1, r4
 8026e76:	a80e      	add	r0, sp, #56	; 0x38
 8026e78:	f7ff faae 	bl	80263d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8026e7c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8026e7e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026e80:	9209      	str	r2, [sp, #36]	; 0x24
 8026e82:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8026e86:	930a      	str	r3, [sp, #40]	; 0x28
 8026e88:	dd07      	ble.n	8026e9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8026e8a:	2102      	movs	r1, #2
 8026e8c:	fb93 f3f1 	sdiv	r3, r3, r1
 8026e90:	4413      	add	r3, r2
 8026e92:	930a      	str	r3, [sp, #40]	; 0x28
 8026e94:	fb93 f3f1 	sdiv	r3, r3, r1
 8026e98:	9309      	str	r3, [sp, #36]	; 0x24
 8026e9a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026e9e:	4630      	mov	r0, r6
 8026ea0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026ea4:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ea6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8026eaa:	f7ea fa93 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026eae:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8026eb2:	f04f 0a02 	mov.w	sl, #2
 8026eb6:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026eba:	a80b      	add	r0, sp, #44	; 0x2c
 8026ebc:	4649      	mov	r1, r9
 8026ebe:	f7ea f951 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ec2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ec4:	fb90 f0fa 	sdiv	r0, r0, sl
 8026ec8:	eb00 0b03 	add.w	fp, r0, r3
 8026ecc:	4630      	mov	r0, r6
 8026ece:	f7ff fcc7 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ed2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8026ed6:	017f      	lsls	r7, r7, #5
 8026ed8:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026edc:	a80b      	add	r0, sp, #44	; 0x2c
 8026ede:	4641      	mov	r1, r8
 8026ee0:	f7ea f940 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ee4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026ee6:	fb90 f0fa 	sdiv	r0, r0, sl
 8026eea:	4659      	mov	r1, fp
 8026eec:	1a12      	subs	r2, r2, r0
 8026eee:	a80e      	add	r0, sp, #56	; 0x38
 8026ef0:	f7ff fbf2 	bl	80266d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8026ef4:	f106 0a20 	add.w	sl, r6, #32
 8026ef8:	bb67      	cbnz	r7, 8026f54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026efa:	46b3      	mov	fp, r6
 8026efc:	45aa      	cmp	sl, r5
 8026efe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026f00:	dc33      	bgt.n	8026f6a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8026f02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026f04:	4650      	mov	r0, sl
 8026f06:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026f0a:	920b      	str	r2, [sp, #44]	; 0x2c
 8026f0c:	f7ea fa62 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026f10:	4641      	mov	r1, r8
 8026f12:	900c      	str	r0, [sp, #48]	; 0x30
 8026f14:	a80b      	add	r0, sp, #44	; 0x2c
 8026f16:	f7ea f925 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f1a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026f1c:	2302      	movs	r3, #2
 8026f1e:	fb90 f0f3 	sdiv	r0, r0, r3
 8026f22:	eb00 0b02 	add.w	fp, r0, r2
 8026f26:	4650      	mov	r0, sl
 8026f28:	f7ff fc9a 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026f2c:	4649      	mov	r1, r9
 8026f2e:	900d      	str	r0, [sp, #52]	; 0x34
 8026f30:	a80b      	add	r0, sp, #44	; 0x2c
 8026f32:	f7ea f917 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f36:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026f38:	2302      	movs	r3, #2
 8026f3a:	4659      	mov	r1, fp
 8026f3c:	fb90 f0f3 	sdiv	r0, r0, r3
 8026f40:	1a12      	subs	r2, r2, r0
 8026f42:	a80e      	add	r0, sp, #56	; 0x38
 8026f44:	46d3      	mov	fp, sl
 8026f46:	f7ff fc14 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026f4a:	44ba      	add	sl, r7
 8026f4c:	e7d6      	b.n	8026efc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026f4e:	fb93 f3f2 	sdiv	r3, r3, r2
 8026f52:	e768      	b.n	8026e26 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8026f54:	fb9a f2f7 	sdiv	r2, sl, r7
 8026f58:	fb07 a212 	mls	r2, r7, r2, sl
 8026f5c:	1aba      	subs	r2, r7, r2
 8026f5e:	fb92 f1f7 	sdiv	r1, r2, r7
 8026f62:	fb07 2211 	mls	r2, r7, r1, r2
 8026f66:	4492      	add	sl, r2
 8026f68:	e7c7      	b.n	8026efa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8026f6a:	45ab      	cmp	fp, r5
 8026f6c:	da23      	bge.n	8026fb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8026f6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f70:	4628      	mov	r0, r5
 8026f72:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8026f76:	920b      	str	r2, [sp, #44]	; 0x2c
 8026f78:	f7ea fa2c 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026f7c:	4641      	mov	r1, r8
 8026f7e:	900c      	str	r0, [sp, #48]	; 0x30
 8026f80:	a80b      	add	r0, sp, #44	; 0x2c
 8026f82:	f7ea f8ef 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026f88:	f04f 0a02 	mov.w	sl, #2
 8026f8c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026f90:	4403      	add	r3, r0
 8026f92:	4628      	mov	r0, r5
 8026f94:	9301      	str	r3, [sp, #4]
 8026f96:	f7ff fc63 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026f9a:	4649      	mov	r1, r9
 8026f9c:	900d      	str	r0, [sp, #52]	; 0x34
 8026f9e:	a80b      	add	r0, sp, #44	; 0x2c
 8026fa0:	f7ea f8e0 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026fa4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026fa6:	9b01      	ldr	r3, [sp, #4]
 8026fa8:	fb90 f0fa 	sdiv	r0, r0, sl
 8026fac:	4619      	mov	r1, r3
 8026fae:	1a12      	subs	r2, r2, r0
 8026fb0:	a80e      	add	r0, sp, #56	; 0x38
 8026fb2:	f7ff fbde 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026fb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026fb8:	b99b      	cbnz	r3, 8026fe2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026fba:	1bad      	subs	r5, r5, r6
 8026fbc:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026fc0:	da04      	bge.n	8026fcc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026fc2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8026fc6:	a80e      	add	r0, sp, #56	; 0x38
 8026fc8:	f7ff fbd3 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026fcc:	21ff      	movs	r1, #255	; 0xff
 8026fce:	a80e      	add	r0, sp, #56	; 0x38
 8026fd0:	f7ff fabe 	bl	8026550 <_ZN8touchgfx6Canvas6renderEh>
 8026fd4:	4604      	mov	r4, r0
 8026fd6:	4b8a      	ldr	r3, [pc, #552]	; (8027200 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026fd8:	930e      	str	r3, [sp, #56]	; 0x38
 8026fda:	a816      	add	r0, sp, #88	; 0x58
 8026fdc:	f7eb fd2e 	bl	8012a3c <_ZN8touchgfx7OutlineD1Ev>
 8026fe0:	e716      	b.n	8026e10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8026fe2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8026fe6:	429a      	cmp	r2, r3
 8026fe8:	f0c0 8107 	bcc.w	80271fa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026fec:	1bab      	subs	r3, r5, r6
 8026fee:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8026ff2:	9301      	str	r3, [sp, #4]
 8026ff4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026ff8:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026ffc:	da43      	bge.n	8027086 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026ffe:	4628      	mov	r0, r5
 8027000:	f7ea f9e8 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027004:	4649      	mov	r1, r9
 8027006:	900d      	str	r0, [sp, #52]	; 0x34
 8027008:	a809      	add	r0, sp, #36	; 0x24
 802700a:	f7ea f8ab 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802700e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027010:	18c3      	adds	r3, r0, r3
 8027012:	4628      	mov	r0, r5
 8027014:	9303      	str	r3, [sp, #12]
 8027016:	f7ff fc23 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802701a:	4649      	mov	r1, r9
 802701c:	900d      	str	r0, [sp, #52]	; 0x34
 802701e:	a809      	add	r0, sp, #36	; 0x24
 8027020:	f7ea f8a0 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027024:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027026:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802702a:	1a1b      	subs	r3, r3, r0
 802702c:	9302      	str	r3, [sp, #8]
 802702e:	9204      	str	r2, [sp, #16]
 8027030:	eb0a 0305 	add.w	r3, sl, r5
 8027034:	9a04      	ldr	r2, [sp, #16]
 8027036:	4293      	cmp	r3, r2
 8027038:	da25      	bge.n	8027086 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802703a:	4618      	mov	r0, r3
 802703c:	9306      	str	r3, [sp, #24]
 802703e:	f7ea f9c9 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027042:	4649      	mov	r1, r9
 8027044:	900d      	str	r0, [sp, #52]	; 0x34
 8027046:	a80a      	add	r0, sp, #40	; 0x28
 8027048:	f7ea f88c 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802704c:	9b03      	ldr	r3, [sp, #12]
 802704e:	2202      	movs	r2, #2
 8027050:	fb90 f0f2 	sdiv	r0, r0, r2
 8027054:	18c3      	adds	r3, r0, r3
 8027056:	9305      	str	r3, [sp, #20]
 8027058:	9b06      	ldr	r3, [sp, #24]
 802705a:	9207      	str	r2, [sp, #28]
 802705c:	4618      	mov	r0, r3
 802705e:	f7ff fbff 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027062:	a92a      	add	r1, sp, #168	; 0xa8
 8027064:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027068:	a80a      	add	r0, sp, #40	; 0x28
 802706a:	f7ea f87b 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802706e:	9b02      	ldr	r3, [sp, #8]
 8027070:	9a07      	ldr	r2, [sp, #28]
 8027072:	9905      	ldr	r1, [sp, #20]
 8027074:	fb90 f2f2 	sdiv	r2, r0, r2
 8027078:	a80e      	add	r0, sp, #56	; 0x38
 802707a:	1a9a      	subs	r2, r3, r2
 802707c:	f7ff fb79 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027080:	9b06      	ldr	r3, [sp, #24]
 8027082:	4453      	add	r3, sl
 8027084:	e7d6      	b.n	8027034 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027086:	45ab      	cmp	fp, r5
 8027088:	da25      	bge.n	80270d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802708a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802708e:	4628      	mov	r0, r5
 8027090:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027094:	930b      	str	r3, [sp, #44]	; 0x2c
 8027096:	f7ea f99d 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802709a:	4641      	mov	r1, r8
 802709c:	900c      	str	r0, [sp, #48]	; 0x30
 802709e:	a80b      	add	r0, sp, #44	; 0x2c
 80270a0:	f7ea f860 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80270a6:	2202      	movs	r2, #2
 80270a8:	fb90 f0f2 	sdiv	r0, r0, r2
 80270ac:	eb00 0903 	add.w	r9, r0, r3
 80270b0:	4628      	mov	r0, r5
 80270b2:	9202      	str	r2, [sp, #8]
 80270b4:	f7ff fbd4 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80270b8:	a92a      	add	r1, sp, #168	; 0xa8
 80270ba:	f841 0d74 	str.w	r0, [r1, #-116]!
 80270be:	a80b      	add	r0, sp, #44	; 0x2c
 80270c0:	f7ea f850 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80270c6:	9a02      	ldr	r2, [sp, #8]
 80270c8:	fb90 f2f2 	sdiv	r2, r0, r2
 80270cc:	4649      	mov	r1, r9
 80270ce:	1a9a      	subs	r2, r3, r2
 80270d0:	a80e      	add	r0, sp, #56	; 0x38
 80270d2:	f7ff fb4e 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80270d6:	46d9      	mov	r9, fp
 80270d8:	2502      	movs	r5, #2
 80270da:	45b1      	cmp	r9, r6
 80270dc:	db25      	blt.n	802712a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80270de:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80270e2:	4648      	mov	r0, r9
 80270e4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80270e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80270ea:	f7ea f973 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80270ee:	4641      	mov	r1, r8
 80270f0:	900c      	str	r0, [sp, #48]	; 0x30
 80270f2:	a80b      	add	r0, sp, #44	; 0x2c
 80270f4:	f7ea f836 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80270fa:	fb90 f0f5 	sdiv	r0, r0, r5
 80270fe:	eb00 0b03 	add.w	fp, r0, r3
 8027102:	4648      	mov	r0, r9
 8027104:	f7ff fbac 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027108:	a90d      	add	r1, sp, #52	; 0x34
 802710a:	900d      	str	r0, [sp, #52]	; 0x34
 802710c:	a80b      	add	r0, sp, #44	; 0x2c
 802710e:	f7ea f829 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027112:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027114:	fb90 f0f5 	sdiv	r0, r0, r5
 8027118:	4659      	mov	r1, fp
 802711a:	1a12      	subs	r2, r2, r0
 802711c:	a80e      	add	r0, sp, #56	; 0x38
 802711e:	46cb      	mov	fp, r9
 8027120:	f7ff fb27 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027124:	eba9 0907 	sub.w	r9, r9, r7
 8027128:	e7d7      	b.n	80270da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802712a:	455e      	cmp	r6, fp
 802712c:	da22      	bge.n	8027174 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802712e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027132:	4630      	mov	r0, r6
 8027134:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027138:	930b      	str	r3, [sp, #44]	; 0x2c
 802713a:	f7ea f94b 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802713e:	4641      	mov	r1, r8
 8027140:	900c      	str	r0, [sp, #48]	; 0x30
 8027142:	a80b      	add	r0, sp, #44	; 0x2c
 8027144:	f7ea f80e 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027148:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802714a:	2502      	movs	r5, #2
 802714c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027150:	4407      	add	r7, r0
 8027152:	4630      	mov	r0, r6
 8027154:	f7ff fb84 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027158:	a92a      	add	r1, sp, #168	; 0xa8
 802715a:	f841 0d74 	str.w	r0, [r1, #-116]!
 802715e:	a80b      	add	r0, sp, #44	; 0x2c
 8027160:	f7ea f800 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027164:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027166:	fb90 f0f5 	sdiv	r0, r0, r5
 802716a:	4639      	mov	r1, r7
 802716c:	1a12      	subs	r2, r2, r0
 802716e:	a80e      	add	r0, sp, #56	; 0x38
 8027170:	f7ff faff 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027174:	9b01      	ldr	r3, [sp, #4]
 8027176:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802717a:	f6bf af27 	bge.w	8026fcc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802717e:	4630      	mov	r0, r6
 8027180:	f7ea f928 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027184:	ad2a      	add	r5, sp, #168	; 0xa8
 8027186:	f04f 0b02 	mov.w	fp, #2
 802718a:	f845 0d74 	str.w	r0, [r5, #-116]!
 802718e:	a809      	add	r0, sp, #36	; 0x24
 8027190:	4629      	mov	r1, r5
 8027192:	f7e9 ffe7 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027196:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027198:	eb00 0903 	add.w	r9, r0, r3
 802719c:	4630      	mov	r0, r6
 802719e:	f7ff fb5f 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80271a2:	4629      	mov	r1, r5
 80271a4:	900d      	str	r0, [sp, #52]	; 0x34
 80271a6:	a809      	add	r0, sp, #36	; 0x24
 80271a8:	f7e9 ffdc 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80271ae:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80271b2:	eba3 0800 	sub.w	r8, r3, r0
 80271b6:	4454      	add	r4, sl
 80271b8:	42a6      	cmp	r6, r4
 80271ba:	f77f af07 	ble.w	8026fcc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80271be:	4620      	mov	r0, r4
 80271c0:	f7ea f908 	bl	80113d4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80271c4:	4629      	mov	r1, r5
 80271c6:	900d      	str	r0, [sp, #52]	; 0x34
 80271c8:	a80a      	add	r0, sp, #40	; 0x28
 80271ca:	f7e9 ffcb 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271ce:	fb90 f0fb 	sdiv	r0, r0, fp
 80271d2:	eb00 0709 	add.w	r7, r0, r9
 80271d6:	4620      	mov	r0, r4
 80271d8:	f7ff fb42 	bl	8026860 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80271dc:	a90c      	add	r1, sp, #48	; 0x30
 80271de:	900c      	str	r0, [sp, #48]	; 0x30
 80271e0:	a80a      	add	r0, sp, #40	; 0x28
 80271e2:	f7e9 ffbf 	bl	8011164 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271e6:	4639      	mov	r1, r7
 80271e8:	fb90 f2fb 	sdiv	r2, r0, fp
 80271ec:	a80e      	add	r0, sp, #56	; 0x38
 80271ee:	eba8 0202 	sub.w	r2, r8, r2
 80271f2:	f7ff fabe 	bl	8026772 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80271f6:	4454      	add	r4, sl
 80271f8:	e7de      	b.n	80271b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80271fa:	2400      	movs	r4, #0
 80271fc:	e6eb      	b.n	8026fd6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80271fe:	bf00      	nop
 8027200:	0802eac8 	.word	0x0802eac8

08027204 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027204:	b570      	push	{r4, r5, r6, lr}
 8027206:	790b      	ldrb	r3, [r1, #4]
 8027208:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802720c:	2b00      	cmp	r3, #0
 802720e:	bf0c      	ite	eq
 8027210:	2301      	moveq	r3, #1
 8027212:	2300      	movne	r3, #0
 8027214:	4604      	mov	r4, r0
 8027216:	460e      	mov	r6, r1
 8027218:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802721c:	d109      	bne.n	8027232 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802721e:	b14d      	cbz	r5, 8027234 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027220:	7933      	ldrb	r3, [r6, #4]
 8027222:	2b01      	cmp	r3, #1
 8027224:	d10c      	bne.n	8027240 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027226:	6823      	ldr	r3, [r4, #0]
 8027228:	4620      	mov	r0, r4
 802722a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802722c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027230:	4718      	bx	r3
 8027232:	b12d      	cbz	r5, 8027240 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027234:	6823      	ldr	r3, [r4, #0]
 8027236:	4620      	mov	r0, r4
 8027238:	695b      	ldr	r3, [r3, #20]
 802723a:	4798      	blx	r3
 802723c:	2d00      	cmp	r5, #0
 802723e:	d1ef      	bne.n	8027220 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027240:	bd70      	pop	{r4, r5, r6, pc}

08027242 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027242:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027246:	4770      	bx	lr

08027248 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027248:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802724c:	4770      	bx	lr

0802724e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802724e:	6802      	ldr	r2, [r0, #0]
 8027250:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027254:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027256:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802725a:	4710      	bx	r2

0802725c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802725c:	6802      	ldr	r2, [r0, #0]
 802725e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027262:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027264:	eef0 0a40 	vmov.f32	s1, s0
 8027268:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802726c:	4710      	bx	r2

0802726e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802726e:	6802      	ldr	r2, [r0, #0]
 8027270:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027274:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027276:	eeb0 1a40 	vmov.f32	s2, s0
 802727a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802727e:	4710      	bx	r2

08027280 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027280:	6802      	ldr	r2, [r0, #0]
 8027282:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027286:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027288:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802728c:	4710      	bx	r2

0802728e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802728e:	6802      	ldr	r2, [r0, #0]
 8027290:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027294:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027296:	eef0 0a40 	vmov.f32	s1, s0
 802729a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802729e:	4710      	bx	r2

080272a0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 80272a0:	6802      	ldr	r2, [r0, #0]
 80272a2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80272a6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80272a8:	eeb0 1a40 	vmov.f32	s2, s0
 80272ac:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80272b0:	4710      	bx	r2

080272b2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 80272b2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80272b6:	4770      	bx	lr

080272b8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 80272b8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 80272bc:	4770      	bx	lr

080272be <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 80272be:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 80272c2:	4770      	bx	lr

080272c4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80272c4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80272c8:	4770      	bx	lr

080272ca <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80272ca:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80272ce:	4770      	bx	lr

080272d0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80272d0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80272d4:	4770      	bx	lr

080272d6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80272d6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80272da:	4770      	bx	lr

080272dc <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80272dc:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80272e0:	4770      	bx	lr

080272e2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80272e2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80272e6:	4770      	bx	lr

080272e8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80272e8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80272ec:	4770      	bx	lr

080272ee <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80272ee:	ee07 2a90 	vmov	s15, r2
 80272f2:	6803      	ldr	r3, [r0, #0]
 80272f4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80272f8:	ee07 1a90 	vmov	s15, r1
 80272fc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027300:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027304:	4718      	bx	r3

08027306 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027306:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802730a:	4770      	bx	lr

0802730c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802730c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027310:	4770      	bx	lr

08027312 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027312:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027316:	4770      	bx	lr

08027318 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027318:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802731c:	4770      	bx	lr

0802731e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802731e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027322:	4770      	bx	lr

08027324 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027324:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027328:	4770      	bx	lr

0802732a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802732a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802732e:	4770      	bx	lr

08027330 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027330:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027334:	4770      	bx	lr

08027336 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027336:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802733a:	4770      	bx	lr

0802733c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802733c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027340:	4770      	bx	lr

08027342 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027342:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027346:	4770      	bx	lr

08027348 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027348:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802734c:	4770      	bx	lr

0802734e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802734e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027352:	4770      	bx	lr

08027354 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027354:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027358:	4770      	bx	lr

0802735a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802735a:	b510      	push	{r4, lr}
 802735c:	ed2d 8b04 	vpush	{d8-d9}
 8027360:	6803      	ldr	r3, [r0, #0]
 8027362:	4604      	mov	r4, r0
 8027364:	699b      	ldr	r3, [r3, #24]
 8027366:	eeb0 8a40 	vmov.f32	s16, s0
 802736a:	eef0 8a60 	vmov.f32	s17, s1
 802736e:	eeb0 9a41 	vmov.f32	s18, s2
 8027372:	4798      	blx	r3
 8027374:	6823      	ldr	r3, [r4, #0]
 8027376:	4620      	mov	r0, r4
 8027378:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802737a:	eeb0 1a49 	vmov.f32	s2, s18
 802737e:	eef0 0a68 	vmov.f32	s1, s17
 8027382:	eeb0 0a48 	vmov.f32	s0, s16
 8027386:	4798      	blx	r3
 8027388:	ecbd 8b04 	vpop	{d8-d9}
 802738c:	6823      	ldr	r3, [r4, #0]
 802738e:	4620      	mov	r0, r4
 8027390:	699b      	ldr	r3, [r3, #24]
 8027392:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027396:	4718      	bx	r3

08027398 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027398:	b510      	push	{r4, lr}
 802739a:	ed2d 8b02 	vpush	{d8}
 802739e:	6803      	ldr	r3, [r0, #0]
 80273a0:	4604      	mov	r4, r0
 80273a2:	699b      	ldr	r3, [r3, #24]
 80273a4:	eeb0 8a40 	vmov.f32	s16, s0
 80273a8:	4798      	blx	r3
 80273aa:	6823      	ldr	r3, [r4, #0]
 80273ac:	4620      	mov	r0, r4
 80273ae:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80273b2:	eeb0 0a48 	vmov.f32	s0, s16
 80273b6:	4798      	blx	r3
 80273b8:	ecbd 8b02 	vpop	{d8}
 80273bc:	6823      	ldr	r3, [r4, #0]
 80273be:	4620      	mov	r0, r4
 80273c0:	699b      	ldr	r3, [r3, #24]
 80273c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80273c6:	4718      	bx	r3

080273c8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80273c8:	2200      	movs	r2, #0
 80273ca:	8002      	strh	r2, [r0, #0]
 80273cc:	8042      	strh	r2, [r0, #2]
 80273ce:	8082      	strh	r2, [r0, #4]
 80273d0:	80c2      	strh	r2, [r0, #6]
 80273d2:	4770      	bx	lr

080273d4 <_ZN8touchgfx13TextureMapperD1Ev>:
 80273d4:	4770      	bx	lr

080273d6 <_ZN8touchgfx13TextureMapperD0Ev>:
 80273d6:	b510      	push	{r4, lr}
 80273d8:	2190      	movs	r1, #144	; 0x90
 80273da:	4604      	mov	r4, r0
 80273dc:	f001 ff3f 	bl	802925e <_ZdlPvj>
 80273e0:	4620      	mov	r0, r4
 80273e2:	bd10      	pop	{r4, pc}

080273e4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80273e4:	b538      	push	{r3, r4, r5, lr}
 80273e6:	2500      	movs	r5, #0
 80273e8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80273ec:	2301      	movs	r3, #1
 80273ee:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80273f2:	4b1f      	ldr	r3, [pc, #124]	; (8027470 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80273f4:	8085      	strh	r5, [r0, #4]
 80273f6:	80c5      	strh	r5, [r0, #6]
 80273f8:	8105      	strh	r5, [r0, #8]
 80273fa:	8145      	strh	r5, [r0, #10]
 80273fc:	8185      	strh	r5, [r0, #12]
 80273fe:	81c5      	strh	r5, [r0, #14]
 8027400:	8205      	strh	r5, [r0, #16]
 8027402:	8245      	strh	r5, [r0, #18]
 8027404:	61c5      	str	r5, [r0, #28]
 8027406:	8405      	strh	r5, [r0, #32]
 8027408:	8445      	strh	r5, [r0, #34]	; 0x22
 802740a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802740e:	6003      	str	r3, [r0, #0]
 8027410:	880b      	ldrh	r3, [r1, #0]
 8027412:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027414:	23ff      	movs	r3, #255	; 0xff
 8027416:	4604      	mov	r4, r0
 8027418:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802741c:	f7eb f99f 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027420:	4b14      	ldr	r3, [pc, #80]	; (8027474 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027422:	6023      	str	r3, [r4, #0]
 8027424:	2300      	movs	r3, #0
 8027426:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802742a:	4913      	ldr	r1, [pc, #76]	; (8027478 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802742c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802742e:	6323      	str	r3, [r4, #48]	; 0x30
 8027430:	6363      	str	r3, [r4, #52]	; 0x34
 8027432:	63a3      	str	r3, [r4, #56]	; 0x38
 8027434:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027436:	6463      	str	r3, [r4, #68]	; 0x44
 8027438:	64a3      	str	r3, [r4, #72]	; 0x48
 802743a:	6523      	str	r3, [r4, #80]	; 0x50
 802743c:	6563      	str	r3, [r4, #84]	; 0x54
 802743e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027440:	6623      	str	r3, [r4, #96]	; 0x60
 8027442:	66a3      	str	r3, [r4, #104]	; 0x68
 8027444:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027446:	6763      	str	r3, [r4, #116]	; 0x74
 8027448:	67a3      	str	r3, [r4, #120]	; 0x78
 802744a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802744e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027452:	230c      	movs	r3, #12
 8027454:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027458:	6422      	str	r2, [r4, #64]	; 0x40
 802745a:	64e1      	str	r1, [r4, #76]	; 0x4c
 802745c:	65a1      	str	r1, [r4, #88]	; 0x58
 802745e:	6662      	str	r2, [r4, #100]	; 0x64
 8027460:	6722      	str	r2, [r4, #112]	; 0x70
 8027462:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027464:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027468:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802746c:	4620      	mov	r0, r4
 802746e:	bd38      	pop	{r3, r4, r5, pc}
 8027470:	0802e570 	.word	0x0802e570
 8027474:	0802eb54 	.word	0x0802eb54
 8027478:	447a0000 	.word	0x447a0000

0802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802747c:	b570      	push	{r4, r5, r6, lr}
 802747e:	ed2d 8b04 	vpush	{d8-d9}
 8027482:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027486:	add0      	add	r5, sp, #832	; 0x340
 8027488:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802748a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802748e:	4604      	mov	r4, r0
 8027490:	4628      	mov	r0, r5
 8027492:	f7f1 fa7f 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027496:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027498:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802749c:	4606      	mov	r6, r0
 802749e:	4628      	mov	r0, r5
 80274a0:	f7f1 faac 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80274a4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80274a8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80274ac:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80274ae:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80274b2:	9312      	str	r3, [sp, #72]	; 0x48
 80274b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80274b8:	1c72      	adds	r2, r6, #1
 80274ba:	3001      	adds	r0, #1
 80274bc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80274c0:	ee07 2a90 	vmov	s15, r2
 80274c4:	ee06 0a90 	vmov	s13, r0
 80274c8:	ee36 6a47 	vsub.f32	s12, s12, s14
 80274cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80274d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80274d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80274d8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80274dc:	9316      	str	r3, [sp, #88]	; 0x58
 80274de:	931a      	str	r3, [sp, #104]	; 0x68
 80274e0:	931e      	str	r3, [sp, #120]	; 0x78
 80274e2:	2300      	movs	r3, #0
 80274e4:	9320      	str	r3, [sp, #128]	; 0x80
 80274e6:	9321      	str	r3, [sp, #132]	; 0x84
 80274e8:	9322      	str	r3, [sp, #136]	; 0x88
 80274ea:	9324      	str	r3, [sp, #144]	; 0x90
 80274ec:	9325      	str	r3, [sp, #148]	; 0x94
 80274ee:	9326      	str	r3, [sp, #152]	; 0x98
 80274f0:	9328      	str	r3, [sp, #160]	; 0xa0
 80274f2:	9329      	str	r3, [sp, #164]	; 0xa4
 80274f4:	932a      	str	r3, [sp, #168]	; 0xa8
 80274f6:	932c      	str	r3, [sp, #176]	; 0xb0
 80274f8:	932d      	str	r3, [sp, #180]	; 0xb4
 80274fa:	932e      	str	r3, [sp, #184]	; 0xb8
 80274fc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027500:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027504:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027508:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802750c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027510:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027514:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027518:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802751c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027520:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027524:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027528:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802752c:	a830      	add	r0, sp, #192	; 0xc0
 802752e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027532:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027536:	f000 fc43 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802753a:	eeb1 0a49 	vneg.f32	s0, s18
 802753e:	a830      	add	r0, sp, #192	; 0xc0
 8027540:	f000 fd12 	bl	8027f68 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027544:	eeb1 0a68 	vneg.f32	s0, s17
 8027548:	f000 fd1c 	bl	8027f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802754c:	eeb1 0a48 	vneg.f32	s0, s16
 8027550:	f000 fd27 	bl	8027fa2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027554:	a840      	add	r0, sp, #256	; 0x100
 8027556:	f000 fc33 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802755a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802755e:	a840      	add	r0, sp, #256	; 0x100
 8027560:	f000 fc86 	bl	8027e70 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027564:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027568:	f000 fcac 	bl	8027ec4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802756c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027570:	f000 fcd1 	bl	8027f16 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027574:	a850      	add	r0, sp, #320	; 0x140
 8027576:	f000 fc23 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802757a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802757e:	a850      	add	r0, sp, #320	; 0x140
 8027580:	f000 fd1e 	bl	8027fc0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027584:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027588:	f000 fd26 	bl	8027fd8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802758c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027590:	f000 fd2f 	bl	8027ff2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027594:	a860      	add	r0, sp, #384	; 0x180
 8027596:	f000 fc13 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802759a:	eeb0 0a49 	vmov.f32	s0, s18
 802759e:	a860      	add	r0, sp, #384	; 0x180
 80275a0:	f000 fce2 	bl	8027f68 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80275a4:	eeb0 0a68 	vmov.f32	s0, s17
 80275a8:	f000 fcec 	bl	8027f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80275ac:	eeb0 0a48 	vmov.f32	s0, s16
 80275b0:	f000 fcf7 	bl	8027fa2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80275b4:	aa50      	add	r2, sp, #320	; 0x140
 80275b6:	a960      	add	r1, sp, #384	; 0x180
 80275b8:	a8b0      	add	r0, sp, #704	; 0x2c0
 80275ba:	f000 fc1b 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80275be:	4628      	mov	r0, r5
 80275c0:	aa40      	add	r2, sp, #256	; 0x100
 80275c2:	a9b0      	add	r1, sp, #704	; 0x2c0
 80275c4:	f000 fc16 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80275c8:	4629      	mov	r1, r5
 80275ca:	aa30      	add	r2, sp, #192	; 0xc0
 80275cc:	a870      	add	r0, sp, #448	; 0x1c0
 80275ce:	f000 fc11 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80275d2:	a880      	add	r0, sp, #512	; 0x200
 80275d4:	f000 fbf4 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80275d8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80275dc:	a880      	add	r0, sp, #512	; 0x200
 80275de:	eeb1 0a40 	vneg.f32	s0, s0
 80275e2:	f000 fcc1 	bl	8027f68 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80275e6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80275ea:	a880      	add	r0, sp, #512	; 0x200
 80275ec:	eeb1 0a40 	vneg.f32	s0, s0
 80275f0:	f000 fcc8 	bl	8027f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80275f4:	a890      	add	r0, sp, #576	; 0x240
 80275f6:	f000 fbe3 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80275fa:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80275fe:	a890      	add	r0, sp, #576	; 0x240
 8027600:	f000 fc26 	bl	8027e50 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8027604:	a8a0      	add	r0, sp, #640	; 0x280
 8027606:	f000 fbdb 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802760a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802760e:	a8a0      	add	r0, sp, #640	; 0x280
 8027610:	f000 fcaa 	bl	8027f68 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027614:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027618:	f000 fcb4 	bl	8027f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802761c:	aa90      	add	r2, sp, #576	; 0x240
 802761e:	a9a0      	add	r1, sp, #640	; 0x280
 8027620:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027622:	f000 fbe7 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027626:	4628      	mov	r0, r5
 8027628:	aa80      	add	r2, sp, #512	; 0x200
 802762a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802762c:	f000 fbe2 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027630:	4629      	mov	r1, r5
 8027632:	aa70      	add	r2, sp, #448	; 0x1c0
 8027634:	4668      	mov	r0, sp
 8027636:	466d      	mov	r5, sp
 8027638:	f000 fbdc 	bl	8027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802763c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802763e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027640:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027642:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027644:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027646:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027648:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802764a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802764e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027652:	2500      	movs	r5, #0
 8027654:	0129      	lsls	r1, r5, #4
 8027656:	ab20      	add	r3, sp, #128	; 0x80
 8027658:	185e      	adds	r6, r3, r1
 802765a:	ab10      	add	r3, sp, #64	; 0x40
 802765c:	4419      	add	r1, r3
 802765e:	a870      	add	r0, sp, #448	; 0x1c0
 8027660:	f000 fb7e 	bl	8027d60 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027664:	3501      	adds	r5, #1
 8027666:	2d04      	cmp	r5, #4
 8027668:	ed86 0a00 	vstr	s0, [r6]
 802766c:	edc6 0a01 	vstr	s1, [r6, #4]
 8027670:	ed86 1a02 	vstr	s2, [r6, #8]
 8027674:	edc6 1a03 	vstr	s3, [r6, #12]
 8027678:	d1ec      	bne.n	8027654 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802767a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802767e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8027682:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8027686:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802768a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802768e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027692:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8027696:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802769a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802769e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80276a2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80276a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80276aa:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80276ae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80276b2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80276b6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80276ba:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80276be:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80276c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80276c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80276ca:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80276ce:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80276d2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80276d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80276da:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80276de:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80276e2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80276e6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80276ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80276ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80276f2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80276f6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80276fa:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80276fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027702:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8027706:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802770a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802770e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8027712:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027716:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802771a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802771e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8027722:	ecbd 8b04 	vpop	{d8-d9}
 8027726:	bd70      	pop	{r4, r5, r6, pc}

08027728 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027728:	b510      	push	{r4, lr}
 802772a:	4604      	mov	r4, r0
 802772c:	f7eb f817 	bl	801275e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027730:	4620      	mov	r0, r4
 8027732:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027736:	f7ff bea1 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802773a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802773a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802773e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027742:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027746:	f7ff be99 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802774a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802774a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802774e:	f7ff be95 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027752 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027752:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027756:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802775a:	f7ff be8f 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802775e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802775e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027762:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802776a:	bfd8      	it	le
 802776c:	eeb0 0a67 	vmovle.f32	s0, s15
 8027770:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8027774:	f7ff be82 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027778 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027778:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802777c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027780:	f7ff be7c 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027784 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8027784:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027788:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802778c:	f7ff be76 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027790 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027790:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027794:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027798:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802779c:	f7ff be6e 	b.w	802747c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080277a0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80277a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80277a4:	ed2d 8b04 	vpush	{d8-d9}
 80277a8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80277ac:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80277b0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80277b4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80277b8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80277bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80277c0:	bf54      	ite	pl
 80277c2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80277c6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80277ca:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80277ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80277d2:	bfd8      	it	le
 80277d4:	eeb0 0a49 	vmovle.f32	s0, s18
 80277d8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80277dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80277e0:	bfd8      	it	le
 80277e2:	eeb0 0a68 	vmovle.f32	s0, s17
 80277e6:	460c      	mov	r4, r1
 80277e8:	4607      	mov	r7, r0
 80277ea:	f001 fe4f 	bl	802948c <floorf>
 80277ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80277f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80277f6:	bf58      	it	pl
 80277f8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80277fc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027800:	bf56      	itet	pl
 8027802:	ee10 3a10 	vmovpl	r3, s0
 8027806:	2600      	movmi	r6, #0
 8027808:	b21e      	sxthpl	r6, r3
 802780a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802780e:	bfd8      	it	le
 8027810:	eeb0 8a69 	vmovle.f32	s16, s19
 8027814:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802781c:	bf58      	it	pl
 802781e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027822:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802782a:	bf54      	ite	pl
 802782c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027830:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027834:	f001 fde8 	bl	8029408 <ceilf>
 8027838:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802783c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027840:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027844:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027848:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802784c:	ee07 8a90 	vmov	s15, r8
 8027850:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027854:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802785c:	bfd8      	it	le
 802785e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027862:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027866:	bfdc      	itt	le
 8027868:	ee10 3a10 	vmovle	r3, s0
 802786c:	fa0f f883 	sxthle.w	r8, r3
 8027870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027874:	bf54      	ite	pl
 8027876:	eeb0 0a69 	vmovpl.f32	s0, s19
 802787a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802787e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027886:	bfd8      	it	le
 8027888:	eeb0 0a49 	vmovle.f32	s0, s18
 802788c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027894:	bfd8      	it	le
 8027896:	eeb0 0a68 	vmovle.f32	s0, s17
 802789a:	f001 fdf7 	bl	802948c <floorf>
 802789e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80278a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278a6:	bf58      	it	pl
 80278a8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80278ac:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80278b0:	bf56      	itet	pl
 80278b2:	ee10 3a10 	vmovpl	r3, s0
 80278b6:	2500      	movmi	r5, #0
 80278b8:	b21d      	sxthpl	r5, r3
 80278ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278be:	bfd8      	it	le
 80278c0:	eeb0 8a69 	vmovle.f32	s16, s19
 80278c4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80278c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278cc:	bf58      	it	pl
 80278ce:	eeb0 8a49 	vmovpl.f32	s16, s18
 80278d2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80278d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278da:	bf54      	ite	pl
 80278dc:	eeb0 0a68 	vmovpl.f32	s0, s17
 80278e0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80278e4:	f001 fd90 	bl	8029408 <ceilf>
 80278e8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80278ec:	803e      	strh	r6, [r7, #0]
 80278ee:	ee07 3a90 	vmov	s15, r3
 80278f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80278f6:	807d      	strh	r5, [r7, #2]
 80278f8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80278fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027900:	bfd8      	it	le
 8027902:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027906:	eba8 0606 	sub.w	r6, r8, r6
 802790a:	bfdc      	itt	le
 802790c:	ee10 3a10 	vmovle	r3, s0
 8027910:	b21b      	sxthle	r3, r3
 8027912:	1b5d      	subs	r5, r3, r5
 8027914:	80be      	strh	r6, [r7, #4]
 8027916:	80fd      	strh	r5, [r7, #6]
 8027918:	ecbd 8b04 	vpop	{d8-d9}
 802791c:	4638      	mov	r0, r7
 802791e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027922 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027922:	b513      	push	{r0, r1, r4, lr}
 8027924:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027928:	4604      	mov	r4, r0
 802792a:	b143      	cbz	r3, 802793e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802792c:	4601      	mov	r1, r0
 802792e:	4668      	mov	r0, sp
 8027930:	f7ff ff36 	bl	80277a0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027934:	6823      	ldr	r3, [r4, #0]
 8027936:	4669      	mov	r1, sp
 8027938:	691b      	ldr	r3, [r3, #16]
 802793a:	4620      	mov	r0, r4
 802793c:	4798      	blx	r3
 802793e:	b002      	add	sp, #8
 8027940:	bd10      	pop	{r4, pc}

08027942 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027942:	4603      	mov	r3, r0
 8027944:	3026      	adds	r0, #38	; 0x26
 8027946:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802794a:	b90b      	cbnz	r3, 8027950 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802794c:	f7ee be38 	b.w	80165c0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027950:	f7ee be46 	b.w	80165e0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027954 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027958:	ed2d 8b04 	vpush	{d8-d9}
 802795c:	4604      	mov	r4, r0
 802795e:	469b      	mov	fp, r3
 8027960:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027964:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027968:	f9b1 6000 	ldrsh.w	r6, [r1]
 802796c:	8888      	ldrh	r0, [r1, #4]
 802796e:	b0b3      	sub	sp, #204	; 0xcc
 8027970:	4430      	add	r0, r6
 8027972:	b280      	uxth	r0, r0
 8027974:	9206      	str	r2, [sp, #24]
 8027976:	fa0f fe80 	sxth.w	lr, r0
 802797a:	2200      	movs	r2, #0
 802797c:	4596      	cmp	lr, r2
 802797e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027982:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027986:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802798a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802798c:	9211      	str	r2, [sp, #68]	; 0x44
 802798e:	f340 8129 	ble.w	8027be4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027992:	45b4      	cmp	ip, r6
 8027994:	f340 8126 	ble.w	8027be4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027998:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802799c:	88ca      	ldrh	r2, [r1, #6]
 802799e:	442a      	add	r2, r5
 80279a0:	b292      	uxth	r2, r2
 80279a2:	b211      	sxth	r1, r2
 80279a4:	2900      	cmp	r1, #0
 80279a6:	f340 811d 	ble.w	8027be4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80279aa:	42ab      	cmp	r3, r5
 80279ac:	f340 811a 	ble.w	8027be4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80279b0:	45f4      	cmp	ip, lr
 80279b2:	bfb8      	it	lt
 80279b4:	fa1f f08c 	uxthlt.w	r0, ip
 80279b8:	428b      	cmp	r3, r1
 80279ba:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80279be:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80279c2:	bfb8      	it	lt
 80279c4:	b29a      	uxthlt	r2, r3
 80279c6:	1b80      	subs	r0, r0, r6
 80279c8:	1b52      	subs	r2, r2, r5
 80279ca:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80279ce:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80279d2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80279d6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80279da:	ab11      	add	r3, sp, #68	; 0x44
 80279dc:	e893 0003 	ldmia.w	r3, {r0, r1}
 80279e0:	6822      	ldr	r2, [r4, #0]
 80279e2:	9307      	str	r3, [sp, #28]
 80279e4:	ad13      	add	r5, sp, #76	; 0x4c
 80279e6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80279e8:	e885 0003 	stmia.w	r5, {r0, r1}
 80279ec:	4629      	mov	r1, r5
 80279ee:	4620      	mov	r0, r4
 80279f0:	4790      	blx	r2
 80279f2:	4621      	mov	r1, r4
 80279f4:	a815      	add	r0, sp, #84	; 0x54
 80279f6:	f7ee fd3f 	bl	8016478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80279fa:	a815      	add	r0, sp, #84	; 0x54
 80279fc:	f7ed fa04 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027a00:	9b07      	ldr	r3, [sp, #28]
 8027a02:	1d26      	adds	r6, r4, #4
 8027a04:	4618      	mov	r0, r3
 8027a06:	4631      	mov	r1, r6
 8027a08:	f7ed fa42 	bl	8014e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027a0c:	4628      	mov	r0, r5
 8027a0e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8027a12:	f7ed f9f9 	bl	8014e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027a16:	4628      	mov	r0, r5
 8027a18:	f7f1 f8a8 	bl	8018b6c <_ZNK8touchgfx6Bitmap7getDataEv>
 8027a1c:	9007      	str	r0, [sp, #28]
 8027a1e:	2800      	cmp	r0, #0
 8027a20:	f000 80db 	beq.w	8027bda <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027a24:	f8db 2000 	ldr.w	r2, [fp]
 8027a28:	9209      	str	r2, [sp, #36]	; 0x24
 8027a2a:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027a2e:	920a      	str	r2, [sp, #40]	; 0x28
 8027a30:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027a34:	920b      	str	r2, [sp, #44]	; 0x2c
 8027a36:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027a3a:	920c      	str	r2, [sp, #48]	; 0x30
 8027a3c:	f8da 2000 	ldr.w	r2, [sl]
 8027a40:	920d      	str	r2, [sp, #52]	; 0x34
 8027a42:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027a46:	920e      	str	r2, [sp, #56]	; 0x38
 8027a48:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027a4c:	920f      	str	r2, [sp, #60]	; 0x3c
 8027a4e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027a52:	9210      	str	r2, [sp, #64]	; 0x40
 8027a54:	a90d      	add	r1, sp, #52	; 0x34
 8027a56:	4632      	mov	r2, r6
 8027a58:	a809      	add	r0, sp, #36	; 0x24
 8027a5a:	f7ed f9fd 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027a5e:	4632      	mov	r2, r6
 8027a60:	a90e      	add	r1, sp, #56	; 0x38
 8027a62:	a80a      	add	r0, sp, #40	; 0x28
 8027a64:	f7ed f9f8 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027a68:	4632      	mov	r2, r6
 8027a6a:	a90f      	add	r1, sp, #60	; 0x3c
 8027a6c:	a80b      	add	r0, sp, #44	; 0x2c
 8027a6e:	f7ed f9f3 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027a72:	4632      	mov	r2, r6
 8027a74:	a910      	add	r1, sp, #64	; 0x40
 8027a76:	a80c      	add	r0, sp, #48	; 0x30
 8027a78:	f7ed f9ee 	bl	8014e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027a7c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027a80:	edd7 4a00 	vldr	s9, [r7]
 8027a84:	edd7 5a01 	vldr	s11, [r7, #4]
 8027a88:	ed98 4a00 	vldr	s8, [r8]
 8027a8c:	ed98 5a01 	vldr	s10, [r8, #4]
 8027a90:	ed99 9a00 	vldr	s18, [r9]
 8027a94:	ed99 8a01 	vldr	s16, [r9, #4]
 8027a98:	edd9 8a02 	vldr	s17, [r9, #8]
 8027a9c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027aa0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027aa4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027aa8:	eef0 6a67 	vmov.f32	s13, s15
 8027aac:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027ab0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027ab4:	eeb0 7a67 	vmov.f32	s14, s15
 8027ab8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027abc:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027ac0:	eeb0 6a67 	vmov.f32	s12, s15
 8027ac4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027ac8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027acc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027ad0:	ee16 6a10 	vmov	r6, s12
 8027ad4:	eeb0 6a67 	vmov.f32	s12, s15
 8027ad8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027adc:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027ae0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8027ae4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027ae8:	68ff      	ldr	r7, [r7, #12]
 8027aea:	9624      	str	r6, [sp, #144]	; 0x90
 8027aec:	ee16 0a10 	vmov	r0, s12
 8027af0:	eeb0 6a67 	vmov.f32	s12, s15
 8027af4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027af8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027afc:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027b00:	ee16 1a10 	vmov	r1, s12
 8027b04:	eeb0 6a67 	vmov.f32	s12, s15
 8027b08:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027b0c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027b10:	ee16 2a10 	vmov	r2, s12
 8027b14:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027b18:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027b1c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027b20:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027b24:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027b28:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027b2c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027b30:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027b34:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027b38:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027b3c:	922d      	str	r2, [sp, #180]	; 0xb4
 8027b3e:	4a2b      	ldr	r2, [pc, #172]	; (8027bec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027b40:	9b06      	ldr	r3, [sp, #24]
 8027b42:	8812      	ldrh	r2, [r2, #0]
 8027b44:	9317      	str	r3, [sp, #92]	; 0x5c
 8027b46:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027b4a:	9b07      	ldr	r3, [sp, #28]
 8027b4c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027b50:	4628      	mov	r0, r5
 8027b52:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027b56:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027b5a:	9218      	str	r2, [sp, #96]	; 0x60
 8027b5c:	9319      	str	r3, [sp, #100]	; 0x64
 8027b5e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027b62:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027b66:	9731      	str	r7, [sp, #196]	; 0xc4
 8027b68:	f7f1 f830 	bl	8018bcc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027b6c:	901a      	str	r0, [sp, #104]	; 0x68
 8027b6e:	4628      	mov	r0, r5
 8027b70:	f7f0 ff10 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027b74:	901b      	str	r0, [sp, #108]	; 0x6c
 8027b76:	4628      	mov	r0, r5
 8027b78:	f7f0 ff40 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027b7c:	901c      	str	r0, [sp, #112]	; 0x70
 8027b7e:	4628      	mov	r0, r5
 8027b80:	f7f0 ff08 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027b84:	eeb4 9a48 	vcmp.f32	s18, s16
 8027b88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b8c:	901d      	str	r0, [sp, #116]	; 0x74
 8027b8e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027b92:	d107      	bne.n	8027ba4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027b94:	eeb4 8a68 	vcmp.f32	s16, s17
 8027b98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b9c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027ba0:	bf08      	it	eq
 8027ba2:	461e      	moveq	r6, r3
 8027ba4:	4b12      	ldr	r3, [pc, #72]	; (8027bf0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027ba6:	681b      	ldr	r3, [r3, #0]
 8027ba8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027bac:	b10a      	cbz	r2, 8027bb2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027bae:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027bb0:	b905      	cbnz	r5, 8027bb4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027bb2:	689d      	ldr	r5, [r3, #8]
 8027bb4:	682b      	ldr	r3, [r5, #0]
 8027bb6:	4620      	mov	r0, r4
 8027bb8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027bba:	f7ff fec2 	bl	8027942 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027bbe:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8027bc2:	9604      	str	r6, [sp, #16]
 8027bc4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027bc8:	ab13      	add	r3, sp, #76	; 0x4c
 8027bca:	9301      	str	r3, [sp, #4]
 8027bcc:	ab15      	add	r3, sp, #84	; 0x54
 8027bce:	9300      	str	r3, [sp, #0]
 8027bd0:	aa1e      	add	r2, sp, #120	; 0x78
 8027bd2:	ab19      	add	r3, sp, #100	; 0x64
 8027bd4:	a917      	add	r1, sp, #92	; 0x5c
 8027bd6:	4628      	mov	r0, r5
 8027bd8:	47b8      	blx	r7
 8027bda:	b033      	add	sp, #204	; 0xcc
 8027bdc:	ecbd 8b04 	vpop	{d8-d9}
 8027be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027be4:	2300      	movs	r3, #0
 8027be6:	9312      	str	r3, [sp, #72]	; 0x48
 8027be8:	e6f7      	b.n	80279da <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027bea:	bf00      	nop
 8027bec:	20012e56 	.word	0x20012e56
 8027bf0:	20012e5c 	.word	0x20012e5c

08027bf4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8027bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027bf8:	ed2d 8b02 	vpush	{d8}
 8027bfc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027c00:	b098      	sub	sp, #96	; 0x60
 8027c02:	4604      	mov	r4, r0
 8027c04:	4688      	mov	r8, r1
 8027c06:	2b00      	cmp	r3, #0
 8027c08:	d077      	beq.n	8027cfa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027c0a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027c0e:	4628      	mov	r0, r5
 8027c10:	f7f0 fec0 	bl	8018994 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027c14:	ee07 0a90 	vmov	s15, r0
 8027c18:	4628      	mov	r0, r5
 8027c1a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027c1e:	f7f0 feed 	bl	80189fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027c22:	4b4e      	ldr	r3, [pc, #312]	; (8027d5c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027c24:	781b      	ldrb	r3, [r3, #0]
 8027c26:	ee07 0a90 	vmov	s15, r0
 8027c2a:	2b01      	cmp	r3, #1
 8027c2c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027c30:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027c34:	d066      	beq.n	8027d04 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027c36:	eeb0 6a47 	vmov.f32	s12, s14
 8027c3a:	ee17 3a10 	vmov	r3, s14
 8027c3e:	eeb0 4a48 	vmov.f32	s8, s16
 8027c42:	eeb0 7a48 	vmov.f32	s14, s16
 8027c46:	eef0 4a67 	vmov.f32	s9, s15
 8027c4a:	eeb0 8a67 	vmov.f32	s16, s15
 8027c4e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027c52:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027c56:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027c5a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027c5e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027c62:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027c66:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027c68:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027c6a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027c6c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027c70:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027c74:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027c78:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027c7c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027c80:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027c84:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027c88:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027c8c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027c90:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027c98:	dd3d      	ble.n	8027d16 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027c9a:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027c9e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027ca2:	edcd 2a06 	vstr	s5, [sp, #24]
 8027ca6:	f8cd c01c 	str.w	ip, [sp, #28]
 8027caa:	edcd 5a08 	vstr	s11, [sp, #32]
 8027cae:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027cb2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027cb6:	970b      	str	r7, [sp, #44]	; 0x2c
 8027cb8:	960c      	str	r6, [sp, #48]	; 0x30
 8027cba:	950d      	str	r5, [sp, #52]	; 0x34
 8027cbc:	920e      	str	r2, [sp, #56]	; 0x38
 8027cbe:	900f      	str	r0, [sp, #60]	; 0x3c
 8027cc0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027cc4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027cc8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027ccc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027cd0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027cd4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027cd8:	9316      	str	r3, [sp, #88]	; 0x58
 8027cda:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027cde:	ab14      	add	r3, sp, #80	; 0x50
 8027ce0:	9303      	str	r3, [sp, #12]
 8027ce2:	ab10      	add	r3, sp, #64	; 0x40
 8027ce4:	9302      	str	r3, [sp, #8]
 8027ce6:	ab0c      	add	r3, sp, #48	; 0x30
 8027ce8:	9301      	str	r3, [sp, #4]
 8027cea:	ab08      	add	r3, sp, #32
 8027cec:	9300      	str	r3, [sp, #0]
 8027cee:	2200      	movs	r2, #0
 8027cf0:	ab04      	add	r3, sp, #16
 8027cf2:	4641      	mov	r1, r8
 8027cf4:	4620      	mov	r0, r4
 8027cf6:	f7ff fe2d 	bl	8027954 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027cfa:	b018      	add	sp, #96	; 0x60
 8027cfc:	ecbd 8b02 	vpop	{d8}
 8027d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027d04:	eeb0 6a48 	vmov.f32	s12, s16
 8027d08:	eef0 4a47 	vmov.f32	s9, s14
 8027d0c:	ee17 3a90 	vmov	r3, s15
 8027d10:	eeb0 4a67 	vmov.f32	s8, s15
 8027d14:	e79b      	b.n	8027c4e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027d16:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027d1a:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027d1e:	f8cd c018 	str.w	ip, [sp, #24]
 8027d22:	edcd 2a07 	vstr	s5, [sp, #28]
 8027d26:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027d2a:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027d2e:	970a      	str	r7, [sp, #40]	; 0x28
 8027d30:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027d34:	960d      	str	r6, [sp, #52]	; 0x34
 8027d36:	950c      	str	r5, [sp, #48]	; 0x30
 8027d38:	900e      	str	r0, [sp, #56]	; 0x38
 8027d3a:	920f      	str	r2, [sp, #60]	; 0x3c
 8027d3c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027d40:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027d44:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027d48:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027d4c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027d50:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027d54:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027d58:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d5a:	e7c0      	b.n	8027cde <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027d5c:	20012e54 	.word	0x20012e54

08027d60 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027d62:	b08d      	sub	sp, #52	; 0x34
 8027d64:	2300      	movs	r3, #0
 8027d66:	9304      	str	r3, [sp, #16]
 8027d68:	9305      	str	r3, [sp, #20]
 8027d6a:	9306      	str	r3, [sp, #24]
 8027d6c:	aa04      	add	r2, sp, #16
 8027d6e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027d72:	9307      	str	r3, [sp, #28]
 8027d74:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027d78:	4613      	mov	r3, r2
 8027d7a:	f101 0710 	add.w	r7, r1, #16
 8027d7e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027dbc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027d82:	460c      	mov	r4, r1
 8027d84:	4605      	mov	r5, r0
 8027d86:	ecb4 7a01 	vldmia	r4!, {s14}
 8027d8a:	ecf5 6a01 	vldmia	r5!, {s13}
 8027d8e:	42bc      	cmp	r4, r7
 8027d90:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027d94:	d1f7      	bne.n	8027d86 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027d96:	3010      	adds	r0, #16
 8027d98:	42b0      	cmp	r0, r6
 8027d9a:	ece2 7a01 	vstmia	r2!, {s15}
 8027d9e:	d1ee      	bne.n	8027d7e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027da0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027da2:	ac0c      	add	r4, sp, #48	; 0x30
 8027da4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027da8:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027dac:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027db0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8027db4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027db8:	b00d      	add	sp, #52	; 0x34
 8027dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027dbc:	00000000 	.word	0x00000000

08027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027dc0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027df0 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8027dc4:	2300      	movs	r3, #0
 8027dc6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027dca:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027dce:	2200      	movs	r2, #0
 8027dd0:	4293      	cmp	r3, r2
 8027dd2:	f102 0201 	add.w	r2, r2, #1
 8027dd6:	bf14      	ite	ne
 8027dd8:	eef0 6a47 	vmovne.f32	s13, s14
 8027ddc:	eef0 6a67 	vmoveq.f32	s13, s15
 8027de0:	2a04      	cmp	r2, #4
 8027de2:	ece1 6a01 	vstmia	r1!, {s13}
 8027de6:	d1f3      	bne.n	8027dd0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027de8:	3301      	adds	r3, #1
 8027dea:	2b04      	cmp	r3, #4
 8027dec:	d1ed      	bne.n	8027dca <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027dee:	4770      	bx	lr
 8027df0:	00000000 	.word	0x00000000

08027df4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8027df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027df8:	460c      	mov	r4, r1
 8027dfa:	4605      	mov	r5, r0
 8027dfc:	4690      	mov	r8, r2
 8027dfe:	f7ff ffdf 	bl	8027dc0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027e02:	4628      	mov	r0, r5
 8027e04:	4621      	mov	r1, r4
 8027e06:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027e0a:	2300      	movs	r3, #0
 8027e0c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027e4c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027e10:	eb08 0603 	add.w	r6, r8, r3
 8027e14:	460f      	mov	r7, r1
 8027e16:	2400      	movs	r4, #0
 8027e18:	4632      	mov	r2, r6
 8027e1a:	ecf7 6a01 	vldmia	r7!, {s13}
 8027e1e:	ed92 7a00 	vldr	s14, [r2]
 8027e22:	3401      	adds	r4, #1
 8027e24:	2c04      	cmp	r4, #4
 8027e26:	f106 0610 	add.w	r6, r6, #16
 8027e2a:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027e2e:	d1f3      	bne.n	8027e18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027e30:	18c2      	adds	r2, r0, r3
 8027e32:	3304      	adds	r3, #4
 8027e34:	2b10      	cmp	r3, #16
 8027e36:	edc2 7a00 	vstr	s15, [r2]
 8027e3a:	d1e7      	bne.n	8027e0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027e3c:	3110      	adds	r1, #16
 8027e3e:	4561      	cmp	r1, ip
 8027e40:	f100 0010 	add.w	r0, r0, #16
 8027e44:	d1e1      	bne.n	8027e0a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8027e46:	4628      	mov	r0, r5
 8027e48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027e4c:	00000000 	.word	0x00000000

08027e50 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027e50:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027e54:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027e58:	f100 0320 	add.w	r3, r0, #32
 8027e5c:	3030      	adds	r0, #48	; 0x30
 8027e5e:	ecf3 7a01 	vldmia	r3!, {s15}
 8027e62:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027e66:	4283      	cmp	r3, r0
 8027e68:	edc3 7a03 	vstr	s15, [r3, #12]
 8027e6c:	d1f7      	bne.n	8027e5e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8027e6e:	4770      	bx	lr

08027e70 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8027e70:	b510      	push	{r4, lr}
 8027e72:	ed2d 8b02 	vpush	{d8}
 8027e76:	4604      	mov	r4, r0
 8027e78:	eef0 8a40 	vmov.f32	s17, s0
 8027e7c:	f001 fa7a 	bl	8029374 <sinf>
 8027e80:	eeb0 8a40 	vmov.f32	s16, s0
 8027e84:	eeb0 0a68 	vmov.f32	s0, s17
 8027e88:	f001 fa30 	bl	80292ec <cosf>
 8027e8c:	f104 0310 	add.w	r3, r4, #16
 8027e90:	f104 0220 	add.w	r2, r4, #32
 8027e94:	eeb1 6a48 	vneg.f32	s12, s16
 8027e98:	edd3 7a04 	vldr	s15, [r3, #16]
 8027e9c:	edd3 6a00 	vldr	s13, [r3]
 8027ea0:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027ea4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027ea8:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027eac:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027eb0:	eca3 7a01 	vstmia	r3!, {s14}
 8027eb4:	429a      	cmp	r2, r3
 8027eb6:	edc3 7a03 	vstr	s15, [r3, #12]
 8027eba:	d1ed      	bne.n	8027e98 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027ebc:	ecbd 8b02 	vpop	{d8}
 8027ec0:	4620      	mov	r0, r4
 8027ec2:	bd10      	pop	{r4, pc}

08027ec4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8027ec4:	b510      	push	{r4, lr}
 8027ec6:	ed2d 8b02 	vpush	{d8}
 8027eca:	4604      	mov	r4, r0
 8027ecc:	eef0 8a40 	vmov.f32	s17, s0
 8027ed0:	f001 fa50 	bl	8029374 <sinf>
 8027ed4:	eeb0 8a40 	vmov.f32	s16, s0
 8027ed8:	eeb0 0a68 	vmov.f32	s0, s17
 8027edc:	f001 fa06 	bl	80292ec <cosf>
 8027ee0:	4623      	mov	r3, r4
 8027ee2:	f104 0210 	add.w	r2, r4, #16
 8027ee6:	eeb1 6a48 	vneg.f32	s12, s16
 8027eea:	edd3 7a08 	vldr	s15, [r3, #32]
 8027eee:	edd3 6a00 	vldr	s13, [r3]
 8027ef2:	ee27 7a88 	vmul.f32	s14, s15, s16
 8027ef6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027efa:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027efe:	eee6 7a26 	vfma.f32	s15, s12, s13
 8027f02:	eca3 7a01 	vstmia	r3!, {s14}
 8027f06:	429a      	cmp	r2, r3
 8027f08:	edc3 7a07 	vstr	s15, [r3, #28]
 8027f0c:	d1ed      	bne.n	8027eea <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027f0e:	ecbd 8b02 	vpop	{d8}
 8027f12:	4620      	mov	r0, r4
 8027f14:	bd10      	pop	{r4, pc}

08027f16 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8027f16:	b510      	push	{r4, lr}
 8027f18:	ed2d 8b02 	vpush	{d8}
 8027f1c:	4604      	mov	r4, r0
 8027f1e:	eef0 8a40 	vmov.f32	s17, s0
 8027f22:	f001 fa27 	bl	8029374 <sinf>
 8027f26:	eeb0 8a40 	vmov.f32	s16, s0
 8027f2a:	eeb0 0a68 	vmov.f32	s0, s17
 8027f2e:	f001 f9dd 	bl	80292ec <cosf>
 8027f32:	4623      	mov	r3, r4
 8027f34:	f104 0210 	add.w	r2, r4, #16
 8027f38:	eeb1 6a48 	vneg.f32	s12, s16
 8027f3c:	edd3 7a04 	vldr	s15, [r3, #16]
 8027f40:	edd3 6a00 	vldr	s13, [r3]
 8027f44:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027f48:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027f4c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027f50:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027f54:	eca3 7a01 	vstmia	r3!, {s14}
 8027f58:	429a      	cmp	r2, r3
 8027f5a:	edc3 7a03 	vstr	s15, [r3, #12]
 8027f5e:	d1ed      	bne.n	8027f3c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027f60:	ecbd 8b02 	vpop	{d8}
 8027f64:	4620      	mov	r0, r4
 8027f66:	bd10      	pop	{r4, pc}

08027f68 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027f68:	4603      	mov	r3, r0
 8027f6a:	f100 0210 	add.w	r2, r0, #16
 8027f6e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8027f72:	edd3 7a00 	vldr	s15, [r3]
 8027f76:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027f7a:	ece3 7a01 	vstmia	r3!, {s15}
 8027f7e:	4293      	cmp	r3, r2
 8027f80:	d1f5      	bne.n	8027f6e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8027f82:	4770      	bx	lr

08027f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8027f84:	f100 0310 	add.w	r3, r0, #16
 8027f88:	f100 0220 	add.w	r2, r0, #32
 8027f8c:	ed93 7a08 	vldr	s14, [r3, #32]
 8027f90:	edd3 7a00 	vldr	s15, [r3]
 8027f94:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027f98:	ece3 7a01 	vstmia	r3!, {s15}
 8027f9c:	4293      	cmp	r3, r2
 8027f9e:	d1f5      	bne.n	8027f8c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027fa0:	4770      	bx	lr

08027fa2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8027fa2:	f100 0320 	add.w	r3, r0, #32
 8027fa6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027faa:	ed93 7a04 	vldr	s14, [r3, #16]
 8027fae:	edd3 7a00 	vldr	s15, [r3]
 8027fb2:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027fb6:	ece3 7a01 	vstmia	r3!, {s15}
 8027fba:	4293      	cmp	r3, r2
 8027fbc:	d1f5      	bne.n	8027faa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027fbe:	4770      	bx	lr

08027fc0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027fc0:	4603      	mov	r3, r0
 8027fc2:	f100 0210 	add.w	r2, r0, #16
 8027fc6:	edd3 7a00 	vldr	s15, [r3]
 8027fca:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027fce:	ece3 7a01 	vstmia	r3!, {s15}
 8027fd2:	4293      	cmp	r3, r2
 8027fd4:	d1f7      	bne.n	8027fc6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8027fd6:	4770      	bx	lr

08027fd8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027fd8:	f100 0310 	add.w	r3, r0, #16
 8027fdc:	f100 0220 	add.w	r2, r0, #32
 8027fe0:	edd3 7a00 	vldr	s15, [r3]
 8027fe4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027fe8:	ece3 7a01 	vstmia	r3!, {s15}
 8027fec:	4293      	cmp	r3, r2
 8027fee:	d1f7      	bne.n	8027fe0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027ff0:	4770      	bx	lr

08027ff2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8027ff2:	f100 0320 	add.w	r3, r0, #32
 8027ff6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027ffa:	edd3 7a00 	vldr	s15, [r3]
 8027ffe:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028002:	ece3 7a01 	vstmia	r3!, {s15}
 8028006:	4293      	cmp	r3, r2
 8028008:	d1f7      	bne.n	8027ffa <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802800a:	4770      	bx	lr

0802800c <arm_max_f32>:
 802800c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028010:	1e4f      	subs	r7, r1, #1
 8028012:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028016:	f100 0e04 	add.w	lr, r0, #4
 802801a:	edd0 7a00 	vldr	s15, [r0]
 802801e:	d058      	beq.n	80280d2 <arm_max_f32+0xc6>
 8028020:	3014      	adds	r0, #20
 8028022:	46c4      	mov	ip, r8
 8028024:	2604      	movs	r6, #4
 8028026:	2400      	movs	r4, #0
 8028028:	ed10 6a04 	vldr	s12, [r0, #-16]
 802802c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028030:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028034:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028038:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802803c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028040:	bfc8      	it	gt
 8028042:	eef0 7a46 	vmovgt.f32	s15, s12
 8028046:	f1a6 0503 	sub.w	r5, r6, #3
 802804a:	eef4 7ae6 	vcmpe.f32	s15, s13
 802804e:	bfc8      	it	gt
 8028050:	462c      	movgt	r4, r5
 8028052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028056:	bf48      	it	mi
 8028058:	eef0 7a66 	vmovmi.f32	s15, s13
 802805c:	f1a6 0502 	sub.w	r5, r6, #2
 8028060:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028064:	bf48      	it	mi
 8028066:	462c      	movmi	r4, r5
 8028068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802806c:	bf48      	it	mi
 802806e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028072:	f106 35ff 	add.w	r5, r6, #4294967295
 8028076:	eef4 7ae5 	vcmpe.f32	s15, s11
 802807a:	bf48      	it	mi
 802807c:	462c      	movmi	r4, r5
 802807e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028082:	bf48      	it	mi
 8028084:	4634      	movmi	r4, r6
 8028086:	bf48      	it	mi
 8028088:	eef0 7a65 	vmovmi.f32	s15, s11
 802808c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028090:	f106 0604 	add.w	r6, r6, #4
 8028094:	f100 0010 	add.w	r0, r0, #16
 8028098:	d1c6      	bne.n	8028028 <arm_max_f32+0x1c>
 802809a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802809e:	f017 0003 	ands.w	r0, r7, #3
 80280a2:	d018      	beq.n	80280d6 <arm_max_f32+0xca>
 80280a4:	1a08      	subs	r0, r1, r0
 80280a6:	ecbe 7a01 	vldmia	lr!, {s14}
 80280aa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80280ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80280b2:	bfc8      	it	gt
 80280b4:	4604      	movgt	r4, r0
 80280b6:	f100 0001 	add.w	r0, r0, #1
 80280ba:	bfd8      	it	le
 80280bc:	eeb0 7a67 	vmovle.f32	s14, s15
 80280c0:	4288      	cmp	r0, r1
 80280c2:	eef0 7a47 	vmov.f32	s15, s14
 80280c6:	d1ee      	bne.n	80280a6 <arm_max_f32+0x9a>
 80280c8:	ed82 7a00 	vstr	s14, [r2]
 80280cc:	601c      	str	r4, [r3, #0]
 80280ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80280d2:	4644      	mov	r4, r8
 80280d4:	e7e3      	b.n	802809e <arm_max_f32+0x92>
 80280d6:	eeb0 7a67 	vmov.f32	s14, s15
 80280da:	e7f5      	b.n	80280c8 <arm_max_f32+0xbc>

080280dc <arm_rfft_fast_init_f32>:
 80280dc:	084b      	lsrs	r3, r1, #1
 80280de:	2b80      	cmp	r3, #128	; 0x80
 80280e0:	b410      	push	{r4}
 80280e2:	8201      	strh	r1, [r0, #16]
 80280e4:	8003      	strh	r3, [r0, #0]
 80280e6:	d047      	beq.n	8028178 <arm_rfft_fast_init_f32+0x9c>
 80280e8:	d917      	bls.n	802811a <arm_rfft_fast_init_f32+0x3e>
 80280ea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80280ee:	d03d      	beq.n	802816c <arm_rfft_fast_init_f32+0x90>
 80280f0:	d929      	bls.n	8028146 <arm_rfft_fast_init_f32+0x6a>
 80280f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80280f6:	d020      	beq.n	802813a <arm_rfft_fast_init_f32+0x5e>
 80280f8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80280fc:	d113      	bne.n	8028126 <arm_rfft_fast_init_f32+0x4a>
 80280fe:	4921      	ldr	r1, [pc, #132]	; (8028184 <arm_rfft_fast_init_f32+0xa8>)
 8028100:	4a21      	ldr	r2, [pc, #132]	; (8028188 <arm_rfft_fast_init_f32+0xac>)
 8028102:	4b22      	ldr	r3, [pc, #136]	; (802818c <arm_rfft_fast_init_f32+0xb0>)
 8028104:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028108:	8184      	strh	r4, [r0, #12]
 802810a:	6081      	str	r1, [r0, #8]
 802810c:	6042      	str	r2, [r0, #4]
 802810e:	6143      	str	r3, [r0, #20]
 8028110:	2000      	movs	r0, #0
 8028112:	b240      	sxtb	r0, r0
 8028114:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028118:	4770      	bx	lr
 802811a:	2b20      	cmp	r3, #32
 802811c:	d01c      	beq.n	8028158 <arm_rfft_fast_init_f32+0x7c>
 802811e:	2b40      	cmp	r3, #64	; 0x40
 8028120:	d006      	beq.n	8028130 <arm_rfft_fast_init_f32+0x54>
 8028122:	2b10      	cmp	r3, #16
 8028124:	d01d      	beq.n	8028162 <arm_rfft_fast_init_f32+0x86>
 8028126:	20ff      	movs	r0, #255	; 0xff
 8028128:	b240      	sxtb	r0, r0
 802812a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802812e:	4770      	bx	lr
 8028130:	2438      	movs	r4, #56	; 0x38
 8028132:	4917      	ldr	r1, [pc, #92]	; (8028190 <arm_rfft_fast_init_f32+0xb4>)
 8028134:	4a17      	ldr	r2, [pc, #92]	; (8028194 <arm_rfft_fast_init_f32+0xb8>)
 8028136:	4b18      	ldr	r3, [pc, #96]	; (8028198 <arm_rfft_fast_init_f32+0xbc>)
 8028138:	e7e6      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 802813a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802813e:	4917      	ldr	r1, [pc, #92]	; (802819c <arm_rfft_fast_init_f32+0xc0>)
 8028140:	4a17      	ldr	r2, [pc, #92]	; (80281a0 <arm_rfft_fast_init_f32+0xc4>)
 8028142:	4b18      	ldr	r3, [pc, #96]	; (80281a4 <arm_rfft_fast_init_f32+0xc8>)
 8028144:	e7e0      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 8028146:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802814a:	d1ec      	bne.n	8028126 <arm_rfft_fast_init_f32+0x4a>
 802814c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028150:	4915      	ldr	r1, [pc, #84]	; (80281a8 <arm_rfft_fast_init_f32+0xcc>)
 8028152:	4a16      	ldr	r2, [pc, #88]	; (80281ac <arm_rfft_fast_init_f32+0xd0>)
 8028154:	4b16      	ldr	r3, [pc, #88]	; (80281b0 <arm_rfft_fast_init_f32+0xd4>)
 8028156:	e7d7      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 8028158:	2430      	movs	r4, #48	; 0x30
 802815a:	4916      	ldr	r1, [pc, #88]	; (80281b4 <arm_rfft_fast_init_f32+0xd8>)
 802815c:	4a16      	ldr	r2, [pc, #88]	; (80281b8 <arm_rfft_fast_init_f32+0xdc>)
 802815e:	4b17      	ldr	r3, [pc, #92]	; (80281bc <arm_rfft_fast_init_f32+0xe0>)
 8028160:	e7d2      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 8028162:	2414      	movs	r4, #20
 8028164:	4916      	ldr	r1, [pc, #88]	; (80281c0 <arm_rfft_fast_init_f32+0xe4>)
 8028166:	4a17      	ldr	r2, [pc, #92]	; (80281c4 <arm_rfft_fast_init_f32+0xe8>)
 8028168:	4b17      	ldr	r3, [pc, #92]	; (80281c8 <arm_rfft_fast_init_f32+0xec>)
 802816a:	e7cd      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 802816c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028170:	4916      	ldr	r1, [pc, #88]	; (80281cc <arm_rfft_fast_init_f32+0xf0>)
 8028172:	4a17      	ldr	r2, [pc, #92]	; (80281d0 <arm_rfft_fast_init_f32+0xf4>)
 8028174:	4b17      	ldr	r3, [pc, #92]	; (80281d4 <arm_rfft_fast_init_f32+0xf8>)
 8028176:	e7c7      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 8028178:	24d0      	movs	r4, #208	; 0xd0
 802817a:	4917      	ldr	r1, [pc, #92]	; (80281d8 <arm_rfft_fast_init_f32+0xfc>)
 802817c:	4a17      	ldr	r2, [pc, #92]	; (80281dc <arm_rfft_fast_init_f32+0x100>)
 802817e:	4b18      	ldr	r3, [pc, #96]	; (80281e0 <arm_rfft_fast_init_f32+0x104>)
 8028180:	e7c2      	b.n	8028108 <arm_rfft_fast_init_f32+0x2c>
 8028182:	bf00      	nop
 8028184:	0803da68 	.word	0x0803da68
 8028188:	0802ec60 	.word	0x0802ec60
 802818c:	08034dd0 	.word	0x08034dd0
 8028190:	08032d60 	.word	0x08032d60
 8028194:	0803f828 	.word	0x0803f828
 8028198:	08041d18 	.word	0x08041d18
 802819c:	0803b750 	.word	0x0803b750
 80281a0:	08039650 	.word	0x08039650
 80281a4:	08032dd0 	.word	0x08032dd0
 80281a8:	080419a8 	.word	0x080419a8
 80281ac:	08038dd0 	.word	0x08038dd0
 80281b0:	0803fa28 	.word	0x0803fa28
 80281b4:	0803c608 	.word	0x0803c608
 80281b8:	0803b650 	.word	0x0803b650
 80281bc:	08032c60 	.word	0x08032c60
 80281c0:	0803c560 	.word	0x0803c560
 80281c4:	080395d0 	.word	0x080395d0
 80281c8:	0803c588 	.word	0x0803c588
 80281cc:	08040228 	.word	0x08040228
 80281d0:	0803ca68 	.word	0x0803ca68
 80281d4:	080405a8 	.word	0x080405a8
 80281d8:	08041f18 	.word	0x08041f18
 80281dc:	0803c668 	.word	0x0803c668
 80281e0:	080415a8 	.word	0x080415a8

080281e4 <arm_rfft_fast_f32>:
 80281e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80281e8:	8a06      	ldrh	r6, [r0, #16]
 80281ea:	0876      	lsrs	r6, r6, #1
 80281ec:	4607      	mov	r7, r0
 80281ee:	4615      	mov	r5, r2
 80281f0:	8006      	strh	r6, [r0, #0]
 80281f2:	460c      	mov	r4, r1
 80281f4:	2b00      	cmp	r3, #0
 80281f6:	d15c      	bne.n	80282b2 <arm_rfft_fast_f32+0xce>
 80281f8:	461a      	mov	r2, r3
 80281fa:	2301      	movs	r3, #1
 80281fc:	f000 fbe6 	bl	80289cc <arm_cfft_f32>
 8028200:	edd4 7a00 	vldr	s15, [r4]
 8028204:	ed94 7a01 	vldr	s14, [r4, #4]
 8028208:	883e      	ldrh	r6, [r7, #0]
 802820a:	6978      	ldr	r0, [r7, #20]
 802820c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028210:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028214:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028218:	ee77 6a87 	vadd.f32	s13, s15, s14
 802821c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028220:	3e01      	subs	r6, #1
 8028222:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028226:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802822a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802822e:	ed85 7a00 	vstr	s14, [r5]
 8028232:	edc5 7a01 	vstr	s15, [r5, #4]
 8028236:	3010      	adds	r0, #16
 8028238:	f105 0210 	add.w	r2, r5, #16
 802823c:	3b08      	subs	r3, #8
 802823e:	f104 0110 	add.w	r1, r4, #16
 8028242:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028246:	ed93 5a02 	vldr	s10, [r3, #8]
 802824a:	ed11 7a01 	vldr	s14, [r1, #-4]
 802824e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028252:	edd3 5a03 	vldr	s11, [r3, #12]
 8028256:	ed50 6a01 	vldr	s13, [r0, #-4]
 802825a:	ee75 7a64 	vsub.f32	s15, s10, s9
 802825e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028262:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028266:	ee77 5a65 	vsub.f32	s11, s14, s11
 802826a:	ee66 4a27 	vmul.f32	s9, s12, s15
 802826e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028272:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028276:	ee26 6a04 	vmul.f32	s12, s12, s8
 802827a:	ee66 6a84 	vmul.f32	s13, s13, s8
 802827e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028282:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028286:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802828a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802828e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028292:	3e01      	subs	r6, #1
 8028294:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028298:	ed42 7a01 	vstr	s15, [r2, #-4]
 802829c:	f1a3 0308 	sub.w	r3, r3, #8
 80282a0:	f101 0108 	add.w	r1, r1, #8
 80282a4:	f100 0008 	add.w	r0, r0, #8
 80282a8:	f102 0208 	add.w	r2, r2, #8
 80282ac:	d1c9      	bne.n	8028242 <arm_rfft_fast_f32+0x5e>
 80282ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80282b2:	edd1 7a00 	vldr	s15, [r1]
 80282b6:	edd1 6a01 	vldr	s13, [r1, #4]
 80282ba:	6941      	ldr	r1, [r0, #20]
 80282bc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80282c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80282c4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80282c8:	ee27 7a23 	vmul.f32	s14, s14, s7
 80282cc:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80282d0:	3e01      	subs	r6, #1
 80282d2:	ed82 7a00 	vstr	s14, [r2]
 80282d6:	edc2 7a01 	vstr	s15, [r2, #4]
 80282da:	00f0      	lsls	r0, r6, #3
 80282dc:	b3ee      	cbz	r6, 802835a <arm_rfft_fast_f32+0x176>
 80282de:	3808      	subs	r0, #8
 80282e0:	f101 0e10 	add.w	lr, r1, #16
 80282e4:	4420      	add	r0, r4
 80282e6:	f104 0110 	add.w	r1, r4, #16
 80282ea:	f102 0c10 	add.w	ip, r2, #16
 80282ee:	ed90 7a02 	vldr	s14, [r0, #8]
 80282f2:	ed51 6a02 	vldr	s13, [r1, #-8]
 80282f6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80282fa:	ed90 4a03 	vldr	s8, [r0, #12]
 80282fe:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028302:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028306:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802830a:	ee74 4a05 	vadd.f32	s9, s8, s10
 802830e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028312:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028316:	ee35 5a44 	vsub.f32	s10, s10, s8
 802831a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802831e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028322:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028326:	ee26 6a24 	vmul.f32	s12, s12, s9
 802832a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802832e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028332:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028336:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802833a:	ee27 7a23 	vmul.f32	s14, s14, s7
 802833e:	3e01      	subs	r6, #1
 8028340:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028344:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028348:	f1a0 0008 	sub.w	r0, r0, #8
 802834c:	f101 0108 	add.w	r1, r1, #8
 8028350:	f10e 0e08 	add.w	lr, lr, #8
 8028354:	f10c 0c08 	add.w	ip, ip, #8
 8028358:	d1c9      	bne.n	80282ee <arm_rfft_fast_f32+0x10a>
 802835a:	4638      	mov	r0, r7
 802835c:	4629      	mov	r1, r5
 802835e:	461a      	mov	r2, r3
 8028360:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028364:	2301      	movs	r3, #1
 8028366:	f000 bb31 	b.w	80289cc <arm_cfft_f32>
 802836a:	bf00      	nop

0802836c <arm_cfft_radix8by2_f32>:
 802836c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028370:	ed2d 8b08 	vpush	{d8-d11}
 8028374:	f8b0 e000 	ldrh.w	lr, [r0]
 8028378:	6842      	ldr	r2, [r0, #4]
 802837a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802837e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028382:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028386:	4607      	mov	r7, r0
 8028388:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802838c:	f000 80af 	beq.w	80284ee <arm_cfft_radix8by2_f32+0x182>
 8028390:	3310      	adds	r3, #16
 8028392:	18ce      	adds	r6, r1, r3
 8028394:	3210      	adds	r2, #16
 8028396:	4443      	add	r3, r8
 8028398:	f101 0510 	add.w	r5, r1, #16
 802839c:	f108 0410 	add.w	r4, r8, #16
 80283a0:	ed54 1a04 	vldr	s3, [r4, #-16]
 80283a4:	ed13 4a04 	vldr	s8, [r3, #-16]
 80283a8:	ed53 3a03 	vldr	s7, [r3, #-12]
 80283ac:	ed53 5a02 	vldr	s11, [r3, #-8]
 80283b0:	ed13 5a01 	vldr	s10, [r3, #-4]
 80283b4:	ed54 6a03 	vldr	s13, [r4, #-12]
 80283b8:	ed14 0a02 	vldr	s0, [r4, #-8]
 80283bc:	ed16 2a04 	vldr	s4, [r6, #-16]
 80283c0:	ed56 2a03 	vldr	s5, [r6, #-12]
 80283c4:	ed15 6a03 	vldr	s12, [r5, #-12]
 80283c8:	ed15 7a01 	vldr	s14, [r5, #-4]
 80283cc:	ed15 3a04 	vldr	s6, [r5, #-16]
 80283d0:	ed54 7a01 	vldr	s15, [r4, #-4]
 80283d4:	ed56 0a02 	vldr	s1, [r6, #-8]
 80283d8:	ed16 1a01 	vldr	s2, [r6, #-4]
 80283dc:	ed55 4a02 	vldr	s9, [r5, #-8]
 80283e0:	ee73 ba21 	vadd.f32	s23, s6, s3
 80283e4:	ee36 ba26 	vadd.f32	s22, s12, s13
 80283e8:	ee37 aa27 	vadd.f32	s20, s14, s15
 80283ec:	ee72 9a04 	vadd.f32	s19, s4, s8
 80283f0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 80283f4:	ee31 8a05 	vadd.f32	s16, s2, s10
 80283f8:	ee74 aa80 	vadd.f32	s21, s9, s0
 80283fc:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028400:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028404:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028408:	ed45 aa02 	vstr	s21, [r5, #-8]
 802840c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028410:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028414:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028418:	ed06 9a03 	vstr	s18, [r6, #-12]
 802841c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028420:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028424:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028428:	ed12 6a03 	vldr	s12, [r2, #-12]
 802842c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028430:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028434:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028438:	ee26 8a86 	vmul.f32	s16, s13, s12
 802843c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028440:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028444:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028448:	ee23 3a06 	vmul.f32	s6, s6, s12
 802844c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028450:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028454:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028458:	ee36 6a04 	vadd.f32	s12, s12, s8
 802845c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028460:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028464:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028468:	ed44 6a03 	vstr	s13, [r4, #-12]
 802846c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028470:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028474:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028478:	ee77 7a67 	vsub.f32	s15, s14, s15
 802847c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028480:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028484:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028488:	ee35 6a41 	vsub.f32	s12, s10, s2
 802848c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028490:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028494:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028498:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802849c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80284a0:	ee64 4a87 	vmul.f32	s9, s9, s14
 80284a4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80284a8:	ee26 7a07 	vmul.f32	s14, s12, s14
 80284ac:	ee26 6a25 	vmul.f32	s12, s12, s11
 80284b0:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80284b4:	ee74 5a23 	vadd.f32	s11, s8, s7
 80284b8:	ee35 6a46 	vsub.f32	s12, s10, s12
 80284bc:	ee37 7a26 	vadd.f32	s14, s14, s13
 80284c0:	f1be 0e01 	subs.w	lr, lr, #1
 80284c4:	ed44 5a02 	vstr	s11, [r4, #-8]
 80284c8:	f105 0510 	add.w	r5, r5, #16
 80284cc:	ed44 7a01 	vstr	s15, [r4, #-4]
 80284d0:	f106 0610 	add.w	r6, r6, #16
 80284d4:	ed03 6a02 	vstr	s12, [r3, #-8]
 80284d8:	ed03 7a01 	vstr	s14, [r3, #-4]
 80284dc:	f102 0210 	add.w	r2, r2, #16
 80284e0:	f104 0410 	add.w	r4, r4, #16
 80284e4:	f103 0310 	add.w	r3, r3, #16
 80284e8:	f47f af5a 	bne.w	80283a0 <arm_cfft_radix8by2_f32+0x34>
 80284ec:	687a      	ldr	r2, [r7, #4]
 80284ee:	fa1f f48c 	uxth.w	r4, ip
 80284f2:	4608      	mov	r0, r1
 80284f4:	2302      	movs	r3, #2
 80284f6:	4621      	mov	r1, r4
 80284f8:	f000 fbca 	bl	8028c90 <arm_radix8_butterfly_f32>
 80284fc:	ecbd 8b08 	vpop	{d8-d11}
 8028500:	4640      	mov	r0, r8
 8028502:	4621      	mov	r1, r4
 8028504:	687a      	ldr	r2, [r7, #4]
 8028506:	2302      	movs	r3, #2
 8028508:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802850c:	f000 bbc0 	b.w	8028c90 <arm_radix8_butterfly_f32>

08028510 <arm_cfft_radix8by4_f32>:
 8028510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028514:	ed2d 8b0a 	vpush	{d8-d12}
 8028518:	8802      	ldrh	r2, [r0, #0]
 802851a:	ed91 6a00 	vldr	s12, [r1]
 802851e:	b08f      	sub	sp, #60	; 0x3c
 8028520:	460f      	mov	r7, r1
 8028522:	0852      	lsrs	r2, r2, #1
 8028524:	0093      	lsls	r3, r2, #2
 8028526:	900c      	str	r0, [sp, #48]	; 0x30
 8028528:	9103      	str	r1, [sp, #12]
 802852a:	6841      	ldr	r1, [r0, #4]
 802852c:	ed97 7a01 	vldr	s14, [r7, #4]
 8028530:	4638      	mov	r0, r7
 8028532:	4418      	add	r0, r3
 8028534:	4606      	mov	r6, r0
 8028536:	9009      	str	r0, [sp, #36]	; 0x24
 8028538:	4418      	add	r0, r3
 802853a:	edd0 6a00 	vldr	s13, [r0]
 802853e:	edd6 3a00 	vldr	s7, [r6]
 8028542:	edd6 2a01 	vldr	s5, [r6, #4]
 8028546:	edd0 7a01 	vldr	s15, [r0, #4]
 802854a:	900a      	str	r0, [sp, #40]	; 0x28
 802854c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028550:	4604      	mov	r4, r0
 8028552:	4625      	mov	r5, r4
 8028554:	441c      	add	r4, r3
 8028556:	ed94 4a00 	vldr	s8, [r4]
 802855a:	ed94 5a01 	vldr	s10, [r4, #4]
 802855e:	9401      	str	r4, [sp, #4]
 8028560:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028564:	4630      	mov	r0, r6
 8028566:	ee74 4a24 	vadd.f32	s9, s8, s9
 802856a:	463e      	mov	r6, r7
 802856c:	ee14 ea90 	vmov	lr, s9
 8028570:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028574:	f846 eb08 	str.w	lr, [r6], #8
 8028578:	ee37 6a27 	vadd.f32	s12, s14, s15
 802857c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028580:	9604      	str	r6, [sp, #16]
 8028582:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028586:	9e01      	ldr	r6, [sp, #4]
 8028588:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802858c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028590:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028594:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028598:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802859c:	ee36 6a62 	vsub.f32	s12, s12, s5
 80285a0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80285a4:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80285a8:	ee73 3a45 	vsub.f32	s7, s6, s10
 80285ac:	4604      	mov	r4, r0
 80285ae:	ee36 6a45 	vsub.f32	s12, s12, s10
 80285b2:	ee75 6a26 	vadd.f32	s13, s10, s13
 80285b6:	46a3      	mov	fp, r4
 80285b8:	ee37 7a02 	vadd.f32	s14, s14, s4
 80285bc:	ee34 5a84 	vadd.f32	s10, s9, s8
 80285c0:	ee13 8a90 	vmov	r8, s7
 80285c4:	46a4      	mov	ip, r4
 80285c6:	ee75 5ac4 	vsub.f32	s11, s11, s8
 80285ca:	ed87 7a01 	vstr	s14, [r7, #4]
 80285ce:	f84b 8b08 	str.w	r8, [fp], #8
 80285d2:	f1ac 0704 	sub.w	r7, ip, #4
 80285d6:	ed8c 5a01 	vstr	s10, [ip, #4]
 80285da:	f101 0c08 	add.w	ip, r1, #8
 80285de:	462c      	mov	r4, r5
 80285e0:	f8cd c014 	str.w	ip, [sp, #20]
 80285e4:	ee15 ca90 	vmov	ip, s11
 80285e8:	f844 cb08 	str.w	ip, [r4], #8
 80285ec:	9407      	str	r4, [sp, #28]
 80285ee:	f101 0410 	add.w	r4, r1, #16
 80285f2:	ed85 6a01 	vstr	s12, [r5, #4]
 80285f6:	0852      	lsrs	r2, r2, #1
 80285f8:	9402      	str	r4, [sp, #8]
 80285fa:	462c      	mov	r4, r5
 80285fc:	f101 0518 	add.w	r5, r1, #24
 8028600:	920b      	str	r2, [sp, #44]	; 0x2c
 8028602:	46b2      	mov	sl, r6
 8028604:	9506      	str	r5, [sp, #24]
 8028606:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802860a:	3a02      	subs	r2, #2
 802860c:	ee16 5a90 	vmov	r5, s13
 8028610:	46b6      	mov	lr, r6
 8028612:	4630      	mov	r0, r6
 8028614:	0852      	lsrs	r2, r2, #1
 8028616:	f84a 5b08 	str.w	r5, [sl], #8
 802861a:	f1a0 0604 	sub.w	r6, r0, #4
 802861e:	edce 7a01 	vstr	s15, [lr, #4]
 8028622:	9208      	str	r2, [sp, #32]
 8028624:	f000 8130 	beq.w	8028888 <arm_cfft_radix8by4_f32+0x378>
 8028628:	4691      	mov	r9, r2
 802862a:	9a03      	ldr	r2, [sp, #12]
 802862c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028630:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028634:	3b08      	subs	r3, #8
 8028636:	f102 0510 	add.w	r5, r2, #16
 802863a:	f101 0c20 	add.w	ip, r1, #32
 802863e:	f1a4 020c 	sub.w	r2, r4, #12
 8028642:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028646:	4433      	add	r3, r6
 8028648:	3410      	adds	r4, #16
 802864a:	4650      	mov	r0, sl
 802864c:	4659      	mov	r1, fp
 802864e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028652:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028656:	ed91 7a00 	vldr	s14, [r1]
 802865a:	edd0 7a00 	vldr	s15, [r0]
 802865e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028662:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028666:	edd0 6a01 	vldr	s13, [r0, #4]
 802866a:	ed91 6a01 	vldr	s12, [r1, #4]
 802866e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028672:	ee34 0a25 	vadd.f32	s0, s8, s11
 8028676:	ee78 4a07 	vadd.f32	s9, s16, s14
 802867a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802867e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8028682:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8028686:	ed45 4a02 	vstr	s9, [r5, #-8]
 802868a:	edd1 4a01 	vldr	s9, [r1, #4]
 802868e:	ed90 4a01 	vldr	s8, [r0, #4]
 8028692:	ee70 4a24 	vadd.f32	s9, s0, s9
 8028696:	ee76 aa05 	vadd.f32	s21, s12, s10
 802869a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802869e:	ee35 aac7 	vsub.f32	s20, s11, s14
 80286a2:	ed45 4a01 	vstr	s9, [r5, #-4]
 80286a6:	edd6 1a00 	vldr	s3, [r6]
 80286aa:	edd7 0a00 	vldr	s1, [r7]
 80286ae:	ed92 4a02 	vldr	s8, [r2, #8]
 80286b2:	edd3 3a02 	vldr	s7, [r3, #8]
 80286b6:	ed93 2a01 	vldr	s4, [r3, #4]
 80286ba:	ed16 1a01 	vldr	s2, [r6, #-4]
 80286be:	edd2 2a01 	vldr	s5, [r2, #4]
 80286c2:	ed57 9a01 	vldr	s19, [r7, #-4]
 80286c6:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80286ca:	ee39 3a81 	vadd.f32	s6, s19, s2
 80286ce:	ee74 8a84 	vadd.f32	s17, s9, s8
 80286d2:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80286d6:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80286da:	ee7a aae6 	vsub.f32	s21, s21, s13
 80286de:	ee18 aa90 	vmov	sl, s17
 80286e2:	f847 a908 	str.w	sl, [r7], #-8
 80286e6:	edd2 8a01 	vldr	s17, [r2, #4]
 80286ea:	ed93 9a01 	vldr	s18, [r3, #4]
 80286ee:	ee73 8a28 	vadd.f32	s17, s6, s17
 80286f2:	ee3a aa27 	vadd.f32	s20, s20, s15
 80286f6:	ee78 8a89 	vadd.f32	s17, s17, s18
 80286fa:	ee74 0a63 	vsub.f32	s1, s8, s7
 80286fe:	edc7 8a01 	vstr	s17, [r7, #4]
 8028702:	ed18 ba02 	vldr	s22, [r8, #-8]
 8028706:	ed58 8a01 	vldr	s17, [r8, #-4]
 802870a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802870e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8028712:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8028716:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802871a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802871e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8028722:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8028726:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802872a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802872e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028732:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028736:	ee69 8a28 	vmul.f32	s17, s18, s17
 802873a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802873e:	ee1c aa10 	vmov	sl, s24
 8028742:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028746:	f841 ab08 	str.w	sl, [r1], #8
 802874a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802874e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028752:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028756:	ee33 3a62 	vsub.f32	s6, s6, s5
 802875a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802875e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028762:	ed82 ba02 	vstr	s22, [r2, #8]
 8028766:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802876a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802876e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8028772:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8028776:	ee30 0a46 	vsub.f32	s0, s0, s12
 802877a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802877e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8028782:	ee30 0a66 	vsub.f32	s0, s0, s13
 8028786:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802878a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802878e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8028792:	ee60 9a04 	vmul.f32	s19, s0, s8
 8028796:	ee28 8a04 	vmul.f32	s16, s16, s8
 802879a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802879e:	ee63 3a84 	vmul.f32	s7, s7, s8
 80287a2:	ee39 4a68 	vsub.f32	s8, s18, s17
 80287a6:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80287aa:	ee14 aa10 	vmov	sl, s8
 80287ae:	ee30 0a48 	vsub.f32	s0, s0, s16
 80287b2:	ee63 4a24 	vmul.f32	s9, s6, s9
 80287b6:	ed44 9a02 	vstr	s19, [r4, #-8]
 80287ba:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80287be:	ed04 0a01 	vstr	s0, [r4, #-4]
 80287c2:	f846 a908 	str.w	sl, [r6], #-8
 80287c6:	ee35 6a46 	vsub.f32	s12, s10, s12
 80287ca:	ee35 7a87 	vadd.f32	s14, s11, s14
 80287ce:	edc6 3a01 	vstr	s7, [r6, #4]
 80287d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80287d6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80287da:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 80287de:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 80287e2:	ee67 5a86 	vmul.f32	s11, s15, s12
 80287e6:	ee26 5a87 	vmul.f32	s10, s13, s14
 80287ea:	ee72 2a62 	vsub.f32	s5, s4, s5
 80287ee:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80287f2:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80287f6:	ee75 5a25 	vadd.f32	s11, s10, s11
 80287fa:	ee62 0a86 	vmul.f32	s1, s5, s12
 80287fe:	ee66 6a86 	vmul.f32	s13, s13, s12
 8028802:	ee67 7a87 	vmul.f32	s15, s15, s14
 8028806:	ee21 6a06 	vmul.f32	s12, s2, s12
 802880a:	ee62 2a87 	vmul.f32	s5, s5, s14
 802880e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8028812:	ee15 aa90 	vmov	sl, s11
 8028816:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802881a:	f840 ab08 	str.w	sl, [r0], #8
 802881e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028822:	ee76 2a22 	vadd.f32	s5, s12, s5
 8028826:	f1b9 0901 	subs.w	r9, r9, #1
 802882a:	ed40 7a01 	vstr	s15, [r0, #-4]
 802882e:	f105 0508 	add.w	r5, r5, #8
 8028832:	ed83 1a02 	vstr	s2, [r3, #8]
 8028836:	edc3 2a01 	vstr	s5, [r3, #4]
 802883a:	f108 0808 	add.w	r8, r8, #8
 802883e:	f1a2 0208 	sub.w	r2, r2, #8
 8028842:	f10c 0c10 	add.w	ip, ip, #16
 8028846:	f104 0408 	add.w	r4, r4, #8
 802884a:	f10e 0e18 	add.w	lr, lr, #24
 802884e:	f1a3 0308 	sub.w	r3, r3, #8
 8028852:	f47f aefc 	bne.w	802864e <arm_cfft_radix8by4_f32+0x13e>
 8028856:	9908      	ldr	r1, [sp, #32]
 8028858:	9802      	ldr	r0, [sp, #8]
 802885a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802885e:	00cb      	lsls	r3, r1, #3
 8028860:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028864:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028868:	9102      	str	r1, [sp, #8]
 802886a:	9904      	ldr	r1, [sp, #16]
 802886c:	4419      	add	r1, r3
 802886e:	9104      	str	r1, [sp, #16]
 8028870:	9905      	ldr	r1, [sp, #20]
 8028872:	4419      	add	r1, r3
 8028874:	9105      	str	r1, [sp, #20]
 8028876:	9907      	ldr	r1, [sp, #28]
 8028878:	449b      	add	fp, r3
 802887a:	4419      	add	r1, r3
 802887c:	449a      	add	sl, r3
 802887e:	9b06      	ldr	r3, [sp, #24]
 8028880:	9107      	str	r1, [sp, #28]
 8028882:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028886:	9306      	str	r3, [sp, #24]
 8028888:	9a04      	ldr	r2, [sp, #16]
 802888a:	9807      	ldr	r0, [sp, #28]
 802888c:	edd2 3a00 	vldr	s7, [r2]
 8028890:	ed90 4a00 	vldr	s8, [r0]
 8028894:	eddb 7a00 	vldr	s15, [fp]
 8028898:	ed9a 3a00 	vldr	s6, [sl]
 802889c:	edd2 4a01 	vldr	s9, [r2, #4]
 80288a0:	ed90 7a01 	vldr	s14, [r0, #4]
 80288a4:	ed9b 2a01 	vldr	s4, [fp, #4]
 80288a8:	edda 5a01 	vldr	s11, [sl, #4]
 80288ac:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80288b0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80288b2:	ee73 6a84 	vadd.f32	s13, s7, s8
 80288b6:	ee34 6a87 	vadd.f32	s12, s9, s14
 80288ba:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80288be:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80288c2:	ee33 5a05 	vadd.f32	s10, s6, s10
 80288c6:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80288ca:	ed82 5a00 	vstr	s10, [r2]
 80288ce:	ed9b 5a01 	vldr	s10, [fp, #4]
 80288d2:	edda 4a01 	vldr	s9, [sl, #4]
 80288d6:	ee36 5a05 	vadd.f32	s10, s12, s10
 80288da:	ee72 3a04 	vadd.f32	s7, s4, s8
 80288de:	ee35 5a24 	vadd.f32	s10, s10, s9
 80288e2:	ee77 4a67 	vsub.f32	s9, s14, s15
 80288e6:	ed82 5a01 	vstr	s10, [r2, #4]
 80288ea:	9a05      	ldr	r2, [sp, #20]
 80288ec:	ee34 5a83 	vadd.f32	s10, s9, s6
 80288f0:	edd2 1a00 	vldr	s3, [r2]
 80288f4:	edd2 2a01 	vldr	s5, [r2, #4]
 80288f8:	9a02      	ldr	r2, [sp, #8]
 80288fa:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80288fe:	ee36 6a42 	vsub.f32	s12, s12, s4
 8028902:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8028906:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802890a:	ee65 2a22 	vmul.f32	s5, s10, s5
 802890e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8028912:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8028916:	ee35 5a63 	vsub.f32	s10, s10, s7
 802891a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802891e:	edcb 2a00 	vstr	s5, [fp]
 8028922:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028926:	edd2 3a01 	vldr	s7, [r2, #4]
 802892a:	ed92 5a00 	vldr	s10, [r2]
 802892e:	9a06      	ldr	r2, [sp, #24]
 8028930:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028934:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028938:	ee66 4a85 	vmul.f32	s9, s13, s10
 802893c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028940:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028944:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028948:	ee75 6a66 	vsub.f32	s13, s10, s13
 802894c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028950:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028954:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028958:	edc0 6a01 	vstr	s13, [r0, #4]
 802895c:	ed80 6a00 	vstr	s12, [r0]
 8028960:	ed92 6a01 	vldr	s12, [r2, #4]
 8028964:	9803      	ldr	r0, [sp, #12]
 8028966:	ee77 7a43 	vsub.f32	s15, s14, s6
 802896a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802896e:	ed92 7a00 	vldr	s14, [r2]
 8028972:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028976:	ee27 7a87 	vmul.f32	s14, s15, s14
 802897a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802897e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028982:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028986:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802898a:	edca 5a01 	vstr	s11, [sl, #4]
 802898e:	edca 7a00 	vstr	s15, [sl]
 8028992:	6872      	ldr	r2, [r6, #4]
 8028994:	4621      	mov	r1, r4
 8028996:	2304      	movs	r3, #4
 8028998:	f000 f97a 	bl	8028c90 <arm_radix8_butterfly_f32>
 802899c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802899e:	6872      	ldr	r2, [r6, #4]
 80289a0:	4621      	mov	r1, r4
 80289a2:	2304      	movs	r3, #4
 80289a4:	f000 f974 	bl	8028c90 <arm_radix8_butterfly_f32>
 80289a8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80289aa:	6872      	ldr	r2, [r6, #4]
 80289ac:	4621      	mov	r1, r4
 80289ae:	2304      	movs	r3, #4
 80289b0:	f000 f96e 	bl	8028c90 <arm_radix8_butterfly_f32>
 80289b4:	9801      	ldr	r0, [sp, #4]
 80289b6:	6872      	ldr	r2, [r6, #4]
 80289b8:	4621      	mov	r1, r4
 80289ba:	2304      	movs	r3, #4
 80289bc:	b00f      	add	sp, #60	; 0x3c
 80289be:	ecbd 8b0a 	vpop	{d8-d12}
 80289c2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80289c6:	f000 b963 	b.w	8028c90 <arm_radix8_butterfly_f32>
 80289ca:	bf00      	nop

080289cc <arm_cfft_f32>:
 80289cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80289d0:	2a01      	cmp	r2, #1
 80289d2:	4606      	mov	r6, r0
 80289d4:	4617      	mov	r7, r2
 80289d6:	460c      	mov	r4, r1
 80289d8:	4698      	mov	r8, r3
 80289da:	8805      	ldrh	r5, [r0, #0]
 80289dc:	d054      	beq.n	8028a88 <arm_cfft_f32+0xbc>
 80289de:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80289e2:	d04c      	beq.n	8028a7e <arm_cfft_f32+0xb2>
 80289e4:	d916      	bls.n	8028a14 <arm_cfft_f32+0x48>
 80289e6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 80289ea:	d01a      	beq.n	8028a22 <arm_cfft_f32+0x56>
 80289ec:	d95c      	bls.n	8028aa8 <arm_cfft_f32+0xdc>
 80289ee:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80289f2:	d044      	beq.n	8028a7e <arm_cfft_f32+0xb2>
 80289f4:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 80289f8:	d105      	bne.n	8028a06 <arm_cfft_f32+0x3a>
 80289fa:	4620      	mov	r0, r4
 80289fc:	4629      	mov	r1, r5
 80289fe:	6872      	ldr	r2, [r6, #4]
 8028a00:	2301      	movs	r3, #1
 8028a02:	f000 f945 	bl	8028c90 <arm_radix8_butterfly_f32>
 8028a06:	f1b8 0f00 	cmp.w	r8, #0
 8028a0a:	d111      	bne.n	8028a30 <arm_cfft_f32+0x64>
 8028a0c:	2f01      	cmp	r7, #1
 8028a0e:	d016      	beq.n	8028a3e <arm_cfft_f32+0x72>
 8028a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a14:	2d20      	cmp	r5, #32
 8028a16:	d032      	beq.n	8028a7e <arm_cfft_f32+0xb2>
 8028a18:	d94a      	bls.n	8028ab0 <arm_cfft_f32+0xe4>
 8028a1a:	2d40      	cmp	r5, #64	; 0x40
 8028a1c:	d0ed      	beq.n	80289fa <arm_cfft_f32+0x2e>
 8028a1e:	2d80      	cmp	r5, #128	; 0x80
 8028a20:	d1f1      	bne.n	8028a06 <arm_cfft_f32+0x3a>
 8028a22:	4630      	mov	r0, r6
 8028a24:	4621      	mov	r1, r4
 8028a26:	f7ff fca1 	bl	802836c <arm_cfft_radix8by2_f32>
 8028a2a:	f1b8 0f00 	cmp.w	r8, #0
 8028a2e:	d0ed      	beq.n	8028a0c <arm_cfft_f32+0x40>
 8028a30:	4620      	mov	r0, r4
 8028a32:	89b1      	ldrh	r1, [r6, #12]
 8028a34:	68b2      	ldr	r2, [r6, #8]
 8028a36:	f7d7 fbdb 	bl	80001f0 <arm_bitreversal_32>
 8028a3a:	2f01      	cmp	r7, #1
 8028a3c:	d1e8      	bne.n	8028a10 <arm_cfft_f32+0x44>
 8028a3e:	ee07 5a90 	vmov	s15, r5
 8028a42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028a46:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028a4a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8028a4e:	2d00      	cmp	r5, #0
 8028a50:	d0de      	beq.n	8028a10 <arm_cfft_f32+0x44>
 8028a52:	f104 0108 	add.w	r1, r4, #8
 8028a56:	2300      	movs	r3, #0
 8028a58:	3301      	adds	r3, #1
 8028a5a:	429d      	cmp	r5, r3
 8028a5c:	f101 0108 	add.w	r1, r1, #8
 8028a60:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028a64:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028a68:	ee27 7a26 	vmul.f32	s14, s14, s13
 8028a6c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028a70:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028a74:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028a78:	d1ee      	bne.n	8028a58 <arm_cfft_f32+0x8c>
 8028a7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a7e:	4630      	mov	r0, r6
 8028a80:	4621      	mov	r1, r4
 8028a82:	f7ff fd45 	bl	8028510 <arm_cfft_radix8by4_f32>
 8028a86:	e7be      	b.n	8028a06 <arm_cfft_f32+0x3a>
 8028a88:	b1ad      	cbz	r5, 8028ab6 <arm_cfft_f32+0xea>
 8028a8a:	f101 030c 	add.w	r3, r1, #12
 8028a8e:	2200      	movs	r2, #0
 8028a90:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028a94:	3201      	adds	r2, #1
 8028a96:	eef1 7a67 	vneg.f32	s15, s15
 8028a9a:	4295      	cmp	r5, r2
 8028a9c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028aa0:	f103 0308 	add.w	r3, r3, #8
 8028aa4:	d1f4      	bne.n	8028a90 <arm_cfft_f32+0xc4>
 8028aa6:	e79a      	b.n	80289de <arm_cfft_f32+0x12>
 8028aa8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8028aac:	d0a5      	beq.n	80289fa <arm_cfft_f32+0x2e>
 8028aae:	e7aa      	b.n	8028a06 <arm_cfft_f32+0x3a>
 8028ab0:	2d10      	cmp	r5, #16
 8028ab2:	d0b6      	beq.n	8028a22 <arm_cfft_f32+0x56>
 8028ab4:	e7a7      	b.n	8028a06 <arm_cfft_f32+0x3a>
 8028ab6:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028aba:	d894      	bhi.n	80289e6 <arm_cfft_f32+0x1a>
 8028abc:	e7aa      	b.n	8028a14 <arm_cfft_f32+0x48>
 8028abe:	bf00      	nop

08028ac0 <arm_cmplx_mag_f32>:
 8028ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028ac4:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8028ac8:	b084      	sub	sp, #16
 8028aca:	d07f      	beq.n	8028bcc <arm_cmplx_mag_f32+0x10c>
 8028acc:	2700      	movs	r7, #0
 8028ace:	f100 0420 	add.w	r4, r0, #32
 8028ad2:	f101 0510 	add.w	r5, r1, #16
 8028ad6:	4646      	mov	r6, r8
 8028ad8:	e05a      	b.n	8028b90 <arm_cmplx_mag_f32+0xd0>
 8028ada:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028ade:	eeb4 0a40 	vcmp.f32	s0, s0
 8028ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ae6:	f040 80a4 	bne.w	8028c32 <arm_cmplx_mag_f32+0x172>
 8028aea:	ed05 0a04 	vstr	s0, [r5, #-16]
 8028aee:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8028af2:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8028af6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028afa:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028afe:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028b02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b0a:	f2c0 808f 	blt.w	8028c2c <arm_cmplx_mag_f32+0x16c>
 8028b0e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028b12:	eeb4 0a40 	vcmp.f32	s0, s0
 8028b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b1a:	f040 80af 	bne.w	8028c7c <arm_cmplx_mag_f32+0x1bc>
 8028b1e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028b22:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028b26:	ed14 0a03 	vldr	s0, [r4, #-12]
 8028b2a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028b2e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028b32:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028b36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028b3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b3e:	db72      	blt.n	8028c26 <arm_cmplx_mag_f32+0x166>
 8028b40:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028b44:	eeb4 0a40 	vcmp.f32	s0, s0
 8028b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b4c:	f040 808c 	bne.w	8028c68 <arm_cmplx_mag_f32+0x1a8>
 8028b50:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028b54:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028b58:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028b5c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028b60:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028b64:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028b68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028b6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b70:	db20      	blt.n	8028bb4 <arm_cmplx_mag_f32+0xf4>
 8028b72:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028b76:	eeb4 0a40 	vcmp.f32	s0, s0
 8028b7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b7e:	d169      	bne.n	8028c54 <arm_cmplx_mag_f32+0x194>
 8028b80:	3e01      	subs	r6, #1
 8028b82:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028b86:	f104 0420 	add.w	r4, r4, #32
 8028b8a:	f105 0510 	add.w	r5, r5, #16
 8028b8e:	d019      	beq.n	8028bc4 <arm_cmplx_mag_f32+0x104>
 8028b90:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028b94:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028b98:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028b9c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028ba0:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028ba4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bac:	da95      	bge.n	8028ada <arm_cmplx_mag_f32+0x1a>
 8028bae:	f845 7c10 	str.w	r7, [r5, #-16]
 8028bb2:	e79c      	b.n	8028aee <arm_cmplx_mag_f32+0x2e>
 8028bb4:	3e01      	subs	r6, #1
 8028bb6:	f845 7c04 	str.w	r7, [r5, #-4]
 8028bba:	f104 0420 	add.w	r4, r4, #32
 8028bbe:	f105 0510 	add.w	r5, r5, #16
 8028bc2:	d1e5      	bne.n	8028b90 <arm_cmplx_mag_f32+0xd0>
 8028bc4:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8028bc8:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8028bcc:	f012 0503 	ands.w	r5, r2, #3
 8028bd0:	d026      	beq.n	8028c20 <arm_cmplx_mag_f32+0x160>
 8028bd2:	2600      	movs	r6, #0
 8028bd4:	f100 0408 	add.w	r4, r0, #8
 8028bd8:	e00c      	b.n	8028bf4 <arm_cmplx_mag_f32+0x134>
 8028bda:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028bde:	eeb4 0a40 	vcmp.f32	s0, s0
 8028be2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028be6:	d12e      	bne.n	8028c46 <arm_cmplx_mag_f32+0x186>
 8028be8:	3d01      	subs	r5, #1
 8028bea:	ed01 0a01 	vstr	s0, [r1, #-4]
 8028bee:	f104 0408 	add.w	r4, r4, #8
 8028bf2:	d015      	beq.n	8028c20 <arm_cmplx_mag_f32+0x160>
 8028bf4:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028bf8:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028bfc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028c00:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028c04:	3104      	adds	r1, #4
 8028c06:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028c0a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c12:	dae2      	bge.n	8028bda <arm_cmplx_mag_f32+0x11a>
 8028c14:	3d01      	subs	r5, #1
 8028c16:	f841 6c04 	str.w	r6, [r1, #-4]
 8028c1a:	f104 0408 	add.w	r4, r4, #8
 8028c1e:	d1e9      	bne.n	8028bf4 <arm_cmplx_mag_f32+0x134>
 8028c20:	b004      	add	sp, #16
 8028c22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c26:	f845 7c08 	str.w	r7, [r5, #-8]
 8028c2a:	e793      	b.n	8028b54 <arm_cmplx_mag_f32+0x94>
 8028c2c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028c30:	e777      	b.n	8028b22 <arm_cmplx_mag_f32+0x62>
 8028c32:	eeb0 0a67 	vmov.f32	s0, s15
 8028c36:	9203      	str	r2, [sp, #12]
 8028c38:	9102      	str	r1, [sp, #8]
 8028c3a:	9001      	str	r0, [sp, #4]
 8028c3c:	f000 fb38 	bl	80292b0 <sqrtf>
 8028c40:	a801      	add	r0, sp, #4
 8028c42:	c807      	ldmia	r0, {r0, r1, r2}
 8028c44:	e751      	b.n	8028aea <arm_cmplx_mag_f32+0x2a>
 8028c46:	eeb0 0a67 	vmov.f32	s0, s15
 8028c4a:	9101      	str	r1, [sp, #4]
 8028c4c:	f000 fb30 	bl	80292b0 <sqrtf>
 8028c50:	9901      	ldr	r1, [sp, #4]
 8028c52:	e7c9      	b.n	8028be8 <arm_cmplx_mag_f32+0x128>
 8028c54:	eeb0 0a67 	vmov.f32	s0, s15
 8028c58:	9203      	str	r2, [sp, #12]
 8028c5a:	9102      	str	r1, [sp, #8]
 8028c5c:	9001      	str	r0, [sp, #4]
 8028c5e:	f000 fb27 	bl	80292b0 <sqrtf>
 8028c62:	a801      	add	r0, sp, #4
 8028c64:	c807      	ldmia	r0, {r0, r1, r2}
 8028c66:	e78b      	b.n	8028b80 <arm_cmplx_mag_f32+0xc0>
 8028c68:	eeb0 0a67 	vmov.f32	s0, s15
 8028c6c:	9203      	str	r2, [sp, #12]
 8028c6e:	9102      	str	r1, [sp, #8]
 8028c70:	9001      	str	r0, [sp, #4]
 8028c72:	f000 fb1d 	bl	80292b0 <sqrtf>
 8028c76:	a801      	add	r0, sp, #4
 8028c78:	c807      	ldmia	r0, {r0, r1, r2}
 8028c7a:	e769      	b.n	8028b50 <arm_cmplx_mag_f32+0x90>
 8028c7c:	eeb0 0a67 	vmov.f32	s0, s15
 8028c80:	9203      	str	r2, [sp, #12]
 8028c82:	9102      	str	r1, [sp, #8]
 8028c84:	9001      	str	r0, [sp, #4]
 8028c86:	f000 fb13 	bl	80292b0 <sqrtf>
 8028c8a:	a801      	add	r0, sp, #4
 8028c8c:	c807      	ldmia	r0, {r0, r1, r2}
 8028c8e:	e746      	b.n	8028b1e <arm_cmplx_mag_f32+0x5e>

08028c90 <arm_radix8_butterfly_f32>:
 8028c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028c94:	ed2d 8b10 	vpush	{d8-d15}
 8028c98:	b09d      	sub	sp, #116	; 0x74
 8028c9a:	461c      	mov	r4, r3
 8028c9c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8028fc0 <arm_radix8_butterfly_f32+0x330>
 8028ca0:	921a      	str	r2, [sp, #104]	; 0x68
 8028ca2:	1d03      	adds	r3, r0, #4
 8028ca4:	4682      	mov	sl, r0
 8028ca6:	4689      	mov	r9, r1
 8028ca8:	468b      	mov	fp, r1
 8028caa:	931b      	str	r3, [sp, #108]	; 0x6c
 8028cac:	9400      	str	r4, [sp, #0]
 8028cae:	469e      	mov	lr, r3
 8028cb0:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028cb4:	005a      	lsls	r2, r3, #1
 8028cb6:	18d6      	adds	r6, r2, r3
 8028cb8:	18f5      	adds	r5, r6, r3
 8028cba:	9203      	str	r2, [sp, #12]
 8028cbc:	195a      	adds	r2, r3, r5
 8028cbe:	18d0      	adds	r0, r2, r3
 8028cc0:	00df      	lsls	r7, r3, #3
 8028cc2:	1819      	adds	r1, r3, r0
 8028cc4:	463c      	mov	r4, r7
 8028cc6:	9701      	str	r7, [sp, #4]
 8028cc8:	4457      	add	r7, sl
 8028cca:	930c      	str	r3, [sp, #48]	; 0x30
 8028ccc:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028cd0:	011b      	lsls	r3, r3, #4
 8028cd2:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028cd6:	eb07 0c04 	add.w	ip, r7, r4
 8028cda:	9c00      	ldr	r4, [sp, #0]
 8028cdc:	9302      	str	r3, [sp, #8]
 8028cde:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028ce2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028ce6:	3204      	adds	r2, #4
 8028ce8:	3104      	adds	r1, #4
 8028cea:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028cee:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028cf2:	f04f 0800 	mov.w	r8, #0
 8028cf6:	eddc 7a00 	vldr	s15, [ip]
 8028cfa:	edd7 6a00 	vldr	s13, [r7]
 8028cfe:	edd6 3a00 	vldr	s7, [r6]
 8028d02:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028d06:	edd5 4a00 	vldr	s9, [r5]
 8028d0a:	ed90 2a00 	vldr	s4, [r0]
 8028d0e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028d12:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028d16:	ee77 8a82 	vadd.f32	s17, s15, s4
 8028d1a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8028d1e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028d22:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028d26:	ee31 6a84 	vadd.f32	s12, s3, s8
 8028d2a:	ee33 5a28 	vadd.f32	s10, s6, s17
 8028d2e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028d32:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028d36:	ee35 5a46 	vsub.f32	s10, s10, s12
 8028d3a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8028d3e:	ed85 5a00 	vstr	s10, [r5]
 8028d42:	ed96 1a01 	vldr	s2, [r6, #4]
 8028d46:	edd7 5a01 	vldr	s11, [r7, #4]
 8028d4a:	ed92 aa00 	vldr	s20, [r2]
 8028d4e:	ed91 6a00 	vldr	s12, [r1]
 8028d52:	ed9e 9a00 	vldr	s18, [lr]
 8028d56:	ed95 5a01 	vldr	s10, [r5, #4]
 8028d5a:	eddc 6a01 	vldr	s13, [ip, #4]
 8028d5e:	edd0 9a01 	vldr	s19, [r0, #4]
 8028d62:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028d66:	ee71 2a46 	vsub.f32	s5, s2, s12
 8028d6a:	ee75 3aca 	vsub.f32	s7, s11, s20
 8028d6e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028d72:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028d76:	ee37 7a20 	vadd.f32	s14, s14, s1
 8028d7a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8028d7e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028d82:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028d86:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8028d8a:	ee39 5a45 	vsub.f32	s10, s18, s10
 8028d8e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028d92:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028d96:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8028d9a:	ee31 6a06 	vadd.f32	s12, s2, s12
 8028d9e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028da2:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028da6:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8028daa:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8028dae:	ee33 3a68 	vsub.f32	s6, s6, s17
 8028db2:	ee36 0a88 	vadd.f32	s0, s13, s16
 8028db6:	ee75 8a86 	vadd.f32	s17, s11, s12
 8028dba:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8028dbe:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8028dc2:	ee75 6a62 	vsub.f32	s13, s10, s5
 8028dc6:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8028dca:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8028dce:	ee33 1a89 	vadd.f32	s2, s7, s18
 8028dd2:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8028dd6:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8028dda:	ee75 4a22 	vadd.f32	s9, s10, s5
 8028dde:	ee32 5a27 	vadd.f32	s10, s4, s15
 8028de2:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028de6:	ee33 8a06 	vadd.f32	s16, s6, s12
 8028dea:	ee75 2a87 	vadd.f32	s5, s11, s14
 8028dee:	ee31 9a28 	vadd.f32	s18, s2, s17
 8028df2:	ee33 6a46 	vsub.f32	s12, s6, s12
 8028df6:	ee74 0a61 	vsub.f32	s1, s8, s3
 8028dfa:	ee33 2a80 	vadd.f32	s4, s7, s0
 8028dfe:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8028e02:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8028e06:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8028e0a:	ee31 1a68 	vsub.f32	s2, s2, s17
 8028e0e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8028e12:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8028e16:	ee74 4a85 	vadd.f32	s9, s9, s10
 8028e1a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8028e1e:	44d8      	add	r8, fp
 8028e20:	45c1      	cmp	r9, r8
 8028e22:	ed8e 9a00 	vstr	s18, [lr]
 8028e26:	ed85 1a01 	vstr	s2, [r5, #4]
 8028e2a:	449e      	add	lr, r3
 8028e2c:	ed8c 8a00 	vstr	s16, [ip]
 8028e30:	441d      	add	r5, r3
 8028e32:	ed80 6a00 	vstr	s12, [r0]
 8028e36:	edcc 0a01 	vstr	s1, [ip, #4]
 8028e3a:	ed80 4a01 	vstr	s8, [r0, #4]
 8028e3e:	449c      	add	ip, r3
 8028e40:	ed87 2a00 	vstr	s4, [r7]
 8028e44:	4418      	add	r0, r3
 8028e46:	ed41 3a01 	vstr	s7, [r1, #-4]
 8028e4a:	ed42 2a01 	vstr	s5, [r2, #-4]
 8028e4e:	ed86 7a00 	vstr	s14, [r6]
 8028e52:	ed87 3a01 	vstr	s6, [r7, #4]
 8028e56:	edc1 4a00 	vstr	s9, [r1]
 8028e5a:	441f      	add	r7, r3
 8028e5c:	edc2 5a00 	vstr	s11, [r2]
 8028e60:	4419      	add	r1, r3
 8028e62:	edc6 6a01 	vstr	s13, [r6, #4]
 8028e66:	441a      	add	r2, r3
 8028e68:	441e      	add	r6, r3
 8028e6a:	f63f af44 	bhi.w	8028cf6 <arm_radix8_butterfly_f32+0x66>
 8028e6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028e70:	2907      	cmp	r1, #7
 8028e72:	4620      	mov	r0, r4
 8028e74:	f240 81e9 	bls.w	802924a <arm_radix8_butterfly_f32+0x5ba>
 8028e78:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8028e7c:	193e      	adds	r6, r7, r4
 8028e7e:	1935      	adds	r5, r6, r4
 8028e80:	9c03      	ldr	r4, [sp, #12]
 8028e82:	9000      	str	r0, [sp, #0]
 8028e84:	4622      	mov	r2, r4
 8028e86:	3201      	adds	r2, #1
 8028e88:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8028e8c:	9900      	ldr	r1, [sp, #0]
 8028e8e:	1828      	adds	r0, r5, r0
 8028e90:	eb00 0e01 	add.w	lr, r0, r1
 8028e94:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028e96:	440a      	add	r2, r1
 8028e98:	eb04 0c01 	add.w	ip, r4, r1
 8028e9c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8028ea0:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8028ea4:	9a00      	ldr	r2, [sp, #0]
 8028ea6:	940f      	str	r4, [sp, #60]	; 0x3c
 8028ea8:	00ed      	lsls	r5, r5, #3
 8028eaa:	9511      	str	r5, [sp, #68]	; 0x44
 8028eac:	00d5      	lsls	r5, r2, #3
 8028eae:	950d      	str	r5, [sp, #52]	; 0x34
 8028eb0:	9d01      	ldr	r5, [sp, #4]
 8028eb2:	3508      	adds	r5, #8
 8028eb4:	9516      	str	r5, [sp, #88]	; 0x58
 8028eb6:	9d02      	ldr	r5, [sp, #8]
 8028eb8:	3508      	adds	r5, #8
 8028eba:	0114      	lsls	r4, r2, #4
 8028ebc:	9517      	str	r5, [sp, #92]	; 0x5c
 8028ebe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028ec0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8028ec2:	940e      	str	r4, [sp, #56]	; 0x38
 8028ec4:	00c0      	lsls	r0, r0, #3
 8028ec6:	9010      	str	r0, [sp, #64]	; 0x40
 8028ec8:	18aa      	adds	r2, r5, r2
 8028eca:	9207      	str	r2, [sp, #28]
 8028ecc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028ece:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028ed0:	18aa      	adds	r2, r5, r2
 8028ed2:	9208      	str	r2, [sp, #32]
 8028ed4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028ed6:	18aa      	adds	r2, r5, r2
 8028ed8:	9209      	str	r2, [sp, #36]	; 0x24
 8028eda:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8028ede:	f10e 0204 	add.w	r2, lr, #4
 8028ee2:	920a      	str	r2, [sp, #40]	; 0x28
 8028ee4:	00c9      	lsls	r1, r1, #3
 8028ee6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028ee8:	310c      	adds	r1, #12
 8028eea:	00f6      	lsls	r6, r6, #3
 8028eec:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8028ef0:	9114      	str	r1, [sp, #80]	; 0x50
 8028ef2:	18a9      	adds	r1, r5, r2
 8028ef4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028ef6:	9612      	str	r6, [sp, #72]	; 0x48
 8028ef8:	00ff      	lsls	r7, r7, #3
 8028efa:	19ae      	adds	r6, r5, r6
 8028efc:	3008      	adds	r0, #8
 8028efe:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8028f02:	9606      	str	r6, [sp, #24]
 8028f04:	9019      	str	r0, [sp, #100]	; 0x64
 8028f06:	18aa      	adds	r2, r5, r2
 8028f08:	0164      	lsls	r4, r4, #5
 8028f0a:	19ee      	adds	r6, r5, r7
 8028f0c:	f10c 000c 	add.w	r0, ip, #12
 8028f10:	9713      	str	r7, [sp, #76]	; 0x4c
 8028f12:	9604      	str	r6, [sp, #16]
 8028f14:	9015      	str	r0, [sp, #84]	; 0x54
 8028f16:	9103      	str	r1, [sp, #12]
 8028f18:	9205      	str	r2, [sp, #20]
 8028f1a:	f104 0208 	add.w	r2, r4, #8
 8028f1e:	9218      	str	r2, [sp, #96]	; 0x60
 8028f20:	f04f 0801 	mov.w	r8, #1
 8028f24:	2200      	movs	r2, #0
 8028f26:	f102 0108 	add.w	r1, r2, #8
 8028f2a:	460f      	mov	r7, r1
 8028f2c:	910b      	str	r1, [sp, #44]	; 0x2c
 8028f2e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028f30:	188e      	adds	r6, r1, r2
 8028f32:	9916      	ldr	r1, [sp, #88]	; 0x58
 8028f34:	188d      	adds	r5, r1, r2
 8028f36:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8028f38:	188c      	adds	r4, r1, r2
 8028f3a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8028f3c:	1888      	adds	r0, r1, r2
 8028f3e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8028f40:	eb01 0c02 	add.w	ip, r1, r2
 8028f44:	9915      	ldr	r1, [sp, #84]	; 0x54
 8028f46:	440a      	add	r2, r1
 8028f48:	9903      	ldr	r1, [sp, #12]
 8028f4a:	edd1 fa00 	vldr	s31, [r1]
 8028f4e:	9905      	ldr	r1, [sp, #20]
 8028f50:	ed91 fa00 	vldr	s30, [r1]
 8028f54:	9904      	ldr	r1, [sp, #16]
 8028f56:	edd1 ea00 	vldr	s29, [r1]
 8028f5a:	9906      	ldr	r1, [sp, #24]
 8028f5c:	ed91 ea00 	vldr	s28, [r1]
 8028f60:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028f62:	edd1 da00 	vldr	s27, [r1]
 8028f66:	9908      	ldr	r1, [sp, #32]
 8028f68:	ed91 da00 	vldr	s26, [r1]
 8028f6c:	9907      	ldr	r1, [sp, #28]
 8028f6e:	edd1 ca00 	vldr	s25, [r1]
 8028f72:	9903      	ldr	r1, [sp, #12]
 8028f74:	ed91 ca01 	vldr	s24, [r1, #4]
 8028f78:	9905      	ldr	r1, [sp, #20]
 8028f7a:	edd1 ba01 	vldr	s23, [r1, #4]
 8028f7e:	9904      	ldr	r1, [sp, #16]
 8028f80:	edd1 aa01 	vldr	s21, [r1, #4]
 8028f84:	9906      	ldr	r1, [sp, #24]
 8028f86:	ed91 aa01 	vldr	s20, [r1, #4]
 8028f8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028f8c:	edd1 7a01 	vldr	s15, [r1, #4]
 8028f90:	9908      	ldr	r1, [sp, #32]
 8028f92:	edcd 7a00 	vstr	s15, [sp]
 8028f96:	edd1 7a01 	vldr	s15, [r1, #4]
 8028f9a:	9907      	ldr	r1, [sp, #28]
 8028f9c:	edcd 7a01 	vstr	s15, [sp, #4]
 8028fa0:	edd1 7a01 	vldr	s15, [r1, #4]
 8028fa4:	eb0a 0e07 	add.w	lr, sl, r7
 8028fa8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028faa:	edcd 7a02 	vstr	s15, [sp, #8]
 8028fae:	eb0c 010a 	add.w	r1, ip, sl
 8028fb2:	4456      	add	r6, sl
 8028fb4:	4455      	add	r5, sl
 8028fb6:	4454      	add	r4, sl
 8028fb8:	4450      	add	r0, sl
 8028fba:	4452      	add	r2, sl
 8028fbc:	46c4      	mov	ip, r8
 8028fbe:	e001      	b.n	8028fc4 <arm_radix8_butterfly_f32+0x334>
 8028fc0:	3f3504f3 	.word	0x3f3504f3
 8028fc4:	ed96 5a00 	vldr	s10, [r6]
 8028fc8:	ed52 9a01 	vldr	s19, [r2, #-4]
 8028fcc:	ed11 6a01 	vldr	s12, [r1, #-4]
 8028fd0:	edd0 7a00 	vldr	s15, [r0]
 8028fd4:	ed17 7a01 	vldr	s14, [r7, #-4]
 8028fd8:	edde 3a00 	vldr	s7, [lr]
 8028fdc:	ed94 3a00 	vldr	s6, [r4]
 8028fe0:	ed95 2a00 	vldr	s4, [r5]
 8028fe4:	ed9e 0a01 	vldr	s0, [lr, #4]
 8028fe8:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028fec:	ee32 1a06 	vadd.f32	s2, s4, s12
 8028ff0:	ee33 4a29 	vadd.f32	s8, s6, s19
 8028ff4:	ee77 4a87 	vadd.f32	s9, s15, s14
 8028ff8:	ee78 1a04 	vadd.f32	s3, s16, s8
 8028ffc:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029000:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029004:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029008:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802900c:	ed8e 6a00 	vstr	s12, [lr]
 8029010:	edd0 8a01 	vldr	s17, [r0, #4]
 8029014:	ed95 9a01 	vldr	s18, [r5, #4]
 8029018:	edd1 2a00 	vldr	s5, [r1]
 802901c:	ed97 7a00 	vldr	s14, [r7]
 8029020:	edd4 0a01 	vldr	s1, [r4, #4]
 8029024:	ed96 6a01 	vldr	s12, [r6, #4]
 8029028:	edd2 5a00 	vldr	s11, [r2]
 802902c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029030:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029034:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029038:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802903c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029040:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029044:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029048:	ee79 2a22 	vadd.f32	s5, s18, s5
 802904c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029050:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029054:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029058:	ee72 7a67 	vsub.f32	s15, s4, s15
 802905c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029060:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029064:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029068:	ee32 9a08 	vadd.f32	s18, s4, s16
 802906c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029070:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029074:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029078:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802907c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029080:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029084:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029088:	ee30 6a46 	vsub.f32	s12, s0, s12
 802908c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029090:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029094:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029098:	ee32 7a64 	vsub.f32	s14, s4, s9
 802909c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 80290a0:	ee36 6a68 	vsub.f32	s12, s12, s17
 80290a4:	ee73 7ae7 	vsub.f32	s15, s7, s15
 80290a8:	ee75 8a85 	vadd.f32	s17, s11, s10
 80290ac:	ee74 3a22 	vadd.f32	s7, s8, s5
 80290b0:	ee35 5ac5 	vsub.f32	s10, s11, s10
 80290b4:	ee71 6ae6 	vsub.f32	s13, s3, s13
 80290b8:	ee79 1a41 	vsub.f32	s3, s18, s2
 80290bc:	ee39 8aa8 	vadd.f32	s16, s19, s17
 80290c0:	ee76 5a43 	vsub.f32	s11, s12, s6
 80290c4:	ee74 2a62 	vsub.f32	s5, s8, s5
 80290c8:	ee72 4a24 	vadd.f32	s9, s4, s9
 80290cc:	ee30 4a60 	vsub.f32	s8, s0, s1
 80290d0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 80290d4:	ee30 0a20 	vadd.f32	s0, s0, s1
 80290d8:	ee77 9a85 	vadd.f32	s19, s15, s10
 80290dc:	ee36 6a03 	vadd.f32	s12, s12, s6
 80290e0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80290e4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 80290e8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 80290ec:	ee6f 0a23 	vmul.f32	s1, s30, s7
 80290f0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 80290f4:	ee39 1a01 	vadd.f32	s2, s18, s2
 80290f8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 80290fc:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029100:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029104:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029108:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802910c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029110:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029114:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029118:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802911c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029120:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029124:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029128:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802912c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029130:	ed86 3a00 	vstr	s6, [r6]
 8029134:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029138:	ee32 2a05 	vadd.f32	s4, s4, s10
 802913c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029140:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029144:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029148:	ee64 1a00 	vmul.f32	s3, s8, s0
 802914c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029150:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029154:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029158:	ee64 8a28 	vmul.f32	s17, s8, s17
 802915c:	ed9d 4a00 	vldr	s8, [sp]
 8029160:	edc6 6a01 	vstr	s13, [r6, #4]
 8029164:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029168:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802916c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029170:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029174:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029178:	ee74 4a84 	vadd.f32	s9, s9, s8
 802917c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029180:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029184:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029188:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802918c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029190:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029194:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029198:	ee30 0a68 	vsub.f32	s0, s0, s17
 802919c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 80291a0:	ee70 0a84 	vadd.f32	s1, s1, s8
 80291a4:	ee36 6a67 	vsub.f32	s12, s12, s15
 80291a8:	44dc      	add	ip, fp
 80291aa:	45e1      	cmp	r9, ip
 80291ac:	ed84 9a00 	vstr	s18, [r4]
 80291b0:	edc4 3a01 	vstr	s7, [r4, #4]
 80291b4:	449e      	add	lr, r3
 80291b6:	ed02 7a01 	vstr	s14, [r2, #-4]
 80291ba:	edc2 2a00 	vstr	s5, [r2]
 80291be:	441e      	add	r6, r3
 80291c0:	ed85 2a00 	vstr	s4, [r5]
 80291c4:	ed85 8a01 	vstr	s16, [r5, #4]
 80291c8:	441c      	add	r4, r3
 80291ca:	ed47 1a01 	vstr	s3, [r7, #-4]
 80291ce:	ed87 0a00 	vstr	s0, [r7]
 80291d2:	441a      	add	r2, r3
 80291d4:	ed41 4a01 	vstr	s9, [r1, #-4]
 80291d8:	edc1 9a00 	vstr	s19, [r1]
 80291dc:	441d      	add	r5, r3
 80291de:	edc0 0a00 	vstr	s1, [r0]
 80291e2:	441f      	add	r7, r3
 80291e4:	ed80 6a01 	vstr	s12, [r0, #4]
 80291e8:	4419      	add	r1, r3
 80291ea:	4418      	add	r0, r3
 80291ec:	f63f aeea 	bhi.w	8028fc4 <arm_radix8_butterfly_f32+0x334>
 80291f0:	9a03      	ldr	r2, [sp, #12]
 80291f2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80291f4:	440a      	add	r2, r1
 80291f6:	9203      	str	r2, [sp, #12]
 80291f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80291fa:	9a05      	ldr	r2, [sp, #20]
 80291fc:	440a      	add	r2, r1
 80291fe:	9205      	str	r2, [sp, #20]
 8029200:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029202:	9a04      	ldr	r2, [sp, #16]
 8029204:	440a      	add	r2, r1
 8029206:	9204      	str	r2, [sp, #16]
 8029208:	9912      	ldr	r1, [sp, #72]	; 0x48
 802920a:	9a06      	ldr	r2, [sp, #24]
 802920c:	440a      	add	r2, r1
 802920e:	9206      	str	r2, [sp, #24]
 8029210:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029212:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029214:	440a      	add	r2, r1
 8029216:	9209      	str	r2, [sp, #36]	; 0x24
 8029218:	9910      	ldr	r1, [sp, #64]	; 0x40
 802921a:	9a08      	ldr	r2, [sp, #32]
 802921c:	440a      	add	r2, r1
 802921e:	9208      	str	r2, [sp, #32]
 8029220:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029222:	9a07      	ldr	r2, [sp, #28]
 8029224:	440a      	add	r2, r1
 8029226:	9207      	str	r2, [sp, #28]
 8029228:	990c      	ldr	r1, [sp, #48]	; 0x30
 802922a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802922c:	f108 0801 	add.w	r8, r8, #1
 8029230:	3208      	adds	r2, #8
 8029232:	4588      	cmp	r8, r1
 8029234:	920a      	str	r2, [sp, #40]	; 0x28
 8029236:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029238:	f47f ae75 	bne.w	8028f26 <arm_radix8_butterfly_f32+0x296>
 802923c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029240:	9300      	str	r3, [sp, #0]
 8029242:	46c3      	mov	fp, r8
 8029244:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029248:	e532      	b.n	8028cb0 <arm_radix8_butterfly_f32+0x20>
 802924a:	b01d      	add	sp, #116	; 0x74
 802924c:	ecbd 8b10 	vpop	{d8-d15}
 8029250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029254 <__aeabi_atexit>:
 8029254:	460b      	mov	r3, r1
 8029256:	4601      	mov	r1, r0
 8029258:	4618      	mov	r0, r3
 802925a:	f000 bef3 	b.w	802a044 <__cxa_atexit>

0802925e <_ZdlPvj>:
 802925e:	f000 b812 	b.w	8029286 <_ZdlPv>

08029262 <__cxa_guard_acquire>:
 8029262:	6803      	ldr	r3, [r0, #0]
 8029264:	07db      	lsls	r3, r3, #31
 8029266:	d406      	bmi.n	8029276 <__cxa_guard_acquire+0x14>
 8029268:	7843      	ldrb	r3, [r0, #1]
 802926a:	b103      	cbz	r3, 802926e <__cxa_guard_acquire+0xc>
 802926c:	deff      	udf	#255	; 0xff
 802926e:	2301      	movs	r3, #1
 8029270:	7043      	strb	r3, [r0, #1]
 8029272:	4618      	mov	r0, r3
 8029274:	4770      	bx	lr
 8029276:	2000      	movs	r0, #0
 8029278:	4770      	bx	lr

0802927a <__cxa_guard_release>:
 802927a:	2301      	movs	r3, #1
 802927c:	6003      	str	r3, [r0, #0]
 802927e:	4770      	bx	lr

08029280 <__cxa_pure_virtual>:
 8029280:	b508      	push	{r3, lr}
 8029282:	f000 f80f 	bl	80292a4 <_ZSt9terminatev>

08029286 <_ZdlPv>:
 8029286:	f000 be29 	b.w	8029edc <free>

0802928a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802928a:	b508      	push	{r3, lr}
 802928c:	4780      	blx	r0
 802928e:	f000 fdf1 	bl	8029e74 <abort>
	...

08029294 <_ZSt13get_terminatev>:
 8029294:	4b02      	ldr	r3, [pc, #8]	; (80292a0 <_ZSt13get_terminatev+0xc>)
 8029296:	6818      	ldr	r0, [r3, #0]
 8029298:	f3bf 8f5b 	dmb	ish
 802929c:	4770      	bx	lr
 802929e:	bf00      	nop
 80292a0:	20000104 	.word	0x20000104

080292a4 <_ZSt9terminatev>:
 80292a4:	b508      	push	{r3, lr}
 80292a6:	f7ff fff5 	bl	8029294 <_ZSt13get_terminatev>
 80292aa:	f7ff ffee 	bl	802928a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080292b0 <sqrtf>:
 80292b0:	b508      	push	{r3, lr}
 80292b2:	ed2d 8b02 	vpush	{d8}
 80292b6:	eeb0 8a40 	vmov.f32	s16, s0
 80292ba:	f000 f8a1 	bl	8029400 <__ieee754_sqrtf>
 80292be:	eeb4 8a48 	vcmp.f32	s16, s16
 80292c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292c6:	d60c      	bvs.n	80292e2 <sqrtf+0x32>
 80292c8:	eddf 8a07 	vldr	s17, [pc, #28]	; 80292e8 <sqrtf+0x38>
 80292cc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80292d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292d4:	d505      	bpl.n	80292e2 <sqrtf+0x32>
 80292d6:	f001 f8d3 	bl	802a480 <__errno>
 80292da:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80292de:	2321      	movs	r3, #33	; 0x21
 80292e0:	6003      	str	r3, [r0, #0]
 80292e2:	ecbd 8b02 	vpop	{d8}
 80292e6:	bd08      	pop	{r3, pc}
 80292e8:	00000000 	.word	0x00000000

080292ec <cosf>:
 80292ec:	ee10 3a10 	vmov	r3, s0
 80292f0:	b507      	push	{r0, r1, r2, lr}
 80292f2:	4a1e      	ldr	r2, [pc, #120]	; (802936c <cosf+0x80>)
 80292f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80292f8:	4293      	cmp	r3, r2
 80292fa:	dc06      	bgt.n	802930a <cosf+0x1e>
 80292fc:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029370 <cosf+0x84>
 8029300:	b003      	add	sp, #12
 8029302:	f85d eb04 	ldr.w	lr, [sp], #4
 8029306:	f000 b903 	b.w	8029510 <__kernel_cosf>
 802930a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802930e:	db04      	blt.n	802931a <cosf+0x2e>
 8029310:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029314:	b003      	add	sp, #12
 8029316:	f85d fb04 	ldr.w	pc, [sp], #4
 802931a:	4668      	mov	r0, sp
 802931c:	f000 f99e 	bl	802965c <__ieee754_rem_pio2f>
 8029320:	f000 0003 	and.w	r0, r0, #3
 8029324:	2801      	cmp	r0, #1
 8029326:	d009      	beq.n	802933c <cosf+0x50>
 8029328:	2802      	cmp	r0, #2
 802932a:	d010      	beq.n	802934e <cosf+0x62>
 802932c:	b9b0      	cbnz	r0, 802935c <cosf+0x70>
 802932e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029332:	ed9d 0a00 	vldr	s0, [sp]
 8029336:	f000 f8eb 	bl	8029510 <__kernel_cosf>
 802933a:	e7eb      	b.n	8029314 <cosf+0x28>
 802933c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029340:	ed9d 0a00 	vldr	s0, [sp]
 8029344:	f000 f942 	bl	80295cc <__kernel_sinf>
 8029348:	eeb1 0a40 	vneg.f32	s0, s0
 802934c:	e7e2      	b.n	8029314 <cosf+0x28>
 802934e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029352:	ed9d 0a00 	vldr	s0, [sp]
 8029356:	f000 f8db 	bl	8029510 <__kernel_cosf>
 802935a:	e7f5      	b.n	8029348 <cosf+0x5c>
 802935c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029360:	ed9d 0a00 	vldr	s0, [sp]
 8029364:	2001      	movs	r0, #1
 8029366:	f000 f931 	bl	80295cc <__kernel_sinf>
 802936a:	e7d3      	b.n	8029314 <cosf+0x28>
 802936c:	3f490fd8 	.word	0x3f490fd8
 8029370:	00000000 	.word	0x00000000

08029374 <sinf>:
 8029374:	ee10 3a10 	vmov	r3, s0
 8029378:	b507      	push	{r0, r1, r2, lr}
 802937a:	4a1f      	ldr	r2, [pc, #124]	; (80293f8 <sinf+0x84>)
 802937c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029380:	4293      	cmp	r3, r2
 8029382:	dc07      	bgt.n	8029394 <sinf+0x20>
 8029384:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80293fc <sinf+0x88>
 8029388:	2000      	movs	r0, #0
 802938a:	b003      	add	sp, #12
 802938c:	f85d eb04 	ldr.w	lr, [sp], #4
 8029390:	f000 b91c 	b.w	80295cc <__kernel_sinf>
 8029394:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029398:	db04      	blt.n	80293a4 <sinf+0x30>
 802939a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802939e:	b003      	add	sp, #12
 80293a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80293a4:	4668      	mov	r0, sp
 80293a6:	f000 f959 	bl	802965c <__ieee754_rem_pio2f>
 80293aa:	f000 0003 	and.w	r0, r0, #3
 80293ae:	2801      	cmp	r0, #1
 80293b0:	d00a      	beq.n	80293c8 <sinf+0x54>
 80293b2:	2802      	cmp	r0, #2
 80293b4:	d00f      	beq.n	80293d6 <sinf+0x62>
 80293b6:	b9c0      	cbnz	r0, 80293ea <sinf+0x76>
 80293b8:	eddd 0a01 	vldr	s1, [sp, #4]
 80293bc:	ed9d 0a00 	vldr	s0, [sp]
 80293c0:	2001      	movs	r0, #1
 80293c2:	f000 f903 	bl	80295cc <__kernel_sinf>
 80293c6:	e7ea      	b.n	802939e <sinf+0x2a>
 80293c8:	eddd 0a01 	vldr	s1, [sp, #4]
 80293cc:	ed9d 0a00 	vldr	s0, [sp]
 80293d0:	f000 f89e 	bl	8029510 <__kernel_cosf>
 80293d4:	e7e3      	b.n	802939e <sinf+0x2a>
 80293d6:	eddd 0a01 	vldr	s1, [sp, #4]
 80293da:	ed9d 0a00 	vldr	s0, [sp]
 80293de:	2001      	movs	r0, #1
 80293e0:	f000 f8f4 	bl	80295cc <__kernel_sinf>
 80293e4:	eeb1 0a40 	vneg.f32	s0, s0
 80293e8:	e7d9      	b.n	802939e <sinf+0x2a>
 80293ea:	eddd 0a01 	vldr	s1, [sp, #4]
 80293ee:	ed9d 0a00 	vldr	s0, [sp]
 80293f2:	f000 f88d 	bl	8029510 <__kernel_cosf>
 80293f6:	e7f5      	b.n	80293e4 <sinf+0x70>
 80293f8:	3f490fd8 	.word	0x3f490fd8
 80293fc:	00000000 	.word	0x00000000

08029400 <__ieee754_sqrtf>:
 8029400:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029404:	4770      	bx	lr
	...

08029408 <ceilf>:
 8029408:	ee10 3a10 	vmov	r3, s0
 802940c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029410:	3a7f      	subs	r2, #127	; 0x7f
 8029412:	2a16      	cmp	r2, #22
 8029414:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029418:	dc2a      	bgt.n	8029470 <ceilf+0x68>
 802941a:	2a00      	cmp	r2, #0
 802941c:	da11      	bge.n	8029442 <ceilf+0x3a>
 802941e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029484 <ceilf+0x7c>
 8029422:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029426:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802942a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802942e:	dd05      	ble.n	802943c <ceilf+0x34>
 8029430:	2b00      	cmp	r3, #0
 8029432:	db23      	blt.n	802947c <ceilf+0x74>
 8029434:	2900      	cmp	r1, #0
 8029436:	bf18      	it	ne
 8029438:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802943c:	ee00 3a10 	vmov	s0, r3
 8029440:	4770      	bx	lr
 8029442:	4911      	ldr	r1, [pc, #68]	; (8029488 <ceilf+0x80>)
 8029444:	4111      	asrs	r1, r2
 8029446:	420b      	tst	r3, r1
 8029448:	d0fa      	beq.n	8029440 <ceilf+0x38>
 802944a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029484 <ceilf+0x7c>
 802944e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029452:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802945a:	ddef      	ble.n	802943c <ceilf+0x34>
 802945c:	2b00      	cmp	r3, #0
 802945e:	bfc2      	ittt	gt
 8029460:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8029464:	fa40 f202 	asrgt.w	r2, r0, r2
 8029468:	189b      	addgt	r3, r3, r2
 802946a:	ea23 0301 	bic.w	r3, r3, r1
 802946e:	e7e5      	b.n	802943c <ceilf+0x34>
 8029470:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029474:	d3e4      	bcc.n	8029440 <ceilf+0x38>
 8029476:	ee30 0a00 	vadd.f32	s0, s0, s0
 802947a:	4770      	bx	lr
 802947c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029480:	e7dc      	b.n	802943c <ceilf+0x34>
 8029482:	bf00      	nop
 8029484:	7149f2ca 	.word	0x7149f2ca
 8029488:	007fffff 	.word	0x007fffff

0802948c <floorf>:
 802948c:	ee10 3a10 	vmov	r3, s0
 8029490:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029494:	3a7f      	subs	r2, #127	; 0x7f
 8029496:	2a16      	cmp	r2, #22
 8029498:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802949c:	dc2a      	bgt.n	80294f4 <floorf+0x68>
 802949e:	2a00      	cmp	r2, #0
 80294a0:	da11      	bge.n	80294c6 <floorf+0x3a>
 80294a2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8029504 <floorf+0x78>
 80294a6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80294aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80294ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294b2:	dd05      	ble.n	80294c0 <floorf+0x34>
 80294b4:	2b00      	cmp	r3, #0
 80294b6:	da23      	bge.n	8029500 <floorf+0x74>
 80294b8:	4a13      	ldr	r2, [pc, #76]	; (8029508 <floorf+0x7c>)
 80294ba:	2900      	cmp	r1, #0
 80294bc:	bf18      	it	ne
 80294be:	4613      	movne	r3, r2
 80294c0:	ee00 3a10 	vmov	s0, r3
 80294c4:	4770      	bx	lr
 80294c6:	4911      	ldr	r1, [pc, #68]	; (802950c <floorf+0x80>)
 80294c8:	4111      	asrs	r1, r2
 80294ca:	420b      	tst	r3, r1
 80294cc:	d0fa      	beq.n	80294c4 <floorf+0x38>
 80294ce:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8029504 <floorf+0x78>
 80294d2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80294d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80294da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294de:	ddef      	ble.n	80294c0 <floorf+0x34>
 80294e0:	2b00      	cmp	r3, #0
 80294e2:	bfbe      	ittt	lt
 80294e4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80294e8:	fa40 f202 	asrlt.w	r2, r0, r2
 80294ec:	189b      	addlt	r3, r3, r2
 80294ee:	ea23 0301 	bic.w	r3, r3, r1
 80294f2:	e7e5      	b.n	80294c0 <floorf+0x34>
 80294f4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80294f8:	d3e4      	bcc.n	80294c4 <floorf+0x38>
 80294fa:	ee30 0a00 	vadd.f32	s0, s0, s0
 80294fe:	4770      	bx	lr
 8029500:	2300      	movs	r3, #0
 8029502:	e7dd      	b.n	80294c0 <floorf+0x34>
 8029504:	7149f2ca 	.word	0x7149f2ca
 8029508:	bf800000 	.word	0xbf800000
 802950c:	007fffff 	.word	0x007fffff

08029510 <__kernel_cosf>:
 8029510:	ee10 3a10 	vmov	r3, s0
 8029514:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029518:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802951c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029520:	da05      	bge.n	802952e <__kernel_cosf+0x1e>
 8029522:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029526:	ee17 2a90 	vmov	r2, s15
 802952a:	2a00      	cmp	r2, #0
 802952c:	d03b      	beq.n	80295a6 <__kernel_cosf+0x96>
 802952e:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029532:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80295ac <__kernel_cosf+0x9c>
 8029536:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 80295b0 <__kernel_cosf+0xa0>
 802953a:	4a1e      	ldr	r2, [pc, #120]	; (80295b4 <__kernel_cosf+0xa4>)
 802953c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029540:	4293      	cmp	r3, r2
 8029542:	eddf 7a1d 	vldr	s15, [pc, #116]	; 80295b8 <__kernel_cosf+0xa8>
 8029546:	eee6 7a07 	vfma.f32	s15, s12, s14
 802954a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 80295bc <__kernel_cosf+0xac>
 802954e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029552:	eddf 7a1b 	vldr	s15, [pc, #108]	; 80295c0 <__kernel_cosf+0xb0>
 8029556:	eee6 7a07 	vfma.f32	s15, s12, s14
 802955a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80295c4 <__kernel_cosf+0xb4>
 802955e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029562:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8029566:	ee26 6a07 	vmul.f32	s12, s12, s14
 802956a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802956e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029572:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029576:	dc04      	bgt.n	8029582 <__kernel_cosf+0x72>
 8029578:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802957c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8029580:	4770      	bx	lr
 8029582:	4a11      	ldr	r2, [pc, #68]	; (80295c8 <__kernel_cosf+0xb8>)
 8029584:	4293      	cmp	r3, r2
 8029586:	bfda      	itte	le
 8029588:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802958c:	ee07 3a10 	vmovle	s14, r3
 8029590:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8029594:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029598:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802959c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80295a0:	ee30 0a67 	vsub.f32	s0, s0, s15
 80295a4:	4770      	bx	lr
 80295a6:	eeb0 0a66 	vmov.f32	s0, s13
 80295aa:	4770      	bx	lr
 80295ac:	ad47d74e 	.word	0xad47d74e
 80295b0:	310f74f6 	.word	0x310f74f6
 80295b4:	3e999999 	.word	0x3e999999
 80295b8:	b493f27c 	.word	0xb493f27c
 80295bc:	37d00d01 	.word	0x37d00d01
 80295c0:	bab60b61 	.word	0xbab60b61
 80295c4:	3d2aaaab 	.word	0x3d2aaaab
 80295c8:	3f480000 	.word	0x3f480000

080295cc <__kernel_sinf>:
 80295cc:	ee10 3a10 	vmov	r3, s0
 80295d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80295d4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80295d8:	da04      	bge.n	80295e4 <__kernel_sinf+0x18>
 80295da:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80295de:	ee17 3a90 	vmov	r3, s15
 80295e2:	b35b      	cbz	r3, 802963c <__kernel_sinf+0x70>
 80295e4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80295e8:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029640 <__kernel_sinf+0x74>
 80295ec:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029644 <__kernel_sinf+0x78>
 80295f0:	eea7 6a27 	vfma.f32	s12, s14, s15
 80295f4:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029648 <__kernel_sinf+0x7c>
 80295f8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80295fc:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802964c <__kernel_sinf+0x80>
 8029600:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029604:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029650 <__kernel_sinf+0x84>
 8029608:	ee60 6a07 	vmul.f32	s13, s0, s14
 802960c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029610:	b930      	cbnz	r0, 8029620 <__kernel_sinf+0x54>
 8029612:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029654 <__kernel_sinf+0x88>
 8029616:	eea7 6a27 	vfma.f32	s12, s14, s15
 802961a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802961e:	4770      	bx	lr
 8029620:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029624:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029628:	eee0 7a86 	vfma.f32	s15, s1, s12
 802962c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029630:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029658 <__kernel_sinf+0x8c>
 8029634:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029638:	ee30 0a60 	vsub.f32	s0, s0, s1
 802963c:	4770      	bx	lr
 802963e:	bf00      	nop
 8029640:	2f2ec9d3 	.word	0x2f2ec9d3
 8029644:	b2d72f34 	.word	0xb2d72f34
 8029648:	3638ef1b 	.word	0x3638ef1b
 802964c:	b9500d01 	.word	0xb9500d01
 8029650:	3c088889 	.word	0x3c088889
 8029654:	be2aaaab 	.word	0xbe2aaaab
 8029658:	3e2aaaab 	.word	0x3e2aaaab

0802965c <__ieee754_rem_pio2f>:
 802965c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802965e:	ee10 6a10 	vmov	r6, s0
 8029662:	4b86      	ldr	r3, [pc, #536]	; (802987c <__ieee754_rem_pio2f+0x220>)
 8029664:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029668:	429d      	cmp	r5, r3
 802966a:	b087      	sub	sp, #28
 802966c:	4604      	mov	r4, r0
 802966e:	dc05      	bgt.n	802967c <__ieee754_rem_pio2f+0x20>
 8029670:	2300      	movs	r3, #0
 8029672:	ed80 0a00 	vstr	s0, [r0]
 8029676:	6043      	str	r3, [r0, #4]
 8029678:	2000      	movs	r0, #0
 802967a:	e020      	b.n	80296be <__ieee754_rem_pio2f+0x62>
 802967c:	4b80      	ldr	r3, [pc, #512]	; (8029880 <__ieee754_rem_pio2f+0x224>)
 802967e:	429d      	cmp	r5, r3
 8029680:	dc38      	bgt.n	80296f4 <__ieee754_rem_pio2f+0x98>
 8029682:	2e00      	cmp	r6, #0
 8029684:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029884 <__ieee754_rem_pio2f+0x228>
 8029688:	4b7f      	ldr	r3, [pc, #508]	; (8029888 <__ieee754_rem_pio2f+0x22c>)
 802968a:	f025 050f 	bic.w	r5, r5, #15
 802968e:	dd18      	ble.n	80296c2 <__ieee754_rem_pio2f+0x66>
 8029690:	429d      	cmp	r5, r3
 8029692:	ee70 7a47 	vsub.f32	s15, s0, s14
 8029696:	bf09      	itett	eq
 8029698:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802988c <__ieee754_rem_pio2f+0x230>
 802969c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029890 <__ieee754_rem_pio2f+0x234>
 80296a0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80296a4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029894 <__ieee754_rem_pio2f+0x238>
 80296a8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80296ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80296b0:	edc0 6a00 	vstr	s13, [r0]
 80296b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80296b8:	edc0 7a01 	vstr	s15, [r0, #4]
 80296bc:	2001      	movs	r0, #1
 80296be:	b007      	add	sp, #28
 80296c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80296c2:	429d      	cmp	r5, r3
 80296c4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80296c8:	bf09      	itett	eq
 80296ca:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802988c <__ieee754_rem_pio2f+0x230>
 80296ce:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029890 <__ieee754_rem_pio2f+0x234>
 80296d2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80296d6:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029894 <__ieee754_rem_pio2f+0x238>
 80296da:	ee77 6a87 	vadd.f32	s13, s15, s14
 80296de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80296e2:	edc0 6a00 	vstr	s13, [r0]
 80296e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80296ea:	edc0 7a01 	vstr	s15, [r0, #4]
 80296ee:	f04f 30ff 	mov.w	r0, #4294967295
 80296f2:	e7e4      	b.n	80296be <__ieee754_rem_pio2f+0x62>
 80296f4:	4b68      	ldr	r3, [pc, #416]	; (8029898 <__ieee754_rem_pio2f+0x23c>)
 80296f6:	429d      	cmp	r5, r3
 80296f8:	dc71      	bgt.n	80297de <__ieee754_rem_pio2f+0x182>
 80296fa:	f000 f8db 	bl	80298b4 <fabsf>
 80296fe:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802989c <__ieee754_rem_pio2f+0x240>
 8029702:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029706:	eee0 7a07 	vfma.f32	s15, s0, s14
 802970a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802970e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029712:	ee17 0a90 	vmov	r0, s15
 8029716:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029884 <__ieee754_rem_pio2f+0x228>
 802971a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802971e:	281f      	cmp	r0, #31
 8029720:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029890 <__ieee754_rem_pio2f+0x234>
 8029724:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029728:	eeb1 6a47 	vneg.f32	s12, s14
 802972c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029730:	ee16 2a90 	vmov	r2, s13
 8029734:	dc1c      	bgt.n	8029770 <__ieee754_rem_pio2f+0x114>
 8029736:	495a      	ldr	r1, [pc, #360]	; (80298a0 <__ieee754_rem_pio2f+0x244>)
 8029738:	1e47      	subs	r7, r0, #1
 802973a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802973e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029742:	428b      	cmp	r3, r1
 8029744:	d014      	beq.n	8029770 <__ieee754_rem_pio2f+0x114>
 8029746:	6022      	str	r2, [r4, #0]
 8029748:	ed94 7a00 	vldr	s14, [r4]
 802974c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029750:	2e00      	cmp	r6, #0
 8029752:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029756:	ed84 0a01 	vstr	s0, [r4, #4]
 802975a:	dab0      	bge.n	80296be <__ieee754_rem_pio2f+0x62>
 802975c:	eeb1 7a47 	vneg.f32	s14, s14
 8029760:	eeb1 0a40 	vneg.f32	s0, s0
 8029764:	ed84 7a00 	vstr	s14, [r4]
 8029768:	ed84 0a01 	vstr	s0, [r4, #4]
 802976c:	4240      	negs	r0, r0
 802976e:	e7a6      	b.n	80296be <__ieee754_rem_pio2f+0x62>
 8029770:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029774:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8029778:	2908      	cmp	r1, #8
 802977a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802977e:	dde2      	ble.n	8029746 <__ieee754_rem_pio2f+0xea>
 8029780:	eddf 5a42 	vldr	s11, [pc, #264]	; 802988c <__ieee754_rem_pio2f+0x230>
 8029784:	eef0 6a40 	vmov.f32	s13, s0
 8029788:	eee6 6a25 	vfma.f32	s13, s12, s11
 802978c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029790:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029794:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029894 <__ieee754_rem_pio2f+0x238>
 8029798:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802979c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80297a0:	ee15 2a90 	vmov	r2, s11
 80297a4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80297a8:	1a5b      	subs	r3, r3, r1
 80297aa:	2b19      	cmp	r3, #25
 80297ac:	dc04      	bgt.n	80297b8 <__ieee754_rem_pio2f+0x15c>
 80297ae:	edc4 5a00 	vstr	s11, [r4]
 80297b2:	eeb0 0a66 	vmov.f32	s0, s13
 80297b6:	e7c7      	b.n	8029748 <__ieee754_rem_pio2f+0xec>
 80297b8:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80298a4 <__ieee754_rem_pio2f+0x248>
 80297bc:	eeb0 0a66 	vmov.f32	s0, s13
 80297c0:	eea6 0a25 	vfma.f32	s0, s12, s11
 80297c4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80297c8:	eddf 6a37 	vldr	s13, [pc, #220]	; 80298a8 <__ieee754_rem_pio2f+0x24c>
 80297cc:	eee6 7a25 	vfma.f32	s15, s12, s11
 80297d0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80297d4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80297d8:	ed84 7a00 	vstr	s14, [r4]
 80297dc:	e7b4      	b.n	8029748 <__ieee754_rem_pio2f+0xec>
 80297de:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80297e2:	db06      	blt.n	80297f2 <__ieee754_rem_pio2f+0x196>
 80297e4:	ee70 7a40 	vsub.f32	s15, s0, s0
 80297e8:	edc0 7a01 	vstr	s15, [r0, #4]
 80297ec:	edc0 7a00 	vstr	s15, [r0]
 80297f0:	e742      	b.n	8029678 <__ieee754_rem_pio2f+0x1c>
 80297f2:	15ea      	asrs	r2, r5, #23
 80297f4:	3a86      	subs	r2, #134	; 0x86
 80297f6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80297fa:	ee07 3a90 	vmov	s15, r3
 80297fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029802:	eddf 6a2a 	vldr	s13, [pc, #168]	; 80298ac <__ieee754_rem_pio2f+0x250>
 8029806:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802980a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802980e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029812:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029816:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802981a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802981e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029822:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029826:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802982a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802982e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029832:	edcd 7a05 	vstr	s15, [sp, #20]
 8029836:	d11e      	bne.n	8029876 <__ieee754_rem_pio2f+0x21a>
 8029838:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802983c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029840:	bf14      	ite	ne
 8029842:	2302      	movne	r3, #2
 8029844:	2301      	moveq	r3, #1
 8029846:	491a      	ldr	r1, [pc, #104]	; (80298b0 <__ieee754_rem_pio2f+0x254>)
 8029848:	9101      	str	r1, [sp, #4]
 802984a:	2102      	movs	r1, #2
 802984c:	9100      	str	r1, [sp, #0]
 802984e:	a803      	add	r0, sp, #12
 8029850:	4621      	mov	r1, r4
 8029852:	f000 f89d 	bl	8029990 <__kernel_rem_pio2f>
 8029856:	2e00      	cmp	r6, #0
 8029858:	f6bf af31 	bge.w	80296be <__ieee754_rem_pio2f+0x62>
 802985c:	edd4 7a00 	vldr	s15, [r4]
 8029860:	eef1 7a67 	vneg.f32	s15, s15
 8029864:	edc4 7a00 	vstr	s15, [r4]
 8029868:	edd4 7a01 	vldr	s15, [r4, #4]
 802986c:	eef1 7a67 	vneg.f32	s15, s15
 8029870:	edc4 7a01 	vstr	s15, [r4, #4]
 8029874:	e77a      	b.n	802976c <__ieee754_rem_pio2f+0x110>
 8029876:	2303      	movs	r3, #3
 8029878:	e7e5      	b.n	8029846 <__ieee754_rem_pio2f+0x1ea>
 802987a:	bf00      	nop
 802987c:	3f490fd8 	.word	0x3f490fd8
 8029880:	4016cbe3 	.word	0x4016cbe3
 8029884:	3fc90f80 	.word	0x3fc90f80
 8029888:	3fc90fd0 	.word	0x3fc90fd0
 802988c:	37354400 	.word	0x37354400
 8029890:	37354443 	.word	0x37354443
 8029894:	2e85a308 	.word	0x2e85a308
 8029898:	43490f80 	.word	0x43490f80
 802989c:	3f22f984 	.word	0x3f22f984
 80298a0:	080420b8 	.word	0x080420b8
 80298a4:	2e85a300 	.word	0x2e85a300
 80298a8:	248d3132 	.word	0x248d3132
 80298ac:	43800000 	.word	0x43800000
 80298b0:	08042138 	.word	0x08042138

080298b4 <fabsf>:
 80298b4:	ee10 3a10 	vmov	r3, s0
 80298b8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80298bc:	ee00 3a10 	vmov	s0, r3
 80298c0:	4770      	bx	lr
	...

080298c4 <scalbnf>:
 80298c4:	ee10 3a10 	vmov	r3, s0
 80298c8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80298cc:	d02b      	beq.n	8029926 <scalbnf+0x62>
 80298ce:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80298d2:	d302      	bcc.n	80298da <scalbnf+0x16>
 80298d4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80298d8:	4770      	bx	lr
 80298da:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80298de:	d123      	bne.n	8029928 <scalbnf+0x64>
 80298e0:	4b24      	ldr	r3, [pc, #144]	; (8029974 <scalbnf+0xb0>)
 80298e2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029978 <scalbnf+0xb4>
 80298e6:	4298      	cmp	r0, r3
 80298e8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80298ec:	db17      	blt.n	802991e <scalbnf+0x5a>
 80298ee:	ee10 3a10 	vmov	r3, s0
 80298f2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80298f6:	3a19      	subs	r2, #25
 80298f8:	f24c 3150 	movw	r1, #50000	; 0xc350
 80298fc:	4288      	cmp	r0, r1
 80298fe:	dd15      	ble.n	802992c <scalbnf+0x68>
 8029900:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802997c <scalbnf+0xb8>
 8029904:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029980 <scalbnf+0xbc>
 8029908:	ee10 3a10 	vmov	r3, s0
 802990c:	eeb0 7a67 	vmov.f32	s14, s15
 8029910:	2b00      	cmp	r3, #0
 8029912:	bfb8      	it	lt
 8029914:	eef0 7a66 	vmovlt.f32	s15, s13
 8029918:	ee27 0a87 	vmul.f32	s0, s15, s14
 802991c:	4770      	bx	lr
 802991e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029984 <scalbnf+0xc0>
 8029922:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029926:	4770      	bx	lr
 8029928:	0dd2      	lsrs	r2, r2, #23
 802992a:	e7e5      	b.n	80298f8 <scalbnf+0x34>
 802992c:	4410      	add	r0, r2
 802992e:	28fe      	cmp	r0, #254	; 0xfe
 8029930:	dce6      	bgt.n	8029900 <scalbnf+0x3c>
 8029932:	2800      	cmp	r0, #0
 8029934:	dd06      	ble.n	8029944 <scalbnf+0x80>
 8029936:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802993a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802993e:	ee00 3a10 	vmov	s0, r3
 8029942:	4770      	bx	lr
 8029944:	f110 0f16 	cmn.w	r0, #22
 8029948:	da09      	bge.n	802995e <scalbnf+0x9a>
 802994a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029984 <scalbnf+0xc0>
 802994e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029988 <scalbnf+0xc4>
 8029952:	ee10 3a10 	vmov	r3, s0
 8029956:	eeb0 7a67 	vmov.f32	s14, s15
 802995a:	2b00      	cmp	r3, #0
 802995c:	e7d9      	b.n	8029912 <scalbnf+0x4e>
 802995e:	3019      	adds	r0, #25
 8029960:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029964:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029968:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802998c <scalbnf+0xc8>
 802996c:	ee07 3a90 	vmov	s15, r3
 8029970:	e7d7      	b.n	8029922 <scalbnf+0x5e>
 8029972:	bf00      	nop
 8029974:	ffff3cb0 	.word	0xffff3cb0
 8029978:	4c000000 	.word	0x4c000000
 802997c:	7149f2ca 	.word	0x7149f2ca
 8029980:	f149f2ca 	.word	0xf149f2ca
 8029984:	0da24260 	.word	0x0da24260
 8029988:	8da24260 	.word	0x8da24260
 802998c:	33000000 	.word	0x33000000

08029990 <__kernel_rem_pio2f>:
 8029990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029994:	ed2d 8b04 	vpush	{d8-d9}
 8029998:	b0d9      	sub	sp, #356	; 0x164
 802999a:	4688      	mov	r8, r1
 802999c:	9002      	str	r0, [sp, #8]
 802999e:	49b8      	ldr	r1, [pc, #736]	; (8029c80 <__kernel_rem_pio2f+0x2f0>)
 80299a0:	9866      	ldr	r0, [sp, #408]	; 0x198
 80299a2:	9301      	str	r3, [sp, #4]
 80299a4:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 80299a8:	9901      	ldr	r1, [sp, #4]
 80299aa:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 80299ac:	f101 3bff 	add.w	fp, r1, #4294967295
 80299b0:	1d11      	adds	r1, r2, #4
 80299b2:	db25      	blt.n	8029a00 <__kernel_rem_pio2f+0x70>
 80299b4:	1ed0      	subs	r0, r2, #3
 80299b6:	bf48      	it	mi
 80299b8:	1d10      	addmi	r0, r2, #4
 80299ba:	10c0      	asrs	r0, r0, #3
 80299bc:	1c45      	adds	r5, r0, #1
 80299be:	00e9      	lsls	r1, r5, #3
 80299c0:	eba0 070b 	sub.w	r7, r0, fp
 80299c4:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029c90 <__kernel_rem_pio2f+0x300>
 80299c8:	9103      	str	r1, [sp, #12]
 80299ca:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 80299ce:	eb0a 0c0b 	add.w	ip, sl, fp
 80299d2:	ae1c      	add	r6, sp, #112	; 0x70
 80299d4:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 80299d8:	2400      	movs	r4, #0
 80299da:	4564      	cmp	r4, ip
 80299dc:	dd12      	ble.n	8029a04 <__kernel_rem_pio2f+0x74>
 80299de:	9901      	ldr	r1, [sp, #4]
 80299e0:	ac1c      	add	r4, sp, #112	; 0x70
 80299e2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80299e6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 80299ea:	f04f 0c00 	mov.w	ip, #0
 80299ee:	45d4      	cmp	ip, sl
 80299f0:	dc27      	bgt.n	8029a42 <__kernel_rem_pio2f+0xb2>
 80299f2:	f8dd e008 	ldr.w	lr, [sp, #8]
 80299f6:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029c90 <__kernel_rem_pio2f+0x300>
 80299fa:	4627      	mov	r7, r4
 80299fc:	2600      	movs	r6, #0
 80299fe:	e016      	b.n	8029a2e <__kernel_rem_pio2f+0x9e>
 8029a00:	2000      	movs	r0, #0
 8029a02:	e7db      	b.n	80299bc <__kernel_rem_pio2f+0x2c>
 8029a04:	42e7      	cmn	r7, r4
 8029a06:	bf5d      	ittte	pl
 8029a08:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8029a0c:	ee07 1a90 	vmovpl	s15, r1
 8029a10:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8029a14:	eef0 7a47 	vmovmi.f32	s15, s14
 8029a18:	ece6 7a01 	vstmia	r6!, {s15}
 8029a1c:	3401      	adds	r4, #1
 8029a1e:	e7dc      	b.n	80299da <__kernel_rem_pio2f+0x4a>
 8029a20:	ecfe 6a01 	vldmia	lr!, {s13}
 8029a24:	ed97 7a00 	vldr	s14, [r7]
 8029a28:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029a2c:	3601      	adds	r6, #1
 8029a2e:	455e      	cmp	r6, fp
 8029a30:	f1a7 0704 	sub.w	r7, r7, #4
 8029a34:	ddf4      	ble.n	8029a20 <__kernel_rem_pio2f+0x90>
 8029a36:	ece9 7a01 	vstmia	r9!, {s15}
 8029a3a:	f10c 0c01 	add.w	ip, ip, #1
 8029a3e:	3404      	adds	r4, #4
 8029a40:	e7d5      	b.n	80299ee <__kernel_rem_pio2f+0x5e>
 8029a42:	a908      	add	r1, sp, #32
 8029a44:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029a48:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8029a4c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8029c8c <__kernel_rem_pio2f+0x2fc>
 8029a50:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029c88 <__kernel_rem_pio2f+0x2f8>
 8029a54:	9105      	str	r1, [sp, #20]
 8029a56:	9304      	str	r3, [sp, #16]
 8029a58:	4656      	mov	r6, sl
 8029a5a:	00b3      	lsls	r3, r6, #2
 8029a5c:	9306      	str	r3, [sp, #24]
 8029a5e:	ab58      	add	r3, sp, #352	; 0x160
 8029a60:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029a64:	ac08      	add	r4, sp, #32
 8029a66:	ab44      	add	r3, sp, #272	; 0x110
 8029a68:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8029a6c:	46a4      	mov	ip, r4
 8029a6e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029a72:	4637      	mov	r7, r6
 8029a74:	2f00      	cmp	r7, #0
 8029a76:	f1a0 0004 	sub.w	r0, r0, #4
 8029a7a:	dc4a      	bgt.n	8029b12 <__kernel_rem_pio2f+0x182>
 8029a7c:	4628      	mov	r0, r5
 8029a7e:	9207      	str	r2, [sp, #28]
 8029a80:	f7ff ff20 	bl	80298c4 <scalbnf>
 8029a84:	eeb0 8a40 	vmov.f32	s16, s0
 8029a88:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8029a8c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029a90:	f7ff fcfc 	bl	802948c <floorf>
 8029a94:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029a98:	eea0 8a67 	vfms.f32	s16, s0, s15
 8029a9c:	2d00      	cmp	r5, #0
 8029a9e:	9a07      	ldr	r2, [sp, #28]
 8029aa0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029aa4:	ee17 9a90 	vmov	r9, s15
 8029aa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029aac:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029ab0:	dd41      	ble.n	8029b36 <__kernel_rem_pio2f+0x1a6>
 8029ab2:	f106 3cff 	add.w	ip, r6, #4294967295
 8029ab6:	ab08      	add	r3, sp, #32
 8029ab8:	f1c5 0e08 	rsb	lr, r5, #8
 8029abc:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8029ac0:	fa47 f00e 	asr.w	r0, r7, lr
 8029ac4:	4481      	add	r9, r0
 8029ac6:	fa00 f00e 	lsl.w	r0, r0, lr
 8029aca:	1a3f      	subs	r7, r7, r0
 8029acc:	f1c5 0007 	rsb	r0, r5, #7
 8029ad0:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8029ad4:	4107      	asrs	r7, r0
 8029ad6:	2f00      	cmp	r7, #0
 8029ad8:	dd3c      	ble.n	8029b54 <__kernel_rem_pio2f+0x1c4>
 8029ada:	f04f 0e00 	mov.w	lr, #0
 8029ade:	f109 0901 	add.w	r9, r9, #1
 8029ae2:	4671      	mov	r1, lr
 8029ae4:	4576      	cmp	r6, lr
 8029ae6:	dc67      	bgt.n	8029bb8 <__kernel_rem_pio2f+0x228>
 8029ae8:	2d00      	cmp	r5, #0
 8029aea:	dd03      	ble.n	8029af4 <__kernel_rem_pio2f+0x164>
 8029aec:	2d01      	cmp	r5, #1
 8029aee:	d074      	beq.n	8029bda <__kernel_rem_pio2f+0x24a>
 8029af0:	2d02      	cmp	r5, #2
 8029af2:	d07b      	beq.n	8029bec <__kernel_rem_pio2f+0x25c>
 8029af4:	2f02      	cmp	r7, #2
 8029af6:	d12d      	bne.n	8029b54 <__kernel_rem_pio2f+0x1c4>
 8029af8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029afc:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029b00:	b341      	cbz	r1, 8029b54 <__kernel_rem_pio2f+0x1c4>
 8029b02:	4628      	mov	r0, r5
 8029b04:	9207      	str	r2, [sp, #28]
 8029b06:	f7ff fedd 	bl	80298c4 <scalbnf>
 8029b0a:	9a07      	ldr	r2, [sp, #28]
 8029b0c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029b10:	e020      	b.n	8029b54 <__kernel_rem_pio2f+0x1c4>
 8029b12:	ee60 7a28 	vmul.f32	s15, s0, s17
 8029b16:	3f01      	subs	r7, #1
 8029b18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029b1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029b20:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029b24:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029b28:	ecac 0a01 	vstmia	ip!, {s0}
 8029b2c:	ed90 0a00 	vldr	s0, [r0]
 8029b30:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029b34:	e79e      	b.n	8029a74 <__kernel_rem_pio2f+0xe4>
 8029b36:	d105      	bne.n	8029b44 <__kernel_rem_pio2f+0x1b4>
 8029b38:	1e70      	subs	r0, r6, #1
 8029b3a:	ab08      	add	r3, sp, #32
 8029b3c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029b40:	11ff      	asrs	r7, r7, #7
 8029b42:	e7c8      	b.n	8029ad6 <__kernel_rem_pio2f+0x146>
 8029b44:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029b48:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b50:	da30      	bge.n	8029bb4 <__kernel_rem_pio2f+0x224>
 8029b52:	2700      	movs	r7, #0
 8029b54:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b5c:	f040 809a 	bne.w	8029c94 <__kernel_rem_pio2f+0x304>
 8029b60:	1e74      	subs	r4, r6, #1
 8029b62:	46a4      	mov	ip, r4
 8029b64:	2100      	movs	r1, #0
 8029b66:	45d4      	cmp	ip, sl
 8029b68:	da47      	bge.n	8029bfa <__kernel_rem_pio2f+0x26a>
 8029b6a:	2900      	cmp	r1, #0
 8029b6c:	d063      	beq.n	8029c36 <__kernel_rem_pio2f+0x2a6>
 8029b6e:	ab08      	add	r3, sp, #32
 8029b70:	3d08      	subs	r5, #8
 8029b72:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029b76:	2b00      	cmp	r3, #0
 8029b78:	d07f      	beq.n	8029c7a <__kernel_rem_pio2f+0x2ea>
 8029b7a:	4628      	mov	r0, r5
 8029b7c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029b80:	f7ff fea0 	bl	80298c4 <scalbnf>
 8029b84:	1c63      	adds	r3, r4, #1
 8029b86:	aa44      	add	r2, sp, #272	; 0x110
 8029b88:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8029c8c <__kernel_rem_pio2f+0x2fc>
 8029b8c:	0099      	lsls	r1, r3, #2
 8029b8e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029b92:	4623      	mov	r3, r4
 8029b94:	2b00      	cmp	r3, #0
 8029b96:	f280 80ad 	bge.w	8029cf4 <__kernel_rem_pio2f+0x364>
 8029b9a:	4623      	mov	r3, r4
 8029b9c:	2b00      	cmp	r3, #0
 8029b9e:	f2c0 80cb 	blt.w	8029d38 <__kernel_rem_pio2f+0x3a8>
 8029ba2:	aa44      	add	r2, sp, #272	; 0x110
 8029ba4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029ba8:	4e36      	ldr	r6, [pc, #216]	; (8029c84 <__kernel_rem_pio2f+0x2f4>)
 8029baa:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029c90 <__kernel_rem_pio2f+0x300>
 8029bae:	2000      	movs	r0, #0
 8029bb0:	1ae2      	subs	r2, r4, r3
 8029bb2:	e0b6      	b.n	8029d22 <__kernel_rem_pio2f+0x392>
 8029bb4:	2702      	movs	r7, #2
 8029bb6:	e790      	b.n	8029ada <__kernel_rem_pio2f+0x14a>
 8029bb8:	6820      	ldr	r0, [r4, #0]
 8029bba:	b949      	cbnz	r1, 8029bd0 <__kernel_rem_pio2f+0x240>
 8029bbc:	b118      	cbz	r0, 8029bc6 <__kernel_rem_pio2f+0x236>
 8029bbe:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8029bc2:	6020      	str	r0, [r4, #0]
 8029bc4:	2001      	movs	r0, #1
 8029bc6:	f10e 0e01 	add.w	lr, lr, #1
 8029bca:	3404      	adds	r4, #4
 8029bcc:	4601      	mov	r1, r0
 8029bce:	e789      	b.n	8029ae4 <__kernel_rem_pio2f+0x154>
 8029bd0:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8029bd4:	6020      	str	r0, [r4, #0]
 8029bd6:	4608      	mov	r0, r1
 8029bd8:	e7f5      	b.n	8029bc6 <__kernel_rem_pio2f+0x236>
 8029bda:	1e74      	subs	r4, r6, #1
 8029bdc:	ab08      	add	r3, sp, #32
 8029bde:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029be2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8029be6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8029bea:	e783      	b.n	8029af4 <__kernel_rem_pio2f+0x164>
 8029bec:	1e74      	subs	r4, r6, #1
 8029bee:	ab08      	add	r3, sp, #32
 8029bf0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029bf4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029bf8:	e7f5      	b.n	8029be6 <__kernel_rem_pio2f+0x256>
 8029bfa:	ab08      	add	r3, sp, #32
 8029bfc:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029c00:	f10c 3cff 	add.w	ip, ip, #4294967295
 8029c04:	4301      	orrs	r1, r0
 8029c06:	e7ae      	b.n	8029b66 <__kernel_rem_pio2f+0x1d6>
 8029c08:	3001      	adds	r0, #1
 8029c0a:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8029c0e:	2f00      	cmp	r7, #0
 8029c10:	d0fa      	beq.n	8029c08 <__kernel_rem_pio2f+0x278>
 8029c12:	9b06      	ldr	r3, [sp, #24]
 8029c14:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029c18:	eb0d 0403 	add.w	r4, sp, r3
 8029c1c:	9b01      	ldr	r3, [sp, #4]
 8029c1e:	18f7      	adds	r7, r6, r3
 8029c20:	ab1c      	add	r3, sp, #112	; 0x70
 8029c22:	f106 0c01 	add.w	ip, r6, #1
 8029c26:	3c4c      	subs	r4, #76	; 0x4c
 8029c28:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029c2c:	4430      	add	r0, r6
 8029c2e:	4560      	cmp	r0, ip
 8029c30:	da04      	bge.n	8029c3c <__kernel_rem_pio2f+0x2ac>
 8029c32:	4606      	mov	r6, r0
 8029c34:	e711      	b.n	8029a5a <__kernel_rem_pio2f+0xca>
 8029c36:	9c05      	ldr	r4, [sp, #20]
 8029c38:	2001      	movs	r0, #1
 8029c3a:	e7e6      	b.n	8029c0a <__kernel_rem_pio2f+0x27a>
 8029c3c:	9b04      	ldr	r3, [sp, #16]
 8029c3e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029c42:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029c46:	9306      	str	r3, [sp, #24]
 8029c48:	ee07 3a90 	vmov	s15, r3
 8029c4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029c50:	2600      	movs	r6, #0
 8029c52:	ece7 7a01 	vstmia	r7!, {s15}
 8029c56:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029c90 <__kernel_rem_pio2f+0x300>
 8029c5a:	46b9      	mov	r9, r7
 8029c5c:	455e      	cmp	r6, fp
 8029c5e:	dd04      	ble.n	8029c6a <__kernel_rem_pio2f+0x2da>
 8029c60:	ece4 7a01 	vstmia	r4!, {s15}
 8029c64:	f10c 0c01 	add.w	ip, ip, #1
 8029c68:	e7e1      	b.n	8029c2e <__kernel_rem_pio2f+0x29e>
 8029c6a:	ecfe 6a01 	vldmia	lr!, {s13}
 8029c6e:	ed39 7a01 	vldmdb	r9!, {s14}
 8029c72:	3601      	adds	r6, #1
 8029c74:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029c78:	e7f0      	b.n	8029c5c <__kernel_rem_pio2f+0x2cc>
 8029c7a:	3c01      	subs	r4, #1
 8029c7c:	e777      	b.n	8029b6e <__kernel_rem_pio2f+0x1de>
 8029c7e:	bf00      	nop
 8029c80:	0804247c 	.word	0x0804247c
 8029c84:	08042450 	.word	0x08042450
 8029c88:	43800000 	.word	0x43800000
 8029c8c:	3b800000 	.word	0x3b800000
 8029c90:	00000000 	.word	0x00000000
 8029c94:	9b03      	ldr	r3, [sp, #12]
 8029c96:	eeb0 0a48 	vmov.f32	s0, s16
 8029c9a:	1a98      	subs	r0, r3, r2
 8029c9c:	f7ff fe12 	bl	80298c4 <scalbnf>
 8029ca0:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029c88 <__kernel_rem_pio2f+0x2f8>
 8029ca4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029ca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029cac:	db19      	blt.n	8029ce2 <__kernel_rem_pio2f+0x352>
 8029cae:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8029c8c <__kernel_rem_pio2f+0x2fc>
 8029cb2:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029cb6:	aa08      	add	r2, sp, #32
 8029cb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029cbc:	1c74      	adds	r4, r6, #1
 8029cbe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029cc2:	3508      	adds	r5, #8
 8029cc4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029cc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029ccc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029cd0:	ee10 3a10 	vmov	r3, s0
 8029cd4:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029cd8:	ee17 3a90 	vmov	r3, s15
 8029cdc:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029ce0:	e74b      	b.n	8029b7a <__kernel_rem_pio2f+0x1ea>
 8029ce2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ce6:	aa08      	add	r2, sp, #32
 8029ce8:	ee10 3a10 	vmov	r3, s0
 8029cec:	4634      	mov	r4, r6
 8029cee:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029cf2:	e742      	b.n	8029b7a <__kernel_rem_pio2f+0x1ea>
 8029cf4:	a808      	add	r0, sp, #32
 8029cf6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029cfa:	9001      	str	r0, [sp, #4]
 8029cfc:	ee07 0a90 	vmov	s15, r0
 8029d00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029d04:	3b01      	subs	r3, #1
 8029d06:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029d0a:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029d0e:	ed62 7a01 	vstmdb	r2!, {s15}
 8029d12:	e73f      	b.n	8029b94 <__kernel_rem_pio2f+0x204>
 8029d14:	ecf6 6a01 	vldmia	r6!, {s13}
 8029d18:	ecb5 7a01 	vldmia	r5!, {s14}
 8029d1c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029d20:	3001      	adds	r0, #1
 8029d22:	4550      	cmp	r0, sl
 8029d24:	dc01      	bgt.n	8029d2a <__kernel_rem_pio2f+0x39a>
 8029d26:	4290      	cmp	r0, r2
 8029d28:	ddf4      	ble.n	8029d14 <__kernel_rem_pio2f+0x384>
 8029d2a:	a858      	add	r0, sp, #352	; 0x160
 8029d2c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029d30:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029d34:	3b01      	subs	r3, #1
 8029d36:	e731      	b.n	8029b9c <__kernel_rem_pio2f+0x20c>
 8029d38:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029d3a:	2b02      	cmp	r3, #2
 8029d3c:	dc09      	bgt.n	8029d52 <__kernel_rem_pio2f+0x3c2>
 8029d3e:	2b00      	cmp	r3, #0
 8029d40:	dc2b      	bgt.n	8029d9a <__kernel_rem_pio2f+0x40a>
 8029d42:	d044      	beq.n	8029dce <__kernel_rem_pio2f+0x43e>
 8029d44:	f009 0007 	and.w	r0, r9, #7
 8029d48:	b059      	add	sp, #356	; 0x164
 8029d4a:	ecbd 8b04 	vpop	{d8-d9}
 8029d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029d52:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029d54:	2b03      	cmp	r3, #3
 8029d56:	d1f5      	bne.n	8029d44 <__kernel_rem_pio2f+0x3b4>
 8029d58:	aa30      	add	r2, sp, #192	; 0xc0
 8029d5a:	1f0b      	subs	r3, r1, #4
 8029d5c:	4413      	add	r3, r2
 8029d5e:	461a      	mov	r2, r3
 8029d60:	4620      	mov	r0, r4
 8029d62:	2800      	cmp	r0, #0
 8029d64:	f1a2 0204 	sub.w	r2, r2, #4
 8029d68:	dc52      	bgt.n	8029e10 <__kernel_rem_pio2f+0x480>
 8029d6a:	4622      	mov	r2, r4
 8029d6c:	2a01      	cmp	r2, #1
 8029d6e:	f1a3 0304 	sub.w	r3, r3, #4
 8029d72:	dc5d      	bgt.n	8029e30 <__kernel_rem_pio2f+0x4a0>
 8029d74:	ab30      	add	r3, sp, #192	; 0xc0
 8029d76:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029c90 <__kernel_rem_pio2f+0x300>
 8029d7a:	440b      	add	r3, r1
 8029d7c:	2c01      	cmp	r4, #1
 8029d7e:	dc67      	bgt.n	8029e50 <__kernel_rem_pio2f+0x4c0>
 8029d80:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029d84:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029d88:	2f00      	cmp	r7, #0
 8029d8a:	d167      	bne.n	8029e5c <__kernel_rem_pio2f+0x4cc>
 8029d8c:	edc8 6a00 	vstr	s13, [r8]
 8029d90:	ed88 7a01 	vstr	s14, [r8, #4]
 8029d94:	edc8 7a02 	vstr	s15, [r8, #8]
 8029d98:	e7d4      	b.n	8029d44 <__kernel_rem_pio2f+0x3b4>
 8029d9a:	ab30      	add	r3, sp, #192	; 0xc0
 8029d9c:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029c90 <__kernel_rem_pio2f+0x300>
 8029da0:	440b      	add	r3, r1
 8029da2:	4622      	mov	r2, r4
 8029da4:	2a00      	cmp	r2, #0
 8029da6:	da24      	bge.n	8029df2 <__kernel_rem_pio2f+0x462>
 8029da8:	b34f      	cbz	r7, 8029dfe <__kernel_rem_pio2f+0x46e>
 8029daa:	eef1 7a47 	vneg.f32	s15, s14
 8029dae:	edc8 7a00 	vstr	s15, [r8]
 8029db2:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8029db6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029dba:	aa31      	add	r2, sp, #196	; 0xc4
 8029dbc:	2301      	movs	r3, #1
 8029dbe:	429c      	cmp	r4, r3
 8029dc0:	da20      	bge.n	8029e04 <__kernel_rem_pio2f+0x474>
 8029dc2:	b10f      	cbz	r7, 8029dc8 <__kernel_rem_pio2f+0x438>
 8029dc4:	eef1 7a67 	vneg.f32	s15, s15
 8029dc8:	edc8 7a01 	vstr	s15, [r8, #4]
 8029dcc:	e7ba      	b.n	8029d44 <__kernel_rem_pio2f+0x3b4>
 8029dce:	ab30      	add	r3, sp, #192	; 0xc0
 8029dd0:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029c90 <__kernel_rem_pio2f+0x300>
 8029dd4:	440b      	add	r3, r1
 8029dd6:	2c00      	cmp	r4, #0
 8029dd8:	da05      	bge.n	8029de6 <__kernel_rem_pio2f+0x456>
 8029dda:	b10f      	cbz	r7, 8029de0 <__kernel_rem_pio2f+0x450>
 8029ddc:	eef1 7a67 	vneg.f32	s15, s15
 8029de0:	edc8 7a00 	vstr	s15, [r8]
 8029de4:	e7ae      	b.n	8029d44 <__kernel_rem_pio2f+0x3b4>
 8029de6:	ed33 7a01 	vldmdb	r3!, {s14}
 8029dea:	3c01      	subs	r4, #1
 8029dec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029df0:	e7f1      	b.n	8029dd6 <__kernel_rem_pio2f+0x446>
 8029df2:	ed73 7a01 	vldmdb	r3!, {s15}
 8029df6:	3a01      	subs	r2, #1
 8029df8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029dfc:	e7d2      	b.n	8029da4 <__kernel_rem_pio2f+0x414>
 8029dfe:	eef0 7a47 	vmov.f32	s15, s14
 8029e02:	e7d4      	b.n	8029dae <__kernel_rem_pio2f+0x41e>
 8029e04:	ecb2 7a01 	vldmia	r2!, {s14}
 8029e08:	3301      	adds	r3, #1
 8029e0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029e0e:	e7d6      	b.n	8029dbe <__kernel_rem_pio2f+0x42e>
 8029e10:	edd2 7a00 	vldr	s15, [r2]
 8029e14:	edd2 6a01 	vldr	s13, [r2, #4]
 8029e18:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029e1c:	3801      	subs	r0, #1
 8029e1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e22:	ed82 7a00 	vstr	s14, [r2]
 8029e26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029e2a:	edc2 7a01 	vstr	s15, [r2, #4]
 8029e2e:	e798      	b.n	8029d62 <__kernel_rem_pio2f+0x3d2>
 8029e30:	edd3 7a00 	vldr	s15, [r3]
 8029e34:	edd3 6a01 	vldr	s13, [r3, #4]
 8029e38:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029e3c:	3a01      	subs	r2, #1
 8029e3e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e42:	ed83 7a00 	vstr	s14, [r3]
 8029e46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029e4a:	edc3 7a01 	vstr	s15, [r3, #4]
 8029e4e:	e78d      	b.n	8029d6c <__kernel_rem_pio2f+0x3dc>
 8029e50:	ed33 7a01 	vldmdb	r3!, {s14}
 8029e54:	3c01      	subs	r4, #1
 8029e56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029e5a:	e78f      	b.n	8029d7c <__kernel_rem_pio2f+0x3ec>
 8029e5c:	eef1 6a66 	vneg.f32	s13, s13
 8029e60:	eeb1 7a47 	vneg.f32	s14, s14
 8029e64:	edc8 6a00 	vstr	s13, [r8]
 8029e68:	ed88 7a01 	vstr	s14, [r8, #4]
 8029e6c:	eef1 7a67 	vneg.f32	s15, s15
 8029e70:	e790      	b.n	8029d94 <__kernel_rem_pio2f+0x404>
 8029e72:	bf00      	nop

08029e74 <abort>:
 8029e74:	b508      	push	{r3, lr}
 8029e76:	2006      	movs	r0, #6
 8029e78:	f000 fa3a 	bl	802a2f0 <raise>
 8029e7c:	2001      	movs	r0, #1
 8029e7e:	f7d8 fafd 	bl	800247c <_exit>
	...

08029e84 <__assert_func>:
 8029e84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8029e86:	4614      	mov	r4, r2
 8029e88:	461a      	mov	r2, r3
 8029e8a:	4b09      	ldr	r3, [pc, #36]	; (8029eb0 <__assert_func+0x2c>)
 8029e8c:	681b      	ldr	r3, [r3, #0]
 8029e8e:	4605      	mov	r5, r0
 8029e90:	68d8      	ldr	r0, [r3, #12]
 8029e92:	b14c      	cbz	r4, 8029ea8 <__assert_func+0x24>
 8029e94:	4b07      	ldr	r3, [pc, #28]	; (8029eb4 <__assert_func+0x30>)
 8029e96:	9100      	str	r1, [sp, #0]
 8029e98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8029e9c:	4906      	ldr	r1, [pc, #24]	; (8029eb8 <__assert_func+0x34>)
 8029e9e:	462b      	mov	r3, r5
 8029ea0:	f000 f982 	bl	802a1a8 <fiprintf>
 8029ea4:	f7ff ffe6 	bl	8029e74 <abort>
 8029ea8:	4b04      	ldr	r3, [pc, #16]	; (8029ebc <__assert_func+0x38>)
 8029eaa:	461c      	mov	r4, r3
 8029eac:	e7f3      	b.n	8029e96 <__assert_func+0x12>
 8029eae:	bf00      	nop
 8029eb0:	20000160 	.word	0x20000160
 8029eb4:	08042488 	.word	0x08042488
 8029eb8:	08042495 	.word	0x08042495
 8029ebc:	080424c3 	.word	0x080424c3

08029ec0 <atexit>:
 8029ec0:	2300      	movs	r3, #0
 8029ec2:	4601      	mov	r1, r0
 8029ec4:	461a      	mov	r2, r3
 8029ec6:	4618      	mov	r0, r3
 8029ec8:	f000 bb16 	b.w	802a4f8 <__register_exitproc>

08029ecc <malloc>:
 8029ecc:	4b02      	ldr	r3, [pc, #8]	; (8029ed8 <malloc+0xc>)
 8029ece:	4601      	mov	r1, r0
 8029ed0:	6818      	ldr	r0, [r3, #0]
 8029ed2:	f000 b82b 	b.w	8029f2c <_malloc_r>
 8029ed6:	bf00      	nop
 8029ed8:	20000160 	.word	0x20000160

08029edc <free>:
 8029edc:	4b02      	ldr	r3, [pc, #8]	; (8029ee8 <free+0xc>)
 8029ede:	4601      	mov	r1, r0
 8029ee0:	6818      	ldr	r0, [r3, #0]
 8029ee2:	f000 bb67 	b.w	802a5b4 <_free_r>
 8029ee6:	bf00      	nop
 8029ee8:	20000160 	.word	0x20000160

08029eec <sbrk_aligned>:
 8029eec:	b570      	push	{r4, r5, r6, lr}
 8029eee:	4e0e      	ldr	r6, [pc, #56]	; (8029f28 <sbrk_aligned+0x3c>)
 8029ef0:	460c      	mov	r4, r1
 8029ef2:	6831      	ldr	r1, [r6, #0]
 8029ef4:	4605      	mov	r5, r0
 8029ef6:	b911      	cbnz	r1, 8029efe <sbrk_aligned+0x12>
 8029ef8:	f000 faa0 	bl	802a43c <_sbrk_r>
 8029efc:	6030      	str	r0, [r6, #0]
 8029efe:	4621      	mov	r1, r4
 8029f00:	4628      	mov	r0, r5
 8029f02:	f000 fa9b 	bl	802a43c <_sbrk_r>
 8029f06:	1c43      	adds	r3, r0, #1
 8029f08:	d00a      	beq.n	8029f20 <sbrk_aligned+0x34>
 8029f0a:	1cc4      	adds	r4, r0, #3
 8029f0c:	f024 0403 	bic.w	r4, r4, #3
 8029f10:	42a0      	cmp	r0, r4
 8029f12:	d007      	beq.n	8029f24 <sbrk_aligned+0x38>
 8029f14:	1a21      	subs	r1, r4, r0
 8029f16:	4628      	mov	r0, r5
 8029f18:	f000 fa90 	bl	802a43c <_sbrk_r>
 8029f1c:	3001      	adds	r0, #1
 8029f1e:	d101      	bne.n	8029f24 <sbrk_aligned+0x38>
 8029f20:	f04f 34ff 	mov.w	r4, #4294967295
 8029f24:	4620      	mov	r0, r4
 8029f26:	bd70      	pop	{r4, r5, r6, pc}
 8029f28:	200137b4 	.word	0x200137b4

08029f2c <_malloc_r>:
 8029f2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029f30:	1ccd      	adds	r5, r1, #3
 8029f32:	f025 0503 	bic.w	r5, r5, #3
 8029f36:	3508      	adds	r5, #8
 8029f38:	2d0c      	cmp	r5, #12
 8029f3a:	bf38      	it	cc
 8029f3c:	250c      	movcc	r5, #12
 8029f3e:	2d00      	cmp	r5, #0
 8029f40:	4607      	mov	r7, r0
 8029f42:	db01      	blt.n	8029f48 <_malloc_r+0x1c>
 8029f44:	42a9      	cmp	r1, r5
 8029f46:	d905      	bls.n	8029f54 <_malloc_r+0x28>
 8029f48:	230c      	movs	r3, #12
 8029f4a:	603b      	str	r3, [r7, #0]
 8029f4c:	2600      	movs	r6, #0
 8029f4e:	4630      	mov	r0, r6
 8029f50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029f54:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802a028 <_malloc_r+0xfc>
 8029f58:	f000 f868 	bl	802a02c <__malloc_lock>
 8029f5c:	f8d8 3000 	ldr.w	r3, [r8]
 8029f60:	461c      	mov	r4, r3
 8029f62:	bb5c      	cbnz	r4, 8029fbc <_malloc_r+0x90>
 8029f64:	4629      	mov	r1, r5
 8029f66:	4638      	mov	r0, r7
 8029f68:	f7ff ffc0 	bl	8029eec <sbrk_aligned>
 8029f6c:	1c43      	adds	r3, r0, #1
 8029f6e:	4604      	mov	r4, r0
 8029f70:	d155      	bne.n	802a01e <_malloc_r+0xf2>
 8029f72:	f8d8 4000 	ldr.w	r4, [r8]
 8029f76:	4626      	mov	r6, r4
 8029f78:	2e00      	cmp	r6, #0
 8029f7a:	d145      	bne.n	802a008 <_malloc_r+0xdc>
 8029f7c:	2c00      	cmp	r4, #0
 8029f7e:	d048      	beq.n	802a012 <_malloc_r+0xe6>
 8029f80:	6823      	ldr	r3, [r4, #0]
 8029f82:	4631      	mov	r1, r6
 8029f84:	4638      	mov	r0, r7
 8029f86:	eb04 0903 	add.w	r9, r4, r3
 8029f8a:	f000 fa57 	bl	802a43c <_sbrk_r>
 8029f8e:	4581      	cmp	r9, r0
 8029f90:	d13f      	bne.n	802a012 <_malloc_r+0xe6>
 8029f92:	6821      	ldr	r1, [r4, #0]
 8029f94:	1a6d      	subs	r5, r5, r1
 8029f96:	4629      	mov	r1, r5
 8029f98:	4638      	mov	r0, r7
 8029f9a:	f7ff ffa7 	bl	8029eec <sbrk_aligned>
 8029f9e:	3001      	adds	r0, #1
 8029fa0:	d037      	beq.n	802a012 <_malloc_r+0xe6>
 8029fa2:	6823      	ldr	r3, [r4, #0]
 8029fa4:	442b      	add	r3, r5
 8029fa6:	6023      	str	r3, [r4, #0]
 8029fa8:	f8d8 3000 	ldr.w	r3, [r8]
 8029fac:	2b00      	cmp	r3, #0
 8029fae:	d038      	beq.n	802a022 <_malloc_r+0xf6>
 8029fb0:	685a      	ldr	r2, [r3, #4]
 8029fb2:	42a2      	cmp	r2, r4
 8029fb4:	d12b      	bne.n	802a00e <_malloc_r+0xe2>
 8029fb6:	2200      	movs	r2, #0
 8029fb8:	605a      	str	r2, [r3, #4]
 8029fba:	e00f      	b.n	8029fdc <_malloc_r+0xb0>
 8029fbc:	6822      	ldr	r2, [r4, #0]
 8029fbe:	1b52      	subs	r2, r2, r5
 8029fc0:	d41f      	bmi.n	802a002 <_malloc_r+0xd6>
 8029fc2:	2a0b      	cmp	r2, #11
 8029fc4:	d917      	bls.n	8029ff6 <_malloc_r+0xca>
 8029fc6:	1961      	adds	r1, r4, r5
 8029fc8:	42a3      	cmp	r3, r4
 8029fca:	6025      	str	r5, [r4, #0]
 8029fcc:	bf18      	it	ne
 8029fce:	6059      	strne	r1, [r3, #4]
 8029fd0:	6863      	ldr	r3, [r4, #4]
 8029fd2:	bf08      	it	eq
 8029fd4:	f8c8 1000 	streq.w	r1, [r8]
 8029fd8:	5162      	str	r2, [r4, r5]
 8029fda:	604b      	str	r3, [r1, #4]
 8029fdc:	4638      	mov	r0, r7
 8029fde:	f104 060b 	add.w	r6, r4, #11
 8029fe2:	f000 f829 	bl	802a038 <__malloc_unlock>
 8029fe6:	f026 0607 	bic.w	r6, r6, #7
 8029fea:	1d23      	adds	r3, r4, #4
 8029fec:	1af2      	subs	r2, r6, r3
 8029fee:	d0ae      	beq.n	8029f4e <_malloc_r+0x22>
 8029ff0:	1b9b      	subs	r3, r3, r6
 8029ff2:	50a3      	str	r3, [r4, r2]
 8029ff4:	e7ab      	b.n	8029f4e <_malloc_r+0x22>
 8029ff6:	42a3      	cmp	r3, r4
 8029ff8:	6862      	ldr	r2, [r4, #4]
 8029ffa:	d1dd      	bne.n	8029fb8 <_malloc_r+0x8c>
 8029ffc:	f8c8 2000 	str.w	r2, [r8]
 802a000:	e7ec      	b.n	8029fdc <_malloc_r+0xb0>
 802a002:	4623      	mov	r3, r4
 802a004:	6864      	ldr	r4, [r4, #4]
 802a006:	e7ac      	b.n	8029f62 <_malloc_r+0x36>
 802a008:	4634      	mov	r4, r6
 802a00a:	6876      	ldr	r6, [r6, #4]
 802a00c:	e7b4      	b.n	8029f78 <_malloc_r+0x4c>
 802a00e:	4613      	mov	r3, r2
 802a010:	e7cc      	b.n	8029fac <_malloc_r+0x80>
 802a012:	230c      	movs	r3, #12
 802a014:	603b      	str	r3, [r7, #0]
 802a016:	4638      	mov	r0, r7
 802a018:	f000 f80e 	bl	802a038 <__malloc_unlock>
 802a01c:	e797      	b.n	8029f4e <_malloc_r+0x22>
 802a01e:	6025      	str	r5, [r4, #0]
 802a020:	e7dc      	b.n	8029fdc <_malloc_r+0xb0>
 802a022:	605b      	str	r3, [r3, #4]
 802a024:	deff      	udf	#255	; 0xff
 802a026:	bf00      	nop
 802a028:	200137b0 	.word	0x200137b0

0802a02c <__malloc_lock>:
 802a02c:	4801      	ldr	r0, [pc, #4]	; (802a034 <__malloc_lock+0x8>)
 802a02e:	f000 ba52 	b.w	802a4d6 <__retarget_lock_acquire_recursive>
 802a032:	bf00      	nop
 802a034:	200138f9 	.word	0x200138f9

0802a038 <__malloc_unlock>:
 802a038:	4801      	ldr	r0, [pc, #4]	; (802a040 <__malloc_unlock+0x8>)
 802a03a:	f000 ba4d 	b.w	802a4d8 <__retarget_lock_release_recursive>
 802a03e:	bf00      	nop
 802a040:	200138f9 	.word	0x200138f9

0802a044 <__cxa_atexit>:
 802a044:	b510      	push	{r4, lr}
 802a046:	4c05      	ldr	r4, [pc, #20]	; (802a05c <__cxa_atexit+0x18>)
 802a048:	4613      	mov	r3, r2
 802a04a:	b12c      	cbz	r4, 802a058 <__cxa_atexit+0x14>
 802a04c:	460a      	mov	r2, r1
 802a04e:	4601      	mov	r1, r0
 802a050:	2002      	movs	r0, #2
 802a052:	f000 fa51 	bl	802a4f8 <__register_exitproc>
 802a056:	bd10      	pop	{r4, pc}
 802a058:	4620      	mov	r0, r4
 802a05a:	e7fc      	b.n	802a056 <__cxa_atexit+0x12>
 802a05c:	0802a4f9 	.word	0x0802a4f9

0802a060 <std>:
 802a060:	2300      	movs	r3, #0
 802a062:	b510      	push	{r4, lr}
 802a064:	4604      	mov	r4, r0
 802a066:	e9c0 3300 	strd	r3, r3, [r0]
 802a06a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802a06e:	6083      	str	r3, [r0, #8]
 802a070:	8181      	strh	r1, [r0, #12]
 802a072:	6643      	str	r3, [r0, #100]	; 0x64
 802a074:	81c2      	strh	r2, [r0, #14]
 802a076:	6183      	str	r3, [r0, #24]
 802a078:	4619      	mov	r1, r3
 802a07a:	2208      	movs	r2, #8
 802a07c:	305c      	adds	r0, #92	; 0x5c
 802a07e:	f000 f906 	bl	802a28e <memset>
 802a082:	4b0d      	ldr	r3, [pc, #52]	; (802a0b8 <std+0x58>)
 802a084:	6263      	str	r3, [r4, #36]	; 0x24
 802a086:	4b0d      	ldr	r3, [pc, #52]	; (802a0bc <std+0x5c>)
 802a088:	62a3      	str	r3, [r4, #40]	; 0x28
 802a08a:	4b0d      	ldr	r3, [pc, #52]	; (802a0c0 <std+0x60>)
 802a08c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802a08e:	4b0d      	ldr	r3, [pc, #52]	; (802a0c4 <std+0x64>)
 802a090:	6323      	str	r3, [r4, #48]	; 0x30
 802a092:	4b0d      	ldr	r3, [pc, #52]	; (802a0c8 <std+0x68>)
 802a094:	6224      	str	r4, [r4, #32]
 802a096:	429c      	cmp	r4, r3
 802a098:	d006      	beq.n	802a0a8 <std+0x48>
 802a09a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802a09e:	4294      	cmp	r4, r2
 802a0a0:	d002      	beq.n	802a0a8 <std+0x48>
 802a0a2:	33d0      	adds	r3, #208	; 0xd0
 802a0a4:	429c      	cmp	r4, r3
 802a0a6:	d105      	bne.n	802a0b4 <std+0x54>
 802a0a8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802a0ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a0b0:	f000 ba10 	b.w	802a4d4 <__retarget_lock_init_recursive>
 802a0b4:	bd10      	pop	{r4, pc}
 802a0b6:	bf00      	nop
 802a0b8:	0802a209 	.word	0x0802a209
 802a0bc:	0802a22b 	.word	0x0802a22b
 802a0c0:	0802a263 	.word	0x0802a263
 802a0c4:	0802a287 	.word	0x0802a287
 802a0c8:	200137b8 	.word	0x200137b8

0802a0cc <stdio_exit_handler>:
 802a0cc:	4a02      	ldr	r2, [pc, #8]	; (802a0d8 <stdio_exit_handler+0xc>)
 802a0ce:	4903      	ldr	r1, [pc, #12]	; (802a0dc <stdio_exit_handler+0x10>)
 802a0d0:	4803      	ldr	r0, [pc, #12]	; (802a0e0 <stdio_exit_handler+0x14>)
 802a0d2:	f000 b87b 	b.w	802a1cc <_fwalk_sglue>
 802a0d6:	bf00      	nop
 802a0d8:	20000108 	.word	0x20000108
 802a0dc:	0802ad01 	.word	0x0802ad01
 802a0e0:	20000114 	.word	0x20000114

0802a0e4 <cleanup_stdio>:
 802a0e4:	6841      	ldr	r1, [r0, #4]
 802a0e6:	4b0c      	ldr	r3, [pc, #48]	; (802a118 <cleanup_stdio+0x34>)
 802a0e8:	4299      	cmp	r1, r3
 802a0ea:	b510      	push	{r4, lr}
 802a0ec:	4604      	mov	r4, r0
 802a0ee:	d001      	beq.n	802a0f4 <cleanup_stdio+0x10>
 802a0f0:	f000 fe06 	bl	802ad00 <_fflush_r>
 802a0f4:	68a1      	ldr	r1, [r4, #8]
 802a0f6:	4b09      	ldr	r3, [pc, #36]	; (802a11c <cleanup_stdio+0x38>)
 802a0f8:	4299      	cmp	r1, r3
 802a0fa:	d002      	beq.n	802a102 <cleanup_stdio+0x1e>
 802a0fc:	4620      	mov	r0, r4
 802a0fe:	f000 fdff 	bl	802ad00 <_fflush_r>
 802a102:	68e1      	ldr	r1, [r4, #12]
 802a104:	4b06      	ldr	r3, [pc, #24]	; (802a120 <cleanup_stdio+0x3c>)
 802a106:	4299      	cmp	r1, r3
 802a108:	d004      	beq.n	802a114 <cleanup_stdio+0x30>
 802a10a:	4620      	mov	r0, r4
 802a10c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a110:	f000 bdf6 	b.w	802ad00 <_fflush_r>
 802a114:	bd10      	pop	{r4, pc}
 802a116:	bf00      	nop
 802a118:	200137b8 	.word	0x200137b8
 802a11c:	20013820 	.word	0x20013820
 802a120:	20013888 	.word	0x20013888

0802a124 <global_stdio_init.part.0>:
 802a124:	b510      	push	{r4, lr}
 802a126:	4b0b      	ldr	r3, [pc, #44]	; (802a154 <global_stdio_init.part.0+0x30>)
 802a128:	4c0b      	ldr	r4, [pc, #44]	; (802a158 <global_stdio_init.part.0+0x34>)
 802a12a:	4a0c      	ldr	r2, [pc, #48]	; (802a15c <global_stdio_init.part.0+0x38>)
 802a12c:	601a      	str	r2, [r3, #0]
 802a12e:	4620      	mov	r0, r4
 802a130:	2200      	movs	r2, #0
 802a132:	2104      	movs	r1, #4
 802a134:	f7ff ff94 	bl	802a060 <std>
 802a138:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802a13c:	2201      	movs	r2, #1
 802a13e:	2109      	movs	r1, #9
 802a140:	f7ff ff8e 	bl	802a060 <std>
 802a144:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802a148:	2202      	movs	r2, #2
 802a14a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a14e:	2112      	movs	r1, #18
 802a150:	f7ff bf86 	b.w	802a060 <std>
 802a154:	200138f0 	.word	0x200138f0
 802a158:	200137b8 	.word	0x200137b8
 802a15c:	0802a0cd 	.word	0x0802a0cd

0802a160 <__sfp_lock_acquire>:
 802a160:	4801      	ldr	r0, [pc, #4]	; (802a168 <__sfp_lock_acquire+0x8>)
 802a162:	f000 b9b8 	b.w	802a4d6 <__retarget_lock_acquire_recursive>
 802a166:	bf00      	nop
 802a168:	200138fa 	.word	0x200138fa

0802a16c <__sfp_lock_release>:
 802a16c:	4801      	ldr	r0, [pc, #4]	; (802a174 <__sfp_lock_release+0x8>)
 802a16e:	f000 b9b3 	b.w	802a4d8 <__retarget_lock_release_recursive>
 802a172:	bf00      	nop
 802a174:	200138fa 	.word	0x200138fa

0802a178 <__sinit>:
 802a178:	b510      	push	{r4, lr}
 802a17a:	4604      	mov	r4, r0
 802a17c:	f7ff fff0 	bl	802a160 <__sfp_lock_acquire>
 802a180:	6a23      	ldr	r3, [r4, #32]
 802a182:	b11b      	cbz	r3, 802a18c <__sinit+0x14>
 802a184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a188:	f7ff bff0 	b.w	802a16c <__sfp_lock_release>
 802a18c:	4b04      	ldr	r3, [pc, #16]	; (802a1a0 <__sinit+0x28>)
 802a18e:	6223      	str	r3, [r4, #32]
 802a190:	4b04      	ldr	r3, [pc, #16]	; (802a1a4 <__sinit+0x2c>)
 802a192:	681b      	ldr	r3, [r3, #0]
 802a194:	2b00      	cmp	r3, #0
 802a196:	d1f5      	bne.n	802a184 <__sinit+0xc>
 802a198:	f7ff ffc4 	bl	802a124 <global_stdio_init.part.0>
 802a19c:	e7f2      	b.n	802a184 <__sinit+0xc>
 802a19e:	bf00      	nop
 802a1a0:	0802a0e5 	.word	0x0802a0e5
 802a1a4:	200138f0 	.word	0x200138f0

0802a1a8 <fiprintf>:
 802a1a8:	b40e      	push	{r1, r2, r3}
 802a1aa:	b503      	push	{r0, r1, lr}
 802a1ac:	4601      	mov	r1, r0
 802a1ae:	ab03      	add	r3, sp, #12
 802a1b0:	4805      	ldr	r0, [pc, #20]	; (802a1c8 <fiprintf+0x20>)
 802a1b2:	f853 2b04 	ldr.w	r2, [r3], #4
 802a1b6:	6800      	ldr	r0, [r0, #0]
 802a1b8:	9301      	str	r3, [sp, #4]
 802a1ba:	f000 fa71 	bl	802a6a0 <_vfiprintf_r>
 802a1be:	b002      	add	sp, #8
 802a1c0:	f85d eb04 	ldr.w	lr, [sp], #4
 802a1c4:	b003      	add	sp, #12
 802a1c6:	4770      	bx	lr
 802a1c8:	20000160 	.word	0x20000160

0802a1cc <_fwalk_sglue>:
 802a1cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a1d0:	4607      	mov	r7, r0
 802a1d2:	4688      	mov	r8, r1
 802a1d4:	4614      	mov	r4, r2
 802a1d6:	2600      	movs	r6, #0
 802a1d8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a1dc:	f1b9 0901 	subs.w	r9, r9, #1
 802a1e0:	d505      	bpl.n	802a1ee <_fwalk_sglue+0x22>
 802a1e2:	6824      	ldr	r4, [r4, #0]
 802a1e4:	2c00      	cmp	r4, #0
 802a1e6:	d1f7      	bne.n	802a1d8 <_fwalk_sglue+0xc>
 802a1e8:	4630      	mov	r0, r6
 802a1ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a1ee:	89ab      	ldrh	r3, [r5, #12]
 802a1f0:	2b01      	cmp	r3, #1
 802a1f2:	d907      	bls.n	802a204 <_fwalk_sglue+0x38>
 802a1f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a1f8:	3301      	adds	r3, #1
 802a1fa:	d003      	beq.n	802a204 <_fwalk_sglue+0x38>
 802a1fc:	4629      	mov	r1, r5
 802a1fe:	4638      	mov	r0, r7
 802a200:	47c0      	blx	r8
 802a202:	4306      	orrs	r6, r0
 802a204:	3568      	adds	r5, #104	; 0x68
 802a206:	e7e9      	b.n	802a1dc <_fwalk_sglue+0x10>

0802a208 <__sread>:
 802a208:	b510      	push	{r4, lr}
 802a20a:	460c      	mov	r4, r1
 802a20c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a210:	f000 f8ee 	bl	802a3f0 <_read_r>
 802a214:	2800      	cmp	r0, #0
 802a216:	bfab      	itete	ge
 802a218:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802a21a:	89a3      	ldrhlt	r3, [r4, #12]
 802a21c:	181b      	addge	r3, r3, r0
 802a21e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802a222:	bfac      	ite	ge
 802a224:	6563      	strge	r3, [r4, #84]	; 0x54
 802a226:	81a3      	strhlt	r3, [r4, #12]
 802a228:	bd10      	pop	{r4, pc}

0802a22a <__swrite>:
 802a22a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a22e:	461f      	mov	r7, r3
 802a230:	898b      	ldrh	r3, [r1, #12]
 802a232:	05db      	lsls	r3, r3, #23
 802a234:	4605      	mov	r5, r0
 802a236:	460c      	mov	r4, r1
 802a238:	4616      	mov	r6, r2
 802a23a:	d505      	bpl.n	802a248 <__swrite+0x1e>
 802a23c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a240:	2302      	movs	r3, #2
 802a242:	2200      	movs	r2, #0
 802a244:	f000 f8c2 	bl	802a3cc <_lseek_r>
 802a248:	89a3      	ldrh	r3, [r4, #12]
 802a24a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a24e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802a252:	81a3      	strh	r3, [r4, #12]
 802a254:	4632      	mov	r2, r6
 802a256:	463b      	mov	r3, r7
 802a258:	4628      	mov	r0, r5
 802a25a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a25e:	f000 b8fd 	b.w	802a45c <_write_r>

0802a262 <__sseek>:
 802a262:	b510      	push	{r4, lr}
 802a264:	460c      	mov	r4, r1
 802a266:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a26a:	f000 f8af 	bl	802a3cc <_lseek_r>
 802a26e:	1c43      	adds	r3, r0, #1
 802a270:	89a3      	ldrh	r3, [r4, #12]
 802a272:	bf15      	itete	ne
 802a274:	6560      	strne	r0, [r4, #84]	; 0x54
 802a276:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802a27a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802a27e:	81a3      	strheq	r3, [r4, #12]
 802a280:	bf18      	it	ne
 802a282:	81a3      	strhne	r3, [r4, #12]
 802a284:	bd10      	pop	{r4, pc}

0802a286 <__sclose>:
 802a286:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a28a:	f000 b839 	b.w	802a300 <_close_r>

0802a28e <memset>:
 802a28e:	4402      	add	r2, r0
 802a290:	4603      	mov	r3, r0
 802a292:	4293      	cmp	r3, r2
 802a294:	d100      	bne.n	802a298 <memset+0xa>
 802a296:	4770      	bx	lr
 802a298:	f803 1b01 	strb.w	r1, [r3], #1
 802a29c:	e7f9      	b.n	802a292 <memset+0x4>

0802a29e <_raise_r>:
 802a29e:	291f      	cmp	r1, #31
 802a2a0:	b538      	push	{r3, r4, r5, lr}
 802a2a2:	4604      	mov	r4, r0
 802a2a4:	460d      	mov	r5, r1
 802a2a6:	d904      	bls.n	802a2b2 <_raise_r+0x14>
 802a2a8:	2316      	movs	r3, #22
 802a2aa:	6003      	str	r3, [r0, #0]
 802a2ac:	f04f 30ff 	mov.w	r0, #4294967295
 802a2b0:	bd38      	pop	{r3, r4, r5, pc}
 802a2b2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802a2b4:	b112      	cbz	r2, 802a2bc <_raise_r+0x1e>
 802a2b6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a2ba:	b94b      	cbnz	r3, 802a2d0 <_raise_r+0x32>
 802a2bc:	4620      	mov	r0, r4
 802a2be:	f000 f8bb 	bl	802a438 <_getpid_r>
 802a2c2:	462a      	mov	r2, r5
 802a2c4:	4601      	mov	r1, r0
 802a2c6:	4620      	mov	r0, r4
 802a2c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a2cc:	f000 b8a2 	b.w	802a414 <_kill_r>
 802a2d0:	2b01      	cmp	r3, #1
 802a2d2:	d00a      	beq.n	802a2ea <_raise_r+0x4c>
 802a2d4:	1c59      	adds	r1, r3, #1
 802a2d6:	d103      	bne.n	802a2e0 <_raise_r+0x42>
 802a2d8:	2316      	movs	r3, #22
 802a2da:	6003      	str	r3, [r0, #0]
 802a2dc:	2001      	movs	r0, #1
 802a2de:	e7e7      	b.n	802a2b0 <_raise_r+0x12>
 802a2e0:	2400      	movs	r4, #0
 802a2e2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a2e6:	4628      	mov	r0, r5
 802a2e8:	4798      	blx	r3
 802a2ea:	2000      	movs	r0, #0
 802a2ec:	e7e0      	b.n	802a2b0 <_raise_r+0x12>
	...

0802a2f0 <raise>:
 802a2f0:	4b02      	ldr	r3, [pc, #8]	; (802a2fc <raise+0xc>)
 802a2f2:	4601      	mov	r1, r0
 802a2f4:	6818      	ldr	r0, [r3, #0]
 802a2f6:	f7ff bfd2 	b.w	802a29e <_raise_r>
 802a2fa:	bf00      	nop
 802a2fc:	20000160 	.word	0x20000160

0802a300 <_close_r>:
 802a300:	b538      	push	{r3, r4, r5, lr}
 802a302:	4d06      	ldr	r5, [pc, #24]	; (802a31c <_close_r+0x1c>)
 802a304:	2300      	movs	r3, #0
 802a306:	4604      	mov	r4, r0
 802a308:	4608      	mov	r0, r1
 802a30a:	602b      	str	r3, [r5, #0]
 802a30c:	f7d8 f8d8 	bl	80024c0 <_close>
 802a310:	1c43      	adds	r3, r0, #1
 802a312:	d102      	bne.n	802a31a <_close_r+0x1a>
 802a314:	682b      	ldr	r3, [r5, #0]
 802a316:	b103      	cbz	r3, 802a31a <_close_r+0x1a>
 802a318:	6023      	str	r3, [r4, #0]
 802a31a:	bd38      	pop	{r3, r4, r5, pc}
 802a31c:	200138f4 	.word	0x200138f4

0802a320 <_reclaim_reent>:
 802a320:	4b29      	ldr	r3, [pc, #164]	; (802a3c8 <_reclaim_reent+0xa8>)
 802a322:	681b      	ldr	r3, [r3, #0]
 802a324:	4283      	cmp	r3, r0
 802a326:	b570      	push	{r4, r5, r6, lr}
 802a328:	4604      	mov	r4, r0
 802a32a:	d04b      	beq.n	802a3c4 <_reclaim_reent+0xa4>
 802a32c:	69c3      	ldr	r3, [r0, #28]
 802a32e:	b143      	cbz	r3, 802a342 <_reclaim_reent+0x22>
 802a330:	68db      	ldr	r3, [r3, #12]
 802a332:	2b00      	cmp	r3, #0
 802a334:	d144      	bne.n	802a3c0 <_reclaim_reent+0xa0>
 802a336:	69e3      	ldr	r3, [r4, #28]
 802a338:	6819      	ldr	r1, [r3, #0]
 802a33a:	b111      	cbz	r1, 802a342 <_reclaim_reent+0x22>
 802a33c:	4620      	mov	r0, r4
 802a33e:	f000 f939 	bl	802a5b4 <_free_r>
 802a342:	6961      	ldr	r1, [r4, #20]
 802a344:	b111      	cbz	r1, 802a34c <_reclaim_reent+0x2c>
 802a346:	4620      	mov	r0, r4
 802a348:	f000 f934 	bl	802a5b4 <_free_r>
 802a34c:	69e1      	ldr	r1, [r4, #28]
 802a34e:	b111      	cbz	r1, 802a356 <_reclaim_reent+0x36>
 802a350:	4620      	mov	r0, r4
 802a352:	f000 f92f 	bl	802a5b4 <_free_r>
 802a356:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a358:	b111      	cbz	r1, 802a360 <_reclaim_reent+0x40>
 802a35a:	4620      	mov	r0, r4
 802a35c:	f000 f92a 	bl	802a5b4 <_free_r>
 802a360:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a362:	b111      	cbz	r1, 802a36a <_reclaim_reent+0x4a>
 802a364:	4620      	mov	r0, r4
 802a366:	f000 f925 	bl	802a5b4 <_free_r>
 802a36a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a36c:	b111      	cbz	r1, 802a374 <_reclaim_reent+0x54>
 802a36e:	4620      	mov	r0, r4
 802a370:	f000 f920 	bl	802a5b4 <_free_r>
 802a374:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a376:	b111      	cbz	r1, 802a37e <_reclaim_reent+0x5e>
 802a378:	4620      	mov	r0, r4
 802a37a:	f000 f91b 	bl	802a5b4 <_free_r>
 802a37e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a380:	b111      	cbz	r1, 802a388 <_reclaim_reent+0x68>
 802a382:	4620      	mov	r0, r4
 802a384:	f000 f916 	bl	802a5b4 <_free_r>
 802a388:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a38a:	b111      	cbz	r1, 802a392 <_reclaim_reent+0x72>
 802a38c:	4620      	mov	r0, r4
 802a38e:	f000 f911 	bl	802a5b4 <_free_r>
 802a392:	6a23      	ldr	r3, [r4, #32]
 802a394:	b1b3      	cbz	r3, 802a3c4 <_reclaim_reent+0xa4>
 802a396:	4620      	mov	r0, r4
 802a398:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a39c:	4718      	bx	r3
 802a39e:	5949      	ldr	r1, [r1, r5]
 802a3a0:	b941      	cbnz	r1, 802a3b4 <_reclaim_reent+0x94>
 802a3a2:	3504      	adds	r5, #4
 802a3a4:	69e3      	ldr	r3, [r4, #28]
 802a3a6:	2d80      	cmp	r5, #128	; 0x80
 802a3a8:	68d9      	ldr	r1, [r3, #12]
 802a3aa:	d1f8      	bne.n	802a39e <_reclaim_reent+0x7e>
 802a3ac:	4620      	mov	r0, r4
 802a3ae:	f000 f901 	bl	802a5b4 <_free_r>
 802a3b2:	e7c0      	b.n	802a336 <_reclaim_reent+0x16>
 802a3b4:	680e      	ldr	r6, [r1, #0]
 802a3b6:	4620      	mov	r0, r4
 802a3b8:	f000 f8fc 	bl	802a5b4 <_free_r>
 802a3bc:	4631      	mov	r1, r6
 802a3be:	e7ef      	b.n	802a3a0 <_reclaim_reent+0x80>
 802a3c0:	2500      	movs	r5, #0
 802a3c2:	e7ef      	b.n	802a3a4 <_reclaim_reent+0x84>
 802a3c4:	bd70      	pop	{r4, r5, r6, pc}
 802a3c6:	bf00      	nop
 802a3c8:	20000160 	.word	0x20000160

0802a3cc <_lseek_r>:
 802a3cc:	b538      	push	{r3, r4, r5, lr}
 802a3ce:	4d07      	ldr	r5, [pc, #28]	; (802a3ec <_lseek_r+0x20>)
 802a3d0:	4604      	mov	r4, r0
 802a3d2:	4608      	mov	r0, r1
 802a3d4:	4611      	mov	r1, r2
 802a3d6:	2200      	movs	r2, #0
 802a3d8:	602a      	str	r2, [r5, #0]
 802a3da:	461a      	mov	r2, r3
 802a3dc:	f7d8 f87c 	bl	80024d8 <_lseek>
 802a3e0:	1c43      	adds	r3, r0, #1
 802a3e2:	d102      	bne.n	802a3ea <_lseek_r+0x1e>
 802a3e4:	682b      	ldr	r3, [r5, #0]
 802a3e6:	b103      	cbz	r3, 802a3ea <_lseek_r+0x1e>
 802a3e8:	6023      	str	r3, [r4, #0]
 802a3ea:	bd38      	pop	{r3, r4, r5, pc}
 802a3ec:	200138f4 	.word	0x200138f4

0802a3f0 <_read_r>:
 802a3f0:	b538      	push	{r3, r4, r5, lr}
 802a3f2:	4d07      	ldr	r5, [pc, #28]	; (802a410 <_read_r+0x20>)
 802a3f4:	4604      	mov	r4, r0
 802a3f6:	4608      	mov	r0, r1
 802a3f8:	4611      	mov	r1, r2
 802a3fa:	2200      	movs	r2, #0
 802a3fc:	602a      	str	r2, [r5, #0]
 802a3fe:	461a      	mov	r2, r3
 802a400:	f7d8 f842 	bl	8002488 <_read>
 802a404:	1c43      	adds	r3, r0, #1
 802a406:	d102      	bne.n	802a40e <_read_r+0x1e>
 802a408:	682b      	ldr	r3, [r5, #0]
 802a40a:	b103      	cbz	r3, 802a40e <_read_r+0x1e>
 802a40c:	6023      	str	r3, [r4, #0]
 802a40e:	bd38      	pop	{r3, r4, r5, pc}
 802a410:	200138f4 	.word	0x200138f4

0802a414 <_kill_r>:
 802a414:	b538      	push	{r3, r4, r5, lr}
 802a416:	4d07      	ldr	r5, [pc, #28]	; (802a434 <_kill_r+0x20>)
 802a418:	2300      	movs	r3, #0
 802a41a:	4604      	mov	r4, r0
 802a41c:	4608      	mov	r0, r1
 802a41e:	4611      	mov	r1, r2
 802a420:	602b      	str	r3, [r5, #0]
 802a422:	f7d8 f823 	bl	800246c <_kill>
 802a426:	1c43      	adds	r3, r0, #1
 802a428:	d102      	bne.n	802a430 <_kill_r+0x1c>
 802a42a:	682b      	ldr	r3, [r5, #0]
 802a42c:	b103      	cbz	r3, 802a430 <_kill_r+0x1c>
 802a42e:	6023      	str	r3, [r4, #0]
 802a430:	bd38      	pop	{r3, r4, r5, pc}
 802a432:	bf00      	nop
 802a434:	200138f4 	.word	0x200138f4

0802a438 <_getpid_r>:
 802a438:	f7d8 b816 	b.w	8002468 <_getpid>

0802a43c <_sbrk_r>:
 802a43c:	b538      	push	{r3, r4, r5, lr}
 802a43e:	4d06      	ldr	r5, [pc, #24]	; (802a458 <_sbrk_r+0x1c>)
 802a440:	2300      	movs	r3, #0
 802a442:	4604      	mov	r4, r0
 802a444:	4608      	mov	r0, r1
 802a446:	602b      	str	r3, [r5, #0]
 802a448:	f7d8 f848 	bl	80024dc <_sbrk>
 802a44c:	1c43      	adds	r3, r0, #1
 802a44e:	d102      	bne.n	802a456 <_sbrk_r+0x1a>
 802a450:	682b      	ldr	r3, [r5, #0]
 802a452:	b103      	cbz	r3, 802a456 <_sbrk_r+0x1a>
 802a454:	6023      	str	r3, [r4, #0]
 802a456:	bd38      	pop	{r3, r4, r5, pc}
 802a458:	200138f4 	.word	0x200138f4

0802a45c <_write_r>:
 802a45c:	b538      	push	{r3, r4, r5, lr}
 802a45e:	4d07      	ldr	r5, [pc, #28]	; (802a47c <_write_r+0x20>)
 802a460:	4604      	mov	r4, r0
 802a462:	4608      	mov	r0, r1
 802a464:	4611      	mov	r1, r2
 802a466:	2200      	movs	r2, #0
 802a468:	602a      	str	r2, [r5, #0]
 802a46a:	461a      	mov	r2, r3
 802a46c:	f7d8 f81a 	bl	80024a4 <_write>
 802a470:	1c43      	adds	r3, r0, #1
 802a472:	d102      	bne.n	802a47a <_write_r+0x1e>
 802a474:	682b      	ldr	r3, [r5, #0]
 802a476:	b103      	cbz	r3, 802a47a <_write_r+0x1e>
 802a478:	6023      	str	r3, [r4, #0]
 802a47a:	bd38      	pop	{r3, r4, r5, pc}
 802a47c:	200138f4 	.word	0x200138f4

0802a480 <__errno>:
 802a480:	4b01      	ldr	r3, [pc, #4]	; (802a488 <__errno+0x8>)
 802a482:	6818      	ldr	r0, [r3, #0]
 802a484:	4770      	bx	lr
 802a486:	bf00      	nop
 802a488:	20000160 	.word	0x20000160

0802a48c <__libc_init_array>:
 802a48c:	b570      	push	{r4, r5, r6, lr}
 802a48e:	4d0d      	ldr	r5, [pc, #52]	; (802a4c4 <__libc_init_array+0x38>)
 802a490:	4c0d      	ldr	r4, [pc, #52]	; (802a4c8 <__libc_init_array+0x3c>)
 802a492:	1b64      	subs	r4, r4, r5
 802a494:	10a4      	asrs	r4, r4, #2
 802a496:	2600      	movs	r6, #0
 802a498:	42a6      	cmp	r6, r4
 802a49a:	d109      	bne.n	802a4b0 <__libc_init_array+0x24>
 802a49c:	4d0b      	ldr	r5, [pc, #44]	; (802a4cc <__libc_init_array+0x40>)
 802a49e:	4c0c      	ldr	r4, [pc, #48]	; (802a4d0 <__libc_init_array+0x44>)
 802a4a0:	f000 fd70 	bl	802af84 <_init>
 802a4a4:	1b64      	subs	r4, r4, r5
 802a4a6:	10a4      	asrs	r4, r4, #2
 802a4a8:	2600      	movs	r6, #0
 802a4aa:	42a6      	cmp	r6, r4
 802a4ac:	d105      	bne.n	802a4ba <__libc_init_array+0x2e>
 802a4ae:	bd70      	pop	{r4, r5, r6, pc}
 802a4b0:	f855 3b04 	ldr.w	r3, [r5], #4
 802a4b4:	4798      	blx	r3
 802a4b6:	3601      	adds	r6, #1
 802a4b8:	e7ee      	b.n	802a498 <__libc_init_array+0xc>
 802a4ba:	f855 3b04 	ldr.w	r3, [r5], #4
 802a4be:	4798      	blx	r3
 802a4c0:	3601      	adds	r6, #1
 802a4c2:	e7f2      	b.n	802a4aa <__libc_init_array+0x1e>
 802a4c4:	0815ea58 	.word	0x0815ea58
 802a4c8:	0815ea58 	.word	0x0815ea58
 802a4cc:	0815ea58 	.word	0x0815ea58
 802a4d0:	0815ea6c 	.word	0x0815ea6c

0802a4d4 <__retarget_lock_init_recursive>:
 802a4d4:	4770      	bx	lr

0802a4d6 <__retarget_lock_acquire_recursive>:
 802a4d6:	4770      	bx	lr

0802a4d8 <__retarget_lock_release_recursive>:
 802a4d8:	4770      	bx	lr

0802a4da <memcpy>:
 802a4da:	440a      	add	r2, r1
 802a4dc:	4291      	cmp	r1, r2
 802a4de:	f100 33ff 	add.w	r3, r0, #4294967295
 802a4e2:	d100      	bne.n	802a4e6 <memcpy+0xc>
 802a4e4:	4770      	bx	lr
 802a4e6:	b510      	push	{r4, lr}
 802a4e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a4ec:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a4f0:	4291      	cmp	r1, r2
 802a4f2:	d1f9      	bne.n	802a4e8 <memcpy+0xe>
 802a4f4:	bd10      	pop	{r4, pc}
	...

0802a4f8 <__register_exitproc>:
 802a4f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a4fc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a5b0 <__register_exitproc+0xb8>
 802a500:	4606      	mov	r6, r0
 802a502:	f8d8 0000 	ldr.w	r0, [r8]
 802a506:	461f      	mov	r7, r3
 802a508:	460d      	mov	r5, r1
 802a50a:	4691      	mov	r9, r2
 802a50c:	f7ff ffe3 	bl	802a4d6 <__retarget_lock_acquire_recursive>
 802a510:	4b23      	ldr	r3, [pc, #140]	; (802a5a0 <__register_exitproc+0xa8>)
 802a512:	681c      	ldr	r4, [r3, #0]
 802a514:	b934      	cbnz	r4, 802a524 <__register_exitproc+0x2c>
 802a516:	4c23      	ldr	r4, [pc, #140]	; (802a5a4 <__register_exitproc+0xac>)
 802a518:	601c      	str	r4, [r3, #0]
 802a51a:	4b23      	ldr	r3, [pc, #140]	; (802a5a8 <__register_exitproc+0xb0>)
 802a51c:	b113      	cbz	r3, 802a524 <__register_exitproc+0x2c>
 802a51e:	681b      	ldr	r3, [r3, #0]
 802a520:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a524:	6863      	ldr	r3, [r4, #4]
 802a526:	2b1f      	cmp	r3, #31
 802a528:	dd07      	ble.n	802a53a <__register_exitproc+0x42>
 802a52a:	f8d8 0000 	ldr.w	r0, [r8]
 802a52e:	f7ff ffd3 	bl	802a4d8 <__retarget_lock_release_recursive>
 802a532:	f04f 30ff 	mov.w	r0, #4294967295
 802a536:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a53a:	b32e      	cbz	r6, 802a588 <__register_exitproc+0x90>
 802a53c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a540:	b968      	cbnz	r0, 802a55e <__register_exitproc+0x66>
 802a542:	4b1a      	ldr	r3, [pc, #104]	; (802a5ac <__register_exitproc+0xb4>)
 802a544:	2b00      	cmp	r3, #0
 802a546:	d0f0      	beq.n	802a52a <__register_exitproc+0x32>
 802a548:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a54c:	f7ff fcbe 	bl	8029ecc <malloc>
 802a550:	2800      	cmp	r0, #0
 802a552:	d0ea      	beq.n	802a52a <__register_exitproc+0x32>
 802a554:	2300      	movs	r3, #0
 802a556:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a55a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a55e:	6863      	ldr	r3, [r4, #4]
 802a560:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a564:	2201      	movs	r2, #1
 802a566:	409a      	lsls	r2, r3
 802a568:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a56c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a570:	4313      	orrs	r3, r2
 802a572:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a576:	2e02      	cmp	r6, #2
 802a578:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a57c:	bf02      	ittt	eq
 802a57e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a582:	4313      	orreq	r3, r2
 802a584:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a588:	6863      	ldr	r3, [r4, #4]
 802a58a:	f8d8 0000 	ldr.w	r0, [r8]
 802a58e:	1c5a      	adds	r2, r3, #1
 802a590:	3302      	adds	r3, #2
 802a592:	6062      	str	r2, [r4, #4]
 802a594:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a598:	f7ff ff9e 	bl	802a4d8 <__retarget_lock_release_recursive>
 802a59c:	2000      	movs	r0, #0
 802a59e:	e7ca      	b.n	802a536 <__register_exitproc+0x3e>
 802a5a0:	20013988 	.word	0x20013988
 802a5a4:	200138fc 	.word	0x200138fc
 802a5a8:	080424c4 	.word	0x080424c4
 802a5ac:	08029ecd 	.word	0x08029ecd
 802a5b0:	20000164 	.word	0x20000164

0802a5b4 <_free_r>:
 802a5b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a5b6:	2900      	cmp	r1, #0
 802a5b8:	d044      	beq.n	802a644 <_free_r+0x90>
 802a5ba:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a5be:	9001      	str	r0, [sp, #4]
 802a5c0:	2b00      	cmp	r3, #0
 802a5c2:	f1a1 0404 	sub.w	r4, r1, #4
 802a5c6:	bfb8      	it	lt
 802a5c8:	18e4      	addlt	r4, r4, r3
 802a5ca:	f7ff fd2f 	bl	802a02c <__malloc_lock>
 802a5ce:	4a1e      	ldr	r2, [pc, #120]	; (802a648 <_free_r+0x94>)
 802a5d0:	9801      	ldr	r0, [sp, #4]
 802a5d2:	6813      	ldr	r3, [r2, #0]
 802a5d4:	b933      	cbnz	r3, 802a5e4 <_free_r+0x30>
 802a5d6:	6063      	str	r3, [r4, #4]
 802a5d8:	6014      	str	r4, [r2, #0]
 802a5da:	b003      	add	sp, #12
 802a5dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a5e0:	f7ff bd2a 	b.w	802a038 <__malloc_unlock>
 802a5e4:	42a3      	cmp	r3, r4
 802a5e6:	d908      	bls.n	802a5fa <_free_r+0x46>
 802a5e8:	6825      	ldr	r5, [r4, #0]
 802a5ea:	1961      	adds	r1, r4, r5
 802a5ec:	428b      	cmp	r3, r1
 802a5ee:	bf01      	itttt	eq
 802a5f0:	6819      	ldreq	r1, [r3, #0]
 802a5f2:	685b      	ldreq	r3, [r3, #4]
 802a5f4:	1949      	addeq	r1, r1, r5
 802a5f6:	6021      	streq	r1, [r4, #0]
 802a5f8:	e7ed      	b.n	802a5d6 <_free_r+0x22>
 802a5fa:	461a      	mov	r2, r3
 802a5fc:	685b      	ldr	r3, [r3, #4]
 802a5fe:	b10b      	cbz	r3, 802a604 <_free_r+0x50>
 802a600:	42a3      	cmp	r3, r4
 802a602:	d9fa      	bls.n	802a5fa <_free_r+0x46>
 802a604:	6811      	ldr	r1, [r2, #0]
 802a606:	1855      	adds	r5, r2, r1
 802a608:	42a5      	cmp	r5, r4
 802a60a:	d10b      	bne.n	802a624 <_free_r+0x70>
 802a60c:	6824      	ldr	r4, [r4, #0]
 802a60e:	4421      	add	r1, r4
 802a610:	1854      	adds	r4, r2, r1
 802a612:	42a3      	cmp	r3, r4
 802a614:	6011      	str	r1, [r2, #0]
 802a616:	d1e0      	bne.n	802a5da <_free_r+0x26>
 802a618:	681c      	ldr	r4, [r3, #0]
 802a61a:	685b      	ldr	r3, [r3, #4]
 802a61c:	6053      	str	r3, [r2, #4]
 802a61e:	440c      	add	r4, r1
 802a620:	6014      	str	r4, [r2, #0]
 802a622:	e7da      	b.n	802a5da <_free_r+0x26>
 802a624:	d902      	bls.n	802a62c <_free_r+0x78>
 802a626:	230c      	movs	r3, #12
 802a628:	6003      	str	r3, [r0, #0]
 802a62a:	e7d6      	b.n	802a5da <_free_r+0x26>
 802a62c:	6825      	ldr	r5, [r4, #0]
 802a62e:	1961      	adds	r1, r4, r5
 802a630:	428b      	cmp	r3, r1
 802a632:	bf04      	itt	eq
 802a634:	6819      	ldreq	r1, [r3, #0]
 802a636:	685b      	ldreq	r3, [r3, #4]
 802a638:	6063      	str	r3, [r4, #4]
 802a63a:	bf04      	itt	eq
 802a63c:	1949      	addeq	r1, r1, r5
 802a63e:	6021      	streq	r1, [r4, #0]
 802a640:	6054      	str	r4, [r2, #4]
 802a642:	e7ca      	b.n	802a5da <_free_r+0x26>
 802a644:	b003      	add	sp, #12
 802a646:	bd30      	pop	{r4, r5, pc}
 802a648:	200137b0 	.word	0x200137b0

0802a64c <__sfputc_r>:
 802a64c:	6893      	ldr	r3, [r2, #8]
 802a64e:	3b01      	subs	r3, #1
 802a650:	2b00      	cmp	r3, #0
 802a652:	b410      	push	{r4}
 802a654:	6093      	str	r3, [r2, #8]
 802a656:	da08      	bge.n	802a66a <__sfputc_r+0x1e>
 802a658:	6994      	ldr	r4, [r2, #24]
 802a65a:	42a3      	cmp	r3, r4
 802a65c:	db01      	blt.n	802a662 <__sfputc_r+0x16>
 802a65e:	290a      	cmp	r1, #10
 802a660:	d103      	bne.n	802a66a <__sfputc_r+0x1e>
 802a662:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a666:	f000 bb73 	b.w	802ad50 <__swbuf_r>
 802a66a:	6813      	ldr	r3, [r2, #0]
 802a66c:	1c58      	adds	r0, r3, #1
 802a66e:	6010      	str	r0, [r2, #0]
 802a670:	7019      	strb	r1, [r3, #0]
 802a672:	4608      	mov	r0, r1
 802a674:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a678:	4770      	bx	lr

0802a67a <__sfputs_r>:
 802a67a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a67c:	4606      	mov	r6, r0
 802a67e:	460f      	mov	r7, r1
 802a680:	4614      	mov	r4, r2
 802a682:	18d5      	adds	r5, r2, r3
 802a684:	42ac      	cmp	r4, r5
 802a686:	d101      	bne.n	802a68c <__sfputs_r+0x12>
 802a688:	2000      	movs	r0, #0
 802a68a:	e007      	b.n	802a69c <__sfputs_r+0x22>
 802a68c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a690:	463a      	mov	r2, r7
 802a692:	4630      	mov	r0, r6
 802a694:	f7ff ffda 	bl	802a64c <__sfputc_r>
 802a698:	1c43      	adds	r3, r0, #1
 802a69a:	d1f3      	bne.n	802a684 <__sfputs_r+0xa>
 802a69c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a6a0 <_vfiprintf_r>:
 802a6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a6a4:	460d      	mov	r5, r1
 802a6a6:	b09d      	sub	sp, #116	; 0x74
 802a6a8:	4614      	mov	r4, r2
 802a6aa:	4698      	mov	r8, r3
 802a6ac:	4606      	mov	r6, r0
 802a6ae:	b118      	cbz	r0, 802a6b8 <_vfiprintf_r+0x18>
 802a6b0:	6a03      	ldr	r3, [r0, #32]
 802a6b2:	b90b      	cbnz	r3, 802a6b8 <_vfiprintf_r+0x18>
 802a6b4:	f7ff fd60 	bl	802a178 <__sinit>
 802a6b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a6ba:	07d9      	lsls	r1, r3, #31
 802a6bc:	d405      	bmi.n	802a6ca <_vfiprintf_r+0x2a>
 802a6be:	89ab      	ldrh	r3, [r5, #12]
 802a6c0:	059a      	lsls	r2, r3, #22
 802a6c2:	d402      	bmi.n	802a6ca <_vfiprintf_r+0x2a>
 802a6c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a6c6:	f7ff ff06 	bl	802a4d6 <__retarget_lock_acquire_recursive>
 802a6ca:	89ab      	ldrh	r3, [r5, #12]
 802a6cc:	071b      	lsls	r3, r3, #28
 802a6ce:	d501      	bpl.n	802a6d4 <_vfiprintf_r+0x34>
 802a6d0:	692b      	ldr	r3, [r5, #16]
 802a6d2:	b99b      	cbnz	r3, 802a6fc <_vfiprintf_r+0x5c>
 802a6d4:	4629      	mov	r1, r5
 802a6d6:	4630      	mov	r0, r6
 802a6d8:	f000 fb78 	bl	802adcc <__swsetup_r>
 802a6dc:	b170      	cbz	r0, 802a6fc <_vfiprintf_r+0x5c>
 802a6de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a6e0:	07dc      	lsls	r4, r3, #31
 802a6e2:	d504      	bpl.n	802a6ee <_vfiprintf_r+0x4e>
 802a6e4:	f04f 30ff 	mov.w	r0, #4294967295
 802a6e8:	b01d      	add	sp, #116	; 0x74
 802a6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a6ee:	89ab      	ldrh	r3, [r5, #12]
 802a6f0:	0598      	lsls	r0, r3, #22
 802a6f2:	d4f7      	bmi.n	802a6e4 <_vfiprintf_r+0x44>
 802a6f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a6f6:	f7ff feef 	bl	802a4d8 <__retarget_lock_release_recursive>
 802a6fa:	e7f3      	b.n	802a6e4 <_vfiprintf_r+0x44>
 802a6fc:	2300      	movs	r3, #0
 802a6fe:	9309      	str	r3, [sp, #36]	; 0x24
 802a700:	2320      	movs	r3, #32
 802a702:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a706:	f8cd 800c 	str.w	r8, [sp, #12]
 802a70a:	2330      	movs	r3, #48	; 0x30
 802a70c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802a8c0 <_vfiprintf_r+0x220>
 802a710:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a714:	f04f 0901 	mov.w	r9, #1
 802a718:	4623      	mov	r3, r4
 802a71a:	469a      	mov	sl, r3
 802a71c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a720:	b10a      	cbz	r2, 802a726 <_vfiprintf_r+0x86>
 802a722:	2a25      	cmp	r2, #37	; 0x25
 802a724:	d1f9      	bne.n	802a71a <_vfiprintf_r+0x7a>
 802a726:	ebba 0b04 	subs.w	fp, sl, r4
 802a72a:	d00b      	beq.n	802a744 <_vfiprintf_r+0xa4>
 802a72c:	465b      	mov	r3, fp
 802a72e:	4622      	mov	r2, r4
 802a730:	4629      	mov	r1, r5
 802a732:	4630      	mov	r0, r6
 802a734:	f7ff ffa1 	bl	802a67a <__sfputs_r>
 802a738:	3001      	adds	r0, #1
 802a73a:	f000 80a9 	beq.w	802a890 <_vfiprintf_r+0x1f0>
 802a73e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a740:	445a      	add	r2, fp
 802a742:	9209      	str	r2, [sp, #36]	; 0x24
 802a744:	f89a 3000 	ldrb.w	r3, [sl]
 802a748:	2b00      	cmp	r3, #0
 802a74a:	f000 80a1 	beq.w	802a890 <_vfiprintf_r+0x1f0>
 802a74e:	2300      	movs	r3, #0
 802a750:	f04f 32ff 	mov.w	r2, #4294967295
 802a754:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a758:	f10a 0a01 	add.w	sl, sl, #1
 802a75c:	9304      	str	r3, [sp, #16]
 802a75e:	9307      	str	r3, [sp, #28]
 802a760:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a764:	931a      	str	r3, [sp, #104]	; 0x68
 802a766:	4654      	mov	r4, sl
 802a768:	2205      	movs	r2, #5
 802a76a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a76e:	4854      	ldr	r0, [pc, #336]	; (802a8c0 <_vfiprintf_r+0x220>)
 802a770:	f7d5 fd9e 	bl	80002b0 <memchr>
 802a774:	9a04      	ldr	r2, [sp, #16]
 802a776:	b9d8      	cbnz	r0, 802a7b0 <_vfiprintf_r+0x110>
 802a778:	06d1      	lsls	r1, r2, #27
 802a77a:	bf44      	itt	mi
 802a77c:	2320      	movmi	r3, #32
 802a77e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a782:	0713      	lsls	r3, r2, #28
 802a784:	bf44      	itt	mi
 802a786:	232b      	movmi	r3, #43	; 0x2b
 802a788:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a78c:	f89a 3000 	ldrb.w	r3, [sl]
 802a790:	2b2a      	cmp	r3, #42	; 0x2a
 802a792:	d015      	beq.n	802a7c0 <_vfiprintf_r+0x120>
 802a794:	9a07      	ldr	r2, [sp, #28]
 802a796:	4654      	mov	r4, sl
 802a798:	2000      	movs	r0, #0
 802a79a:	f04f 0c0a 	mov.w	ip, #10
 802a79e:	4621      	mov	r1, r4
 802a7a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a7a4:	3b30      	subs	r3, #48	; 0x30
 802a7a6:	2b09      	cmp	r3, #9
 802a7a8:	d94d      	bls.n	802a846 <_vfiprintf_r+0x1a6>
 802a7aa:	b1b0      	cbz	r0, 802a7da <_vfiprintf_r+0x13a>
 802a7ac:	9207      	str	r2, [sp, #28]
 802a7ae:	e014      	b.n	802a7da <_vfiprintf_r+0x13a>
 802a7b0:	eba0 0308 	sub.w	r3, r0, r8
 802a7b4:	fa09 f303 	lsl.w	r3, r9, r3
 802a7b8:	4313      	orrs	r3, r2
 802a7ba:	9304      	str	r3, [sp, #16]
 802a7bc:	46a2      	mov	sl, r4
 802a7be:	e7d2      	b.n	802a766 <_vfiprintf_r+0xc6>
 802a7c0:	9b03      	ldr	r3, [sp, #12]
 802a7c2:	1d19      	adds	r1, r3, #4
 802a7c4:	681b      	ldr	r3, [r3, #0]
 802a7c6:	9103      	str	r1, [sp, #12]
 802a7c8:	2b00      	cmp	r3, #0
 802a7ca:	bfbb      	ittet	lt
 802a7cc:	425b      	neglt	r3, r3
 802a7ce:	f042 0202 	orrlt.w	r2, r2, #2
 802a7d2:	9307      	strge	r3, [sp, #28]
 802a7d4:	9307      	strlt	r3, [sp, #28]
 802a7d6:	bfb8      	it	lt
 802a7d8:	9204      	strlt	r2, [sp, #16]
 802a7da:	7823      	ldrb	r3, [r4, #0]
 802a7dc:	2b2e      	cmp	r3, #46	; 0x2e
 802a7de:	d10c      	bne.n	802a7fa <_vfiprintf_r+0x15a>
 802a7e0:	7863      	ldrb	r3, [r4, #1]
 802a7e2:	2b2a      	cmp	r3, #42	; 0x2a
 802a7e4:	d134      	bne.n	802a850 <_vfiprintf_r+0x1b0>
 802a7e6:	9b03      	ldr	r3, [sp, #12]
 802a7e8:	1d1a      	adds	r2, r3, #4
 802a7ea:	681b      	ldr	r3, [r3, #0]
 802a7ec:	9203      	str	r2, [sp, #12]
 802a7ee:	2b00      	cmp	r3, #0
 802a7f0:	bfb8      	it	lt
 802a7f2:	f04f 33ff 	movlt.w	r3, #4294967295
 802a7f6:	3402      	adds	r4, #2
 802a7f8:	9305      	str	r3, [sp, #20]
 802a7fa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802a8d0 <_vfiprintf_r+0x230>
 802a7fe:	7821      	ldrb	r1, [r4, #0]
 802a800:	2203      	movs	r2, #3
 802a802:	4650      	mov	r0, sl
 802a804:	f7d5 fd54 	bl	80002b0 <memchr>
 802a808:	b138      	cbz	r0, 802a81a <_vfiprintf_r+0x17a>
 802a80a:	9b04      	ldr	r3, [sp, #16]
 802a80c:	eba0 000a 	sub.w	r0, r0, sl
 802a810:	2240      	movs	r2, #64	; 0x40
 802a812:	4082      	lsls	r2, r0
 802a814:	4313      	orrs	r3, r2
 802a816:	3401      	adds	r4, #1
 802a818:	9304      	str	r3, [sp, #16]
 802a81a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a81e:	4829      	ldr	r0, [pc, #164]	; (802a8c4 <_vfiprintf_r+0x224>)
 802a820:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a824:	2206      	movs	r2, #6
 802a826:	f7d5 fd43 	bl	80002b0 <memchr>
 802a82a:	2800      	cmp	r0, #0
 802a82c:	d03f      	beq.n	802a8ae <_vfiprintf_r+0x20e>
 802a82e:	4b26      	ldr	r3, [pc, #152]	; (802a8c8 <_vfiprintf_r+0x228>)
 802a830:	bb1b      	cbnz	r3, 802a87a <_vfiprintf_r+0x1da>
 802a832:	9b03      	ldr	r3, [sp, #12]
 802a834:	3307      	adds	r3, #7
 802a836:	f023 0307 	bic.w	r3, r3, #7
 802a83a:	3308      	adds	r3, #8
 802a83c:	9303      	str	r3, [sp, #12]
 802a83e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a840:	443b      	add	r3, r7
 802a842:	9309      	str	r3, [sp, #36]	; 0x24
 802a844:	e768      	b.n	802a718 <_vfiprintf_r+0x78>
 802a846:	fb0c 3202 	mla	r2, ip, r2, r3
 802a84a:	460c      	mov	r4, r1
 802a84c:	2001      	movs	r0, #1
 802a84e:	e7a6      	b.n	802a79e <_vfiprintf_r+0xfe>
 802a850:	2300      	movs	r3, #0
 802a852:	3401      	adds	r4, #1
 802a854:	9305      	str	r3, [sp, #20]
 802a856:	4619      	mov	r1, r3
 802a858:	f04f 0c0a 	mov.w	ip, #10
 802a85c:	4620      	mov	r0, r4
 802a85e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a862:	3a30      	subs	r2, #48	; 0x30
 802a864:	2a09      	cmp	r2, #9
 802a866:	d903      	bls.n	802a870 <_vfiprintf_r+0x1d0>
 802a868:	2b00      	cmp	r3, #0
 802a86a:	d0c6      	beq.n	802a7fa <_vfiprintf_r+0x15a>
 802a86c:	9105      	str	r1, [sp, #20]
 802a86e:	e7c4      	b.n	802a7fa <_vfiprintf_r+0x15a>
 802a870:	fb0c 2101 	mla	r1, ip, r1, r2
 802a874:	4604      	mov	r4, r0
 802a876:	2301      	movs	r3, #1
 802a878:	e7f0      	b.n	802a85c <_vfiprintf_r+0x1bc>
 802a87a:	ab03      	add	r3, sp, #12
 802a87c:	9300      	str	r3, [sp, #0]
 802a87e:	462a      	mov	r2, r5
 802a880:	4b12      	ldr	r3, [pc, #72]	; (802a8cc <_vfiprintf_r+0x22c>)
 802a882:	a904      	add	r1, sp, #16
 802a884:	4630      	mov	r0, r6
 802a886:	f3af 8000 	nop.w
 802a88a:	4607      	mov	r7, r0
 802a88c:	1c78      	adds	r0, r7, #1
 802a88e:	d1d6      	bne.n	802a83e <_vfiprintf_r+0x19e>
 802a890:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a892:	07d9      	lsls	r1, r3, #31
 802a894:	d405      	bmi.n	802a8a2 <_vfiprintf_r+0x202>
 802a896:	89ab      	ldrh	r3, [r5, #12]
 802a898:	059a      	lsls	r2, r3, #22
 802a89a:	d402      	bmi.n	802a8a2 <_vfiprintf_r+0x202>
 802a89c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a89e:	f7ff fe1b 	bl	802a4d8 <__retarget_lock_release_recursive>
 802a8a2:	89ab      	ldrh	r3, [r5, #12]
 802a8a4:	065b      	lsls	r3, r3, #25
 802a8a6:	f53f af1d 	bmi.w	802a6e4 <_vfiprintf_r+0x44>
 802a8aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a8ac:	e71c      	b.n	802a6e8 <_vfiprintf_r+0x48>
 802a8ae:	ab03      	add	r3, sp, #12
 802a8b0:	9300      	str	r3, [sp, #0]
 802a8b2:	462a      	mov	r2, r5
 802a8b4:	4b05      	ldr	r3, [pc, #20]	; (802a8cc <_vfiprintf_r+0x22c>)
 802a8b6:	a904      	add	r1, sp, #16
 802a8b8:	4630      	mov	r0, r6
 802a8ba:	f000 f879 	bl	802a9b0 <_printf_i>
 802a8be:	e7e4      	b.n	802a88a <_vfiprintf_r+0x1ea>
 802a8c0:	080424c8 	.word	0x080424c8
 802a8c4:	080424d2 	.word	0x080424d2
 802a8c8:	00000000 	.word	0x00000000
 802a8cc:	0802a67b 	.word	0x0802a67b
 802a8d0:	080424ce 	.word	0x080424ce

0802a8d4 <_printf_common>:
 802a8d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a8d8:	4616      	mov	r6, r2
 802a8da:	4699      	mov	r9, r3
 802a8dc:	688a      	ldr	r2, [r1, #8]
 802a8de:	690b      	ldr	r3, [r1, #16]
 802a8e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802a8e4:	4293      	cmp	r3, r2
 802a8e6:	bfb8      	it	lt
 802a8e8:	4613      	movlt	r3, r2
 802a8ea:	6033      	str	r3, [r6, #0]
 802a8ec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802a8f0:	4607      	mov	r7, r0
 802a8f2:	460c      	mov	r4, r1
 802a8f4:	b10a      	cbz	r2, 802a8fa <_printf_common+0x26>
 802a8f6:	3301      	adds	r3, #1
 802a8f8:	6033      	str	r3, [r6, #0]
 802a8fa:	6823      	ldr	r3, [r4, #0]
 802a8fc:	0699      	lsls	r1, r3, #26
 802a8fe:	bf42      	ittt	mi
 802a900:	6833      	ldrmi	r3, [r6, #0]
 802a902:	3302      	addmi	r3, #2
 802a904:	6033      	strmi	r3, [r6, #0]
 802a906:	6825      	ldr	r5, [r4, #0]
 802a908:	f015 0506 	ands.w	r5, r5, #6
 802a90c:	d106      	bne.n	802a91c <_printf_common+0x48>
 802a90e:	f104 0a19 	add.w	sl, r4, #25
 802a912:	68e3      	ldr	r3, [r4, #12]
 802a914:	6832      	ldr	r2, [r6, #0]
 802a916:	1a9b      	subs	r3, r3, r2
 802a918:	42ab      	cmp	r3, r5
 802a91a:	dc26      	bgt.n	802a96a <_printf_common+0x96>
 802a91c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802a920:	1e13      	subs	r3, r2, #0
 802a922:	6822      	ldr	r2, [r4, #0]
 802a924:	bf18      	it	ne
 802a926:	2301      	movne	r3, #1
 802a928:	0692      	lsls	r2, r2, #26
 802a92a:	d42b      	bmi.n	802a984 <_printf_common+0xb0>
 802a92c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802a930:	4649      	mov	r1, r9
 802a932:	4638      	mov	r0, r7
 802a934:	47c0      	blx	r8
 802a936:	3001      	adds	r0, #1
 802a938:	d01e      	beq.n	802a978 <_printf_common+0xa4>
 802a93a:	6823      	ldr	r3, [r4, #0]
 802a93c:	6922      	ldr	r2, [r4, #16]
 802a93e:	f003 0306 	and.w	r3, r3, #6
 802a942:	2b04      	cmp	r3, #4
 802a944:	bf02      	ittt	eq
 802a946:	68e5      	ldreq	r5, [r4, #12]
 802a948:	6833      	ldreq	r3, [r6, #0]
 802a94a:	1aed      	subeq	r5, r5, r3
 802a94c:	68a3      	ldr	r3, [r4, #8]
 802a94e:	bf0c      	ite	eq
 802a950:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a954:	2500      	movne	r5, #0
 802a956:	4293      	cmp	r3, r2
 802a958:	bfc4      	itt	gt
 802a95a:	1a9b      	subgt	r3, r3, r2
 802a95c:	18ed      	addgt	r5, r5, r3
 802a95e:	2600      	movs	r6, #0
 802a960:	341a      	adds	r4, #26
 802a962:	42b5      	cmp	r5, r6
 802a964:	d11a      	bne.n	802a99c <_printf_common+0xc8>
 802a966:	2000      	movs	r0, #0
 802a968:	e008      	b.n	802a97c <_printf_common+0xa8>
 802a96a:	2301      	movs	r3, #1
 802a96c:	4652      	mov	r2, sl
 802a96e:	4649      	mov	r1, r9
 802a970:	4638      	mov	r0, r7
 802a972:	47c0      	blx	r8
 802a974:	3001      	adds	r0, #1
 802a976:	d103      	bne.n	802a980 <_printf_common+0xac>
 802a978:	f04f 30ff 	mov.w	r0, #4294967295
 802a97c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a980:	3501      	adds	r5, #1
 802a982:	e7c6      	b.n	802a912 <_printf_common+0x3e>
 802a984:	18e1      	adds	r1, r4, r3
 802a986:	1c5a      	adds	r2, r3, #1
 802a988:	2030      	movs	r0, #48	; 0x30
 802a98a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802a98e:	4422      	add	r2, r4
 802a990:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802a994:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802a998:	3302      	adds	r3, #2
 802a99a:	e7c7      	b.n	802a92c <_printf_common+0x58>
 802a99c:	2301      	movs	r3, #1
 802a99e:	4622      	mov	r2, r4
 802a9a0:	4649      	mov	r1, r9
 802a9a2:	4638      	mov	r0, r7
 802a9a4:	47c0      	blx	r8
 802a9a6:	3001      	adds	r0, #1
 802a9a8:	d0e6      	beq.n	802a978 <_printf_common+0xa4>
 802a9aa:	3601      	adds	r6, #1
 802a9ac:	e7d9      	b.n	802a962 <_printf_common+0x8e>
	...

0802a9b0 <_printf_i>:
 802a9b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a9b4:	7e0f      	ldrb	r7, [r1, #24]
 802a9b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802a9b8:	2f78      	cmp	r7, #120	; 0x78
 802a9ba:	4691      	mov	r9, r2
 802a9bc:	4680      	mov	r8, r0
 802a9be:	460c      	mov	r4, r1
 802a9c0:	469a      	mov	sl, r3
 802a9c2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802a9c6:	d807      	bhi.n	802a9d8 <_printf_i+0x28>
 802a9c8:	2f62      	cmp	r7, #98	; 0x62
 802a9ca:	d80a      	bhi.n	802a9e2 <_printf_i+0x32>
 802a9cc:	2f00      	cmp	r7, #0
 802a9ce:	f000 80d4 	beq.w	802ab7a <_printf_i+0x1ca>
 802a9d2:	2f58      	cmp	r7, #88	; 0x58
 802a9d4:	f000 80c0 	beq.w	802ab58 <_printf_i+0x1a8>
 802a9d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a9dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802a9e0:	e03a      	b.n	802aa58 <_printf_i+0xa8>
 802a9e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802a9e6:	2b15      	cmp	r3, #21
 802a9e8:	d8f6      	bhi.n	802a9d8 <_printf_i+0x28>
 802a9ea:	a101      	add	r1, pc, #4	; (adr r1, 802a9f0 <_printf_i+0x40>)
 802a9ec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802a9f0:	0802aa49 	.word	0x0802aa49
 802a9f4:	0802aa5d 	.word	0x0802aa5d
 802a9f8:	0802a9d9 	.word	0x0802a9d9
 802a9fc:	0802a9d9 	.word	0x0802a9d9
 802aa00:	0802a9d9 	.word	0x0802a9d9
 802aa04:	0802a9d9 	.word	0x0802a9d9
 802aa08:	0802aa5d 	.word	0x0802aa5d
 802aa0c:	0802a9d9 	.word	0x0802a9d9
 802aa10:	0802a9d9 	.word	0x0802a9d9
 802aa14:	0802a9d9 	.word	0x0802a9d9
 802aa18:	0802a9d9 	.word	0x0802a9d9
 802aa1c:	0802ab61 	.word	0x0802ab61
 802aa20:	0802aa89 	.word	0x0802aa89
 802aa24:	0802ab1b 	.word	0x0802ab1b
 802aa28:	0802a9d9 	.word	0x0802a9d9
 802aa2c:	0802a9d9 	.word	0x0802a9d9
 802aa30:	0802ab83 	.word	0x0802ab83
 802aa34:	0802a9d9 	.word	0x0802a9d9
 802aa38:	0802aa89 	.word	0x0802aa89
 802aa3c:	0802a9d9 	.word	0x0802a9d9
 802aa40:	0802a9d9 	.word	0x0802a9d9
 802aa44:	0802ab23 	.word	0x0802ab23
 802aa48:	682b      	ldr	r3, [r5, #0]
 802aa4a:	1d1a      	adds	r2, r3, #4
 802aa4c:	681b      	ldr	r3, [r3, #0]
 802aa4e:	602a      	str	r2, [r5, #0]
 802aa50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802aa54:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802aa58:	2301      	movs	r3, #1
 802aa5a:	e09f      	b.n	802ab9c <_printf_i+0x1ec>
 802aa5c:	6820      	ldr	r0, [r4, #0]
 802aa5e:	682b      	ldr	r3, [r5, #0]
 802aa60:	0607      	lsls	r7, r0, #24
 802aa62:	f103 0104 	add.w	r1, r3, #4
 802aa66:	6029      	str	r1, [r5, #0]
 802aa68:	d501      	bpl.n	802aa6e <_printf_i+0xbe>
 802aa6a:	681e      	ldr	r6, [r3, #0]
 802aa6c:	e003      	b.n	802aa76 <_printf_i+0xc6>
 802aa6e:	0646      	lsls	r6, r0, #25
 802aa70:	d5fb      	bpl.n	802aa6a <_printf_i+0xba>
 802aa72:	f9b3 6000 	ldrsh.w	r6, [r3]
 802aa76:	2e00      	cmp	r6, #0
 802aa78:	da03      	bge.n	802aa82 <_printf_i+0xd2>
 802aa7a:	232d      	movs	r3, #45	; 0x2d
 802aa7c:	4276      	negs	r6, r6
 802aa7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802aa82:	485a      	ldr	r0, [pc, #360]	; (802abec <_printf_i+0x23c>)
 802aa84:	230a      	movs	r3, #10
 802aa86:	e012      	b.n	802aaae <_printf_i+0xfe>
 802aa88:	682b      	ldr	r3, [r5, #0]
 802aa8a:	6820      	ldr	r0, [r4, #0]
 802aa8c:	1d19      	adds	r1, r3, #4
 802aa8e:	6029      	str	r1, [r5, #0]
 802aa90:	0605      	lsls	r5, r0, #24
 802aa92:	d501      	bpl.n	802aa98 <_printf_i+0xe8>
 802aa94:	681e      	ldr	r6, [r3, #0]
 802aa96:	e002      	b.n	802aa9e <_printf_i+0xee>
 802aa98:	0641      	lsls	r1, r0, #25
 802aa9a:	d5fb      	bpl.n	802aa94 <_printf_i+0xe4>
 802aa9c:	881e      	ldrh	r6, [r3, #0]
 802aa9e:	4853      	ldr	r0, [pc, #332]	; (802abec <_printf_i+0x23c>)
 802aaa0:	2f6f      	cmp	r7, #111	; 0x6f
 802aaa2:	bf0c      	ite	eq
 802aaa4:	2308      	moveq	r3, #8
 802aaa6:	230a      	movne	r3, #10
 802aaa8:	2100      	movs	r1, #0
 802aaaa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802aaae:	6865      	ldr	r5, [r4, #4]
 802aab0:	60a5      	str	r5, [r4, #8]
 802aab2:	2d00      	cmp	r5, #0
 802aab4:	bfa2      	ittt	ge
 802aab6:	6821      	ldrge	r1, [r4, #0]
 802aab8:	f021 0104 	bicge.w	r1, r1, #4
 802aabc:	6021      	strge	r1, [r4, #0]
 802aabe:	b90e      	cbnz	r6, 802aac4 <_printf_i+0x114>
 802aac0:	2d00      	cmp	r5, #0
 802aac2:	d04b      	beq.n	802ab5c <_printf_i+0x1ac>
 802aac4:	4615      	mov	r5, r2
 802aac6:	fbb6 f1f3 	udiv	r1, r6, r3
 802aaca:	fb03 6711 	mls	r7, r3, r1, r6
 802aace:	5dc7      	ldrb	r7, [r0, r7]
 802aad0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802aad4:	4637      	mov	r7, r6
 802aad6:	42bb      	cmp	r3, r7
 802aad8:	460e      	mov	r6, r1
 802aada:	d9f4      	bls.n	802aac6 <_printf_i+0x116>
 802aadc:	2b08      	cmp	r3, #8
 802aade:	d10b      	bne.n	802aaf8 <_printf_i+0x148>
 802aae0:	6823      	ldr	r3, [r4, #0]
 802aae2:	07de      	lsls	r6, r3, #31
 802aae4:	d508      	bpl.n	802aaf8 <_printf_i+0x148>
 802aae6:	6923      	ldr	r3, [r4, #16]
 802aae8:	6861      	ldr	r1, [r4, #4]
 802aaea:	4299      	cmp	r1, r3
 802aaec:	bfde      	ittt	le
 802aaee:	2330      	movle	r3, #48	; 0x30
 802aaf0:	f805 3c01 	strble.w	r3, [r5, #-1]
 802aaf4:	f105 35ff 	addle.w	r5, r5, #4294967295
 802aaf8:	1b52      	subs	r2, r2, r5
 802aafa:	6122      	str	r2, [r4, #16]
 802aafc:	f8cd a000 	str.w	sl, [sp]
 802ab00:	464b      	mov	r3, r9
 802ab02:	aa03      	add	r2, sp, #12
 802ab04:	4621      	mov	r1, r4
 802ab06:	4640      	mov	r0, r8
 802ab08:	f7ff fee4 	bl	802a8d4 <_printf_common>
 802ab0c:	3001      	adds	r0, #1
 802ab0e:	d14a      	bne.n	802aba6 <_printf_i+0x1f6>
 802ab10:	f04f 30ff 	mov.w	r0, #4294967295
 802ab14:	b004      	add	sp, #16
 802ab16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ab1a:	6823      	ldr	r3, [r4, #0]
 802ab1c:	f043 0320 	orr.w	r3, r3, #32
 802ab20:	6023      	str	r3, [r4, #0]
 802ab22:	4833      	ldr	r0, [pc, #204]	; (802abf0 <_printf_i+0x240>)
 802ab24:	2778      	movs	r7, #120	; 0x78
 802ab26:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802ab2a:	6823      	ldr	r3, [r4, #0]
 802ab2c:	6829      	ldr	r1, [r5, #0]
 802ab2e:	061f      	lsls	r7, r3, #24
 802ab30:	f851 6b04 	ldr.w	r6, [r1], #4
 802ab34:	d402      	bmi.n	802ab3c <_printf_i+0x18c>
 802ab36:	065f      	lsls	r7, r3, #25
 802ab38:	bf48      	it	mi
 802ab3a:	b2b6      	uxthmi	r6, r6
 802ab3c:	07df      	lsls	r7, r3, #31
 802ab3e:	bf48      	it	mi
 802ab40:	f043 0320 	orrmi.w	r3, r3, #32
 802ab44:	6029      	str	r1, [r5, #0]
 802ab46:	bf48      	it	mi
 802ab48:	6023      	strmi	r3, [r4, #0]
 802ab4a:	b91e      	cbnz	r6, 802ab54 <_printf_i+0x1a4>
 802ab4c:	6823      	ldr	r3, [r4, #0]
 802ab4e:	f023 0320 	bic.w	r3, r3, #32
 802ab52:	6023      	str	r3, [r4, #0]
 802ab54:	2310      	movs	r3, #16
 802ab56:	e7a7      	b.n	802aaa8 <_printf_i+0xf8>
 802ab58:	4824      	ldr	r0, [pc, #144]	; (802abec <_printf_i+0x23c>)
 802ab5a:	e7e4      	b.n	802ab26 <_printf_i+0x176>
 802ab5c:	4615      	mov	r5, r2
 802ab5e:	e7bd      	b.n	802aadc <_printf_i+0x12c>
 802ab60:	682b      	ldr	r3, [r5, #0]
 802ab62:	6826      	ldr	r6, [r4, #0]
 802ab64:	6961      	ldr	r1, [r4, #20]
 802ab66:	1d18      	adds	r0, r3, #4
 802ab68:	6028      	str	r0, [r5, #0]
 802ab6a:	0635      	lsls	r5, r6, #24
 802ab6c:	681b      	ldr	r3, [r3, #0]
 802ab6e:	d501      	bpl.n	802ab74 <_printf_i+0x1c4>
 802ab70:	6019      	str	r1, [r3, #0]
 802ab72:	e002      	b.n	802ab7a <_printf_i+0x1ca>
 802ab74:	0670      	lsls	r0, r6, #25
 802ab76:	d5fb      	bpl.n	802ab70 <_printf_i+0x1c0>
 802ab78:	8019      	strh	r1, [r3, #0]
 802ab7a:	2300      	movs	r3, #0
 802ab7c:	6123      	str	r3, [r4, #16]
 802ab7e:	4615      	mov	r5, r2
 802ab80:	e7bc      	b.n	802aafc <_printf_i+0x14c>
 802ab82:	682b      	ldr	r3, [r5, #0]
 802ab84:	1d1a      	adds	r2, r3, #4
 802ab86:	602a      	str	r2, [r5, #0]
 802ab88:	681d      	ldr	r5, [r3, #0]
 802ab8a:	6862      	ldr	r2, [r4, #4]
 802ab8c:	2100      	movs	r1, #0
 802ab8e:	4628      	mov	r0, r5
 802ab90:	f7d5 fb8e 	bl	80002b0 <memchr>
 802ab94:	b108      	cbz	r0, 802ab9a <_printf_i+0x1ea>
 802ab96:	1b40      	subs	r0, r0, r5
 802ab98:	6060      	str	r0, [r4, #4]
 802ab9a:	6863      	ldr	r3, [r4, #4]
 802ab9c:	6123      	str	r3, [r4, #16]
 802ab9e:	2300      	movs	r3, #0
 802aba0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802aba4:	e7aa      	b.n	802aafc <_printf_i+0x14c>
 802aba6:	6923      	ldr	r3, [r4, #16]
 802aba8:	462a      	mov	r2, r5
 802abaa:	4649      	mov	r1, r9
 802abac:	4640      	mov	r0, r8
 802abae:	47d0      	blx	sl
 802abb0:	3001      	adds	r0, #1
 802abb2:	d0ad      	beq.n	802ab10 <_printf_i+0x160>
 802abb4:	6823      	ldr	r3, [r4, #0]
 802abb6:	079b      	lsls	r3, r3, #30
 802abb8:	d413      	bmi.n	802abe2 <_printf_i+0x232>
 802abba:	68e0      	ldr	r0, [r4, #12]
 802abbc:	9b03      	ldr	r3, [sp, #12]
 802abbe:	4298      	cmp	r0, r3
 802abc0:	bfb8      	it	lt
 802abc2:	4618      	movlt	r0, r3
 802abc4:	e7a6      	b.n	802ab14 <_printf_i+0x164>
 802abc6:	2301      	movs	r3, #1
 802abc8:	4632      	mov	r2, r6
 802abca:	4649      	mov	r1, r9
 802abcc:	4640      	mov	r0, r8
 802abce:	47d0      	blx	sl
 802abd0:	3001      	adds	r0, #1
 802abd2:	d09d      	beq.n	802ab10 <_printf_i+0x160>
 802abd4:	3501      	adds	r5, #1
 802abd6:	68e3      	ldr	r3, [r4, #12]
 802abd8:	9903      	ldr	r1, [sp, #12]
 802abda:	1a5b      	subs	r3, r3, r1
 802abdc:	42ab      	cmp	r3, r5
 802abde:	dcf2      	bgt.n	802abc6 <_printf_i+0x216>
 802abe0:	e7eb      	b.n	802abba <_printf_i+0x20a>
 802abe2:	2500      	movs	r5, #0
 802abe4:	f104 0619 	add.w	r6, r4, #25
 802abe8:	e7f5      	b.n	802abd6 <_printf_i+0x226>
 802abea:	bf00      	nop
 802abec:	080424d9 	.word	0x080424d9
 802abf0:	080424ea 	.word	0x080424ea

0802abf4 <__sflush_r>:
 802abf4:	898a      	ldrh	r2, [r1, #12]
 802abf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802abfa:	4605      	mov	r5, r0
 802abfc:	0710      	lsls	r0, r2, #28
 802abfe:	460c      	mov	r4, r1
 802ac00:	d458      	bmi.n	802acb4 <__sflush_r+0xc0>
 802ac02:	684b      	ldr	r3, [r1, #4]
 802ac04:	2b00      	cmp	r3, #0
 802ac06:	dc05      	bgt.n	802ac14 <__sflush_r+0x20>
 802ac08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ac0a:	2b00      	cmp	r3, #0
 802ac0c:	dc02      	bgt.n	802ac14 <__sflush_r+0x20>
 802ac0e:	2000      	movs	r0, #0
 802ac10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ac14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ac16:	2e00      	cmp	r6, #0
 802ac18:	d0f9      	beq.n	802ac0e <__sflush_r+0x1a>
 802ac1a:	2300      	movs	r3, #0
 802ac1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ac20:	682f      	ldr	r7, [r5, #0]
 802ac22:	6a21      	ldr	r1, [r4, #32]
 802ac24:	602b      	str	r3, [r5, #0]
 802ac26:	d032      	beq.n	802ac8e <__sflush_r+0x9a>
 802ac28:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802ac2a:	89a3      	ldrh	r3, [r4, #12]
 802ac2c:	075a      	lsls	r2, r3, #29
 802ac2e:	d505      	bpl.n	802ac3c <__sflush_r+0x48>
 802ac30:	6863      	ldr	r3, [r4, #4]
 802ac32:	1ac0      	subs	r0, r0, r3
 802ac34:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ac36:	b10b      	cbz	r3, 802ac3c <__sflush_r+0x48>
 802ac38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ac3a:	1ac0      	subs	r0, r0, r3
 802ac3c:	2300      	movs	r3, #0
 802ac3e:	4602      	mov	r2, r0
 802ac40:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ac42:	6a21      	ldr	r1, [r4, #32]
 802ac44:	4628      	mov	r0, r5
 802ac46:	47b0      	blx	r6
 802ac48:	1c43      	adds	r3, r0, #1
 802ac4a:	89a3      	ldrh	r3, [r4, #12]
 802ac4c:	d106      	bne.n	802ac5c <__sflush_r+0x68>
 802ac4e:	6829      	ldr	r1, [r5, #0]
 802ac50:	291d      	cmp	r1, #29
 802ac52:	d82b      	bhi.n	802acac <__sflush_r+0xb8>
 802ac54:	4a29      	ldr	r2, [pc, #164]	; (802acfc <__sflush_r+0x108>)
 802ac56:	410a      	asrs	r2, r1
 802ac58:	07d6      	lsls	r6, r2, #31
 802ac5a:	d427      	bmi.n	802acac <__sflush_r+0xb8>
 802ac5c:	2200      	movs	r2, #0
 802ac5e:	6062      	str	r2, [r4, #4]
 802ac60:	04d9      	lsls	r1, r3, #19
 802ac62:	6922      	ldr	r2, [r4, #16]
 802ac64:	6022      	str	r2, [r4, #0]
 802ac66:	d504      	bpl.n	802ac72 <__sflush_r+0x7e>
 802ac68:	1c42      	adds	r2, r0, #1
 802ac6a:	d101      	bne.n	802ac70 <__sflush_r+0x7c>
 802ac6c:	682b      	ldr	r3, [r5, #0]
 802ac6e:	b903      	cbnz	r3, 802ac72 <__sflush_r+0x7e>
 802ac70:	6560      	str	r0, [r4, #84]	; 0x54
 802ac72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ac74:	602f      	str	r7, [r5, #0]
 802ac76:	2900      	cmp	r1, #0
 802ac78:	d0c9      	beq.n	802ac0e <__sflush_r+0x1a>
 802ac7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ac7e:	4299      	cmp	r1, r3
 802ac80:	d002      	beq.n	802ac88 <__sflush_r+0x94>
 802ac82:	4628      	mov	r0, r5
 802ac84:	f7ff fc96 	bl	802a5b4 <_free_r>
 802ac88:	2000      	movs	r0, #0
 802ac8a:	6360      	str	r0, [r4, #52]	; 0x34
 802ac8c:	e7c0      	b.n	802ac10 <__sflush_r+0x1c>
 802ac8e:	2301      	movs	r3, #1
 802ac90:	4628      	mov	r0, r5
 802ac92:	47b0      	blx	r6
 802ac94:	1c41      	adds	r1, r0, #1
 802ac96:	d1c8      	bne.n	802ac2a <__sflush_r+0x36>
 802ac98:	682b      	ldr	r3, [r5, #0]
 802ac9a:	2b00      	cmp	r3, #0
 802ac9c:	d0c5      	beq.n	802ac2a <__sflush_r+0x36>
 802ac9e:	2b1d      	cmp	r3, #29
 802aca0:	d001      	beq.n	802aca6 <__sflush_r+0xb2>
 802aca2:	2b16      	cmp	r3, #22
 802aca4:	d101      	bne.n	802acaa <__sflush_r+0xb6>
 802aca6:	602f      	str	r7, [r5, #0]
 802aca8:	e7b1      	b.n	802ac0e <__sflush_r+0x1a>
 802acaa:	89a3      	ldrh	r3, [r4, #12]
 802acac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802acb0:	81a3      	strh	r3, [r4, #12]
 802acb2:	e7ad      	b.n	802ac10 <__sflush_r+0x1c>
 802acb4:	690f      	ldr	r7, [r1, #16]
 802acb6:	2f00      	cmp	r7, #0
 802acb8:	d0a9      	beq.n	802ac0e <__sflush_r+0x1a>
 802acba:	0793      	lsls	r3, r2, #30
 802acbc:	680e      	ldr	r6, [r1, #0]
 802acbe:	bf08      	it	eq
 802acc0:	694b      	ldreq	r3, [r1, #20]
 802acc2:	600f      	str	r7, [r1, #0]
 802acc4:	bf18      	it	ne
 802acc6:	2300      	movne	r3, #0
 802acc8:	eba6 0807 	sub.w	r8, r6, r7
 802accc:	608b      	str	r3, [r1, #8]
 802acce:	f1b8 0f00 	cmp.w	r8, #0
 802acd2:	dd9c      	ble.n	802ac0e <__sflush_r+0x1a>
 802acd4:	6a21      	ldr	r1, [r4, #32]
 802acd6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802acd8:	4643      	mov	r3, r8
 802acda:	463a      	mov	r2, r7
 802acdc:	4628      	mov	r0, r5
 802acde:	47b0      	blx	r6
 802ace0:	2800      	cmp	r0, #0
 802ace2:	dc06      	bgt.n	802acf2 <__sflush_r+0xfe>
 802ace4:	89a3      	ldrh	r3, [r4, #12]
 802ace6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802acea:	81a3      	strh	r3, [r4, #12]
 802acec:	f04f 30ff 	mov.w	r0, #4294967295
 802acf0:	e78e      	b.n	802ac10 <__sflush_r+0x1c>
 802acf2:	4407      	add	r7, r0
 802acf4:	eba8 0800 	sub.w	r8, r8, r0
 802acf8:	e7e9      	b.n	802acce <__sflush_r+0xda>
 802acfa:	bf00      	nop
 802acfc:	dfbffffe 	.word	0xdfbffffe

0802ad00 <_fflush_r>:
 802ad00:	b538      	push	{r3, r4, r5, lr}
 802ad02:	690b      	ldr	r3, [r1, #16]
 802ad04:	4605      	mov	r5, r0
 802ad06:	460c      	mov	r4, r1
 802ad08:	b913      	cbnz	r3, 802ad10 <_fflush_r+0x10>
 802ad0a:	2500      	movs	r5, #0
 802ad0c:	4628      	mov	r0, r5
 802ad0e:	bd38      	pop	{r3, r4, r5, pc}
 802ad10:	b118      	cbz	r0, 802ad1a <_fflush_r+0x1a>
 802ad12:	6a03      	ldr	r3, [r0, #32]
 802ad14:	b90b      	cbnz	r3, 802ad1a <_fflush_r+0x1a>
 802ad16:	f7ff fa2f 	bl	802a178 <__sinit>
 802ad1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ad1e:	2b00      	cmp	r3, #0
 802ad20:	d0f3      	beq.n	802ad0a <_fflush_r+0xa>
 802ad22:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ad24:	07d0      	lsls	r0, r2, #31
 802ad26:	d404      	bmi.n	802ad32 <_fflush_r+0x32>
 802ad28:	0599      	lsls	r1, r3, #22
 802ad2a:	d402      	bmi.n	802ad32 <_fflush_r+0x32>
 802ad2c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ad2e:	f7ff fbd2 	bl	802a4d6 <__retarget_lock_acquire_recursive>
 802ad32:	4628      	mov	r0, r5
 802ad34:	4621      	mov	r1, r4
 802ad36:	f7ff ff5d 	bl	802abf4 <__sflush_r>
 802ad3a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ad3c:	07da      	lsls	r2, r3, #31
 802ad3e:	4605      	mov	r5, r0
 802ad40:	d4e4      	bmi.n	802ad0c <_fflush_r+0xc>
 802ad42:	89a3      	ldrh	r3, [r4, #12]
 802ad44:	059b      	lsls	r3, r3, #22
 802ad46:	d4e1      	bmi.n	802ad0c <_fflush_r+0xc>
 802ad48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ad4a:	f7ff fbc5 	bl	802a4d8 <__retarget_lock_release_recursive>
 802ad4e:	e7dd      	b.n	802ad0c <_fflush_r+0xc>

0802ad50 <__swbuf_r>:
 802ad50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ad52:	460e      	mov	r6, r1
 802ad54:	4614      	mov	r4, r2
 802ad56:	4605      	mov	r5, r0
 802ad58:	b118      	cbz	r0, 802ad62 <__swbuf_r+0x12>
 802ad5a:	6a03      	ldr	r3, [r0, #32]
 802ad5c:	b90b      	cbnz	r3, 802ad62 <__swbuf_r+0x12>
 802ad5e:	f7ff fa0b 	bl	802a178 <__sinit>
 802ad62:	69a3      	ldr	r3, [r4, #24]
 802ad64:	60a3      	str	r3, [r4, #8]
 802ad66:	89a3      	ldrh	r3, [r4, #12]
 802ad68:	071a      	lsls	r2, r3, #28
 802ad6a:	d525      	bpl.n	802adb8 <__swbuf_r+0x68>
 802ad6c:	6923      	ldr	r3, [r4, #16]
 802ad6e:	b31b      	cbz	r3, 802adb8 <__swbuf_r+0x68>
 802ad70:	6823      	ldr	r3, [r4, #0]
 802ad72:	6922      	ldr	r2, [r4, #16]
 802ad74:	1a98      	subs	r0, r3, r2
 802ad76:	6963      	ldr	r3, [r4, #20]
 802ad78:	b2f6      	uxtb	r6, r6
 802ad7a:	4283      	cmp	r3, r0
 802ad7c:	4637      	mov	r7, r6
 802ad7e:	dc04      	bgt.n	802ad8a <__swbuf_r+0x3a>
 802ad80:	4621      	mov	r1, r4
 802ad82:	4628      	mov	r0, r5
 802ad84:	f7ff ffbc 	bl	802ad00 <_fflush_r>
 802ad88:	b9e0      	cbnz	r0, 802adc4 <__swbuf_r+0x74>
 802ad8a:	68a3      	ldr	r3, [r4, #8]
 802ad8c:	3b01      	subs	r3, #1
 802ad8e:	60a3      	str	r3, [r4, #8]
 802ad90:	6823      	ldr	r3, [r4, #0]
 802ad92:	1c5a      	adds	r2, r3, #1
 802ad94:	6022      	str	r2, [r4, #0]
 802ad96:	701e      	strb	r6, [r3, #0]
 802ad98:	6962      	ldr	r2, [r4, #20]
 802ad9a:	1c43      	adds	r3, r0, #1
 802ad9c:	429a      	cmp	r2, r3
 802ad9e:	d004      	beq.n	802adaa <__swbuf_r+0x5a>
 802ada0:	89a3      	ldrh	r3, [r4, #12]
 802ada2:	07db      	lsls	r3, r3, #31
 802ada4:	d506      	bpl.n	802adb4 <__swbuf_r+0x64>
 802ada6:	2e0a      	cmp	r6, #10
 802ada8:	d104      	bne.n	802adb4 <__swbuf_r+0x64>
 802adaa:	4621      	mov	r1, r4
 802adac:	4628      	mov	r0, r5
 802adae:	f7ff ffa7 	bl	802ad00 <_fflush_r>
 802adb2:	b938      	cbnz	r0, 802adc4 <__swbuf_r+0x74>
 802adb4:	4638      	mov	r0, r7
 802adb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802adb8:	4621      	mov	r1, r4
 802adba:	4628      	mov	r0, r5
 802adbc:	f000 f806 	bl	802adcc <__swsetup_r>
 802adc0:	2800      	cmp	r0, #0
 802adc2:	d0d5      	beq.n	802ad70 <__swbuf_r+0x20>
 802adc4:	f04f 37ff 	mov.w	r7, #4294967295
 802adc8:	e7f4      	b.n	802adb4 <__swbuf_r+0x64>
	...

0802adcc <__swsetup_r>:
 802adcc:	b538      	push	{r3, r4, r5, lr}
 802adce:	4b2a      	ldr	r3, [pc, #168]	; (802ae78 <__swsetup_r+0xac>)
 802add0:	4605      	mov	r5, r0
 802add2:	6818      	ldr	r0, [r3, #0]
 802add4:	460c      	mov	r4, r1
 802add6:	b118      	cbz	r0, 802ade0 <__swsetup_r+0x14>
 802add8:	6a03      	ldr	r3, [r0, #32]
 802adda:	b90b      	cbnz	r3, 802ade0 <__swsetup_r+0x14>
 802addc:	f7ff f9cc 	bl	802a178 <__sinit>
 802ade0:	89a3      	ldrh	r3, [r4, #12]
 802ade2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ade6:	0718      	lsls	r0, r3, #28
 802ade8:	d422      	bmi.n	802ae30 <__swsetup_r+0x64>
 802adea:	06d9      	lsls	r1, r3, #27
 802adec:	d407      	bmi.n	802adfe <__swsetup_r+0x32>
 802adee:	2309      	movs	r3, #9
 802adf0:	602b      	str	r3, [r5, #0]
 802adf2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802adf6:	81a3      	strh	r3, [r4, #12]
 802adf8:	f04f 30ff 	mov.w	r0, #4294967295
 802adfc:	e034      	b.n	802ae68 <__swsetup_r+0x9c>
 802adfe:	0758      	lsls	r0, r3, #29
 802ae00:	d512      	bpl.n	802ae28 <__swsetup_r+0x5c>
 802ae02:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ae04:	b141      	cbz	r1, 802ae18 <__swsetup_r+0x4c>
 802ae06:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ae0a:	4299      	cmp	r1, r3
 802ae0c:	d002      	beq.n	802ae14 <__swsetup_r+0x48>
 802ae0e:	4628      	mov	r0, r5
 802ae10:	f7ff fbd0 	bl	802a5b4 <_free_r>
 802ae14:	2300      	movs	r3, #0
 802ae16:	6363      	str	r3, [r4, #52]	; 0x34
 802ae18:	89a3      	ldrh	r3, [r4, #12]
 802ae1a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802ae1e:	81a3      	strh	r3, [r4, #12]
 802ae20:	2300      	movs	r3, #0
 802ae22:	6063      	str	r3, [r4, #4]
 802ae24:	6923      	ldr	r3, [r4, #16]
 802ae26:	6023      	str	r3, [r4, #0]
 802ae28:	89a3      	ldrh	r3, [r4, #12]
 802ae2a:	f043 0308 	orr.w	r3, r3, #8
 802ae2e:	81a3      	strh	r3, [r4, #12]
 802ae30:	6923      	ldr	r3, [r4, #16]
 802ae32:	b94b      	cbnz	r3, 802ae48 <__swsetup_r+0x7c>
 802ae34:	89a3      	ldrh	r3, [r4, #12]
 802ae36:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ae3a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ae3e:	d003      	beq.n	802ae48 <__swsetup_r+0x7c>
 802ae40:	4621      	mov	r1, r4
 802ae42:	4628      	mov	r0, r5
 802ae44:	f000 f840 	bl	802aec8 <__smakebuf_r>
 802ae48:	89a0      	ldrh	r0, [r4, #12]
 802ae4a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ae4e:	f010 0301 	ands.w	r3, r0, #1
 802ae52:	d00a      	beq.n	802ae6a <__swsetup_r+0x9e>
 802ae54:	2300      	movs	r3, #0
 802ae56:	60a3      	str	r3, [r4, #8]
 802ae58:	6963      	ldr	r3, [r4, #20]
 802ae5a:	425b      	negs	r3, r3
 802ae5c:	61a3      	str	r3, [r4, #24]
 802ae5e:	6923      	ldr	r3, [r4, #16]
 802ae60:	b943      	cbnz	r3, 802ae74 <__swsetup_r+0xa8>
 802ae62:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ae66:	d1c4      	bne.n	802adf2 <__swsetup_r+0x26>
 802ae68:	bd38      	pop	{r3, r4, r5, pc}
 802ae6a:	0781      	lsls	r1, r0, #30
 802ae6c:	bf58      	it	pl
 802ae6e:	6963      	ldrpl	r3, [r4, #20]
 802ae70:	60a3      	str	r3, [r4, #8]
 802ae72:	e7f4      	b.n	802ae5e <__swsetup_r+0x92>
 802ae74:	2000      	movs	r0, #0
 802ae76:	e7f7      	b.n	802ae68 <__swsetup_r+0x9c>
 802ae78:	20000160 	.word	0x20000160

0802ae7c <__swhatbuf_r>:
 802ae7c:	b570      	push	{r4, r5, r6, lr}
 802ae7e:	460c      	mov	r4, r1
 802ae80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae84:	2900      	cmp	r1, #0
 802ae86:	b096      	sub	sp, #88	; 0x58
 802ae88:	4615      	mov	r5, r2
 802ae8a:	461e      	mov	r6, r3
 802ae8c:	da0d      	bge.n	802aeaa <__swhatbuf_r+0x2e>
 802ae8e:	89a3      	ldrh	r3, [r4, #12]
 802ae90:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ae94:	f04f 0100 	mov.w	r1, #0
 802ae98:	bf0c      	ite	eq
 802ae9a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ae9e:	2340      	movne	r3, #64	; 0x40
 802aea0:	2000      	movs	r0, #0
 802aea2:	6031      	str	r1, [r6, #0]
 802aea4:	602b      	str	r3, [r5, #0]
 802aea6:	b016      	add	sp, #88	; 0x58
 802aea8:	bd70      	pop	{r4, r5, r6, pc}
 802aeaa:	466a      	mov	r2, sp
 802aeac:	f000 f848 	bl	802af40 <_fstat_r>
 802aeb0:	2800      	cmp	r0, #0
 802aeb2:	dbec      	blt.n	802ae8e <__swhatbuf_r+0x12>
 802aeb4:	9901      	ldr	r1, [sp, #4]
 802aeb6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802aeba:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802aebe:	4259      	negs	r1, r3
 802aec0:	4159      	adcs	r1, r3
 802aec2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802aec6:	e7eb      	b.n	802aea0 <__swhatbuf_r+0x24>

0802aec8 <__smakebuf_r>:
 802aec8:	898b      	ldrh	r3, [r1, #12]
 802aeca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802aecc:	079d      	lsls	r5, r3, #30
 802aece:	4606      	mov	r6, r0
 802aed0:	460c      	mov	r4, r1
 802aed2:	d507      	bpl.n	802aee4 <__smakebuf_r+0x1c>
 802aed4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802aed8:	6023      	str	r3, [r4, #0]
 802aeda:	6123      	str	r3, [r4, #16]
 802aedc:	2301      	movs	r3, #1
 802aede:	6163      	str	r3, [r4, #20]
 802aee0:	b002      	add	sp, #8
 802aee2:	bd70      	pop	{r4, r5, r6, pc}
 802aee4:	ab01      	add	r3, sp, #4
 802aee6:	466a      	mov	r2, sp
 802aee8:	f7ff ffc8 	bl	802ae7c <__swhatbuf_r>
 802aeec:	9900      	ldr	r1, [sp, #0]
 802aeee:	4605      	mov	r5, r0
 802aef0:	4630      	mov	r0, r6
 802aef2:	f7ff f81b 	bl	8029f2c <_malloc_r>
 802aef6:	b948      	cbnz	r0, 802af0c <__smakebuf_r+0x44>
 802aef8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802aefc:	059a      	lsls	r2, r3, #22
 802aefe:	d4ef      	bmi.n	802aee0 <__smakebuf_r+0x18>
 802af00:	f023 0303 	bic.w	r3, r3, #3
 802af04:	f043 0302 	orr.w	r3, r3, #2
 802af08:	81a3      	strh	r3, [r4, #12]
 802af0a:	e7e3      	b.n	802aed4 <__smakebuf_r+0xc>
 802af0c:	89a3      	ldrh	r3, [r4, #12]
 802af0e:	6020      	str	r0, [r4, #0]
 802af10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802af14:	81a3      	strh	r3, [r4, #12]
 802af16:	9b00      	ldr	r3, [sp, #0]
 802af18:	6163      	str	r3, [r4, #20]
 802af1a:	9b01      	ldr	r3, [sp, #4]
 802af1c:	6120      	str	r0, [r4, #16]
 802af1e:	b15b      	cbz	r3, 802af38 <__smakebuf_r+0x70>
 802af20:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802af24:	4630      	mov	r0, r6
 802af26:	f000 f81d 	bl	802af64 <_isatty_r>
 802af2a:	b128      	cbz	r0, 802af38 <__smakebuf_r+0x70>
 802af2c:	89a3      	ldrh	r3, [r4, #12]
 802af2e:	f023 0303 	bic.w	r3, r3, #3
 802af32:	f043 0301 	orr.w	r3, r3, #1
 802af36:	81a3      	strh	r3, [r4, #12]
 802af38:	89a3      	ldrh	r3, [r4, #12]
 802af3a:	431d      	orrs	r5, r3
 802af3c:	81a5      	strh	r5, [r4, #12]
 802af3e:	e7cf      	b.n	802aee0 <__smakebuf_r+0x18>

0802af40 <_fstat_r>:
 802af40:	b538      	push	{r3, r4, r5, lr}
 802af42:	4d07      	ldr	r5, [pc, #28]	; (802af60 <_fstat_r+0x20>)
 802af44:	2300      	movs	r3, #0
 802af46:	4604      	mov	r4, r0
 802af48:	4608      	mov	r0, r1
 802af4a:	4611      	mov	r1, r2
 802af4c:	602b      	str	r3, [r5, #0]
 802af4e:	f7d7 fabb 	bl	80024c8 <_fstat>
 802af52:	1c43      	adds	r3, r0, #1
 802af54:	d102      	bne.n	802af5c <_fstat_r+0x1c>
 802af56:	682b      	ldr	r3, [r5, #0]
 802af58:	b103      	cbz	r3, 802af5c <_fstat_r+0x1c>
 802af5a:	6023      	str	r3, [r4, #0]
 802af5c:	bd38      	pop	{r3, r4, r5, pc}
 802af5e:	bf00      	nop
 802af60:	200138f4 	.word	0x200138f4

0802af64 <_isatty_r>:
 802af64:	b538      	push	{r3, r4, r5, lr}
 802af66:	4d06      	ldr	r5, [pc, #24]	; (802af80 <_isatty_r+0x1c>)
 802af68:	2300      	movs	r3, #0
 802af6a:	4604      	mov	r4, r0
 802af6c:	4608      	mov	r0, r1
 802af6e:	602b      	str	r3, [r5, #0]
 802af70:	f7d7 fab0 	bl	80024d4 <_isatty>
 802af74:	1c43      	adds	r3, r0, #1
 802af76:	d102      	bne.n	802af7e <_isatty_r+0x1a>
 802af78:	682b      	ldr	r3, [r5, #0]
 802af7a:	b103      	cbz	r3, 802af7e <_isatty_r+0x1a>
 802af7c:	6023      	str	r3, [r4, #0]
 802af7e:	bd38      	pop	{r3, r4, r5, pc}
 802af80:	200138f4 	.word	0x200138f4

0802af84 <_init>:
 802af84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802af86:	bf00      	nop
 802af88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802af8a:	bc08      	pop	{r3}
 802af8c:	469e      	mov	lr, r3
 802af8e:	4770      	bx	lr

0802af90 <_fini>:
 802af90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802af92:	bf00      	nop
 802af94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802af96:	bc08      	pop	{r3}
 802af98:	469e      	mov	lr, r3
 802af9a:	4770      	bx	lr

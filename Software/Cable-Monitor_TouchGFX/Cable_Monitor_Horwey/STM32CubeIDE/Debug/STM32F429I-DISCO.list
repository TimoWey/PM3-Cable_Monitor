
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bc70  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017974  0802be20  0802be20  0003be20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043794  08043794  00053794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  0804748c  0804748c  0005748c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000700  080476d8  080476d8  000576d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0011a470  08047dd8  08047dd8  00057dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08162248  08162248  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  08162248  08162248  00172248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08162250  08162250  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08162250  08162250  00172250  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08162264  08162264  00172264  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08162268  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013f14  20000168  081623d0  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001407c  081623d0  0018407c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00099b2a  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00219df4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0027aa95  00000000  00000000  00219e87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00031f4e  00000000  00000000  0049491c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004770  00000000  00000000  004c6870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001218d3  00000000  00000000  004cafe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000819b  00000000  00000000  005ec8b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00031ed9  00000000  00000000  005f4a4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  000199ac  00000000  00000000  00626927  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d134  00000000  00000000  006402d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0064d408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00650780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802be08 	.word	0x0802be08

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802be08 	.word	0x0802be08

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 ff7b 	bl	8009570 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a fe49 	bl	802b310 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 f95d 	bl	800093c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	08162268 	.word	0x08162268
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	2001407c 	.word	0x2001407c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 80006a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006a4:	ed2d 8b02 	vpush	{d8}
 80006a8:	b091      	sub	sp, #68	; 0x44
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	4605      	mov	r5, r0
 80006ae:	4688      	mov	r8, r1
 80006b0:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80006b2:	f000 fdc5 	bl	8001240 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80006b6:	b203      	sxth	r3, r0
 80006b8:	60bb      	str	r3, [r7, #8]
 80006ba:	009b      	lsls	r3, r3, #2
 80006bc:	607b      	str	r3, [r7, #4]
 80006be:	3307      	adds	r3, #7
 80006c0:	f023 0307 	bic.w	r3, r3, #7
 80006c4:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80006c8:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80006ca:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80006cc:	b1f0      	cbz	r0, 800070c <calculate_freq_and_signalstrength+0x6c>
 80006ce:	3d01      	subs	r5, #1
 80006d0:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80006d2:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80006d4:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80006d6:	f000 fdb1 	bl	800123c <MEAS_get_num_of_chan>
 80006da:	fb06 5000 	mla	r0, r6, r0, r5
 80006de:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80006e2:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80006e6:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80006e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80006ec:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80006ee:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80006f2:	d1f0      	bne.n	80006d6 <calculate_freq_and_signalstrength+0x36>
 80006f4:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80006f6:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 80007a4 <calculate_freq_and_signalstrength+0x104>
 80006fa:	4456      	add	r6, sl
 80006fc:	edd9 7a00 	vldr	s15, [r9]
 8000700:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000704:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000708:	454e      	cmp	r6, r9
 800070a:	d1f7      	bne.n	80006fc <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 800070c:	68bb      	ldr	r3, [r7, #8]
 800070e:	466a      	mov	r2, sp
 8000710:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8000714:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000716:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800071a:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 800071c:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800071e:	b2a1      	uxth	r1, r4
 8000720:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000724:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000728:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800072c:	f028 fc18 	bl	8028f60 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000730:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000732:	2300      	movs	r3, #0
 8000734:	4651      	mov	r1, sl
 8000736:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800073a:	462a      	mov	r2, r5
 800073c:	f028 fc94 	bl	8029068 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000740:	4622      	mov	r2, r4
 8000742:	4629      	mov	r1, r5
 8000744:	4628      	mov	r0, r5
 8000746:	f029 f8fd 	bl	8029944 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800074a:	f000 fd7b 	bl	8001244 <MEAS_get_samp_freq>
 800074e:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000752:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8000756:	edd9 7a00 	vldr	s15, [r9]
 800075a:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800075e:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000762:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000766:	f107 021c 	add.w	r2, r7, #28
 800076a:	4621      	mov	r1, r4
 800076c:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800076e:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000772:	f028 fb8d 	bl	8028e90 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000776:	edd7 7a06 	vldr	s15, [r7, #24]
 800077a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800077e:	f000 fd61 	bl	8001244 <MEAS_get_samp_freq>
 8000782:	ee07 0a90 	vmov	s15, r0
 8000786:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800078a:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800078e:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8000792:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000794:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000798:	46bd      	mov	sp, r7
 800079a:	ecbd 8b02 	vpop	{d8}
 800079e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007a2:	bf00      	nop
 80007a4:	44fff000 	.word	0x44fff000

080007a8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80007a8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80007aa:	2064      	movs	r0, #100	; 0x64
 80007ac:	f00c faf2 	bl	800cd94 <osDelay>
  for(;;)
 80007b0:	e7fb      	b.n	80007aa <StartDefaultTask+0x2>
 80007b2:	bf00      	nop

080007b4 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	4c10      	ldr	r4, [pc, #64]	; (80007f8 <StartTimeoutTask+0x44>)
 80007b8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8000804 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80007bc:	4f0f      	ldr	r7, [pc, #60]	; (80007fc <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80007be:	4e10      	ldr	r6, [pc, #64]	; (8000800 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80007c0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80007c2:	2300      	movs	r3, #0
 80007c4:	461a      	mov	r2, r3
 80007c6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80007c8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80007ca:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80007ce:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80007d0:	f00c fbdc 	bl	800cf8c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80007d4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80007d6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80007d8:	4638      	mov	r0, r7
 80007da:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80007dc:	b912      	cbnz	r2, 80007e4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80007de:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80007e0:	f009 f8de 	bl	80099a0 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80007e4:	4630      	mov	r0, r6
 80007e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80007ea:	f009 f8dd 	bl	80099a8 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80007ee:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80007f2:	f00c facf 	bl	800cd94 <osDelay>
	  sleep_timeout_value--;
 80007f6:	e7e3      	b.n	80007c0 <StartTimeoutTask+0xc>
 80007f8:	2000000c 	.word	0x2000000c
 80007fc:	40021000 	.word	0x40021000
 8000800:	40021800 	.word	0x40021800
 8000804:	2000018c 	.word	0x2000018c

08000808 <updateGUI_test>:
	return sleep_timeout_value;
 8000808:	4b01      	ldr	r3, [pc, #4]	; (8000810 <updateGUI_test+0x8>)
}
 800080a:	6818      	ldr	r0, [r3, #0]
 800080c:	4770      	bx	lr
 800080e:	bf00      	nop
 8000810:	2000000c 	.word	0x2000000c

08000814 <gyro_disable>:
{
 8000814:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000816:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8000818:	4e1f      	ldr	r6, [pc, #124]	; (8000898 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800081a:	4d20      	ldr	r5, [pc, #128]	; (800089c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800081c:	4c20      	ldr	r4, [pc, #128]	; (80008a0 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800081e:	2700      	movs	r7, #0
 8000820:	9700      	str	r7, [sp, #0]
 8000822:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000824:	f043 0304 	orr.w	r3, r3, #4
 8000828:	6333      	str	r3, [r6, #48]	; 0x30
 800082a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800082c:	f003 0304 	and.w	r3, r3, #4
 8000830:	9300      	str	r3, [sp, #0]
 8000832:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8000834:	682b      	ldr	r3, [r5, #0]
 8000836:	f023 030c 	bic.w	r3, r3, #12
 800083a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800083c:	682b      	ldr	r3, [r5, #0]
 800083e:	f043 0304 	orr.w	r3, r3, #4
 8000842:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000844:	69ab      	ldr	r3, [r5, #24]
 8000846:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800084a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800084c:	200a      	movs	r0, #10
 800084e:	f008 fec9 	bl	80095e4 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000852:	682b      	ldr	r3, [r5, #0]
 8000854:	f043 030c 	orr.w	r3, r3, #12
 8000858:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800085a:	9701      	str	r7, [sp, #4]
 800085c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800085e:	f043 0320 	orr.w	r3, r3, #32
 8000862:	6333      	str	r3, [r6, #48]	; 0x30
 8000864:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000866:	f003 0320 	and.w	r3, r3, #32
 800086a:	9301      	str	r3, [sp, #4]
 800086c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800086e:	68a3      	ldr	r3, [r4, #8]
 8000870:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000874:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000876:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000878:	f023 030f 	bic.w	r3, r3, #15
 800087c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800087e:	68e3      	ldr	r3, [r4, #12]
 8000880:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000884:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000886:	200a      	movs	r0, #10
 8000888:	f008 feac 	bl	80095e4 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800088c:	6823      	ldr	r3, [r4, #0]
 800088e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000892:	6023      	str	r3, [r4, #0]
}
 8000894:	b003      	add	sp, #12
 8000896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000898:	40023800 	.word	0x40023800
 800089c:	40020800 	.word	0x40020800
 80008a0:	40021400 	.word	0x40021400

080008a4 <SystemClock_Config>:
{
 80008a4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008a6:	2400      	movs	r4, #0
{
 80008a8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008aa:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80008ae:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008b2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80008b6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008ba:	4a1e      	ldr	r2, [pc, #120]	; (8000934 <SystemClock_Config+0x90>)
 80008bc:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008be:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008c0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80008c2:	4b1d      	ldr	r3, [pc, #116]	; (8000938 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80008c4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80008c8:	6411      	str	r1, [r2, #64]	; 0x40
 80008ca:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80008cc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80008d0:	9201      	str	r2, [sp, #4]
 80008d2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80008d4:	9402      	str	r4, [sp, #8]
 80008d6:	681a      	ldr	r2, [r3, #0]
 80008d8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80008dc:	601a      	str	r2, [r3, #0]
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80008e4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80008e6:	2201      	movs	r2, #1
 80008e8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80008ec:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80008f0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80008f2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80008f4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80008f6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80008fa:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80008fe:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000902:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000904:	2202      	movs	r2, #2
 8000906:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000908:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800090a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800090e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000910:	f00a fe84 	bl	800b61c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000914:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000916:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800091a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800091e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000922:	a803      	add	r0, sp, #12
 8000924:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000926:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800092a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800092c:	f00b f88e 	bl	800ba4c <HAL_RCC_ClockConfig>
}
 8000930:	b015      	add	sp, #84	; 0x54
 8000932:	bd30      	pop	{r4, r5, pc}
 8000934:	40023800 	.word	0x40023800
 8000938:	40007000 	.word	0x40007000

0800093c <main>:
{
 800093c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000940:	2400      	movs	r4, #0
{
 8000942:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8000944:	f008 fe22 	bl	800958c <HAL_Init>
  SystemClock_Config();
 8000948:	f7ff ffac 	bl	80008a4 <SystemClock_Config>
  gyro_disable();
 800094c:	f7ff ff62 	bl	8000814 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000950:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8000954:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000958:	4bbe      	ldr	r3, [pc, #760]	; (8000c54 <main+0x318>)
 800095a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095c:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800095e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000960:	48bd      	ldr	r0, [pc, #756]	; (8000c58 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000962:	4dbe      	ldr	r5, [pc, #760]	; (8000c5c <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000964:	f041 0110 	orr.w	r1, r1, #16
 8000968:	6319      	str	r1, [r3, #48]	; 0x30
 800096a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800096c:	f001 0110 	and.w	r1, r1, #16
 8000970:	9100      	str	r1, [sp, #0]
 8000972:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000974:	9401      	str	r4, [sp, #4]
 8000976:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000978:	f041 0120 	orr.w	r1, r1, #32
 800097c:	6319      	str	r1, [r3, #48]	; 0x30
 800097e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000980:	f001 0120 	and.w	r1, r1, #32
 8000984:	9101      	str	r1, [sp, #4]
 8000986:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000988:	9402      	str	r4, [sp, #8]
 800098a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800098c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000990:	6319      	str	r1, [r3, #48]	; 0x30
 8000992:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000994:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000998:	9102      	str	r1, [sp, #8]
 800099a:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800099c:	9403      	str	r4, [sp, #12]
 800099e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009a0:	f041 0104 	orr.w	r1, r1, #4
 80009a4:	6319      	str	r1, [r3, #48]	; 0x30
 80009a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009a8:	f001 0104 	and.w	r1, r1, #4
 80009ac:	9103      	str	r1, [sp, #12]
 80009ae:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80009b0:	9404      	str	r4, [sp, #16]
 80009b2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009b4:	f041 0101 	orr.w	r1, r1, #1
 80009b8:	6319      	str	r1, [r3, #48]	; 0x30
 80009ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009bc:	f001 0101 	and.w	r1, r1, #1
 80009c0:	9104      	str	r1, [sp, #16]
 80009c2:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009c4:	9405      	str	r4, [sp, #20]
 80009c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009c8:	f041 0102 	orr.w	r1, r1, #2
 80009cc:	6319      	str	r1, [r3, #48]	; 0x30
 80009ce:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009d0:	f001 0102 	and.w	r1, r1, #2
 80009d4:	9105      	str	r1, [sp, #20]
 80009d6:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80009d8:	9406      	str	r4, [sp, #24]
 80009da:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009dc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80009e0:	6319      	str	r1, [r3, #48]	; 0x30
 80009e2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009e4:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80009e8:	9106      	str	r1, [sp, #24]
 80009ea:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009ec:	9407      	str	r4, [sp, #28]
 80009ee:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009f0:	f041 0108 	orr.w	r1, r1, #8
 80009f4:	6319      	str	r1, [r3, #48]	; 0x30
 80009f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009f8:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80009fc:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009fe:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000a00:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000a02:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000a04:	f008 ffcc 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000a08:	4893      	ldr	r0, [pc, #588]	; (8000c58 <main+0x31c>)
 8000a0a:	2120      	movs	r1, #32
 8000a0c:	2201      	movs	r2, #1
 8000a0e:	f008 ffc7 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000a12:	4893      	ldr	r0, [pc, #588]	; (8000c60 <main+0x324>)
 8000a14:	4622      	mov	r2, r4
 8000a16:	2114      	movs	r1, #20
 8000a18:	f008 ffc2 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000a1c:	4891      	ldr	r0, [pc, #580]	; (8000c64 <main+0x328>)
 8000a1e:	4622      	mov	r2, r4
 8000a20:	2180      	movs	r1, #128	; 0x80
 8000a22:	f008 ffbd 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000a26:	4890      	ldr	r0, [pc, #576]	; (8000c68 <main+0x32c>)
 8000a28:	4622      	mov	r2, r4
 8000a2a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000a2e:	f008 ffb7 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000a32:	488e      	ldr	r0, [pc, #568]	; (8000c6c <main+0x330>)
 8000a34:	4622      	mov	r2, r4
 8000a36:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000a3a:	f008 ffb1 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000a3e:	488c      	ldr	r0, [pc, #560]	; (8000c70 <main+0x334>)
 8000a40:	4622      	mov	r2, r4
 8000a42:	2104      	movs	r1, #4
 8000a44:	f008 ffac 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000a48:	2201      	movs	r2, #1
 8000a4a:	4889      	ldr	r0, [pc, #548]	; (8000c70 <main+0x334>)
 8000a4c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a50:	f008 ffa6 	bl	80099a0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a54:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a56:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000a5a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000a5c:	487e      	ldr	r0, [pc, #504]	; (8000c58 <main+0x31c>)
 8000a5e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000a60:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a64:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a68:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000a6c:	f008 fe54 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000a70:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000a74:	4878      	ldr	r0, [pc, #480]	; (8000c58 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000a76:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000a78:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000a7a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a7e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000a80:	f008 fe4a 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000a84:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000a86:	4874      	ldr	r0, [pc, #464]	; (8000c58 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000a88:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000a8a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000a8c:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000a8e:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a92:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a96:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000a98:	f008 fe3e 	bl	8009718 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000a9c:	4870      	ldr	r0, [pc, #448]	; (8000c60 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000a9e:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000aa2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aa4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000aa8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000aaa:	f008 fe35 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000aae:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ab0:	486c      	ldr	r0, [pc, #432]	; (8000c64 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000ab2:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ab4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000ab6:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aba:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000abe:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ac0:	f008 fe2a 	bl	8009718 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ac4:	4866      	ldr	r0, [pc, #408]	; (8000c60 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ac6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ac8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aca:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000ace:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ad2:	f008 fe21 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ad6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ada:	4863      	ldr	r0, [pc, #396]	; (8000c68 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000adc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ade:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ae0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ae4:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ae6:	f008 fe17 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000aea:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000aee:	485f      	ldr	r0, [pc, #380]	; (8000c6c <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000af0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000af2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000af4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000af8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000afa:	f008 fe0d 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000afe:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000b02:	485b      	ldr	r0, [pc, #364]	; (8000c70 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000b04:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000b06:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b08:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b0c:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000b0e:	f008 fe03 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000b12:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b16:	4853      	ldr	r0, [pc, #332]	; (8000c64 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000b18:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b1a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000b1c:	230f      	movs	r3, #15
 8000b1e:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b20:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b24:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b26:	f008 fdf7 	bl	8009718 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000b2a:	4622      	mov	r2, r4
 8000b2c:	2105      	movs	r1, #5
 8000b2e:	2009      	movs	r0, #9
 8000b30:	f008 fd7c 	bl	800962c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000b34:	2009      	movs	r0, #9
 8000b36:	f008 fdb7 	bl	80096a8 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000b3a:	484e      	ldr	r0, [pc, #312]	; (8000c74 <main+0x338>)
 8000b3c:	4b4e      	ldr	r3, [pc, #312]	; (8000c78 <main+0x33c>)
 8000b3e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000b40:	f008 fdc0 	bl	80096c4 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000b44:	494d      	ldr	r1, [pc, #308]	; (8000c7c <main+0x340>)
 8000b46:	4b4e      	ldr	r3, [pc, #312]	; (8000c80 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b48:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000b4a:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b4e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000b52:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000b54:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000b58:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b5c:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b60:	f009 f984 	bl	8009e6c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000b64:	4651      	mov	r1, sl
 8000b66:	4628      	mov	r0, r5
 8000b68:	f00a fb4c 	bl	800b204 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000b6c:	4621      	mov	r1, r4
 8000b6e:	4628      	mov	r0, r5
 8000b70:	f00a fb68 	bl	800b244 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000b74:	f8df c118 	ldr.w	ip, [pc, #280]	; 8000c90 <main+0x354>
  hspi5.Instance = SPI5;
 8000b78:	4842      	ldr	r0, [pc, #264]	; (8000c84 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000b7a:	4d43      	ldr	r5, [pc, #268]	; (8000c88 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b7c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000b7e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8000b82:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000b86:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000b8a:	2318      	movs	r3, #24
 8000b8c:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000b90:	230a      	movs	r3, #10
 8000b92:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000b94:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000b98:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000b9c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000ba0:	f00b fa42 	bl	800c028 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000ba4:	2307      	movs	r3, #7
 8000ba6:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8000ba8:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000baa:	4b38      	ldr	r3, [pc, #224]	; (8000c8c <main+0x350>)
 8000bac:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000bae:	2040      	movs	r0, #64	; 0x40
 8000bb0:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8000bb4:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000bb8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000bbc:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000bbe:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000bc0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000bc4:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000bc6:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000bc8:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000bcc:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000bd0:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000bd2:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000bd4:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 8000bd8:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000bdc:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 8000bde:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000be0:	f00b f930 	bl	800be44 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000be4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000be8:	a909      	add	r1, sp, #36	; 0x24
 8000bea:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000bec:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8000bf0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8000bf4:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000bf6:	f00b f947 	bl	800be88 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000bfa:	4630      	mov	r0, r6
 8000bfc:	f008 fcf2 	bl	80095e4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c00:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000c04:	a909      	add	r1, sp, #36	; 0x24
 8000c06:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000c08:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000c0c:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c10:	f00b f93a 	bl	800be88 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000c18:	a909      	add	r1, sp, #36	; 0x24
 8000c1a:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000c1c:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000c20:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c24:	f00b f930 	bl	800be88 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000c28:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000c2c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000c2e:	9b08      	ldr	r3, [sp, #32]
 8000c30:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c32:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000c36:	a909      	add	r1, sp, #36	; 0x24
 8000c38:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000c3a:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8000c3e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000c40:	f00b f922 	bl	800be88 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000c44:	4628      	mov	r0, r5
 8000c46:	f240 516a 	movw	r1, #1386	; 0x56a
 8000c4a:	f00b f93b 	bl	800bec4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000c4e:	2234      	movs	r2, #52	; 0x34
 8000c50:	e020      	b.n	8000c94 <main+0x358>
 8000c52:	bf00      	nop
 8000c54:	40023800 	.word	0x40023800
 8000c58:	40021000 	.word	0x40021000
 8000c5c:	200001a0 	.word	0x200001a0
 8000c60:	40020800 	.word	0x40020800
 8000c64:	40020000 	.word	0x40020000
 8000c68:	40020400 	.word	0x40020400
 8000c6c:	40020c00 	.word	0x40020c00
 8000c70:	40021800 	.word	0x40021800
 8000c74:	20000198 	.word	0x20000198
 8000c78:	40023000 	.word	0x40023000
 8000c7c:	40005c00 	.word	0x40005c00
 8000c80:	000186a0 	.word	0x000186a0
 8000c84:	200002d0 	.word	0x200002d0
 8000c88:	2000029c 	.word	0x2000029c
 8000c8c:	a0000140 	.word	0xa0000140
 8000c90:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8000c94:	4d3a      	ldr	r5, [pc, #232]	; (8000d80 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000c96:	4621      	mov	r1, r4
 8000c98:	eb0d 0002 	add.w	r0, sp, r2
 8000c9c:	f02a fa39 	bl	802b112 <memset>
  hltdc.Instance = LTDC;
 8000ca0:	4b38      	ldr	r3, [pc, #224]	; (8000d84 <main+0x448>)
 8000ca2:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8000ca4:	2309      	movs	r3, #9
 8000ca6:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000ca8:	231d      	movs	r3, #29
 8000caa:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000cac:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000cb0:	f240 1343 	movw	r3, #323	; 0x143
 8000cb4:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000cb8:	f240 1217 	movw	r2, #279	; 0x117
 8000cbc:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000cc0:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000cc2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000cc4:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000cc8:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000cca:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000cce:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 8000cd2:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8000cd6:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000cda:	f00a fad7 	bl	800b28c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000cde:	23f0      	movs	r3, #240	; 0xf0
 8000ce0:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 8000ce2:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 8000ce4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000ce8:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 8000cea:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 8000cec:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000cee:	a90d      	add	r1, sp, #52	; 0x34
 8000cf0:	4622      	mov	r2, r4
 8000cf2:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8000cf4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000cf6:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8000cfa:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 8000cfc:	4d22      	ldr	r5, [pc, #136]	; (8000d88 <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 8000cfe:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000d00:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8000d04:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000d06:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8000d08:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 8000d0a:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 8000d0c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000d10:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000d14:	f00a fb90 	bl	800b438 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000d18:	4b1c      	ldr	r3, [pc, #112]	; (8000d8c <main+0x450>)
 8000d1a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000d20:	682b      	ldr	r3, [r5, #0]
 8000d22:	68db      	ldr	r3, [r3, #12]
 8000d24:	4798      	blx	r3
  MX_TouchGFX_Init();
 8000d26:	f000 fdeb 	bl	8001900 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000d2a:	f000 fde7 	bl	80018fc <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8000d2e:	f7ff fd71 	bl	8000814 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8000d32:	f000 f945 	bl	8000fc0 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8000d36:	f000 f977 	bl	8001028 <MEAS_timer_init>
  osKernelInitialize();
 8000d3a:	f00b ffb3 	bl	800cca4 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8000d3e:	4a14      	ldr	r2, [pc, #80]	; (8000d90 <main+0x454>)
 8000d40:	4639      	mov	r1, r7
 8000d42:	4650      	mov	r0, sl
 8000d44:	f00c f8e8 	bl	800cf18 <osMessageQueueNew>
 8000d48:	4b12      	ldr	r3, [pc, #72]	; (8000d94 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000d4a:	4a13      	ldr	r2, [pc, #76]	; (8000d98 <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8000d4c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000d4e:	4621      	mov	r1, r4
 8000d50:	4812      	ldr	r0, [pc, #72]	; (8000d9c <main+0x460>)
 8000d52:	f00b ffd3 	bl	800ccfc <osThreadNew>
 8000d56:	4b12      	ldr	r3, [pc, #72]	; (8000da0 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000d58:	4a12      	ldr	r2, [pc, #72]	; (8000da4 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000d5a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000d5c:	4621      	mov	r1, r4
 8000d5e:	4812      	ldr	r0, [pc, #72]	; (8000da8 <main+0x46c>)
 8000d60:	f00b ffcc 	bl	800ccfc <osThreadNew>
 8000d64:	4b11      	ldr	r3, [pc, #68]	; (8000dac <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000d66:	4a12      	ldr	r2, [pc, #72]	; (8000db0 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000d68:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000d6a:	4621      	mov	r1, r4
 8000d6c:	4811      	ldr	r0, [pc, #68]	; (8000db4 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000d6e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000d70:	f00b ffc4 	bl	800ccfc <osThreadNew>
 8000d74:	4b10      	ldr	r3, [pc, #64]	; (8000db8 <main+0x47c>)
 8000d76:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000d78:	f00b ffa6 	bl	800ccc8 <osKernelStart>
  while (1)
 8000d7c:	e7fe      	b.n	8000d7c <main+0x440>
 8000d7e:	bf00      	nop
 8000d80:	200001f4 	.word	0x200001f4
 8000d84:	40016800 	.word	0x40016800
 8000d88:	20000188 	.word	0x20000188
 8000d8c:	20000018 	.word	0x20000018
 8000d90:	0802bec4 	.word	0x0802bec4
 8000d94:	2000018c 	.word	0x2000018c
 8000d98:	0802bf00 	.word	0x0802bf00
 8000d9c:	080007a9 	.word	0x080007a9
 8000da0:	20000194 	.word	0x20000194
 8000da4:	0802bea0 	.word	0x0802bea0
 8000da8:	08001911 	.word	0x08001911
 8000dac:	20000184 	.word	0x20000184
 8000db0:	0802bedc 	.word	0x0802bedc
 8000db4:	080007b5 	.word	0x080007b5
 8000db8:	20000190 	.word	0x20000190

08000dbc <IOE_Init>:
 8000dbc:	4770      	bx	lr
 8000dbe:	bf00      	nop

08000dc0 <IOE_ITConfig>:
 8000dc0:	4770      	bx	lr
 8000dc2:	bf00      	nop

08000dc4 <IOE_Write>:
{
 8000dc4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000dc6:	4c09      	ldr	r4, [pc, #36]	; (8000dec <IOE_Write+0x28>)
{
 8000dc8:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000dca:	6824      	ldr	r4, [r4, #0]
 8000dcc:	9402      	str	r4, [sp, #8]
{
 8000dce:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000dd0:	2301      	movs	r3, #1
 8000dd2:	f88d 4017 	strb.w	r4, [sp, #23]
 8000dd6:	f10d 0417 	add.w	r4, sp, #23
 8000dda:	460a      	mov	r2, r1
 8000ddc:	9301      	str	r3, [sp, #4]
 8000dde:	4601      	mov	r1, r0
 8000de0:	9400      	str	r4, [sp, #0]
 8000de2:	4803      	ldr	r0, [pc, #12]	; (8000df0 <IOE_Write+0x2c>)
 8000de4:	f009 f90a 	bl	8009ffc <HAL_I2C_Mem_Write>
}
 8000de8:	b006      	add	sp, #24
 8000dea:	bd10      	pop	{r4, pc}
 8000dec:	20000004 	.word	0x20000004
 8000df0:	200001a0 	.word	0x200001a0

08000df4 <IOE_Read>:
{
 8000df4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000df6:	4b0b      	ldr	r3, [pc, #44]	; (8000e24 <IOE_Read+0x30>)
{
 8000df8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	9302      	str	r3, [sp, #8]
{
 8000dfe:	4684      	mov	ip, r0
 8000e00:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000e02:	2301      	movs	r3, #1
 8000e04:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8000e08:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000e0a:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8000e0e:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000e12:	4661      	mov	r1, ip
 8000e14:	4804      	ldr	r0, [pc, #16]	; (8000e28 <IOE_Read+0x34>)
 8000e16:	f009 f9e3 	bl	800a1e0 <HAL_I2C_Mem_Read>
}
 8000e1a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8000e1e:	b007      	add	sp, #28
 8000e20:	f85d fb04 	ldr.w	pc, [sp], #4
 8000e24:	20000004 	.word	0x20000004
 8000e28:	200001a0 	.word	0x200001a0

08000e2c <IOE_ReadMultiple>:
{
 8000e2c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8000e2e:	4c09      	ldr	r4, [pc, #36]	; (8000e54 <IOE_ReadMultiple+0x28>)
{
 8000e30:	b084      	sub	sp, #16
 8000e32:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8000e34:	6820      	ldr	r0, [r4, #0]
 8000e36:	9002      	str	r0, [sp, #8]
 8000e38:	e9cd 2300 	strd	r2, r3, [sp]
 8000e3c:	4806      	ldr	r0, [pc, #24]	; (8000e58 <IOE_ReadMultiple+0x2c>)
 8000e3e:	460a      	mov	r2, r1
 8000e40:	2301      	movs	r3, #1
 8000e42:	4661      	mov	r1, ip
 8000e44:	f009 f9cc 	bl	800a1e0 <HAL_I2C_Mem_Read>
}
 8000e48:	3800      	subs	r0, #0
 8000e4a:	bf18      	it	ne
 8000e4c:	2001      	movne	r0, #1
 8000e4e:	b004      	add	sp, #16
 8000e50:	bd10      	pop	{r4, pc}
 8000e52:	bf00      	nop
 8000e54:	20000004 	.word	0x20000004
 8000e58:	200001a0 	.word	0x200001a0

08000e5c <IOE_Delay>:
 8000e5c:	f008 bbc2 	b.w	80095e4 <HAL_Delay>

08000e60 <LCD_IO_Init>:
{
 8000e60:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000e62:	4806      	ldr	r0, [pc, #24]	; (8000e7c <LCD_IO_Init+0x1c>)
 8000e64:	2200      	movs	r2, #0
 8000e66:	2104      	movs	r1, #4
 8000e68:	f008 fd9a 	bl	80099a0 <HAL_GPIO_WritePin>
}
 8000e6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000e70:	4802      	ldr	r0, [pc, #8]	; (8000e7c <LCD_IO_Init+0x1c>)
 8000e72:	2201      	movs	r2, #1
 8000e74:	2104      	movs	r1, #4
 8000e76:	f008 bd93 	b.w	80099a0 <HAL_GPIO_WritePin>
 8000e7a:	bf00      	nop
 8000e7c:	40020800 	.word	0x40020800

08000e80 <LCD_IO_WriteData>:
{
 8000e80:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000e82:	4d10      	ldr	r5, [pc, #64]	; (8000ec4 <LCD_IO_WriteData+0x44>)
{
 8000e84:	b083      	sub	sp, #12
 8000e86:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000e88:	2201      	movs	r2, #1
 8000e8a:	480f      	ldr	r0, [pc, #60]	; (8000ec8 <LCD_IO_WriteData+0x48>)
 8000e8c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000e90:	f008 fd86 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000e94:	4628      	mov	r0, r5
 8000e96:	2200      	movs	r2, #0
 8000e98:	2104      	movs	r1, #4
 8000e9a:	f008 fd81 	bl	80099a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000e9e:	4b0b      	ldr	r3, [pc, #44]	; (8000ecc <LCD_IO_WriteData+0x4c>)
 8000ea0:	480b      	ldr	r0, [pc, #44]	; (8000ed0 <LCD_IO_WriteData+0x50>)
 8000ea2:	681b      	ldr	r3, [r3, #0]
 8000ea4:	f8ad 4006 	strh.w	r4, [sp, #6]
 8000ea8:	f10d 0106 	add.w	r1, sp, #6
 8000eac:	2201      	movs	r2, #1
 8000eae:	f00b f91d 	bl	800c0ec <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000eb2:	2201      	movs	r2, #1
 8000eb4:	2104      	movs	r1, #4
 8000eb6:	4628      	mov	r0, r5
}
 8000eb8:	b003      	add	sp, #12
 8000eba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000ebe:	f008 bd6f 	b.w	80099a0 <HAL_GPIO_WritePin>
 8000ec2:	bf00      	nop
 8000ec4:	40020800 	.word	0x40020800
 8000ec8:	40020c00 	.word	0x40020c00
 8000ecc:	20000008 	.word	0x20000008
 8000ed0:	200002d0 	.word	0x200002d0

08000ed4 <LCD_IO_WriteReg>:
{
 8000ed4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000ed6:	4d10      	ldr	r5, [pc, #64]	; (8000f18 <LCD_IO_WriteReg+0x44>)
{
 8000ed8:	b083      	sub	sp, #12
 8000eda:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000edc:	2200      	movs	r2, #0
 8000ede:	480f      	ldr	r0, [pc, #60]	; (8000f1c <LCD_IO_WriteReg+0x48>)
 8000ee0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000ee4:	f008 fd5c 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000ee8:	4628      	mov	r0, r5
 8000eea:	2200      	movs	r2, #0
 8000eec:	2104      	movs	r1, #4
 8000eee:	f008 fd57 	bl	80099a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000ef2:	4b0b      	ldr	r3, [pc, #44]	; (8000f20 <LCD_IO_WriteReg+0x4c>)
 8000ef4:	480b      	ldr	r0, [pc, #44]	; (8000f24 <LCD_IO_WriteReg+0x50>)
 8000ef6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8000ef8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000efc:	f10d 0106 	add.w	r1, sp, #6
 8000f00:	2201      	movs	r2, #1
 8000f02:	f00b f8f3 	bl	800c0ec <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000f06:	2201      	movs	r2, #1
 8000f08:	2104      	movs	r1, #4
 8000f0a:	4628      	mov	r0, r5
}
 8000f0c:	b003      	add	sp, #12
 8000f0e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000f12:	f008 bd45 	b.w	80099a0 <HAL_GPIO_WritePin>
 8000f16:	bf00      	nop
 8000f18:	40020800 	.word	0x40020800
 8000f1c:	40020c00 	.word	0x40020c00
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200002d0 	.word	0x200002d0

08000f28 <LCD_IO_ReadData>:
{
 8000f28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000f2c:	4e19      	ldr	r6, [pc, #100]	; (8000f94 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000f2e:	4f1a      	ldr	r7, [pc, #104]	; (8000f98 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000f30:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8000f9c <LCD_IO_ReadData+0x74>
 8000f34:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8000fa0 <LCD_IO_ReadData+0x78>
{
 8000f38:	b083      	sub	sp, #12
 8000f3a:	460c      	mov	r4, r1
 8000f3c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000f3e:	2200      	movs	r2, #0
 8000f40:	4630      	mov	r0, r6
 8000f42:	2104      	movs	r1, #4
 8000f44:	f008 fd2c 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000f48:	4638      	mov	r0, r7
 8000f4a:	2200      	movs	r2, #0
 8000f4c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000f50:	f008 fd26 	bl	80099a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000f54:	f8d9 3000 	ldr.w	r3, [r9]
 8000f58:	f8ad 5004 	strh.w	r5, [sp, #4]
 8000f5c:	a901      	add	r1, sp, #4
 8000f5e:	2201      	movs	r2, #1
 8000f60:	4640      	mov	r0, r8
 8000f62:	f00b f8c3 	bl	800c0ec <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8000f66:	f8d9 3000 	ldr.w	r3, [r9]
 8000f6a:	4622      	mov	r2, r4
 8000f6c:	a901      	add	r1, sp, #4
 8000f6e:	4640      	mov	r0, r8
 8000f70:	f00b fb64 	bl	800c63c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000f74:	4638      	mov	r0, r7
 8000f76:	2201      	movs	r2, #1
 8000f78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8000f7c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000f7e:	f008 fd0f 	bl	80099a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000f82:	4630      	mov	r0, r6
 8000f84:	2201      	movs	r2, #1
 8000f86:	2104      	movs	r1, #4
 8000f88:	f008 fd0a 	bl	80099a0 <HAL_GPIO_WritePin>
}
 8000f8c:	4620      	mov	r0, r4
 8000f8e:	b003      	add	sp, #12
 8000f90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f94:	40020800 	.word	0x40020800
 8000f98:	40020c00 	.word	0x40020c00
 8000f9c:	20000008 	.word	0x20000008
 8000fa0:	200002d0 	.word	0x200002d0

08000fa4 <LCD_Delay>:
  HAL_Delay(Delay);
 8000fa4:	f008 bb1e 	b.w	80095e4 <HAL_Delay>

08000fa8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000fa8:	4b03      	ldr	r3, [pc, #12]	; (8000fb8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000faa:	6802      	ldr	r2, [r0, #0]
 8000fac:	429a      	cmp	r2, r3
 8000fae:	d000      	beq.n	8000fb2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000fb0:	4770      	bx	lr
    HAL_IncTick();
 8000fb2:	f008 bb05 	b.w	80095c0 <HAL_IncTick>
 8000fb6:	bf00      	nop
 8000fb8:	40001000 	.word	0x40001000

08000fbc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000fbc:	4770      	bx	lr
 8000fbe:	bf00      	nop

08000fc0 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8000fc0:	b410      	push	{r4}
 8000fc2:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000fc4:	4b15      	ldr	r3, [pc, #84]	; (800101c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8000fc6:	4916      	ldr	r1, [pc, #88]	; (8001020 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000fc8:	2400      	movs	r4, #0
 8000fca:	9400      	str	r4, [sp, #0]
 8000fcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000fce:	f042 0220 	orr.w	r2, r2, #32
 8000fd2:	631a      	str	r2, [r3, #48]	; 0x30
 8000fd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000fd6:	f002 0220 	and.w	r2, r2, #32
 8000fda:	9200      	str	r2, [sp, #0]
 8000fdc:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8000fde:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8000fe0:	4a10      	ldr	r2, [pc, #64]	; (8001024 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8000fe2:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8000fe6:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8000fe8:	6808      	ldr	r0, [r1, #0]
 8000fea:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8000fee:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8000ff0:	9401      	str	r4, [sp, #4]
 8000ff2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ff4:	f041 0104 	orr.w	r1, r1, #4
 8000ff8:	6319      	str	r1, [r3, #48]	; 0x30
 8000ffa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ffc:	f003 0304 	and.w	r3, r3, #4
 8001000:	9301      	str	r3, [sp, #4]
 8001002:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001004:	6813      	ldr	r3, [r2, #0]
 8001006:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800100a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 800100c:	6813      	ldr	r3, [r2, #0]
 800100e:	f043 030c 	orr.w	r3, r3, #12
 8001012:	6013      	str	r3, [r2, #0]
}
 8001014:	b003      	add	sp, #12
 8001016:	f85d 4b04 	ldr.w	r4, [sp], #4
 800101a:	4770      	bx	lr
 800101c:	40023800 	.word	0x40023800
 8001020:	40021400 	.word	0x40021400
 8001024:	40020800 	.word	0x40020800

08001028 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001028:	b410      	push	{r4}
 800102a:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800102c:	4a0e      	ldr	r2, [pc, #56]	; (8001068 <MEAS_timer_init+0x40>)
 800102e:	2000      	movs	r0, #0
 8001030:	9001      	str	r0, [sp, #4]
 8001032:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001034:	f041 0101 	orr.w	r1, r1, #1
 8001038:	6411      	str	r1, [r2, #64]	; 0x40
 800103a:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800103c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001040:	f002 0201 	and.w	r2, r2, #1
 8001044:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001046:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800104a:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800104c:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800104e:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001050:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001052:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001054:	4905      	ldr	r1, [pc, #20]	; (800106c <MEAS_timer_init+0x44>)
 8001056:	f042 0220 	orr.w	r2, r2, #32
 800105a:	605a      	str	r2, [r3, #4]
 800105c:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001060:	b003      	add	sp, #12
 8001062:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001066:	4770      	bx	lr
 8001068:	40023800 	.word	0x40023800
 800106c:	e000e100 	.word	0xe000e100

08001070 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001070:	b410      	push	{r4}
 8001072:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001074:	4a36      	ldr	r2, [pc, #216]	; (8001150 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001076:	4b37      	ldr	r3, [pc, #220]	; (8001154 <MEAS_ADC3_scan_init+0xe4>)
 8001078:	4c37      	ldr	r4, [pc, #220]	; (8001158 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800107a:	2100      	movs	r1, #0
 800107c:	9100      	str	r1, [sp, #0]
 800107e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001080:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001084:	6450      	str	r0, [r2, #68]	; 0x44
 8001086:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001088:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 800108c:	9000      	str	r0, [sp, #0]
 800108e:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001090:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001092:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001096:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001098:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800109a:	f040 0004 	orr.w	r0, r0, #4
 800109e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80010a0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80010a2:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80010a6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80010a8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80010aa:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80010ae:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80010b0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80010b2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80010b6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80010b8:	6858      	ldr	r0, [r3, #4]
 80010ba:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80010be:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80010c0:	6898      	ldr	r0, [r3, #8]
 80010c2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80010c6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80010c8:	6898      	ldr	r0, [r3, #8]
 80010ca:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80010ce:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80010d0:	6898      	ldr	r0, [r3, #8]
 80010d2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80010d6:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80010d8:	9101      	str	r1, [sp, #4]
 80010da:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80010dc:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80010e0:	6310      	str	r0, [r2, #48]	; 0x30
 80010e2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80010e4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80010e8:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80010ea:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80010ee:	9a01      	ldr	r2, [sp, #4]
 80010f0:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80010f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80010f6:	f022 0201 	bic.w	r2, r2, #1
 80010fa:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80010fc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80010fe:	07d2      	lsls	r2, r2, #31
 8001100:	d4fc      	bmi.n	80010fc <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001102:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001104:	4815      	ldr	r0, [pc, #84]	; (800115c <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001106:	4916      	ldr	r1, [pc, #88]	; (8001160 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001108:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800110c:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 800110e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001110:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001114:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001116:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001118:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800111c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800111e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001120:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001124:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001126:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001128:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800112c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800112e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001130:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001134:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001136:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001138:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800113c:	f042 0210 	orr.w	r2, r2, #16
 8001140:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001142:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001144:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001146:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001148:	b003      	add	sp, #12
 800114a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800114e:	4770      	bx	lr
 8001150:	40023800 	.word	0x40023800
 8001154:	40012200 	.word	0x40012200
 8001158:	e000e100 	.word	0xe000e100
 800115c:	4001224c 	.word	0x4001224c
 8001160:	20000328 	.word	0x20000328

08001164 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001164:	4b1b      	ldr	r3, [pc, #108]	; (80011d4 <DMA2_Stream1_IRQHandler+0x70>)
 8001166:	681a      	ldr	r2, [r3, #0]
 8001168:	0511      	lsls	r1, r2, #20
 800116a:	d400      	bmi.n	800116e <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 800116c:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800116e:	4a1a      	ldr	r2, [pc, #104]	; (80011d8 <DMA2_Stream1_IRQHandler+0x74>)
 8001170:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001174:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001178:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800117c:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001180:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001184:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001186:	f022 0201 	bic.w	r2, r2, #1
 800118a:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800118c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800118e:	07d2      	lsls	r2, r2, #31
 8001190:	d4fc      	bmi.n	800118c <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001192:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001194:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001198:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800119c:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800119e:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80011a0:	490e      	ldr	r1, [pc, #56]	; (80011dc <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80011a2:	f023 0301 	bic.w	r3, r3, #1
 80011a6:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80011a8:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80011aa:	4b0d      	ldr	r3, [pc, #52]	; (80011e0 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80011ac:	f020 0001 	bic.w	r0, r0, #1
 80011b0:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80011b2:	6888      	ldr	r0, [r1, #8]
 80011b4:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80011b8:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80011ba:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80011bc:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80011c0:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80011c2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80011c4:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80011c8:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80011ca:	6813      	ldr	r3, [r2, #0]
 80011cc:	f023 0301 	bic.w	r3, r3, #1
 80011d0:	6013      	str	r3, [r2, #0]
}
 80011d2:	4770      	bx	lr
 80011d4:	40026400 	.word	0x40026400
 80011d8:	e000e100 	.word	0xe000e100
 80011dc:	40012200 	.word	0x40012200
 80011e0:	40023800 	.word	0x40023800

080011e4 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80011e4:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80011e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80011ea:	2100      	movs	r1, #0
 80011ec:	480f      	ldr	r0, [pc, #60]	; (800122c <MEAS_start_measure+0x48>)
 80011ee:	f029 ff90 	bl	802b112 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80011f2:	f7ff ff3d 	bl	8001070 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80011f6:	4a0e      	ldr	r2, [pc, #56]	; (8001230 <MEAS_start_measure+0x4c>)
 80011f8:	490e      	ldr	r1, [pc, #56]	; (8001234 <MEAS_start_measure+0x50>)
 80011fa:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80011fc:	480e      	ldr	r0, [pc, #56]	; (8001238 <MEAS_start_measure+0x54>)
 80011fe:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001202:	f043 0301 	orr.w	r3, r3, #1
 8001206:	6293      	str	r3, [r2, #40]	; 0x28
 8001208:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800120c:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800120e:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001210:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001214:	f043 0301 	orr.w	r3, r3, #1
 8001218:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800121a:	680b      	ldr	r3, [r1, #0]
 800121c:	f043 0301 	orr.w	r3, r3, #1
 8001220:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001222:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001224:	07db      	lsls	r3, r3, #31
 8001226:	d4fc      	bmi.n	8001222 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001228:	4800      	ldr	r0, [pc, #0]	; (800122c <MEAS_start_measure+0x48>)
 800122a:	bd10      	pop	{r4, pc}
 800122c:	20000328 	.word	0x20000328
 8001230:	40026400 	.word	0x40026400
 8001234:	e000e100 	.word	0xe000e100
 8001238:	40012200 	.word	0x40012200

0800123c <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 800123c:	2004      	movs	r0, #4
 800123e:	4770      	bx	lr

08001240 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001240:	2040      	movs	r0, #64	; 0x40
 8001242:	4770      	bx	lr

08001244 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001244:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001248:	4770      	bx	lr
 800124a:	bf00      	nop

0800124c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800124c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800124e:	4b0e      	ldr	r3, [pc, #56]	; (8001288 <HAL_MspInit+0x3c>)
 8001250:	2200      	movs	r2, #0
 8001252:	9200      	str	r2, [sp, #0]
 8001254:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001256:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800125a:	6459      	str	r1, [r3, #68]	; 0x44
 800125c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800125e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001262:	9000      	str	r0, [sp, #0]
 8001264:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001266:	9201      	str	r2, [sp, #4]
 8001268:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800126a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800126e:	6418      	str	r0, [r3, #64]	; 0x40
 8001270:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001272:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001276:	9301      	str	r3, [sp, #4]
 8001278:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800127a:	210f      	movs	r1, #15
 800127c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001280:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001282:	f008 b9d3 	b.w	800962c <HAL_NVIC_SetPriority>
 8001286:	bf00      	nop
 8001288:	40023800 	.word	0x40023800

0800128c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 800128c:	4b0b      	ldr	r3, [pc, #44]	; (80012bc <HAL_CRC_MspInit+0x30>)
 800128e:	6802      	ldr	r2, [r0, #0]
 8001290:	429a      	cmp	r2, r3
 8001292:	d000      	beq.n	8001296 <HAL_CRC_MspInit+0xa>
 8001294:	4770      	bx	lr
{
 8001296:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001298:	2200      	movs	r2, #0
 800129a:	9201      	str	r2, [sp, #4]
 800129c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80012a0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80012a4:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80012a8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80012ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012ae:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80012b2:	9301      	str	r3, [sp, #4]
 80012b4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80012b6:	b002      	add	sp, #8
 80012b8:	4770      	bx	lr
 80012ba:	bf00      	nop
 80012bc:	40023000 	.word	0x40023000

080012c0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80012c0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80012c4:	4b2e      	ldr	r3, [pc, #184]	; (8001380 <HAL_I2C_MspInit+0xc0>)
 80012c6:	6802      	ldr	r2, [r0, #0]
{
 80012c8:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012ca:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80012cc:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012ce:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80012d2:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80012d6:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80012d8:	d002      	beq.n	80012e0 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80012da:	b00a      	add	sp, #40	; 0x28
 80012dc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80012e0:	4d28      	ldr	r5, [pc, #160]	; (8001384 <HAL_I2C_MspInit+0xc4>)
 80012e2:	9401      	str	r4, [sp, #4]
 80012e4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012e6:	4828      	ldr	r0, [pc, #160]	; (8001388 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80012e8:	f043 0304 	orr.w	r3, r3, #4
 80012ec:	632b      	str	r3, [r5, #48]	; 0x30
 80012ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012f0:	f003 0304 	and.w	r3, r3, #4
 80012f4:	9301      	str	r3, [sp, #4]
 80012f6:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80012f8:	9402      	str	r4, [sp, #8]
 80012fa:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012fc:	f043 0301 	orr.w	r3, r3, #1
 8001300:	632b      	str	r3, [r5, #48]	; 0x30
 8001302:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001304:	f003 0301 	and.w	r3, r3, #1
 8001308:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800130a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800130e:	f04f 0801 	mov.w	r8, #1
 8001312:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001316:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001318:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800131a:	2312      	movs	r3, #18
 800131c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001320:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001324:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001326:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001328:	f008 f9f6 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800132c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800132e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001332:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001334:	4815      	ldr	r0, [pc, #84]	; (800138c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001336:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001338:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800133c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001340:	f008 f9ea 	bl	8009718 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001344:	9403      	str	r4, [sp, #12]
 8001346:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001348:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800134c:	642b      	str	r3, [r5, #64]	; 0x40
 800134e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001350:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001354:	4622      	mov	r2, r4
 8001356:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001358:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800135a:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 800135c:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800135e:	f008 f965 	bl	800962c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001362:	2048      	movs	r0, #72	; 0x48
 8001364:	f008 f9a0 	bl	80096a8 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001368:	6a2b      	ldr	r3, [r5, #32]
 800136a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800136e:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001370:	6a2b      	ldr	r3, [r5, #32]
 8001372:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001376:	622b      	str	r3, [r5, #32]
}
 8001378:	b00a      	add	sp, #40	; 0x28
 800137a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800137e:	bf00      	nop
 8001380:	40005c00 	.word	0x40005c00
 8001384:	40023800 	.word	0x40023800
 8001388:	40020800 	.word	0x40020800
 800138c:	40020000 	.word	0x40020000

08001390 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001394:	4604      	mov	r4, r0
 8001396:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001398:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800139a:	2230      	movs	r2, #48	; 0x30
 800139c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800139e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80013a2:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80013a6:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013a8:	f029 feb3 	bl	802b112 <memset>
  if(hltdc->Instance==LTDC)
 80013ac:	4b67      	ldr	r3, [pc, #412]	; (800154c <HAL_LTDC_MspInit+0x1bc>)
 80013ae:	6822      	ldr	r2, [r4, #0]
 80013b0:	429a      	cmp	r2, r3
 80013b2:	d002      	beq.n	80013ba <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80013b4:	b01a      	add	sp, #104	; 0x68
 80013b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80013ba:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013bc:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80013be:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80013c0:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013c2:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013c4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013c8:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80013ca:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013cc:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013ce:	f00a fc0d 	bl	800bbec <HAL_RCCEx_PeriphCLKConfig>
 80013d2:	2800      	cmp	r0, #0
 80013d4:	f040 80b7 	bne.w	8001546 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80013d8:	4b5d      	ldr	r3, [pc, #372]	; (8001550 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013da:	485e      	ldr	r0, [pc, #376]	; (8001554 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80013dc:	2400      	movs	r4, #0
 80013de:	9401      	str	r4, [sp, #4]
 80013e0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80013e2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80013e6:	645a      	str	r2, [r3, #68]	; 0x44
 80013e8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80013ea:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80013ee:	9201      	str	r2, [sp, #4]
 80013f0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80013f2:	9402      	str	r4, [sp, #8]
 80013f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f6:	f042 0220 	orr.w	r2, r2, #32
 80013fa:	631a      	str	r2, [r3, #48]	; 0x30
 80013fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fe:	f002 0220 	and.w	r2, r2, #32
 8001402:	9202      	str	r2, [sp, #8]
 8001404:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001406:	9403      	str	r4, [sp, #12]
 8001408:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800140a:	f042 0201 	orr.w	r2, r2, #1
 800140e:	631a      	str	r2, [r3, #48]	; 0x30
 8001410:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001412:	f002 0201 	and.w	r2, r2, #1
 8001416:	9203      	str	r2, [sp, #12]
 8001418:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800141a:	9404      	str	r4, [sp, #16]
 800141c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800141e:	f042 0202 	orr.w	r2, r2, #2
 8001422:	631a      	str	r2, [r3, #48]	; 0x30
 8001424:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001426:	f002 0202 	and.w	r2, r2, #2
 800142a:	9204      	str	r2, [sp, #16]
 800142c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800142e:	9405      	str	r4, [sp, #20]
 8001430:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001432:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001436:	631a      	str	r2, [r3, #48]	; 0x30
 8001438:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800143a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800143e:	9205      	str	r2, [sp, #20]
 8001440:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001442:	9406      	str	r4, [sp, #24]
 8001444:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001446:	f042 0204 	orr.w	r2, r2, #4
 800144a:	631a      	str	r2, [r3, #48]	; 0x30
 800144c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144e:	f002 0204 	and.w	r2, r2, #4
 8001452:	9206      	str	r2, [sp, #24]
 8001454:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001456:	9407      	str	r4, [sp, #28]
 8001458:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800145a:	f042 0208 	orr.w	r2, r2, #8
 800145e:	631a      	str	r2, [r3, #48]	; 0x30
 8001460:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001462:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001466:	2600      	movs	r6, #0
 8001468:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800146a:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800146c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800146e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001470:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001474:	2302      	movs	r3, #2
 8001476:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800147a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800147e:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001480:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001482:	f008 f949 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001486:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001488:	f641 0258 	movw	r2, #6232	; 0x1858
 800148c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800148e:	4832      	ldr	r0, [pc, #200]	; (8001558 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001490:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001492:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001496:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800149a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800149e:	f008 f93b 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014a2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80014a4:	2203      	movs	r2, #3
 80014a6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014a8:	482c      	ldr	r0, [pc, #176]	; (800155c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80014aa:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80014ae:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80014b2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014b6:	f008 f92f 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014ba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80014bc:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80014c0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014c2:	4826      	ldr	r0, [pc, #152]	; (800155c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80014c4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80014c6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80014ca:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014ce:	f008 f923 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014d2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80014d4:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80014d8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014da:	4821      	ldr	r0, [pc, #132]	; (8001560 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80014dc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80014de:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80014e2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014e6:	f008 f917 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80014ec:	22c0      	movs	r2, #192	; 0xc0
 80014ee:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014f0:	481c      	ldr	r0, [pc, #112]	; (8001564 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80014f2:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80014f4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80014f8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014fc:	f008 f90c 	bl	8009718 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001500:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001502:	2208      	movs	r2, #8
 8001504:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001506:	4818      	ldr	r0, [pc, #96]	; (8001568 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001508:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800150a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800150e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001512:	f008 f901 	bl	8009718 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001516:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001518:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800151a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800151e:	4810      	ldr	r0, [pc, #64]	; (8001560 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001520:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001524:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001528:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800152c:	f008 f8f4 	bl	8009718 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001530:	4622      	mov	r2, r4
 8001532:	2105      	movs	r1, #5
 8001534:	2058      	movs	r0, #88	; 0x58
 8001536:	f008 f879 	bl	800962c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800153a:	2058      	movs	r0, #88	; 0x58
 800153c:	f008 f8b4 	bl	80096a8 <HAL_NVIC_EnableIRQ>
}
 8001540:	b01a      	add	sp, #104	; 0x68
 8001542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001546:	f7ff fd39 	bl	8000fbc <Error_Handler>
 800154a:	e745      	b.n	80013d8 <HAL_LTDC_MspInit+0x48>
 800154c:	40016800 	.word	0x40016800
 8001550:	40023800 	.word	0x40023800
 8001554:	40021400 	.word	0x40021400
 8001558:	40020000 	.word	0x40020000
 800155c:	40020400 	.word	0x40020400
 8001560:	40021800 	.word	0x40021800
 8001564:	40020800 	.word	0x40020800
 8001568:	40020c00 	.word	0x40020c00
 800156c:	00000000 	.word	0x00000000

08001570 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001570:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001572:	4a1b      	ldr	r2, [pc, #108]	; (80015e0 <HAL_SPI_MspInit+0x70>)
 8001574:	6801      	ldr	r1, [r0, #0]
{
 8001576:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001578:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800157a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800157c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001580:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001584:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001586:	d001      	beq.n	800158c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001588:	b008      	add	sp, #32
 800158a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800158c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001590:	9300      	str	r3, [sp, #0]
 8001592:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001594:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001598:	6450      	str	r0, [r2, #68]	; 0x44
 800159a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800159c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80015a0:	9000      	str	r0, [sp, #0]
 80015a2:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015a4:	9301      	str	r3, [sp, #4]
 80015a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80015a8:	480e      	ldr	r0, [pc, #56]	; (80015e4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015aa:	f043 0320 	orr.w	r3, r3, #32
 80015ae:	6313      	str	r3, [r2, #48]	; 0x30
 80015b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80015b2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80015d8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015b6:	f003 0320 	and.w	r3, r3, #32
 80015ba:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015bc:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80015be:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80015c0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80015c2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80015c6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015ca:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80015cc:	f008 f8a4 	bl	8009718 <HAL_GPIO_Init>
}
 80015d0:	b008      	add	sp, #32
 80015d2:	bd10      	pop	{r4, pc}
 80015d4:	f3af 8000 	nop.w
 80015d8:	00000380 	.word	0x00000380
 80015dc:	00000002 	.word	0x00000002
 80015e0:	40015000 	.word	0x40015000
 80015e4:	40021400 	.word	0x40021400

080015e8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80015e8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80015ea:	4a21      	ldr	r2, [pc, #132]	; (8001670 <HAL_TIM_Base_MspInit+0x88>)
 80015ec:	6803      	ldr	r3, [r0, #0]
 80015ee:	4293      	cmp	r3, r2
{
 80015f0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80015f2:	d008      	beq.n	8001606 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80015f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80015f8:	d023      	beq.n	8001642 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80015fa:	4a1e      	ldr	r2, [pc, #120]	; (8001674 <HAL_TIM_Base_MspInit+0x8c>)
 80015fc:	4293      	cmp	r3, r2
 80015fe:	d011      	beq.n	8001624 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001600:	b005      	add	sp, #20
 8001602:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001606:	4b1c      	ldr	r3, [pc, #112]	; (8001678 <HAL_TIM_Base_MspInit+0x90>)
 8001608:	2200      	movs	r2, #0
 800160a:	9201      	str	r2, [sp, #4]
 800160c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800160e:	f042 0201 	orr.w	r2, r2, #1
 8001612:	645a      	str	r2, [r3, #68]	; 0x44
 8001614:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001616:	f003 0301 	and.w	r3, r3, #1
 800161a:	9301      	str	r3, [sp, #4]
 800161c:	9b01      	ldr	r3, [sp, #4]
}
 800161e:	b005      	add	sp, #20
 8001620:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001624:	4b14      	ldr	r3, [pc, #80]	; (8001678 <HAL_TIM_Base_MspInit+0x90>)
 8001626:	2200      	movs	r2, #0
 8001628:	9203      	str	r2, [sp, #12]
 800162a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800162c:	f042 0202 	orr.w	r2, r2, #2
 8001630:	641a      	str	r2, [r3, #64]	; 0x40
 8001632:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001634:	f003 0302 	and.w	r3, r3, #2
 8001638:	9303      	str	r3, [sp, #12]
 800163a:	9b03      	ldr	r3, [sp, #12]
}
 800163c:	b005      	add	sp, #20
 800163e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001642:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001646:	2200      	movs	r2, #0
 8001648:	9202      	str	r2, [sp, #8]
 800164a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800164c:	f041 0101 	orr.w	r1, r1, #1
 8001650:	6419      	str	r1, [r3, #64]	; 0x40
 8001652:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001654:	f003 0301 	and.w	r3, r3, #1
 8001658:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800165a:	201c      	movs	r0, #28
 800165c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800165e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001660:	f007 ffe4 	bl	800962c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001664:	201c      	movs	r0, #28
}
 8001666:	b005      	add	sp, #20
 8001668:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800166c:	f008 b81c 	b.w	80096a8 <HAL_NVIC_EnableIRQ>
 8001670:	40010000 	.word	0x40010000
 8001674:	40000400 	.word	0x40000400
 8001678:	40023800 	.word	0x40023800

0800167c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800167c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800167e:	4b2b      	ldr	r3, [pc, #172]	; (800172c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001680:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001682:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001684:	2200      	movs	r2, #0
 8001686:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001688:	2c00      	cmp	r4, #0
 800168a:	d14c      	bne.n	8001726 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800168c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800168e:	4a28      	ldr	r2, [pc, #160]	; (8001730 <HAL_SDRAM_MspInit+0xb4>)
 8001690:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001692:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001694:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001696:	4827      	ldr	r0, [pc, #156]	; (8001734 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001698:	433b      	orrs	r3, r7
 800169a:	6393      	str	r3, [r2, #56]	; 0x38
 800169c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800169e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80016a0:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80016a2:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80016a4:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80016a8:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016aa:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80016ac:	2302      	movs	r3, #2
 80016ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80016b2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80016b6:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016b8:	f008 f82e 	bl	8009718 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016bc:	481e      	ldr	r0, [pc, #120]	; (8001738 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80016be:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016c0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80016c2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016c4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80016c8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016cc:	f008 f824 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80016d0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016d4:	4819      	ldr	r0, [pc, #100]	; (800173c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80016d6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016d8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016da:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80016de:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016e2:	f008 f819 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80016e6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80016ea:	4815      	ldr	r0, [pc, #84]	; (8001740 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80016ec:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80016ee:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016f0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80016f4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80016f8:	f008 f80e 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80016fc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001700:	4810      	ldr	r0, [pc, #64]	; (8001744 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001702:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001704:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001706:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800170a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800170e:	f008 f803 	bl	8009718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001712:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001714:	480c      	ldr	r0, [pc, #48]	; (8001748 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001716:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001718:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800171a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800171e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001720:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001722:	f007 fff9 	bl	8009718 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001726:	b009      	add	sp, #36	; 0x24
 8001728:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800172a:	bf00      	nop
 800172c:	20000728 	.word	0x20000728
 8001730:	40023800 	.word	0x40023800
 8001734:	40021400 	.word	0x40021400
 8001738:	40020800 	.word	0x40020800
 800173c:	40021800 	.word	0x40021800
 8001740:	40021000 	.word	0x40021000
 8001744:	40020c00 	.word	0x40020c00
 8001748:	40020400 	.word	0x40020400

0800174c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800174c:	b570      	push	{r4, r5, r6, lr}
 800174e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001750:	4b23      	ldr	r3, [pc, #140]	; (80017e0 <HAL_InitTick+0x94>)
 8001752:	2200      	movs	r2, #0
 8001754:	9202      	str	r2, [sp, #8]
 8001756:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001758:	f042 0210 	orr.w	r2, r2, #16
 800175c:	641a      	str	r2, [r3, #64]	; 0x40
 800175e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001760:	f003 0310 	and.w	r3, r3, #16
 8001764:	9302      	str	r3, [sp, #8]
{
 8001766:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001768:	a901      	add	r1, sp, #4
 800176a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800176c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800176e:	f00a fa1b 	bl	800bba8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001772:	9b06      	ldr	r3, [sp, #24]
 8001774:	b9d3      	cbnz	r3, 80017ac <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001776:	f00a fa07 	bl	800bb88 <HAL_RCC_GetPCLK1Freq>
 800177a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800177c:	4a19      	ldr	r2, [pc, #100]	; (80017e4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800177e:	4c1a      	ldr	r4, [pc, #104]	; (80017e8 <HAL_InitTick+0x9c>)
 8001780:	491a      	ldr	r1, [pc, #104]	; (80017ec <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001782:	fba2 2303 	umull	r2, r3, r2, r3
 8001786:	0c9b      	lsrs	r3, r3, #18
 8001788:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800178a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800178c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001790:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001792:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001796:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001798:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800179a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800179c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800179e:	f00b f833 	bl	800c808 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80017a2:	4606      	mov	r6, r0
 80017a4:	b130      	cbz	r0, 80017b4 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80017a6:	4630      	mov	r0, r6
 80017a8:	b008      	add	sp, #32
 80017aa:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80017ac:	f00a f9ec 	bl	800bb88 <HAL_RCC_GetPCLK1Freq>
 80017b0:	0043      	lsls	r3, r0, #1
 80017b2:	e7e3      	b.n	800177c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80017b4:	4620      	mov	r0, r4
 80017b6:	f00b f8b5 	bl	800c924 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80017ba:	4606      	mov	r6, r0
 80017bc:	2800      	cmp	r0, #0
 80017be:	d1f2      	bne.n	80017a6 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80017c0:	2036      	movs	r0, #54	; 0x36
 80017c2:	f007 ff71 	bl	80096a8 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80017c6:	2d0f      	cmp	r5, #15
 80017c8:	d901      	bls.n	80017ce <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80017ca:	2601      	movs	r6, #1
 80017cc:	e7eb      	b.n	80017a6 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80017ce:	4632      	mov	r2, r6
 80017d0:	4629      	mov	r1, r5
 80017d2:	2036      	movs	r0, #54	; 0x36
 80017d4:	f007 ff2a 	bl	800962c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80017d8:	4b05      	ldr	r3, [pc, #20]	; (80017f0 <HAL_InitTick+0xa4>)
 80017da:	601d      	str	r5, [r3, #0]
 80017dc:	e7e3      	b.n	80017a6 <HAL_InitTick+0x5a>
 80017de:	bf00      	nop
 80017e0:	40023800 	.word	0x40023800
 80017e4:	431bde83 	.word	0x431bde83
 80017e8:	2000072c 	.word	0x2000072c
 80017ec:	40001000 	.word	0x40001000
 80017f0:	20000080 	.word	0x20000080

080017f4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80017f4:	4770      	bx	lr
 80017f6:	bf00      	nop

080017f8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80017f8:	e7fe      	b.n	80017f8 <HardFault_Handler>
 80017fa:	bf00      	nop

080017fc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80017fc:	e7fe      	b.n	80017fc <MemManage_Handler>
 80017fe:	bf00      	nop

08001800 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001800:	e7fe      	b.n	8001800 <BusFault_Handler>
 8001802:	bf00      	nop

08001804 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001804:	e7fe      	b.n	8001804 <UsageFault_Handler>
 8001806:	bf00      	nop

08001808 <DebugMon_Handler>:
 8001808:	4770      	bx	lr
 800180a:	bf00      	nop

0800180c <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 800180c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800180e:	20c8      	movs	r0, #200	; 0xc8
 8001810:	f007 fee8 	bl	80095e4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001814:	4804      	ldr	r0, [pc, #16]	; (8001828 <EXTI3_IRQHandler+0x1c>)
 8001816:	2200      	movs	r2, #0
 8001818:	2120      	movs	r1, #32
 800181a:	f008 f8c1 	bl	80099a0 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800181e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001822:	2008      	movs	r0, #8
 8001824:	f008 b8cc 	b.w	80099c0 <HAL_GPIO_EXTI_IRQHandler>
 8001828:	40021000 	.word	0x40021000

0800182c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800182c:	4801      	ldr	r0, [pc, #4]	; (8001834 <TIM6_DAC_IRQHandler+0x8>)
 800182e:	f00b b8bd 	b.w	800c9ac <HAL_TIM_IRQHandler>
 8001832:	bf00      	nop
 8001834:	2000072c 	.word	0x2000072c

08001838 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001838:	4801      	ldr	r0, [pc, #4]	; (8001840 <I2C3_EV_IRQHandler+0x8>)
 800183a:	f009 b821 	b.w	800a880 <HAL_I2C_EV_IRQHandler>
 800183e:	bf00      	nop
 8001840:	200001a0 	.word	0x200001a0

08001844 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001844:	4801      	ldr	r0, [pc, #4]	; (800184c <LTDC_IRQHandler+0x8>)
 8001846:	f009 bd95 	b.w	800b374 <HAL_LTDC_IRQHandler>
 800184a:	bf00      	nop
 800184c:	200001f4 	.word	0x200001f4

08001850 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001850:	2001      	movs	r0, #1
 8001852:	4770      	bx	lr

08001854 <_kill>:

int _kill(int pid, int sig)
{
 8001854:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001856:	f029 fd55 	bl	802b304 <__errno>
 800185a:	2316      	movs	r3, #22
 800185c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800185e:	f04f 30ff 	mov.w	r0, #4294967295
 8001862:	bd08      	pop	{r3, pc}

08001864 <_exit>:

void _exit (int status)
{
 8001864:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001866:	f029 fd4d 	bl	802b304 <__errno>
 800186a:	2316      	movs	r3, #22
 800186c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800186e:	e7fe      	b.n	800186e <_exit+0xa>

08001870 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001870:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001872:	1e16      	subs	r6, r2, #0
 8001874:	dd07      	ble.n	8001886 <_read+0x16>
 8001876:	460c      	mov	r4, r1
 8001878:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800187a:	f3af 8000 	nop.w
 800187e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001882:	42a5      	cmp	r5, r4
 8001884:	d1f9      	bne.n	800187a <_read+0xa>
	}

return len;
}
 8001886:	4630      	mov	r0, r6
 8001888:	bd70      	pop	{r4, r5, r6, pc}
 800188a:	bf00      	nop

0800188c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800188c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800188e:	1e16      	subs	r6, r2, #0
 8001890:	dd07      	ble.n	80018a2 <_write+0x16>
 8001892:	460c      	mov	r4, r1
 8001894:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001896:	f814 0b01 	ldrb.w	r0, [r4], #1
 800189a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800189e:	42ac      	cmp	r4, r5
 80018a0:	d1f9      	bne.n	8001896 <_write+0xa>
	}
	return len;
}
 80018a2:	4630      	mov	r0, r6
 80018a4:	bd70      	pop	{r4, r5, r6, pc}
 80018a6:	bf00      	nop

080018a8 <_close>:

int _close(int file)
{
	return -1;
}
 80018a8:	f04f 30ff 	mov.w	r0, #4294967295
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop

080018b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80018b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80018b4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80018b6:	2000      	movs	r0, #0
 80018b8:	4770      	bx	lr
 80018ba:	bf00      	nop

080018bc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80018bc:	2001      	movs	r0, #1
 80018be:	4770      	bx	lr

080018c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80018c0:	2000      	movs	r0, #0
 80018c2:	4770      	bx	lr

080018c4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80018c4:	4a0b      	ldr	r2, [pc, #44]	; (80018f4 <_sbrk+0x30>)
{
 80018c6:	b508      	push	{r3, lr}
 80018c8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80018ca:	6810      	ldr	r0, [r2, #0]
 80018cc:	b128      	cbz	r0, 80018da <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80018ce:	4403      	add	r3, r0
 80018d0:	4669      	mov	r1, sp
 80018d2:	428b      	cmp	r3, r1
 80018d4:	d807      	bhi.n	80018e6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80018d6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80018d8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80018da:	4807      	ldr	r0, [pc, #28]	; (80018f8 <_sbrk+0x34>)
 80018dc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80018de:	4403      	add	r3, r0
 80018e0:	4669      	mov	r1, sp
 80018e2:	428b      	cmp	r3, r1
 80018e4:	d9f7      	bls.n	80018d6 <_sbrk+0x12>
		errno = ENOMEM;
 80018e6:	f029 fd0d 	bl	802b304 <__errno>
 80018ea:	230c      	movs	r3, #12
 80018ec:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80018ee:	f04f 30ff 	mov.w	r0, #4294967295
}
 80018f2:	bd08      	pop	{r3, pc}
 80018f4:	20000774 	.word	0x20000774
 80018f8:	20014080 	.word	0x20014080

080018fc <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80018fc:	4770      	bx	lr
 80018fe:	bf00      	nop

08001900 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001900:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001902:	f000 fba9 	bl	8002058 <touchgfx_components_init>
  touchgfx_init();
}
 8001906:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 800190a:	f000 bb33 	b.w	8001f74 <touchgfx_init>
 800190e:	bf00      	nop

08001910 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001910:	f000 bba4 	b.w	800205c <touchgfx_taskEntry>

08001914 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001914:	4770      	bx	lr

08001916 <_ZN20STM32TouchControllerD0Ev>:
 8001916:	b510      	push	{r4, lr}
 8001918:	2104      	movs	r1, #4
 800191a:	4604      	mov	r4, r0
 800191c:	f028 fbe1 	bl	802a0e2 <_ZdlPvj>
 8001920:	4620      	mov	r0, r4
 8001922:	bd10      	pop	{r4, pc}

08001924 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001924:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001926:	4b0c      	ldr	r3, [pc, #48]	; (8001958 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001928:	4c0c      	ldr	r4, [pc, #48]	; (800195c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800192a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 800192c:	4b0c      	ldr	r3, [pc, #48]	; (8001960 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800192e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001930:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001932:	6863      	ldr	r3, [r4, #4]
 8001934:	4798      	blx	r3
 8001936:	f640 0311 	movw	r3, #2065	; 0x811
 800193a:	4298      	cmp	r0, r3
 800193c:	d10a      	bne.n	8001954 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800193e:	4d09      	ldr	r5, [pc, #36]	; (8001964 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001940:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001942:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001944:	2082      	movs	r0, #130	; 0x82
 8001946:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001948:	682b      	ldr	r3, [r5, #0]
 800194a:	2082      	movs	r0, #130	; 0x82
 800194c:	68db      	ldr	r3, [r3, #12]
 800194e:	4798      	blx	r3
 8001950:	2000      	movs	r0, #0
    }

    return ret;
}
 8001952:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001954:	2001      	movs	r0, #1
 8001956:	e7fc      	b.n	8001952 <_Z11BSP_TS_Inittt+0x2e>
 8001958:	20000778 	.word	0x20000778
 800195c:	20000050 	.word	0x20000050
 8001960:	2000077a 	.word	0x2000077a
 8001964:	2000077c 	.word	0x2000077c

08001968 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001968:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800196c:	20f0      	movs	r0, #240	; 0xf0
 800196e:	f7ff bfd9 	b.w	8001924 <_Z11BSP_TS_Inittt>
	...

08001974 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001974:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001976:	4d33      	ldr	r5, [pc, #204]	; (8001a44 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001978:	682b      	ldr	r3, [r5, #0]
{
 800197a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800197c:	691b      	ldr	r3, [r3, #16]
 800197e:	2082      	movs	r0, #130	; 0x82
 8001980:	4798      	blx	r3
 8001982:	b280      	uxth	r0, r0
 8001984:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001986:	2800      	cmp	r0, #0
 8001988:	d04a      	beq.n	8001a20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800198a:	682b      	ldr	r3, [r5, #0]
 800198c:	f10d 0206 	add.w	r2, sp, #6
 8001990:	695b      	ldr	r3, [r3, #20]
 8001992:	a901      	add	r1, sp, #4
 8001994:	2082      	movs	r0, #130	; 0x82
 8001996:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001998:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800199c:	f640 6274 	movw	r2, #3700	; 0xe74
 80019a0:	4293      	cmp	r3, r2
 80019a2:	d93f      	bls.n	8001a24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80019a4:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80019a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80019ac:	1ad2      	subs	r2, r2, r3
 80019ae:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80019b0:	2a0a      	cmp	r2, #10
 80019b2:	d93d      	bls.n	8001a30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80019b4:	230b      	movs	r3, #11
 80019b6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80019ba:	4b23      	ldr	r3, [pc, #140]	; (8001a48 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80019bc:	881b      	ldrh	r3, [r3, #0]
 80019be:	429a      	cmp	r2, r3
 80019c0:	d901      	bls.n	80019c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80019c2:	3b01      	subs	r3, #1
 80019c4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80019c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80019ca:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80019ce:	428b      	cmp	r3, r1
 80019d0:	d830      	bhi.n	8001a34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80019d2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80019d6:	330e      	adds	r3, #14
 80019d8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80019da:	210f      	movs	r1, #15
 80019dc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80019e0:	491a      	ldr	r1, [pc, #104]	; (8001a4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80019e2:	8809      	ldrh	r1, [r1, #0]
 80019e4:	428b      	cmp	r3, r1
 80019e6:	d901      	bls.n	80019ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80019e8:	3901      	subs	r1, #1
 80019ea:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80019ec:	4e18      	ldr	r6, [pc, #96]	; (8001a50 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80019ee:	4d19      	ldr	r5, [pc, #100]	; (8001a54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80019f0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80019f2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80019f4:	4283      	cmp	r3, r0
 80019f6:	b281      	uxth	r1, r0
 80019f8:	bf8c      	ite	hi
 80019fa:	1a59      	subhi	r1, r3, r1
 80019fc:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80019fe:	b2b8      	uxth	r0, r7
 8001a00:	42ba      	cmp	r2, r7
 8001a02:	bf8c      	ite	hi
 8001a04:	1a10      	subhi	r0, r2, r0
 8001a06:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001a08:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001a0a:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001a0c:	4401      	add	r1, r0
 8001a0e:	2905      	cmp	r1, #5
        {
            _x = x;
 8001a10:	bfc8      	it	gt
 8001a12:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001a14:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001a16:	bfc8      	it	gt
 8001a18:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001a1a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001a1c:	682b      	ldr	r3, [r5, #0]
 8001a1e:	80a3      	strh	r3, [r4, #4]
    }
}
 8001a20:	b003      	add	sp, #12
 8001a22:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001a24:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001a26:	bf9c      	itt	ls
 8001a28:	23b4      	movls	r3, #180	; 0xb4
 8001a2a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001a2e:	e7bb      	b.n	80019a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001a30:	2200      	movs	r2, #0
 8001a32:	e7c8      	b.n	80019c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001a34:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001a38:	3308      	adds	r3, #8
 8001a3a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001a3c:	2b0e      	cmp	r3, #14
 8001a3e:	d8cc      	bhi.n	80019da <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001a40:	2300      	movs	r3, #0
 8001a42:	e7d3      	b.n	80019ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001a44:	2000077c 	.word	0x2000077c
 8001a48:	2000077a 	.word	0x2000077a
 8001a4c:	20000778 	.word	0x20000778
 8001a50:	20000780 	.word	0x20000780
 8001a54:	20000784 	.word	0x20000784

08001a58 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001a58:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001a5a:	4668      	mov	r0, sp
{
 8001a5c:	460d      	mov	r5, r1
 8001a5e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001a60:	f7ff ff88 	bl	8001974 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001a64:	f8bd 0000 	ldrh.w	r0, [sp]
 8001a68:	b148      	cbz	r0, 8001a7e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001a6a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001a6e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001a70:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001a74:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001a76:	4b03      	ldr	r3, [pc, #12]	; (8001a84 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001a78:	223c      	movs	r2, #60	; 0x3c
 8001a7a:	601a      	str	r2, [r3, #0]
        return true;
 8001a7c:	2001      	movs	r0, #1
}
 8001a7e:	b003      	add	sp, #12
 8001a80:	bd30      	pop	{r4, r5, pc}
 8001a82:	bf00      	nop
 8001a84:	2000000c 	.word	0x2000000c

08001a88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001a88:	b110      	cbz	r0, 8001a90 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001a8a:	2802      	cmp	r0, #2
 8001a8c:	d009      	beq.n	8001aa2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001a8e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001a90:	4b07      	ldr	r3, [pc, #28]	; (8001ab0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001a92:	681a      	ldr	r2, [r3, #0]
 8001a94:	fab2 f282 	clz	r2, r2
 8001a98:	0952      	lsrs	r2, r2, #5
 8001a9a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001a9c:	4805      	ldr	r0, [pc, #20]	; (8001ab4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001a9e:	f007 bf7f 	b.w	80099a0 <HAL_GPIO_WritePin>
 8001aa2:	4b03      	ldr	r3, [pc, #12]	; (8001ab0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001aa4:	689a      	ldr	r2, [r3, #8]
 8001aa6:	fab2 f282 	clz	r2, r2
 8001aaa:	0952      	lsrs	r2, r2, #5
 8001aac:	2110      	movs	r1, #16
 8001aae:	e7f5      	b.n	8001a9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001ab0:	20000788 	.word	0x20000788
 8001ab4:	40021000 	.word	0x40021000

08001ab8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001ab8:	b110      	cbz	r0, 8001ac0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001aba:	2802      	cmp	r0, #2
 8001abc:	d009      	beq.n	8001ad2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001abe:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001ac0:	4b07      	ldr	r3, [pc, #28]	; (8001ae0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001ac2:	681a      	ldr	r2, [r3, #0]
 8001ac4:	3a00      	subs	r2, #0
 8001ac6:	bf18      	it	ne
 8001ac8:	2201      	movne	r2, #1
 8001aca:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001acc:	4805      	ldr	r0, [pc, #20]	; (8001ae4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001ace:	f007 bf67 	b.w	80099a0 <HAL_GPIO_WritePin>
 8001ad2:	4b03      	ldr	r3, [pc, #12]	; (8001ae0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001ad4:	689a      	ldr	r2, [r3, #8]
 8001ad6:	3a00      	subs	r2, #0
 8001ad8:	bf18      	it	ne
 8001ada:	2201      	movne	r2, #1
 8001adc:	2110      	movs	r1, #16
 8001ade:	e7f5      	b.n	8001acc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001ae0:	20000788 	.word	0x20000788
 8001ae4:	40021000 	.word	0x40021000

08001ae8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001ae8:	b110      	cbz	r0, 8001af0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001aea:	2802      	cmp	r0, #2
 8001aec:	d004      	beq.n	8001af8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001aee:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001af0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001af2:	4802      	ldr	r0, [pc, #8]	; (8001afc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001af4:	f007 bf58 	b.w	80099a8 <HAL_GPIO_TogglePin>
 8001af8:	2110      	movs	r1, #16
 8001afa:	e7fa      	b.n	8001af2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001afc:	40021000 	.word	0x40021000

08001b00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001b00:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001b02:	b130      	cbz	r0, 8001b12 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001b04:	2802      	cmp	r0, #2
 8001b06:	d009      	beq.n	8001b1c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001b08:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001b0a:	1e43      	subs	r3, r0, #1
 8001b0c:	4258      	negs	r0, r3
 8001b0e:	4158      	adcs	r0, r3
 8001b10:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001b12:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001b14:	4802      	ldr	r0, [pc, #8]	; (8001b20 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001b16:	f007 ff3d 	bl	8009994 <HAL_GPIO_ReadPin>
        break;
 8001b1a:	e7f6      	b.n	8001b0a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001b1c:	2110      	movs	r1, #16
 8001b1e:	e7f9      	b.n	8001b14 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001b20:	40021000 	.word	0x40021000

08001b24 <_ZN8touchgfx4GPIO4initEv>:
{
 8001b24:	b570      	push	{r4, r5, r6, lr}
 8001b26:	4d08      	ldr	r5, [pc, #32]	; (8001b48 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001b28:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001b2a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001b2c:	b2e0      	uxtb	r0, r4
 8001b2e:	f7ff ffe7 	bl	8001b00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001b32:	b118      	cbz	r0, 8001b3c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001b34:	682b      	ldr	r3, [r5, #0]
 8001b36:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001b38:	bf18      	it	ne
 8001b3a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001b3c:	3401      	adds	r4, #1
 8001b3e:	2c05      	cmp	r4, #5
 8001b40:	f105 0504 	add.w	r5, r5, #4
 8001b44:	d1f2      	bne.n	8001b2c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001b46:	bd70      	pop	{r4, r5, r6, pc}
 8001b48:	20000788 	.word	0x20000788

08001b4c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001b4c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001b4e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001b52:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001b56:	4770      	bx	lr

08001b58 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001b58:	2000      	movs	r0, #0
 8001b5a:	4770      	bx	lr

08001b5c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001b5c:	4b03      	ldr	r3, [pc, #12]	; (8001b6c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001b5e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001b60:	3900      	subs	r1, #0
 8001b62:	bf18      	it	ne
 8001b64:	2101      	movne	r1, #1
 8001b66:	7019      	strb	r1, [r3, #0]
    }
 8001b68:	4770      	bx	lr
 8001b6a:	bf00      	nop
 8001b6c:	20013443 	.word	0x20013443

08001b70 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001b70:	2000      	movs	r0, #0
 8001b72:	4770      	bx	lr

08001b74 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001b74:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001b76:	b10b      	cbz	r3, 8001b7c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001b78:	4608      	mov	r0, r1
 8001b7a:	4718      	bx	r3
        }
    }
 8001b7c:	4770      	bx	lr

08001b7e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001b7e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001b82:	4770      	bx	lr

08001b84 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001b84:	6840      	ldr	r0, [r0, #4]
 8001b86:	6803      	ldr	r3, [r0, #0]
 8001b88:	699b      	ldr	r3, [r3, #24]
 8001b8a:	4718      	bx	r3

08001b8c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001b8c:	4770      	bx	lr

08001b8e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001b8e:	4770      	bx	lr

08001b90 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001b90:	4770      	bx	lr
	...

08001b94 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001b94:	b510      	push	{r4, lr}
 8001b96:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001b98:	f000 fb4c 	bl	8002234 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001b9c:	6823      	ldr	r3, [r4, #0]
 8001b9e:	4903      	ldr	r1, [pc, #12]	; (8001bac <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001ba0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001ba4:	4620      	mov	r0, r4
}
 8001ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001baa:	4718      	bx	r3
 8001bac:	d0000000 	.word	0xd0000000

08001bb0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001bb0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001bb2:	6803      	ldr	r3, [r0, #0]
{
 8001bb4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001bb6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001bba:	4798      	blx	r3
    enableInterrupts();
 8001bbc:	6823      	ldr	r3, [r4, #0]
 8001bbe:	4620      	mov	r0, r4
 8001bc0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001bc2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001bc4:	f000 f8ec 	bl	8001da0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001bc8:	6823      	ldr	r3, [r4, #0]
 8001bca:	4620      	mov	r0, r4
 8001bcc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001bce:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001bd0:	2029      	movs	r0, #41	; 0x29
 8001bd2:	f7ff f97f 	bl	8000ed4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001bd6:	f000 f8e3 	bl	8001da0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001bda:	6823      	ldr	r3, [r4, #0]
 8001bdc:	4620      	mov	r0, r4
 8001bde:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001be0:	4798      	blx	r3
    for (;;)
 8001be2:	e7f8      	b.n	8001bd6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001be4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001be4:	b510      	push	{r4, lr}
 8001be6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001be8:	f00f ff58 	bl	8011a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001bec:	6823      	ldr	r3, [r4, #0]
 8001bee:	4620      	mov	r0, r4
 8001bf0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001bf8:	4718      	bx	r3

08001bfa <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001bfa:	f000 bb0d 	b.w	8002218 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001bfe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001bfe:	f000 bb11 	b.w	8002224 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001c02 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001c02:	f000 bb35 	b.w	8002270 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001c06 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001c06:	f000 badd 	b.w	80021c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001c0a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001c0a:	f000 bae3 	b.w	80021d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001c0e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001c0e:	f000 bb3b 	b.w	8002288 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001c12 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001c12:	f000 bae7 	b.w	80021e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001c16 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001c16:	f00f b9ad 	b.w	8010f74 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001c1a <_ZN11TouchGFXHALD0Ev>:
 8001c1a:	b510      	push	{r4, lr}
 8001c1c:	217c      	movs	r1, #124	; 0x7c
 8001c1e:	4604      	mov	r4, r0
 8001c20:	f028 fa5f 	bl	802a0e2 <_ZdlPvj>
 8001c24:	4620      	mov	r0, r4
 8001c26:	bd10      	pop	{r4, pc}

08001c28 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001c28:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001c2c:	b11b      	cbz	r3, 8001c36 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001c2e:	6840      	ldr	r0, [r0, #4]
 8001c30:	6803      	ldr	r3, [r0, #0]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4718      	bx	r3
    }
 8001c36:	4618      	mov	r0, r3
 8001c38:	4770      	bx	lr
	...

08001c3c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001c3c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001c3e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001c42:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001c46:	4b0c      	ldr	r3, [pc, #48]	; (8001c78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001c48:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001c4a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001c4c:	d009      	beq.n	8001c62 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001c4e:	b93a      	cbnz	r2, 8001c60 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c50:	4a0a      	ldr	r2, [pc, #40]	; (8001c7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001c52:	490b      	ldr	r1, [pc, #44]	; (8001c80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c54:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001c56:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001c58:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c5a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001c5c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001c5e:	701a      	strb	r2, [r3, #0]
    }
 8001c60:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001c62:	2a00      	cmp	r2, #0
 8001c64:	d0fc      	beq.n	8001c60 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c66:	4a05      	ldr	r2, [pc, #20]	; (8001c7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001c68:	4905      	ldr	r1, [pc, #20]	; (8001c80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c6a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001c6c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001c6e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001c70:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001c72:	2200      	movs	r2, #0
 8001c74:	e7f3      	b.n	8001c5e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001c76:	bf00      	nop
 8001c78:	2001343c 	.word	0x2001343c
 8001c7c:	20013438 	.word	0x20013438
 8001c80:	2001343a 	.word	0x2001343a

08001c84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001c84:	b570      	push	{r4, r5, r6, lr}
 8001c86:	460d      	mov	r5, r1
 8001c88:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001c8a:	b935      	cbnz	r5, 8001c9a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001c8c:	4b09      	ldr	r3, [pc, #36]	; (8001cb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001c8e:	4a0a      	ldr	r2, [pc, #40]	; (8001cb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001c90:	480a      	ldr	r0, [pc, #40]	; (8001cbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001c92:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001c96:	f029 f837 	bl	802ad08 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001c9a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001c9e:	4b08      	ldr	r3, [pc, #32]	; (8001cc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001ca0:	3a00      	subs	r2, #0
 8001ca2:	bf18      	it	ne
 8001ca4:	2201      	movne	r2, #1
 8001ca6:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001ca8:	6803      	ldr	r3, [r0, #0]
    }
 8001caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001cae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001cb2:	4718      	bx	r3
 8001cb4:	0802bf3c 	.word	0x0802bf3c
 8001cb8:	0802bf74 	.word	0x0802bf74
 8001cbc:	0802bfc2 	.word	0x0802bfc2
 8001cc0:	20013442 	.word	0x20013442

08001cc4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001cc4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001cc6:	4b09      	ldr	r3, [pc, #36]	; (8001cec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001cc8:	881b      	ldrh	r3, [r3, #0]
 8001cca:	428b      	cmp	r3, r1
 8001ccc:	d803      	bhi.n	8001cd6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001cce:	4b08      	ldr	r3, [pc, #32]	; (8001cf0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001cd0:	881b      	ldrh	r3, [r3, #0]
 8001cd2:	4293      	cmp	r3, r2
 8001cd4:	d905      	bls.n	8001ce2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001cd6:	4b07      	ldr	r3, [pc, #28]	; (8001cf4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001cd8:	4a07      	ldr	r2, [pc, #28]	; (8001cf8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001cda:	4808      	ldr	r0, [pc, #32]	; (8001cfc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001cdc:	219e      	movs	r1, #158	; 0x9e
 8001cde:	f029 f813 	bl	802ad08 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001ce2:	4b07      	ldr	r3, [pc, #28]	; (8001d00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001ce4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001ce6:	4b07      	ldr	r3, [pc, #28]	; (8001d04 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001ce8:	801a      	strh	r2, [r3, #0]
    }
 8001cea:	bd08      	pop	{r3, pc}
 8001cec:	20013438 	.word	0x20013438
 8001cf0:	2001343a 	.word	0x2001343a
 8001cf4:	0802c007 	.word	0x0802c007
 8001cf8:	0802c06a 	.word	0x0802c06a
 8001cfc:	0802bfc2 	.word	0x0802bfc2
 8001d00:	2001343e 	.word	0x2001343e
 8001d04:	20013440 	.word	0x20013440

08001d08 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001d08:	2101      	movs	r1, #1
{
 8001d0a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001d0c:	2200      	movs	r2, #0
 8001d0e:	4608      	mov	r0, r1
 8001d10:	f00b f84e 	bl	800cdb0 <osSemaphoreNew>
 8001d14:	4b0a      	ldr	r3, [pc, #40]	; (8001d40 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001d16:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001d18:	b928      	cbnz	r0, 8001d26 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001d1a:	4b0a      	ldr	r3, [pc, #40]	; (8001d44 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001d1c:	4a0a      	ldr	r2, [pc, #40]	; (8001d48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001d1e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001d20:	480a      	ldr	r0, [pc, #40]	; (8001d4c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001d22:	f028 fff1 	bl	802ad08 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001d26:	2200      	movs	r2, #0
 8001d28:	2104      	movs	r1, #4
 8001d2a:	2001      	movs	r0, #1
 8001d2c:	f00b f8f4 	bl	800cf18 <osMessageQueueNew>
 8001d30:	4b07      	ldr	r3, [pc, #28]	; (8001d50 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001d32:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001d34:	b918      	cbnz	r0, 8001d3e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001d36:	4b07      	ldr	r3, [pc, #28]	; (8001d54 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001d38:	4a03      	ldr	r2, [pc, #12]	; (8001d48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001d3a:	212c      	movs	r1, #44	; 0x2c
 8001d3c:	e7f0      	b.n	8001d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001d3e:	bd08      	pop	{r3, pc}
 8001d40:	2000079c 	.word	0x2000079c
 8001d44:	0802c188 	.word	0x0802c188
 8001d48:	0802c1d1 	.word	0x0802c1d1
 8001d4c:	0802c200 	.word	0x0802c200
 8001d50:	20000798 	.word	0x20000798
 8001d54:	0802c27a 	.word	0x0802c27a

08001d58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001d58:	4b02      	ldr	r3, [pc, #8]	; (8001d64 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001d5a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d5e:	6818      	ldr	r0, [r3, #0]
 8001d60:	f00b b87a 	b.w	800ce58 <osSemaphoreAcquire>
 8001d64:	2000079c 	.word	0x2000079c

08001d68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001d68:	4b01      	ldr	r3, [pc, #4]	; (8001d70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001d6a:	6818      	ldr	r0, [r3, #0]
 8001d6c:	f00b b8a8 	b.w	800cec0 <osSemaphoreRelease>
 8001d70:	2000079c 	.word	0x2000079c

08001d74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001d74:	4b02      	ldr	r3, [pc, #8]	; (8001d80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001d76:	2100      	movs	r1, #0
 8001d78:	6818      	ldr	r0, [r3, #0]
 8001d7a:	f00b b86d 	b.w	800ce58 <osSemaphoreAcquire>
 8001d7e:	bf00      	nop
 8001d80:	2000079c 	.word	0x2000079c

08001d84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001d84:	f7ff bff0 	b.w	8001d68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001d88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001d88:	4803      	ldr	r0, [pc, #12]	; (8001d98 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001d8a:	4904      	ldr	r1, [pc, #16]	; (8001d9c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001d8c:	6800      	ldr	r0, [r0, #0]
 8001d8e:	2300      	movs	r3, #0
 8001d90:	461a      	mov	r2, r3
 8001d92:	f00b b8fb 	b.w	800cf8c <osMessageQueuePut>
 8001d96:	bf00      	nop
 8001d98:	20000798 	.word	0x20000798
 8001d9c:	20000010 	.word	0x20000010

08001da0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001da0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001da2:	4c08      	ldr	r4, [pc, #32]	; (8001dc4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001da4:	2300      	movs	r3, #0
 8001da6:	461a      	mov	r2, r3
 8001da8:	a901      	add	r1, sp, #4
 8001daa:	6820      	ldr	r0, [r4, #0]
 8001dac:	f00b f924 	bl	800cff8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001db0:	6820      	ldr	r0, [r4, #0]
 8001db2:	f04f 33ff 	mov.w	r3, #4294967295
 8001db6:	2200      	movs	r2, #0
 8001db8:	a901      	add	r1, sp, #4
 8001dba:	f00b f91d 	bl	800cff8 <osMessageQueueGet>
}
 8001dbe:	b002      	add	sp, #8
 8001dc0:	bd10      	pop	{r4, pc}
 8001dc2:	bf00      	nop
 8001dc4:	20000798 	.word	0x20000798

08001dc8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8001dc8:	4770      	bx	lr

08001dca <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8001dca:	2000      	movs	r0, #0
 8001dcc:	4770      	bx	lr

08001dce <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8001dce:	4770      	bx	lr

08001dd0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8001dd0:	4770      	bx	lr

08001dd2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8001dd2:	2000      	movs	r0, #0
 8001dd4:	4770      	bx	lr

08001dd6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8001dd6:	4770      	bx	lr

08001dd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8001dd8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001dda:	4a03      	ldr	r2, [pc, #12]	; (8001de8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8001ddc:	4b03      	ldr	r3, [pc, #12]	; (8001dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8001dde:	4804      	ldr	r0, [pc, #16]	; (8001df0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8001de0:	2122      	movs	r1, #34	; 0x22
 8001de2:	f028 ff91 	bl	802ad08 <__assert_func>
 8001de6:	bf00      	nop
 8001de8:	0802c2df 	.word	0x0802c2df
 8001dec:	0802c2bc 	.word	0x0802c2bc
 8001df0:	0802c31d 	.word	0x0802c31d

08001df4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8001df4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001df6:	4a03      	ldr	r2, [pc, #12]	; (8001e04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8001df8:	4b03      	ldr	r3, [pc, #12]	; (8001e08 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8001dfa:	4804      	ldr	r0, [pc, #16]	; (8001e0c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8001dfc:	2127      	movs	r1, #39	; 0x27
 8001dfe:	f028 ff83 	bl	802ad08 <__assert_func>
 8001e02:	bf00      	nop
 8001e04:	0802c395 	.word	0x0802c395
 8001e08:	0802c2bc 	.word	0x0802c2bc
 8001e0c:	0802c31d 	.word	0x0802c31d

08001e10 <_ZN8STM32DMAD0Ev>:
 8001e10:	b510      	push	{r4, lr}
 8001e12:	2144      	movs	r1, #68	; 0x44
 8001e14:	4604      	mov	r4, r0
 8001e16:	f028 f964 	bl	802a0e2 <_ZdlPvj>
 8001e1a:	4620      	mov	r0, r4
 8001e1c:	bd10      	pop	{r4, pc}
	...

08001e20 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001e20:	b538      	push	{r3, r4, r5, lr}
 8001e22:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8001e24:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001e26:	2500      	movs	r5, #0
 8001e28:	4b06      	ldr	r3, [pc, #24]	; (8001e44 <_ZN8STM32DMAC1Ev+0x24>)
 8001e2a:	7225      	strb	r5, [r4, #8]
 8001e2c:	300c      	adds	r0, #12
 8001e2e:	6060      	str	r0, [r4, #4]
 8001e30:	7265      	strb	r5, [r4, #9]
 8001e32:	2201      	movs	r2, #1
 8001e34:	f841 3b20 	str.w	r3, [r1], #32
 8001e38:	f00f ff88 	bl	8011d4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001e3c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8001e3e:	4620      	mov	r0, r4
 8001e40:	bd38      	pop	{r3, r4, r5, pc}
 8001e42:	bf00      	nop
 8001e44:	0802c3dc 	.word	0x0802c3dc

08001e48 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001e48:	2001      	movs	r0, #1
 8001e4a:	4770      	bx	lr

08001e4c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001e4c:	2038      	movs	r0, #56	; 0x38
 8001e4e:	4770      	bx	lr

08001e50 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001e50:	2338      	movs	r3, #56	; 0x38
 8001e52:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e56:	3008      	adds	r0, #8
 8001e58:	4770      	bx	lr

08001e5a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001e5a:	2338      	movs	r3, #56	; 0x38
 8001e5c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e60:	3008      	adds	r0, #8
 8001e62:	4770      	bx	lr

08001e64 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001e64:	2001      	movs	r0, #1
 8001e66:	4770      	bx	lr

08001e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001e68:	f641 2098 	movw	r0, #6808	; 0x1a98
 8001e6c:	4770      	bx	lr

08001e6e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e6e:	f641 2398 	movw	r3, #6808	; 0x1a98
 8001e72:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e76:	3008      	adds	r0, #8
 8001e78:	4770      	bx	lr

08001e7a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e7a:	f641 2398 	movw	r3, #6808	; 0x1a98
 8001e7e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001e82:	3008      	adds	r0, #8
 8001e84:	4770      	bx	lr

08001e86 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001e86:	2001      	movs	r0, #1
 8001e88:	4770      	bx	lr

08001e8a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001e8a:	2010      	movs	r0, #16
 8001e8c:	4770      	bx	lr

08001e8e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001e92:	3008      	adds	r0, #8
 8001e94:	4770      	bx	lr

08001e96 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001e96:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001e9a:	3008      	adds	r0, #8
 8001e9c:	4770      	bx	lr

08001e9e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8001e9e:	4608      	mov	r0, r1
 8001ea0:	f002 b992 	b.w	80041c8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08001ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001ea4:	b510      	push	{r4, lr}
 8001ea6:	4b03      	ldr	r3, [pc, #12]	; (8001eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001ea8:	6003      	str	r3, [r0, #0]
 8001eaa:	4604      	mov	r4, r0
 8001eac:	f00d fcff 	bl	800f8ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001eb0:	4620      	mov	r0, r4
 8001eb2:	bd10      	pop	{r4, pc}
 8001eb4:	0802c494 	.word	0x0802c494

08001eb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001eb8:	b510      	push	{r4, lr}
 8001eba:	4604      	mov	r4, r0
 8001ebc:	f7ff fff2 	bl	8001ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001ec0:	4620      	mov	r0, r4
 8001ec2:	2140      	movs	r1, #64	; 0x40
 8001ec4:	f028 f90d 	bl	802a0e2 <_ZdlPvj>
 8001ec8:	4620      	mov	r0, r4
 8001eca:	bd10      	pop	{r4, pc}

08001ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001ecc:	b510      	push	{r4, lr}
 8001ece:	4b03      	ldr	r3, [pc, #12]	; (8001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001ed0:	6003      	str	r3, [r0, #0]
 8001ed2:	4604      	mov	r4, r0
 8001ed4:	f00d fceb 	bl	800f8ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001ed8:	4620      	mov	r0, r4
 8001eda:	bd10      	pop	{r4, pc}
 8001edc:	0802c460 	.word	0x0802c460

08001ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ee0:	b510      	push	{r4, lr}
 8001ee2:	4604      	mov	r4, r0
 8001ee4:	f7ff fff2 	bl	8001ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ee8:	4620      	mov	r0, r4
 8001eea:	f44f 51d5 	mov.w	r1, #6816	; 0x1aa0
 8001eee:	f028 f8f8 	bl	802a0e2 <_ZdlPvj>
 8001ef2:	4620      	mov	r0, r4
 8001ef4:	bd10      	pop	{r4, pc}
	...

08001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001ef8:	b510      	push	{r4, lr}
 8001efa:	4b03      	ldr	r3, [pc, #12]	; (8001f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001efc:	6003      	str	r3, [r0, #0]
 8001efe:	4604      	mov	r4, r0
 8001f00:	f00d fcd5 	bl	800f8ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001f04:	4620      	mov	r0, r4
 8001f06:	bd10      	pop	{r4, pc}
 8001f08:	0802c42c 	.word	0x0802c42c

08001f0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001f0c:	b510      	push	{r4, lr}
 8001f0e:	4604      	mov	r4, r0
 8001f10:	f7ff fff2 	bl	8001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f14:	4620      	mov	r0, r4
 8001f16:	2118      	movs	r1, #24
 8001f18:	f028 f8e3 	bl	802a0e2 <_ZdlPvj>
 8001f1c:	4620      	mov	r0, r4
 8001f1e:	bd10      	pop	{r4, pc}

08001f20 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001f20:	b510      	push	{r4, lr}
 8001f22:	4b09      	ldr	r3, [pc, #36]	; (8001f48 <_ZN12FrontendHeapD1Ev+0x28>)
 8001f24:	6003      	str	r3, [r0, #0]
 8001f26:	4604      	mov	r4, r0
 8001f28:	f500 50d6 	add.w	r0, r0, #6848	; 0x1ac0
 8001f2c:	300c      	adds	r0, #12
 8001f2e:	f7ff ffb9 	bl	8001ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001f32:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001f36:	f7ff ffc9 	bl	8001ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f3a:	f104 0014 	add.w	r0, r4, #20
 8001f3e:	f7ff ffdb 	bl	8001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f42:	4620      	mov	r0, r4
 8001f44:	bd10      	pop	{r4, pc}
 8001f46:	bf00      	nop
 8001f48:	0802c4c8 	.word	0x0802c4c8

08001f4c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001f4c:	b508      	push	{r3, lr}
 8001f4e:	4802      	ldr	r0, [pc, #8]	; (8001f58 <__tcf_0+0xc>)
 8001f50:	f7ff ffe6 	bl	8001f20 <_ZN12FrontendHeapD1Ev>
 8001f54:	bd08      	pop	{r3, pc}
 8001f56:	bf00      	nop
 8001f58:	200007a4 	.word	0x200007a4

08001f5c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001f5c:	b510      	push	{r4, lr}
 8001f5e:	4604      	mov	r4, r0
 8001f60:	f7ff ffde 	bl	8001f20 <_ZN12FrontendHeapD1Ev>
 8001f64:	4620      	mov	r0, r4
 8001f66:	f641 4170 	movw	r1, #7280	; 0x1c70
 8001f6a:	f028 f8ba 	bl	802a0e2 <_ZdlPvj>
 8001f6e:	4620      	mov	r0, r4
 8001f70:	bd10      	pop	{r4, pc}
	...

08001f74 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001f74:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001f78:	f000 fa5a 	bl	8002430 <_ZN14BitmapDatabase11getInstanceEv>
 8001f7c:	4605      	mov	r5, r0
 8001f7e:	f000 fa5b 	bl	8002438 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001f82:	2400      	movs	r4, #0
 8001f84:	4601      	mov	r1, r0
 8001f86:	4623      	mov	r3, r4
 8001f88:	4628      	mov	r0, r5
 8001f8a:	4622      	mov	r2, r4
 8001f8c:	9400      	str	r4, [sp, #0]
 8001f8e:	f017 fc2f 	bl	80197f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001f92:	4b26      	ldr	r3, [pc, #152]	; (800202c <touchgfx_init+0xb8>)
 8001f94:	4a26      	ldr	r2, [pc, #152]	; (8002030 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001f96:	4d27      	ldr	r5, [pc, #156]	; (8002034 <touchgfx_init+0xc0>)
 8001f98:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	f006 fb3c 	bl	8008618 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001fa0:	4825      	ldr	r0, [pc, #148]	; (8002038 <touchgfx_init+0xc4>)
 8001fa2:	f017 fb8d 	bl	80196c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001fa6:	682b      	ldr	r3, [r5, #0]
 8001fa8:	f3bf 8f5b 	dmb	ish
 8001fac:	07db      	lsls	r3, r3, #31
 8001fae:	d437      	bmi.n	8002020 <touchgfx_init+0xac>
 8001fb0:	4628      	mov	r0, r5
 8001fb2:	f028 f898 	bl	802a0e6 <__cxa_guard_acquire>
 8001fb6:	b398      	cbz	r0, 8002020 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001fb8:	4c20      	ldr	r4, [pc, #128]	; (800203c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001fba:	4b21      	ldr	r3, [pc, #132]	; (8002040 <touchgfx_init+0xcc>)
 8001fbc:	6023      	str	r3, [r4, #0]
 8001fbe:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001fc2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8001fc6:	f500 56d8 	add.w	r6, r0, #6912	; 0x1b00
          transitionStorage(tra),
 8001fca:	f508 57d5 	add.w	r7, r8, #6816	; 0x1aa0
        : presenterStorage(pres),
 8001fce:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001fd0:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001fd4:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001fd6:	6126      	str	r6, [r4, #16]
 8001fd8:	f00d fc6a 	bl	800f8b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001fdc:	4b19      	ldr	r3, [pc, #100]	; (8002044 <touchgfx_init+0xd0>)
 8001fde:	6163      	str	r3, [r4, #20]
 8001fe0:	4640      	mov	r0, r8
 8001fe2:	f00d fc65 	bl	800f8b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001fe6:	4b18      	ldr	r3, [pc, #96]	; (8002048 <touchgfx_init+0xd4>)
 8001fe8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001fea:	4638      	mov	r0, r7
 8001fec:	f00d fc60 	bl	800f8b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ff0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001ff4:	4a15      	ldr	r2, [pc, #84]	; (800204c <touchgfx_init+0xd8>)
 8001ff6:	f8c3 2acc 	str.w	r2, [r3, #2764]	; 0xacc
 8001ffa:	f603 300c 	addw	r0, r3, #2828	; 0xb0c
 8001ffe:	f006 ff77 	bl	8008ef0 <_ZN5ModelC1Ev>
 8002002:	4622      	mov	r2, r4
 8002004:	f1a6 0108 	sub.w	r1, r6, #8
 8002008:	4630      	mov	r0, r6
 800200a:	f006 fc81 	bl	8008910 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800200e:	4630      	mov	r0, r6
 8002010:	f002 f8da 	bl	80041c8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002014:	480e      	ldr	r0, [pc, #56]	; (8002050 <touchgfx_init+0xdc>)
 8002016:	f028 fe95 	bl	802ad44 <atexit>
 800201a:	4628      	mov	r0, r5
 800201c:	f028 f86f 	bl	802a0fe <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002020:	480c      	ldr	r0, [pc, #48]	; (8002054 <touchgfx_init+0xe0>)
}
 8002022:	b002      	add	sp, #8
 8002024:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002028:	f7ff bdb4 	b.w	8001b94 <_ZN11TouchGFXHAL10initializeEv>
 800202c:	200134a8 	.word	0x200134a8
 8002030:	200024d8 	.word	0x200024d8
 8002034:	200007a0 	.word	0x200007a0
 8002038:	20000014 	.word	0x20000014
 800203c:	200007a4 	.word	0x200007a4
 8002040:	0802c4c8 	.word	0x0802c4c8
 8002044:	0802c42c 	.word	0x0802c42c
 8002048:	0802c460 	.word	0x0802c460
 800204c:	0802c494 	.word	0x0802c494
 8002050:	08001f4d 	.word	0x08001f4d
 8002054:	2000245c 	.word	0x2000245c

08002058 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002058:	4770      	bx	lr
	...

0800205c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800205c:	4801      	ldr	r0, [pc, #4]	; (8002064 <touchgfx_taskEntry+0x8>)
 800205e:	f7ff bda7 	b.w	8001bb0 <_ZN11TouchGFXHAL9taskEntryEv>
 8002062:	bf00      	nop
 8002064:	2000245c 	.word	0x2000245c

08002068 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002068:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800206a:	4e22      	ldr	r6, [pc, #136]	; (80020f4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800206c:	4c22      	ldr	r4, [pc, #136]	; (80020f8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800206e:	4d23      	ldr	r5, [pc, #140]	; (80020fc <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002070:	4b23      	ldr	r3, [pc, #140]	; (8002100 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002072:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002074:	4630      	mov	r0, r6
 8002076:	f7ff fed3 	bl	8001e20 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800207a:	4628      	mov	r0, r5
 800207c:	f01b fe84 	bl	801dd88 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002080:	4b20      	ldr	r3, [pc, #128]	; (8002104 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002082:	4821      	ldr	r0, [pc, #132]	; (8002108 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002084:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002086:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002088:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800208c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002090:	491e      	ldr	r1, [pc, #120]	; (800210c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002092:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002094:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002098:	491d      	ldr	r1, [pc, #116]	; (8002110 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800209a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 800209c:	491d      	ldr	r1, [pc, #116]	; (8002114 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800209e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80020a2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80020a4:	21f0      	movs	r1, #240	; 0xf0
 80020a6:	8001      	strh	r1, [r0, #0]
 80020a8:	481b      	ldr	r0, [pc, #108]	; (8002118 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80020aa:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80020ac:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80020ae:	481b      	ldr	r0, [pc, #108]	; (800211c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80020b0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80020b4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80020b8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80020bc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80020c0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80020c4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80020c8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80020cc:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80020d0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80020d4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80020d8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80020da:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80020de:	8001      	strh	r1, [r0, #0]
 80020e0:	480f      	ldr	r0, [pc, #60]	; (8002120 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80020e2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80020e4:	490f      	ldr	r1, [pc, #60]	; (8002124 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80020e6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80020e8:	2201      	movs	r2, #1
 80020ea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80020ee:	4a0e      	ldr	r2, [pc, #56]	; (8002128 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80020f0:	601a      	str	r2, [r3, #0]
}
 80020f2:	bd70      	pop	{r4, r5, r6, pc}
 80020f4:	20002418 	.word	0x20002418
 80020f8:	20002414 	.word	0x20002414
 80020fc:	200024dc 	.word	0x200024dc
 8002100:	0802bf2c 	.word	0x0802bf2c
 8002104:	2000245c 	.word	0x2000245c
 8002108:	20013438 	.word	0x20013438
 800210c:	01000001 	.word	0x01000001
 8002110:	01010000 	.word	0x01010000
 8002114:	20013444 	.word	0x20013444
 8002118:	2001343e 	.word	0x2001343e
 800211c:	2001343a 	.word	0x2001343a
 8002120:	20013440 	.word	0x20013440
 8002124:	2001343c 	.word	0x2001343c
 8002128:	0802c0b8 	.word	0x0802c0b8

0800212c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800212c:	2000      	movs	r0, #0
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002130:	8081      	strh	r1, [r0, #4]
    }
 8002132:	4770      	bx	lr

08002134 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002134:	80c1      	strh	r1, [r0, #6]
    }
 8002136:	4770      	bx	lr

08002138 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002138:	8101      	strh	r1, [r0, #8]
    }
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800213c:	8141      	strh	r1, [r0, #10]
    }
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002140:	4770      	bx	lr

08002142 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002142:	4770      	bx	lr

08002144 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002144:	4770      	bx	lr

08002146 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002146:	4770      	bx	lr

08002148 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002148:	4770      	bx	lr

0800214a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800214a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800214c:	88c4      	ldrh	r4, [r0, #6]
 800214e:	6803      	ldr	r3, [r0, #0]
 8002150:	1b12      	subs	r2, r2, r4
 8002152:	8884      	ldrh	r4, [r0, #4]
 8002154:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002156:	1b09      	subs	r1, r1, r4
 8002158:	b212      	sxth	r2, r2
    }
 800215a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800215e:	b209      	sxth	r1, r1
 8002160:	4718      	bx	r3

08002162 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002162:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002166:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002168:	f04f 33ff 	mov.w	r3, #4294967295
 800216c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800216e:	6813      	ldr	r3, [r2, #0]
 8002170:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002172:	6010      	str	r0, [r2, #0]
    }
 8002174:	4770      	bx	lr

08002176 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002176:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800217a:	b11a      	cbz	r2, 8002184 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800217c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002180:	b102      	cbz	r2, 8002184 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002182:	6018      	str	r0, [r3, #0]
        }
    }
 8002184:	4770      	bx	lr

08002186 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002186:	2000      	movs	r0, #0
 8002188:	4770      	bx	lr

0800218a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800218a:	888b      	ldrh	r3, [r1, #4]
 800218c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800218e:	2001      	movs	r0, #1
 8002190:	4770      	bx	lr

08002192 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002192:	4770      	bx	lr

08002194 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002194:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002198:	4770      	bx	lr

0800219a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800219a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800219e:	4770      	bx	lr

080021a0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80021a0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021a2:	2200      	movs	r2, #0
        return rect.width;
 80021a4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80021a8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021ac:	8002      	strh	r2, [r0, #0]
 80021ae:	8042      	strh	r2, [r0, #2]
 80021b0:	8084      	strh	r4, [r0, #4]
 80021b2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80021b4:	bd10      	pop	{r4, pc}

080021b6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80021b6:	2200      	movs	r2, #0
 80021b8:	8002      	strh	r2, [r0, #0]
 80021ba:	8042      	strh	r2, [r0, #2]
 80021bc:	8082      	strh	r2, [r0, #4]
 80021be:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80021c0:	4770      	bx	lr
	...

080021c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80021c4:	4b02      	ldr	r3, [pc, #8]	; (80021d0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80021c6:	2290      	movs	r2, #144	; 0x90
 80021c8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80021cc:	4770      	bx	lr
 80021ce:	bf00      	nop
 80021d0:	e000e100 	.word	0xe000e100

080021d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80021d4:	4b02      	ldr	r3, [pc, #8]	; (80021e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80021d6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80021da:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop
 80021e0:	e000e100 	.word	0xe000e100

080021e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80021e4:	4a09      	ldr	r2, [pc, #36]	; (800220c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80021e6:	490a      	ldr	r1, [pc, #40]	; (8002210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80021e8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80021ea:	480a      	ldr	r0, [pc, #40]	; (8002214 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80021ec:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80021f0:	3b01      	subs	r3, #1
 80021f2:	b29b      	uxth	r3, r3
 80021f4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80021f6:	6911      	ldr	r1, [r2, #16]
 80021f8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80021fc:	3901      	subs	r1, #1
 80021fe:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002200:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002202:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002204:	f043 0301 	orr.w	r3, r3, #1
 8002208:	6353      	str	r3, [r2, #52]	; 0x34
}
 800220a:	4770      	bx	lr
 800220c:	40016800 	.word	0x40016800
 8002210:	20002562 	.word	0x20002562
 8002214:	20002560 	.word	0x20002560

08002218 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002218:	4b01      	ldr	r3, [pc, #4]	; (8002220 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800221a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800221e:	4770      	bx	lr
 8002220:	40016800 	.word	0x40016800

08002224 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002224:	4b02      	ldr	r3, [pc, #8]	; (8002230 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002226:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002228:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800222c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800222e:	4770      	bx	lr
 8002230:	40016800 	.word	0x40016800

08002234 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002234:	b570      	push	{r4, r5, r6, lr}
 8002236:	4604      	mov	r4, r0
    HAL::initialize();
 8002238:	f00e fef1 	bl	801101e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800223c:	6823      	ldr	r3, [r4, #0]
 800223e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002240:	f013 fe9a 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 8002244:	4601      	mov	r1, r0
 8002246:	4620      	mov	r0, r4
 8002248:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800224a:	6823      	ldr	r3, [r4, #0]
 800224c:	4a05      	ldr	r2, [pc, #20]	; (8002264 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800224e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002252:	4620      	mov	r0, r4
 8002254:	46ac      	mov	ip, r5
 8002256:	2300      	movs	r3, #0
}
 8002258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800225c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002260:	4760      	bx	ip
 8002262:	bf00      	nop
 8002264:	d004b000 	.word	0xd004b000

08002268 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002268:	f00e bec0 	b.w	8010fec <_ZN8touchgfx3HAL10beginFrameEv>

0800226c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800226c:	f00e beca 	b.w	8011004 <_ZN8touchgfx3HAL8endFrameEv>

08002270 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002270:	f00e be86 	b.w	8010f80 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002274 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002274:	f00e bfe7 	b.w	8011246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002278:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800227c:	b112      	cbz	r2, 8002284 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	695b      	ldr	r3, [r3, #20]
 8002282:	4718      	bx	r3
    }
 8002284:	4770      	bx	lr
	...

08002288 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002288:	4b04      	ldr	r3, [pc, #16]	; (800229c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800228a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800228e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002292:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002296:	f3bf 8f6f 	isb	sy
}
 800229a:	4770      	bx	lr
 800229c:	e000e100 	.word	0xe000e100

080022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80022a0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80022a2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80022a4:	4e12      	ldr	r6, [pc, #72]	; (80022f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80022a6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80022a8:	4b12      	ldr	r3, [pc, #72]	; (80022f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80022aa:	6003      	str	r3, [r0, #0]
 80022ac:	6833      	ldr	r3, [r6, #0]
 80022ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80022b2:	4605      	mov	r5, r0
 80022b4:	b10a      	cbz	r2, 80022ba <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80022b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80022b8:	b900      	cbnz	r0, 80022bc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80022ba:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80022bc:	6803      	ldr	r3, [r0, #0]
 80022be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022c0:	4798      	blx	r3
        return auxiliaryLCD;
 80022c2:	6833      	ldr	r3, [r6, #0]
 80022c4:	fab0 f480 	clz	r4, r0
 80022c8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80022ca:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80022cc:	b130      	cbz	r0, 80022dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80022ce:	6803      	ldr	r3, [r0, #0]
 80022d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022d2:	4798      	blx	r3
 80022d4:	2800      	cmp	r0, #0
 80022d6:	bf08      	it	eq
 80022d8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80022dc:	b92c      	cbnz	r4, 80022ea <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80022de:	4b06      	ldr	r3, [pc, #24]	; (80022f8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80022e0:	4a06      	ldr	r2, [pc, #24]	; (80022fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80022e2:	4807      	ldr	r0, [pc, #28]	; (8002300 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80022e4:	212c      	movs	r1, #44	; 0x2c
 80022e6:	f028 fd0f 	bl	802ad08 <__assert_func>
    }
 80022ea:	4628      	mov	r0, r5
 80022ec:	bd70      	pop	{r4, r5, r6, pc}
 80022ee:	bf00      	nop
 80022f0:	20013444 	.word	0x20013444
 80022f4:	0802c5d8 	.word	0x0802c5d8
 80022f8:	0802c4d4 	.word	0x0802c4d4
 80022fc:	0802c532 	.word	0x0802c532
 8002300:	0802c56b 	.word	0x0802c56b

08002304 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002304:	4770      	bx	lr
	...

08002308 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002308:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800230c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800230e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002312:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002316:	d105      	bne.n	8002324 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002318:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800231c:	4281      	cmp	r1, r0
 800231e:	d8fb      	bhi.n	8002318 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002324:	4f17      	ldr	r7, [pc, #92]	; (8002384 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002326:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800232a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800232e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002332:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002336:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002338:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800233a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800233c:	b2db      	uxtb	r3, r3
 800233e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002340:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002344:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002348:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800234c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002350:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002354:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002358:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800235c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002360:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002362:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002366:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800236a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800236e:	fbbe fef5 	udiv	lr, lr, r5
 8002372:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002376:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800237a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800237e:	4281      	cmp	r1, r0
 8002380:	d8de      	bhi.n	8002340 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002382:	e7cd      	b.n	8002320 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002384:	fffff800 	.word	0xfffff800

08002388 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002388:	b510      	push	{r4, lr}
        return instance;
 800238a:	4c14      	ldr	r4, [pc, #80]	; (80023dc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800238c:	6823      	ldr	r3, [r4, #0]
 800238e:	b323      	cbz	r3, 80023da <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002390:	4b13      	ldr	r3, [pc, #76]	; (80023e0 <HAL_LTDC_LineEventCallback+0x58>)
 8002392:	4a14      	ldr	r2, [pc, #80]	; (80023e4 <HAL_LTDC_LineEventCallback+0x5c>)
 8002394:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002396:	8811      	ldrh	r1, [r2, #0]
 8002398:	428b      	cmp	r3, r1
 800239a:	d113      	bne.n	80023c4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800239c:	4b12      	ldr	r3, [pc, #72]	; (80023e8 <HAL_LTDC_LineEventCallback+0x60>)
 800239e:	8819      	ldrh	r1, [r3, #0]
 80023a0:	f009 f91a 	bl	800b5d8 <HAL_LTDC_ProgramLineEvent>
 80023a4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80023a6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80023aa:	3301      	adds	r3, #1
 80023ac:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80023b0:	f7ff fcea 	bl	8001d88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80023b4:	6820      	ldr	r0, [r4, #0]
 80023b6:	f00f fb71 	bl	8011a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80023ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80023be:	2000      	movs	r0, #0
 80023c0:	f7ff bb62 	b.w	8001a88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80023c4:	f009 f908 	bl	800b5d8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80023c8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80023ca:	6803      	ldr	r3, [r0, #0]
 80023cc:	6a1b      	ldr	r3, [r3, #32]
 80023ce:	4798      	blx	r3
    }
 80023d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80023d4:	2000      	movs	r0, #0
 80023d6:	f7ff bb6f 	b.w	8001ab8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80023da:	bd10      	pop	{r4, pc}
 80023dc:	20013444 	.word	0x20013444
 80023e0:	40016800 	.word	0x40016800
 80023e4:	20002562 	.word	0x20002562
 80023e8:	20002560 	.word	0x20002560

080023ec <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80023ec:	4770      	bx	lr

080023ee <_ZN23ApplicationFontProviderD0Ev>:
 80023ee:	b510      	push	{r4, lr}
 80023f0:	2104      	movs	r1, #4
 80023f2:	4604      	mov	r4, r0
 80023f4:	f027 fe75 	bl	802a0e2 <_ZdlPvj>
 80023f8:	4620      	mov	r0, r4
 80023fa:	bd10      	pop	{r4, pc}

080023fc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80023fc:	b508      	push	{r3, lr}
    switch (typography)
 80023fe:	2903      	cmp	r1, #3
 8002400:	d813      	bhi.n	800242a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002402:	e8df f001 	tbb	[pc, r1]
 8002406:	0602      	.short	0x0602
 8002408:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800240a:	f006 f951 	bl	80086b0 <_ZN17TypedTextDatabase8getFontsEv>
 800240e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002410:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002412:	f006 f94d 	bl	80086b0 <_ZN17TypedTextDatabase8getFontsEv>
 8002416:	6840      	ldr	r0, [r0, #4]
 8002418:	e7fa      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800241a:	f006 f949 	bl	80086b0 <_ZN17TypedTextDatabase8getFontsEv>
 800241e:	6880      	ldr	r0, [r0, #8]
 8002420:	e7f6      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002422:	f006 f945 	bl	80086b0 <_ZN17TypedTextDatabase8getFontsEv>
 8002426:	68c0      	ldr	r0, [r0, #12]
 8002428:	e7f2      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800242a:	2000      	movs	r0, #0
 800242c:	e7f0      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002430 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002430:	4800      	ldr	r0, [pc, #0]	; (8002434 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002432:	4770      	bx	lr
 8002434:	0802c604 	.word	0x0802c604

08002438 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002438:	200e      	movs	r0, #14
 800243a:	4770      	bx	lr

0800243c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800243c:	b513      	push	{r0, r1, r4, lr}
 800243e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002440:	b151      	cbz	r1, 8002458 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002442:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002444:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002446:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800244a:	aa01      	add	r2, sp, #4
 800244c:	689c      	ldr	r4, [r3, #8]
 800244e:	f10d 0303 	add.w	r3, sp, #3
 8002452:	47a0      	blx	r4
        return glyph;
    }
 8002454:	b002      	add	sp, #8
 8002456:	bd10      	pop	{r4, pc}
            return 0;
 8002458:	4608      	mov	r0, r1
 800245a:	e7fb      	b.n	8002454 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800245c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800245c:	89c0      	ldrh	r0, [r0, #14]
 800245e:	4770      	bx	lr

08002460 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002460:	8a00      	ldrh	r0, [r0, #16]
 8002462:	4770      	bx	lr

08002464 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002464:	88c0      	ldrh	r0, [r0, #6]
 8002466:	4770      	bx	lr

08002468 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002468:	8880      	ldrh	r0, [r0, #4]
 800246a:	4770      	bx	lr

0800246c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800246c:	7a80      	ldrb	r0, [r0, #10]
    }
 800246e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002472:	4770      	bx	lr

08002474 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002474:	7a80      	ldrb	r0, [r0, #10]
    }
 8002476:	09c0      	lsrs	r0, r0, #7
 8002478:	4770      	bx	lr

0800247a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800247c:	4770      	bx	lr

0800247e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800247e:	4770      	bx	lr

08002480 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002480:	4770      	bx	lr

08002482 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002482:	4770      	bx	lr

08002484 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002486:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002488:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800248a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800248c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800248e:	466d      	mov	r5, sp
 8002490:	4601      	mov	r1, r0
 8002492:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002496:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002498:	4628      	mov	r0, r5
 800249a:	4798      	blx	r3
 800249c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024a0:	343c      	adds	r4, #60	; 0x3c
 80024a2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024a6:	b005      	add	sp, #20
 80024a8:	bd30      	pop	{r4, r5, pc}

080024aa <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80024aa:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80024ac:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80024ae:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80024b0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80024b2:	466d      	mov	r5, sp
 80024b4:	4601      	mov	r1, r0
 80024b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80024ba:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024bc:	4628      	mov	r0, r5
 80024be:	4798      	blx	r3
 80024c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024c4:	343c      	adds	r4, #60	; 0x3c
 80024c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024ca:	b005      	add	sp, #20
 80024cc:	bd30      	pop	{r4, r5, pc}

080024ce <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80024ce:	2200      	movs	r2, #0
 80024d0:	8002      	strh	r2, [r0, #0]
 80024d2:	8042      	strh	r2, [r0, #2]
 80024d4:	8082      	strh	r2, [r0, #4]
 80024d6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024d8:	4770      	bx	lr

080024da <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024da:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80024de:	4770      	bx	lr

080024e0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80024e2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e4:	4604      	mov	r4, r0
        setX(x);
 80024e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e8:	4615      	mov	r5, r2
        setX(x);
 80024ea:	4798      	blx	r3
        setBaselineY(baselineY);
 80024ec:	6823      	ldr	r3, [r4, #0]
 80024ee:	4629      	mov	r1, r5
 80024f0:	4620      	mov	r0, r4
 80024f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80024f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80024f8:	4718      	bx	r3

080024fa <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80024fa:	2000      	movs	r0, #0
 80024fc:	4770      	bx	lr

080024fe <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80024fe:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002500:	4770      	bx	lr

08002502 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002502:	4770      	bx	lr

08002504 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002504:	4770      	bx	lr

08002506 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002506:	4770      	bx	lr

08002508 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002508:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800250a:	68c2      	ldr	r2, [r0, #12]
 800250c:	6844      	ldr	r4, [r0, #4]
 800250e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002510:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002512:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002516:	07d2      	lsls	r2, r2, #31
 8002518:	bf48      	it	mi
 800251a:	5962      	ldrmi	r2, [r4, r5]
 800251c:	689b      	ldr	r3, [r3, #8]
    }
 800251e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002520:	bf48      	it	mi
 8002522:	58d3      	ldrmi	r3, [r2, r3]
 8002524:	4718      	bx	r3

08002526 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002526:	6843      	ldr	r3, [r0, #4]
 8002528:	b12b      	cbz	r3, 8002536 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800252a:	6883      	ldr	r3, [r0, #8]
 800252c:	b92b      	cbnz	r3, 800253a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800252e:	68c0      	ldr	r0, [r0, #12]
 8002530:	f000 0001 	and.w	r0, r0, #1
 8002534:	4770      	bx	lr
 8002536:	4618      	mov	r0, r3
 8002538:	4770      	bx	lr
 800253a:	2001      	movs	r0, #1
    }
 800253c:	4770      	bx	lr

0800253e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800253e:	b510      	push	{r4, lr}
    }
 8002540:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002542:	4604      	mov	r4, r0
    }
 8002544:	f027 fdcd 	bl	802a0e2 <_ZdlPvj>
 8002548:	4620      	mov	r0, r4
 800254a:	bd10      	pop	{r4, pc}

0800254c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800254c:	b510      	push	{r4, lr}
 800254e:	214c      	movs	r1, #76	; 0x4c
 8002550:	4604      	mov	r4, r0
 8002552:	f027 fdc6 	bl	802a0e2 <_ZdlPvj>
 8002556:	4620      	mov	r0, r4
 8002558:	bd10      	pop	{r4, pc}

0800255a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800255a:	b510      	push	{r4, lr}
 800255c:	2110      	movs	r1, #16
 800255e:	4604      	mov	r4, r0
 8002560:	f027 fdbf 	bl	802a0e2 <_ZdlPvj>
 8002564:	4620      	mov	r0, r4
 8002566:	bd10      	pop	{r4, pc}

08002568 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002568:	b510      	push	{r4, lr}
 800256a:	4b03      	ldr	r3, [pc, #12]	; (8002578 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 800256c:	6003      	str	r3, [r0, #0]
 800256e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002570:	f012 f800 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002574:	4620      	mov	r0, r4
 8002576:	bd10      	pop	{r4, pc}
 8002578:	0802c984 	.word	0x0802c984

0800257c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800257c:	b507      	push	{r0, r1, r2, lr}
 800257e:	4b07      	ldr	r3, [pc, #28]	; (800259c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002580:	6003      	str	r3, [r0, #0]
 8002582:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002584:	f011 fff6 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002588:	9801      	ldr	r0, [sp, #4]
 800258a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800258e:	f027 fda8 	bl	802a0e2 <_ZdlPvj>
 8002592:	9801      	ldr	r0, [sp, #4]
 8002594:	b003      	add	sp, #12
 8002596:	f85d fb04 	ldr.w	pc, [sp], #4
 800259a:	bf00      	nop
 800259c:	0802c984 	.word	0x0802c984

080025a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80025a0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80025a2:	f7ff fe69 	bl	8002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80025a6:	bd08      	pop	{r3, pc}

080025a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025a8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025aa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025ac:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025ae:	4b12      	ldr	r3, [pc, #72]	; (80025f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80025b0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025b2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025b4:	b28d      	uxth	r5, r1
 80025b6:	b92b      	cbnz	r3, 80025c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80025b8:	4b10      	ldr	r3, [pc, #64]	; (80025fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80025ba:	4a11      	ldr	r2, [pc, #68]	; (8002600 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025bc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025be:	4811      	ldr	r0, [pc, #68]	; (8002604 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80025c0:	f028 fba2 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80025c4:	4910      	ldr	r1, [pc, #64]	; (8002608 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80025c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025c8:	8809      	ldrh	r1, [r1, #0]
 80025ca:	4291      	cmp	r1, r2
 80025cc:	d803      	bhi.n	80025d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80025ce:	4b0f      	ldr	r3, [pc, #60]	; (800260c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80025d0:	4a0b      	ldr	r2, [pc, #44]	; (8002600 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025d2:	216d      	movs	r1, #109	; 0x6d
 80025d4:	e7f3      	b.n	80025be <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80025d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80025da:	4b0d      	ldr	r3, [pc, #52]	; (8002610 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025e6:	4798      	blx	r3
 80025e8:	1a28      	subs	r0, r5, r0
 80025ea:	b201      	sxth	r1, r0
 80025ec:	4633      	mov	r3, r6
 80025ee:	4620      	mov	r0, r4
    }
 80025f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025f4:	4718      	bx	r3
 80025f6:	bf00      	nop
 80025f8:	2001349c 	.word	0x2001349c
 80025fc:	0802c71c 	.word	0x0802c71c
 8002600:	0802c75e 	.word	0x0802c75e
 8002604:	0802c799 	.word	0x0802c799
 8002608:	200134a0 	.word	0x200134a0
 800260c:	0802c7e0 	.word	0x0802c7e0
 8002610:	200134a4 	.word	0x200134a4

08002614 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002614:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002616:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800261a:	4299      	cmp	r1, r3
{
 800261c:	4604      	mov	r4, r0
 800261e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002620:	d103      	bne.n	800262a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002622:	f013 fca9 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002626:	f001 fddf 	bl	80041e8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800262a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800262e:	429d      	cmp	r5, r3
 8002630:	d103      	bne.n	800263a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002632:	f013 fca1 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002636:	f001 fe97 	bl	8004368 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800263a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800263e:	42a5      	cmp	r5, r4
 8002640:	d105      	bne.n	800264e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002642:	f013 fc99 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002646:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800264a:	f001 be9d 	b.w	8004388 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800264e:	bd38      	pop	{r3, r4, r5, pc}

08002650 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002650:	2200      	movs	r2, #0
 8002652:	f04f 31ff 	mov.w	r1, #4294967295
 8002656:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800265a:	6082      	str	r2, [r0, #8]
    }
 800265c:	4770      	bx	lr

0800265e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800265e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002660:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002662:	4604      	mov	r4, r0
        setX(x);
 8002664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002666:	4615      	mov	r5, r2
        setX(x);
 8002668:	4798      	blx	r3
        setY(y);
 800266a:	6823      	ldr	r3, [r4, #0]
 800266c:	4629      	mov	r1, r5
 800266e:	4620      	mov	r0, r4
 8002670:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002672:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002676:	4718      	bx	r3

08002678 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002678:	b570      	push	{r4, r5, r6, lr}
 800267a:	4604      	mov	r4, r0
 800267c:	461d      	mov	r5, r3
 800267e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002682:	f7ff ffec 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002686:	6823      	ldr	r3, [r4, #0]
 8002688:	4629      	mov	r1, r5
 800268a:	4620      	mov	r0, r4
 800268c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800268e:	4798      	blx	r3
        setHeight(height);
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	4631      	mov	r1, r6
 8002694:	4620      	mov	r0, r4
 8002696:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800269c:	4718      	bx	r3
	...

080026a0 <_ZN8touchgfx6WidgetC1Ev>:
 80026a0:	2200      	movs	r2, #0
 80026a2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026a6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80026aa:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80026ae:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80026b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026b6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80026b8:	4a01      	ldr	r2, [pc, #4]	; (80026c0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80026ba:	6002      	str	r2, [r0, #0]
 80026bc:	4770      	bx	lr
 80026be:	bf00      	nop
 80026c0:	0802c864 	.word	0x0802c864

080026c4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80026c4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026c6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80026c8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026ca:	2100      	movs	r1, #0
 80026cc:	f028 fd21 	bl	802b112 <memset>
 80026d0:	4620      	mov	r0, r4
 80026d2:	f7ff ffe5 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80026d6:	4b0a      	ldr	r3, [pc, #40]	; (8002700 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80026d8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80026da:	4b0a      	ldr	r3, [pc, #40]	; (8002704 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80026dc:	62a3      	str	r3, [r4, #40]	; 0x28
 80026de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026e2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80026e4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80026e8:	2300      	movs	r3, #0
 80026ea:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026ee:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80026f2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026f6:	8723      	strh	r3, [r4, #56]	; 0x38
 80026f8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80026fa:	4620      	mov	r0, r4
 80026fc:	bd10      	pop	{r4, pc}
 80026fe:	bf00      	nop
 8002700:	0802f5b0 	.word	0x0802f5b0
 8002704:	0802c8cc 	.word	0x0802c8cc

08002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002708:	4b1a      	ldr	r3, [pc, #104]	; (8002774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800270a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800270c:	881b      	ldrh	r3, [r3, #0]
 800270e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002710:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002712:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002714:	d92b      	bls.n	800276e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002716:	4b18      	ldr	r3, [pc, #96]	; (8002778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	b92b      	cbnz	r3, 8002728 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800271c:	4b17      	ldr	r3, [pc, #92]	; (800277c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800271e:	4a18      	ldr	r2, [pc, #96]	; (8002780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002720:	4818      	ldr	r0, [pc, #96]	; (8002784 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002722:	216c      	movs	r1, #108	; 0x6c
 8002724:	f028 faf0 	bl	802ad08 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002728:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800272c:	4b16      	ldr	r3, [pc, #88]	; (8002788 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002734:	4b15      	ldr	r3, [pc, #84]	; (800278c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002736:	6818      	ldr	r0, [r3, #0]
 8002738:	f005 ffaa 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800273c:	682b      	ldr	r3, [r5, #0]
 800273e:	9001      	str	r0, [sp, #4]
 8002740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002742:	4628      	mov	r0, r5
 8002744:	4798      	blx	r3
 8002746:	682b      	ldr	r3, [r5, #0]
 8002748:	9901      	ldr	r1, [sp, #4]
 800274a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800274c:	4604      	mov	r4, r0
 800274e:	4628      	mov	r0, r5
 8002750:	4798      	blx	r3
 8002752:	682b      	ldr	r3, [r5, #0]
 8002754:	9901      	ldr	r1, [sp, #4]
 8002756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002758:	fb14 f400 	smulbb	r4, r4, r0
 800275c:	4628      	mov	r0, r5
 800275e:	4798      	blx	r3
 8002760:	b2a4      	uxth	r4, r4
 8002762:	1823      	adds	r3, r4, r0
 8002764:	b21b      	sxth	r3, r3
 8002766:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800276a:	b002      	add	sp, #8
 800276c:	bd70      	pop	{r4, r5, r6, pc}
 800276e:	2300      	movs	r3, #0
 8002770:	e7f9      	b.n	8002766 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002772:	bf00      	nop
 8002774:	200134a0 	.word	0x200134a0
 8002778:	2001349c 	.word	0x2001349c
 800277c:	0802c71c 	.word	0x0802c71c
 8002780:	0802c75e 	.word	0x0802c75e
 8002784:	0802c799 	.word	0x0802c799
 8002788:	200134a4 	.word	0x200134a4
 800278c:	200134a8 	.word	0x200134a8

08002790 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002794:	ed2d 8b06 	vpush	{d8-d10}
 8002798:	4604      	mov	r4, r0
 800279a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800279c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800279e:	2500      	movs	r5, #0
 80027a0:	f015 f86a 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 80027a4:	4b66      	ldr	r3, [pc, #408]	; (8002940 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80027a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80027a8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80027ac:	2226      	movs	r2, #38	; 0x26
 80027ae:	4629      	mov	r1, r5
 80027b0:	4658      	mov	r0, fp
 80027b2:	f028 fcae 	bl	802b112 <memset>
 80027b6:	4658      	mov	r0, fp
 80027b8:	f7ff ff72 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80027bc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80027c0:	26ff      	movs	r6, #255	; 0xff
 80027c2:	4b60      	ldr	r3, [pc, #384]	; (8002944 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80027c4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80027c6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80027c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027cc:	4629      	mov	r1, r5
 80027ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80027d2:	4650      	mov	r0, sl
        : color(col)
 80027d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80027d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80027da:	f028 fc9a 	bl	802b112 <memset>
 80027de:	4650      	mov	r0, sl
 80027e0:	f7ff ff5e 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80027e4:	4b58      	ldr	r3, [pc, #352]	; (8002948 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80027e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80027e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80027ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80027f0:	a90a      	add	r1, sp, #40	; 0x28
 80027f2:	4650      	mov	r0, sl
 80027f4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80027f8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80027fc:	f010 feb3 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002800:	4648      	mov	r0, r9
 8002802:	f7ff ff5f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002806:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800280a:	4b50      	ldr	r3, [pc, #320]	; (800294c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800280c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002810:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002814:	4638      	mov	r0, r7
 8002816:	f00f fd6f 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 800281a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800281e:	4618      	mov	r0, r3
 8002820:	9303      	str	r3, [sp, #12]
 8002822:	f7ff fd3d 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002826:	4b4a      	ldr	r3, [pc, #296]	; (8002950 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002828:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800282c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002830:	3324      	adds	r3, #36	; 0x24
 8002832:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002836:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800283a:	4640      	mov	r0, r8
 800283c:	f7ff ff42 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002840:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002844:	4618      	mov	r0, r3
 8002846:	ee08 3a10 	vmov	s16, r3
 800284a:	f7ff ff3b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800284e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002852:	4618      	mov	r0, r3
 8002854:	ee08 3a90 	vmov	s17, r3
 8002858:	f7ff ff34 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800285c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002860:	4618      	mov	r0, r3
 8002862:	ee09 3a10 	vmov	s18, r3
 8002866:	f010 ffbf 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800286a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800286e:	4618      	mov	r0, r3
 8002870:	ee09 3a90 	vmov	s19, r3
 8002874:	f010 ffb8 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002878:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800287c:	4618      	mov	r0, r3
 800287e:	ee0a 3a10 	vmov	s20, r3
 8002882:	f010 ffb1 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002886:	4a33      	ldr	r2, [pc, #204]	; (8002954 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002888:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800288c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002890:	4a31      	ldr	r2, [pc, #196]	; (8002958 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002892:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002896:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800289a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800289e:	f011 fe5f 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80028a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80028a6:	462a      	mov	r2, r5
 80028a8:	4658      	mov	r0, fp
 80028aa:	9300      	str	r3, [sp, #0]
 80028ac:	4629      	mov	r1, r5
 80028ae:	23f0      	movs	r3, #240	; 0xf0
 80028b0:	f7ff fee2 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80028b4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80028b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80028ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80028bc:	4659      	mov	r1, fp
 80028be:	4630      	mov	r0, r6
 80028c0:	f00e f8c1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80028c4:	462a      	mov	r2, r5
 80028c6:	4650      	mov	r0, sl
 80028c8:	4629      	mov	r1, r5
 80028ca:	f7ff fec8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80028ce:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80028d0:	4650      	mov	r0, sl
 80028d2:	a90a      	add	r1, sp, #40	; 0x28
 80028d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80028d8:	f010 fe45 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80028dc:	4651      	mov	r1, sl
 80028de:	4630      	mov	r0, r6
 80028e0:	f00e f8b1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80028e4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80028e8:	2159      	movs	r1, #89	; 0x59
 80028ea:	4648      	mov	r0, r9
 80028ec:	f7ff feb7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80028f0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80028f4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80028f8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80028fc:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002900:	4650      	mov	r0, sl
 8002902:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002906:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800290a:	4649      	mov	r1, r9
 800290c:	4798      	blx	r3
 800290e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002912:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800291a:	4b10      	ldr	r3, [pc, #64]	; (800295c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800291c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800291e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002922:	b92b      	cbnz	r3, 8002930 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002924:	4b0e      	ldr	r3, [pc, #56]	; (8002960 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002926:	4a0f      	ldr	r2, [pc, #60]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002928:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800292a:	480f      	ldr	r0, [pc, #60]	; (8002968 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800292c:	f028 f9ec 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002930:	4b0e      	ldr	r3, [pc, #56]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002932:	881b      	ldrh	r3, [r3, #0]
 8002934:	2b22      	cmp	r3, #34	; 0x22
 8002936:	d81d      	bhi.n	8002974 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002938:	4b0d      	ldr	r3, [pc, #52]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800293a:	4a0a      	ldr	r2, [pc, #40]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800293c:	2161      	movs	r1, #97	; 0x61
 800293e:	e7f4      	b.n	800292a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002940:	0802c984 	.word	0x0802c984
 8002944:	0802f640 	.word	0x0802f640
 8002948:	0802f808 	.word	0x0802f808
 800294c:	0802c8dc 	.word	0x0802c8dc
 8002950:	0802f374 	.word	0x0802f374
 8002954:	0802c96c 	.word	0x0802c96c
 8002958:	08002615 	.word	0x08002615
 800295c:	2001349c 	.word	0x2001349c
 8002960:	0802c71c 	.word	0x0802c71c
 8002964:	0802c81e 	.word	0x0802c81e
 8002968:	0802c799 	.word	0x0802c799
 800296c:	200134a0 	.word	0x200134a0
 8002970:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 8002974:	4b93      	ldr	r3, [pc, #588]	; (8002bc4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002976:	2122      	movs	r1, #34	; 0x22
 8002978:	6818      	ldr	r0, [r3, #0]
 800297a:	f005 fe89 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800297e:	4a92      	ldr	r2, [pc, #584]	; (8002bc8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002980:	4603      	mov	r3, r0
 8002982:	2104      	movs	r1, #4
 8002984:	4650      	mov	r0, sl
 8002986:	f016 fca5 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800298a:	4648      	mov	r0, r9
        wc1 = value;
 800298c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002990:	f010 f9ee 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002994:	4b8d      	ldr	r3, [pc, #564]	; (8002bcc <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002996:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002998:	a90a      	add	r1, sp, #40	; 0x28
 800299a:	2323      	movs	r3, #35	; 0x23
 800299c:	4648      	mov	r0, r9
 800299e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80029a2:	f010 fa05 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029a6:	4649      	mov	r1, r9
 80029a8:	4630      	mov	r0, r6
 80029aa:	f00e f84c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80029ae:	230a      	movs	r3, #10
 80029b0:	9300      	str	r3, [sp, #0]
 80029b2:	2232      	movs	r2, #50	; 0x32
 80029b4:	23f0      	movs	r3, #240	; 0xf0
 80029b6:	4629      	mov	r1, r5
 80029b8:	4638      	mov	r0, r7
 80029ba:	f7ff fe5d 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80029be:	9b03      	ldr	r3, [sp, #12]
 80029c0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029c4:	22a0      	movs	r2, #160	; 0xa0
 80029c6:	4611      	mov	r1, r2
 80029c8:	4638      	mov	r0, r7
 80029ca:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80029ce:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80029d2:	f00f fda7 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029d6:	22a0      	movs	r2, #160	; 0xa0
 80029d8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80029dc:	4638      	mov	r0, r7
 80029de:	f00f fdac 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80029e2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80029e6:	2b20      	cmp	r3, #32
 80029e8:	d005      	beq.n	80029f6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80029ea:	2320      	movs	r3, #32
 80029ec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80029f0:	4638      	mov	r0, r7
 80029f2:	f00f fca1 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80029f6:	4638      	mov	r0, r7
 80029f8:	2101      	movs	r1, #1
 80029fa:	f00f fda9 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80029fe:	4639      	mov	r1, r7
 8002a00:	4630      	mov	r0, r6
 8002a02:	ad04      	add	r5, sp, #16
        color = newColor;
 8002a04:	f04f 37ff 	mov.w	r7, #4294967295
 8002a08:	f00e f81d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002a0c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002a10:	223c      	movs	r2, #60	; 0x3c
 8002a12:	4640      	mov	r0, r8
 8002a14:	2146      	movs	r1, #70	; 0x46
 8002a16:	f7ff fe22 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002a1a:	4641      	mov	r1, r8
 8002a1c:	4628      	mov	r0, r5
        color = newColor;
 8002a1e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002a22:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002a26:	f00f ff29 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a2e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a36:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002bcc <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002a3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a3e:	231b      	movs	r3, #27
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002a40:	a90a      	add	r1, sp, #40	; 0x28
 8002a42:	4640      	mov	r0, r8
 8002a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a48:	f010 f9b2 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a4c:	4641      	mov	r1, r8
 8002a4e:	4630      	mov	r0, r6
 8002a50:	f00d fff9 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002a54:	ee18 0a10 	vmov	r0, s16
 8002a58:	2223      	movs	r2, #35	; 0x23
 8002a5a:	2145      	movs	r1, #69	; 0x45
 8002a5c:	f7ff fdff 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002a60:	ee18 1a10 	vmov	r1, s16
 8002a64:	4628      	mov	r0, r5
        color = newColor;
 8002a66:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002a6a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002a6e:	f00f ff05 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a76:	ee18 3a10 	vmov	r3, s16
 8002a7a:	333c      	adds	r3, #60	; 0x3c
 8002a7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a80:	2352      	movs	r3, #82	; 0x52
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002a82:	ee18 0a10 	vmov	r0, s16
 8002a86:	a90a      	add	r1, sp, #40	; 0x28
 8002a88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a90:	f010 f98e 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a94:	ee18 1a10 	vmov	r1, s16
 8002a98:	4630      	mov	r0, r6
 8002a9a:	f00d ffd4 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002a9e:	ee18 0a90 	vmov	r0, s17
 8002aa2:	220c      	movs	r2, #12
 8002aa4:	2136      	movs	r1, #54	; 0x36
 8002aa6:	f7ff fdda 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002aaa:	ee18 1a90 	vmov	r1, s17
 8002aae:	4628      	mov	r0, r5
        color = newColor;
 8002ab0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002ab4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002ab8:	f00f fee0 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002abc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ac0:	ee18 3a90 	vmov	r3, s17
 8002ac4:	333c      	adds	r3, #60	; 0x3c
 8002ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002aca:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002acc:	ee18 0a90 	vmov	r0, s17
 8002ad0:	a90a      	add	r1, sp, #40	; 0x28
 8002ad2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ad6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ada:	f010 f969 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ade:	ee18 1a90 	vmov	r1, s17
 8002ae2:	4630      	mov	r0, r6
 8002ae4:	f00d ffaf 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002ae8:	ee19 0a10 	vmov	r0, s18
 8002aec:	22f0      	movs	r2, #240	; 0xf0
 8002aee:	2121      	movs	r1, #33	; 0x21
 8002af0:	f7ff fdb5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002af4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002af8:	aa0a      	add	r2, sp, #40	; 0x28
 8002afa:	f04f 0802 	mov.w	r8, #2
 8002afe:	a909      	add	r1, sp, #36	; 0x24
 8002b00:	ee19 0a10 	vmov	r0, s18
 8002b04:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b08:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002b0c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b10:	f010 fb33 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002b14:	2350      	movs	r3, #80	; 0x50
 8002b16:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002b1a:	3510      	adds	r5, #16
        updateTextPosition();
 8002b1c:	ee19 0a10 	vmov	r0, s18
 8002b20:	f7ff fdf2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b24:	ee19 1a10 	vmov	r1, s18
 8002b28:	4630      	mov	r0, r6
        colorPressed = col;
 8002b2a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002b2e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002b32:	f00d ff88 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002b36:	ee19 0a90 	vmov	r0, s19
 8002b3a:	22aa      	movs	r2, #170	; 0xaa
 8002b3c:	2121      	movs	r1, #33	; 0x21
 8002b3e:	f7ff fd8e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b42:	aa0a      	add	r2, sp, #40	; 0x28
 8002b44:	a909      	add	r1, sp, #36	; 0x24
 8002b46:	ee19 0a90 	vmov	r0, s19
 8002b4a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b4e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b52:	f010 fb12 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002b56:	234f      	movs	r3, #79	; 0x4f
 8002b58:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002b5c:	ee19 0a90 	vmov	r0, s19
 8002b60:	f7ff fdd2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b64:	ee19 1a90 	vmov	r1, s19
 8002b68:	4630      	mov	r0, r6
        colorPressed = col;
 8002b6a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002b6e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002b72:	f00d ff68 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002b76:	ee1a 0a10 	vmov	r0, s20
 8002b7a:	2264      	movs	r2, #100	; 0x64
 8002b7c:	2121      	movs	r1, #33	; 0x21
 8002b7e:	f7ff fd6e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b82:	aa0a      	add	r2, sp, #40	; 0x28
 8002b84:	a909      	add	r1, sp, #36	; 0x24
 8002b86:	ee1a 0a10 	vmov	r0, s20
 8002b8a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b8e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b92:	f010 faf2 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002b96:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8002b98:	ee1a 0a10 	vmov	r0, s20
 8002b9c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002ba0:	f7ff fdb2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ba4:	4630      	mov	r0, r6
        colorPressed = col;
 8002ba6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002baa:	ee1a 1a10 	vmov	r1, s20
 8002bae:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002bb2:	f00d ff48 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002bb6:	4620      	mov	r0, r4
 8002bb8:	b00d      	add	sp, #52	; 0x34
 8002bba:	ecbd 8b06 	vpop	{d8-d10}
 8002bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bc2:	bf00      	nop
 8002bc4:	200134a8 	.word	0x200134a8
 8002bc8:	0802c856 	.word	0x0802c856
 8002bcc:	0802c8cc 	.word	0x0802c8cc

08002bd0 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002bd0:	4770      	bx	lr

08002bd2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bd2:	4770      	bx	lr

08002bd4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002bd4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bd6:	68c2      	ldr	r2, [r0, #12]
 8002bd8:	6844      	ldr	r4, [r0, #4]
 8002bda:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002bdc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002bde:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002be2:	07d2      	lsls	r2, r2, #31
 8002be4:	bf48      	it	mi
 8002be6:	5962      	ldrmi	r2, [r4, r5]
 8002be8:	689b      	ldr	r3, [r3, #8]
    }
 8002bea:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bec:	bf48      	it	mi
 8002bee:	58d3      	ldrmi	r3, [r2, r3]
 8002bf0:	4718      	bx	r3

08002bf2 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002bf2:	6843      	ldr	r3, [r0, #4]
 8002bf4:	b12b      	cbz	r3, 8002c02 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002bf6:	6883      	ldr	r3, [r0, #8]
 8002bf8:	b92b      	cbnz	r3, 8002c06 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002bfa:	68c0      	ldr	r0, [r0, #12]
 8002bfc:	f000 0001 	and.w	r0, r0, #1
 8002c00:	4770      	bx	lr
 8002c02:	4618      	mov	r0, r3
 8002c04:	4770      	bx	lr
 8002c06:	2001      	movs	r0, #1
    }
 8002c08:	4770      	bx	lr

08002c0a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c0a:	b510      	push	{r4, lr}
 8002c0c:	2110      	movs	r1, #16
 8002c0e:	4604      	mov	r4, r0
 8002c10:	f027 fa67 	bl	802a0e2 <_ZdlPvj>
 8002c14:	4620      	mov	r0, r4
 8002c16:	bd10      	pop	{r4, pc}

08002c18 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c18:	b510      	push	{r4, lr}
 8002c1a:	4b03      	ldr	r3, [pc, #12]	; (8002c28 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002c1c:	6003      	str	r3, [r0, #0]
 8002c1e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c20:	f011 fca8 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c24:	4620      	mov	r0, r4
 8002c26:	bd10      	pop	{r4, pc}
 8002c28:	0802c9d0 	.word	0x0802c9d0

08002c2c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c2c:	b507      	push	{r0, r1, r2, lr}
 8002c2e:	4b07      	ldr	r3, [pc, #28]	; (8002c4c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002c30:	6003      	str	r3, [r0, #0]
 8002c32:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c34:	f011 fc9e 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c38:	9801      	ldr	r0, [sp, #4]
 8002c3a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002c3e:	f027 fa50 	bl	802a0e2 <_ZdlPvj>
 8002c42:	9801      	ldr	r0, [sp, #4]
 8002c44:	b003      	add	sp, #12
 8002c46:	f85d fb04 	ldr.w	pc, [sp], #4
 8002c4a:	bf00      	nop
 8002c4c:	0802c9d0 	.word	0x0802c9d0

08002c50 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002c50:	3098      	adds	r0, #152	; 0x98
 8002c52:	4288      	cmp	r0, r1
{
 8002c54:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002c56:	d105      	bne.n	8002c64 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c58:	f013 f98e 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002c5c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002c60:	f001 bb72 	b.w	8004348 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002c64:	bd08      	pop	{r3, pc}
	...

08002c68 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c6c:	ed2d 8b02 	vpush	{d8}
 8002c70:	4604      	mov	r4, r0
 8002c72:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002c74:	46a1      	mov	r9, r4
 8002c76:	2500      	movs	r5, #0
 8002c78:	f014 fdfe 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8002c7c:	4ba5      	ldr	r3, [pc, #660]	; (8002f14 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002c7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c80:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002c84:	2226      	movs	r2, #38	; 0x26
 8002c86:	4629      	mov	r1, r5
 8002c88:	4648      	mov	r0, r9
 8002c8a:	f028 fa42 	bl	802b112 <memset>
 8002c8e:	4648      	mov	r0, r9
 8002c90:	f7ff fd06 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8002c94:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002c98:	26ff      	movs	r6, #255	; 0xff
 8002c9a:	4b9f      	ldr	r3, [pc, #636]	; (8002f18 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002c9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002c9e:	2226      	movs	r2, #38	; 0x26
 8002ca0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ca4:	4629      	mov	r1, r5
 8002ca6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002caa:	4640      	mov	r0, r8
 8002cac:	66a5      	str	r5, [r4, #104]	; 0x68
 8002cae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002cb2:	f028 fa2e 	bl	802b112 <memset>
 8002cb6:	4640      	mov	r0, r8
 8002cb8:	f7ff fcf2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8002cbc:	4b97      	ldr	r3, [pc, #604]	; (8002f1c <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002cbe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002cc0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002cc4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002cc8:	a90a      	add	r1, sp, #40	; 0x28
 8002cca:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002cce:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002cd0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002cd4:	f010 fc47 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002cd8:	4658      	mov	r0, fp
 8002cda:	f010 fd85 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002cde:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002ce2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	ee08 3a90 	vmov	s17, r3
 8002cec:	f7ff fcea 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002cf0:	4638      	mov	r0, r7
 8002cf2:	f00f fb01 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8002cf6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	9303      	str	r3, [sp, #12]
 8002cfe:	f7ff facf 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d02:	4b87      	ldr	r3, [pc, #540]	; (8002f20 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002d04:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002d08:	3324      	adds	r3, #36	; 0x24
 8002d0a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002d0e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002d12:	4618      	mov	r0, r3
 8002d14:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002d18:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002d1c:	ee08 3a10 	vmov	s16, r3
 8002d20:	f7ff fcd0 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d24:	4650      	mov	r0, sl
 8002d26:	f7ff fccd 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002d2a:	4a7e      	ldr	r2, [pc, #504]	; (8002f24 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002d2c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002d30:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002d34:	4a7c      	ldr	r2, [pc, #496]	; (8002f28 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002d36:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002d3a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002d3e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002d42:	f011 fc0d 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002d46:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002d4a:	462a      	mov	r2, r5
 8002d4c:	4648      	mov	r0, r9
 8002d4e:	9300      	str	r3, [sp, #0]
 8002d50:	4629      	mov	r1, r5
 8002d52:	23f0      	movs	r3, #240	; 0xf0
 8002d54:	f7ff fc90 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d58:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002d5a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002d5e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002d60:	4649      	mov	r1, r9
 8002d62:	4630      	mov	r0, r6
 8002d64:	f00d fe6f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002d68:	462a      	mov	r2, r5
 8002d6a:	4640      	mov	r0, r8
 8002d6c:	4629      	mov	r1, r5
 8002d6e:	f7ff fc76 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002d72:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002d74:	4640      	mov	r0, r8
 8002d76:	a90a      	add	r1, sp, #40	; 0x28
 8002d78:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002d7c:	f010 fbf3 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d80:	4641      	mov	r1, r8
 8002d82:	4630      	mov	r0, r6
 8002d84:	f00d fe5f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002d88:	4658      	mov	r0, fp
 8002d8a:	f240 1201 	movw	r2, #257	; 0x101
 8002d8e:	2121      	movs	r1, #33	; 0x21
 8002d90:	f7ff fc65 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002d94:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d96:	aa0a      	add	r2, sp, #40	; 0x28
 8002d98:	a909      	add	r1, sp, #36	; 0x24
 8002d9a:	4658      	mov	r0, fp
 8002d9c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002da0:	2302      	movs	r3, #2
 8002da2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002da6:	f010 f9e8 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002daa:	2317      	movs	r3, #23
        updateTextPosition();
 8002dac:	4658      	mov	r0, fp
 8002dae:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002db2:	f7ff fca9 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002db6:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002dba:	330c      	adds	r3, #12
        color = col;
 8002dbc:	f04f 39ff 	mov.w	r9, #4294967295
 8002dc0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002dc4:	4659      	mov	r1, fp
 8002dc6:	4630      	mov	r0, r6
        colorPressed = col;
 8002dc8:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002dcc:	f00d fe3b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002dd0:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002dd4:	223c      	movs	r2, #60	; 0x3c
 8002dd6:	ee18 0a90 	vmov	r0, s17
 8002dda:	2120      	movs	r1, #32
 8002ddc:	f7ff fc3f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002de0:	ee18 1a90 	vmov	r1, s17
 8002de4:	4640      	mov	r0, r8
        color = newColor;
 8002de6:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002dea:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002dee:	f00f fd45 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002df2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002df6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002dfa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002dfe:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002f2c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002e02:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002e06:	2318      	movs	r3, #24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002e08:	ee18 0a90 	vmov	r0, s17
 8002e0c:	a90a      	add	r1, sp, #40	; 0x28
 8002e0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002e12:	f00f ffcd 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e16:	ee18 1a90 	vmov	r1, s17
 8002e1a:	4630      	mov	r0, r6
 8002e1c:	f00d fe13 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002e20:	230a      	movs	r3, #10
 8002e22:	9300      	str	r3, [sp, #0]
 8002e24:	2232      	movs	r2, #50	; 0x32
 8002e26:	23f0      	movs	r3, #240	; 0xf0
 8002e28:	4629      	mov	r1, r5
 8002e2a:	4638      	mov	r0, r7
 8002e2c:	f7ff fc24 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e30:	9b03      	ldr	r3, [sp, #12]
 8002e32:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e36:	22a0      	movs	r2, #160	; 0xa0
 8002e38:	4611      	mov	r1, r2
 8002e3a:	4638      	mov	r0, r7
 8002e3c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002e40:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002e44:	f00f fb6e 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e48:	22a0      	movs	r2, #160	; 0xa0
 8002e4a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002e4e:	4638      	mov	r0, r7
 8002e50:	f00f fb73 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002e54:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002e58:	2b20      	cmp	r3, #32
 8002e5a:	d005      	beq.n	8002e68 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002e5c:	2320      	movs	r3, #32
 8002e5e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002e62:	4638      	mov	r0, r7
 8002e64:	f00f fa68 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002e68:	4638      	mov	r0, r7
 8002e6a:	2101      	movs	r1, #1
 8002e6c:	f00f fb70 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002e70:	4639      	mov	r1, r7
 8002e72:	4630      	mov	r0, r6
 8002e74:	f00d fde7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002e78:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002e7c:	ee18 0a10 	vmov	r0, s16
 8002e80:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002e82:	2500      	movs	r5, #0
 8002e84:	2145      	movs	r1, #69	; 0x45
 8002e86:	f7ff fbea 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002e8a:	ee18 1a10 	vmov	r1, s16
 8002e8e:	4640      	mov	r0, r8
        color = newColor;
 8002e90:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002e94:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002e98:	f00f fcf0 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e9c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002ea0:	ee18 3a10 	vmov	r3, s16
 8002ea4:	333c      	adds	r3, #60	; 0x3c
 8002ea6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002eaa:	2319      	movs	r3, #25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002eac:	ee18 0a10 	vmov	r0, s16
 8002eb0:	a90a      	add	r1, sp, #40	; 0x28
 8002eb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002eb6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002eba:	f00f ff79 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ebe:	ee18 1a10 	vmov	r1, s16
 8002ec2:	4630      	mov	r0, r6
 8002ec4:	f00d fdbf 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002ec8:	220c      	movs	r2, #12
 8002eca:	4650      	mov	r0, sl
 8002ecc:	2136      	movs	r1, #54	; 0x36
 8002ece:	f7ff fbc6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002ed2:	4651      	mov	r1, sl
 8002ed4:	4640      	mov	r0, r8
        color = newColor;
 8002ed6:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002eda:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002ede:	f00f fccd 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ee2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002ee6:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002eea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002eee:	231a      	movs	r3, #26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002ef0:	a90a      	add	r1, sp, #40	; 0x28
 8002ef2:	4650      	mov	r0, sl
 8002ef4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ef8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002efc:	f00f ff58 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f00:	4630      	mov	r0, r6
 8002f02:	4651      	mov	r1, sl
 8002f04:	f00d fd9f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f08:	4620      	mov	r0, r4
 8002f0a:	b00d      	add	sp, #52	; 0x34
 8002f0c:	ecbd 8b02 	vpop	{d8}
 8002f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f14:	0802c9d0 	.word	0x0802c9d0
 8002f18:	0802f640 	.word	0x0802f640
 8002f1c:	0802f808 	.word	0x0802f808
 8002f20:	0802f374 	.word	0x0802f374
 8002f24:	0802c9b8 	.word	0x0802c9b8
 8002f28:	08002c51 	.word	0x08002c51
 8002f2c:	0802c8cc 	.word	0x0802c8cc

08002f30 <_ZN23Calibration_PadViewBase21scrollList1UpdateItemER23Configuration_Containers>:
    virtual void setupScreen();

    virtual void scrollList1UpdateItem(Configuration_Container& item, int16_t itemIndex)
    {
        // Override and implement this function in Calibration_Pad
    }
 8002f30:	4770      	bx	lr

08002f32 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 8002f32:	2002      	movs	r0, #2
 8002f34:	4770      	bx	lr

08002f36 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f36:	4770      	bx	lr

08002f38 <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8002f38:	4770      	bx	lr
	...

08002f3c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 8002f3c:	b538      	push	{r3, r4, r5, lr}
 8002f3e:	4605      	mov	r5, r0
 8002f40:	4b07      	ldr	r3, [pc, #28]	; (8002f60 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev+0x24>)
 8002f42:	f845 3b04 	str.w	r3, [r5], #4
 8002f46:	f8d0 3474 	ldr.w	r3, [r0, #1140]	; 0x474
 8002f4a:	4604      	mov	r4, r0
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	f200 4074 	addw	r0, r0, #1140	; 0x474
 8002f52:	4798      	blx	r3
 8002f54:	6863      	ldr	r3, [r4, #4]
 8002f56:	4628      	mov	r0, r5
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	4798      	blx	r3
 8002f5c:	4620      	mov	r0, r4
 8002f5e:	bd38      	pop	{r3, r4, r5, pc}
 8002f60:	0802cb8c 	.word	0x0802cb8c

08002f64 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f64:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f66:	68c2      	ldr	r2, [r0, #12]
 8002f68:	6844      	ldr	r4, [r0, #4]
 8002f6a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f6c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f6e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f72:	07d2      	lsls	r2, r2, #31
 8002f74:	bf48      	it	mi
 8002f76:	5962      	ldrmi	r2, [r4, r5]
 8002f78:	689b      	ldr	r3, [r3, #8]
    }
 8002f7a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f7c:	bf48      	it	mi
 8002f7e:	58d3      	ldrmi	r3, [r2, r3]
 8002f80:	4718      	bx	r3

08002f82 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f82:	6843      	ldr	r3, [r0, #4]
 8002f84:	b12b      	cbz	r3, 8002f92 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f86:	6883      	ldr	r3, [r0, #8]
 8002f88:	b92b      	cbnz	r3, 8002f96 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f8a:	68c0      	ldr	r0, [r0, #12]
 8002f8c:	f000 0001 	and.w	r0, r0, #1
 8002f90:	4770      	bx	lr
 8002f92:	4618      	mov	r0, r3
 8002f94:	4770      	bx	lr
 8002f96:	2001      	movs	r0, #1
    }
 8002f98:	4770      	bx	lr

08002f9a <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
    virtual void execute(T1 t1, T2 t2, T3 t3)
 8002f9a:	b4f0      	push	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 8002f9c:	68c5      	ldr	r5, [r0, #12]
 8002f9e:	6846      	ldr	r6, [r0, #4]
 8002fa0:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 8002fa2:	4604      	mov	r4, r0
        (pobject->*pmemfun)(t1, t2, t3);
 8002fa4:	eb06 0065 	add.w	r0, r6, r5, asr #1
 8002fa8:	07ed      	lsls	r5, r5, #31
 8002faa:	68a4      	ldr	r4, [r4, #8]
 8002fac:	bf44      	itt	mi
 8002fae:	59f5      	ldrmi	r5, [r6, r7]
 8002fb0:	592c      	ldrmi	r4, [r5, r4]
 8002fb2:	46a4      	mov	ip, r4
    }
 8002fb4:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 8002fb6:	4760      	bx	ip

08002fb8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002fb8:	6843      	ldr	r3, [r0, #4]
 8002fba:	b12b      	cbz	r3, 8002fc8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 8002fbc:	6883      	ldr	r3, [r0, #8]
 8002fbe:	b92b      	cbnz	r3, 8002fcc <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 8002fc0:	68c0      	ldr	r0, [r0, #12]
 8002fc2:	f000 0001 	and.w	r0, r0, #1
 8002fc6:	4770      	bx	lr
 8002fc8:	4618      	mov	r0, r3
 8002fca:	4770      	bx	lr
 8002fcc:	2001      	movs	r0, #1
    }
 8002fce:	4770      	bx	lr

08002fd0 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED0Ev>:
 8002fd0:	b510      	push	{r4, lr}
 8002fd2:	4604      	mov	r4, r0
 8002fd4:	f7ff ffb2 	bl	8002f3c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>
 8002fd8:	4620      	mov	r0, r4
 8002fda:	f640 01e4 	movw	r1, #2276	; 0x8e4
 8002fde:	f027 f880 	bl	802a0e2 <_ZdlPvj>
 8002fe2:	4620      	mov	r0, r4
 8002fe4:	bd10      	pop	{r4, pc}

08002fe6 <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8002fe6:	b510      	push	{r4, lr}
 8002fe8:	2110      	movs	r1, #16
 8002fea:	4604      	mov	r4, r0
 8002fec:	f027 f879 	bl	802a0e2 <_ZdlPvj>
 8002ff0:	4620      	mov	r0, r4
 8002ff2:	bd10      	pop	{r4, pc}

08002ff4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ff4:	b510      	push	{r4, lr}
 8002ff6:	2110      	movs	r1, #16
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	f027 f872 	bl	802a0e2 <_ZdlPvj>
 8002ffe:	4620      	mov	r0, r4
 8003000:	bd10      	pop	{r4, pc}
	...

08003004 <_ZN23Calibration_PadViewBaseD1Ev>:
    scrollList1.setDrawableSize(256, 0);
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
    add(scrollList1);
}

Calibration_PadViewBase::~Calibration_PadViewBase()
 8003004:	b510      	push	{r4, lr}
 8003006:	4b05      	ldr	r3, [pc, #20]	; (800301c <_ZN23Calibration_PadViewBaseD1Ev+0x18>)
 8003008:	6003      	str	r3, [r0, #0]
 800300a:	4604      	mov	r4, r0
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800300c:	f011 fab2 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003010:	f504 7061 	add.w	r0, r4, #900	; 0x384
 8003014:	f7ff ff92 	bl	8002f3c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>
}
 8003018:	4620      	mov	r0, r4
 800301a:	bd10      	pop	{r4, pc}
 800301c:	0802cbd4 	.word	0x0802cbd4

08003020 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003020:	b510      	push	{r4, lr}
 8003022:	4604      	mov	r4, r0
}
 8003024:	f7ff ffee 	bl	8003004 <_ZN23Calibration_PadViewBaseD1Ev>
 8003028:	4620      	mov	r0, r4
 800302a:	f641 2198 	movw	r1, #6808	; 0x1a98
 800302e:	f027 f858 	bl	802a0e2 <_ZdlPvj>
 8003032:	4620      	mov	r0, r4
 8003034:	bd10      	pop	{r4, pc}

08003036 <_ZN23Calibration_PadViewBase11setupScreenEv>:

void Calibration_PadViewBase::setupScreen()
{
 8003036:	b510      	push	{r4, lr}
 8003038:	4604      	mov	r4, r0
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 800303a:	f500 703b 	add.w	r0, r0, #748	; 0x2ec
 800303e:	f00c ffb0 	bl	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
    scrollList1.initialize();
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
    {
        scrollList1ListItems[i].initialize();
 8003042:	f504 7062 	add.w	r0, r4, #904	; 0x388
 8003046:	f005 fc4d 	bl	80088e4 <_ZN23Configuration_Container10initializeEv>
 800304a:	f8d4 37f8 	ldr.w	r3, [r4, #2040]	; 0x7f8
 800304e:	f504 60ff 	add.w	r0, r4, #2040	; 0x7f8
 8003052:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
}
 8003056:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        scrollList1ListItems[i].initialize();
 800305a:	4718      	bx	r3

0800305c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 800305c:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 800305e:	b28b      	uxth	r3, r1
 8003060:	2b01      	cmp	r3, #1
 8003062:	d905      	bls.n	8003070 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x14>
 8003064:	4b05      	ldr	r3, [pc, #20]	; (800307c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x20>)
 8003066:	4a06      	ldr	r2, [pc, #24]	; (8003080 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x24>)
 8003068:	4806      	ldr	r0, [pc, #24]	; (8003084 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x28>)
 800306a:	2154      	movs	r1, #84	; 0x54
 800306c:	f027 fe4c 	bl	802ad08 <__assert_func>
        return &element[index];
 8003070:	f44f 638e 	mov.w	r3, #1136	; 0x470
 8003074:	fb01 0003 	mla	r0, r1, r3, r0
    }
 8003078:	3004      	adds	r0, #4
 800307a:	bd08      	pop	{r3, pc}
 800307c:	0802c9fc 	.word	0x0802c9fc
 8003080:	0802ca17 	.word	0x0802ca17
 8003084:	0802cab2 	.word	0x0802cab2

08003088 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8003088:	3098      	adds	r0, #152	; 0x98
 800308a:	4288      	cmp	r0, r1
{
 800308c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800308e:	d105      	bne.n	800309c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003090:	f012 ff72 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8003094:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003098:	f001 b956 	b.w	8004348 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800309c:	bd08      	pop	{r3, pc}
	...

080030a0 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:

void Calibration_PadViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 80030a0:	b570      	push	{r4, r5, r6, lr}
    if (items == &scrollList1ListItems)
 80030a2:	f500 7461 	add.w	r4, r0, #900	; 0x384
 80030a6:	428c      	cmp	r4, r1
{
 80030a8:	4615      	mov	r5, r2
 80030aa:	461a      	mov	r2, r3
    if (items == &scrollList1ListItems)
 80030ac:	d111      	bne.n	80030d2 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x32>
    {
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 80030ae:	6803      	ldr	r3, [r0, #0]
        assert(index >= 0 && index < SIZE);
 80030b0:	2d01      	cmp	r5, #1
 80030b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80030b4:	d905      	bls.n	80030c2 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x22>
 80030b6:	4b07      	ldr	r3, [pc, #28]	; (80030d4 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x34>)
 80030b8:	4a07      	ldr	r2, [pc, #28]	; (80030d8 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x38>)
 80030ba:	4808      	ldr	r0, [pc, #32]	; (80030dc <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x3c>)
 80030bc:	2161      	movs	r1, #97	; 0x61
 80030be:	f027 fe23 	bl	802ad08 <__assert_func>
        return element[index];
 80030c2:	f44f 618e 	mov.w	r1, #1136	; 0x470
 80030c6:	fb05 4101 	mla	r1, r5, r1, r4
 80030ca:	3104      	adds	r1, #4
    }
}
 80030cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 80030d0:	4718      	bx	r3
}
 80030d2:	bd70      	pop	{r4, r5, r6, pc}
 80030d4:	0802c9fc 	.word	0x0802c9fc
 80030d8:	0802cb11 	.word	0x0802cb11
 80030dc:	0802cab2 	.word	0x0802cab2

080030e0 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80030e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030e4:	ed2d 8b06 	vpush	{d8-d10}
 80030e8:	4604      	mov	r4, r0
 80030ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80030ec:	46a3      	mov	fp, r4
 80030ee:	2500      	movs	r5, #0
 80030f0:	f014 fbc2 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 80030f4:	4bec      	ldr	r3, [pc, #944]	; (80034a8 <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 80030f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80030f8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80030fc:	2226      	movs	r2, #38	; 0x26
 80030fe:	4629      	mov	r1, r5
 8003100:	4658      	mov	r0, fp
 8003102:	f028 f806 	bl	802b112 <memset>
 8003106:	4658      	mov	r0, fp
 8003108:	f7ff faca 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 800310c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003110:	26ff      	movs	r6, #255	; 0xff
 8003112:	4be6      	ldr	r3, [pc, #920]	; (80034ac <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>)
 8003114:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003116:	2226      	movs	r2, #38	; 0x26
 8003118:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800311c:	4629      	mov	r1, r5
 800311e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003122:	4650      	mov	r0, sl
 8003124:	66a5      	str	r5, [r4, #104]	; 0x68
 8003126:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800312a:	f027 fff2 	bl	802b112 <memset>
 800312e:	4650      	mov	r0, sl
 8003130:	f7ff fab6 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8003134:	4bde      	ldr	r3, [pc, #888]	; (80034b0 <_ZN23Calibration_PadViewBaseC1Ev+0x3d0>)
 8003136:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003138:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800313c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003140:	a90a      	add	r1, sp, #40	; 0x28
 8003142:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 8003144:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003148:	f010 fa0d 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800314c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003150:	4618      	mov	r0, r3
 8003152:	ee09 3a10 	vmov	s18, r3
 8003156:	f010 fb47 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800315a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800315e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8003162:	4618      	mov	r0, r3
 8003164:	ee09 3a90 	vmov	s19, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003168:	4ed2      	ldr	r6, [pc, #840]	; (80034b4 <_ZN23Calibration_PadViewBaseC1Ev+0x3d4>)
 800316a:	f7ff faab 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800316e:	4648      	mov	r0, r9
 8003170:	f00f f8c2 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8003174:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8003178:	f106 0724 	add.w	r7, r6, #36	; 0x24
 800317c:	4618      	mov	r0, r3
 800317e:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8003182:	9302      	str	r3, [sp, #8]
 8003184:	f7ff f88c 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003188:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 800318c:	f8c4 71a0 	str.w	r7, [r4, #416]	; 0x1a0
 8003190:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003194:	4640      	mov	r0, r8
 8003196:	f00f f8af 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 800319a:	f504 7307 	add.w	r3, r4, #540	; 0x21c
 800319e:	4618      	mov	r0, r3
 80031a0:	9303      	str	r3, [sp, #12]
 80031a2:	f7ff f87d 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80031a6:	f504 730c 	add.w	r3, r4, #560	; 0x230
 80031aa:	f8c4 621c 	str.w	r6, [r4, #540]	; 0x21c
 80031ae:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
 80031b2:	4618      	mov	r0, r3
 80031b4:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 80031b8:	ee08 3a10 	vmov	s16, r3
 80031bc:	f7ff fa82 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80031c0:	f504 731e 	add.w	r3, r4, #632	; 0x278
 80031c4:	4618      	mov	r0, r3
 80031c6:	f504 7630 	add.w	r6, r4, #704	; 0x2c0
 80031ca:	ee08 3a90 	vmov	s17, r3
 80031ce:	f7ff fa79 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80031d2:	4630      	mov	r0, r6
 80031d4:	f00d f93c 	bl	8010450 <_ZN8touchgfx10ScrollListC1Ev>
 80031d8:	f504 7361 	add.w	r3, r4, #900	; 0x384
 80031dc:	ee0a 3a10 	vmov	s20, r3
class DrawableListItems : public DrawableListItemsInterface
 80031e0:	4bb5      	ldr	r3, [pc, #724]	; (80034b8 <_ZN23Calibration_PadViewBaseC1Ev+0x3d8>)
 80031e2:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
 80031e6:	f504 7062 	add.w	r0, r4, #904	; 0x388
 80031ea:	f005 fb71 	bl	80088d0 <_ZN23Configuration_ContainerC1Ev>
 80031ee:	f504 60ff 	add.w	r0, r4, #2040	; 0x7f8
 80031f2:	f005 fb6d 	bl	80088d0 <_ZN23Configuration_ContainerC1Ev>
        : pobject(pObject), pmemfun(pmemfun_3)
 80031f6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80031fa:	4ab0      	ldr	r2, [pc, #704]	; (80034bc <_ZN23Calibration_PadViewBaseC1Ev+0x3dc>)
 80031fc:	f8c3 2a78 	str.w	r2, [r3, #2680]	; 0xa78
 8003200:	4aaf      	ldr	r2, [pc, #700]	; (80034c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3e0>)
 8003202:	f8c3 2a80 	str.w	r2, [r3, #2688]	; 0xa80
        : pobject(pObject), pmemfun(pmemfun_1)
 8003206:	4aaf      	ldr	r2, [pc, #700]	; (80034c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3e4>)
 8003208:	f8c3 2a88 	str.w	r2, [r3, #2696]	; 0xa88
 800320c:	4aae      	ldr	r2, [pc, #696]	; (80034c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3e8>)
 800320e:	f8c3 2a90 	str.w	r2, [r3, #2704]	; 0xa90
        : pobject(pObject), pmemfun(pmemfun_3)
 8003212:	f8c3 4a7c 	str.w	r4, [r3, #2684]	; 0xa7c
 8003216:	f8c3 5a84 	str.w	r5, [r3, #2692]	; 0xa84
        : pobject(pObject), pmemfun(pmemfun_1)
 800321a:	f8c3 4a8c 	str.w	r4, [r3, #2700]	; 0xa8c
 800321e:	f8c3 5a94 	str.w	r5, [r3, #2708]	; 0xa94
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003222:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003226:	f604 4068 	addw	r0, r4, #3176	; 0xc68
 800322a:	f011 f999 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800322e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003232:	462a      	mov	r2, r5
 8003234:	4658      	mov	r0, fp
 8003236:	9300      	str	r3, [sp, #0]
 8003238:	4629      	mov	r1, r5
 800323a:	23f0      	movs	r3, #240	; 0xf0
 800323c:	f7ff fa1c 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003240:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003242:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003246:	66a3      	str	r3, [r4, #104]	; 0x68
 8003248:	4659      	mov	r1, fp
 800324a:	4638      	mov	r0, r7
 800324c:	f00d fbfb 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003250:	462a      	mov	r2, r5
 8003252:	4650      	mov	r0, sl
 8003254:	4629      	mov	r1, r5
 8003256:	f7ff fa02 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800325a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800325c:	4650      	mov	r0, sl
 800325e:	a90a      	add	r1, sp, #40	; 0x28
 8003260:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003264:	f010 f97f 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003268:	4651      	mov	r1, sl
 800326a:	4638      	mov	r0, r7
 800326c:	f00d fbeb 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003270:	ee19 0a10 	vmov	r0, s18
 8003274:	f240 1201 	movw	r2, #257	; 0x101
 8003278:	2121      	movs	r1, #33	; 0x21
 800327a:	f7ff f9f0 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800327e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003280:	aa0a      	add	r2, sp, #40	; 0x28
 8003282:	a909      	add	r1, sp, #36	; 0x24
 8003284:	ee19 0a10 	vmov	r0, s18
 8003288:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800328c:	2302      	movs	r3, #2
 800328e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003292:	f00f ff72 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003296:	231d      	movs	r3, #29
        updateTextPosition();
 8003298:	ee19 0a10 	vmov	r0, s18
 800329c:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80032a0:	f7ff fa32 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80032a4:	f504 53d4 	add.w	r3, r4, #6784	; 0x1a80
 80032a8:	3308      	adds	r3, #8
        color = col;
 80032aa:	f04f 3aff 	mov.w	sl, #4294967295
 80032ae:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80032b2:	ee19 1a10 	vmov	r1, s18
 80032b6:	4638      	mov	r0, r7
        colorPressed = col;
 80032b8:	e9c4 aa35 	strd	sl, sl, [r4, #212]	; 0xd4
 80032bc:	f00d fbc3 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032c0:	f10d 0b10 	add.w	fp, sp, #16
    textArea3.setXY(58, 60);
 80032c4:	223c      	movs	r2, #60	; 0x3c
 80032c6:	ee19 0a90 	vmov	r0, s19
 80032ca:	213a      	movs	r1, #58	; 0x3a
 80032cc:	f7ff f9c7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80032d0:	ee19 1a90 	vmov	r1, s19
 80032d4:	4658      	mov	r0, fp
        color = newColor;
 80032d6:	f8c4 a110 	str.w	sl, [r4, #272]	; 0x110
        linespace = space;
 80032da:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80032de:	f00f facd 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80032e2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80032e6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80032ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80032ee:	4b77      	ldr	r3, [pc, #476]	; (80034cc <_ZN23Calibration_PadViewBaseC1Ev+0x3ec>)
 80032f0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80032f2:	ee19 0a90 	vmov	r0, s19
 80032f6:	231c      	movs	r3, #28
 80032f8:	a90a      	add	r1, sp, #40	; 0x28
 80032fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032fe:	f00f fd57 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003302:	ee19 1a90 	vmov	r1, s19
 8003306:	4638      	mov	r0, r7
 8003308:	f00d fb9d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800330c:	230a      	movs	r3, #10
 800330e:	9300      	str	r3, [sp, #0]
 8003310:	2232      	movs	r2, #50	; 0x32
 8003312:	23f0      	movs	r3, #240	; 0xf0
 8003314:	4629      	mov	r1, r5
 8003316:	4648      	mov	r0, r9
 8003318:	f7ff f9ae 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800331c:	9b02      	ldr	r3, [sp, #8]
 800331e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003322:	22a0      	movs	r2, #160	; 0xa0
 8003324:	4611      	mov	r1, r2
 8003326:	4648      	mov	r0, r9
 8003328:	f8c4 a1a4 	str.w	sl, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800332c:	f8a4 a1a8 	strh.w	sl, [r4, #424]	; 0x1a8
 8003330:	f00f f8f8 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003334:	22a0      	movs	r2, #160	; 0xa0
 8003336:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800333a:	4648      	mov	r0, r9
 800333c:	f00f f8fd 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003340:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003344:	2b20      	cmp	r3, #32
 8003346:	d005      	beq.n	8003354 <_ZN23Calibration_PadViewBaseC1Ev+0x274>
        lineWidthQ5 = widthQ5;
 8003348:	2320      	movs	r3, #32
 800334a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800334e:	4648      	mov	r0, r9
 8003350:	f00e fff2 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003354:	2101      	movs	r1, #1
 8003356:	4648      	mov	r0, r9
 8003358:	f00f f8fa 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800335c:	4649      	mov	r1, r9
 800335e:	4638      	mov	r0, r7
 8003360:	f00d fb71 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8003364:	230a      	movs	r3, #10
 8003366:	9300      	str	r3, [sp, #0]
 8003368:	224b      	movs	r2, #75	; 0x4b
 800336a:	23f0      	movs	r3, #240	; 0xf0
 800336c:	2100      	movs	r1, #0
 800336e:	4640      	mov	r0, r8
 8003370:	f7ff f982 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003374:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003378:	22a0      	movs	r2, #160	; 0xa0
 800337a:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 800337e:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8003382:	9b03      	ldr	r3, [sp, #12]
 8003384:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 8003388:	4611      	mov	r1, r2
 800338a:	4640      	mov	r0, r8
 800338c:	f00f f8ca 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003390:	22a0      	movs	r2, #160	; 0xa0
 8003392:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003396:	4640      	mov	r0, r8
 8003398:	f00f f8cf 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800339c:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80033a0:	2b20      	cmp	r3, #32
 80033a2:	d005      	beq.n	80033b0 <_ZN23Calibration_PadViewBaseC1Ev+0x2d0>
        lineWidthQ5 = widthQ5;
 80033a4:	2320      	movs	r3, #32
 80033a6:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
        updateCachedShape();
 80033aa:	4640      	mov	r0, r8
 80033ac:	f00e ffc4 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80033b0:	4640      	mov	r0, r8
 80033b2:	2101      	movs	r1, #1
 80033b4:	f00f f8cc 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80033b8:	4641      	mov	r1, r8
 80033ba:	4638      	mov	r0, r7
        linespace = space;
 80033bc:	2500      	movs	r5, #0
 80033be:	f00d fb42 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 80033c2:	f10d 0810 	add.w	r8, sp, #16
    textArea2.setXY(69, 35);
 80033c6:	ee18 0a10 	vmov	r0, s16
 80033ca:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 80033cc:	f04f 3aff 	mov.w	sl, #4294967295
 80033d0:	2145      	movs	r1, #69	; 0x45
 80033d2:	f7ff f944 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80033d6:	ee18 1a10 	vmov	r1, s16
 80033da:	4640      	mov	r0, r8
        color = newColor;
 80033dc:	f8c4 a260 	str.w	sl, [r4, #608]	; 0x260
        linespace = space;
 80033e0:	f8a4 5264 	strh.w	r5, [r4, #612]	; 0x264
        boundingArea = calculateBoundingArea();
 80033e4:	f00f fa4a 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033e8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80033ec:	ee18 3a10 	vmov	r3, s16
 80033f0:	333c      	adds	r3, #60	; 0x3c
 80033f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033f6:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 80034cc <_ZN23Calibration_PadViewBaseC1Ev+0x3ec>
 80033fa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80033fe:	231e      	movs	r3, #30
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003400:	ee18 0a10 	vmov	r0, s16
 8003404:	a90a      	add	r1, sp, #40	; 0x28
 8003406:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800340a:	f00f fcd1 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800340e:	ee18 1a10 	vmov	r1, s16
 8003412:	4638      	mov	r0, r7
 8003414:	f00d fb17 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003418:	ee18 0a90 	vmov	r0, s17
 800341c:	220c      	movs	r2, #12
 800341e:	2136      	movs	r1, #54	; 0x36
 8003420:	f7ff f91d 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8003424:	ee18 1a90 	vmov	r1, s17
 8003428:	4640      	mov	r0, r8
        color = newColor;
 800342a:	f8c4 a2a8 	str.w	sl, [r4, #680]	; 0x2a8
        linespace = space;
 800342e:	f8a4 52ac 	strh.w	r5, [r4, #684]	; 0x2ac
        boundingArea = calculateBoundingArea();
 8003432:	f00f fa23 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003436:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800343a:	ee18 3a90 	vmov	r3, s17
 800343e:	333c      	adds	r3, #60	; 0x3c
 8003440:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003444:	231f      	movs	r3, #31
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003446:	ee18 0a90 	vmov	r0, s17
 800344a:	a90a      	add	r1, sp, #40	; 0x28
 800344c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003450:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003454:	f00f fcac 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003458:	ee18 1a90 	vmov	r1, s17
 800345c:	4638      	mov	r0, r7
 800345e:	f00d faf2 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scrollList1.setPosition(0, 95, 240, 147);
 8003462:	2393      	movs	r3, #147	; 0x93
 8003464:	225f      	movs	r2, #95	; 0x5f
 8003466:	9300      	str	r3, [sp, #0]
 8003468:	4629      	mov	r1, r5
 800346a:	23f0      	movs	r3, #240	; 0xf0
 800346c:	4630      	mov	r0, r6
 800346e:	f7ff f903 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollList1.setHorizontal(false);
 8003472:	4629      	mov	r1, r5
 8003474:	4630      	mov	r0, r6
 8003476:	f00d fa6a 	bl	801094e <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList1.setCircular(true);
 800347a:	4630      	mov	r0, r6
 800347c:	2101      	movs	r1, #1
 800347e:	f00d fac1 	bl	8010a04 <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 8003482:	4630      	mov	r0, r6
 8003484:	4912      	ldr	r1, [pc, #72]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3f0>)
 8003486:	f00d f9a2 	bl	80107ce <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList1.setSwipeAcceleration(10);
 800348a:	4630      	mov	r0, r6
 800348c:	210a      	movs	r1, #10
 800348e:	f00d f9a1 	bl	80107d4 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    scrollList1.setDragAcceleration(10);
 8003492:	4630      	mov	r0, r6
 8003494:	210a      	movs	r1, #10
 8003496:	f00d f9a0 	bl	80107da <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList1.setNumberOfItems(1);
 800349a:	4630      	mov	r0, r6
 800349c:	2101      	movs	r1, #1
 800349e:	f00d f916 	bl	80106ce <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    scrollList1.setPadding(0, 0);
 80034a2:	462a      	mov	r2, r5
 80034a4:	e016      	b.n	80034d4 <_ZN23Calibration_PadViewBaseC1Ev+0x3f4>
 80034a6:	bf00      	nop
 80034a8:	0802cbd4 	.word	0x0802cbd4
 80034ac:	0802f640 	.word	0x0802f640
 80034b0:	0802f808 	.word	0x0802f808
 80034b4:	0802f374 	.word	0x0802f374
 80034b8:	0802cb8c 	.word	0x0802cb8c
 80034bc:	0802cba4 	.word	0x0802cba4
 80034c0:	080030a1 	.word	0x080030a1
 80034c4:	0802cbbc 	.word	0x0802cbbc
 80034c8:	08003089 	.word	0x08003089
 80034cc:	0802c8cc 	.word	0x0802c8cc
 80034d0:	08017bdd 	.word	0x08017bdd
 80034d4:	4629      	mov	r1, r5
 80034d6:	4630      	mov	r0, r6
 80034d8:	f00d f839 	bl	801054e <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList1.setSnapping(false);
 80034dc:	4629      	mov	r1, r5
 80034de:	4630      	mov	r0, r6
 80034e0:	f00d f84d 	bl	801057e <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList1.setDrawableSize(256, 0);
 80034e4:	462a      	mov	r2, r5
 80034e6:	4630      	mov	r0, r6
 80034e8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80034ec:	f00d f812 	bl	8010514 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
 80034f0:	f504 52d3 	add.w	r2, r4, #6752	; 0x1a60
 80034f4:	ee1a 1a10 	vmov	r1, s20
 80034f8:	3218      	adds	r2, #24
 80034fa:	4630      	mov	r0, r6
 80034fc:	f00c fedd 	bl	80102ba <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
 8003500:	4638      	mov	r0, r7
 8003502:	4631      	mov	r1, r6
 8003504:	f00d fa9f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003508:	4620      	mov	r0, r4
 800350a:	b00d      	add	sp, #52	; 0x34
 800350c:	ecbd 8b06 	vpop	{d8-d10}
 8003510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003514 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003514:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003516:	4770      	bx	lr

08003518 <_ZN27Configuration_ContainerBaseD1Ev>:
}

Configuration_ContainerBase::~Configuration_ContainerBase()
{

}
 8003518:	4770      	bx	lr

0800351a <_ZN27Configuration_ContainerBase10initializeEv>:

void Configuration_ContainerBase::initialize()
{

}
 800351a:	4770      	bx	lr

0800351c <_ZN27Configuration_ContainerBaseD0Ev>:
Configuration_ContainerBase::~Configuration_ContainerBase()
 800351c:	b510      	push	{r4, lr}
}
 800351e:	f44f 618e 	mov.w	r1, #1136	; 0x470
Configuration_ContainerBase::~Configuration_ContainerBase()
 8003522:	4604      	mov	r4, r0
}
 8003524:	f026 fddd 	bl	802a0e2 <_ZdlPvj>
 8003528:	4620      	mov	r0, r4
 800352a:	bd10      	pop	{r4, pc}

0800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 800352c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003530:	8481      	strh	r1, [r0, #36]	; 0x24
 8003532:	490e      	ldr	r1, [pc, #56]	; (800356c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8003534:	6281      	str	r1, [r0, #40]	; 0x28
 8003536:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800353a:	8581      	strh	r1, [r0, #44]	; 0x2c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800353c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8003540:	6341      	str	r1, [r0, #52]	; 0x34
        : TextAreaWithWildcardBase(), wc1(0)
 8003542:	490b      	ldr	r1, [pc, #44]	; (8003570 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x44>)
 8003544:	6001      	str	r1, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8003546:	2200      	movs	r2, #0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003548:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 800354c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003550:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003554:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003558:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 800355c:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 8003560:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003562:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003564:	63c2      	str	r2, [r0, #60]	; 0x3c
 8003566:	6482      	str	r2, [r0, #72]	; 0x48
    }
 8003568:	4770      	bx	lr
 800356a:	bf00      	nop
 800356c:	0802c8cc 	.word	0x0802c8cc
 8003570:	0802c8dc 	.word	0x0802c8dc

08003574 <_ZN27Configuration_ContainerBaseC1Ev>:
Configuration_ContainerBase::Configuration_ContainerBase()
 8003574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8003578:	f44f 7380 	mov.w	r3, #256	; 0x100
 800357c:	4682      	mov	sl, r0
 800357e:	ed2d 8b0a 	vpush	{d8-d12}
        : x(0), y(0), width(0), height(0)
 8003582:	2500      	movs	r5, #0
 8003584:	8483      	strh	r3, [r0, #36]	; 0x24
 8003586:	4b57      	ldr	r3, [pc, #348]	; (80036e4 <_ZN27Configuration_ContainerBaseC1Ev+0x170>)
          firstChild(0)
 8003588:	6285      	str	r5, [r0, #40]	; 0x28
 800358a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800358e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8003592:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8003596:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800359a:	f84a 3b2c 	str.w	r3, [sl], #44
 800359e:	4604      	mov	r4, r0
 80035a0:	b08f      	sub	sp, #60	; 0x3c
 80035a2:	f104 0968 	add.w	r9, r4, #104	; 0x68
 80035a6:	4650      	mov	r0, sl
 80035a8:	f00f ffb6 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80035ac:	4648      	mov	r0, r9
 80035ae:	f7ff ffbd 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035b2:	f104 03b4 	add.w	r3, r4, #180	; 0xb4
 80035b6:	4618      	mov	r0, r3
 80035b8:	f104 08f0 	add.w	r8, r4, #240	; 0xf0
 80035bc:	ee09 3a90 	vmov	s19, r3
 80035c0:	f00f ffaa 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80035c4:	4640      	mov	r0, r8
 80035c6:	f7ff ffb1 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035ca:	f504 739e 	add.w	r3, r4, #316	; 0x13c
 80035ce:	4618      	mov	r0, r3
 80035d0:	f504 77bc 	add.w	r7, r4, #376	; 0x178
 80035d4:	ee0a 3a10 	vmov	s20, r3
 80035d8:	f00f ff9e 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80035dc:	4638      	mov	r0, r7
 80035de:	f7ff ffa5 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035e2:	f504 73e2 	add.w	r3, r4, #452	; 0x1c4
 80035e6:	4618      	mov	r0, r3
 80035e8:	ee0a 3a90 	vmov	s21, r3
 80035ec:	f00f ff94 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80035f0:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80035f4:	4618      	mov	r0, r3
 80035f6:	ee08 3a10 	vmov	s16, r3
 80035fa:	f7ff ff97 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035fe:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003602:	4618      	mov	r0, r3
 8003604:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8003608:	ee0b 3a10 	vmov	s22, r3
 800360c:	f00f ff84 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003610:	4658      	mov	r0, fp
 8003612:	f7ff ff8b 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003616:	f504 7335 	add.w	r3, r4, #724	; 0x2d4
 800361a:	4618      	mov	r0, r3
 800361c:	ee0b 3a90 	vmov	s23, r3
 8003620:	f00f ff7a 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003624:	f504 7344 	add.w	r3, r4, #784	; 0x310
 8003628:	4618      	mov	r0, r3
 800362a:	ee08 3a90 	vmov	s17, r3
 800362e:	f7ff ff7d 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003632:	f504 7357 	add.w	r3, r4, #860	; 0x35c
 8003636:	4618      	mov	r0, r3
 8003638:	ee0c 3a10 	vmov	s24, r3
 800363c:	f00f ff6c 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003640:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003644:	4618      	mov	r0, r3
 8003646:	ee09 3a10 	vmov	s18, r3
 800364a:	f7ff ff6f 	bl	800352c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        rect.width = width;
 800364e:	4b26      	ldr	r3, [pc, #152]	; (80036e8 <_ZN27Configuration_ContainerBaseC1Ev+0x174>)
 8003650:	60a3      	str	r3, [r4, #8]
    buttonWithIcon1_6.setXY(194, 218);
 8003652:	4650      	mov	r0, sl
 8003654:	22da      	movs	r2, #218	; 0xda
 8003656:	21c2      	movs	r1, #194	; 0xc2
 8003658:	f7ff f801 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800365c:	f04f 0301 	mov.w	r3, #1
 8003660:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
    buttonWithIcon1_6.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003664:	ab0c      	add	r3, sp, #48	; 0x30
 8003666:	260a      	movs	r6, #10
 8003668:	aa0a      	add	r2, sp, #40	; 0x28
 800366a:	4650      	mov	r0, sl
 800366c:	9300      	str	r3, [sp, #0]
 800366e:	a909      	add	r1, sp, #36	; 0x24
 8003670:	ab0b      	add	r3, sp, #44	; 0x2c
 8003672:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003676:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800367a:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 800367e:	f00f feb6 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_6);
 8003682:	4651      	mov	r1, sl
 8003684:	4620      	mov	r0, r4
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003686:	6665      	str	r5, [r4, #100]	; 0x64
 8003688:	f00d f9dd 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_6.setXY(10, 225);
 800368c:	22e1      	movs	r2, #225	; 0xe1
 800368e:	4631      	mov	r1, r6
 8003690:	4648      	mov	r0, r9
 8003692:	f7fe ffe4 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003696:	f04f 33ff 	mov.w	r3, #4294967295
 800369a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        boundingArea = calculateBoundingArea();
 800369e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
        linespace = space;
 80036a0:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
        boundingArea = calculateBoundingArea();
 80036a4:	f10d 0a10 	add.w	sl, sp, #16
 80036a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80036ac:	4649      	mov	r1, r9
 80036ae:	4650      	mov	r0, sl
 80036b0:	4798      	blx	r3
 80036b2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80036b6:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80036ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textArea1_6Buffer, TEXTAREA1_6_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_H9HA).getText());
 80036be:	f504 7379 	add.w	r3, r4, #996	; 0x3e4
 80036c2:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80036c4:	4b09      	ldr	r3, [pc, #36]	; (80036ec <_ZN27Configuration_ContainerBaseC1Ev+0x178>)
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	b92b      	cbnz	r3, 80036d6 <_ZN27Configuration_ContainerBaseC1Ev+0x162>
 80036ca:	4b09      	ldr	r3, [pc, #36]	; (80036f0 <_ZN27Configuration_ContainerBaseC1Ev+0x17c>)
 80036cc:	4a09      	ldr	r2, [pc, #36]	; (80036f4 <_ZN27Configuration_ContainerBaseC1Ev+0x180>)
 80036ce:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80036d0:	4809      	ldr	r0, [pc, #36]	; (80036f8 <_ZN27Configuration_ContainerBaseC1Ev+0x184>)
 80036d2:	f027 fb19 	bl	802ad08 <__assert_func>
 80036d6:	4b09      	ldr	r3, [pc, #36]	; (80036fc <_ZN27Configuration_ContainerBaseC1Ev+0x188>)
 80036d8:	881b      	ldrh	r3, [r3, #0]
 80036da:	b99b      	cbnz	r3, 8003704 <_ZN27Configuration_ContainerBaseC1Ev+0x190>
 80036dc:	4b08      	ldr	r3, [pc, #32]	; (8003700 <_ZN27Configuration_ContainerBaseC1Ev+0x18c>)
 80036de:	4a05      	ldr	r2, [pc, #20]	; (80036f4 <_ZN27Configuration_ContainerBaseC1Ev+0x180>)
 80036e0:	2161      	movs	r1, #97	; 0x61
 80036e2:	e7f5      	b.n	80036d0 <_ZN27Configuration_ContainerBaseC1Ev+0x15c>
 80036e4:	0802cc0c 	.word	0x0802cc0c
 80036e8:	010000f0 	.word	0x010000f0
 80036ec:	2001349c 	.word	0x2001349c
 80036f0:	0802c71c 	.word	0x0802c71c
 80036f4:	0802c81e 	.word	0x0802c81e
 80036f8:	0802c799 	.word	0x0802c799
 80036fc:	200134a0 	.word	0x200134a0
 8003700:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 8003704:	4bd9      	ldr	r3, [pc, #868]	; (8003a6c <_ZN27Configuration_ContainerBaseC1Ev+0x4f8>)
 8003706:	4629      	mov	r1, r5
 8003708:	6818      	ldr	r0, [r3, #0]
 800370a:	f004 ffc1 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800370e:	4ad8      	ldr	r2, [pc, #864]	; (8003a70 <_ZN27Configuration_ContainerBaseC1Ev+0x4fc>)
 8003710:	4603      	mov	r3, r0
 8003712:	4631      	mov	r1, r6
 8003714:	9803      	ldr	r0, [sp, #12]
 8003716:	f015 fddd 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800371a:	9903      	ldr	r1, [sp, #12]
 800371c:	f8c4 10b0 	str.w	r1, [r4, #176]	; 0xb0
    textArea1_6.resizeToCurrentText();
 8003720:	4648      	mov	r0, r9
 8003722:	f00f fb25 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003726:	49d3      	ldr	r1, [pc, #844]	; (8003a74 <_ZN27Configuration_ContainerBaseC1Ev+0x500>)
 8003728:	910c      	str	r1, [sp, #48]	; 0x30
    textArea1_6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CNHG));
 800372a:	a80c      	add	r0, sp, #48	; 0x30
 800372c:	2307      	movs	r3, #7
 800372e:	4601      	mov	r1, r0
 8003730:	4648      	mov	r0, r9
 8003732:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003736:	f00f fb3b 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_6);
 800373a:	4649      	mov	r1, r9
 800373c:	4620      	mov	r0, r4
 800373e:	f00d f982 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_5.setXY(194, 182);
 8003742:	ee19 0a90 	vmov	r0, s19
 8003746:	22b6      	movs	r2, #182	; 0xb6
 8003748:	21c2      	movs	r1, #194	; 0xc2
 800374a:	f7fe ff88 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_5.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800374e:	a80c      	add	r0, sp, #48	; 0x30
 8003750:	9000      	str	r0, [sp, #0]
 8003752:	a809      	add	r0, sp, #36	; 0x24
 8003754:	ab0b      	add	r3, sp, #44	; 0x2c
 8003756:	aa0a      	add	r2, sp, #40	; 0x28
 8003758:	4601      	mov	r1, r0
 800375a:	f04f 0901 	mov.w	r9, #1
 800375e:	ee19 0a90 	vmov	r0, s19
 8003762:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8003766:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800376a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800376e:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8003772:	f00f fe3c 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_5);
 8003776:	ee19 1a90 	vmov	r1, s19
 800377a:	4620      	mov	r0, r4
 800377c:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
 8003780:	f00d f961 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_5.setXY(10, 189);
 8003784:	22bd      	movs	r2, #189	; 0xbd
 8003786:	4631      	mov	r1, r6
 8003788:	4640      	mov	r0, r8
 800378a:	f7fe ff68 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800378e:	f8d4 30f0 	ldr.w	r3, [r4, #240]	; 0xf0
        linespace = space;
 8003792:	f8a4 5124 	strh.w	r5, [r4, #292]	; 0x124
        color = newColor;
 8003796:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800379a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800379e:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
        boundingArea = calculateBoundingArea();
 80037a2:	4641      	mov	r1, r8
 80037a4:	4650      	mov	r0, sl
 80037a6:	4798      	blx	r3
 80037a8:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80037ac:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80037b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037b4:	48b0      	ldr	r0, [pc, #704]	; (8003a78 <_ZN27Configuration_ContainerBaseC1Ev+0x504>)
 80037b6:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textArea1_5Buffer, TEXTAREA1_5_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EFV9).getText());
 80037b8:	f504 797e 	add.w	r9, r4, #1016	; 0x3f8
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d084      	beq.n	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037c0:	4bae      	ldr	r3, [pc, #696]	; (8003a7c <_ZN27Configuration_ContainerBaseC1Ev+0x508>)
 80037c2:	881b      	ldrh	r3, [r3, #0]
 80037c4:	2b01      	cmp	r3, #1
 80037c6:	d989      	bls.n	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 80037c8:	4aa8      	ldr	r2, [pc, #672]	; (8003a6c <_ZN27Configuration_ContainerBaseC1Ev+0x4f8>)
 80037ca:	2101      	movs	r1, #1
 80037cc:	6810      	ldr	r0, [r2, #0]
 80037ce:	f004 ff5f 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 80037d2:	4aa7      	ldr	r2, [pc, #668]	; (8003a70 <_ZN27Configuration_ContainerBaseC1Ev+0x4fc>)
 80037d4:	4603      	mov	r3, r0
 80037d6:	4631      	mov	r1, r6
 80037d8:	4648      	mov	r0, r9
 80037da:	f015 fd7b 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_5.resizeToCurrentText();
 80037de:	4640      	mov	r0, r8
 80037e0:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 80037e4:	f00f fac4 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea1_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TNZF));
 80037e8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
        : typedTextId(id)
 80037ec:	49a1      	ldr	r1, [pc, #644]	; (8003a74 <_ZN27Configuration_ContainerBaseC1Ev+0x500>)
 80037ee:	910c      	str	r1, [sp, #48]	; 0x30
 80037f0:	2308      	movs	r3, #8
 80037f2:	4661      	mov	r1, ip
 80037f4:	4640      	mov	r0, r8
 80037f6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80037fa:	f00f fad9 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_5);
 80037fe:	4641      	mov	r1, r8
 8003800:	4620      	mov	r0, r4
 8003802:	f00d f920 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_4.setXY(194, 146);
 8003806:	ee1a 0a10 	vmov	r0, s20
 800380a:	2292      	movs	r2, #146	; 0x92
 800380c:	21c2      	movs	r1, #194	; 0xc2
 800380e:	f7fe ff26 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_4.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003812:	f10d 0c2c 	add.w	ip, sp, #44	; 0x2c
 8003816:	4663      	mov	r3, ip
 8003818:	aa0c      	add	r2, sp, #48	; 0x30
 800381a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800381e:	9200      	str	r2, [sp, #0]
 8003820:	4662      	mov	r2, ip
 8003822:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8003826:	4661      	mov	r1, ip
 8003828:	ee1a 0a10 	vmov	r0, s20
 800382c:	f04f 0901 	mov.w	r9, #1
 8003830:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003834:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8003838:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800383c:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8003840:	f00f fdd5 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_4);
 8003844:	ee1a 1a10 	vmov	r1, s20
 8003848:	4620      	mov	r0, r4
 800384a:	f8c4 5174 	str.w	r5, [r4, #372]	; 0x174
 800384e:	f00d f8fa 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_4.setXY(22, 153);
 8003852:	2299      	movs	r2, #153	; 0x99
 8003854:	2116      	movs	r1, #22
 8003856:	4638      	mov	r0, r7
 8003858:	f7fe ff01 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800385c:	f8d4 3178 	ldr.w	r3, [r4, #376]	; 0x178
        linespace = space;
 8003860:	f8a4 51ac 	strh.w	r5, [r4, #428]	; 0x1ac
        color = newColor;
 8003864:	f04f 3cff 	mov.w	ip, #4294967295
        boundingArea = calculateBoundingArea();
 8003868:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800386c:	f8c4 c1a8 	str.w	ip, [r4, #424]	; 0x1a8
        boundingArea = calculateBoundingArea();
 8003870:	4639      	mov	r1, r7
 8003872:	4650      	mov	r0, sl
 8003874:	4798      	blx	r3
 8003876:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800387a:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
 800387e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003882:	487d      	ldr	r0, [pc, #500]	; (8003a78 <_ZN27Configuration_ContainerBaseC1Ev+0x504>)
 8003884:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textArea1_4Buffer, TEXTAREA1_4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8X1K).getText());
 8003886:	f204 480c 	addw	r8, r4, #1036	; 0x40c
 800388a:	2b00      	cmp	r3, #0
 800388c:	f43f af1d 	beq.w	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003890:	4b7a      	ldr	r3, [pc, #488]	; (8003a7c <_ZN27Configuration_ContainerBaseC1Ev+0x508>)
 8003892:	881b      	ldrh	r3, [r3, #0]
 8003894:	2b02      	cmp	r3, #2
 8003896:	f67f af21 	bls.w	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 800389a:	4a74      	ldr	r2, [pc, #464]	; (8003a6c <_ZN27Configuration_ContainerBaseC1Ev+0x4f8>)
 800389c:	2102      	movs	r1, #2
 800389e:	6810      	ldr	r0, [r2, #0]
 80038a0:	f004 fef6 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 80038a4:	4a72      	ldr	r2, [pc, #456]	; (8003a70 <_ZN27Configuration_ContainerBaseC1Ev+0x4fc>)
 80038a6:	4603      	mov	r3, r0
 80038a8:	4631      	mov	r1, r6
 80038aa:	4640      	mov	r0, r8
 80038ac:	f015 fd12 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_4.resizeToCurrentText();
 80038b0:	4638      	mov	r0, r7
 80038b2:	f8c4 81c0 	str.w	r8, [r4, #448]	; 0x1c0
 80038b6:	f00f fa5b 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea1_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DS48));
 80038ba:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
        : typedTextId(id)
 80038be:	496d      	ldr	r1, [pc, #436]	; (8003a74 <_ZN27Configuration_ContainerBaseC1Ev+0x500>)
 80038c0:	910c      	str	r1, [sp, #48]	; 0x30
 80038c2:	2309      	movs	r3, #9
 80038c4:	4661      	mov	r1, ip
 80038c6:	4638      	mov	r0, r7
 80038c8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80038cc:	f00f fa70 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_4);
 80038d0:	4639      	mov	r1, r7
 80038d2:	4620      	mov	r0, r4
 80038d4:	f00d f8b7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038d8:	af0c      	add	r7, sp, #48	; 0x30
    buttonWithIcon1_3.setXY(194, 110);
 80038da:	ee1a 0a90 	vmov	r0, s21
 80038de:	226e      	movs	r2, #110	; 0x6e
 80038e0:	21c2      	movs	r1, #194	; 0xc2
 80038e2:	f7fe febc 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038e6:	9700      	str	r7, [sp, #0]
 80038e8:	af0b      	add	r7, sp, #44	; 0x2c
 80038ea:	463b      	mov	r3, r7
 80038ec:	af0a      	add	r7, sp, #40	; 0x28
 80038ee:	463a      	mov	r2, r7
 80038f0:	af09      	add	r7, sp, #36	; 0x24
 80038f2:	4639      	mov	r1, r7
 80038f4:	ee1a 0a90 	vmov	r0, s21
 80038f8:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80038fc:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8003900:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8003904:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8003908:	f00f fd71 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_3);
 800390c:	ee1a 1a90 	vmov	r1, s21
 8003910:	4620      	mov	r0, r4
 8003912:	f8c4 51fc 	str.w	r5, [r4, #508]	; 0x1fc
 8003916:	f00d f896 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_3.setXY(22, 117);
 800391a:	2275      	movs	r2, #117	; 0x75
 800391c:	ee18 0a10 	vmov	r0, s16
 8003920:	2116      	movs	r1, #22
 8003922:	f7fe fe9c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8003926:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 800392a:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        color = newColor;
 800392e:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8003932:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003936:	f8c4 7230 	str.w	r7, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 800393a:	ee18 1a10 	vmov	r1, s16
 800393e:	4650      	mov	r0, sl
 8003940:	4798      	blx	r3
 8003942:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8003946:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800394a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800394e:	484a      	ldr	r0, [pc, #296]	; (8003a78 <_ZN27Configuration_ContainerBaseC1Ev+0x504>)
 8003950:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textArea1_3Buffer, TEXTAREA1_3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KMHD).getText());
 8003952:	f504 6784 	add.w	r7, r4, #1056	; 0x420
 8003956:	2b00      	cmp	r3, #0
 8003958:	f43f aeb7 	beq.w	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800395c:	4b47      	ldr	r3, [pc, #284]	; (8003a7c <_ZN27Configuration_ContainerBaseC1Ev+0x508>)
 800395e:	881b      	ldrh	r3, [r3, #0]
 8003960:	2b03      	cmp	r3, #3
 8003962:	f67f aebb 	bls.w	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 8003966:	4a41      	ldr	r2, [pc, #260]	; (8003a6c <_ZN27Configuration_ContainerBaseC1Ev+0x4f8>)
 8003968:	2103      	movs	r1, #3
 800396a:	6810      	ldr	r0, [r2, #0]
 800396c:	f004 fe90 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8003970:	4a3f      	ldr	r2, [pc, #252]	; (8003a70 <_ZN27Configuration_ContainerBaseC1Ev+0x4fc>)
 8003972:	4603      	mov	r3, r0
 8003974:	4631      	mov	r1, r6
 8003976:	4638      	mov	r0, r7
 8003978:	f015 fcac 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_3.resizeToCurrentText();
 800397c:	ee18 0a10 	vmov	r0, s16
 8003980:	f8c4 7248 	str.w	r7, [r4, #584]	; 0x248
 8003984:	f00f f9f4 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003988:	493a      	ldr	r1, [pc, #232]	; (8003a74 <_ZN27Configuration_ContainerBaseC1Ev+0x500>)
 800398a:	910c      	str	r1, [sp, #48]	; 0x30
    textArea1_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TD3K));
 800398c:	ee18 0a10 	vmov	r0, s16
 8003990:	a90c      	add	r1, sp, #48	; 0x30
 8003992:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 8003996:	f00f fa0b 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_3);
 800399a:	ee18 1a10 	vmov	r1, s16
 800399e:	4620      	mov	r0, r4
 80039a0:	f00d f851 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_2.setXY(194, 74);
 80039a4:	ee1b 0a10 	vmov	r0, s22
 80039a8:	224a      	movs	r2, #74	; 0x4a
 80039aa:	21c2      	movs	r1, #194	; 0xc2
 80039ac:	f7fe fe57 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039b0:	aa0c      	add	r2, sp, #48	; 0x30
 80039b2:	9200      	str	r2, [sp, #0]
 80039b4:	aa0b      	add	r2, sp, #44	; 0x2c
 80039b6:	4613      	mov	r3, r2
 80039b8:	ee1b 0a10 	vmov	r0, s22
 80039bc:	aa0a      	add	r2, sp, #40	; 0x28
 80039be:	a909      	add	r1, sp, #36	; 0x24
 80039c0:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80039c4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80039c8:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80039cc:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 80039d0:	f00f fd0d 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_2);
 80039d4:	ee1b 1a10 	vmov	r1, s22
 80039d8:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 80039dc:	4620      	mov	r0, r4
 80039de:	f00d f832 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(34, 45);
 80039e2:	222d      	movs	r2, #45	; 0x2d
 80039e4:	2122      	movs	r1, #34	; 0x22
 80039e6:	4658      	mov	r0, fp
 80039e8:	f7fe fe39 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80039ec:	f8d4 3288 	ldr.w	r3, [r4, #648]	; 0x288
        linespace = space;
 80039f0:	f8a4 52bc 	strh.w	r5, [r4, #700]	; 0x2bc
        color = newColor;
 80039f4:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80039f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80039fc:	f8c4 22b8 	str.w	r2, [r4, #696]	; 0x2b8
        boundingArea = calculateBoundingArea();
 8003a00:	4659      	mov	r1, fp
 8003a02:	4650      	mov	r0, sl
 8003a04:	4798      	blx	r3
 8003a06:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8003a0a:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8003a0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a12:	4819      	ldr	r0, [pc, #100]	; (8003a78 <_ZN27Configuration_ContainerBaseC1Ev+0x504>)
 8003a14:	6803      	ldr	r3, [r0, #0]
 8003a16:	464f      	mov	r7, r9
    Unicode::snprintf(textArea1_1Buffer, TEXTAREA1_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UKN6).getText());
 8003a18:	f204 4534 	addw	r5, r4, #1076	; 0x434
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	f43f ae54 	beq.w	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a22:	4b16      	ldr	r3, [pc, #88]	; (8003a7c <_ZN27Configuration_ContainerBaseC1Ev+0x508>)
 8003a24:	881b      	ldrh	r3, [r3, #0]
 8003a26:	2b05      	cmp	r3, #5
 8003a28:	f67f ae58 	bls.w	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 8003a2c:	f8df 903c 	ldr.w	r9, [pc, #60]	; 8003a6c <_ZN27Configuration_ContainerBaseC1Ev+0x4f8>
        : typedTextId(id)
 8003a30:	f8df 8040 	ldr.w	r8, [pc, #64]	; 8003a74 <_ZN27Configuration_ContainerBaseC1Ev+0x500>
        return texts->getText(typedTextId);
 8003a34:	f8d9 0000 	ldr.w	r0, [r9]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a38:	f8df a03c 	ldr.w	sl, [pc, #60]	; 8003a78 <_ZN27Configuration_ContainerBaseC1Ev+0x504>
        return texts->getText(typedTextId);
 8003a3c:	2105      	movs	r1, #5
 8003a3e:	f004 fe27 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8003a42:	4a0b      	ldr	r2, [pc, #44]	; (8003a70 <_ZN27Configuration_ContainerBaseC1Ev+0x4fc>)
 8003a44:	4603      	mov	r3, r0
 8003a46:	210a      	movs	r1, #10
 8003a48:	4628      	mov	r0, r5
 8003a4a:	f015 fc43 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_1.resizeToCurrentText();
 8003a4e:	4658      	mov	r0, fp
 8003a50:	f8c4 52d0 	str.w	r5, [r4, #720]	; 0x2d0
 8003a54:	f00f f98c 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a58:	230c      	movs	r3, #12
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GZ9R));
 8003a5a:	4658      	mov	r0, fp
 8003a5c:	a90c      	add	r1, sp, #48	; 0x30
 8003a5e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003a62:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8003a66:	f00f f9a3 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a6a:	e009      	b.n	8003a80 <_ZN27Configuration_ContainerBaseC1Ev+0x50c>
 8003a6c:	200134a8 	.word	0x200134a8
 8003a70:	0802c856 	.word	0x0802c856
 8003a74:	0802c8cc 	.word	0x0802c8cc
 8003a78:	2001349c 	.word	0x2001349c
 8003a7c:	200134a0 	.word	0x200134a0
    add(textArea1_1);
 8003a80:	4659      	mov	r1, fp
 8003a82:	4620      	mov	r0, r4
 8003a84:	f00c ffdf 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_1.setXY(194, 38);
 8003a88:	ee1b 0a90 	vmov	r0, s23
 8003a8c:	2226      	movs	r2, #38	; 0x26
 8003a8e:	21c2      	movs	r1, #194	; 0xc2
 8003a90:	f7fe fde5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a94:	aa0c      	add	r2, sp, #48	; 0x30
 8003a96:	a90b      	add	r1, sp, #44	; 0x2c
 8003a98:	2500      	movs	r5, #0
 8003a9a:	460b      	mov	r3, r1
 8003a9c:	ee1b 0a90 	vmov	r0, s23
 8003aa0:	260a      	movs	r6, #10
 8003aa2:	9200      	str	r2, [sp, #0]
 8003aa4:	a909      	add	r1, sp, #36	; 0x24
 8003aa6:	aa0a      	add	r2, sp, #40	; 0x28
 8003aa8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8003aac:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003ab0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8003ab4:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8003ab8:	f00f fc99 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_1);
 8003abc:	ee1b 1a90 	vmov	r1, s23
 8003ac0:	4620      	mov	r0, r4
 8003ac2:	f8c4 530c 	str.w	r5, [r4, #780]	; 0x30c
 8003ac6:	f00c ffbe 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_2.setXY(22, 81);
 8003aca:	ee18 0a90 	vmov	r0, s17
 8003ace:	2251      	movs	r2, #81	; 0x51
 8003ad0:	2116      	movs	r1, #22
 8003ad2:	f7fe fdc4 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ad6:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 8003ada:	f8a4 5344 	strh.w	r5, [r4, #836]	; 0x344
        color = newColor;
 8003ade:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8003ae2:	e9c4 57d3 	strd	r5, r7, [r4, #844]	; 0x34c
        color = newColor;
 8003ae6:	f8c4 7340 	str.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8003aea:	f8c4 5354 	str.w	r5, [r4, #852]	; 0x354
    Unicode::snprintf(textArea1_2Buffer, TEXTAREA1_2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QWFM).getText());
 8003aee:	f504 6b89 	add.w	fp, r4, #1096	; 0x448
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	f43f ade9 	beq.w	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003af8:	4b42      	ldr	r3, [pc, #264]	; (8003c04 <_ZN27Configuration_ContainerBaseC1Ev+0x690>)
 8003afa:	881b      	ldrh	r3, [r3, #0]
 8003afc:	2b04      	cmp	r3, #4
 8003afe:	f67f aded 	bls.w	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 8003b02:	2104      	movs	r1, #4
 8003b04:	f8d9 0000 	ldr.w	r0, [r9]
 8003b08:	f004 fdc2 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8003b0c:	4a3e      	ldr	r2, [pc, #248]	; (8003c08 <_ZN27Configuration_ContainerBaseC1Ev+0x694>)
 8003b0e:	4603      	mov	r3, r0
 8003b10:	4631      	mov	r1, r6
 8003b12:	4658      	mov	r0, fp
 8003b14:	f015 fbde 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_2.resizeToCurrentText();
 8003b18:	ee18 0a90 	vmov	r0, s17
 8003b1c:	f8c4 b358 	str.w	fp, [r4, #856]	; 0x358
 8003b20:	f00f f926 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b24:	230b      	movs	r3, #11
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIHR));
 8003b26:	ee18 0a90 	vmov	r0, s17
 8003b2a:	a90c      	add	r1, sp, #48	; 0x30
 8003b2c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003b30:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8003b34:	f00f f93c 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_2);
 8003b38:	ee18 1a90 	vmov	r1, s17
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	f00c ff82 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(194, 2);
 8003b42:	ee1c 0a10 	vmov	r0, s24
 8003b46:	2202      	movs	r2, #2
 8003b48:	21c2      	movs	r1, #194	; 0xc2
 8003b4a:	f7fe fd88 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8003b4e:	f04f 0201 	mov.w	r2, #1
 8003b52:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b56:	aa0c      	add	r2, sp, #48	; 0x30
 8003b58:	9200      	str	r2, [sp, #0]
 8003b5a:	aa0b      	add	r2, sp, #44	; 0x2c
 8003b5c:	4613      	mov	r3, r2
 8003b5e:	ee1c 0a10 	vmov	r0, s24
 8003b62:	aa0a      	add	r2, sp, #40	; 0x28
 8003b64:	a909      	add	r1, sp, #36	; 0x24
 8003b66:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003b6a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8003b6e:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8003b72:	f00f fc3c 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1);
 8003b76:	ee1c 1a10 	vmov	r1, s24
 8003b7a:	f8c4 5394 	str.w	r5, [r4, #916]	; 0x394
 8003b7e:	4620      	mov	r0, r4
 8003b80:	f00c ff61 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(34, 9);
 8003b84:	ee19 0a10 	vmov	r0, s18
 8003b88:	2209      	movs	r2, #9
 8003b8a:	2122      	movs	r1, #34	; 0x22
 8003b8c:	f7fe fd67 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b90:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 8003b94:	f8a4 53cc 	strh.w	r5, [r4, #972]	; 0x3cc
        boundingArea = calculateBoundingArea();
 8003b98:	e9c4 57f5 	strd	r5, r7, [r4, #980]	; 0x3d4
 8003b9c:	f8c4 53dc 	str.w	r5, [r4, #988]	; 0x3dc
        color = newColor;
 8003ba0:	f8c4 73c8 	str.w	r7, [r4, #968]	; 0x3c8
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L0JG).getText());
 8003ba4:	f204 455c 	addw	r5, r4, #1116	; 0x45c
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	f43f ad8e 	beq.w	80036ca <_ZN27Configuration_ContainerBaseC1Ev+0x156>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bae:	4b15      	ldr	r3, [pc, #84]	; (8003c04 <_ZN27Configuration_ContainerBaseC1Ev+0x690>)
 8003bb0:	881b      	ldrh	r3, [r3, #0]
 8003bb2:	2b06      	cmp	r3, #6
 8003bb4:	f67f ad92 	bls.w	80036dc <_ZN27Configuration_ContainerBaseC1Ev+0x168>
        return texts->getText(typedTextId);
 8003bb8:	f8d9 0000 	ldr.w	r0, [r9]
 8003bbc:	2106      	movs	r1, #6
 8003bbe:	f004 fd67 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8003bc2:	4a11      	ldr	r2, [pc, #68]	; (8003c08 <_ZN27Configuration_ContainerBaseC1Ev+0x694>)
 8003bc4:	4603      	mov	r3, r0
 8003bc6:	4631      	mov	r1, r6
 8003bc8:	4628      	mov	r0, r5
 8003bca:	f015 fb83 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8003bce:	ee19 0a10 	vmov	r0, s18
 8003bd2:	f8c4 53e0 	str.w	r5, [r4, #992]	; 0x3e0
 8003bd6:	f00f f8cb 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003bda:	230d      	movs	r3, #13
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AGRP));
 8003bdc:	ee19 0a10 	vmov	r0, s18
 8003be0:	a90c      	add	r1, sp, #48	; 0x30
 8003be2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003be6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8003bea:	f00f f8e1 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8003bee:	4620      	mov	r0, r4
 8003bf0:	ee19 1a10 	vmov	r1, s18
 8003bf4:	f00c ff27 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	b00f      	add	sp, #60	; 0x3c
 8003bfc:	ecbd 8b0a 	vpop	{d8-d12}
 8003c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c04:	200134a0 	.word	0x200134a0
 8003c08:	0802c856 	.word	0x0802c856

08003c0c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003c0c:	4770      	bx	lr

08003c0e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003c0e:	4770      	bx	lr

08003c10 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003c10:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003c14:	6808      	ldr	r0, [r1, #0]
 8003c16:	6849      	ldr	r1, [r1, #4]
 8003c18:	c303      	stmia	r3!, {r0, r1}
    }
 8003c1a:	4770      	bx	lr

08003c1c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003c1c:	4770      	bx	lr

08003c1e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003c1e:	4770      	bx	lr

08003c20 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003c20:	6041      	str	r1, [r0, #4]
    }
 8003c22:	4770      	bx	lr

08003c24 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003c24:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c26:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003c28:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003c2c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003c30:	8002      	strh	r2, [r0, #0]
 8003c32:	8042      	strh	r2, [r0, #2]
 8003c34:	8084      	strh	r4, [r0, #4]
 8003c36:	80c1      	strh	r1, [r0, #6]
        }
 8003c38:	bd10      	pop	{r4, pc}

08003c3a <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003c3a:	4770      	bx	lr

08003c3c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003c3c:	4770      	bx	lr
	...

08003c40 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003c40:	4b06      	ldr	r3, [pc, #24]	; (8003c5c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003c42:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c46:	2300      	movs	r3, #0
 8003c48:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003c4c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c50:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c54:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003c58:	4770      	bx	lr
 8003c5a:	bf00      	nop
 8003c5c:	08003ffd 	.word	0x08003ffd

08003c60 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003c60:	2301      	movs	r3, #1
 8003c62:	7203      	strb	r3, [r0, #8]
    }
 8003c64:	4770      	bx	lr

08003c66 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003c66:	4770      	bx	lr

08003c68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003c68:	4770      	bx	lr

08003c6a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003c6a:	4770      	bx	lr

08003c6c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003c6c:	4770      	bx	lr

08003c6e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003c6e:	4770      	bx	lr

08003c70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003c70:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003c72:	6840      	ldr	r0, [r0, #4]
 8003c74:	6803      	ldr	r3, [r0, #0]
 8003c76:	3110      	adds	r1, #16
 8003c78:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003c7a:	4718      	bx	r3

08003c7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003c7c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003c7e:	6840      	ldr	r0, [r0, #4]
 8003c80:	6803      	ldr	r3, [r0, #0]
 8003c82:	3110      	adds	r1, #16
 8003c84:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003c86:	4718      	bx	r3

08003c88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003c88:	4770      	bx	lr

08003c8a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003c8a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003c8c:	6840      	ldr	r0, [r0, #4]
 8003c8e:	6803      	ldr	r3, [r0, #0]
 8003c90:	3110      	adds	r1, #16
 8003c92:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003c94:	4718      	bx	r3

08003c96 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003c96:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003c98:	6840      	ldr	r0, [r0, #4]
 8003c9a:	6803      	ldr	r3, [r0, #0]
 8003c9c:	3110      	adds	r1, #16
 8003c9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ca0:	4718      	bx	r3

08003ca2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003ca2:	4770      	bx	lr

08003ca4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003ca4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003ca6:	68c2      	ldr	r2, [r0, #12]
 8003ca8:	6841      	ldr	r1, [r0, #4]
 8003caa:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003cac:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003cae:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003cb2:	07d2      	lsls	r2, r2, #31
 8003cb4:	bf48      	it	mi
 8003cb6:	590a      	ldrmi	r2, [r1, r4]
 8003cb8:	689b      	ldr	r3, [r3, #8]
    }
 8003cba:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003cbe:	bf48      	it	mi
 8003cc0:	58d3      	ldrmi	r3, [r2, r3]
 8003cc2:	4718      	bx	r3

08003cc4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003cc4:	6843      	ldr	r3, [r0, #4]
 8003cc6:	b12b      	cbz	r3, 8003cd4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003cc8:	6883      	ldr	r3, [r0, #8]
 8003cca:	b92b      	cbnz	r3, 8003cd8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003ccc:	68c0      	ldr	r0, [r0, #12]
 8003cce:	f000 0001 	and.w	r0, r0, #1
 8003cd2:	4770      	bx	lr
 8003cd4:	4618      	mov	r0, r3
 8003cd6:	4770      	bx	lr
 8003cd8:	2001      	movs	r0, #1
    }
 8003cda:	4770      	bx	lr

08003cdc <_ZN8touchgfx12NoTransitionD0Ev>:
 8003cdc:	b510      	push	{r4, lr}
 8003cde:	210c      	movs	r1, #12
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	f026 f9fe 	bl	802a0e2 <_ZdlPvj>
 8003ce6:	4620      	mov	r0, r4
 8003ce8:	bd10      	pop	{r4, pc}

08003cea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003cea:	b510      	push	{r4, lr}
 8003cec:	2110      	movs	r1, #16
 8003cee:	4604      	mov	r4, r0
 8003cf0:	f026 f9f7 	bl	802a0e2 <_ZdlPvj>
 8003cf4:	4620      	mov	r0, r4
 8003cf6:	bd10      	pop	{r4, pc}

08003cf8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003cf8:	b510      	push	{r4, lr}
 8003cfa:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003cfe:	4604      	mov	r4, r0
 8003d00:	f026 f9ef 	bl	802a0e2 <_ZdlPvj>
 8003d04:	4620      	mov	r0, r4
 8003d06:	bd10      	pop	{r4, pc}

08003d08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003d08:	b510      	push	{r4, lr}
 8003d0a:	2138      	movs	r1, #56	; 0x38
 8003d0c:	4604      	mov	r4, r0
 8003d0e:	f026 f9e8 	bl	802a0e2 <_ZdlPvj>
 8003d12:	4620      	mov	r0, r4
 8003d14:	bd10      	pop	{r4, pc}

08003d16 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003d16:	b510      	push	{r4, lr}
 8003d18:	2128      	movs	r1, #40	; 0x28
 8003d1a:	4604      	mov	r4, r0
 8003d1c:	f026 f9e1 	bl	802a0e2 <_ZdlPvj>
 8003d20:	4620      	mov	r0, r4
 8003d22:	bd10      	pop	{r4, pc}

08003d24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003d24:	b510      	push	{r4, lr}
 8003d26:	2138      	movs	r1, #56	; 0x38
 8003d28:	4604      	mov	r4, r0
 8003d2a:	f026 f9da 	bl	802a0e2 <_ZdlPvj>
 8003d2e:	4620      	mov	r0, r4
 8003d30:	bd10      	pop	{r4, pc}

08003d32 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003d32:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003d34:	f012 f920 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 8003d38:	6803      	ldr	r3, [r0, #0]
    }
 8003d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003d3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d40:	4718      	bx	r3
	...

08003d44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003d44:	b513      	push	{r0, r1, r4, lr}
 8003d46:	4604      	mov	r4, r0
        animationCounter++;
 8003d48:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003d4a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003d4c:	3001      	adds	r0, #1
 8003d4e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003d50:	4298      	cmp	r0, r3
        animationCounter++;
 8003d52:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003d54:	d905      	bls.n	8003d62 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003d56:	2301      	movs	r3, #1
 8003d58:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	72a3      	strb	r3, [r4, #10]
    }
 8003d5e:	b002      	add	sp, #8
 8003d60:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003d62:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003d66:	2100      	movs	r1, #0
 8003d68:	f013 ff76 	bl	8017c58 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003d6c:	f010 0201 	ands.w	r2, r0, #1
 8003d70:	b283      	uxth	r3, r0
 8003d72:	d12a      	bne.n	8003dca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003d74:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003d76:	4a19      	ldr	r2, [pc, #100]	; (8003ddc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003d78:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003d7c:	89e3      	ldrh	r3, [r4, #14]
 8003d7e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003d80:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003d84:	82a0      	strh	r0, [r4, #20]
 8003d86:	2000      	movs	r0, #0
 8003d88:	1ad2      	subs	r2, r2, r3
 8003d8a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003d8e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003d90:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003d92:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003d94:	4a12      	ldr	r2, [pc, #72]	; (8003de0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003d96:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003d9a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003d9c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003da0:	691b      	ldr	r3, [r3, #16]
 8003da2:	f8ad 1000 	strh.w	r1, [sp]
 8003da6:	f8ad 2006 	strh.w	r2, [sp, #6]
 8003daa:	4669      	mov	r1, sp
 8003dac:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003dae:	7aa3      	ldrb	r3, [r4, #10]
 8003db0:	2b01      	cmp	r3, #1
 8003db2:	d1d4      	bne.n	8003d5e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003db4:	4b0b      	ldr	r3, [pc, #44]	; (8003de4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003db6:	781b      	ldrb	r3, [r3, #0]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d0d0      	beq.n	8003d5e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003dbc:	f012 f8dc 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003dc0:	b002      	add	sp, #8
 8003dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003dc6:	f012 b8dd 	b.w	8015f84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003dca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003dce:	2800      	cmp	r0, #0
 8003dd0:	bfd8      	it	le
 8003dd2:	460a      	movle	r2, r1
 8003dd4:	4413      	add	r3, r2
 8003dd6:	81e3      	strh	r3, [r4, #14]
 8003dd8:	e7cd      	b.n	8003d76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8003dda:	bf00      	nop
 8003ddc:	20013438 	.word	0x20013438
 8003de0:	2001343a 	.word	0x2001343a
 8003de4:	20013442 	.word	0x20013442

08003de8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003de8:	b510      	push	{r4, lr}
 8003dea:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003dec:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003df0:	b158      	cbz	r0, 8003e0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003df2:	6803      	ldr	r3, [r0, #0]
 8003df4:	68db      	ldr	r3, [r3, #12]
 8003df6:	4798      	blx	r3
 8003df8:	b138      	cbz	r0, 8003e0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003dfa:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8003dfe:	6803      	ldr	r3, [r0, #0]
 8003e00:	689b      	ldr	r3, [r3, #8]
 8003e02:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003e04:	2300      	movs	r3, #0
 8003e06:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003e0a:	bd10      	pop	{r4, pc}

08003e0c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003e0c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e10:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003e14:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e16:	68a8      	ldr	r0, [r5, #8]
 8003e18:	6803      	ldr	r3, [r0, #0]
 8003e1a:	6a1b      	ldr	r3, [r3, #32]
 8003e1c:	4798      	blx	r3
 8003e1e:	2897      	cmp	r0, #151	; 0x97
 8003e20:	d805      	bhi.n	8003e2e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8003e22:	4b46      	ldr	r3, [pc, #280]	; (8003f3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003e24:	4a46      	ldr	r2, [pc, #280]	; (8003f40 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003e26:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e28:	4846      	ldr	r0, [pc, #280]	; (8003f44 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8003e2a:	f026 ff6d 	bl	802ad08 <__assert_func>
 8003e2e:	6868      	ldr	r0, [r5, #4]
 8003e30:	6803      	ldr	r3, [r0, #0]
 8003e32:	6a1b      	ldr	r3, [r3, #32]
 8003e34:	4798      	blx	r3
 8003e36:	280f      	cmp	r0, #15
 8003e38:	d803      	bhi.n	8003e42 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8003e3a:	4b43      	ldr	r3, [pc, #268]	; (8003f48 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003e3c:	4a40      	ldr	r2, [pc, #256]	; (8003f40 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003e3e:	21a4      	movs	r1, #164	; 0xa4
 8003e40:	e7f2      	b.n	8003e28 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e42:	68e8      	ldr	r0, [r5, #12]
 8003e44:	6803      	ldr	r3, [r0, #0]
 8003e46:	6a1b      	ldr	r3, [r3, #32]
 8003e48:	4798      	blx	r3
 8003e4a:	280b      	cmp	r0, #11
 8003e4c:	d803      	bhi.n	8003e56 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003e4e:	4b3f      	ldr	r3, [pc, #252]	; (8003f4c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003e50:	4a3b      	ldr	r2, [pc, #236]	; (8003f40 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003e52:	21a5      	movs	r1, #165	; 0xa5
 8003e54:	e7e8      	b.n	8003e28 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003e56:	f012 f88f 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e5a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003f54 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003e5e:	3004      	adds	r0, #4
 8003e60:	f012 f8f0 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e64:	f8d9 0000 	ldr.w	r0, [r9]
 8003e68:	b110      	cbz	r0, 8003e70 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003e6a:	6803      	ldr	r3, [r0, #0]
 8003e6c:	68db      	ldr	r3, [r3, #12]
 8003e6e:	4798      	blx	r3
    if (*currentTrans)
 8003e70:	f8d9 0000 	ldr.w	r0, [r9]
 8003e74:	b110      	cbz	r0, 8003e7c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003e76:	6803      	ldr	r3, [r0, #0]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	4798      	blx	r3
    if (*currentScreen)
 8003e7c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003f58 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003e80:	f8d8 0000 	ldr.w	r0, [r8]
 8003e84:	b110      	cbz	r0, 8003e8c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003e86:	6803      	ldr	r3, [r0, #0]
 8003e88:	695b      	ldr	r3, [r3, #20]
 8003e8a:	4798      	blx	r3
    if (*currentPresenter)
 8003e8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e90:	b110      	cbz	r0, 8003e98 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003e92:	6803      	ldr	r3, [r0, #0]
 8003e94:	685b      	ldr	r3, [r3, #4]
 8003e96:	4798      	blx	r3
    if (*currentScreen)
 8003e98:	f8d8 0000 	ldr.w	r0, [r8]
 8003e9c:	b110      	cbz	r0, 8003ea4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003e9e:	6803      	ldr	r3, [r0, #0]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	4798      	blx	r3
    if (*currentPresenter)
 8003ea4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ea8:	b110      	cbz	r0, 8003eb0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003eaa:	6803      	ldr	r3, [r0, #0]
 8003eac:	689b      	ldr	r3, [r3, #8]
 8003eae:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003eb0:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003eb2:	6803      	ldr	r3, [r0, #0]
 8003eb4:	2100      	movs	r1, #0
 8003eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eb8:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003eba:	f04f 0b00 	mov.w	fp, #0
 8003ebe:	4b24      	ldr	r3, [pc, #144]	; (8003f50 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003ec0:	6003      	str	r3, [r0, #0]
 8003ec2:	4604      	mov	r4, r0
 8003ec4:	f8c0 b004 	str.w	fp, [r0, #4]
 8003ec8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ecc:	68a8      	ldr	r0, [r5, #8]
 8003ece:	6803      	ldr	r3, [r0, #0]
 8003ed0:	4659      	mov	r1, fp
 8003ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ed4:	4798      	blx	r3
 8003ed6:	4606      	mov	r6, r0
 8003ed8:	f005 f8bc 	bl	8009054 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003edc:	6868      	ldr	r0, [r5, #4]
 8003ede:	6803      	ldr	r3, [r0, #0]
 8003ee0:	4659      	mov	r1, fp
 8003ee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ee4:	4798      	blx	r3
 8003ee6:	4631      	mov	r1, r6
 8003ee8:	4605      	mov	r5, r0
 8003eea:	f005 f88f 	bl	800900c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003eee:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ef2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ef6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003efa:	b1e5      	cbz	r5, 8003f36 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003efc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003efe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f02:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003f04:	f8c5 a008 	str.w	sl, [r5, #8]
 8003f08:	4630      	mov	r0, r6
 8003f0a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003f0c:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003f0e:	4798      	blx	r3
    newPresenter->activate();
 8003f10:	682b      	ldr	r3, [r5, #0]
 8003f12:	4628      	mov	r0, r5
 8003f14:	681b      	ldr	r3, [r3, #0]
 8003f16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f18:	4621      	mov	r1, r4
 8003f1a:	4630      	mov	r0, r6
 8003f1c:	f013 fe58 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f20:	6823      	ldr	r3, [r4, #0]
 8003f22:	4620      	mov	r0, r4
 8003f24:	691b      	ldr	r3, [r3, #16]
 8003f26:	4798      	blx	r3
    newTransition->invalidate();
 8003f28:	6823      	ldr	r3, [r4, #0]
 8003f2a:	695b      	ldr	r3, [r3, #20]
 8003f2c:	4620      	mov	r0, r4
}
 8003f2e:	b001      	add	sp, #4
 8003f30:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f34:	4718      	bx	r3
    model->bind(newPresenter);
 8003f36:	462b      	mov	r3, r5
 8003f38:	e7e1      	b.n	8003efe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003f3a:	bf00      	nop
 8003f3c:	0802cc98 	.word	0x0802cc98
 8003f40:	0802cd26 	.word	0x0802cd26
 8003f44:	0802ce34 	.word	0x0802ce34
 8003f48:	0802ce7b 	.word	0x0802ce7b
 8003f4c:	0802cf1e 	.word	0x0802cf1e
 8003f50:	0802e33c 	.word	0x0802e33c
 8003f54:	2001348c 	.word	0x2001348c
 8003f58:	20013488 	.word	0x20013488

08003f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003f5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003f5e:	4604      	mov	r4, r0
        animationCounter++;
 8003f60:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003f62:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003f64:	3001      	adds	r0, #1
 8003f66:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003f68:	4298      	cmp	r0, r3
        animationCounter++;
 8003f6a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003f6c:	d905      	bls.n	8003f7a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003f6e:	2301      	movs	r3, #1
 8003f70:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003f72:	2300      	movs	r3, #0
 8003f74:	72a3      	strb	r3, [r4, #10]
    }
 8003f76:	b003      	add	sp, #12
 8003f78:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003f7a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003f7e:	2100      	movs	r1, #0
 8003f80:	f013 fe6a 	bl	8017c58 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003f84:	f010 0201 	ands.w	r2, r0, #1
 8003f88:	b283      	uxth	r3, r0
 8003f8a:	d128      	bne.n	8003fde <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003f8c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003f8e:	4b18      	ldr	r3, [pc, #96]	; (8003ff0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003f90:	4818      	ldr	r0, [pc, #96]	; (8003ff4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003f92:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003f94:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003f96:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003f98:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003f9c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003fa0:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003fa2:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003fa4:	442b      	add	r3, r5
 8003fa6:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003fa8:	b212      	sxth	r2, r2
 8003faa:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003fae:	6803      	ldr	r3, [r0, #0]
 8003fb0:	8322      	strh	r2, [r4, #24]
 8003fb2:	f8ad 2000 	strh.w	r2, [sp]
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	691b      	ldr	r3, [r3, #16]
 8003fba:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003fbe:	4669      	mov	r1, sp
 8003fc0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003fc2:	7aa3      	ldrb	r3, [r4, #10]
 8003fc4:	2b01      	cmp	r3, #1
 8003fc6:	d1d6      	bne.n	8003f76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003fc8:	4b0b      	ldr	r3, [pc, #44]	; (8003ff8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003fca:	781b      	ldrb	r3, [r3, #0]
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d0d2      	beq.n	8003f76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003fd0:	f011 ffd2 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003fd4:	b003      	add	sp, #12
 8003fd6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003fda:	f011 bfd3 	b.w	8015f84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003fde:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003fe2:	2800      	cmp	r0, #0
 8003fe4:	bfd8      	it	le
 8003fe6:	460a      	movle	r2, r1
 8003fe8:	4413      	add	r3, r2
 8003fea:	81e3      	strh	r3, [r4, #14]
 8003fec:	e7cf      	b.n	8003f8e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003fee:	bf00      	nop
 8003ff0:	20013438 	.word	0x20013438
 8003ff4:	2001343a 	.word	0x2001343a
 8003ff8:	20013442 	.word	0x20013442

08003ffc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003ffc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004000:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004004:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004006:	68a8      	ldr	r0, [r5, #8]
 8004008:	6803      	ldr	r3, [r0, #0]
 800400a:	6a1b      	ldr	r3, [r3, #32]
 800400c:	4798      	blx	r3
 800400e:	f241 137b 	movw	r3, #4475	; 0x117b
 8004012:	4298      	cmp	r0, r3
 8004014:	d805      	bhi.n	8004022 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8004016:	4b46      	ldr	r3, [pc, #280]	; (8004130 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8004018:	4a46      	ldr	r2, [pc, #280]	; (8004134 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800401a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800401c:	4846      	ldr	r0, [pc, #280]	; (8004138 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800401e:	f026 fe73 	bl	802ad08 <__assert_func>
 8004022:	6868      	ldr	r0, [r5, #4]
 8004024:	6803      	ldr	r3, [r0, #0]
 8004026:	6a1b      	ldr	r3, [r3, #32]
 8004028:	4798      	blx	r3
 800402a:	280f      	cmp	r0, #15
 800402c:	d803      	bhi.n	8004036 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800402e:	4b43      	ldr	r3, [pc, #268]	; (800413c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8004030:	4a40      	ldr	r2, [pc, #256]	; (8004134 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004032:	21a4      	movs	r1, #164	; 0xa4
 8004034:	e7f2      	b.n	800401c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004036:	68e8      	ldr	r0, [r5, #12]
 8004038:	6803      	ldr	r3, [r0, #0]
 800403a:	6a1b      	ldr	r3, [r3, #32]
 800403c:	4798      	blx	r3
 800403e:	280b      	cmp	r0, #11
 8004040:	d803      	bhi.n	800404a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004042:	4b3f      	ldr	r3, [pc, #252]	; (8004140 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004044:	4a3b      	ldr	r2, [pc, #236]	; (8004134 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004046:	21a5      	movs	r1, #165	; 0xa5
 8004048:	e7e8      	b.n	800401c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800404a:	f011 ff95 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800404e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004148 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004052:	3004      	adds	r0, #4
 8004054:	f011 fff6 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004058:	f8d9 0000 	ldr.w	r0, [r9]
 800405c:	b110      	cbz	r0, 8004064 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800405e:	6803      	ldr	r3, [r0, #0]
 8004060:	68db      	ldr	r3, [r3, #12]
 8004062:	4798      	blx	r3
    if (*currentTrans)
 8004064:	f8d9 0000 	ldr.w	r0, [r9]
 8004068:	b110      	cbz	r0, 8004070 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800406a:	6803      	ldr	r3, [r0, #0]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	4798      	blx	r3
    if (*currentScreen)
 8004070:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800414c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004074:	f8d8 0000 	ldr.w	r0, [r8]
 8004078:	b110      	cbz	r0, 8004080 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800407a:	6803      	ldr	r3, [r0, #0]
 800407c:	695b      	ldr	r3, [r3, #20]
 800407e:	4798      	blx	r3
    if (*currentPresenter)
 8004080:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004084:	b110      	cbz	r0, 800408c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004086:	6803      	ldr	r3, [r0, #0]
 8004088:	685b      	ldr	r3, [r3, #4]
 800408a:	4798      	blx	r3
    if (*currentScreen)
 800408c:	f8d8 0000 	ldr.w	r0, [r8]
 8004090:	b110      	cbz	r0, 8004098 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004092:	6803      	ldr	r3, [r0, #0]
 8004094:	681b      	ldr	r3, [r3, #0]
 8004096:	4798      	blx	r3
    if (*currentPresenter)
 8004098:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800409c:	b110      	cbz	r0, 80040a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800409e:	6803      	ldr	r3, [r0, #0]
 80040a0:	689b      	ldr	r3, [r3, #8]
 80040a2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040a4:	68e8      	ldr	r0, [r5, #12]
 80040a6:	6803      	ldr	r3, [r0, #0]
 80040a8:	2100      	movs	r1, #0
 80040aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ac:	4798      	blx	r3
 80040ae:	f04f 0b00 	mov.w	fp, #0
 80040b2:	4b24      	ldr	r3, [pc, #144]	; (8004144 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80040b4:	6003      	str	r3, [r0, #0]
 80040b6:	4604      	mov	r4, r0
 80040b8:	f8c0 b004 	str.w	fp, [r0, #4]
 80040bc:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040c0:	68a8      	ldr	r0, [r5, #8]
 80040c2:	6803      	ldr	r3, [r0, #0]
 80040c4:	4659      	mov	r1, fp
 80040c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040c8:	4798      	blx	r3
 80040ca:	4606      	mov	r6, r0
 80040cc:	f004 fc66 	bl	800899c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040d0:	6868      	ldr	r0, [r5, #4]
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	4659      	mov	r1, fp
 80040d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040d8:	4798      	blx	r3
 80040da:	4631      	mov	r1, r6
 80040dc:	4605      	mov	r5, r0
 80040de:	f004 fc37 	bl	8008950 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80040e2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80040e6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040ea:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040ee:	b1e5      	cbz	r5, 800412a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80040f0:	1d2b      	adds	r3, r5, #4
 80040f2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040f6:	6833      	ldr	r3, [r6, #0]
 80040f8:	f8c5 a008 	str.w	sl, [r5, #8]
 80040fc:	4630      	mov	r0, r6
 80040fe:	68db      	ldr	r3, [r3, #12]
 8004100:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004102:	4798      	blx	r3
    newPresenter->activate();
 8004104:	682b      	ldr	r3, [r5, #0]
 8004106:	4628      	mov	r0, r5
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800410c:	4621      	mov	r1, r4
 800410e:	4630      	mov	r0, r6
 8004110:	f013 fd5e 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004114:	6823      	ldr	r3, [r4, #0]
 8004116:	4620      	mov	r0, r4
 8004118:	691b      	ldr	r3, [r3, #16]
 800411a:	4798      	blx	r3
    newTransition->invalidate();
 800411c:	6823      	ldr	r3, [r4, #0]
 800411e:	695b      	ldr	r3, [r3, #20]
 8004120:	4620      	mov	r0, r4
}
 8004122:	b001      	add	sp, #4
 8004124:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004128:	4718      	bx	r3
    model->bind(newPresenter);
 800412a:	462b      	mov	r3, r5
 800412c:	e7e1      	b.n	80040f2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800412e:	bf00      	nop
 8004130:	0802cc98 	.word	0x0802cc98
 8004134:	0802cfc1 	.word	0x0802cfc1
 8004138:	0802ce34 	.word	0x0802ce34
 800413c:	0802ce7b 	.word	0x0802ce7b
 8004140:	0802cf1e 	.word	0x0802cf1e
 8004144:	0802e33c 	.word	0x0802e33c
 8004148:	2001348c 	.word	0x2001348c
 800414c:	20013488 	.word	0x20013488

08004150 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004150:	4b04      	ldr	r3, [pc, #16]	; (8004164 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004158:	b10a      	cbz	r2, 800415e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800415a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800415c:	b900      	cbnz	r0, 8004160 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800415e:	6898      	ldr	r0, [r3, #8]
    }
 8004160:	4770      	bx	lr
 8004162:	bf00      	nop
 8004164:	20013444 	.word	0x20013444

08004168 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800416a:	4604      	mov	r4, r0
 800416c:	4617      	mov	r7, r2
 800416e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004170:	f012 f836 	bl	80161e0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004174:	4b10      	ldr	r3, [pc, #64]	; (80041b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004176:	601c      	str	r4, [r3, #0]
      model(m)
 8004178:	4b10      	ldr	r3, [pc, #64]	; (80041bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800417a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800417c:	4b10      	ldr	r3, [pc, #64]	; (80041c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800417e:	2500      	movs	r5, #0
 8004180:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004184:	4b0f      	ldr	r3, [pc, #60]	; (80041c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004186:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800418a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800418c:	6803      	ldr	r3, [r0, #0]
 800418e:	2101      	movs	r1, #1
 8004190:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004192:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004196:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800419a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800419c:	4628      	mov	r0, r5
 800419e:	f004 fa3b 	bl	8008618 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80041a2:	f7ff ffd5 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 80041a6:	f01b fc1e 	bl	801f9e6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80041aa:	f7ff ffd1 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 80041ae:	f01b fc95 	bl	801fadc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80041b2:	4620      	mov	r0, r4
 80041b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80041b6:	bf00      	nop
 80041b8:	20013498 	.word	0x20013498
 80041bc:	0802e2e8 	.word	0x0802e2e8
 80041c0:	0802e2d0 	.word	0x0802e2d0
 80041c4:	20013444 	.word	0x20013444

080041c8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80041c8:	4b06      	ldr	r3, [pc, #24]	; (80041e4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80041ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80041ce:	2300      	movs	r3, #0
 80041d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80041d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80041d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80041dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80041e0:	4770      	bx	lr
 80041e2:	bf00      	nop
 80041e4:	08003ffd 	.word	0x08003ffd

080041e8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80041e8:	4b06      	ldr	r3, [pc, #24]	; (8004204 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80041ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80041ee:	2300      	movs	r3, #0
 80041f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80041f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80041f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80041fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004200:	4770      	bx	lr
 8004202:	bf00      	nop
 8004204:	0800480d 	.word	0x0800480d

08004208 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004208:	4b06      	ldr	r3, [pc, #24]	; (8004224 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800420a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800420e:	2300      	movs	r3, #0
 8004210:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004214:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004218:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800421c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004220:	4770      	bx	lr
 8004222:	bf00      	nop
 8004224:	08005631 	.word	0x08005631

08004228 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8004228:	4b06      	ldr	r3, [pc, #24]	; (8004244 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800422a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800422e:	2300      	movs	r3, #0
 8004230:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004234:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004238:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800423c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004240:	4770      	bx	lr
 8004242:	bf00      	nop
 8004244:	080046cd 	.word	0x080046cd

08004248 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004248:	4b06      	ldr	r3, [pc, #24]	; (8004264 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800424a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800424e:	2300      	movs	r3, #0
 8004250:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004254:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004258:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800425c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004260:	4770      	bx	lr
 8004262:	bf00      	nop
 8004264:	080054f1 	.word	0x080054f1

08004268 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004268:	4b06      	ldr	r3, [pc, #24]	; (8004284 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800426a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800426e:	2300      	movs	r3, #0
 8004270:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004274:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004278:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800427c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004280:	4770      	bx	lr
 8004282:	bf00      	nop
 8004284:	080053b1 	.word	0x080053b1

08004288 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004288:	4b06      	ldr	r3, [pc, #24]	; (80042a4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800428a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800428e:	2300      	movs	r3, #0
 8004290:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004294:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004298:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800429c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80042a0:	4770      	bx	lr
 80042a2:	bf00      	nop
 80042a4:	08005271 	.word	0x08005271

080042a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80042a8:	4b06      	ldr	r3, [pc, #24]	; (80042c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80042aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80042ae:	2300      	movs	r3, #0
 80042b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80042b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80042b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80042bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80042c0:	4770      	bx	lr
 80042c2:	bf00      	nop
 80042c4:	08005131 	.word	0x08005131

080042c8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80042c8:	4b06      	ldr	r3, [pc, #24]	; (80042e4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80042ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80042ce:	2300      	movs	r3, #0
 80042d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80042d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80042d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80042dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80042e0:	4770      	bx	lr
 80042e2:	bf00      	nop
 80042e4:	0800458d 	.word	0x0800458d

080042e8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80042e8:	4b06      	ldr	r3, [pc, #24]	; (8004304 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80042ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80042ee:	2300      	movs	r3, #0
 80042f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80042f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80042f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80042fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004300:	4770      	bx	lr
 8004302:	bf00      	nop
 8004304:	08004ff1 	.word	0x08004ff1

08004308 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004308:	4b06      	ldr	r3, [pc, #24]	; (8004324 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800430a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800430e:	2300      	movs	r3, #0
 8004310:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004314:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004318:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800431c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004320:	4770      	bx	lr
 8004322:	bf00      	nop
 8004324:	08004eb1 	.word	0x08004eb1

08004328 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8004328:	4b06      	ldr	r3, [pc, #24]	; (8004344 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 800432a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800432e:	2300      	movs	r3, #0
 8004330:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004334:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004338:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800433c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004340:	4770      	bx	lr
 8004342:	bf00      	nop
 8004344:	08004d71 	.word	0x08004d71

08004348 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8004348:	4b06      	ldr	r3, [pc, #24]	; (8004364 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800434a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800434e:	2300      	movs	r3, #0
 8004350:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004354:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004358:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800435c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004360:	4770      	bx	lr
 8004362:	bf00      	nop
 8004364:	0800444d 	.word	0x0800444d

08004368 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004368:	4b06      	ldr	r3, [pc, #24]	; (8004384 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800436a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800436e:	2300      	movs	r3, #0
 8004370:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004374:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004378:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800437c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004380:	4770      	bx	lr
 8004382:	bf00      	nop
 8004384:	08004c31 	.word	0x08004c31

08004388 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004388:	4b06      	ldr	r3, [pc, #24]	; (80043a4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800438a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800438e:	2300      	movs	r3, #0
 8004390:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004394:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004398:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800439c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80043a0:	4770      	bx	lr
 80043a2:	bf00      	nop
 80043a4:	08004af1 	.word	0x08004af1

080043a8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80043a8:	4b06      	ldr	r3, [pc, #24]	; (80043c4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80043aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80043ae:	2300      	movs	r3, #0
 80043b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80043b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80043b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80043bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80043c0:	4770      	bx	lr
 80043c2:	bf00      	nop
 80043c4:	080049b1 	.word	0x080049b1

080043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80043c8:	4b06      	ldr	r3, [pc, #24]	; (80043e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80043ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80043ce:	2300      	movs	r3, #0
 80043d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80043d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80043d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80043dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80043e0:	4770      	bx	lr
 80043e2:	bf00      	nop
 80043e4:	08003e0d 	.word	0x08003e0d

080043e8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80043e8:	6803      	ldr	r3, [r0, #0]
 80043ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043ec:	4718      	bx	r3
	...

080043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80043f0:	4b12      	ldr	r3, [pc, #72]	; (800443c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80043f2:	b513      	push	{r0, r1, r4, lr}
          solid()
 80043f4:	6003      	str	r3, [r0, #0]
 80043f6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043fa:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80043fc:	4b10      	ldr	r3, [pc, #64]	; (8004440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80043fe:	7241      	strb	r1, [r0, #9]
 8004400:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004402:	4910      	ldr	r1, [pc, #64]	; (8004444 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004404:	4b10      	ldr	r3, [pc, #64]	; (8004448 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004406:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800440a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800440e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004410:	2200      	movs	r2, #0
 8004412:	6042      	str	r2, [r0, #4]
 8004414:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004416:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004418:	81c2      	strh	r2, [r0, #14]
          solid()
 800441a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800441e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004422:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004426:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800442a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800442c:	9100      	str	r1, [sp, #0]
 800442e:	3010      	adds	r0, #16
 8004430:	4611      	mov	r1, r2
 8004432:	f7fe f921 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004436:	4620      	mov	r0, r4
 8004438:	b002      	add	sp, #8
 800443a:	bd10      	pop	{r4, pc}
 800443c:	0802e384 	.word	0x0802e384
 8004440:	0802e268 	.word	0x0802e268
 8004444:	2001343a 	.word	0x2001343a
 8004448:	20013438 	.word	0x20013438

0800444c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 800444c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004450:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004454:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004456:	68a0      	ldr	r0, [r4, #8]
 8004458:	6803      	ldr	r3, [r0, #0]
 800445a:	6a1b      	ldr	r3, [r3, #32]
 800445c:	4798      	blx	r3
 800445e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004462:	d205      	bcs.n	8004470 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004464:	4b42      	ldr	r3, [pc, #264]	; (8004570 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004466:	4a43      	ldr	r2, [pc, #268]	; (8004574 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004468:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800446a:	4843      	ldr	r0, [pc, #268]	; (8004578 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 800446c:	f026 fc4c 	bl	802ad08 <__assert_func>
 8004470:	6860      	ldr	r0, [r4, #4]
 8004472:	6803      	ldr	r3, [r0, #0]
 8004474:	6a1b      	ldr	r3, [r3, #32]
 8004476:	4798      	blx	r3
 8004478:	280f      	cmp	r0, #15
 800447a:	d803      	bhi.n	8004484 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 800447c:	4b3f      	ldr	r3, [pc, #252]	; (800457c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 800447e:	4a3d      	ldr	r2, [pc, #244]	; (8004574 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004480:	21a4      	movs	r1, #164	; 0xa4
 8004482:	e7f2      	b.n	800446a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004484:	68e0      	ldr	r0, [r4, #12]
 8004486:	6803      	ldr	r3, [r0, #0]
 8004488:	6a1b      	ldr	r3, [r3, #32]
 800448a:	4798      	blx	r3
 800448c:	2837      	cmp	r0, #55	; 0x37
 800448e:	d803      	bhi.n	8004498 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004490:	4b3b      	ldr	r3, [pc, #236]	; (8004580 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004492:	4a38      	ldr	r2, [pc, #224]	; (8004574 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004494:	21a5      	movs	r1, #165	; 0xa5
 8004496:	e7e8      	b.n	800446a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004498:	f011 fd6e 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800449c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004584 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 80044a0:	3004      	adds	r0, #4
 80044a2:	f011 fdcf 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80044a6:	f8d9 0000 	ldr.w	r0, [r9]
 80044aa:	b110      	cbz	r0, 80044b2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80044ac:	6803      	ldr	r3, [r0, #0]
 80044ae:	68db      	ldr	r3, [r3, #12]
 80044b0:	4798      	blx	r3
    if (*currentTrans)
 80044b2:	f8d9 0000 	ldr.w	r0, [r9]
 80044b6:	b110      	cbz	r0, 80044be <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80044b8:	6803      	ldr	r3, [r0, #0]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	4798      	blx	r3
    if (*currentScreen)
 80044be:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004588 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 80044c2:	f8d8 0000 	ldr.w	r0, [r8]
 80044c6:	b110      	cbz	r0, 80044ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80044c8:	6803      	ldr	r3, [r0, #0]
 80044ca:	695b      	ldr	r3, [r3, #20]
 80044cc:	4798      	blx	r3
    if (*currentPresenter)
 80044ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044d2:	b110      	cbz	r0, 80044da <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80044d4:	6803      	ldr	r3, [r0, #0]
 80044d6:	685b      	ldr	r3, [r3, #4]
 80044d8:	4798      	blx	r3
    if (*currentScreen)
 80044da:	f8d8 0000 	ldr.w	r0, [r8]
 80044de:	b110      	cbz	r0, 80044e6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80044e0:	6803      	ldr	r3, [r0, #0]
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	4798      	blx	r3
    if (*currentPresenter)
 80044e6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044ea:	b110      	cbz	r0, 80044f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80044ec:	6803      	ldr	r3, [r0, #0]
 80044ee:	689b      	ldr	r3, [r3, #8]
 80044f0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044f2:	68e0      	ldr	r0, [r4, #12]
 80044f4:	2100      	movs	r1, #0
 80044f6:	f7ff ff77 	bl	80043e8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80044fa:	2114      	movs	r1, #20
 80044fc:	4605      	mov	r5, r0
 80044fe:	f7ff ff77 	bl	80043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004502:	68a0      	ldr	r0, [r4, #8]
 8004504:	6803      	ldr	r3, [r0, #0]
 8004506:	2100      	movs	r1, #0
 8004508:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800450a:	4798      	blx	r3
 800450c:	4606      	mov	r6, r0
 800450e:	f004 f921 	bl	8008754 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004512:	6860      	ldr	r0, [r4, #4]
 8004514:	6803      	ldr	r3, [r0, #0]
 8004516:	2100      	movs	r1, #0
 8004518:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800451a:	4798      	blx	r3
 800451c:	4631      	mov	r1, r6
 800451e:	4604      	mov	r4, r0
 8004520:	f004 f8f2 	bl	8008708 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004524:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004528:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800452c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004530:	b1dc      	cbz	r4, 800456a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004532:	1d23      	adds	r3, r4, #4
 8004534:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004538:	6833      	ldr	r3, [r6, #0]
 800453a:	f8c4 a008 	str.w	sl, [r4, #8]
 800453e:	4630      	mov	r0, r6
 8004540:	68db      	ldr	r3, [r3, #12]
 8004542:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004544:	4798      	blx	r3
    newPresenter->activate();
 8004546:	6823      	ldr	r3, [r4, #0]
 8004548:	4620      	mov	r0, r4
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800454e:	4629      	mov	r1, r5
 8004550:	4630      	mov	r0, r6
 8004552:	f013 fb3d 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004556:	682b      	ldr	r3, [r5, #0]
 8004558:	4628      	mov	r0, r5
 800455a:	691b      	ldr	r3, [r3, #16]
 800455c:	4798      	blx	r3
    newTransition->invalidate();
 800455e:	682b      	ldr	r3, [r5, #0]
 8004560:	4628      	mov	r0, r5
 8004562:	695b      	ldr	r3, [r3, #20]
}
 8004564:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004568:	4718      	bx	r3
    model->bind(newPresenter);
 800456a:	4623      	mov	r3, r4
 800456c:	e7e2      	b.n	8004534 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 800456e:	bf00      	nop
 8004570:	0802cc98 	.word	0x0802cc98
 8004574:	0802d0c9 	.word	0x0802d0c9
 8004578:	0802ce34 	.word	0x0802ce34
 800457c:	0802ce7b 	.word	0x0802ce7b
 8004580:	0802cf1e 	.word	0x0802cf1e
 8004584:	2001348c 	.word	0x2001348c
 8004588:	20013488 	.word	0x20013488

0800458c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 800458c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004590:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004594:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004596:	68a0      	ldr	r0, [r4, #8]
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	6a1b      	ldr	r3, [r3, #32]
 800459c:	4798      	blx	r3
 800459e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80045a2:	d205      	bcs.n	80045b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 80045a4:	4b42      	ldr	r3, [pc, #264]	; (80046b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80045a6:	4a43      	ldr	r2, [pc, #268]	; (80046b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80045a8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045aa:	4843      	ldr	r0, [pc, #268]	; (80046b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80045ac:	f026 fbac 	bl	802ad08 <__assert_func>
 80045b0:	6860      	ldr	r0, [r4, #4]
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	6a1b      	ldr	r3, [r3, #32]
 80045b6:	4798      	blx	r3
 80045b8:	280f      	cmp	r0, #15
 80045ba:	d803      	bhi.n	80045c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 80045bc:	4b3f      	ldr	r3, [pc, #252]	; (80046bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80045be:	4a3d      	ldr	r2, [pc, #244]	; (80046b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80045c0:	21a4      	movs	r1, #164	; 0xa4
 80045c2:	e7f2      	b.n	80045aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045c4:	68e0      	ldr	r0, [r4, #12]
 80045c6:	6803      	ldr	r3, [r0, #0]
 80045c8:	6a1b      	ldr	r3, [r3, #32]
 80045ca:	4798      	blx	r3
 80045cc:	2837      	cmp	r0, #55	; 0x37
 80045ce:	d803      	bhi.n	80045d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80045d0:	4b3b      	ldr	r3, [pc, #236]	; (80046c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80045d2:	4a38      	ldr	r2, [pc, #224]	; (80046b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80045d4:	21a5      	movs	r1, #165	; 0xa5
 80045d6:	e7e8      	b.n	80045aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80045d8:	f011 fcce 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045dc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80046c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80045e0:	3004      	adds	r0, #4
 80045e2:	f011 fd2f 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045e6:	f8d9 0000 	ldr.w	r0, [r9]
 80045ea:	b110      	cbz	r0, 80045f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80045ec:	6803      	ldr	r3, [r0, #0]
 80045ee:	68db      	ldr	r3, [r3, #12]
 80045f0:	4798      	blx	r3
    if (*currentTrans)
 80045f2:	f8d9 0000 	ldr.w	r0, [r9]
 80045f6:	b110      	cbz	r0, 80045fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80045f8:	6803      	ldr	r3, [r0, #0]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4798      	blx	r3
    if (*currentScreen)
 80045fe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80046c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004602:	f8d8 0000 	ldr.w	r0, [r8]
 8004606:	b110      	cbz	r0, 800460e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004608:	6803      	ldr	r3, [r0, #0]
 800460a:	695b      	ldr	r3, [r3, #20]
 800460c:	4798      	blx	r3
    if (*currentPresenter)
 800460e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004612:	b110      	cbz	r0, 800461a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004614:	6803      	ldr	r3, [r0, #0]
 8004616:	685b      	ldr	r3, [r3, #4]
 8004618:	4798      	blx	r3
    if (*currentScreen)
 800461a:	f8d8 0000 	ldr.w	r0, [r8]
 800461e:	b110      	cbz	r0, 8004626 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004620:	6803      	ldr	r3, [r0, #0]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	4798      	blx	r3
    if (*currentPresenter)
 8004626:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800462a:	b110      	cbz	r0, 8004632 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800462c:	6803      	ldr	r3, [r0, #0]
 800462e:	689b      	ldr	r3, [r3, #8]
 8004630:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004632:	68e0      	ldr	r0, [r4, #12]
 8004634:	2100      	movs	r1, #0
 8004636:	f7ff fed7 	bl	80043e8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800463a:	2114      	movs	r1, #20
 800463c:	4605      	mov	r5, r0
 800463e:	f7ff fed7 	bl	80043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004642:	68a0      	ldr	r0, [r4, #8]
 8004644:	6803      	ldr	r3, [r0, #0]
 8004646:	2100      	movs	r1, #0
 8004648:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800464a:	4798      	blx	r3
 800464c:	4606      	mov	r6, r0
 800464e:	f004 fa65 	bl	8008b1c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004652:	6860      	ldr	r0, [r4, #4]
 8004654:	6803      	ldr	r3, [r0, #0]
 8004656:	2100      	movs	r1, #0
 8004658:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800465a:	4798      	blx	r3
 800465c:	4631      	mov	r1, r6
 800465e:	4604      	mov	r4, r0
 8004660:	f004 fa36 	bl	8008ad0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004664:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004668:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800466c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004670:	b1dc      	cbz	r4, 80046aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004672:	1d23      	adds	r3, r4, #4
 8004674:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004678:	6833      	ldr	r3, [r6, #0]
 800467a:	f8c4 a008 	str.w	sl, [r4, #8]
 800467e:	4630      	mov	r0, r6
 8004680:	68db      	ldr	r3, [r3, #12]
 8004682:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004684:	4798      	blx	r3
    newPresenter->activate();
 8004686:	6823      	ldr	r3, [r4, #0]
 8004688:	4620      	mov	r0, r4
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800468e:	4629      	mov	r1, r5
 8004690:	4630      	mov	r0, r6
 8004692:	f013 fa9d 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004696:	682b      	ldr	r3, [r5, #0]
 8004698:	4628      	mov	r0, r5
 800469a:	691b      	ldr	r3, [r3, #16]
 800469c:	4798      	blx	r3
    newTransition->invalidate();
 800469e:	682b      	ldr	r3, [r5, #0]
 80046a0:	4628      	mov	r0, r5
 80046a2:	695b      	ldr	r3, [r3, #20]
}
 80046a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046a8:	4718      	bx	r3
    model->bind(newPresenter);
 80046aa:	4623      	mov	r3, r4
 80046ac:	e7e2      	b.n	8004674 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 80046ae:	bf00      	nop
 80046b0:	0802cc98 	.word	0x0802cc98
 80046b4:	0802d1e7 	.word	0x0802d1e7
 80046b8:	0802ce34 	.word	0x0802ce34
 80046bc:	0802ce7b 	.word	0x0802ce7b
 80046c0:	0802cf1e 	.word	0x0802cf1e
 80046c4:	2001348c 	.word	0x2001348c
 80046c8:	20013488 	.word	0x20013488

080046cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80046cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80046d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046d6:	68a0      	ldr	r0, [r4, #8]
 80046d8:	6803      	ldr	r3, [r0, #0]
 80046da:	6a1b      	ldr	r3, [r3, #32]
 80046dc:	4798      	blx	r3
 80046de:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80046e2:	d205      	bcs.n	80046f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80046e4:	4b42      	ldr	r3, [pc, #264]	; (80047f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80046e6:	4a43      	ldr	r2, [pc, #268]	; (80047f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80046e8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046ea:	4843      	ldr	r0, [pc, #268]	; (80047f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80046ec:	f026 fb0c 	bl	802ad08 <__assert_func>
 80046f0:	6860      	ldr	r0, [r4, #4]
 80046f2:	6803      	ldr	r3, [r0, #0]
 80046f4:	6a1b      	ldr	r3, [r3, #32]
 80046f6:	4798      	blx	r3
 80046f8:	280f      	cmp	r0, #15
 80046fa:	d803      	bhi.n	8004704 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80046fc:	4b3f      	ldr	r3, [pc, #252]	; (80047fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80046fe:	4a3d      	ldr	r2, [pc, #244]	; (80047f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004700:	21a4      	movs	r1, #164	; 0xa4
 8004702:	e7f2      	b.n	80046ea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004704:	68e0      	ldr	r0, [r4, #12]
 8004706:	6803      	ldr	r3, [r0, #0]
 8004708:	6a1b      	ldr	r3, [r3, #32]
 800470a:	4798      	blx	r3
 800470c:	2837      	cmp	r0, #55	; 0x37
 800470e:	d803      	bhi.n	8004718 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004710:	4b3b      	ldr	r3, [pc, #236]	; (8004800 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004712:	4a38      	ldr	r2, [pc, #224]	; (80047f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004714:	21a5      	movs	r1, #165	; 0xa5
 8004716:	e7e8      	b.n	80046ea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004718:	f011 fc2e 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800471c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004804 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004720:	3004      	adds	r0, #4
 8004722:	f011 fc8f 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004726:	f8d9 0000 	ldr.w	r0, [r9]
 800472a:	b110      	cbz	r0, 8004732 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 800472c:	6803      	ldr	r3, [r0, #0]
 800472e:	68db      	ldr	r3, [r3, #12]
 8004730:	4798      	blx	r3
    if (*currentTrans)
 8004732:	f8d9 0000 	ldr.w	r0, [r9]
 8004736:	b110      	cbz	r0, 800473e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004738:	6803      	ldr	r3, [r0, #0]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	4798      	blx	r3
    if (*currentScreen)
 800473e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004808 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004742:	f8d8 0000 	ldr.w	r0, [r8]
 8004746:	b110      	cbz	r0, 800474e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004748:	6803      	ldr	r3, [r0, #0]
 800474a:	695b      	ldr	r3, [r3, #20]
 800474c:	4798      	blx	r3
    if (*currentPresenter)
 800474e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004752:	b110      	cbz	r0, 800475a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004754:	6803      	ldr	r3, [r0, #0]
 8004756:	685b      	ldr	r3, [r3, #4]
 8004758:	4798      	blx	r3
    if (*currentScreen)
 800475a:	f8d8 0000 	ldr.w	r0, [r8]
 800475e:	b110      	cbz	r0, 8004766 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004760:	6803      	ldr	r3, [r0, #0]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	4798      	blx	r3
    if (*currentPresenter)
 8004766:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800476a:	b110      	cbz	r0, 8004772 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	689b      	ldr	r3, [r3, #8]
 8004770:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004772:	68e0      	ldr	r0, [r4, #12]
 8004774:	2100      	movs	r1, #0
 8004776:	f7ff fe37 	bl	80043e8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800477a:	2114      	movs	r1, #20
 800477c:	4605      	mov	r5, r0
 800477e:	f7ff fe37 	bl	80043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004782:	68a0      	ldr	r0, [r4, #8]
 8004784:	6803      	ldr	r3, [r0, #0]
 8004786:	2100      	movs	r1, #0
 8004788:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800478a:	4798      	blx	r3
 800478c:	4606      	mov	r6, r0
 800478e:	f004 f965 	bl	8008a5c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004792:	6860      	ldr	r0, [r4, #4]
 8004794:	6803      	ldr	r3, [r0, #0]
 8004796:	2100      	movs	r1, #0
 8004798:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800479a:	4798      	blx	r3
 800479c:	4631      	mov	r1, r6
 800479e:	4604      	mov	r4, r0
 80047a0:	f004 f936 	bl	8008a10 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80047a4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80047a8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047ac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80047b0:	b1dc      	cbz	r4, 80047ea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 80047b2:	1d23      	adds	r3, r4, #4
 80047b4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047b8:	6833      	ldr	r3, [r6, #0]
 80047ba:	f8c4 a008 	str.w	sl, [r4, #8]
 80047be:	4630      	mov	r0, r6
 80047c0:	68db      	ldr	r3, [r3, #12]
 80047c2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80047c4:	4798      	blx	r3
    newPresenter->activate();
 80047c6:	6823      	ldr	r3, [r4, #0]
 80047c8:	4620      	mov	r0, r4
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047ce:	4629      	mov	r1, r5
 80047d0:	4630      	mov	r0, r6
 80047d2:	f013 f9fd 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047d6:	682b      	ldr	r3, [r5, #0]
 80047d8:	4628      	mov	r0, r5
 80047da:	691b      	ldr	r3, [r3, #16]
 80047dc:	4798      	blx	r3
    newTransition->invalidate();
 80047de:	682b      	ldr	r3, [r5, #0]
 80047e0:	4628      	mov	r0, r5
 80047e2:	695b      	ldr	r3, [r3, #20]
}
 80047e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047e8:	4718      	bx	r3
    model->bind(newPresenter);
 80047ea:	4623      	mov	r3, r4
 80047ec:	e7e2      	b.n	80047b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80047ee:	bf00      	nop
 80047f0:	0802cc98 	.word	0x0802cc98
 80047f4:	0802d317 	.word	0x0802d317
 80047f8:	0802ce34 	.word	0x0802ce34
 80047fc:	0802ce7b 	.word	0x0802ce7b
 8004800:	0802cf1e 	.word	0x0802cf1e
 8004804:	2001348c 	.word	0x2001348c
 8004808:	20013488 	.word	0x20013488

0800480c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 800480c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004810:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004814:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004816:	68a0      	ldr	r0, [r4, #8]
 8004818:	6803      	ldr	r3, [r0, #0]
 800481a:	6a1b      	ldr	r3, [r3, #32]
 800481c:	4798      	blx	r3
 800481e:	f241 137b 	movw	r3, #4475	; 0x117b
 8004822:	4298      	cmp	r0, r3
 8004824:	d805      	bhi.n	8004832 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004826:	4b42      	ldr	r3, [pc, #264]	; (8004930 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004828:	4a42      	ldr	r2, [pc, #264]	; (8004934 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800482a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800482c:	4842      	ldr	r0, [pc, #264]	; (8004938 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800482e:	f026 fa6b 	bl	802ad08 <__assert_func>
 8004832:	6860      	ldr	r0, [r4, #4]
 8004834:	6803      	ldr	r3, [r0, #0]
 8004836:	6a1b      	ldr	r3, [r3, #32]
 8004838:	4798      	blx	r3
 800483a:	280f      	cmp	r0, #15
 800483c:	d803      	bhi.n	8004846 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800483e:	4b3f      	ldr	r3, [pc, #252]	; (800493c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004840:	4a3c      	ldr	r2, [pc, #240]	; (8004934 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004842:	21a4      	movs	r1, #164	; 0xa4
 8004844:	e7f2      	b.n	800482c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004846:	68e0      	ldr	r0, [r4, #12]
 8004848:	6803      	ldr	r3, [r0, #0]
 800484a:	6a1b      	ldr	r3, [r3, #32]
 800484c:	4798      	blx	r3
 800484e:	2837      	cmp	r0, #55	; 0x37
 8004850:	d803      	bhi.n	800485a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004852:	4b3b      	ldr	r3, [pc, #236]	; (8004940 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004854:	4a37      	ldr	r2, [pc, #220]	; (8004934 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004856:	21a5      	movs	r1, #165	; 0xa5
 8004858:	e7e8      	b.n	800482c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800485a:	f011 fb8d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800485e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004944 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004862:	3004      	adds	r0, #4
 8004864:	f011 fbee 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004868:	f8d9 0000 	ldr.w	r0, [r9]
 800486c:	b110      	cbz	r0, 8004874 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	68db      	ldr	r3, [r3, #12]
 8004872:	4798      	blx	r3
    if (*currentTrans)
 8004874:	f8d9 0000 	ldr.w	r0, [r9]
 8004878:	b110      	cbz	r0, 8004880 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800487a:	6803      	ldr	r3, [r0, #0]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	4798      	blx	r3
    if (*currentScreen)
 8004880:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004948 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004884:	f8d8 0000 	ldr.w	r0, [r8]
 8004888:	b110      	cbz	r0, 8004890 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800488a:	6803      	ldr	r3, [r0, #0]
 800488c:	695b      	ldr	r3, [r3, #20]
 800488e:	4798      	blx	r3
    if (*currentPresenter)
 8004890:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004894:	b110      	cbz	r0, 800489c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004896:	6803      	ldr	r3, [r0, #0]
 8004898:	685b      	ldr	r3, [r3, #4]
 800489a:	4798      	blx	r3
    if (*currentScreen)
 800489c:	f8d8 0000 	ldr.w	r0, [r8]
 80048a0:	b110      	cbz	r0, 80048a8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80048a2:	6803      	ldr	r3, [r0, #0]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	4798      	blx	r3
    if (*currentPresenter)
 80048a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048ac:	b110      	cbz	r0, 80048b4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80048ae:	6803      	ldr	r3, [r0, #0]
 80048b0:	689b      	ldr	r3, [r3, #8]
 80048b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80048b4:	68e0      	ldr	r0, [r4, #12]
 80048b6:	2100      	movs	r1, #0
 80048b8:	f7ff fd96 	bl	80043e8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80048bc:	2114      	movs	r1, #20
 80048be:	4605      	mov	r5, r0
 80048c0:	f7ff fd96 	bl	80043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048c4:	68a0      	ldr	r0, [r4, #8]
 80048c6:	6803      	ldr	r3, [r0, #0]
 80048c8:	2100      	movs	r1, #0
 80048ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048cc:	4798      	blx	r3
 80048ce:	4606      	mov	r6, r0
 80048d0:	f004 f864 	bl	800899c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048d4:	6860      	ldr	r0, [r4, #4]
 80048d6:	6803      	ldr	r3, [r0, #0]
 80048d8:	2100      	movs	r1, #0
 80048da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048dc:	4798      	blx	r3
 80048de:	4631      	mov	r1, r6
 80048e0:	4604      	mov	r4, r0
 80048e2:	f004 f835 	bl	8008950 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80048e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048f2:	b1dc      	cbz	r4, 800492c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80048f4:	1d23      	adds	r3, r4, #4
 80048f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048fa:	6833      	ldr	r3, [r6, #0]
 80048fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004900:	4630      	mov	r0, r6
 8004902:	68db      	ldr	r3, [r3, #12]
 8004904:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004906:	4798      	blx	r3
    newPresenter->activate();
 8004908:	6823      	ldr	r3, [r4, #0]
 800490a:	4620      	mov	r0, r4
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004910:	4629      	mov	r1, r5
 8004912:	4630      	mov	r0, r6
 8004914:	f013 f95c 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004918:	682b      	ldr	r3, [r5, #0]
 800491a:	4628      	mov	r0, r5
 800491c:	691b      	ldr	r3, [r3, #16]
 800491e:	4798      	blx	r3
    newTransition->invalidate();
 8004920:	682b      	ldr	r3, [r5, #0]
 8004922:	4628      	mov	r0, r5
 8004924:	695b      	ldr	r3, [r3, #20]
}
 8004926:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800492a:	4718      	bx	r3
    model->bind(newPresenter);
 800492c:	4623      	mov	r3, r4
 800492e:	e7e2      	b.n	80048f6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004930:	0802cc98 	.word	0x0802cc98
 8004934:	0802d435 	.word	0x0802d435
 8004938:	0802ce34 	.word	0x0802ce34
 800493c:	0802ce7b 	.word	0x0802ce7b
 8004940:	0802cf1e 	.word	0x0802cf1e
 8004944:	2001348c 	.word	0x2001348c
 8004948:	20013488 	.word	0x20013488

0800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 800494c:	6803      	ldr	r3, [r0, #0]
 800494e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004950:	4718      	bx	r3
	...

08004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004954:	4b12      	ldr	r3, [pc, #72]	; (80049a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004956:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004958:	6003      	str	r3, [r0, #0]
 800495a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800495e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004960:	4b10      	ldr	r3, [pc, #64]	; (80049a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004962:	7241      	strb	r1, [r0, #9]
 8004964:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004966:	4910      	ldr	r1, [pc, #64]	; (80049a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004968:	4b10      	ldr	r3, [pc, #64]	; (80049ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800496a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800496e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004972:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004974:	2200      	movs	r2, #0
 8004976:	6042      	str	r2, [r0, #4]
 8004978:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800497a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800497c:	81c2      	strh	r2, [r0, #14]
          solid()
 800497e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004982:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004986:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800498a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800498e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004990:	9100      	str	r1, [sp, #0]
 8004992:	3010      	adds	r0, #16
 8004994:	4611      	mov	r1, r2
 8004996:	f7fd fe6f 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800499a:	4620      	mov	r0, r4
 800499c:	b002      	add	sp, #8
 800499e:	bd10      	pop	{r4, pc}
 80049a0:	0802e360 	.word	0x0802e360
 80049a4:	0802e268 	.word	0x0802e268
 80049a8:	2001343a 	.word	0x2001343a
 80049ac:	20013438 	.word	0x20013438

080049b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80049b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049ba:	68a0      	ldr	r0, [r4, #8]
 80049bc:	6803      	ldr	r3, [r0, #0]
 80049be:	6a1b      	ldr	r3, [r3, #32]
 80049c0:	4798      	blx	r3
 80049c2:	f241 03af 	movw	r3, #4271	; 0x10af
 80049c6:	4298      	cmp	r0, r3
 80049c8:	d805      	bhi.n	80049d6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80049ca:	4b42      	ldr	r3, [pc, #264]	; (8004ad4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80049cc:	4a42      	ldr	r2, [pc, #264]	; (8004ad8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80049ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049d0:	4842      	ldr	r0, [pc, #264]	; (8004adc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80049d2:	f026 f999 	bl	802ad08 <__assert_func>
 80049d6:	6860      	ldr	r0, [r4, #4]
 80049d8:	6803      	ldr	r3, [r0, #0]
 80049da:	6a1b      	ldr	r3, [r3, #32]
 80049dc:	4798      	blx	r3
 80049de:	280f      	cmp	r0, #15
 80049e0:	d803      	bhi.n	80049ea <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80049e2:	4b3f      	ldr	r3, [pc, #252]	; (8004ae0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80049e4:	4a3c      	ldr	r2, [pc, #240]	; (8004ad8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80049e6:	21a4      	movs	r1, #164	; 0xa4
 80049e8:	e7f2      	b.n	80049d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049ea:	68e0      	ldr	r0, [r4, #12]
 80049ec:	6803      	ldr	r3, [r0, #0]
 80049ee:	6a1b      	ldr	r3, [r3, #32]
 80049f0:	4798      	blx	r3
 80049f2:	2837      	cmp	r0, #55	; 0x37
 80049f4:	d803      	bhi.n	80049fe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80049f6:	4b3b      	ldr	r3, [pc, #236]	; (8004ae4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80049f8:	4a37      	ldr	r2, [pc, #220]	; (8004ad8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80049fa:	21a5      	movs	r1, #165	; 0xa5
 80049fc:	e7e8      	b.n	80049d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80049fe:	f011 fabb 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a02:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ae8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004a06:	3004      	adds	r0, #4
 8004a08:	f011 fb1c 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a0c:	f8d9 0000 	ldr.w	r0, [r9]
 8004a10:	b110      	cbz	r0, 8004a18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a12:	6803      	ldr	r3, [r0, #0]
 8004a14:	68db      	ldr	r3, [r3, #12]
 8004a16:	4798      	blx	r3
    if (*currentTrans)
 8004a18:	f8d9 0000 	ldr.w	r0, [r9]
 8004a1c:	b110      	cbz	r0, 8004a24 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a1e:	6803      	ldr	r3, [r0, #0]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	4798      	blx	r3
    if (*currentScreen)
 8004a24:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004aec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004a28:	f8d8 0000 	ldr.w	r0, [r8]
 8004a2c:	b110      	cbz	r0, 8004a34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a2e:	6803      	ldr	r3, [r0, #0]
 8004a30:	695b      	ldr	r3, [r3, #20]
 8004a32:	4798      	blx	r3
    if (*currentPresenter)
 8004a34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a38:	b110      	cbz	r0, 8004a40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a3a:	6803      	ldr	r3, [r0, #0]
 8004a3c:	685b      	ldr	r3, [r3, #4]
 8004a3e:	4798      	blx	r3
    if (*currentScreen)
 8004a40:	f8d8 0000 	ldr.w	r0, [r8]
 8004a44:	b110      	cbz	r0, 8004a4c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a46:	6803      	ldr	r3, [r0, #0]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	4798      	blx	r3
    if (*currentPresenter)
 8004a4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a50:	b110      	cbz	r0, 8004a58 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a52:	6803      	ldr	r3, [r0, #0]
 8004a54:	689b      	ldr	r3, [r3, #8]
 8004a56:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a58:	68e0      	ldr	r0, [r4, #12]
 8004a5a:	2100      	movs	r1, #0
 8004a5c:	f7ff ff76 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a60:	2114      	movs	r1, #20
 8004a62:	4605      	mov	r5, r0
 8004a64:	f7ff ff76 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a68:	68a0      	ldr	r0, [r4, #8]
 8004a6a:	6803      	ldr	r3, [r0, #0]
 8004a6c:	2100      	movs	r1, #0
 8004a6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a70:	4798      	blx	r3
 8004a72:	4606      	mov	r6, r0
 8004a74:	f004 fa96 	bl	8008fa4 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a78:	6860      	ldr	r0, [r4, #4]
 8004a7a:	6803      	ldr	r3, [r0, #0]
 8004a7c:	2100      	movs	r1, #0
 8004a7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a80:	4798      	blx	r3
 8004a82:	4631      	mov	r1, r6
 8004a84:	4604      	mov	r4, r0
 8004a86:	f004 fa67 	bl	8008f58 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004a8a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a8e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a92:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a96:	b1dc      	cbz	r4, 8004ad0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004a98:	1d23      	adds	r3, r4, #4
 8004a9a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a9e:	6833      	ldr	r3, [r6, #0]
 8004aa0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004aa4:	4630      	mov	r0, r6
 8004aa6:	68db      	ldr	r3, [r3, #12]
 8004aa8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004aaa:	4798      	blx	r3
    newPresenter->activate();
 8004aac:	6823      	ldr	r3, [r4, #0]
 8004aae:	4620      	mov	r0, r4
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ab4:	4629      	mov	r1, r5
 8004ab6:	4630      	mov	r0, r6
 8004ab8:	f013 f88a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004abc:	682b      	ldr	r3, [r5, #0]
 8004abe:	4628      	mov	r0, r5
 8004ac0:	691b      	ldr	r3, [r3, #16]
 8004ac2:	4798      	blx	r3
    newTransition->invalidate();
 8004ac4:	682b      	ldr	r3, [r5, #0]
 8004ac6:	4628      	mov	r0, r5
 8004ac8:	695b      	ldr	r3, [r3, #20]
}
 8004aca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ace:	4718      	bx	r3
    model->bind(newPresenter);
 8004ad0:	4623      	mov	r3, r4
 8004ad2:	e7e2      	b.n	8004a9a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004ad4:	0802cc98 	.word	0x0802cc98
 8004ad8:	0802d54f 	.word	0x0802d54f
 8004adc:	0802ce34 	.word	0x0802ce34
 8004ae0:	0802ce7b 	.word	0x0802ce7b
 8004ae4:	0802cf1e 	.word	0x0802cf1e
 8004ae8:	2001348c 	.word	0x2001348c
 8004aec:	20013488 	.word	0x20013488

08004af0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004af0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004af4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004af8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004afa:	68a0      	ldr	r0, [r4, #8]
 8004afc:	6803      	ldr	r3, [r0, #0]
 8004afe:	6a1b      	ldr	r3, [r3, #32]
 8004b00:	4798      	blx	r3
 8004b02:	f241 035b 	movw	r3, #4187	; 0x105b
 8004b06:	4298      	cmp	r0, r3
 8004b08:	d805      	bhi.n	8004b16 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004b0a:	4b42      	ldr	r3, [pc, #264]	; (8004c14 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004b0c:	4a42      	ldr	r2, [pc, #264]	; (8004c18 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004b0e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b10:	4842      	ldr	r0, [pc, #264]	; (8004c1c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8004b12:	f026 f8f9 	bl	802ad08 <__assert_func>
 8004b16:	6860      	ldr	r0, [r4, #4]
 8004b18:	6803      	ldr	r3, [r0, #0]
 8004b1a:	6a1b      	ldr	r3, [r3, #32]
 8004b1c:	4798      	blx	r3
 8004b1e:	280f      	cmp	r0, #15
 8004b20:	d803      	bhi.n	8004b2a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8004b22:	4b3f      	ldr	r3, [pc, #252]	; (8004c20 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004b24:	4a3c      	ldr	r2, [pc, #240]	; (8004c18 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004b26:	21a4      	movs	r1, #164	; 0xa4
 8004b28:	e7f2      	b.n	8004b10 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b2a:	68e0      	ldr	r0, [r4, #12]
 8004b2c:	6803      	ldr	r3, [r0, #0]
 8004b2e:	6a1b      	ldr	r3, [r3, #32]
 8004b30:	4798      	blx	r3
 8004b32:	2837      	cmp	r0, #55	; 0x37
 8004b34:	d803      	bhi.n	8004b3e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004b36:	4b3b      	ldr	r3, [pc, #236]	; (8004c24 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004b38:	4a37      	ldr	r2, [pc, #220]	; (8004c18 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004b3a:	21a5      	movs	r1, #165	; 0xa5
 8004b3c:	e7e8      	b.n	8004b10 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b3e:	f011 fa1b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b42:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c28 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004b46:	3004      	adds	r0, #4
 8004b48:	f011 fa7c 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b4c:	f8d9 0000 	ldr.w	r0, [r9]
 8004b50:	b110      	cbz	r0, 8004b58 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b52:	6803      	ldr	r3, [r0, #0]
 8004b54:	68db      	ldr	r3, [r3, #12]
 8004b56:	4798      	blx	r3
    if (*currentTrans)
 8004b58:	f8d9 0000 	ldr.w	r0, [r9]
 8004b5c:	b110      	cbz	r0, 8004b64 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b5e:	6803      	ldr	r3, [r0, #0]
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	4798      	blx	r3
    if (*currentScreen)
 8004b64:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c2c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004b68:	f8d8 0000 	ldr.w	r0, [r8]
 8004b6c:	b110      	cbz	r0, 8004b74 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b6e:	6803      	ldr	r3, [r0, #0]
 8004b70:	695b      	ldr	r3, [r3, #20]
 8004b72:	4798      	blx	r3
    if (*currentPresenter)
 8004b74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b78:	b110      	cbz	r0, 8004b80 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b7a:	6803      	ldr	r3, [r0, #0]
 8004b7c:	685b      	ldr	r3, [r3, #4]
 8004b7e:	4798      	blx	r3
    if (*currentScreen)
 8004b80:	f8d8 0000 	ldr.w	r0, [r8]
 8004b84:	b110      	cbz	r0, 8004b8c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b86:	6803      	ldr	r3, [r0, #0]
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	4798      	blx	r3
    if (*currentPresenter)
 8004b8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b90:	b110      	cbz	r0, 8004b98 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b92:	6803      	ldr	r3, [r0, #0]
 8004b94:	689b      	ldr	r3, [r3, #8]
 8004b96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b98:	68e0      	ldr	r0, [r4, #12]
 8004b9a:	2100      	movs	r1, #0
 8004b9c:	f7ff fed6 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ba0:	2114      	movs	r1, #20
 8004ba2:	4605      	mov	r5, r0
 8004ba4:	f7ff fed6 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ba8:	68a0      	ldr	r0, [r4, #8]
 8004baa:	6803      	ldr	r3, [r0, #0]
 8004bac:	2100      	movs	r1, #0
 8004bae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb0:	4798      	blx	r3
 8004bb2:	4606      	mov	r6, r0
 8004bb4:	f003 fe28 	bl	8008808 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bb8:	6860      	ldr	r0, [r4, #4]
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	2100      	movs	r1, #0
 8004bbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc0:	4798      	blx	r3
 8004bc2:	4631      	mov	r1, r6
 8004bc4:	4604      	mov	r4, r0
 8004bc6:	f003 fdf9 	bl	80087bc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004bca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bd2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bd6:	b1dc      	cbz	r4, 8004c10 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004bd8:	1d23      	adds	r3, r4, #4
 8004bda:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bde:	6833      	ldr	r3, [r6, #0]
 8004be0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004be4:	4630      	mov	r0, r6
 8004be6:	68db      	ldr	r3, [r3, #12]
 8004be8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bea:	4798      	blx	r3
    newPresenter->activate();
 8004bec:	6823      	ldr	r3, [r4, #0]
 8004bee:	4620      	mov	r0, r4
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bf4:	4629      	mov	r1, r5
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	f012 ffea 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bfc:	682b      	ldr	r3, [r5, #0]
 8004bfe:	4628      	mov	r0, r5
 8004c00:	691b      	ldr	r3, [r3, #16]
 8004c02:	4798      	blx	r3
    newTransition->invalidate();
 8004c04:	682b      	ldr	r3, [r5, #0]
 8004c06:	4628      	mov	r0, r5
 8004c08:	695b      	ldr	r3, [r3, #20]
}
 8004c0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c0e:	4718      	bx	r3
    model->bind(newPresenter);
 8004c10:	4623      	mov	r3, r4
 8004c12:	e7e2      	b.n	8004bda <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004c14:	0802cc98 	.word	0x0802cc98
 8004c18:	0802d66f 	.word	0x0802d66f
 8004c1c:	0802ce34 	.word	0x0802ce34
 8004c20:	0802ce7b 	.word	0x0802ce7b
 8004c24:	0802cf1e 	.word	0x0802cf1e
 8004c28:	2001348c 	.word	0x2001348c
 8004c2c:	20013488 	.word	0x20013488

08004c30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004c30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c34:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c3a:	68a0      	ldr	r0, [r4, #8]
 8004c3c:	6803      	ldr	r3, [r0, #0]
 8004c3e:	6a1b      	ldr	r3, [r3, #32]
 8004c40:	4798      	blx	r3
 8004c42:	f641 2397 	movw	r3, #6807	; 0x1a97
 8004c46:	4298      	cmp	r0, r3
 8004c48:	d805      	bhi.n	8004c56 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004c4a:	4b42      	ldr	r3, [pc, #264]	; (8004d54 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004c4c:	4a42      	ldr	r2, [pc, #264]	; (8004d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004c4e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c50:	4842      	ldr	r0, [pc, #264]	; (8004d5c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004c52:	f026 f859 	bl	802ad08 <__assert_func>
 8004c56:	6860      	ldr	r0, [r4, #4]
 8004c58:	6803      	ldr	r3, [r0, #0]
 8004c5a:	6a1b      	ldr	r3, [r3, #32]
 8004c5c:	4798      	blx	r3
 8004c5e:	280f      	cmp	r0, #15
 8004c60:	d803      	bhi.n	8004c6a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004c62:	4b3f      	ldr	r3, [pc, #252]	; (8004d60 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004c64:	4a3c      	ldr	r2, [pc, #240]	; (8004d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004c66:	21a4      	movs	r1, #164	; 0xa4
 8004c68:	e7f2      	b.n	8004c50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c6a:	68e0      	ldr	r0, [r4, #12]
 8004c6c:	6803      	ldr	r3, [r0, #0]
 8004c6e:	6a1b      	ldr	r3, [r3, #32]
 8004c70:	4798      	blx	r3
 8004c72:	2837      	cmp	r0, #55	; 0x37
 8004c74:	d803      	bhi.n	8004c7e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004c76:	4b3b      	ldr	r3, [pc, #236]	; (8004d64 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004c78:	4a37      	ldr	r2, [pc, #220]	; (8004d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004c7a:	21a5      	movs	r1, #165	; 0xa5
 8004c7c:	e7e8      	b.n	8004c50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c7e:	f011 f97b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c82:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d68 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004c86:	3004      	adds	r0, #4
 8004c88:	f011 f9dc 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c8c:	f8d9 0000 	ldr.w	r0, [r9]
 8004c90:	b110      	cbz	r0, 8004c98 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c92:	6803      	ldr	r3, [r0, #0]
 8004c94:	68db      	ldr	r3, [r3, #12]
 8004c96:	4798      	blx	r3
    if (*currentTrans)
 8004c98:	f8d9 0000 	ldr.w	r0, [r9]
 8004c9c:	b110      	cbz	r0, 8004ca4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c9e:	6803      	ldr	r3, [r0, #0]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	4798      	blx	r3
    if (*currentScreen)
 8004ca4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004ca8:	f8d8 0000 	ldr.w	r0, [r8]
 8004cac:	b110      	cbz	r0, 8004cb4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004cae:	6803      	ldr	r3, [r0, #0]
 8004cb0:	695b      	ldr	r3, [r3, #20]
 8004cb2:	4798      	blx	r3
    if (*currentPresenter)
 8004cb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cb8:	b110      	cbz	r0, 8004cc0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004cba:	6803      	ldr	r3, [r0, #0]
 8004cbc:	685b      	ldr	r3, [r3, #4]
 8004cbe:	4798      	blx	r3
    if (*currentScreen)
 8004cc0:	f8d8 0000 	ldr.w	r0, [r8]
 8004cc4:	b110      	cbz	r0, 8004ccc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004cc6:	6803      	ldr	r3, [r0, #0]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	4798      	blx	r3
    if (*currentPresenter)
 8004ccc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cd0:	b110      	cbz	r0, 8004cd8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004cd2:	6803      	ldr	r3, [r0, #0]
 8004cd4:	689b      	ldr	r3, [r3, #8]
 8004cd6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cd8:	68e0      	ldr	r0, [r4, #12]
 8004cda:	2100      	movs	r1, #0
 8004cdc:	f7ff fe36 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ce0:	2114      	movs	r1, #20
 8004ce2:	4605      	mov	r5, r0
 8004ce4:	f7ff fe36 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ce8:	68a0      	ldr	r0, [r4, #8]
 8004cea:	6803      	ldr	r3, [r0, #0]
 8004cec:	2100      	movs	r1, #0
 8004cee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf0:	4798      	blx	r3
 8004cf2:	4606      	mov	r6, r0
 8004cf4:	f003 fdca 	bl	800888c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cf8:	6860      	ldr	r0, [r4, #4]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	2100      	movs	r1, #0
 8004cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d00:	4798      	blx	r3
 8004d02:	4631      	mov	r1, r6
 8004d04:	4604      	mov	r4, r0
 8004d06:	f003 fd9b 	bl	8008840 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004d0a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d0e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d12:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d16:	b1dc      	cbz	r4, 8004d50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004d18:	1d23      	adds	r3, r4, #4
 8004d1a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d1e:	6833      	ldr	r3, [r6, #0]
 8004d20:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d24:	4630      	mov	r0, r6
 8004d26:	68db      	ldr	r3, [r3, #12]
 8004d28:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d2a:	4798      	blx	r3
    newPresenter->activate();
 8004d2c:	6823      	ldr	r3, [r4, #0]
 8004d2e:	4620      	mov	r0, r4
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d34:	4629      	mov	r1, r5
 8004d36:	4630      	mov	r0, r6
 8004d38:	f012 ff4a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d3c:	682b      	ldr	r3, [r5, #0]
 8004d3e:	4628      	mov	r0, r5
 8004d40:	691b      	ldr	r3, [r3, #16]
 8004d42:	4798      	blx	r3
    newTransition->invalidate();
 8004d44:	682b      	ldr	r3, [r5, #0]
 8004d46:	4628      	mov	r0, r5
 8004d48:	695b      	ldr	r3, [r3, #20]
}
 8004d4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d4e:	4718      	bx	r3
    model->bind(newPresenter);
 8004d50:	4623      	mov	r3, r4
 8004d52:	e7e2      	b.n	8004d1a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004d54:	0802cc98 	.word	0x0802cc98
 8004d58:	0802d797 	.word	0x0802d797
 8004d5c:	0802ce34 	.word	0x0802ce34
 8004d60:	0802ce7b 	.word	0x0802ce7b
 8004d64:	0802cf1e 	.word	0x0802cf1e
 8004d68:	2001348c 	.word	0x2001348c
 8004d6c:	20013488 	.word	0x20013488

08004d70 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d7a:	68a0      	ldr	r0, [r4, #8]
 8004d7c:	6803      	ldr	r3, [r0, #0]
 8004d7e:	6a1b      	ldr	r3, [r3, #32]
 8004d80:	4798      	blx	r3
 8004d82:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d86:	d205      	bcs.n	8004d94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004d88:	4b42      	ldr	r3, [pc, #264]	; (8004e94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8004d8a:	4a43      	ldr	r2, [pc, #268]	; (8004e98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004d8c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d8e:	4843      	ldr	r0, [pc, #268]	; (8004e9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004d90:	f025 ffba 	bl	802ad08 <__assert_func>
 8004d94:	6860      	ldr	r0, [r4, #4]
 8004d96:	6803      	ldr	r3, [r0, #0]
 8004d98:	6a1b      	ldr	r3, [r3, #32]
 8004d9a:	4798      	blx	r3
 8004d9c:	280f      	cmp	r0, #15
 8004d9e:	d803      	bhi.n	8004da8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004da0:	4b3f      	ldr	r3, [pc, #252]	; (8004ea0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004da2:	4a3d      	ldr	r2, [pc, #244]	; (8004e98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004da4:	21a4      	movs	r1, #164	; 0xa4
 8004da6:	e7f2      	b.n	8004d8e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004da8:	68e0      	ldr	r0, [r4, #12]
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	6a1b      	ldr	r3, [r3, #32]
 8004dae:	4798      	blx	r3
 8004db0:	2837      	cmp	r0, #55	; 0x37
 8004db2:	d803      	bhi.n	8004dbc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004db4:	4b3b      	ldr	r3, [pc, #236]	; (8004ea4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004db6:	4a38      	ldr	r2, [pc, #224]	; (8004e98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004db8:	21a5      	movs	r1, #165	; 0xa5
 8004dba:	e7e8      	b.n	8004d8e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004dbc:	f011 f8dc 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dc0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ea8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004dc4:	3004      	adds	r0, #4
 8004dc6:	f011 f93d 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dca:	f8d9 0000 	ldr.w	r0, [r9]
 8004dce:	b110      	cbz	r0, 8004dd6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004dd0:	6803      	ldr	r3, [r0, #0]
 8004dd2:	68db      	ldr	r3, [r3, #12]
 8004dd4:	4798      	blx	r3
    if (*currentTrans)
 8004dd6:	f8d9 0000 	ldr.w	r0, [r9]
 8004dda:	b110      	cbz	r0, 8004de2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ddc:	6803      	ldr	r3, [r0, #0]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	4798      	blx	r3
    if (*currentScreen)
 8004de2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004eac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004de6:	f8d8 0000 	ldr.w	r0, [r8]
 8004dea:	b110      	cbz	r0, 8004df2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dec:	6803      	ldr	r3, [r0, #0]
 8004dee:	695b      	ldr	r3, [r3, #20]
 8004df0:	4798      	blx	r3
    if (*currentPresenter)
 8004df2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004df6:	b110      	cbz	r0, 8004dfe <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004df8:	6803      	ldr	r3, [r0, #0]
 8004dfa:	685b      	ldr	r3, [r3, #4]
 8004dfc:	4798      	blx	r3
    if (*currentScreen)
 8004dfe:	f8d8 0000 	ldr.w	r0, [r8]
 8004e02:	b110      	cbz	r0, 8004e0a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e04:	6803      	ldr	r3, [r0, #0]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	4798      	blx	r3
    if (*currentPresenter)
 8004e0a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e0e:	b110      	cbz	r0, 8004e16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e10:	6803      	ldr	r3, [r0, #0]
 8004e12:	689b      	ldr	r3, [r3, #8]
 8004e14:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e16:	68e0      	ldr	r0, [r4, #12]
 8004e18:	2100      	movs	r1, #0
 8004e1a:	f7ff fd97 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e1e:	2114      	movs	r1, #20
 8004e20:	4605      	mov	r5, r0
 8004e22:	f7ff fd97 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e26:	68a0      	ldr	r0, [r4, #8]
 8004e28:	6803      	ldr	r3, [r0, #0]
 8004e2a:	2100      	movs	r1, #0
 8004e2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e2e:	4798      	blx	r3
 8004e30:	4606      	mov	r6, r0
 8004e32:	f003 fc8f 	bl	8008754 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e36:	6860      	ldr	r0, [r4, #4]
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	2100      	movs	r1, #0
 8004e3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e3e:	4798      	blx	r3
 8004e40:	4631      	mov	r1, r6
 8004e42:	4604      	mov	r4, r0
 8004e44:	f003 fc60 	bl	8008708 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004e48:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e4c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e50:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e54:	b1dc      	cbz	r4, 8004e8e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004e56:	1d23      	adds	r3, r4, #4
 8004e58:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e5c:	6833      	ldr	r3, [r6, #0]
 8004e5e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e62:	4630      	mov	r0, r6
 8004e64:	68db      	ldr	r3, [r3, #12]
 8004e66:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e68:	4798      	blx	r3
    newPresenter->activate();
 8004e6a:	6823      	ldr	r3, [r4, #0]
 8004e6c:	4620      	mov	r0, r4
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e72:	4629      	mov	r1, r5
 8004e74:	4630      	mov	r0, r6
 8004e76:	f012 feab 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e7a:	682b      	ldr	r3, [r5, #0]
 8004e7c:	4628      	mov	r0, r5
 8004e7e:	691b      	ldr	r3, [r3, #16]
 8004e80:	4798      	blx	r3
    newTransition->invalidate();
 8004e82:	682b      	ldr	r3, [r5, #0]
 8004e84:	4628      	mov	r0, r5
 8004e86:	695b      	ldr	r3, [r3, #20]
}
 8004e88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e8c:	4718      	bx	r3
    model->bind(newPresenter);
 8004e8e:	4623      	mov	r3, r4
 8004e90:	e7e2      	b.n	8004e58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004e92:	bf00      	nop
 8004e94:	0802cc98 	.word	0x0802cc98
 8004e98:	0802d8bd 	.word	0x0802d8bd
 8004e9c:	0802ce34 	.word	0x0802ce34
 8004ea0:	0802ce7b 	.word	0x0802ce7b
 8004ea4:	0802cf1e 	.word	0x0802cf1e
 8004ea8:	2001348c 	.word	0x2001348c
 8004eac:	20013488 	.word	0x20013488

08004eb0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004eb4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004eb8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004eba:	68a0      	ldr	r0, [r4, #8]
 8004ebc:	6803      	ldr	r3, [r0, #0]
 8004ebe:	6a1b      	ldr	r3, [r3, #32]
 8004ec0:	4798      	blx	r3
 8004ec2:	f241 035b 	movw	r3, #4187	; 0x105b
 8004ec6:	4298      	cmp	r0, r3
 8004ec8:	d805      	bhi.n	8004ed6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004eca:	4b42      	ldr	r3, [pc, #264]	; (8004fd4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004ecc:	4a42      	ldr	r2, [pc, #264]	; (8004fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004ece:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ed0:	4842      	ldr	r0, [pc, #264]	; (8004fdc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004ed2:	f025 ff19 	bl	802ad08 <__assert_func>
 8004ed6:	6860      	ldr	r0, [r4, #4]
 8004ed8:	6803      	ldr	r3, [r0, #0]
 8004eda:	6a1b      	ldr	r3, [r3, #32]
 8004edc:	4798      	blx	r3
 8004ede:	280f      	cmp	r0, #15
 8004ee0:	d803      	bhi.n	8004eea <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004ee2:	4b3f      	ldr	r3, [pc, #252]	; (8004fe0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004ee4:	4a3c      	ldr	r2, [pc, #240]	; (8004fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004ee6:	21a4      	movs	r1, #164	; 0xa4
 8004ee8:	e7f2      	b.n	8004ed0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004eea:	68e0      	ldr	r0, [r4, #12]
 8004eec:	6803      	ldr	r3, [r0, #0]
 8004eee:	6a1b      	ldr	r3, [r3, #32]
 8004ef0:	4798      	blx	r3
 8004ef2:	2837      	cmp	r0, #55	; 0x37
 8004ef4:	d803      	bhi.n	8004efe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004ef6:	4b3b      	ldr	r3, [pc, #236]	; (8004fe4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004ef8:	4a37      	ldr	r2, [pc, #220]	; (8004fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004efa:	21a5      	movs	r1, #165	; 0xa5
 8004efc:	e7e8      	b.n	8004ed0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004efe:	f011 f83b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f02:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fe8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004f06:	3004      	adds	r0, #4
 8004f08:	f011 f89c 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f0c:	f8d9 0000 	ldr.w	r0, [r9]
 8004f10:	b110      	cbz	r0, 8004f18 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f12:	6803      	ldr	r3, [r0, #0]
 8004f14:	68db      	ldr	r3, [r3, #12]
 8004f16:	4798      	blx	r3
    if (*currentTrans)
 8004f18:	f8d9 0000 	ldr.w	r0, [r9]
 8004f1c:	b110      	cbz	r0, 8004f24 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f1e:	6803      	ldr	r3, [r0, #0]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	4798      	blx	r3
    if (*currentScreen)
 8004f24:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004fec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004f28:	f8d8 0000 	ldr.w	r0, [r8]
 8004f2c:	b110      	cbz	r0, 8004f34 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f2e:	6803      	ldr	r3, [r0, #0]
 8004f30:	695b      	ldr	r3, [r3, #20]
 8004f32:	4798      	blx	r3
    if (*currentPresenter)
 8004f34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f38:	b110      	cbz	r0, 8004f40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f3a:	6803      	ldr	r3, [r0, #0]
 8004f3c:	685b      	ldr	r3, [r3, #4]
 8004f3e:	4798      	blx	r3
    if (*currentScreen)
 8004f40:	f8d8 0000 	ldr.w	r0, [r8]
 8004f44:	b110      	cbz	r0, 8004f4c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f46:	6803      	ldr	r3, [r0, #0]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	4798      	blx	r3
    if (*currentPresenter)
 8004f4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f50:	b110      	cbz	r0, 8004f58 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f52:	6803      	ldr	r3, [r0, #0]
 8004f54:	689b      	ldr	r3, [r3, #8]
 8004f56:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f58:	68e0      	ldr	r0, [r4, #12]
 8004f5a:	2100      	movs	r1, #0
 8004f5c:	f7ff fcf6 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f60:	2114      	movs	r1, #20
 8004f62:	4605      	mov	r5, r0
 8004f64:	f7ff fcf6 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f68:	68a0      	ldr	r0, [r4, #8]
 8004f6a:	6803      	ldr	r3, [r0, #0]
 8004f6c:	2100      	movs	r1, #0
 8004f6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f70:	4798      	blx	r3
 8004f72:	4606      	mov	r6, r0
 8004f74:	f003 fe6e 	bl	8008c54 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f78:	6860      	ldr	r0, [r4, #4]
 8004f7a:	6803      	ldr	r3, [r0, #0]
 8004f7c:	2100      	movs	r1, #0
 8004f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f80:	4798      	blx	r3
 8004f82:	4631      	mov	r1, r6
 8004f84:	4604      	mov	r4, r0
 8004f86:	f003 fe3f 	bl	8008c08 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004f8a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f8e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f92:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f96:	b1dc      	cbz	r4, 8004fd0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004f98:	1d23      	adds	r3, r4, #4
 8004f9a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f9e:	6833      	ldr	r3, [r6, #0]
 8004fa0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fa4:	4630      	mov	r0, r6
 8004fa6:	68db      	ldr	r3, [r3, #12]
 8004fa8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004faa:	4798      	blx	r3
    newPresenter->activate();
 8004fac:	6823      	ldr	r3, [r4, #0]
 8004fae:	4620      	mov	r0, r4
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fb4:	4629      	mov	r1, r5
 8004fb6:	4630      	mov	r0, r6
 8004fb8:	f012 fe0a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fbc:	682b      	ldr	r3, [r5, #0]
 8004fbe:	4628      	mov	r0, r5
 8004fc0:	691b      	ldr	r3, [r3, #16]
 8004fc2:	4798      	blx	r3
    newTransition->invalidate();
 8004fc4:	682b      	ldr	r3, [r5, #0]
 8004fc6:	4628      	mov	r0, r5
 8004fc8:	695b      	ldr	r3, [r3, #20]
}
 8004fca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fce:	4718      	bx	r3
    model->bind(newPresenter);
 8004fd0:	4623      	mov	r3, r4
 8004fd2:	e7e2      	b.n	8004f9a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004fd4:	0802cc98 	.word	0x0802cc98
 8004fd8:	0802d9db 	.word	0x0802d9db
 8004fdc:	0802ce34 	.word	0x0802ce34
 8004fe0:	0802ce7b 	.word	0x0802ce7b
 8004fe4:	0802cf1e 	.word	0x0802cf1e
 8004fe8:	2001348c 	.word	0x2001348c
 8004fec:	20013488 	.word	0x20013488

08004ff0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004ff0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ff4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ff8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ffa:	68a0      	ldr	r0, [r4, #8]
 8004ffc:	6803      	ldr	r3, [r0, #0]
 8004ffe:	6a1b      	ldr	r3, [r3, #32]
 8005000:	4798      	blx	r3
 8005002:	f241 035b 	movw	r3, #4187	; 0x105b
 8005006:	4298      	cmp	r0, r3
 8005008:	d805      	bhi.n	8005016 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800500a:	4b42      	ldr	r3, [pc, #264]	; (8005114 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 800500c:	4a42      	ldr	r2, [pc, #264]	; (8005118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800500e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005010:	4842      	ldr	r0, [pc, #264]	; (800511c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005012:	f025 fe79 	bl	802ad08 <__assert_func>
 8005016:	6860      	ldr	r0, [r4, #4]
 8005018:	6803      	ldr	r3, [r0, #0]
 800501a:	6a1b      	ldr	r3, [r3, #32]
 800501c:	4798      	blx	r3
 800501e:	280f      	cmp	r0, #15
 8005020:	d803      	bhi.n	800502a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005022:	4b3f      	ldr	r3, [pc, #252]	; (8005120 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005024:	4a3c      	ldr	r2, [pc, #240]	; (8005118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005026:	21a4      	movs	r1, #164	; 0xa4
 8005028:	e7f2      	b.n	8005010 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800502a:	68e0      	ldr	r0, [r4, #12]
 800502c:	6803      	ldr	r3, [r0, #0]
 800502e:	6a1b      	ldr	r3, [r3, #32]
 8005030:	4798      	blx	r3
 8005032:	2837      	cmp	r0, #55	; 0x37
 8005034:	d803      	bhi.n	800503e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005036:	4b3b      	ldr	r3, [pc, #236]	; (8005124 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005038:	4a37      	ldr	r2, [pc, #220]	; (8005118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800503a:	21a5      	movs	r1, #165	; 0xa5
 800503c:	e7e8      	b.n	8005010 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800503e:	f010 ff9b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005042:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005128 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005046:	3004      	adds	r0, #4
 8005048:	f010 fffc 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800504c:	f8d9 0000 	ldr.w	r0, [r9]
 8005050:	b110      	cbz	r0, 8005058 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005052:	6803      	ldr	r3, [r0, #0]
 8005054:	68db      	ldr	r3, [r3, #12]
 8005056:	4798      	blx	r3
    if (*currentTrans)
 8005058:	f8d9 0000 	ldr.w	r0, [r9]
 800505c:	b110      	cbz	r0, 8005064 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800505e:	6803      	ldr	r3, [r0, #0]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	4798      	blx	r3
    if (*currentScreen)
 8005064:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800512c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005068:	f8d8 0000 	ldr.w	r0, [r8]
 800506c:	b110      	cbz	r0, 8005074 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800506e:	6803      	ldr	r3, [r0, #0]
 8005070:	695b      	ldr	r3, [r3, #20]
 8005072:	4798      	blx	r3
    if (*currentPresenter)
 8005074:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005078:	b110      	cbz	r0, 8005080 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800507a:	6803      	ldr	r3, [r0, #0]
 800507c:	685b      	ldr	r3, [r3, #4]
 800507e:	4798      	blx	r3
    if (*currentScreen)
 8005080:	f8d8 0000 	ldr.w	r0, [r8]
 8005084:	b110      	cbz	r0, 800508c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005086:	6803      	ldr	r3, [r0, #0]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	4798      	blx	r3
    if (*currentPresenter)
 800508c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005090:	b110      	cbz	r0, 8005098 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005092:	6803      	ldr	r3, [r0, #0]
 8005094:	689b      	ldr	r3, [r3, #8]
 8005096:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005098:	68e0      	ldr	r0, [r4, #12]
 800509a:	2100      	movs	r1, #0
 800509c:	f7ff fc56 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80050a0:	2114      	movs	r1, #20
 80050a2:	4605      	mov	r5, r0
 80050a4:	f7ff fc56 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050a8:	68a0      	ldr	r0, [r4, #8]
 80050aa:	6803      	ldr	r3, [r0, #0]
 80050ac:	2100      	movs	r1, #0
 80050ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050b0:	4798      	blx	r3
 80050b2:	4606      	mov	r6, r0
 80050b4:	f003 fd8c 	bl	8008bd0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050b8:	6860      	ldr	r0, [r4, #4]
 80050ba:	6803      	ldr	r3, [r0, #0]
 80050bc:	2100      	movs	r1, #0
 80050be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050c0:	4798      	blx	r3
 80050c2:	4631      	mov	r1, r6
 80050c4:	4604      	mov	r4, r0
 80050c6:	f003 fd5d 	bl	8008b84 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80050ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050d6:	b1dc      	cbz	r4, 8005110 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80050d8:	1d23      	adds	r3, r4, #4
 80050da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050de:	6833      	ldr	r3, [r6, #0]
 80050e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80050e4:	4630      	mov	r0, r6
 80050e6:	68db      	ldr	r3, [r3, #12]
 80050e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050ea:	4798      	blx	r3
    newPresenter->activate();
 80050ec:	6823      	ldr	r3, [r4, #0]
 80050ee:	4620      	mov	r0, r4
 80050f0:	681b      	ldr	r3, [r3, #0]
 80050f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050f4:	4629      	mov	r1, r5
 80050f6:	4630      	mov	r0, r6
 80050f8:	f012 fd6a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050fc:	682b      	ldr	r3, [r5, #0]
 80050fe:	4628      	mov	r0, r5
 8005100:	691b      	ldr	r3, [r3, #16]
 8005102:	4798      	blx	r3
    newTransition->invalidate();
 8005104:	682b      	ldr	r3, [r5, #0]
 8005106:	4628      	mov	r0, r5
 8005108:	695b      	ldr	r3, [r3, #20]
}
 800510a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800510e:	4718      	bx	r3
    model->bind(newPresenter);
 8005110:	4623      	mov	r3, r4
 8005112:	e7e2      	b.n	80050da <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005114:	0802cc98 	.word	0x0802cc98
 8005118:	0802db1f 	.word	0x0802db1f
 800511c:	0802ce34 	.word	0x0802ce34
 8005120:	0802ce7b 	.word	0x0802ce7b
 8005124:	0802cf1e 	.word	0x0802cf1e
 8005128:	2001348c 	.word	0x2001348c
 800512c:	20013488 	.word	0x20013488

08005130 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005134:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005138:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800513a:	68a0      	ldr	r0, [r4, #8]
 800513c:	6803      	ldr	r3, [r0, #0]
 800513e:	6a1b      	ldr	r3, [r3, #32]
 8005140:	4798      	blx	r3
 8005142:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005146:	d205      	bcs.n	8005154 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8005148:	4b42      	ldr	r3, [pc, #264]	; (8005254 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800514a:	4a43      	ldr	r2, [pc, #268]	; (8005258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800514c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800514e:	4843      	ldr	r0, [pc, #268]	; (800525c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005150:	f025 fdda 	bl	802ad08 <__assert_func>
 8005154:	6860      	ldr	r0, [r4, #4]
 8005156:	6803      	ldr	r3, [r0, #0]
 8005158:	6a1b      	ldr	r3, [r3, #32]
 800515a:	4798      	blx	r3
 800515c:	280f      	cmp	r0, #15
 800515e:	d803      	bhi.n	8005168 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005160:	4b3f      	ldr	r3, [pc, #252]	; (8005260 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005162:	4a3d      	ldr	r2, [pc, #244]	; (8005258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005164:	21a4      	movs	r1, #164	; 0xa4
 8005166:	e7f2      	b.n	800514e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005168:	68e0      	ldr	r0, [r4, #12]
 800516a:	6803      	ldr	r3, [r0, #0]
 800516c:	6a1b      	ldr	r3, [r3, #32]
 800516e:	4798      	blx	r3
 8005170:	2837      	cmp	r0, #55	; 0x37
 8005172:	d803      	bhi.n	800517c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005174:	4b3b      	ldr	r3, [pc, #236]	; (8005264 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005176:	4a38      	ldr	r2, [pc, #224]	; (8005258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005178:	21a5      	movs	r1, #165	; 0xa5
 800517a:	e7e8      	b.n	800514e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800517c:	f010 fefc 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005180:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005268 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005184:	3004      	adds	r0, #4
 8005186:	f010 ff5d 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800518a:	f8d9 0000 	ldr.w	r0, [r9]
 800518e:	b110      	cbz	r0, 8005196 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005190:	6803      	ldr	r3, [r0, #0]
 8005192:	68db      	ldr	r3, [r3, #12]
 8005194:	4798      	blx	r3
    if (*currentTrans)
 8005196:	f8d9 0000 	ldr.w	r0, [r9]
 800519a:	b110      	cbz	r0, 80051a2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800519c:	6803      	ldr	r3, [r0, #0]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	4798      	blx	r3
    if (*currentScreen)
 80051a2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800526c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80051a6:	f8d8 0000 	ldr.w	r0, [r8]
 80051aa:	b110      	cbz	r0, 80051b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80051ac:	6803      	ldr	r3, [r0, #0]
 80051ae:	695b      	ldr	r3, [r3, #20]
 80051b0:	4798      	blx	r3
    if (*currentPresenter)
 80051b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051b6:	b110      	cbz	r0, 80051be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80051b8:	6803      	ldr	r3, [r0, #0]
 80051ba:	685b      	ldr	r3, [r3, #4]
 80051bc:	4798      	blx	r3
    if (*currentScreen)
 80051be:	f8d8 0000 	ldr.w	r0, [r8]
 80051c2:	b110      	cbz	r0, 80051ca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80051c4:	6803      	ldr	r3, [r0, #0]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	4798      	blx	r3
    if (*currentPresenter)
 80051ca:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ce:	b110      	cbz	r0, 80051d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80051d0:	6803      	ldr	r3, [r0, #0]
 80051d2:	689b      	ldr	r3, [r3, #8]
 80051d4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051d6:	68e0      	ldr	r0, [r4, #12]
 80051d8:	2100      	movs	r1, #0
 80051da:	f7ff fbb7 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051de:	2114      	movs	r1, #20
 80051e0:	4605      	mov	r5, r0
 80051e2:	f7ff fbb7 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051e6:	68a0      	ldr	r0, [r4, #8]
 80051e8:	6803      	ldr	r3, [r0, #0]
 80051ea:	2100      	movs	r1, #0
 80051ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ee:	4798      	blx	r3
 80051f0:	4606      	mov	r6, r0
 80051f2:	f003 fc93 	bl	8008b1c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051f6:	6860      	ldr	r0, [r4, #4]
 80051f8:	6803      	ldr	r3, [r0, #0]
 80051fa:	2100      	movs	r1, #0
 80051fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051fe:	4798      	blx	r3
 8005200:	4631      	mov	r1, r6
 8005202:	4604      	mov	r4, r0
 8005204:	f003 fc64 	bl	8008ad0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005208:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800520c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005210:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005214:	b1dc      	cbz	r4, 800524e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8005216:	1d23      	adds	r3, r4, #4
 8005218:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800521c:	6833      	ldr	r3, [r6, #0]
 800521e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005222:	4630      	mov	r0, r6
 8005224:	68db      	ldr	r3, [r3, #12]
 8005226:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005228:	4798      	blx	r3
    newPresenter->activate();
 800522a:	6823      	ldr	r3, [r4, #0]
 800522c:	4620      	mov	r0, r4
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005232:	4629      	mov	r1, r5
 8005234:	4630      	mov	r0, r6
 8005236:	f012 fccb 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800523a:	682b      	ldr	r3, [r5, #0]
 800523c:	4628      	mov	r0, r5
 800523e:	691b      	ldr	r3, [r3, #16]
 8005240:	4798      	blx	r3
    newTransition->invalidate();
 8005242:	682b      	ldr	r3, [r5, #0]
 8005244:	4628      	mov	r0, r5
 8005246:	695b      	ldr	r3, [r3, #20]
}
 8005248:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800524c:	4718      	bx	r3
    model->bind(newPresenter);
 800524e:	4623      	mov	r3, r4
 8005250:	e7e2      	b.n	8005218 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005252:	bf00      	nop
 8005254:	0802cc98 	.word	0x0802cc98
 8005258:	0802dc5f 	.word	0x0802dc5f
 800525c:	0802ce34 	.word	0x0802ce34
 8005260:	0802ce7b 	.word	0x0802ce7b
 8005264:	0802cf1e 	.word	0x0802cf1e
 8005268:	2001348c 	.word	0x2001348c
 800526c:	20013488 	.word	0x20013488

08005270 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005270:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005274:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005278:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800527a:	68a0      	ldr	r0, [r4, #8]
 800527c:	6803      	ldr	r3, [r0, #0]
 800527e:	6a1b      	ldr	r3, [r3, #32]
 8005280:	4798      	blx	r3
 8005282:	f241 035b 	movw	r3, #4187	; 0x105b
 8005286:	4298      	cmp	r0, r3
 8005288:	d805      	bhi.n	8005296 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800528a:	4b42      	ldr	r3, [pc, #264]	; (8005394 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800528c:	4a42      	ldr	r2, [pc, #264]	; (8005398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800528e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005290:	4842      	ldr	r0, [pc, #264]	; (800539c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005292:	f025 fd39 	bl	802ad08 <__assert_func>
 8005296:	6860      	ldr	r0, [r4, #4]
 8005298:	6803      	ldr	r3, [r0, #0]
 800529a:	6a1b      	ldr	r3, [r3, #32]
 800529c:	4798      	blx	r3
 800529e:	280f      	cmp	r0, #15
 80052a0:	d803      	bhi.n	80052aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80052a2:	4b3f      	ldr	r3, [pc, #252]	; (80053a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80052a4:	4a3c      	ldr	r2, [pc, #240]	; (8005398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80052a6:	21a4      	movs	r1, #164	; 0xa4
 80052a8:	e7f2      	b.n	8005290 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052aa:	68e0      	ldr	r0, [r4, #12]
 80052ac:	6803      	ldr	r3, [r0, #0]
 80052ae:	6a1b      	ldr	r3, [r3, #32]
 80052b0:	4798      	blx	r3
 80052b2:	2837      	cmp	r0, #55	; 0x37
 80052b4:	d803      	bhi.n	80052be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80052b6:	4b3b      	ldr	r3, [pc, #236]	; (80053a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80052b8:	4a37      	ldr	r2, [pc, #220]	; (8005398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80052ba:	21a5      	movs	r1, #165	; 0xa5
 80052bc:	e7e8      	b.n	8005290 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80052be:	f010 fe5b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052c2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80053a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80052c6:	3004      	adds	r0, #4
 80052c8:	f010 febc 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052cc:	f8d9 0000 	ldr.w	r0, [r9]
 80052d0:	b110      	cbz	r0, 80052d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052d2:	6803      	ldr	r3, [r0, #0]
 80052d4:	68db      	ldr	r3, [r3, #12]
 80052d6:	4798      	blx	r3
    if (*currentTrans)
 80052d8:	f8d9 0000 	ldr.w	r0, [r9]
 80052dc:	b110      	cbz	r0, 80052e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052de:	6803      	ldr	r3, [r0, #0]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	4798      	blx	r3
    if (*currentScreen)
 80052e4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80053ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80052e8:	f8d8 0000 	ldr.w	r0, [r8]
 80052ec:	b110      	cbz	r0, 80052f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052ee:	6803      	ldr	r3, [r0, #0]
 80052f0:	695b      	ldr	r3, [r3, #20]
 80052f2:	4798      	blx	r3
    if (*currentPresenter)
 80052f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052f8:	b110      	cbz	r0, 8005300 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052fa:	6803      	ldr	r3, [r0, #0]
 80052fc:	685b      	ldr	r3, [r3, #4]
 80052fe:	4798      	blx	r3
    if (*currentScreen)
 8005300:	f8d8 0000 	ldr.w	r0, [r8]
 8005304:	b110      	cbz	r0, 800530c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005306:	6803      	ldr	r3, [r0, #0]
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	4798      	blx	r3
    if (*currentPresenter)
 800530c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005310:	b110      	cbz	r0, 8005318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005312:	6803      	ldr	r3, [r0, #0]
 8005314:	689b      	ldr	r3, [r3, #8]
 8005316:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005318:	68e0      	ldr	r0, [r4, #12]
 800531a:	2100      	movs	r1, #0
 800531c:	f7ff fb16 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005320:	2114      	movs	r1, #20
 8005322:	4605      	mov	r5, r0
 8005324:	f7ff fb16 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005328:	68a0      	ldr	r0, [r4, #8]
 800532a:	6803      	ldr	r3, [r0, #0]
 800532c:	2100      	movs	r1, #0
 800532e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005330:	4798      	blx	r3
 8005332:	4606      	mov	r6, r0
 8005334:	f003 fdd0 	bl	8008ed8 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005338:	6860      	ldr	r0, [r4, #4]
 800533a:	6803      	ldr	r3, [r0, #0]
 800533c:	2100      	movs	r1, #0
 800533e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005340:	4798      	blx	r3
 8005342:	4631      	mov	r1, r6
 8005344:	4604      	mov	r4, r0
 8005346:	f003 fda1 	bl	8008e8c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800534a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800534e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005352:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005356:	b1dc      	cbz	r4, 8005390 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005358:	1d23      	adds	r3, r4, #4
 800535a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800535e:	6833      	ldr	r3, [r6, #0]
 8005360:	f8c4 a008 	str.w	sl, [r4, #8]
 8005364:	4630      	mov	r0, r6
 8005366:	68db      	ldr	r3, [r3, #12]
 8005368:	63f4      	str	r4, [r6, #60]	; 0x3c
 800536a:	4798      	blx	r3
    newPresenter->activate();
 800536c:	6823      	ldr	r3, [r4, #0]
 800536e:	4620      	mov	r0, r4
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005374:	4629      	mov	r1, r5
 8005376:	4630      	mov	r0, r6
 8005378:	f012 fc2a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800537c:	682b      	ldr	r3, [r5, #0]
 800537e:	4628      	mov	r0, r5
 8005380:	691b      	ldr	r3, [r3, #16]
 8005382:	4798      	blx	r3
    newTransition->invalidate();
 8005384:	682b      	ldr	r3, [r5, #0]
 8005386:	4628      	mov	r0, r5
 8005388:	695b      	ldr	r3, [r3, #20]
}
 800538a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800538e:	4718      	bx	r3
    model->bind(newPresenter);
 8005390:	4623      	mov	r3, r4
 8005392:	e7e2      	b.n	800535a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005394:	0802cc98 	.word	0x0802cc98
 8005398:	0802dd8f 	.word	0x0802dd8f
 800539c:	0802ce34 	.word	0x0802ce34
 80053a0:	0802ce7b 	.word	0x0802ce7b
 80053a4:	0802cf1e 	.word	0x0802cf1e
 80053a8:	2001348c 	.word	0x2001348c
 80053ac:	20013488 	.word	0x20013488

080053b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 80053b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80053b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053ba:	68a0      	ldr	r0, [r4, #8]
 80053bc:	6803      	ldr	r3, [r0, #0]
 80053be:	6a1b      	ldr	r3, [r3, #32]
 80053c0:	4798      	blx	r3
 80053c2:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80053c6:	4298      	cmp	r0, r3
 80053c8:	d805      	bhi.n	80053d6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80053ca:	4b42      	ldr	r3, [pc, #264]	; (80054d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80053cc:	4a42      	ldr	r2, [pc, #264]	; (80054d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80053ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053d0:	4842      	ldr	r0, [pc, #264]	; (80054dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80053d2:	f025 fc99 	bl	802ad08 <__assert_func>
 80053d6:	6860      	ldr	r0, [r4, #4]
 80053d8:	6803      	ldr	r3, [r0, #0]
 80053da:	6a1b      	ldr	r3, [r3, #32]
 80053dc:	4798      	blx	r3
 80053de:	280f      	cmp	r0, #15
 80053e0:	d803      	bhi.n	80053ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80053e2:	4b3f      	ldr	r3, [pc, #252]	; (80054e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80053e4:	4a3c      	ldr	r2, [pc, #240]	; (80054d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80053e6:	21a4      	movs	r1, #164	; 0xa4
 80053e8:	e7f2      	b.n	80053d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053ea:	68e0      	ldr	r0, [r4, #12]
 80053ec:	6803      	ldr	r3, [r0, #0]
 80053ee:	6a1b      	ldr	r3, [r3, #32]
 80053f0:	4798      	blx	r3
 80053f2:	2837      	cmp	r0, #55	; 0x37
 80053f4:	d803      	bhi.n	80053fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80053f6:	4b3b      	ldr	r3, [pc, #236]	; (80054e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80053f8:	4a37      	ldr	r2, [pc, #220]	; (80054d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80053fa:	21a5      	movs	r1, #165	; 0xa5
 80053fc:	e7e8      	b.n	80053d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053fe:	f010 fdbb 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005402:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005406:	3004      	adds	r0, #4
 8005408:	f010 fe1c 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800540c:	f8d9 0000 	ldr.w	r0, [r9]
 8005410:	b110      	cbz	r0, 8005418 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005412:	6803      	ldr	r3, [r0, #0]
 8005414:	68db      	ldr	r3, [r3, #12]
 8005416:	4798      	blx	r3
    if (*currentTrans)
 8005418:	f8d9 0000 	ldr.w	r0, [r9]
 800541c:	b110      	cbz	r0, 8005424 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800541e:	6803      	ldr	r3, [r0, #0]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	4798      	blx	r3
    if (*currentScreen)
 8005424:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80054ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005428:	f8d8 0000 	ldr.w	r0, [r8]
 800542c:	b110      	cbz	r0, 8005434 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800542e:	6803      	ldr	r3, [r0, #0]
 8005430:	695b      	ldr	r3, [r3, #20]
 8005432:	4798      	blx	r3
    if (*currentPresenter)
 8005434:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005438:	b110      	cbz	r0, 8005440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800543a:	6803      	ldr	r3, [r0, #0]
 800543c:	685b      	ldr	r3, [r3, #4]
 800543e:	4798      	blx	r3
    if (*currentScreen)
 8005440:	f8d8 0000 	ldr.w	r0, [r8]
 8005444:	b110      	cbz	r0, 800544c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005446:	6803      	ldr	r3, [r0, #0]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	4798      	blx	r3
    if (*currentPresenter)
 800544c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005450:	b110      	cbz	r0, 8005458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005452:	6803      	ldr	r3, [r0, #0]
 8005454:	689b      	ldr	r3, [r3, #8]
 8005456:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005458:	68e0      	ldr	r0, [r4, #12]
 800545a:	2100      	movs	r1, #0
 800545c:	f7ff fa76 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005460:	2114      	movs	r1, #20
 8005462:	4605      	mov	r5, r0
 8005464:	f7ff fa76 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005468:	68a0      	ldr	r0, [r4, #8]
 800546a:	6803      	ldr	r3, [r0, #0]
 800546c:	2100      	movs	r1, #0
 800546e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005470:	4798      	blx	r3
 8005472:	4606      	mov	r6, r0
 8005474:	f003 fc90 	bl	8008d98 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005478:	6860      	ldr	r0, [r4, #4]
 800547a:	6803      	ldr	r3, [r0, #0]
 800547c:	2100      	movs	r1, #0
 800547e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005480:	4798      	blx	r3
 8005482:	4631      	mov	r1, r6
 8005484:	4604      	mov	r4, r0
 8005486:	f003 fc61 	bl	8008d4c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800548a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800548e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005492:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005496:	b1dc      	cbz	r4, 80054d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005498:	1d23      	adds	r3, r4, #4
 800549a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800549e:	6833      	ldr	r3, [r6, #0]
 80054a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80054a4:	4630      	mov	r0, r6
 80054a6:	68db      	ldr	r3, [r3, #12]
 80054a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80054aa:	4798      	blx	r3
    newPresenter->activate();
 80054ac:	6823      	ldr	r3, [r4, #0]
 80054ae:	4620      	mov	r0, r4
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054b4:	4629      	mov	r1, r5
 80054b6:	4630      	mov	r0, r6
 80054b8:	f012 fb8a 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054bc:	682b      	ldr	r3, [r5, #0]
 80054be:	4628      	mov	r0, r5
 80054c0:	691b      	ldr	r3, [r3, #16]
 80054c2:	4798      	blx	r3
    newTransition->invalidate();
 80054c4:	682b      	ldr	r3, [r5, #0]
 80054c6:	4628      	mov	r0, r5
 80054c8:	695b      	ldr	r3, [r3, #20]
}
 80054ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054ce:	4718      	bx	r3
    model->bind(newPresenter);
 80054d0:	4623      	mov	r3, r4
 80054d2:	e7e2      	b.n	800549a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80054d4:	0802cc98 	.word	0x0802cc98
 80054d8:	0802ded1 	.word	0x0802ded1
 80054dc:	0802ce34 	.word	0x0802ce34
 80054e0:	0802ce7b 	.word	0x0802ce7b
 80054e4:	0802cf1e 	.word	0x0802cf1e
 80054e8:	2001348c 	.word	0x2001348c
 80054ec:	20013488 	.word	0x20013488

080054f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80054f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054fa:	68a0      	ldr	r0, [r4, #8]
 80054fc:	6803      	ldr	r3, [r0, #0]
 80054fe:	6a1b      	ldr	r3, [r3, #32]
 8005500:	4798      	blx	r3
 8005502:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005506:	d205      	bcs.n	8005514 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005508:	4b42      	ldr	r3, [pc, #264]	; (8005614 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 800550a:	4a43      	ldr	r2, [pc, #268]	; (8005618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800550c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800550e:	4843      	ldr	r0, [pc, #268]	; (800561c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005510:	f025 fbfa 	bl	802ad08 <__assert_func>
 8005514:	6860      	ldr	r0, [r4, #4]
 8005516:	6803      	ldr	r3, [r0, #0]
 8005518:	6a1b      	ldr	r3, [r3, #32]
 800551a:	4798      	blx	r3
 800551c:	280f      	cmp	r0, #15
 800551e:	d803      	bhi.n	8005528 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005520:	4b3f      	ldr	r3, [pc, #252]	; (8005620 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005522:	4a3d      	ldr	r2, [pc, #244]	; (8005618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005524:	21a4      	movs	r1, #164	; 0xa4
 8005526:	e7f2      	b.n	800550e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005528:	68e0      	ldr	r0, [r4, #12]
 800552a:	6803      	ldr	r3, [r0, #0]
 800552c:	6a1b      	ldr	r3, [r3, #32]
 800552e:	4798      	blx	r3
 8005530:	2837      	cmp	r0, #55	; 0x37
 8005532:	d803      	bhi.n	800553c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005534:	4b3b      	ldr	r3, [pc, #236]	; (8005624 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005536:	4a38      	ldr	r2, [pc, #224]	; (8005618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005538:	21a5      	movs	r1, #165	; 0xa5
 800553a:	e7e8      	b.n	800550e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800553c:	f010 fd1c 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005540:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005628 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005544:	3004      	adds	r0, #4
 8005546:	f010 fd7d 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800554a:	f8d9 0000 	ldr.w	r0, [r9]
 800554e:	b110      	cbz	r0, 8005556 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005550:	6803      	ldr	r3, [r0, #0]
 8005552:	68db      	ldr	r3, [r3, #12]
 8005554:	4798      	blx	r3
    if (*currentTrans)
 8005556:	f8d9 0000 	ldr.w	r0, [r9]
 800555a:	b110      	cbz	r0, 8005562 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800555c:	6803      	ldr	r3, [r0, #0]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	4798      	blx	r3
    if (*currentScreen)
 8005562:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800562c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005566:	f8d8 0000 	ldr.w	r0, [r8]
 800556a:	b110      	cbz	r0, 8005572 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800556c:	6803      	ldr	r3, [r0, #0]
 800556e:	695b      	ldr	r3, [r3, #20]
 8005570:	4798      	blx	r3
    if (*currentPresenter)
 8005572:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005576:	b110      	cbz	r0, 800557e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005578:	6803      	ldr	r3, [r0, #0]
 800557a:	685b      	ldr	r3, [r3, #4]
 800557c:	4798      	blx	r3
    if (*currentScreen)
 800557e:	f8d8 0000 	ldr.w	r0, [r8]
 8005582:	b110      	cbz	r0, 800558a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005584:	6803      	ldr	r3, [r0, #0]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	4798      	blx	r3
    if (*currentPresenter)
 800558a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800558e:	b110      	cbz	r0, 8005596 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005590:	6803      	ldr	r3, [r0, #0]
 8005592:	689b      	ldr	r3, [r3, #8]
 8005594:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005596:	68e0      	ldr	r0, [r4, #12]
 8005598:	2100      	movs	r1, #0
 800559a:	f7ff f9d7 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800559e:	2114      	movs	r1, #20
 80055a0:	4605      	mov	r5, r0
 80055a2:	f7ff f9d7 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80055a6:	68a0      	ldr	r0, [r4, #8]
 80055a8:	6803      	ldr	r3, [r0, #0]
 80055aa:	2100      	movs	r1, #0
 80055ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ae:	4798      	blx	r3
 80055b0:	4606      	mov	r6, r0
 80055b2:	f003 fb97 	bl	8008ce4 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055b6:	6860      	ldr	r0, [r4, #4]
 80055b8:	6803      	ldr	r3, [r0, #0]
 80055ba:	2100      	movs	r1, #0
 80055bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055be:	4798      	blx	r3
 80055c0:	4631      	mov	r1, r6
 80055c2:	4604      	mov	r4, r0
 80055c4:	f003 fb68 	bl	8008c98 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 80055c8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055cc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055d0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055d4:	b1dc      	cbz	r4, 800560e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 80055d6:	1d23      	adds	r3, r4, #4
 80055d8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055dc:	6833      	ldr	r3, [r6, #0]
 80055de:	f8c4 a008 	str.w	sl, [r4, #8]
 80055e2:	4630      	mov	r0, r6
 80055e4:	68db      	ldr	r3, [r3, #12]
 80055e6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055e8:	4798      	blx	r3
    newPresenter->activate();
 80055ea:	6823      	ldr	r3, [r4, #0]
 80055ec:	4620      	mov	r0, r4
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055f2:	4629      	mov	r1, r5
 80055f4:	4630      	mov	r0, r6
 80055f6:	f012 faeb 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055fa:	682b      	ldr	r3, [r5, #0]
 80055fc:	4628      	mov	r0, r5
 80055fe:	691b      	ldr	r3, [r3, #16]
 8005600:	4798      	blx	r3
    newTransition->invalidate();
 8005602:	682b      	ldr	r3, [r5, #0]
 8005604:	4628      	mov	r0, r5
 8005606:	695b      	ldr	r3, [r3, #20]
}
 8005608:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800560c:	4718      	bx	r3
    model->bind(newPresenter);
 800560e:	4623      	mov	r3, r4
 8005610:	e7e2      	b.n	80055d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005612:	bf00      	nop
 8005614:	0802cc98 	.word	0x0802cc98
 8005618:	0802e013 	.word	0x0802e013
 800561c:	0802ce34 	.word	0x0802ce34
 8005620:	0802ce7b 	.word	0x0802ce7b
 8005624:	0802cf1e 	.word	0x0802cf1e
 8005628:	2001348c 	.word	0x2001348c
 800562c:	20013488 	.word	0x20013488

08005630 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005630:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005634:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005638:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800563a:	68a0      	ldr	r0, [r4, #8]
 800563c:	6803      	ldr	r3, [r0, #0]
 800563e:	6a1b      	ldr	r3, [r3, #32]
 8005640:	4798      	blx	r3
 8005642:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005646:	d205      	bcs.n	8005654 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005648:	4b42      	ldr	r3, [pc, #264]	; (8005754 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 800564a:	4a43      	ldr	r2, [pc, #268]	; (8005758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800564c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800564e:	4843      	ldr	r0, [pc, #268]	; (800575c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005650:	f025 fb5a 	bl	802ad08 <__assert_func>
 8005654:	6860      	ldr	r0, [r4, #4]
 8005656:	6803      	ldr	r3, [r0, #0]
 8005658:	6a1b      	ldr	r3, [r3, #32]
 800565a:	4798      	blx	r3
 800565c:	280f      	cmp	r0, #15
 800565e:	d803      	bhi.n	8005668 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005660:	4b3f      	ldr	r3, [pc, #252]	; (8005760 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005662:	4a3d      	ldr	r2, [pc, #244]	; (8005758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005664:	21a4      	movs	r1, #164	; 0xa4
 8005666:	e7f2      	b.n	800564e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005668:	68e0      	ldr	r0, [r4, #12]
 800566a:	6803      	ldr	r3, [r0, #0]
 800566c:	6a1b      	ldr	r3, [r3, #32]
 800566e:	4798      	blx	r3
 8005670:	2837      	cmp	r0, #55	; 0x37
 8005672:	d803      	bhi.n	800567c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005674:	4b3b      	ldr	r3, [pc, #236]	; (8005764 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005676:	4a38      	ldr	r2, [pc, #224]	; (8005758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005678:	21a5      	movs	r1, #165	; 0xa5
 800567a:	e7e8      	b.n	800564e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800567c:	f010 fc7c 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005680:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005768 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005684:	3004      	adds	r0, #4
 8005686:	f010 fcdd 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800568a:	f8d9 0000 	ldr.w	r0, [r9]
 800568e:	b110      	cbz	r0, 8005696 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005690:	6803      	ldr	r3, [r0, #0]
 8005692:	68db      	ldr	r3, [r3, #12]
 8005694:	4798      	blx	r3
    if (*currentTrans)
 8005696:	f8d9 0000 	ldr.w	r0, [r9]
 800569a:	b110      	cbz	r0, 80056a2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800569c:	6803      	ldr	r3, [r0, #0]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	4798      	blx	r3
    if (*currentScreen)
 80056a2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800576c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 80056a6:	f8d8 0000 	ldr.w	r0, [r8]
 80056aa:	b110      	cbz	r0, 80056b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80056ac:	6803      	ldr	r3, [r0, #0]
 80056ae:	695b      	ldr	r3, [r3, #20]
 80056b0:	4798      	blx	r3
    if (*currentPresenter)
 80056b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056b6:	b110      	cbz	r0, 80056be <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80056b8:	6803      	ldr	r3, [r0, #0]
 80056ba:	685b      	ldr	r3, [r3, #4]
 80056bc:	4798      	blx	r3
    if (*currentScreen)
 80056be:	f8d8 0000 	ldr.w	r0, [r8]
 80056c2:	b110      	cbz	r0, 80056ca <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80056c4:	6803      	ldr	r3, [r0, #0]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	4798      	blx	r3
    if (*currentPresenter)
 80056ca:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056ce:	b110      	cbz	r0, 80056d6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80056d0:	6803      	ldr	r3, [r0, #0]
 80056d2:	689b      	ldr	r3, [r3, #8]
 80056d4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056d6:	68e0      	ldr	r0, [r4, #12]
 80056d8:	2100      	movs	r1, #0
 80056da:	f7ff f937 	bl	800494c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056de:	2114      	movs	r1, #20
 80056e0:	4605      	mov	r5, r0
 80056e2:	f7ff f937 	bl	8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056e6:	68a0      	ldr	r0, [r4, #8]
 80056e8:	6803      	ldr	r3, [r0, #0]
 80056ea:	2100      	movs	r1, #0
 80056ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ee:	4798      	blx	r3
 80056f0:	4606      	mov	r6, r0
 80056f2:	f003 f9b3 	bl	8008a5c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056f6:	6860      	ldr	r0, [r4, #4]
 80056f8:	6803      	ldr	r3, [r0, #0]
 80056fa:	2100      	movs	r1, #0
 80056fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056fe:	4798      	blx	r3
 8005700:	4631      	mov	r1, r6
 8005702:	4604      	mov	r4, r0
 8005704:	f003 f984 	bl	8008a10 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005708:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800570c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005710:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005714:	b1dc      	cbz	r4, 800574e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005716:	1d23      	adds	r3, r4, #4
 8005718:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800571c:	6833      	ldr	r3, [r6, #0]
 800571e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005722:	4630      	mov	r0, r6
 8005724:	68db      	ldr	r3, [r3, #12]
 8005726:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005728:	4798      	blx	r3
    newPresenter->activate();
 800572a:	6823      	ldr	r3, [r4, #0]
 800572c:	4620      	mov	r0, r4
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005732:	4629      	mov	r1, r5
 8005734:	4630      	mov	r0, r6
 8005736:	f012 fa4b 	bl	8017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800573a:	682b      	ldr	r3, [r5, #0]
 800573c:	4628      	mov	r0, r5
 800573e:	691b      	ldr	r3, [r3, #16]
 8005740:	4798      	blx	r3
    newTransition->invalidate();
 8005742:	682b      	ldr	r3, [r5, #0]
 8005744:	4628      	mov	r0, r5
 8005746:	695b      	ldr	r3, [r3, #20]
}
 8005748:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800574c:	4718      	bx	r3
    model->bind(newPresenter);
 800574e:	4623      	mov	r3, r4
 8005750:	e7e2      	b.n	8005718 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005752:	bf00      	nop
 8005754:	0802cc98 	.word	0x0802cc98
 8005758:	0802e13f 	.word	0x0802e13f
 800575c:	0802ce34 	.word	0x0802ce34
 8005760:	0802ce7b 	.word	0x0802ce7b
 8005764:	0802cf1e 	.word	0x0802cf1e
 8005768:	2001348c 	.word	0x2001348c
 800576c:	20013488 	.word	0x20013488

08005770 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005770:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005772:	4770      	bx	lr

08005774 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005774:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005776:	4770      	bx	lr

08005778 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005778:	4770      	bx	lr

0800577a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800577a:	888b      	ldrh	r3, [r1, #4]
 800577c:	69c0      	ldr	r0, [r0, #28]
 800577e:	680a      	ldr	r2, [r1, #0]
 8005780:	0adb      	lsrs	r3, r3, #11
 8005782:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005786:	4410      	add	r0, r2
 8005788:	4770      	bx	lr

0800578a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800578a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800578c:	b1c2      	cbz	r2, 80057c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800578e:	7b13      	ldrb	r3, [r2, #12]
 8005790:	b1b3      	cbz	r3, 80057c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005792:	7b54      	ldrb	r4, [r2, #13]
 8005794:	7ad2      	ldrb	r2, [r2, #11]
 8005796:	0224      	lsls	r4, r4, #8
 8005798:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800579c:	4314      	orrs	r4, r2
 800579e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80057a0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80057a2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80057a6:	8813      	ldrh	r3, [r2, #0]
 80057a8:	428b      	cmp	r3, r1
 80057aa:	d102      	bne.n	80057b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80057ac:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80057b0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80057b2:	d805      	bhi.n	80057c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80057b4:	3801      	subs	r0, #1
 80057b6:	b280      	uxth	r0, r0
 80057b8:	3204      	adds	r2, #4
 80057ba:	2800      	cmp	r0, #0
 80057bc:	d1f3      	bne.n	80057a6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80057be:	e7f7      	b.n	80057b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80057c0:	2000      	movs	r0, #0
 80057c2:	e7f5      	b.n	80057b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080057c4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80057c4:	b510      	push	{r4, lr}
 80057c6:	212c      	movs	r1, #44	; 0x2c
 80057c8:	4604      	mov	r4, r0
 80057ca:	f024 fc8a 	bl	802a0e2 <_ZdlPvj>
 80057ce:	4620      	mov	r0, r4
 80057d0:	bd10      	pop	{r4, pc}
	...

080057d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80057d4:	b530      	push	{r4, r5, lr}
 80057d6:	b08b      	sub	sp, #44	; 0x2c
 80057d8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80057da:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80057de:	9508      	str	r5, [sp, #32]
 80057e0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80057e4:	9507      	str	r5, [sp, #28]
 80057e6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80057ea:	9506      	str	r5, [sp, #24]
 80057ec:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80057f0:	9505      	str	r5, [sp, #20]
 80057f2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80057f6:	9504      	str	r5, [sp, #16]
 80057f8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80057fc:	9503      	str	r5, [sp, #12]
 80057fe:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005802:	9502      	str	r5, [sp, #8]
 8005804:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005808:	9501      	str	r5, [sp, #4]
 800580a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800580e:	9500      	str	r5, [sp, #0]
 8005810:	f011 fd48 	bl	80172a4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005814:	4b06      	ldr	r3, [pc, #24]	; (8005830 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005816:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005818:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800581a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800581c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800581e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005820:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005822:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005824:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005826:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005828:	4620      	mov	r0, r4
 800582a:	b00b      	add	sp, #44	; 0x2c
 800582c:	bd30      	pop	{r4, r5, pc}
 800582e:	bf00      	nop
 8005830:	0802e3a8 	.word	0x0802e3a8

08005834 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005834:	4770      	bx	lr

08005836 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005836:	4770      	bx	lr

08005838 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005838:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800583a:	68c2      	ldr	r2, [r0, #12]
 800583c:	6844      	ldr	r4, [r0, #4]
 800583e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005840:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005842:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005846:	07d2      	lsls	r2, r2, #31
 8005848:	bf48      	it	mi
 800584a:	5962      	ldrmi	r2, [r4, r5]
 800584c:	689b      	ldr	r3, [r3, #8]
    }
 800584e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005850:	bf48      	it	mi
 8005852:	58d3      	ldrmi	r3, [r2, r3]
 8005854:	4718      	bx	r3

08005856 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005856:	6843      	ldr	r3, [r0, #4]
 8005858:	b12b      	cbz	r3, 8005866 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800585a:	6883      	ldr	r3, [r0, #8]
 800585c:	b92b      	cbnz	r3, 800586a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800585e:	68c0      	ldr	r0, [r0, #12]
 8005860:	f000 0001 	and.w	r0, r0, #1
 8005864:	4770      	bx	lr
 8005866:	4618      	mov	r0, r3
 8005868:	4770      	bx	lr
 800586a:	2001      	movs	r0, #1
    }
 800586c:	4770      	bx	lr

0800586e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800586e:	b510      	push	{r4, lr}
 8005870:	2110      	movs	r1, #16
 8005872:	4604      	mov	r4, r0
 8005874:	f024 fc35 	bl	802a0e2 <_ZdlPvj>
 8005878:	4620      	mov	r0, r4
 800587a:	bd10      	pop	{r4, pc}

0800587c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800587c:	b510      	push	{r4, lr}
 800587e:	4b03      	ldr	r3, [pc, #12]	; (800588c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005880:	6003      	str	r3, [r0, #0]
 8005882:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005884:	f00e fe76 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005888:	4620      	mov	r0, r4
 800588a:	bd10      	pop	{r4, pc}
 800588c:	0802e420 	.word	0x0802e420

08005890 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005890:	b507      	push	{r0, r1, r2, lr}
 8005892:	4b07      	ldr	r3, [pc, #28]	; (80058b0 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005894:	6003      	str	r3, [r0, #0]
 8005896:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005898:	f00e fe6c 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800589c:	9801      	ldr	r0, [sp, #4]
 800589e:	f241 117c 	movw	r1, #4476	; 0x117c
 80058a2:	f024 fc1e 	bl	802a0e2 <_ZdlPvj>
 80058a6:	9801      	ldr	r0, [sp, #4]
 80058a8:	b003      	add	sp, #12
 80058aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80058ae:	bf00      	nop
 80058b0:	0802e420 	.word	0x0802e420

080058b4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80058b4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80058b6:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80058ba:	4299      	cmp	r1, r3
{
 80058bc:	4604      	mov	r4, r0
 80058be:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80058c0:	d103      	bne.n	80058ca <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80058c2:	f010 fb59 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80058c6:	f7fe fc9f 	bl	8004208 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80058ca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80058ce:	429d      	cmp	r5, r3
 80058d0:	d103      	bne.n	80058da <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80058d2:	f010 fb51 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80058d6:	f7fe fd27 	bl	8004328 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80058da:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80058de:	429d      	cmp	r5, r3
 80058e0:	d103      	bne.n	80058ea <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80058e2:	f010 fb49 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80058e6:	f7fe fd5f 	bl	80043a8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80058ea:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80058ee:	42a5      	cmp	r5, r4
 80058f0:	d10a      	bne.n	8005908 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80058f2:	4806      	ldr	r0, [pc, #24]	; (800590c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80058f4:	2200      	movs	r2, #0
 80058f6:	2120      	movs	r1, #32
 80058f8:	f004 f852 	bl	80099a0 <HAL_GPIO_WritePin>
 80058fc:	f010 fb3c 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005900:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005904:	f7fe bd60 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005908:	bd38      	pop	{r3, r4, r5, pc}
 800590a:	bf00      	nop
 800590c:	40021000 	.word	0x40021000

08005910 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005914:	ed2d 8b06 	vpush	{d8-d10}
 8005918:	4604      	mov	r4, r0
 800591a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 800591c:	46a3      	mov	fp, r4
        : presenter(0)
 800591e:	2500      	movs	r5, #0
 8005920:	f011 ffaa 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8005924:	4b6a      	ldr	r3, [pc, #424]	; (8005ad0 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005926:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005928:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800592c:	2226      	movs	r2, #38	; 0x26
 800592e:	4629      	mov	r1, r5
 8005930:	4658      	mov	r0, fp
 8005932:	f025 fbee 	bl	802b112 <memset>
 8005936:	4658      	mov	r0, fp
 8005938:	f7fc feb2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 800593c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005940:	26ff      	movs	r6, #255	; 0xff
 8005942:	4b64      	ldr	r3, [pc, #400]	; (8005ad4 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005944:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005946:	2226      	movs	r2, #38	; 0x26
 8005948:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800594c:	4629      	mov	r1, r5
 800594e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005952:	4650      	mov	r0, sl
        : color(col)
 8005954:	66a5      	str	r5, [r4, #104]	; 0x68
 8005956:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800595a:	f025 fbda 	bl	802b112 <memset>
 800595e:	4650      	mov	r0, sl
 8005960:	f7fc fe9e 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005964:	4b5c      	ldr	r3, [pc, #368]	; (8005ad8 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005966:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005968:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800596c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005970:	a90c      	add	r1, sp, #48	; 0x30
 8005972:	4650      	mov	r0, sl
 8005974:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005978:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800597c:	f00d fdf3 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005980:	4640      	mov	r0, r8
 8005982:	f7fc fe9f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005986:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800598a:	4b54      	ldr	r3, [pc, #336]	; (8005adc <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 800598c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005990:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005994:	4638      	mov	r0, r7
 8005996:	f00c fcaf 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 800599a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800599e:	4618      	mov	r0, r3
 80059a0:	9303      	str	r3, [sp, #12]
 80059a2:	f7fc fc7d 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80059a6:	4b4e      	ldr	r3, [pc, #312]	; (8005ae0 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80059a8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80059ac:	f504 79b4 	add.w	r9, r4, #360	; 0x168
 80059b0:	3324      	adds	r3, #36	; 0x24
 80059b2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80059b6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80059ba:	4648      	mov	r0, r9
 80059bc:	f7fc fe82 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80059c0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80059c4:	4618      	mov	r0, r3
 80059c6:	ee08 3a10 	vmov	s16, r3
 80059ca:	f7fc fe7b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80059ce:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80059d2:	4618      	mov	r0, r3
 80059d4:	ee08 3a90 	vmov	s17, r3
 80059d8:	f7fc fe74 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80059dc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80059e0:	4618      	mov	r0, r3
 80059e2:	ee09 3a10 	vmov	s18, r3
 80059e6:	f00d feff 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059ea:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80059ee:	4618      	mov	r0, r3
 80059f0:	ee09 3a90 	vmov	s19, r3
 80059f4:	f00d fef8 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059f8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80059fc:	4618      	mov	r0, r3
 80059fe:	ee0a 3a10 	vmov	s20, r3
 8005a02:	f00d fef1 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005a06:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005a0a:	4618      	mov	r0, r3
 8005a0c:	ee0a 3a90 	vmov	s21, r3
 8005a10:	f00d fd82 	bl	8013518 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005a14:	4a33      	ldr	r2, [pc, #204]	; (8005ae4 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005a16:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005a1a:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005a1e:	4a32      	ldr	r2, [pc, #200]	; (8005ae8 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005a20:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005a24:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005a28:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005a2c:	f00e fd98 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005a30:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005a34:	462a      	mov	r2, r5
 8005a36:	4658      	mov	r0, fp
 8005a38:	9300      	str	r3, [sp, #0]
 8005a3a:	4629      	mov	r1, r5
 8005a3c:	23f0      	movs	r3, #240	; 0xf0
 8005a3e:	f7fc fe1b 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a42:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005a44:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005a48:	66a3      	str	r3, [r4, #104]	; 0x68
 8005a4a:	4659      	mov	r1, fp
 8005a4c:	4630      	mov	r0, r6
 8005a4e:	f00a fffa 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005a52:	462a      	mov	r2, r5
 8005a54:	4650      	mov	r0, sl
 8005a56:	4629      	mov	r1, r5
 8005a58:	f7fc fe01 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005a5c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005a5e:	4650      	mov	r0, sl
 8005a60:	a90c      	add	r1, sp, #48	; 0x30
 8005a62:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005a66:	f00d fd7e 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005a6a:	4651      	mov	r1, sl
 8005a6c:	4630      	mov	r0, r6
 8005a6e:	f00a ffea 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005a72:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005a76:	2156      	movs	r1, #86	; 0x56
 8005a78:	4640      	mov	r0, r8
 8005a7a:	f7fc fdf0 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005a7e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005a82:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005a86:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005a8a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005a8e:	4650      	mov	r0, sl
 8005a90:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005a94:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005a98:	4641      	mov	r1, r8
 8005a9a:	4798      	blx	r3
 8005a9c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005aa0:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005aa4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005aa8:	4b10      	ldr	r3, [pc, #64]	; (8005aec <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005aaa:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005aac:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005ab0:	b92b      	cbnz	r3, 8005abe <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005ab2:	4b0f      	ldr	r3, [pc, #60]	; (8005af0 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005ab4:	4a0f      	ldr	r2, [pc, #60]	; (8005af4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005ab6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ab8:	480f      	ldr	r0, [pc, #60]	; (8005af8 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005aba:	f025 f925 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005abe:	4b0f      	ldr	r3, [pc, #60]	; (8005afc <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ac0:	881b      	ldrh	r3, [r3, #0]
 8005ac2:	2b38      	cmp	r3, #56	; 0x38
 8005ac4:	d81e      	bhi.n	8005b04 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005ac6:	4b0e      	ldr	r3, [pc, #56]	; (8005b00 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005ac8:	4a0a      	ldr	r2, [pc, #40]	; (8005af4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005aca:	2161      	movs	r1, #97	; 0x61
 8005acc:	e7f4      	b.n	8005ab8 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005ace:	bf00      	nop
 8005ad0:	0802e420 	.word	0x0802e420
 8005ad4:	0802f640 	.word	0x0802f640
 8005ad8:	0802f808 	.word	0x0802f808
 8005adc:	0802c8dc 	.word	0x0802c8dc
 8005ae0:	0802f374 	.word	0x0802f374
 8005ae4:	0802e408 	.word	0x0802e408
 8005ae8:	080058b5 	.word	0x080058b5
 8005aec:	2001349c 	.word	0x2001349c
 8005af0:	0802c71c 	.word	0x0802c71c
 8005af4:	0802c81e 	.word	0x0802c81e
 8005af8:	0802c799 	.word	0x0802c799
 8005afc:	200134a0 	.word	0x200134a0
 8005b00:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 8005b04:	4ba6      	ldr	r3, [pc, #664]	; (8005da0 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005b06:	2138      	movs	r1, #56	; 0x38
 8005b08:	6818      	ldr	r0, [r3, #0]
 8005b0a:	f002 fdc1 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8005b0e:	4aa5      	ldr	r2, [pc, #660]	; (8005da4 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005b10:	4603      	mov	r3, r0
 8005b12:	2104      	movs	r1, #4
 8005b14:	4650      	mov	r0, sl
 8005b16:	f013 fbdd 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005b1a:	4640      	mov	r0, r8
        wc1 = value;
 8005b1c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005b20:	f00d f926 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b24:	4ba0      	ldr	r3, [pc, #640]	; (8005da8 <_ZN17Main_MenuViewBaseC1Ev+0x498>)
 8005b26:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005b28:	a90c      	add	r1, sp, #48	; 0x30
 8005b2a:	2339      	movs	r3, #57	; 0x39
 8005b2c:	4640      	mov	r0, r8
 8005b2e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005b32:	f00d f93d 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b36:	4641      	mov	r1, r8
 8005b38:	4630      	mov	r0, r6
 8005b3a:	f00a ff84 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005b3e:	230a      	movs	r3, #10
 8005b40:	9300      	str	r3, [sp, #0]
 8005b42:	2232      	movs	r2, #50	; 0x32
 8005b44:	23f0      	movs	r3, #240	; 0xf0
 8005b46:	4629      	mov	r1, r5
 8005b48:	4638      	mov	r0, r7
 8005b4a:	f7fc fd95 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b4e:	9b03      	ldr	r3, [sp, #12]
 8005b50:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b54:	22a0      	movs	r2, #160	; 0xa0
 8005b56:	4611      	mov	r1, r2
 8005b58:	4638      	mov	r0, r7
 8005b5a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005b5e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005b62:	f00c fcdf 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b66:	22a0      	movs	r2, #160	; 0xa0
 8005b68:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005b6c:	4638      	mov	r0, r7
 8005b6e:	f00c fce4 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005b72:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005b76:	2b20      	cmp	r3, #32
 8005b78:	d005      	beq.n	8005b86 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005b7a:	2320      	movs	r3, #32
 8005b7c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005b80:	4638      	mov	r0, r7
 8005b82:	f00c fbd9 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005b86:	4638      	mov	r0, r7
 8005b88:	2101      	movs	r1, #1
 8005b8a:	f00c fce1 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005b8e:	4639      	mov	r1, r7
 8005b90:	4630      	mov	r0, r6
 8005b92:	ad04      	add	r5, sp, #16
 8005b94:	f00a ff57 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005b98:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8005b9c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005ba0:	2223      	movs	r2, #35	; 0x23
 8005ba2:	4648      	mov	r0, r9
 8005ba4:	2145      	movs	r1, #69	; 0x45
 8005ba6:	f7fc fd5a 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005baa:	4649      	mov	r1, r9
 8005bac:	4628      	mov	r0, r5
        color = newColor;
 8005bae:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005bb2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005bb6:	f00c fe61 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005bbe:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8005bc2:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8005bc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bca:	f8df b1dc 	ldr.w	fp, [pc, #476]	; 8005da8 <_ZN17Main_MenuViewBaseC1Ev+0x498>
 8005bce:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005bd2:	2358      	movs	r3, #88	; 0x58
 8005bd4:	4641      	mov	r1, r8
 8005bd6:	4648      	mov	r0, r9
 8005bd8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005bdc:	f00d f8e8 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005be0:	4649      	mov	r1, r9
 8005be2:	4630      	mov	r0, r6
 8005be4:	f00a ff2f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005be8:	ee18 0a10 	vmov	r0, s16
 8005bec:	220c      	movs	r2, #12
 8005bee:	2136      	movs	r1, #54	; 0x36
 8005bf0:	f7fc fd35 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005bf4:	ee18 1a10 	vmov	r1, s16
 8005bf8:	4628      	mov	r0, r5
        color = newColor;
 8005bfa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005bfe:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005c02:	f00c fe3b 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c06:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005c0a:	ee18 3a10 	vmov	r3, s16
 8005c0e:	f103 0c3c 	add.w	ip, r3, #60	; 0x3c
 8005c12:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005c16:	2259      	movs	r2, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005c18:	ee18 0a10 	vmov	r0, s16
 8005c1c:	4641      	mov	r1, r8
 8005c1e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8005c22:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005c26:	f00d f8c3 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c2a:	ee18 1a10 	vmov	r1, s16
 8005c2e:	4630      	mov	r0, r6
 8005c30:	f00a ff09 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005c34:	2358      	movs	r3, #88	; 0x58
 8005c36:	4619      	mov	r1, r3
 8005c38:	ee18 0a90 	vmov	r0, s17
 8005c3c:	223c      	movs	r2, #60	; 0x3c
 8005c3e:	f7fc fd0e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005c42:	ee18 1a90 	vmov	r1, s17
 8005c46:	4628      	mov	r0, r5
        color = newColor;
 8005c48:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005c4c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005c50:	f00c fe14 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005c58:	ee18 3a90 	vmov	r3, s17
 8005c5c:	333c      	adds	r3, #60	; 0x3c
 8005c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c62:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005c64:	ee18 0a90 	vmov	r0, s17
 8005c68:	4641      	mov	r1, r8
 8005c6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005c6e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005c72:	f00d f89d 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c76:	ee18 1a90 	vmov	r1, s17
 8005c7a:	4630      	mov	r0, r6
 8005c7c:	f00a fee3 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005c80:	ee19 0a10 	vmov	r0, s18
 8005c84:	22f0      	movs	r2, #240	; 0xf0
 8005c86:	2121      	movs	r1, #33	; 0x21
 8005c88:	f7fc fce9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005c8c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c90:	4642      	mov	r2, r8
 8005c92:	f04f 0902 	mov.w	r9, #2
 8005c96:	a90b      	add	r1, sp, #44	; 0x2c
 8005c98:	ee19 0a10 	vmov	r0, s18
 8005c9c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005ca0:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005ca4:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ca8:	f00d fa67 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005cac:	235a      	movs	r3, #90	; 0x5a
 8005cae:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005cb2:	350c      	adds	r5, #12
        updateTextPosition();
 8005cb4:	ee19 0a10 	vmov	r0, s18
 8005cb8:	f7fc fd26 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cbc:	ee19 1a10 	vmov	r1, s18
 8005cc0:	4630      	mov	r0, r6
        colorPressed = col;
 8005cc2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005cc6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005cca:	f00a febc 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005cce:	ee19 0a90 	vmov	r0, s19
 8005cd2:	22aa      	movs	r2, #170	; 0xaa
 8005cd4:	2121      	movs	r1, #33	; 0x21
 8005cd6:	f7fc fcc2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cda:	4642      	mov	r2, r8
 8005cdc:	a90b      	add	r1, sp, #44	; 0x2c
 8005cde:	ee19 0a90 	vmov	r0, s19
 8005ce2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005ce6:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8005cea:	f00d fa46 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005cee:	235b      	movs	r3, #91	; 0x5b
 8005cf0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005cf4:	ee19 0a90 	vmov	r0, s19
 8005cf8:	f7fc fd06 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cfc:	ee19 1a90 	vmov	r1, s19
 8005d00:	4630      	mov	r0, r6
        colorPressed = col;
 8005d02:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005d06:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005d0a:	f00a fe9c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005d0e:	ee1a 0a10 	vmov	r0, s20
 8005d12:	2264      	movs	r2, #100	; 0x64
 8005d14:	2121      	movs	r1, #33	; 0x21
 8005d16:	f7fc fca2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d1a:	4642      	mov	r2, r8
 8005d1c:	a90b      	add	r1, sp, #44	; 0x2c
 8005d1e:	ee1a 0a10 	vmov	r0, s20
 8005d22:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005d26:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8005d2a:	f00d fa26 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d2e:	235c      	movs	r3, #92	; 0x5c
 8005d30:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005d34:	ee1a 0a10 	vmov	r0, s20
 8005d38:	f7fc fce6 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d3c:	ee1a 1a10 	vmov	r1, s20
 8005d40:	4630      	mov	r0, r6
        colorPressed = col;
 8005d42:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005d46:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005d4a:	f00a fe7c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005d4e:	ee1a 0a90 	vmov	r0, s21
 8005d52:	2205      	movs	r2, #5
 8005d54:	21c6      	movs	r1, #198	; 0xc6
 8005d56:	f7fc fc82 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005d5a:	2301      	movs	r3, #1
 8005d5c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d60:	230b      	movs	r3, #11
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005d62:	ee1a 0a90 	vmov	r0, s21
 8005d66:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005d6e:	aa0a      	add	r2, sp, #40	; 0x28
 8005d70:	ab0b      	add	r3, sp, #44	; 0x2c
 8005d72:	a909      	add	r1, sp, #36	; 0x24
 8005d74:	f8cd 8000 	str.w	r8, [sp]
 8005d78:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005d7c:	f00d fb37 	bl	80133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005d80:	4630      	mov	r0, r6
 8005d82:	ee1a 1a90 	vmov	r1, s21
 8005d86:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005d8a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005d8e:	f00a fe5a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005d92:	4620      	mov	r0, r4
 8005d94:	b00f      	add	sp, #60	; 0x3c
 8005d96:	ecbd 8b06 	vpop	{d8-d10}
 8005d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d9e:	bf00      	nop
 8005da0:	200134a8 	.word	0x200134a8
 8005da4:	0802c856 	.word	0x0802c856
 8005da8:	0802c8cc 	.word	0x0802c8cc

08005dac <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005dac:	4770      	bx	lr

08005dae <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005dae:	4770      	bx	lr

08005db0 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005db0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005db2:	68c2      	ldr	r2, [r0, #12]
 8005db4:	6844      	ldr	r4, [r0, #4]
 8005db6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005db8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005dba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005dbe:	07d2      	lsls	r2, r2, #31
 8005dc0:	bf48      	it	mi
 8005dc2:	5962      	ldrmi	r2, [r4, r5]
 8005dc4:	689b      	ldr	r3, [r3, #8]
    }
 8005dc6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005dc8:	bf48      	it	mi
 8005dca:	58d3      	ldrmi	r3, [r2, r3]
 8005dcc:	4718      	bx	r3

08005dce <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005dce:	6843      	ldr	r3, [r0, #4]
 8005dd0:	b12b      	cbz	r3, 8005dde <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005dd2:	6883      	ldr	r3, [r0, #8]
 8005dd4:	b92b      	cbnz	r3, 8005de2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005dd6:	68c0      	ldr	r0, [r0, #12]
 8005dd8:	f000 0001 	and.w	r0, r0, #1
 8005ddc:	4770      	bx	lr
 8005dde:	4618      	mov	r0, r3
 8005de0:	4770      	bx	lr
 8005de2:	2001      	movs	r0, #1
    }
 8005de4:	4770      	bx	lr

08005de6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005de6:	b510      	push	{r4, lr}
 8005de8:	2110      	movs	r1, #16
 8005dea:	4604      	mov	r4, r0
 8005dec:	f024 f979 	bl	802a0e2 <_ZdlPvj>
 8005df0:	4620      	mov	r0, r4
 8005df2:	bd10      	pop	{r4, pc}

08005df4 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005df4:	b510      	push	{r4, lr}
 8005df6:	4b03      	ldr	r3, [pc, #12]	; (8005e04 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005df8:	6003      	str	r3, [r0, #0]
 8005dfa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005dfc:	f00e fbba 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005e00:	4620      	mov	r0, r4
 8005e02:	bd10      	pop	{r4, pc}
 8005e04:	0802e46c 	.word	0x0802e46c

08005e08 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005e08:	b507      	push	{r0, r1, r2, lr}
 8005e0a:	4b07      	ldr	r3, [pc, #28]	; (8005e28 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005e0c:	6003      	str	r3, [r0, #0]
 8005e0e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e10:	f00e fbb0 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005e14:	9801      	ldr	r0, [sp, #4]
 8005e16:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005e1a:	f024 f962 	bl	802a0e2 <_ZdlPvj>
 8005e1e:	9801      	ldr	r0, [sp, #4]
 8005e20:	b003      	add	sp, #12
 8005e22:	f85d fb04 	ldr.w	pc, [sp], #4
 8005e26:	bf00      	nop
 8005e28:	0802e46c 	.word	0x0802e46c

08005e2c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005e2c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005e2e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005e32:	4299      	cmp	r1, r3
{
 8005e34:	4604      	mov	r4, r0
 8005e36:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005e38:	d103      	bne.n	8005e42 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005e3a:	f010 f89d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005e3e:	f7fe f9d3 	bl	80041e8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005e42:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005e46:	429d      	cmp	r5, r3
 8005e48:	d103      	bne.n	8005e52 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005e4a:	f010 f895 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005e4e:	f7fe f9fb 	bl	8004248 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005e52:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005e56:	42a5      	cmp	r5, r4
 8005e58:	d105      	bne.n	8005e66 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005e5a:	f010 f88d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005e5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005e62:	f7fe ba21 	b.w	80042a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005e66:	bd38      	pop	{r3, r4, r5, pc}

08005e68 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e6c:	ed2d 8b06 	vpush	{d8-d10}
 8005e70:	4604      	mov	r4, r0
 8005e72:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005e74:	46a3      	mov	fp, r4
 8005e76:	2500      	movs	r5, #0
 8005e78:	f011 fcfe 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8005e7c:	4b66      	ldr	r3, [pc, #408]	; (8006018 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005e7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005e80:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005e84:	2226      	movs	r2, #38	; 0x26
 8005e86:	4629      	mov	r1, r5
 8005e88:	4658      	mov	r0, fp
 8005e8a:	f025 f942 	bl	802b112 <memset>
 8005e8e:	4658      	mov	r0, fp
 8005e90:	f7fc fc06 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005e94:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005e98:	26ff      	movs	r6, #255	; 0xff
 8005e9a:	4b60      	ldr	r3, [pc, #384]	; (800601c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005e9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005e9e:	2226      	movs	r2, #38	; 0x26
 8005ea0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005ea4:	4629      	mov	r1, r5
 8005ea6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005eaa:	4650      	mov	r0, sl
 8005eac:	66a5      	str	r5, [r4, #104]	; 0x68
 8005eae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005eb2:	f025 f92e 	bl	802b112 <memset>
 8005eb6:	4650      	mov	r0, sl
 8005eb8:	f7fc fbf2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005ebc:	4b58      	ldr	r3, [pc, #352]	; (8006020 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005ebe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005ec0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005ec4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ec8:	a90a      	add	r1, sp, #40	; 0x28
 8005eca:	4650      	mov	r0, sl
 8005ecc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005ed0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005ed4:	f00d fb47 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005ed8:	4648      	mov	r0, r9
 8005eda:	f7fc fbf3 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005ede:	4b51      	ldr	r3, [pc, #324]	; (8006024 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005ee0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005ee4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005ee8:	4618      	mov	r0, r3
 8005eea:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005eee:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005ef2:	ee08 3a90 	vmov	s17, r3
 8005ef6:	f7fc fbe5 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005efa:	4638      	mov	r0, r7
 8005efc:	f00c f9fc 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8005f00:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005f04:	4618      	mov	r0, r3
 8005f06:	9303      	str	r3, [sp, #12]
 8005f08:	f7fc f9ca 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005f0c:	4b46      	ldr	r3, [pc, #280]	; (8006028 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005f0e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005f12:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005f16:	3324      	adds	r3, #36	; 0x24
 8005f18:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005f1c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005f20:	4640      	mov	r0, r8
 8005f22:	f7fc fbcf 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f26:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005f2a:	4618      	mov	r0, r3
 8005f2c:	ee08 3a10 	vmov	s16, r3
 8005f30:	f7fc fbc8 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f34:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005f38:	4618      	mov	r0, r3
 8005f3a:	ee09 3a10 	vmov	s18, r3
 8005f3e:	f00d fc53 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f42:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005f46:	4618      	mov	r0, r3
 8005f48:	ee09 3a90 	vmov	s19, r3
 8005f4c:	f00d fc4c 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f50:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005f54:	4618      	mov	r0, r3
 8005f56:	ee0a 3a10 	vmov	s20, r3
 8005f5a:	f00d fc45 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f5e:	4a33      	ldr	r2, [pc, #204]	; (800602c <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005f60:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005f64:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005f68:	4a31      	ldr	r2, [pc, #196]	; (8006030 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005f6a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005f6e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005f72:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005f76:	f00e faf3 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005f7a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005f7e:	462a      	mov	r2, r5
 8005f80:	4658      	mov	r0, fp
 8005f82:	9300      	str	r3, [sp, #0]
 8005f84:	4629      	mov	r1, r5
 8005f86:	23f0      	movs	r3, #240	; 0xf0
 8005f88:	f7fc fb76 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f8c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005f8e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005f92:	66a3      	str	r3, [r4, #104]	; 0x68
 8005f94:	4659      	mov	r1, fp
 8005f96:	4630      	mov	r0, r6
 8005f98:	f00a fd55 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005f9c:	462a      	mov	r2, r5
 8005f9e:	4650      	mov	r0, sl
 8005fa0:	4629      	mov	r1, r5
 8005fa2:	f7fc fb5c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005fa6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005fa8:	4650      	mov	r0, sl
 8005faa:	a90a      	add	r1, sp, #40	; 0x28
 8005fac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005fb0:	f00d fad9 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005fb4:	4651      	mov	r1, sl
 8005fb6:	4630      	mov	r0, r6
 8005fb8:	f00a fd45 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005fbc:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005fc0:	2156      	movs	r1, #86	; 0x56
 8005fc2:	4648      	mov	r0, r9
 8005fc4:	f7fc fb4b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005fc8:	f04f 33ff 	mov.w	r3, #4294967295
 8005fcc:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005fd0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005fd4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005fd8:	f10d 0b10 	add.w	fp, sp, #16
 8005fdc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005fe0:	4649      	mov	r1, r9
 8005fe2:	4658      	mov	r0, fp
 8005fe4:	4798      	blx	r3
 8005fe6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005fea:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005fee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005ff2:	4b10      	ldr	r3, [pc, #64]	; (8006034 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005ff4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005ff6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005ffa:	b92b      	cbnz	r3, 8006008 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005ffc:	4b0e      	ldr	r3, [pc, #56]	; (8006038 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005ffe:	4a0f      	ldr	r2, [pc, #60]	; (800603c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006000:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006002:	480f      	ldr	r0, [pc, #60]	; (8006040 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006004:	f024 fe80 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006008:	4b0e      	ldr	r3, [pc, #56]	; (8006044 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800600a:	881b      	ldrh	r3, [r3, #0]
 800600c:	2b29      	cmp	r3, #41	; 0x29
 800600e:	d81d      	bhi.n	800604c <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006010:	4b0d      	ldr	r3, [pc, #52]	; (8006048 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006012:	4a0a      	ldr	r2, [pc, #40]	; (800603c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006014:	2161      	movs	r1, #97	; 0x61
 8006016:	e7f4      	b.n	8006002 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006018:	0802e46c 	.word	0x0802e46c
 800601c:	0802f640 	.word	0x0802f640
 8006020:	0802f808 	.word	0x0802f808
 8006024:	0802c8dc 	.word	0x0802c8dc
 8006028:	0802f374 	.word	0x0802f374
 800602c:	0802e454 	.word	0x0802e454
 8006030:	08005e2d 	.word	0x08005e2d
 8006034:	2001349c 	.word	0x2001349c
 8006038:	0802c71c 	.word	0x0802c71c
 800603c:	0802c81e 	.word	0x0802c81e
 8006040:	0802c799 	.word	0x0802c799
 8006044:	200134a0 	.word	0x200134a0
 8006048:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 800604c:	4b95      	ldr	r3, [pc, #596]	; (80062a4 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 800604e:	2129      	movs	r1, #41	; 0x29
 8006050:	6818      	ldr	r0, [r3, #0]
 8006052:	f002 fb1d 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8006056:	4a94      	ldr	r2, [pc, #592]	; (80062a8 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006058:	4603      	mov	r3, r0
 800605a:	2104      	movs	r1, #4
 800605c:	4650      	mov	r0, sl
 800605e:	f013 f939 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006062:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006066:	4648      	mov	r0, r9
 8006068:	f00c fe82 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800606c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80062ac <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006070:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006074:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006076:	a90a      	add	r1, sp, #40	; 0x28
 8006078:	4648      	mov	r0, r9
 800607a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800607e:	f00c fe97 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006082:	4649      	mov	r1, r9
 8006084:	4630      	mov	r0, r6
 8006086:	f00a fcde 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800608a:	223c      	movs	r2, #60	; 0x3c
 800608c:	ee18 0a90 	vmov	r0, s17
 8006090:	213d      	movs	r1, #61	; 0x3d
 8006092:	f7fc fae4 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006096:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800609a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800609e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80060a2:	4658      	mov	r0, fp
        linespace = space;
 80060a4:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80060a8:	f00c fbe8 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060ac:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80060b0:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80060b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060b8:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 80060ba:	ee18 0a90 	vmov	r0, s17
 80060be:	a90a      	add	r1, sp, #40	; 0x28
 80060c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80060c4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80060c8:	f00c fe72 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060cc:	ee18 1a90 	vmov	r1, s17
 80060d0:	4630      	mov	r0, r6
 80060d2:	f00a fcb8 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80060d6:	230a      	movs	r3, #10
 80060d8:	9300      	str	r3, [sp, #0]
 80060da:	2232      	movs	r2, #50	; 0x32
 80060dc:	23f0      	movs	r3, #240	; 0xf0
 80060de:	4629      	mov	r1, r5
 80060e0:	4638      	mov	r0, r7
 80060e2:	f7fc fac9 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060e6:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80060ea:	22a0      	movs	r2, #160	; 0xa0
 80060ec:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80060f0:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80060f4:	9b03      	ldr	r3, [sp, #12]
 80060f6:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80060fa:	4611      	mov	r1, r2
 80060fc:	4638      	mov	r0, r7
 80060fe:	f00c fa11 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006102:	22a0      	movs	r2, #160	; 0xa0
 8006104:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006108:	4638      	mov	r0, r7
 800610a:	f00c fa16 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800610e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006112:	2b20      	cmp	r3, #32
 8006114:	d005      	beq.n	8006122 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006116:	2320      	movs	r3, #32
 8006118:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 800611c:	4638      	mov	r0, r7
 800611e:	f00c f90b 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006122:	4638      	mov	r0, r7
 8006124:	2101      	movs	r1, #1
 8006126:	f00c fa13 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800612a:	4639      	mov	r1, r7
 800612c:	4630      	mov	r0, r6
 800612e:	f00a fc8a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006132:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006136:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006138:	2223      	movs	r2, #35	; 0x23
 800613a:	4640      	mov	r0, r8
        linespace = space;
 800613c:	f04f 0a00 	mov.w	sl, #0
 8006140:	2145      	movs	r1, #69	; 0x45
 8006142:	f7fc fa8c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006146:	4641      	mov	r1, r8
 8006148:	4638      	mov	r0, r7
        color = newColor;
 800614a:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 800614e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006152:	f00c fb93 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006156:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800615a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800615e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006162:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80062ac <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006166:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800616a:	2356      	movs	r3, #86	; 0x56
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 800616c:	a90a      	add	r1, sp, #40	; 0x28
 800616e:	4640      	mov	r0, r8
 8006170:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006174:	f00c fe1c 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006178:	4641      	mov	r1, r8
 800617a:	4630      	mov	r0, r6
 800617c:	f00a fc63 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006180:	ee18 0a10 	vmov	r0, s16
 8006184:	220c      	movs	r2, #12
 8006186:	2136      	movs	r1, #54	; 0x36
 8006188:	f7fc fa69 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800618c:	ee18 1a10 	vmov	r1, s16
 8006190:	4638      	mov	r0, r7
        color = newColor;
 8006192:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006196:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800619a:	f00c fb6f 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800619e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80061a2:	ee18 3a10 	vmov	r3, s16
 80061a6:	333c      	adds	r3, #60	; 0x3c
 80061a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061ac:	2357      	movs	r3, #87	; 0x57
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 80061ae:	ee18 0a10 	vmov	r0, s16
 80061b2:	a90a      	add	r1, sp, #40	; 0x28
 80061b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061b8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80061bc:	f00c fdf8 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061c0:	ee18 1a10 	vmov	r1, s16
 80061c4:	4630      	mov	r0, r6
 80061c6:	f00a fc3e 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80061ca:	ee19 0a10 	vmov	r0, s18
 80061ce:	22f0      	movs	r2, #240	; 0xf0
 80061d0:	2121      	movs	r1, #33	; 0x21
 80061d2:	f7fc fa44 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80061d6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061da:	aa0a      	add	r2, sp, #40	; 0x28
 80061dc:	f04f 0802 	mov.w	r8, #2
 80061e0:	a909      	add	r1, sp, #36	; 0x24
 80061e2:	ee19 0a10 	vmov	r0, s18
 80061e6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80061ea:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80061ee:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061f2:	f00c ffc2 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80061f6:	2355      	movs	r3, #85	; 0x55
 80061f8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80061fc:	3710      	adds	r7, #16
        updateTextPosition();
 80061fe:	ee19 0a10 	vmov	r0, s18
 8006202:	f7fc fa81 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006206:	ee19 1a10 	vmov	r1, s18
 800620a:	4630      	mov	r0, r6
        colorPressed = col;
 800620c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006210:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006214:	f00a fc17 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006218:	ee19 0a90 	vmov	r0, s19
 800621c:	22aa      	movs	r2, #170	; 0xaa
 800621e:	2121      	movs	r1, #33	; 0x21
 8006220:	f7fc fa1d 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006224:	aa0a      	add	r2, sp, #40	; 0x28
 8006226:	a909      	add	r1, sp, #36	; 0x24
 8006228:	ee19 0a90 	vmov	r0, s19
 800622c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006230:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006234:	f00c ffa1 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006238:	2354      	movs	r3, #84	; 0x54
 800623a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800623e:	ee19 0a90 	vmov	r0, s19
 8006242:	f7fc fa61 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006246:	ee19 1a90 	vmov	r1, s19
 800624a:	4630      	mov	r0, r6
        colorPressed = col;
 800624c:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006250:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006254:	f00a fbf7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006258:	ee1a 0a10 	vmov	r0, s20
 800625c:	2264      	movs	r2, #100	; 0x64
 800625e:	2121      	movs	r1, #33	; 0x21
 8006260:	f7fc f9fd 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006264:	aa0a      	add	r2, sp, #40	; 0x28
 8006266:	a909      	add	r1, sp, #36	; 0x24
 8006268:	ee1a 0a10 	vmov	r0, s20
 800626c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006270:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006274:	f00c ff81 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006278:	2353      	movs	r3, #83	; 0x53
        updateTextPosition();
 800627a:	ee1a 0a10 	vmov	r0, s20
 800627e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006282:	f7fc fa41 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006286:	4630      	mov	r0, r6
        colorPressed = col;
 8006288:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 800628c:	ee1a 1a10 	vmov	r1, s20
 8006290:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006294:	f00a fbd7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006298:	4620      	mov	r0, r4
 800629a:	b00d      	add	sp, #52	; 0x34
 800629c:	ecbd 8b06 	vpop	{d8-d10}
 80062a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062a4:	200134a8 	.word	0x200134a8
 80062a8:	0802c856 	.word	0x0802c856
 80062ac:	0802c8cc 	.word	0x0802c8cc

080062b0 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 80062b0:	4770      	bx	lr

080062b2 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062b2:	4770      	bx	lr

080062b4 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062b6:	68c2      	ldr	r2, [r0, #12]
 80062b8:	6844      	ldr	r4, [r0, #4]
 80062ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80062be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062c2:	07d2      	lsls	r2, r2, #31
 80062c4:	bf48      	it	mi
 80062c6:	5962      	ldrmi	r2, [r4, r5]
 80062c8:	689b      	ldr	r3, [r3, #8]
    }
 80062ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062cc:	bf48      	it	mi
 80062ce:	58d3      	ldrmi	r3, [r2, r3]
 80062d0:	4718      	bx	r3

080062d2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80062d2:	6843      	ldr	r3, [r0, #4]
 80062d4:	b12b      	cbz	r3, 80062e2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80062d6:	6883      	ldr	r3, [r0, #8]
 80062d8:	b92b      	cbnz	r3, 80062e6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80062da:	68c0      	ldr	r0, [r0, #12]
 80062dc:	f000 0001 	and.w	r0, r0, #1
 80062e0:	4770      	bx	lr
 80062e2:	4618      	mov	r0, r3
 80062e4:	4770      	bx	lr
 80062e6:	2001      	movs	r0, #1
    }
 80062e8:	4770      	bx	lr

080062ea <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062ea:	b510      	push	{r4, lr}
 80062ec:	2110      	movs	r1, #16
 80062ee:	4604      	mov	r4, r0
 80062f0:	f023 fef7 	bl	802a0e2 <_ZdlPvj>
 80062f4:	4620      	mov	r0, r4
 80062f6:	bd10      	pop	{r4, pc}

080062f8 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80062f8:	b510      	push	{r4, lr}
 80062fa:	4b03      	ldr	r3, [pc, #12]	; (8006308 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80062fc:	6003      	str	r3, [r0, #0]
 80062fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006300:	f00e f938 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006304:	4620      	mov	r0, r4
 8006306:	bd10      	pop	{r4, pc}
 8006308:	0802e4b8 	.word	0x0802e4b8

0800630c <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 800630c:	b507      	push	{r0, r1, r2, lr}
 800630e:	4b07      	ldr	r3, [pc, #28]	; (800632c <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006310:	6003      	str	r3, [r0, #0]
 8006312:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006314:	f00e f92e 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006318:	9801      	ldr	r0, [sp, #4]
 800631a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800631e:	f023 fee0 	bl	802a0e2 <_ZdlPvj>
 8006322:	9801      	ldr	r0, [sp, #4]
 8006324:	b003      	add	sp, #12
 8006326:	f85d fb04 	ldr.w	pc, [sp], #4
 800632a:	bf00      	nop
 800632c:	0802e4b8 	.word	0x0802e4b8

08006330 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006330:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006332:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006336:	4299      	cmp	r1, r3
{
 8006338:	4604      	mov	r4, r0
 800633a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800633c:	d103      	bne.n	8006346 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800633e:	f00f fe1b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006342:	f7fd ff71 	bl	8004228 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006346:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800634a:	429d      	cmp	r5, r3
 800634c:	d103      	bne.n	8006356 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800634e:	f00f fe13 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006352:	f7fd ffd9 	bl	8004308 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006356:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 800635a:	42a5      	cmp	r5, r4
 800635c:	d105      	bne.n	800636a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800635e:	f00f fe0b 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006362:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006366:	f7fd bfbf 	b.w	80042e8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800636a:	bd38      	pop	{r3, r4, r5, pc}

0800636c <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 800636c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006370:	ed2d 8b06 	vpush	{d8-d10}
 8006374:	4604      	mov	r4, r0
 8006376:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006378:	46a3      	mov	fp, r4
 800637a:	2500      	movs	r5, #0
 800637c:	f011 fa7c 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8006380:	4b66      	ldr	r3, [pc, #408]	; (800651c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006382:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006384:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006388:	2226      	movs	r2, #38	; 0x26
 800638a:	4629      	mov	r1, r5
 800638c:	4658      	mov	r0, fp
 800638e:	f024 fec0 	bl	802b112 <memset>
 8006392:	4658      	mov	r0, fp
 8006394:	f7fc f984 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006398:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800639c:	26ff      	movs	r6, #255	; 0xff
 800639e:	4b60      	ldr	r3, [pc, #384]	; (8006520 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 80063a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063a2:	2226      	movs	r2, #38	; 0x26
 80063a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063a8:	4629      	mov	r1, r5
 80063aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063ae:	4650      	mov	r0, sl
 80063b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80063b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063b6:	f024 feac 	bl	802b112 <memset>
 80063ba:	4650      	mov	r0, sl
 80063bc:	f7fc f970 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80063c0:	4b58      	ldr	r3, [pc, #352]	; (8006524 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 80063c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80063c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80063cc:	a90a      	add	r1, sp, #40	; 0x28
 80063ce:	4650      	mov	r0, sl
 80063d0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80063d4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80063d8:	f00d f8c5 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80063dc:	4648      	mov	r0, r9
 80063de:	f7fc f971 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80063e2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80063e6:	4b50      	ldr	r3, [pc, #320]	; (8006528 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 80063e8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80063ec:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80063f0:	4638      	mov	r0, r7
 80063f2:	f00b ff81 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 80063f6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80063fa:	4618      	mov	r0, r3
 80063fc:	9303      	str	r3, [sp, #12]
 80063fe:	f7fb ff4f 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006402:	4b4a      	ldr	r3, [pc, #296]	; (800652c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006404:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006408:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800640c:	3324      	adds	r3, #36	; 0x24
 800640e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006412:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006416:	4640      	mov	r0, r8
 8006418:	f7fc f954 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800641c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006420:	4618      	mov	r0, r3
 8006422:	ee08 3a10 	vmov	s16, r3
 8006426:	f7fc f94d 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800642a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800642e:	4618      	mov	r0, r3
 8006430:	ee08 3a90 	vmov	s17, r3
 8006434:	f7fc f946 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006438:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800643c:	4618      	mov	r0, r3
 800643e:	ee09 3a10 	vmov	s18, r3
 8006442:	f00d f9d1 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006446:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800644a:	4618      	mov	r0, r3
 800644c:	ee09 3a90 	vmov	s19, r3
 8006450:	f00d f9ca 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006454:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006458:	4618      	mov	r0, r3
 800645a:	ee0a 3a10 	vmov	s20, r3
 800645e:	f00d f9c3 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006462:	4a33      	ldr	r2, [pc, #204]	; (8006530 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006464:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006468:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800646c:	4a31      	ldr	r2, [pc, #196]	; (8006534 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800646e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006472:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006476:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800647a:	f00e f871 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800647e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006482:	462a      	mov	r2, r5
 8006484:	4658      	mov	r0, fp
 8006486:	9300      	str	r3, [sp, #0]
 8006488:	4629      	mov	r1, r5
 800648a:	23f0      	movs	r3, #240	; 0xf0
 800648c:	f7fc f8f4 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006490:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006492:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006496:	66a3      	str	r3, [r4, #104]	; 0x68
 8006498:	4659      	mov	r1, fp
 800649a:	4630      	mov	r0, r6
 800649c:	f00a fad3 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80064a0:	462a      	mov	r2, r5
 80064a2:	4650      	mov	r0, sl
 80064a4:	4629      	mov	r1, r5
 80064a6:	f7fc f8da 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80064aa:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80064ac:	4650      	mov	r0, sl
 80064ae:	a90a      	add	r1, sp, #40	; 0x28
 80064b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064b4:	f00d f857 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064b8:	4651      	mov	r1, sl
 80064ba:	4630      	mov	r0, r6
 80064bc:	f00a fac3 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80064c0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80064c4:	2156      	movs	r1, #86	; 0x56
 80064c6:	4648      	mov	r0, r9
 80064c8:	f7fc f8c9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80064cc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80064d0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80064d4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80064d8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80064dc:	4650      	mov	r0, sl
 80064de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80064e2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80064e6:	4649      	mov	r1, r9
 80064e8:	4798      	blx	r3
 80064ea:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80064ee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80064f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80064f6:	4b10      	ldr	r3, [pc, #64]	; (8006538 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80064f8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80064fa:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80064fe:	b92b      	cbnz	r3, 800650c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006500:	4b0e      	ldr	r3, [pc, #56]	; (800653c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006502:	4a0f      	ldr	r2, [pc, #60]	; (8006540 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006504:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006506:	480f      	ldr	r0, [pc, #60]	; (8006544 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006508:	f024 fbfe 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800650c:	4b0e      	ldr	r3, [pc, #56]	; (8006548 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800650e:	881b      	ldrh	r3, [r3, #0]
 8006510:	2b24      	cmp	r3, #36	; 0x24
 8006512:	d81d      	bhi.n	8006550 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006514:	4b0d      	ldr	r3, [pc, #52]	; (800654c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006516:	4a0a      	ldr	r2, [pc, #40]	; (8006540 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006518:	2161      	movs	r1, #97	; 0x61
 800651a:	e7f4      	b.n	8006506 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 800651c:	0802e4b8 	.word	0x0802e4b8
 8006520:	0802f640 	.word	0x0802f640
 8006524:	0802f808 	.word	0x0802f808
 8006528:	0802c8dc 	.word	0x0802c8dc
 800652c:	0802f374 	.word	0x0802f374
 8006530:	0802e4a0 	.word	0x0802e4a0
 8006534:	08006331 	.word	0x08006331
 8006538:	2001349c 	.word	0x2001349c
 800653c:	0802c71c 	.word	0x0802c71c
 8006540:	0802c81e 	.word	0x0802c81e
 8006544:	0802c799 	.word	0x0802c799
 8006548:	200134a0 	.word	0x200134a0
 800654c:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 8006550:	4b93      	ldr	r3, [pc, #588]	; (80067a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006552:	2124      	movs	r1, #36	; 0x24
 8006554:	6818      	ldr	r0, [r3, #0]
 8006556:	f002 f89b 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800655a:	4a92      	ldr	r2, [pc, #584]	; (80067a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 800655c:	4603      	mov	r3, r0
 800655e:	2104      	movs	r1, #4
 8006560:	4650      	mov	r0, sl
 8006562:	f012 feb7 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006566:	4648      	mov	r0, r9
        wc1 = value;
 8006568:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800656c:	f00c fc00 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006570:	4b8d      	ldr	r3, [pc, #564]	; (80067a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006572:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006574:	a90a      	add	r1, sp, #40	; 0x28
 8006576:	2325      	movs	r3, #37	; 0x25
 8006578:	4648      	mov	r0, r9
 800657a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800657e:	f00c fc17 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006582:	4649      	mov	r1, r9
 8006584:	4630      	mov	r0, r6
 8006586:	f00a fa5e 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800658a:	230a      	movs	r3, #10
 800658c:	9300      	str	r3, [sp, #0]
 800658e:	2232      	movs	r2, #50	; 0x32
 8006590:	23f0      	movs	r3, #240	; 0xf0
 8006592:	4629      	mov	r1, r5
 8006594:	4638      	mov	r0, r7
 8006596:	f7fc f86f 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800659a:	9b03      	ldr	r3, [sp, #12]
 800659c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065a0:	22a0      	movs	r2, #160	; 0xa0
 80065a2:	4611      	mov	r1, r2
 80065a4:	4638      	mov	r0, r7
 80065a6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065aa:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80065ae:	f00b ffb9 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065b2:	22a0      	movs	r2, #160	; 0xa0
 80065b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065b8:	4638      	mov	r0, r7
 80065ba:	f00b ffbe 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065be:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80065c2:	2b20      	cmp	r3, #32
 80065c4:	d005      	beq.n	80065d2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 80065c6:	2320      	movs	r3, #32
 80065c8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80065cc:	4638      	mov	r0, r7
 80065ce:	f00b feb3 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065d2:	4638      	mov	r0, r7
 80065d4:	2101      	movs	r1, #1
 80065d6:	f00b ffbb 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065da:	4639      	mov	r1, r7
 80065dc:	4630      	mov	r0, r6
 80065de:	ad04      	add	r5, sp, #16
        color = newColor;
 80065e0:	f04f 37ff 	mov.w	r7, #4294967295
 80065e4:	f00a fa2f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80065e8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80065ec:	2223      	movs	r2, #35	; 0x23
 80065ee:	4640      	mov	r0, r8
 80065f0:	2145      	movs	r1, #69	; 0x45
 80065f2:	f7fc f834 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065f6:	4641      	mov	r1, r8
 80065f8:	4628      	mov	r0, r5
        color = newColor;
 80065fa:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80065fe:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006602:	f00c f93b 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006606:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800660a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800660e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006612:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80067a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006616:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800661a:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800661c:	a90a      	add	r1, sp, #40	; 0x28
 800661e:	4640      	mov	r0, r8
 8006620:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006624:	f00c fbc4 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006628:	4641      	mov	r1, r8
 800662a:	4630      	mov	r0, r6
 800662c:	f00a fa0b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006630:	ee18 0a10 	vmov	r0, s16
 8006634:	220c      	movs	r2, #12
 8006636:	2136      	movs	r1, #54	; 0x36
 8006638:	f7fc f811 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800663c:	ee18 1a10 	vmov	r1, s16
 8006640:	4628      	mov	r0, r5
        color = newColor;
 8006642:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006646:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800664a:	f00c f917 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800664e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006652:	ee18 3a10 	vmov	r3, s16
 8006656:	333c      	adds	r3, #60	; 0x3c
 8006658:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800665c:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800665e:	ee18 0a10 	vmov	r0, s16
 8006662:	a90a      	add	r1, sp, #40	; 0x28
 8006664:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006668:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800666c:	f00c fba0 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006670:	ee18 1a10 	vmov	r1, s16
 8006674:	4630      	mov	r0, r6
 8006676:	f00a f9e6 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800667a:	ee18 0a90 	vmov	r0, s17
 800667e:	223c      	movs	r2, #60	; 0x3c
 8006680:	2121      	movs	r1, #33	; 0x21
 8006682:	f7fb ffec 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006686:	ee18 1a90 	vmov	r1, s17
 800668a:	4628      	mov	r0, r5
        color = newColor;
 800668c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006690:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006694:	f00c f8f2 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006698:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800669c:	ee18 3a90 	vmov	r3, s17
 80066a0:	333c      	adds	r3, #60	; 0x3c
 80066a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066a6:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80066a8:	ee18 0a90 	vmov	r0, s17
 80066ac:	a90a      	add	r1, sp, #40	; 0x28
 80066ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80066b6:	f00c fb7b 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066ba:	ee18 1a90 	vmov	r1, s17
 80066be:	4630      	mov	r0, r6
 80066c0:	f00a f9c1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80066c4:	ee19 0a10 	vmov	r0, s18
 80066c8:	22f0      	movs	r2, #240	; 0xf0
 80066ca:	2121      	movs	r1, #33	; 0x21
 80066cc:	f7fb ffc7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80066d0:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066d4:	aa0a      	add	r2, sp, #40	; 0x28
 80066d6:	f04f 0802 	mov.w	r8, #2
 80066da:	a909      	add	r1, sp, #36	; 0x24
 80066dc:	ee19 0a10 	vmov	r0, s18
 80066e0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80066e4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80066e8:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066ec:	f00c fd45 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066f0:	2342      	movs	r3, #66	; 0x42
 80066f2:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80066f6:	3510      	adds	r5, #16
        updateTextPosition();
 80066f8:	ee19 0a10 	vmov	r0, s18
 80066fc:	f7fc f804 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006700:	ee19 1a10 	vmov	r1, s18
 8006704:	4630      	mov	r0, r6
        colorPressed = col;
 8006706:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800670a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800670e:	f00a f99a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006712:	ee19 0a90 	vmov	r0, s19
 8006716:	22aa      	movs	r2, #170	; 0xaa
 8006718:	2121      	movs	r1, #33	; 0x21
 800671a:	f7fb ffa0 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800671e:	aa0a      	add	r2, sp, #40	; 0x28
 8006720:	a909      	add	r1, sp, #36	; 0x24
 8006722:	ee19 0a90 	vmov	r0, s19
 8006726:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800672a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800672e:	f00c fd24 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006732:	2341      	movs	r3, #65	; 0x41
 8006734:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006738:	ee19 0a90 	vmov	r0, s19
 800673c:	f7fb ffe4 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006740:	ee19 1a90 	vmov	r1, s19
 8006744:	4630      	mov	r0, r6
        colorPressed = col;
 8006746:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800674a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800674e:	f00a f97a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006752:	ee1a 0a10 	vmov	r0, s20
 8006756:	2264      	movs	r2, #100	; 0x64
 8006758:	2121      	movs	r1, #33	; 0x21
 800675a:	f7fb ff80 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800675e:	aa0a      	add	r2, sp, #40	; 0x28
 8006760:	a909      	add	r1, sp, #36	; 0x24
 8006762:	ee1a 0a10 	vmov	r0, s20
 8006766:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800676a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800676e:	f00c fd04 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006772:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006774:	ee1a 0a10 	vmov	r0, s20
 8006778:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800677c:	f7fb ffc4 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006780:	4630      	mov	r0, r6
        colorPressed = col;
 8006782:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006786:	ee1a 1a10 	vmov	r1, s20
 800678a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800678e:	f00a f95a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006792:	4620      	mov	r0, r4
 8006794:	b00d      	add	sp, #52	; 0x34
 8006796:	ecbd 8b06 	vpop	{d8-d10}
 800679a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800679e:	bf00      	nop
 80067a0:	200134a8 	.word	0x200134a8
 80067a4:	0802c856 	.word	0x0802c856
 80067a8:	0802c8cc 	.word	0x0802c8cc

080067ac <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80067ac:	4770      	bx	lr

080067ae <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067ae:	4770      	bx	lr

080067b0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067b2:	68c2      	ldr	r2, [r0, #12]
 80067b4:	6844      	ldr	r4, [r0, #4]
 80067b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067b8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067be:	07d2      	lsls	r2, r2, #31
 80067c0:	bf48      	it	mi
 80067c2:	5962      	ldrmi	r2, [r4, r5]
 80067c4:	689b      	ldr	r3, [r3, #8]
    }
 80067c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067c8:	bf48      	it	mi
 80067ca:	58d3      	ldrmi	r3, [r2, r3]
 80067cc:	4718      	bx	r3

080067ce <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067ce:	6843      	ldr	r3, [r0, #4]
 80067d0:	b12b      	cbz	r3, 80067de <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80067d2:	6883      	ldr	r3, [r0, #8]
 80067d4:	b92b      	cbnz	r3, 80067e2 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80067d6:	68c0      	ldr	r0, [r0, #12]
 80067d8:	f000 0001 	and.w	r0, r0, #1
 80067dc:	4770      	bx	lr
 80067de:	4618      	mov	r0, r3
 80067e0:	4770      	bx	lr
 80067e2:	2001      	movs	r0, #1
    }
 80067e4:	4770      	bx	lr

080067e6 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067e6:	b510      	push	{r4, lr}
 80067e8:	2110      	movs	r1, #16
 80067ea:	4604      	mov	r4, r0
 80067ec:	f023 fc79 	bl	802a0e2 <_ZdlPvj>
 80067f0:	4620      	mov	r0, r4
 80067f2:	bd10      	pop	{r4, pc}

080067f4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80067f4:	b510      	push	{r4, lr}
 80067f6:	4b03      	ldr	r3, [pc, #12]	; (8006804 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 80067f8:	6003      	str	r3, [r0, #0]
 80067fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067fc:	f00d feba 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006800:	4620      	mov	r0, r4
 8006802:	bd10      	pop	{r4, pc}
 8006804:	0802e504 	.word	0x0802e504

08006808 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006808:	b507      	push	{r0, r1, r2, lr}
 800680a:	4b07      	ldr	r3, [pc, #28]	; (8006828 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 800680c:	6003      	str	r3, [r0, #0]
 800680e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006810:	f00d feb0 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006814:	9801      	ldr	r0, [sp, #4]
 8006816:	f241 015c 	movw	r1, #4188	; 0x105c
 800681a:	f023 fc62 	bl	802a0e2 <_ZdlPvj>
 800681e:	9801      	ldr	r0, [sp, #4]
 8006820:	b003      	add	sp, #12
 8006822:	f85d fb04 	ldr.w	pc, [sp], #4
 8006826:	bf00      	nop
 8006828:	0802e504 	.word	0x0802e504

0800682c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800682c:	3098      	adds	r0, #152	; 0x98
 800682e:	4288      	cmp	r0, r1
{
 8006830:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006832:	d105      	bne.n	8006840 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006834:	f00f fba0 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006838:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800683c:	f7fd bd44 	b.w	80042c8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006840:	bd08      	pop	{r3, pc}
	...

08006844 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006848:	ed2d 8b02 	vpush	{d8}
 800684c:	4604      	mov	r4, r0
 800684e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006850:	46a1      	mov	r9, r4
 8006852:	2500      	movs	r5, #0
 8006854:	f011 f810 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8006858:	4ba5      	ldr	r3, [pc, #660]	; (8006af0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 800685a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800685c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006860:	2226      	movs	r2, #38	; 0x26
 8006862:	4629      	mov	r1, r5
 8006864:	4648      	mov	r0, r9
 8006866:	f024 fc54 	bl	802b112 <memset>
 800686a:	4648      	mov	r0, r9
 800686c:	f7fb ff18 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006870:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006874:	26ff      	movs	r6, #255	; 0xff
 8006876:	4b9f      	ldr	r3, [pc, #636]	; (8006af4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006878:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800687a:	2226      	movs	r2, #38	; 0x26
 800687c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006880:	4629      	mov	r1, r5
 8006882:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006886:	4640      	mov	r0, r8
 8006888:	66a5      	str	r5, [r4, #104]	; 0x68
 800688a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800688e:	f024 fc40 	bl	802b112 <memset>
 8006892:	4640      	mov	r0, r8
 8006894:	f7fb ff04 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006898:	4b97      	ldr	r3, [pc, #604]	; (8006af8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 800689a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800689c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80068a0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068a4:	a90a      	add	r1, sp, #40	; 0x28
 80068a6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80068aa:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80068ac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068b0:	f00c fe59 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80068b4:	4658      	mov	r0, fp
 80068b6:	f00c ff97 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068ba:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80068be:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80068c2:	4618      	mov	r0, r3
 80068c4:	ee08 3a90 	vmov	s17, r3
 80068c8:	f7fb fefc 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80068cc:	4638      	mov	r0, r7
 80068ce:	f00b fd13 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 80068d2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068d6:	4618      	mov	r0, r3
 80068d8:	9303      	str	r3, [sp, #12]
 80068da:	f7fb fce1 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80068de:	4b87      	ldr	r3, [pc, #540]	; (8006afc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 80068e0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80068e4:	3324      	adds	r3, #36	; 0x24
 80068e6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80068ea:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80068ee:	4618      	mov	r0, r3
 80068f0:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80068f4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80068f8:	ee08 3a10 	vmov	s16, r3
 80068fc:	f7fb fee2 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006900:	4650      	mov	r0, sl
 8006902:	f7fb fedf 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006906:	4a7e      	ldr	r2, [pc, #504]	; (8006b00 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006908:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800690c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006910:	4a7c      	ldr	r2, [pc, #496]	; (8006b04 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006912:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006916:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800691a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800691e:	f00d fe1f 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006922:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006926:	462a      	mov	r2, r5
 8006928:	4648      	mov	r0, r9
 800692a:	9300      	str	r3, [sp, #0]
 800692c:	4629      	mov	r1, r5
 800692e:	23f0      	movs	r3, #240	; 0xf0
 8006930:	f7fb fea2 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006934:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006936:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800693a:	66a3      	str	r3, [r4, #104]	; 0x68
 800693c:	4649      	mov	r1, r9
 800693e:	4630      	mov	r0, r6
 8006940:	f00a f881 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006944:	462a      	mov	r2, r5
 8006946:	4640      	mov	r0, r8
 8006948:	4629      	mov	r1, r5
 800694a:	f7fb fe88 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800694e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006950:	4640      	mov	r0, r8
 8006952:	a90a      	add	r1, sp, #40	; 0x28
 8006954:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006958:	f00c fe05 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800695c:	4641      	mov	r1, r8
 800695e:	4630      	mov	r0, r6
 8006960:	f00a f871 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006964:	4658      	mov	r0, fp
 8006966:	f240 1201 	movw	r2, #257	; 0x101
 800696a:	2121      	movs	r1, #33	; 0x21
 800696c:	f7fb fe77 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006970:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006972:	aa0a      	add	r2, sp, #40	; 0x28
 8006974:	a909      	add	r1, sp, #36	; 0x24
 8006976:	4658      	mov	r0, fp
 8006978:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800697c:	2302      	movs	r3, #2
 800697e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006982:	f00c fbfa 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006986:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006988:	4658      	mov	r0, fp
 800698a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800698e:	f7fb febb 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006992:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006996:	330c      	adds	r3, #12
        color = col;
 8006998:	f04f 39ff 	mov.w	r9, #4294967295
 800699c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80069a0:	4659      	mov	r1, fp
 80069a2:	4630      	mov	r0, r6
        colorPressed = col;
 80069a4:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80069a8:	f00a f84d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80069ac:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80069b0:	223c      	movs	r2, #60	; 0x3c
 80069b2:	ee18 0a90 	vmov	r0, s17
 80069b6:	2117      	movs	r1, #23
 80069b8:	f7fb fe51 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80069bc:	ee18 1a90 	vmov	r1, s17
 80069c0:	4640      	mov	r0, r8
        color = newColor;
 80069c2:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80069c6:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80069ca:	f00b ff57 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069ce:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069d2:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80069d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80069da:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006b08 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 80069de:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80069e2:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80069e4:	ee18 0a90 	vmov	r0, s17
 80069e8:	a90a      	add	r1, sp, #40	; 0x28
 80069ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069ee:	f00c f9df 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069f2:	ee18 1a90 	vmov	r1, s17
 80069f6:	4630      	mov	r0, r6
 80069f8:	f00a f825 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069fc:	230a      	movs	r3, #10
 80069fe:	9300      	str	r3, [sp, #0]
 8006a00:	2232      	movs	r2, #50	; 0x32
 8006a02:	23f0      	movs	r3, #240	; 0xf0
 8006a04:	4629      	mov	r1, r5
 8006a06:	4638      	mov	r0, r7
 8006a08:	f7fb fe36 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a0c:	9b03      	ldr	r3, [sp, #12]
 8006a0e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a12:	22a0      	movs	r2, #160	; 0xa0
 8006a14:	4611      	mov	r1, r2
 8006a16:	4638      	mov	r0, r7
 8006a18:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a1c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006a20:	f00b fd80 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a24:	22a0      	movs	r2, #160	; 0xa0
 8006a26:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a2a:	4638      	mov	r0, r7
 8006a2c:	f00b fd85 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a30:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006a34:	2b20      	cmp	r3, #32
 8006a36:	d005      	beq.n	8006a44 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006a38:	2320      	movs	r3, #32
 8006a3a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006a3e:	4638      	mov	r0, r7
 8006a40:	f00b fc7a 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a44:	4638      	mov	r0, r7
 8006a46:	2101      	movs	r1, #1
 8006a48:	f00b fd82 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a4c:	4639      	mov	r1, r7
 8006a4e:	4630      	mov	r0, r6
 8006a50:	f009 fff9 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a54:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006a58:	ee18 0a10 	vmov	r0, s16
 8006a5c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006a5e:	2500      	movs	r5, #0
 8006a60:	2145      	movs	r1, #69	; 0x45
 8006a62:	f7fb fdfc 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a66:	ee18 1a10 	vmov	r1, s16
 8006a6a:	4640      	mov	r0, r8
        color = newColor;
 8006a6c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006a70:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006a74:	f00b ff02 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a78:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006a7c:	ee18 3a10 	vmov	r3, s16
 8006a80:	333c      	adds	r3, #60	; 0x3c
 8006a82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a86:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006a88:	ee18 0a10 	vmov	r0, s16
 8006a8c:	a90a      	add	r1, sp, #40	; 0x28
 8006a8e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a92:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006a96:	f00c f98b 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a9a:	ee18 1a10 	vmov	r1, s16
 8006a9e:	4630      	mov	r0, r6
 8006aa0:	f009 ffd1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006aa4:	220c      	movs	r2, #12
 8006aa6:	4650      	mov	r0, sl
 8006aa8:	2136      	movs	r1, #54	; 0x36
 8006aaa:	f7fb fdd8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006aae:	4651      	mov	r1, sl
 8006ab0:	4640      	mov	r0, r8
        color = newColor;
 8006ab2:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006ab6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006aba:	f00b fedf 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006abe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006ac2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006aca:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006acc:	a90a      	add	r1, sp, #40	; 0x28
 8006ace:	4650      	mov	r0, sl
 8006ad0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ad4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006ad8:	f00c f96a 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006adc:	4630      	mov	r0, r6
 8006ade:	4651      	mov	r1, sl
 8006ae0:	f009 ffb1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ae4:	4620      	mov	r0, r4
 8006ae6:	b00d      	add	sp, #52	; 0x34
 8006ae8:	ecbd 8b02 	vpop	{d8}
 8006aec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006af0:	0802e504 	.word	0x0802e504
 8006af4:	0802f640 	.word	0x0802f640
 8006af8:	0802f808 	.word	0x0802f808
 8006afc:	0802f374 	.word	0x0802f374
 8006b00:	0802e4ec 	.word	0x0802e4ec
 8006b04:	0800682d 	.word	0x0800682d
 8006b08:	0802c8cc 	.word	0x0802c8cc

08006b0c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006b0c:	4770      	bx	lr

08006b0e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b0e:	4770      	bx	lr

08006b10 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b10:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b12:	68c2      	ldr	r2, [r0, #12]
 8006b14:	6844      	ldr	r4, [r0, #4]
 8006b16:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b18:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b1a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b1e:	07d2      	lsls	r2, r2, #31
 8006b20:	bf48      	it	mi
 8006b22:	5962      	ldrmi	r2, [r4, r5]
 8006b24:	689b      	ldr	r3, [r3, #8]
    }
 8006b26:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b28:	bf48      	it	mi
 8006b2a:	58d3      	ldrmi	r3, [r2, r3]
 8006b2c:	4718      	bx	r3

08006b2e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b2e:	6843      	ldr	r3, [r0, #4]
 8006b30:	b12b      	cbz	r3, 8006b3e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b32:	6883      	ldr	r3, [r0, #8]
 8006b34:	b92b      	cbnz	r3, 8006b42 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b36:	68c0      	ldr	r0, [r0, #12]
 8006b38:	f000 0001 	and.w	r0, r0, #1
 8006b3c:	4770      	bx	lr
 8006b3e:	4618      	mov	r0, r3
 8006b40:	4770      	bx	lr
 8006b42:	2001      	movs	r0, #1
    }
 8006b44:	4770      	bx	lr

08006b46 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b46:	b510      	push	{r4, lr}
 8006b48:	2110      	movs	r1, #16
 8006b4a:	4604      	mov	r4, r0
 8006b4c:	f023 fac9 	bl	802a0e2 <_ZdlPvj>
 8006b50:	4620      	mov	r0, r4
 8006b52:	bd10      	pop	{r4, pc}

08006b54 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006b54:	b510      	push	{r4, lr}
 8006b56:	4b03      	ldr	r3, [pc, #12]	; (8006b64 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006b58:	6003      	str	r3, [r0, #0]
 8006b5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b5c:	f00d fd0a 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b60:	4620      	mov	r0, r4
 8006b62:	bd10      	pop	{r4, pc}
 8006b64:	0802e550 	.word	0x0802e550

08006b68 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006b68:	b507      	push	{r0, r1, r2, lr}
 8006b6a:	4b07      	ldr	r3, [pc, #28]	; (8006b88 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006b6c:	6003      	str	r3, [r0, #0]
 8006b6e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b70:	f00d fd00 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b74:	9801      	ldr	r0, [sp, #4]
 8006b76:	f241 015c 	movw	r1, #4188	; 0x105c
 8006b7a:	f023 fab2 	bl	802a0e2 <_ZdlPvj>
 8006b7e:	9801      	ldr	r0, [sp, #4]
 8006b80:	b003      	add	sp, #12
 8006b82:	f85d fb04 	ldr.w	pc, [sp], #4
 8006b86:	bf00      	nop
 8006b88:	0802e550 	.word	0x0802e550

08006b8c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006b8c:	3098      	adds	r0, #152	; 0x98
 8006b8e:	4288      	cmp	r0, r1
{
 8006b90:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006b92:	d105      	bne.n	8006ba0 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006b94:	f00f f9f0 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006b98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006b9c:	f7fd bb94 	b.w	80042c8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006ba0:	bd08      	pop	{r3, pc}
	...

08006ba4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ba8:	ed2d 8b02 	vpush	{d8}
 8006bac:	4604      	mov	r4, r0
 8006bae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006bb0:	46a1      	mov	r9, r4
 8006bb2:	2500      	movs	r5, #0
 8006bb4:	f010 fe60 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8006bb8:	4ba5      	ldr	r3, [pc, #660]	; (8006e50 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006bba:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006bbc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006bc0:	2226      	movs	r2, #38	; 0x26
 8006bc2:	4629      	mov	r1, r5
 8006bc4:	4648      	mov	r0, r9
 8006bc6:	f024 faa4 	bl	802b112 <memset>
 8006bca:	4648      	mov	r0, r9
 8006bcc:	f7fb fd68 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006bd0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006bd4:	26ff      	movs	r6, #255	; 0xff
 8006bd6:	4b9f      	ldr	r3, [pc, #636]	; (8006e54 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006bd8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006bda:	2226      	movs	r2, #38	; 0x26
 8006bdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006be0:	4629      	mov	r1, r5
 8006be2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006be6:	4640      	mov	r0, r8
 8006be8:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006bee:	f024 fa90 	bl	802b112 <memset>
 8006bf2:	4640      	mov	r0, r8
 8006bf4:	f7fb fd54 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006bf8:	4b97      	ldr	r3, [pc, #604]	; (8006e58 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006bfa:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006bfc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c00:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c04:	a90a      	add	r1, sp, #40	; 0x28
 8006c06:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c0a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c0c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c10:	f00c fca9 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c14:	4658      	mov	r0, fp
 8006c16:	f00c fde7 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c1a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006c1e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006c22:	4618      	mov	r0, r3
 8006c24:	ee08 3a90 	vmov	s17, r3
 8006c28:	f7fb fd4c 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006c2c:	4638      	mov	r0, r7
 8006c2e:	f00b fb63 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8006c32:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c36:	4618      	mov	r0, r3
 8006c38:	9303      	str	r3, [sp, #12]
 8006c3a:	f7fb fb31 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c3e:	4b87      	ldr	r3, [pc, #540]	; (8006e5c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006c40:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006c44:	3324      	adds	r3, #36	; 0x24
 8006c46:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006c4a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006c4e:	4618      	mov	r0, r3
 8006c50:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006c54:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006c58:	ee08 3a10 	vmov	s16, r3
 8006c5c:	f7fb fd32 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006c60:	4650      	mov	r0, sl
 8006c62:	f7fb fd2f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006c66:	4a7e      	ldr	r2, [pc, #504]	; (8006e60 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006c68:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006c6c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006c70:	4a7c      	ldr	r2, [pc, #496]	; (8006e64 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c72:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006c76:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006c7a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006c7e:	f00d fc6f 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006c82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006c86:	462a      	mov	r2, r5
 8006c88:	4648      	mov	r0, r9
 8006c8a:	9300      	str	r3, [sp, #0]
 8006c8c:	4629      	mov	r1, r5
 8006c8e:	23f0      	movs	r3, #240	; 0xf0
 8006c90:	f7fb fcf2 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c94:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006c96:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c9a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c9c:	4649      	mov	r1, r9
 8006c9e:	4630      	mov	r0, r6
 8006ca0:	f009 fed1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ca4:	462a      	mov	r2, r5
 8006ca6:	4640      	mov	r0, r8
 8006ca8:	4629      	mov	r1, r5
 8006caa:	f7fb fcd8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006cae:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cb0:	4640      	mov	r0, r8
 8006cb2:	a90a      	add	r1, sp, #40	; 0x28
 8006cb4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cb8:	f00c fc55 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006cbc:	4641      	mov	r1, r8
 8006cbe:	4630      	mov	r0, r6
 8006cc0:	f009 fec1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006cc4:	4658      	mov	r0, fp
 8006cc6:	f240 1201 	movw	r2, #257	; 0x101
 8006cca:	2121      	movs	r1, #33	; 0x21
 8006ccc:	f7fb fcc7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006cd0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cd2:	aa0a      	add	r2, sp, #40	; 0x28
 8006cd4:	a909      	add	r1, sp, #36	; 0x24
 8006cd6:	4658      	mov	r0, fp
 8006cd8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006cdc:	2302      	movs	r3, #2
 8006cde:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ce2:	f00c fa4a 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006ce6:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8006ce8:	4658      	mov	r0, fp
 8006cea:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006cee:	f7fb fd0b 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006cf2:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006cf6:	330c      	adds	r3, #12
        color = col;
 8006cf8:	f04f 39ff 	mov.w	r9, #4294967295
 8006cfc:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006d00:	4659      	mov	r1, fp
 8006d02:	4630      	mov	r0, r6
        colorPressed = col;
 8006d04:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006d08:	f009 fe9d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d0c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006d10:	223c      	movs	r2, #60	; 0x3c
 8006d12:	ee18 0a90 	vmov	r0, s17
 8006d16:	2117      	movs	r1, #23
 8006d18:	f7fb fca1 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006d1c:	ee18 1a90 	vmov	r1, s17
 8006d20:	4640      	mov	r0, r8
        color = newColor;
 8006d22:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006d26:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d2a:	f00b fda7 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d2e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d32:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006d36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d3a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006e68 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8006d3e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d42:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006d44:	ee18 0a90 	vmov	r0, s17
 8006d48:	a90a      	add	r1, sp, #40	; 0x28
 8006d4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d4e:	f00c f82f 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d52:	ee18 1a90 	vmov	r1, s17
 8006d56:	4630      	mov	r0, r6
 8006d58:	f009 fe75 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d5c:	230a      	movs	r3, #10
 8006d5e:	9300      	str	r3, [sp, #0]
 8006d60:	2232      	movs	r2, #50	; 0x32
 8006d62:	23f0      	movs	r3, #240	; 0xf0
 8006d64:	4629      	mov	r1, r5
 8006d66:	4638      	mov	r0, r7
 8006d68:	f7fb fc86 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d6c:	9b03      	ldr	r3, [sp, #12]
 8006d6e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d72:	22a0      	movs	r2, #160	; 0xa0
 8006d74:	4611      	mov	r1, r2
 8006d76:	4638      	mov	r0, r7
 8006d78:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006d7c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006d80:	f00b fbd0 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d84:	22a0      	movs	r2, #160	; 0xa0
 8006d86:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d8a:	4638      	mov	r0, r7
 8006d8c:	f00b fbd5 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d90:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006d94:	2b20      	cmp	r3, #32
 8006d96:	d005      	beq.n	8006da4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006d98:	2320      	movs	r3, #32
 8006d9a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006d9e:	4638      	mov	r0, r7
 8006da0:	f00b faca 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006da4:	4638      	mov	r0, r7
 8006da6:	2101      	movs	r1, #1
 8006da8:	f00b fbd2 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dac:	4639      	mov	r1, r7
 8006dae:	4630      	mov	r0, r6
 8006db0:	f009 fe49 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006db4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006db8:	ee18 0a10 	vmov	r0, s16
 8006dbc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006dbe:	2500      	movs	r5, #0
 8006dc0:	2145      	movs	r1, #69	; 0x45
 8006dc2:	f7fb fc4c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006dc6:	ee18 1a10 	vmov	r1, s16
 8006dca:	4640      	mov	r0, r8
        color = newColor;
 8006dcc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006dd0:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006dd4:	f00b fd52 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dd8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006ddc:	ee18 3a10 	vmov	r3, s16
 8006de0:	333c      	adds	r3, #60	; 0x3c
 8006de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006de6:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006de8:	ee18 0a10 	vmov	r0, s16
 8006dec:	a90a      	add	r1, sp, #40	; 0x28
 8006dee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006df2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006df6:	f00b ffdb 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dfa:	ee18 1a10 	vmov	r1, s16
 8006dfe:	4630      	mov	r0, r6
 8006e00:	f009 fe21 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e04:	220c      	movs	r2, #12
 8006e06:	4650      	mov	r0, sl
 8006e08:	2136      	movs	r1, #54	; 0x36
 8006e0a:	f7fb fc28 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006e0e:	4651      	mov	r1, sl
 8006e10:	4640      	mov	r0, r8
        color = newColor;
 8006e12:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006e16:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006e1a:	f00b fd2f 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e1e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e22:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006e26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e2a:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006e2c:	a90a      	add	r1, sp, #40	; 0x28
 8006e2e:	4650      	mov	r0, sl
 8006e30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e34:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e38:	f00b ffba 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e3c:	4630      	mov	r0, r6
 8006e3e:	4651      	mov	r1, sl
 8006e40:	f009 fe01 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e44:	4620      	mov	r0, r4
 8006e46:	b00d      	add	sp, #52	; 0x34
 8006e48:	ecbd 8b02 	vpop	{d8}
 8006e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e50:	0802e550 	.word	0x0802e550
 8006e54:	0802f640 	.word	0x0802f640
 8006e58:	0802f808 	.word	0x0802f808
 8006e5c:	0802f374 	.word	0x0802f374
 8006e60:	0802e538 	.word	0x0802e538
 8006e64:	08006b8d 	.word	0x08006b8d
 8006e68:	0802c8cc 	.word	0x0802c8cc

08006e6c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006e6c:	4770      	bx	lr

08006e6e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e6e:	4770      	bx	lr

08006e70 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006e70:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e72:	68c2      	ldr	r2, [r0, #12]
 8006e74:	6844      	ldr	r4, [r0, #4]
 8006e76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006e78:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006e7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006e7e:	07d2      	lsls	r2, r2, #31
 8006e80:	bf48      	it	mi
 8006e82:	5962      	ldrmi	r2, [r4, r5]
 8006e84:	689b      	ldr	r3, [r3, #8]
    }
 8006e86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e88:	bf48      	it	mi
 8006e8a:	58d3      	ldrmi	r3, [r2, r3]
 8006e8c:	4718      	bx	r3

08006e8e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e8e:	6843      	ldr	r3, [r0, #4]
 8006e90:	b12b      	cbz	r3, 8006e9e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e92:	6883      	ldr	r3, [r0, #8]
 8006e94:	b92b      	cbnz	r3, 8006ea2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e96:	68c0      	ldr	r0, [r0, #12]
 8006e98:	f000 0001 	and.w	r0, r0, #1
 8006e9c:	4770      	bx	lr
 8006e9e:	4618      	mov	r0, r3
 8006ea0:	4770      	bx	lr
 8006ea2:	2001      	movs	r0, #1
    }
 8006ea4:	4770      	bx	lr

08006ea6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ea6:	b510      	push	{r4, lr}
 8006ea8:	2110      	movs	r1, #16
 8006eaa:	4604      	mov	r4, r0
 8006eac:	f023 f919 	bl	802a0e2 <_ZdlPvj>
 8006eb0:	4620      	mov	r0, r4
 8006eb2:	bd10      	pop	{r4, pc}

08006eb4 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006eb4:	b510      	push	{r4, lr}
 8006eb6:	4b03      	ldr	r3, [pc, #12]	; (8006ec4 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006eb8:	6003      	str	r3, [r0, #0]
 8006eba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ebc:	f00d fb5a 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ec0:	4620      	mov	r0, r4
 8006ec2:	bd10      	pop	{r4, pc}
 8006ec4:	0802e59c 	.word	0x0802e59c

08006ec8 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006ec8:	b507      	push	{r0, r1, r2, lr}
 8006eca:	4b07      	ldr	r3, [pc, #28]	; (8006ee8 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006ecc:	6003      	str	r3, [r0, #0]
 8006ece:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ed0:	f00d fb50 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ed4:	9801      	ldr	r0, [sp, #4]
 8006ed6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006eda:	f023 f902 	bl	802a0e2 <_ZdlPvj>
 8006ede:	9801      	ldr	r0, [sp, #4]
 8006ee0:	b003      	add	sp, #12
 8006ee2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ee6:	bf00      	nop
 8006ee8:	0802e59c 	.word	0x0802e59c

08006eec <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006eec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006eee:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006ef2:	4299      	cmp	r1, r3
{
 8006ef4:	4604      	mov	r4, r0
 8006ef6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006ef8:	d103      	bne.n	8006f02 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006efa:	f00f f83d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006efe:	f7fd f993 	bl	8004228 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006f02:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006f06:	429d      	cmp	r5, r3
 8006f08:	d103      	bne.n	8006f12 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006f0a:	f00f f835 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006f0e:	f7fd f9ab 	bl	8004268 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006f12:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006f16:	42a5      	cmp	r5, r4
 8006f18:	d105      	bne.n	8006f26 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006f1a:	f00f f82d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006f1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006f22:	f7fd b9b1 	b.w	8004288 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006f26:	bd38      	pop	{r3, r4, r5, pc}

08006f28 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f2c:	ed2d 8b06 	vpush	{d8-d10}
 8006f30:	4604      	mov	r4, r0
 8006f32:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006f34:	46a3      	mov	fp, r4
 8006f36:	2500      	movs	r5, #0
 8006f38:	f010 fc9e 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8006f3c:	4b66      	ldr	r3, [pc, #408]	; (80070d8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006f3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f40:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006f44:	2226      	movs	r2, #38	; 0x26
 8006f46:	4629      	mov	r1, r5
 8006f48:	4658      	mov	r0, fp
 8006f4a:	f024 f8e2 	bl	802b112 <memset>
 8006f4e:	4658      	mov	r0, fp
 8006f50:	f7fb fba6 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006f54:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006f58:	26ff      	movs	r6, #255	; 0xff
 8006f5a:	4b60      	ldr	r3, [pc, #384]	; (80070dc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006f5c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f5e:	2226      	movs	r2, #38	; 0x26
 8006f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f64:	4629      	mov	r1, r5
 8006f66:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f6a:	4650      	mov	r0, sl
 8006f6c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f6e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f72:	f024 f8ce 	bl	802b112 <memset>
 8006f76:	4650      	mov	r0, sl
 8006f78:	f7fb fb92 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006f7c:	4b58      	ldr	r3, [pc, #352]	; (80070e0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006f7e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f84:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006f88:	a90a      	add	r1, sp, #40	; 0x28
 8006f8a:	4650      	mov	r0, sl
 8006f8c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006f90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006f94:	f00c fae7 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006f98:	4648      	mov	r0, r9
 8006f9a:	f7fb fb93 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006f9e:	4b51      	ldr	r3, [pc, #324]	; (80070e4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006fa0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006fa4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006fa8:	4618      	mov	r0, r3
 8006faa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006fae:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006fb2:	ee08 3a90 	vmov	s17, r3
 8006fb6:	f7fb fb85 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006fba:	4638      	mov	r0, r7
 8006fbc:	f00b f99c 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8006fc0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fc4:	4618      	mov	r0, r3
 8006fc6:	9303      	str	r3, [sp, #12]
 8006fc8:	f7fb f96a 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fcc:	4b46      	ldr	r3, [pc, #280]	; (80070e8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006fce:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006fd2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006fd6:	3324      	adds	r3, #36	; 0x24
 8006fd8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006fdc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006fe0:	4640      	mov	r0, r8
 8006fe2:	f7fb fb6f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006fe6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006fea:	4618      	mov	r0, r3
 8006fec:	ee08 3a10 	vmov	s16, r3
 8006ff0:	f7fb fb68 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006ff4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	ee09 3a10 	vmov	s18, r3
 8006ffe:	f00c fbf3 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007002:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007006:	4618      	mov	r0, r3
 8007008:	ee09 3a90 	vmov	s19, r3
 800700c:	f00c fbec 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007010:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007014:	4618      	mov	r0, r3
 8007016:	ee0a 3a10 	vmov	s20, r3
 800701a:	f00c fbe5 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800701e:	4a33      	ldr	r2, [pc, #204]	; (80070ec <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007020:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007024:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007028:	4a31      	ldr	r2, [pc, #196]	; (80070f0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800702a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800702e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8007032:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8007036:	f00d fa93 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800703a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800703e:	462a      	mov	r2, r5
 8007040:	4658      	mov	r0, fp
 8007042:	9300      	str	r3, [sp, #0]
 8007044:	4629      	mov	r1, r5
 8007046:	23f0      	movs	r3, #240	; 0xf0
 8007048:	f7fb fb16 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800704c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800704e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007052:	66a3      	str	r3, [r4, #104]	; 0x68
 8007054:	4659      	mov	r1, fp
 8007056:	4630      	mov	r0, r6
 8007058:	f009 fcf5 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800705c:	462a      	mov	r2, r5
 800705e:	4650      	mov	r0, sl
 8007060:	4629      	mov	r1, r5
 8007062:	f7fb fafc 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007066:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007068:	4650      	mov	r0, sl
 800706a:	a90a      	add	r1, sp, #40	; 0x28
 800706c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007070:	f00c fa79 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007074:	4651      	mov	r1, sl
 8007076:	4630      	mov	r0, r6
 8007078:	f009 fce5 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800707c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007080:	2156      	movs	r1, #86	; 0x56
 8007082:	4648      	mov	r0, r9
 8007084:	f7fb faeb 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007088:	f04f 33ff 	mov.w	r3, #4294967295
 800708c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007090:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007094:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007098:	f10d 0b10 	add.w	fp, sp, #16
 800709c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80070a0:	4649      	mov	r1, r9
 80070a2:	4658      	mov	r0, fp
 80070a4:	4798      	blx	r3
 80070a6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80070aa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80070ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80070b2:	4b10      	ldr	r3, [pc, #64]	; (80070f4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 80070b4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 80070b6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80070ba:	b92b      	cbnz	r3, 80070c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 80070bc:	4b0e      	ldr	r3, [pc, #56]	; (80070f8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 80070be:	4a0f      	ldr	r2, [pc, #60]	; (80070fc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80070c0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070c2:	480f      	ldr	r0, [pc, #60]	; (8007100 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 80070c4:	f023 fe20 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80070c8:	4b0e      	ldr	r3, [pc, #56]	; (8007104 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070ca:	881b      	ldrh	r3, [r3, #0]
 80070cc:	2b26      	cmp	r3, #38	; 0x26
 80070ce:	d81d      	bhi.n	800710c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80070d0:	4b0d      	ldr	r3, [pc, #52]	; (8007108 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80070d2:	4a0a      	ldr	r2, [pc, #40]	; (80070fc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80070d4:	2161      	movs	r1, #97	; 0x61
 80070d6:	e7f4      	b.n	80070c2 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80070d8:	0802e59c 	.word	0x0802e59c
 80070dc:	0802f640 	.word	0x0802f640
 80070e0:	0802f808 	.word	0x0802f808
 80070e4:	0802c8dc 	.word	0x0802c8dc
 80070e8:	0802f374 	.word	0x0802f374
 80070ec:	0802e584 	.word	0x0802e584
 80070f0:	08006eed 	.word	0x08006eed
 80070f4:	2001349c 	.word	0x2001349c
 80070f8:	0802c71c 	.word	0x0802c71c
 80070fc:	0802c81e 	.word	0x0802c81e
 8007100:	0802c799 	.word	0x0802c799
 8007104:	200134a0 	.word	0x200134a0
 8007108:	0802c7e0 	.word	0x0802c7e0
        return texts->getText(typedTextId);
 800710c:	4b95      	ldr	r3, [pc, #596]	; (8007364 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 800710e:	2126      	movs	r1, #38	; 0x26
 8007110:	6818      	ldr	r0, [r3, #0]
 8007112:	f001 fabd 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8007116:	4a94      	ldr	r2, [pc, #592]	; (8007368 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007118:	4603      	mov	r3, r0
 800711a:	2104      	movs	r1, #4
 800711c:	4650      	mov	r0, sl
 800711e:	f012 f8d9 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007122:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007126:	4648      	mov	r0, r9
 8007128:	f00b fe22 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800712c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 800736c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007130:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007134:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007136:	a90a      	add	r1, sp, #40	; 0x28
 8007138:	4648      	mov	r0, r9
 800713a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800713e:	f00b fe37 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007142:	4649      	mov	r1, r9
 8007144:	4630      	mov	r0, r6
 8007146:	f009 fc7e 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 800714a:	223c      	movs	r2, #60	; 0x3c
 800714c:	ee18 0a90 	vmov	r0, s17
 8007150:	2129      	movs	r1, #41	; 0x29
 8007152:	f7fb fa84 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007156:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800715a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800715e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007162:	4658      	mov	r0, fp
        linespace = space;
 8007164:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007168:	f00b fb88 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800716c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007170:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007174:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007178:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 800717a:	ee18 0a90 	vmov	r0, s17
 800717e:	a90a      	add	r1, sp, #40	; 0x28
 8007180:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007184:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007188:	f00b fe12 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800718c:	ee18 1a90 	vmov	r1, s17
 8007190:	4630      	mov	r0, r6
 8007192:	f009 fc58 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007196:	230a      	movs	r3, #10
 8007198:	9300      	str	r3, [sp, #0]
 800719a:	2232      	movs	r2, #50	; 0x32
 800719c:	23f0      	movs	r3, #240	; 0xf0
 800719e:	4629      	mov	r1, r5
 80071a0:	4638      	mov	r0, r7
 80071a2:	f7fb fa69 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071a6:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071aa:	22a0      	movs	r2, #160	; 0xa0
 80071ac:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071b0:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80071b4:	9b03      	ldr	r3, [sp, #12]
 80071b6:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80071ba:	4611      	mov	r1, r2
 80071bc:	4638      	mov	r0, r7
 80071be:	f00b f9b1 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071c2:	22a0      	movs	r2, #160	; 0xa0
 80071c4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071c8:	4638      	mov	r0, r7
 80071ca:	f00b f9b6 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071ce:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80071d2:	2b20      	cmp	r3, #32
 80071d4:	d005      	beq.n	80071e2 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80071d6:	2320      	movs	r3, #32
 80071d8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80071dc:	4638      	mov	r0, r7
 80071de:	f00b f8ab 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80071e2:	4638      	mov	r0, r7
 80071e4:	2101      	movs	r1, #1
 80071e6:	f00b f9b3 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80071ea:	4639      	mov	r1, r7
 80071ec:	4630      	mov	r0, r6
 80071ee:	f009 fc2a 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80071f2:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80071f6:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80071f8:	2223      	movs	r2, #35	; 0x23
 80071fa:	4640      	mov	r0, r8
        linespace = space;
 80071fc:	f04f 0a00 	mov.w	sl, #0
 8007200:	2145      	movs	r1, #69	; 0x45
 8007202:	f7fb fa2c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007206:	4641      	mov	r1, r8
 8007208:	4638      	mov	r0, r7
        color = newColor;
 800720a:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 800720e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007212:	f00b fb33 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007216:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800721a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800721e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007222:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800736c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007226:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800722a:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 800722c:	a90a      	add	r1, sp, #40	; 0x28
 800722e:	4640      	mov	r0, r8
 8007230:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007234:	f00b fdbc 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007238:	4641      	mov	r1, r8
 800723a:	4630      	mov	r0, r6
 800723c:	f009 fc03 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007240:	ee18 0a10 	vmov	r0, s16
 8007244:	220c      	movs	r2, #12
 8007246:	2136      	movs	r1, #54	; 0x36
 8007248:	f7fb fa09 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800724c:	ee18 1a10 	vmov	r1, s16
 8007250:	4638      	mov	r0, r7
        color = newColor;
 8007252:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007256:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800725a:	f00b fb0f 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800725e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007262:	ee18 3a10 	vmov	r3, s16
 8007266:	333c      	adds	r3, #60	; 0x3c
 8007268:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800726c:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 800726e:	ee18 0a10 	vmov	r0, s16
 8007272:	a90a      	add	r1, sp, #40	; 0x28
 8007274:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007278:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800727c:	f00b fd98 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007280:	ee18 1a10 	vmov	r1, s16
 8007284:	4630      	mov	r0, r6
 8007286:	f009 fbde 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800728a:	ee19 0a10 	vmov	r0, s18
 800728e:	22f0      	movs	r2, #240	; 0xf0
 8007290:	2121      	movs	r1, #33	; 0x21
 8007292:	f7fb f9e4 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007296:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800729a:	aa0a      	add	r2, sp, #40	; 0x28
 800729c:	f04f 0802 	mov.w	r8, #2
 80072a0:	a909      	add	r1, sp, #36	; 0x24
 80072a2:	ee19 0a10 	vmov	r0, s18
 80072a6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80072aa:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80072ae:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072b2:	f00b ff62 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80072b6:	2347      	movs	r3, #71	; 0x47
 80072b8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80072bc:	3710      	adds	r7, #16
        updateTextPosition();
 80072be:	ee19 0a10 	vmov	r0, s18
 80072c2:	f7fb fa21 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80072c6:	ee19 1a10 	vmov	r1, s18
 80072ca:	4630      	mov	r0, r6
        colorPressed = col;
 80072cc:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80072d0:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80072d4:	f009 fbb7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80072d8:	ee19 0a90 	vmov	r0, s19
 80072dc:	22aa      	movs	r2, #170	; 0xaa
 80072de:	2121      	movs	r1, #33	; 0x21
 80072e0:	f7fb f9bd 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072e4:	aa0a      	add	r2, sp, #40	; 0x28
 80072e6:	a909      	add	r1, sp, #36	; 0x24
 80072e8:	ee19 0a90 	vmov	r0, s19
 80072ec:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80072f0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80072f4:	f00b ff41 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80072f8:	2346      	movs	r3, #70	; 0x46
 80072fa:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80072fe:	ee19 0a90 	vmov	r0, s19
 8007302:	f7fb fa01 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007306:	ee19 1a90 	vmov	r1, s19
 800730a:	4630      	mov	r0, r6
        colorPressed = col;
 800730c:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007310:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007314:	f009 fb97 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007318:	ee1a 0a10 	vmov	r0, s20
 800731c:	2264      	movs	r2, #100	; 0x64
 800731e:	2121      	movs	r1, #33	; 0x21
 8007320:	f7fb f99d 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007324:	aa0a      	add	r2, sp, #40	; 0x28
 8007326:	a909      	add	r1, sp, #36	; 0x24
 8007328:	ee1a 0a10 	vmov	r0, s20
 800732c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007330:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007334:	f00b ff21 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007338:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 800733a:	ee1a 0a10 	vmov	r0, s20
 800733e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007342:	f7fb f9e1 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007346:	4630      	mov	r0, r6
        colorPressed = col;
 8007348:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 800734c:	ee1a 1a10 	vmov	r1, s20
 8007350:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007354:	f009 fb77 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007358:	4620      	mov	r0, r4
 800735a:	b00d      	add	sp, #52	; 0x34
 800735c:	ecbd 8b06 	vpop	{d8-d10}
 8007360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007364:	200134a8 	.word	0x200134a8
 8007368:	0802c856 	.word	0x0802c856
 800736c:	0802c8cc 	.word	0x0802c8cc

08007370 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007370:	4770      	bx	lr

08007372 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007372:	4770      	bx	lr

08007374 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007374:	4770      	bx	lr

08007376 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007376:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007378:	68c2      	ldr	r2, [r0, #12]
 800737a:	6844      	ldr	r4, [r0, #4]
 800737c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800737e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007380:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007384:	07d2      	lsls	r2, r2, #31
 8007386:	bf48      	it	mi
 8007388:	5962      	ldrmi	r2, [r4, r5]
 800738a:	689b      	ldr	r3, [r3, #8]
    }
 800738c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800738e:	bf48      	it	mi
 8007390:	58d3      	ldrmi	r3, [r2, r3]
 8007392:	4718      	bx	r3

08007394 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007394:	6843      	ldr	r3, [r0, #4]
 8007396:	b12b      	cbz	r3, 80073a4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007398:	6883      	ldr	r3, [r0, #8]
 800739a:	b92b      	cbnz	r3, 80073a8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800739c:	68c0      	ldr	r0, [r0, #12]
 800739e:	f000 0001 	and.w	r0, r0, #1
 80073a2:	4770      	bx	lr
 80073a4:	4618      	mov	r0, r3
 80073a6:	4770      	bx	lr
 80073a8:	2001      	movs	r0, #1
    }
 80073aa:	4770      	bx	lr

080073ac <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80073ac:	b510      	push	{r4, lr}
 80073ae:	2110      	movs	r1, #16
 80073b0:	4604      	mov	r4, r0
 80073b2:	f022 fe96 	bl	802a0e2 <_ZdlPvj>
 80073b6:	4620      	mov	r0, r4
 80073b8:	bd10      	pop	{r4, pc}
	...

080073bc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80073bc:	b510      	push	{r4, lr}
 80073be:	4b03      	ldr	r3, [pc, #12]	; (80073cc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 80073c0:	6003      	str	r3, [r0, #0]
 80073c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073c4:	f00d f8d6 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073c8:	4620      	mov	r0, r4
 80073ca:	bd10      	pop	{r4, pc}
 80073cc:	0802e5e8 	.word	0x0802e5e8

080073d0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80073d0:	b507      	push	{r0, r1, r2, lr}
 80073d2:	4b07      	ldr	r3, [pc, #28]	; (80073f0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 80073d4:	6003      	str	r3, [r0, #0]
 80073d6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073d8:	f00d f8cc 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073dc:	9801      	ldr	r0, [sp, #4]
 80073de:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80073e2:	f022 fe7e 	bl	802a0e2 <_ZdlPvj>
 80073e6:	9801      	ldr	r0, [sp, #4]
 80073e8:	b003      	add	sp, #12
 80073ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80073ee:	bf00      	nop
 80073f0:	0802e5e8 	.word	0x0802e5e8

080073f4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 80073f4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80073f6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80073fa:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 80073fe:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007400:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007402:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007406:	d105      	bne.n	8007414 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007408:	6803      	ldr	r3, [r0, #0]
 800740a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800740c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800740e:	2300      	movs	r3, #0
 8007410:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007414:	bd10      	pop	{r4, pc}

08007416 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007416:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 800741a:	4288      	cmp	r0, r1
{
 800741c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800741e:	d105      	bne.n	800742c <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007420:	f00e fdaa 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007424:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007428:	f7fc bf0e 	b.w	8004248 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 800742c:	bd08      	pop	{r3, pc}
	...

08007430 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007434:	ed2d 8b0a 	vpush	{d8-d12}
 8007438:	4604      	mov	r4, r0
 800743a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 800743c:	46a3      	mov	fp, r4
 800743e:	2500      	movs	r5, #0
 8007440:	f010 fa1a 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8007444:	4bac      	ldr	r3, [pc, #688]	; (80076f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007446:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007448:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800744c:	2226      	movs	r2, #38	; 0x26
 800744e:	4629      	mov	r1, r5
 8007450:	4658      	mov	r0, fp
 8007452:	f023 fe5e 	bl	802b112 <memset>
 8007456:	4658      	mov	r0, fp
 8007458:	f7fb f922 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 800745c:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8007460:	27ff      	movs	r7, #255	; 0xff
 8007462:	4ba6      	ldr	r3, [pc, #664]	; (80076fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007464:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007466:	2226      	movs	r2, #38	; 0x26
 8007468:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800746c:	4629      	mov	r1, r5
 800746e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8007472:	4630      	mov	r0, r6
 8007474:	66a5      	str	r5, [r4, #104]	; 0x68
 8007476:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800747a:	f023 fe4a 	bl	802b112 <memset>
 800747e:	4630      	mov	r0, r6
 8007480:	f7fb f90e 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007484:	4b9e      	ldr	r3, [pc, #632]	; (8007700 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007486:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007488:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800748c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007490:	a90a      	add	r1, sp, #40	; 0x28
 8007492:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007494:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007498:	f00c f865 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800749c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80074a0:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 80074a4:	4618      	mov	r0, r3
 80074a6:	ee09 3a10 	vmov	s18, r3
 80074aa:	f504 7920 	add.w	r9, r4, #640	; 0x280
 80074ae:	f7fb f909 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80074b2:	4640      	mov	r0, r8
 80074b4:	f00b fd1a 	bl	8012eec <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 80074b8:	4648      	mov	r0, r9
 80074ba:	f7fb f903 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80074be:	4f91      	ldr	r7, [pc, #580]	; (8007704 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80074c0:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 80074c4:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 80074c8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80074ca:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 80074ce:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 80074d2:	f7fb f8f7 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80074d6:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 80074da:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 80074de:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80074e0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80074e4:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 80074e8:	f7fb f8ec 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80074ec:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80074f0:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 80074f4:	4618      	mov	r0, r3
 80074f6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80074fa:	ee0a 3a90 	vmov	s21, r3
 80074fe:	f7fb f8e1 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007502:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007506:	4618      	mov	r0, r3
 8007508:	ee0b 3a10 	vmov	s22, r3
 800750c:	f7fb f8da 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007510:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007514:	4618      	mov	r0, r3
 8007516:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 800751a:	ee0b 3a90 	vmov	s23, r3
 800751e:	f7fb f8d1 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007522:	4650      	mov	r0, sl
 8007524:	f00a fee8 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8007528:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800752c:	4618      	mov	r0, r3
 800752e:	9302      	str	r3, [sp, #8]
 8007530:	f7fa feb6 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007534:	4b74      	ldr	r3, [pc, #464]	; (8007708 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007536:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800753a:	3324      	adds	r3, #36	; 0x24
 800753c:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007540:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007544:	4618      	mov	r0, r3
 8007546:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800754a:	ee08 3a10 	vmov	s16, r3
 800754e:	f7fb f8b9 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007552:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007556:	4618      	mov	r0, r3
 8007558:	ee08 3a90 	vmov	s17, r3
 800755c:	f7fb f8b2 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007560:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007564:	4618      	mov	r0, r3
 8007566:	ee0c 3a10 	vmov	s24, r3
 800756a:	f00c f93d 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800756e:	4a67      	ldr	r2, [pc, #412]	; (800770c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007570:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007574:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007578:	4a65      	ldr	r2, [pc, #404]	; (8007710 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800757a:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800757e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007582:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007586:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800758a:	f00c ffe9 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800758e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007592:	462a      	mov	r2, r5
 8007594:	4658      	mov	r0, fp
 8007596:	9300      	str	r3, [sp, #0]
 8007598:	4629      	mov	r1, r5
 800759a:	23f0      	movs	r3, #240	; 0xf0
 800759c:	f7fb f86c 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80075a0:	1d27      	adds	r7, r4, #4
        color = newColor;
 80075a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80075a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80075a8:	4659      	mov	r1, fp
 80075aa:	4638      	mov	r0, r7
 80075ac:	f009 fa4b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80075b0:	462a      	mov	r2, r5
 80075b2:	4630      	mov	r0, r6
 80075b4:	4629      	mov	r1, r5
 80075b6:	f7fb f852 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80075ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80075bc:	4630      	mov	r0, r6
 80075be:	a90a      	add	r1, sp, #40	; 0x28
 80075c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80075c4:	f00b ffcf 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80075c8:	4631      	mov	r1, r6
 80075ca:	4638      	mov	r0, r7
 80075cc:	f009 fa3b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80075d0:	223c      	movs	r2, #60	; 0x3c
 80075d2:	ee19 0a10 	vmov	r0, s18
 80075d6:	211f      	movs	r1, #31
 80075d8:	f7fb f841 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80075dc:	ae04      	add	r6, sp, #16
        color = newColor;
 80075de:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80075e2:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 80075e6:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80075ea:	4630      	mov	r0, r6
        linespace = space;
 80075ec:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80075f0:	f00b f944 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075f4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80075f8:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80075fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007600:	f04f 0b35 	mov.w	fp, #53	; 0x35
 8007604:	4b43      	ldr	r3, [pc, #268]	; (8007714 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007606:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007608:	ee19 0a10 	vmov	r0, s18
 800760c:	a90a      	add	r1, sp, #40	; 0x28
 800760e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007612:	f00b fbcd 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007616:	ee19 1a10 	vmov	r1, s18
 800761a:	4638      	mov	r0, r7
 800761c:	f009 fa13 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007620:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007622:	4640      	mov	r0, r8
 8007624:	a90a      	add	r1, sp, #40	; 0x28
 8007626:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800762a:	f008 fab3 	bl	800fb94 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 800762e:	236a      	movs	r3, #106	; 0x6a
 8007630:	4640      	mov	r0, r8
 8007632:	9300      	str	r3, [sp, #0]
 8007634:	225e      	movs	r2, #94	; 0x5e
 8007636:	23b8      	movs	r3, #184	; 0xb8
 8007638:	211c      	movs	r1, #28
 800763a:	f7fb f81d 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 800763e:	225c      	movs	r2, #92	; 0x5c
 8007640:	4611      	mov	r1, r2
 8007642:	4640      	mov	r0, r8
 8007644:	f00b fcfd 	bl	8013042 <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007648:	4640      	mov	r0, r8
 800764a:	225a      	movs	r2, #90	; 0x5a
 800764c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007650:	f00b fd7c 	bl	801314c <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007654:	462b      	mov	r3, r5
 8007656:	225a      	movs	r2, #90	; 0x5a
 8007658:	4640      	mov	r0, r8
 800765a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800765e:	9500      	str	r5, [sp, #0]
 8007660:	f008 f945 	bl	800f8ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007664:	4640      	mov	r0, r8
 8007666:	4629      	mov	r1, r5
 8007668:	f00b fd1a 	bl	80130a0 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800766c:	465b      	mov	r3, fp
 800766e:	2208      	movs	r2, #8
 8007670:	4640      	mov	r0, r8
 8007672:	2105      	movs	r1, #5
 8007674:	f00b fcd0 	bl	8013018 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007678:	4640      	mov	r0, r8
 800767a:	2101      	movs	r1, #1
 800767c:	f00b fc6e 	bl	8012f5c <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007680:	4640      	mov	r0, r8
 8007682:	2101      	movs	r1, #1
 8007684:	f00b fc6d 	bl	8012f62 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007688:	f04f 0b0f 	mov.w	fp, #15
 800768c:	4641      	mov	r1, r8
 800768e:	4638      	mov	r0, r7
 8007690:	f009 f9d9 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007694:	22e6      	movs	r2, #230	; 0xe6
 8007696:	23f0      	movs	r3, #240	; 0xf0
 8007698:	4629      	mov	r1, r5
 800769a:	4648      	mov	r0, r9
 800769c:	f8cd b000 	str.w	fp, [sp]
 80076a0:	f7fa ffea 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80076a4:	f04f 33ff 	mov.w	r3, #4294967295
 80076a8:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80076ac:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80076b0:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80076b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076b8:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800772c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2fc>
 80076bc:	4649      	mov	r1, r9
 80076be:	4630      	mov	r0, r6
 80076c0:	4798      	blx	r3
 80076c2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80076c6:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80076ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80076ce:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 80076d2:	9303      	str	r3, [sp, #12]
 80076d4:	f8d8 3000 	ldr.w	r3, [r8]
 80076d8:	b92b      	cbnz	r3, 80076e6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
 80076da:	4b0f      	ldr	r3, [pc, #60]	; (8007718 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80076dc:	4a0f      	ldr	r2, [pc, #60]	; (800771c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80076de:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80076e0:	480f      	ldr	r0, [pc, #60]	; (8007720 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 80076e2:	f023 fb11 	bl	802ad08 <__assert_func>
 80076e6:	4b0f      	ldr	r3, [pc, #60]	; (8007724 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 80076e8:	881b      	ldrh	r3, [r3, #0]
 80076ea:	2b0e      	cmp	r3, #14
 80076ec:	d820      	bhi.n	8007730 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x300>
 80076ee:	4b0e      	ldr	r3, [pc, #56]	; (8007728 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>)
 80076f0:	4a0a      	ldr	r2, [pc, #40]	; (800771c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80076f2:	2161      	movs	r1, #97	; 0x61
 80076f4:	e7f4      	b.n	80076e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 80076f6:	bf00      	nop
 80076f8:	0802e5e8 	.word	0x0802e5e8
 80076fc:	0802f640 	.word	0x0802f640
 8007700:	0802f808 	.word	0x0802f808
 8007704:	0802c8dc 	.word	0x0802c8dc
 8007708:	0802f374 	.word	0x0802f374
 800770c:	0802e5d0 	.word	0x0802e5d0
 8007710:	08007417 	.word	0x08007417
 8007714:	0802c8cc 	.word	0x0802c8cc
 8007718:	0802c71c 	.word	0x0802c71c
 800771c:	0802c81e 	.word	0x0802c81e
 8007720:	0802c799 	.word	0x0802c799
 8007724:	200134a0 	.word	0x200134a0
 8007728:	0802c7e0 	.word	0x0802c7e0
 800772c:	2001349c 	.word	0x2001349c
        return texts->getText(typedTextId);
 8007730:	4be1      	ldr	r3, [pc, #900]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8007732:	210e      	movs	r1, #14
 8007734:	6818      	ldr	r0, [r3, #0]
 8007736:	f000 ffab 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800773a:	4ae0      	ldr	r2, [pc, #896]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 800773c:	4603      	mov	r3, r0
 800773e:	210a      	movs	r1, #10
 8007740:	9803      	ldr	r0, [sp, #12]
 8007742:	f011 fdc7 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007746:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007748:	4bdd      	ldr	r3, [pc, #884]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 800774a:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 800774e:	4648      	mov	r0, r9
 8007750:	930a      	str	r3, [sp, #40]	; 0x28
 8007752:	a90a      	add	r1, sp, #40	; 0x28
 8007754:	2311      	movs	r3, #17
 8007756:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800775a:	f00b fb29 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800775e:	4649      	mov	r1, r9
 8007760:	4638      	mov	r0, r7
 8007762:	f009 f970 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007766:	22d7      	movs	r2, #215	; 0xd7
 8007768:	ee19 0a90 	vmov	r0, s19
 800776c:	23f0      	movs	r3, #240	; 0xf0
 800776e:	4629      	mov	r1, r5
 8007770:	f8cd b000 	str.w	fp, [sp]
 8007774:	f7fa ff80 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007778:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 800777c:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007780:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007784:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007788:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 800778c:	4630      	mov	r0, r6
 800778e:	ee19 1a90 	vmov	r1, s19
 8007792:	4798      	blx	r3
 8007794:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007798:	f504 7342 	add.w	r3, r4, #776	; 0x308
 800779c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80077a0:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80077a4:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d096      	beq.n	80076da <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80077ac:	49c5      	ldr	r1, [pc, #788]	; (8007ac4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x694>)
 80077ae:	880b      	ldrh	r3, [r1, #0]
 80077b0:	2b0f      	cmp	r3, #15
 80077b2:	d99c      	bls.n	80076ee <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2be>
        return texts->getText(typedTextId);
 80077b4:	4ac0      	ldr	r2, [pc, #768]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 80077b6:	4659      	mov	r1, fp
 80077b8:	6810      	ldr	r0, [r2, #0]
 80077ba:	f000 ff69 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 80077be:	4abf      	ldr	r2, [pc, #764]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 80077c0:	4603      	mov	r3, r0
 80077c2:	210a      	movs	r1, #10
 80077c4:	4648      	mov	r0, r9
 80077c6:	f011 fd85 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80077ca:	4bbd      	ldr	r3, [pc, #756]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 80077cc:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80077d0:	a80a      	add	r0, sp, #40	; 0x28
 80077d2:	4601      	mov	r1, r0
 80077d4:	930a      	str	r3, [sp, #40]	; 0x28
 80077d6:	ee19 0a90 	vmov	r0, s19
 80077da:	2312      	movs	r3, #18
 80077dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077e0:	f00b fae6 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077e4:	ee19 1a90 	vmov	r1, s19
 80077e8:	4638      	mov	r0, r7
 80077ea:	f009 f92c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80077ee:	22c8      	movs	r2, #200	; 0xc8
 80077f0:	ee1a 0a10 	vmov	r0, s20
 80077f4:	23f0      	movs	r3, #240	; 0xf0
 80077f6:	4629      	mov	r1, r5
 80077f8:	f8cd b000 	str.w	fp, [sp]
 80077fc:	f7fa ff3c 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007800:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007804:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8007808:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800780c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007810:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007814:	ee1a 1a10 	vmov	r1, s20
 8007818:	4630      	mov	r0, r6
 800781a:	4798      	blx	r3
 800781c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007820:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007824:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007828:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800782c:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007830:	2b00      	cmp	r3, #0
 8007832:	f43f af52 	beq.w	80076da <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007836:	49a3      	ldr	r1, [pc, #652]	; (8007ac4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x694>)
 8007838:	880b      	ldrh	r3, [r1, #0]
 800783a:	2b10      	cmp	r3, #16
 800783c:	f67f af57 	bls.w	80076ee <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2be>
        return texts->getText(typedTextId);
 8007840:	4a9d      	ldr	r2, [pc, #628]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8007842:	2110      	movs	r1, #16
 8007844:	6810      	ldr	r0, [r2, #0]
 8007846:	f000 ff23 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800784a:	4a9c      	ldr	r2, [pc, #624]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 800784c:	4603      	mov	r3, r0
 800784e:	210a      	movs	r1, #10
 8007850:	4648      	mov	r0, r9
 8007852:	f011 fd3f 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007856:	4b9a      	ldr	r3, [pc, #616]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007858:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800785a:	ee1a 0a10 	vmov	r0, s20
 800785e:	2313      	movs	r3, #19
 8007860:	a90a      	add	r1, sp, #40	; 0x28
 8007862:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007866:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800786a:	f00b faa1 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800786e:	ee1a 1a10 	vmov	r1, s20
 8007872:	4638      	mov	r0, r7
 8007874:	f009 f8e7 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007878:	ee1a 0a90 	vmov	r0, s21
 800787c:	224c      	movs	r2, #76	; 0x4c
 800787e:	2171      	movs	r1, #113	; 0x71
 8007880:	f7fa feed 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007884:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007888:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800788c:	f8c4 2394 	str.w	r2, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007890:	4630      	mov	r0, r6
        linespace = space;
 8007892:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007896:	f00a fff1 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800789a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800789e:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80078a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078a6:	4b86      	ldr	r3, [pc, #536]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 80078a8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80078aa:	ee1a 0a90 	vmov	r0, s21
 80078ae:	2314      	movs	r3, #20
 80078b0:	a90a      	add	r1, sp, #40	; 0x28
 80078b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078b6:	f00b fa7b 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078ba:	ee1a 1a90 	vmov	r1, s21
 80078be:	4638      	mov	r0, r7
 80078c0:	f009 f8c1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80078c4:	ee1b 0a10 	vmov	r0, s22
 80078c8:	22b9      	movs	r2, #185	; 0xb9
 80078ca:	4629      	mov	r1, r5
 80078cc:	f7fa fec7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80078d0:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80078d4:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80078d8:	f8c4 23dc 	str.w	r2, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80078dc:	4630      	mov	r0, r6
        linespace = space;
 80078de:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80078e2:	f00a ffcb 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078e6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80078ea:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80078ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078f2:	4b73      	ldr	r3, [pc, #460]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 80078f4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80078f6:	ee1b 0a10 	vmov	r0, s22
 80078fa:	2315      	movs	r3, #21
 80078fc:	a90a      	add	r1, sp, #40	; 0x28
 80078fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007902:	f00b fa55 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007906:	ee1b 1a10 	vmov	r1, s22
 800790a:	4638      	mov	r0, r7
 800790c:	f009 f89b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007910:	ee1b 0a90 	vmov	r0, s23
 8007914:	22b9      	movs	r2, #185	; 0xb9
 8007916:	21d9      	movs	r1, #217	; 0xd9
 8007918:	f7fa fea1 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800791c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007920:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8007924:	f8c4 2424 	str.w	r2, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007928:	4630      	mov	r0, r6
        linespace = space;
 800792a:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 800792e:	f00a ffa5 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007932:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007936:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800793a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800793e:	4b60      	ldr	r3, [pc, #384]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007940:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007942:	ee1b 0a90 	vmov	r0, s23
 8007946:	2316      	movs	r3, #22
 8007948:	a90a      	add	r1, sp, #40	; 0x28
 800794a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800794e:	f00b fa2f 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007952:	ee1b 1a90 	vmov	r1, s23
 8007956:	4638      	mov	r0, r7
 8007958:	f009 f875 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800795c:	230a      	movs	r3, #10
 800795e:	9300      	str	r3, [sp, #0]
 8007960:	2232      	movs	r2, #50	; 0x32
 8007962:	23f0      	movs	r3, #240	; 0xf0
 8007964:	4629      	mov	r1, r5
 8007966:	4650      	mov	r0, sl
 8007968:	f7fa fe86 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800796c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007970:	22a0      	movs	r2, #160	; 0xa0
 8007972:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007976:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 800797a:	9b02      	ldr	r3, [sp, #8]
 800797c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007980:	4611      	mov	r1, r2
 8007982:	4650      	mov	r0, sl
 8007984:	f00a fdce 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007988:	22a0      	movs	r2, #160	; 0xa0
 800798a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800798e:	4650      	mov	r0, sl
 8007990:	f00a fdd3 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007994:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007998:	2b20      	cmp	r3, #32
 800799a:	d005      	beq.n	80079a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x578>
        lineWidthQ5 = widthQ5;
 800799c:	2320      	movs	r3, #32
 800799e:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80079a2:	4650      	mov	r0, sl
 80079a4:	f00a fcc8 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80079a8:	4650      	mov	r0, sl
 80079aa:	2101      	movs	r1, #1
 80079ac:	f00a fdd0 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80079b0:	4651      	mov	r1, sl
 80079b2:	4638      	mov	r0, r7
 80079b4:	f009 f847 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80079b8:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 80079bc:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80079be:	ee18 0a10 	vmov	r0, s16
 80079c2:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80079c4:	f04f 0900 	mov.w	r9, #0
 80079c8:	2145      	movs	r1, #69	; 0x45
 80079ca:	f7fa fe48 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80079ce:	ee18 1a10 	vmov	r1, s16
 80079d2:	4628      	mov	r0, r5
        color = newColor;
 80079d4:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 80079d8:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80079dc:	f00a ff4e 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079e4:	ee18 3a10 	vmov	r3, s16
 80079e8:	333c      	adds	r3, #60	; 0x3c
 80079ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079ee:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>
 80079f2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80079f6:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80079f8:	ee18 0a10 	vmov	r0, s16
 80079fc:	a90a      	add	r1, sp, #40	; 0x28
 80079fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a02:	f00b f9d5 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a06:	ee18 1a10 	vmov	r1, s16
 8007a0a:	4638      	mov	r0, r7
 8007a0c:	f009 f81b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007a10:	ee18 0a90 	vmov	r0, s17
 8007a14:	220c      	movs	r2, #12
 8007a16:	2136      	movs	r1, #54	; 0x36
 8007a18:	f7fa fe21 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007a1c:	ee18 1a90 	vmov	r1, s17
 8007a20:	4628      	mov	r0, r5
        color = newColor;
 8007a22:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007a26:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007a2a:	f00a ff27 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a32:	ee18 3a90 	vmov	r3, s17
 8007a36:	333c      	adds	r3, #60	; 0x3c
 8007a38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a3c:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007a3e:	ee18 0a90 	vmov	r0, s17
 8007a42:	a90a      	add	r1, sp, #40	; 0x28
 8007a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a48:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007a4c:	f00b f9b0 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a50:	ee18 1a90 	vmov	r1, s17
 8007a54:	4638      	mov	r0, r7
 8007a56:	f008 fff6 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007a5a:	ee1c 0a10 	vmov	r0, s24
 8007a5e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007a62:	2121      	movs	r1, #33	; 0x21
 8007a64:	f7fa fdfb 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007a68:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007a6a:	aa0a      	add	r2, sp, #40	; 0x28
 8007a6c:	a909      	add	r1, sp, #36	; 0x24
 8007a6e:	ee1c 0a10 	vmov	r0, s24
 8007a72:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007a76:	2302      	movs	r3, #2
 8007a78:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a7c:	f00b fb7d 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007a80:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007a82:	ee1c 0a10 	vmov	r0, s24
 8007a86:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007a8a:	f7fa fe3d 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007a8e:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007a92:	3304      	adds	r3, #4
 8007a94:	4638      	mov	r0, r7
 8007a96:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007a9a:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007a9e:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007aa2:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007aa6:	f008 ffce 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007aaa:	4620      	mov	r0, r4
 8007aac:	b00d      	add	sp, #52	; 0x34
 8007aae:	ecbd 8b0a 	vpop	{d8-d12}
 8007ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ab6:	bf00      	nop
 8007ab8:	200134a8 	.word	0x200134a8
 8007abc:	0802c856 	.word	0x0802c856
 8007ac0:	0802c8cc 	.word	0x0802c8cc
 8007ac4:	200134a0 	.word	0x200134a0

08007ac8 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007ac8:	4770      	bx	lr

08007aca <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007aca:	4770      	bx	lr

08007acc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007acc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007ace:	68c2      	ldr	r2, [r0, #12]
 8007ad0:	6844      	ldr	r4, [r0, #4]
 8007ad2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007ad4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007ad6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007ada:	07d2      	lsls	r2, r2, #31
 8007adc:	bf48      	it	mi
 8007ade:	5962      	ldrmi	r2, [r4, r5]
 8007ae0:	689b      	ldr	r3, [r3, #8]
    }
 8007ae2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007ae4:	bf48      	it	mi
 8007ae6:	58d3      	ldrmi	r3, [r2, r3]
 8007ae8:	4718      	bx	r3

08007aea <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007aea:	6843      	ldr	r3, [r0, #4]
 8007aec:	b12b      	cbz	r3, 8007afa <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007aee:	6883      	ldr	r3, [r0, #8]
 8007af0:	b92b      	cbnz	r3, 8007afe <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007af2:	68c0      	ldr	r0, [r0, #12]
 8007af4:	f000 0001 	and.w	r0, r0, #1
 8007af8:	4770      	bx	lr
 8007afa:	4618      	mov	r0, r3
 8007afc:	4770      	bx	lr
 8007afe:	2001      	movs	r0, #1
    }
 8007b00:	4770      	bx	lr

08007b02 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007b02:	b510      	push	{r4, lr}
 8007b04:	2110      	movs	r1, #16
 8007b06:	4604      	mov	r4, r0
 8007b08:	f022 faeb 	bl	802a0e2 <_ZdlPvj>
 8007b0c:	4620      	mov	r0, r4
 8007b0e:	bd10      	pop	{r4, pc}

08007b10 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007b10:	b510      	push	{r4, lr}
 8007b12:	4b03      	ldr	r3, [pc, #12]	; (8007b20 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007b14:	6003      	str	r3, [r0, #0]
 8007b16:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007b18:	f00c fd2c 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007b1c:	4620      	mov	r0, r4
 8007b1e:	bd10      	pop	{r4, pc}
 8007b20:	0802e638 	.word	0x0802e638

08007b24 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007b24:	b507      	push	{r0, r1, r2, lr}
 8007b26:	4b07      	ldr	r3, [pc, #28]	; (8007b44 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007b28:	6003      	str	r3, [r0, #0]
 8007b2a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007b2c:	f00c fd22 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007b30:	9801      	ldr	r0, [sp, #4]
 8007b32:	f241 015c 	movw	r1, #4188	; 0x105c
 8007b36:	f022 fad4 	bl	802a0e2 <_ZdlPvj>
 8007b3a:	9801      	ldr	r0, [sp, #4]
 8007b3c:	b003      	add	sp, #12
 8007b3e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007b42:	bf00      	nop
 8007b44:	0802e638 	.word	0x0802e638

08007b48 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007b48:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007b4c:	4288      	cmp	r0, r1
{
 8007b4e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007b50:	d105      	bne.n	8007b5e <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007b52:	f00e fa11 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007b56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007b5a:	f7fc bb75 	b.w	8004248 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007b5e:	bd08      	pop	{r3, pc}

08007b60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b64:	ed2d 8b02 	vpush	{d8}
 8007b68:	4604      	mov	r4, r0
 8007b6a:	b08d      	sub	sp, #52	; 0x34
 8007b6c:	f00f fe84 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007b70:	4622      	mov	r2, r4
 8007b72:	2500      	movs	r5, #0
 8007b74:	4ba4      	ldr	r3, [pc, #656]	; (8007e08 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007b76:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007b78:	f842 3b40 	str.w	r3, [r2], #64
 8007b7c:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007b80:	4629      	mov	r1, r5
 8007b82:	2226      	movs	r2, #38	; 0x26
 8007b84:	ee18 0a10 	vmov	r0, s16
 8007b88:	f023 fac3 	bl	802b112 <memset>
 8007b8c:	ee18 0a10 	vmov	r0, s16
 8007b90:	f7fa fd86 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007b94:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007b98:	26ff      	movs	r6, #255	; 0xff
 8007b9a:	4b9c      	ldr	r3, [pc, #624]	; (8007e0c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007b9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007b9e:	2226      	movs	r2, #38	; 0x26
 8007ba0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007ba4:	4629      	mov	r1, r5
 8007ba6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007baa:	66a5      	str	r5, [r4, #104]	; 0x68
 8007bac:	4658      	mov	r0, fp
 8007bae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007bb2:	f023 faae 	bl	802b112 <memset>
 8007bb6:	4658      	mov	r0, fp
 8007bb8:	f7fa fd72 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007bbc:	4b94      	ldr	r3, [pc, #592]	; (8007e10 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007bbe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007bc0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007bc4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007bc8:	a90a      	add	r1, sp, #40	; 0x28
 8007bca:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007bce:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007bd2:	4658      	mov	r0, fp
 8007bd4:	f00b fcc7 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007bd8:	4638      	mov	r0, r7
 8007bda:	f00a fb8d 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8007bde:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007be2:	4618      	mov	r0, r3
 8007be4:	9303      	str	r3, [sp, #12]
 8007be6:	f7fa fb5b 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007bea:	4b8a      	ldr	r3, [pc, #552]	; (8007e14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007bec:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007bf0:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007bf4:	3324      	adds	r3, #36	; 0x24
 8007bf6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007bfa:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007bfe:	4650      	mov	r0, sl
 8007c00:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007c04:	f7fa fd5e 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007c08:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007c0c:	4648      	mov	r0, r9
 8007c0e:	f7fa fd59 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007c12:	4640      	mov	r0, r8
 8007c14:	f7fa fd56 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007c18:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007c1c:	4618      	mov	r0, r3
 8007c1e:	ee08 3a90 	vmov	s17, r3
 8007c22:	f00b fde1 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007c26:	4a7c      	ldr	r2, [pc, #496]	; (8007e18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007c28:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007c2c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007c30:	4a7a      	ldr	r2, [pc, #488]	; (8007e1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007c32:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007c36:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007c3a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007c3e:	f00c fc8f 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007c42:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007c46:	462a      	mov	r2, r5
 8007c48:	ee18 0a10 	vmov	r0, s16
 8007c4c:	9300      	str	r3, [sp, #0]
 8007c4e:	4629      	mov	r1, r5
 8007c50:	23f0      	movs	r3, #240	; 0xf0
 8007c52:	f7fa fd11 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c56:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007c58:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007c5c:	66a3      	str	r3, [r4, #104]	; 0x68
 8007c5e:	ee18 1a10 	vmov	r1, s16
 8007c62:	4630      	mov	r0, r6
 8007c64:	f008 feef 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007c68:	462a      	mov	r2, r5
 8007c6a:	4629      	mov	r1, r5
 8007c6c:	4658      	mov	r0, fp
 8007c6e:	f7fa fcf6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007c72:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007c74:	a90a      	add	r1, sp, #40	; 0x28
 8007c76:	4658      	mov	r0, fp
 8007c78:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c7c:	f00b fc73 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007c80:	4659      	mov	r1, fp
 8007c82:	4630      	mov	r0, r6
 8007c84:	f008 fedf 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c88:	230a      	movs	r3, #10
 8007c8a:	9300      	str	r3, [sp, #0]
 8007c8c:	2232      	movs	r2, #50	; 0x32
 8007c8e:	23f0      	movs	r3, #240	; 0xf0
 8007c90:	4629      	mov	r1, r5
 8007c92:	4638      	mov	r0, r7
 8007c94:	f7fa fcf0 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c98:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c9c:	22a0      	movs	r2, #160	; 0xa0
 8007c9e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007ca2:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007ca6:	9b03      	ldr	r3, [sp, #12]
 8007ca8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007cac:	4611      	mov	r1, r2
 8007cae:	4638      	mov	r0, r7
 8007cb0:	f00a fc38 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cb4:	22a0      	movs	r2, #160	; 0xa0
 8007cb6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007cba:	4638      	mov	r0, r7
 8007cbc:	f00a fc3d 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007cc0:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007cc4:	2b20      	cmp	r3, #32
 8007cc6:	d005      	beq.n	8007cd4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007cc8:	2320      	movs	r3, #32
 8007cca:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007cce:	4638      	mov	r0, r7
 8007cd0:	f00a fb32 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007cd4:	4638      	mov	r0, r7
 8007cd6:	2101      	movs	r1, #1
 8007cd8:	f00a fc3a 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007cdc:	4639      	mov	r1, r7
 8007cde:	4630      	mov	r0, r6
 8007ce0:	f008 feb1 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ce4:	ad04      	add	r5, sp, #16
        color = newColor;
 8007ce6:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007cea:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007cee:	2223      	movs	r2, #35	; 0x23
 8007cf0:	4650      	mov	r0, sl
 8007cf2:	2145      	movs	r1, #69	; 0x45
 8007cf4:	f7fa fcb3 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007cf8:	4651      	mov	r1, sl
 8007cfa:	4628      	mov	r0, r5
        color = newColor;
 8007cfc:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007d00:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007d04:	f00a fdba 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d08:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d0c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007d10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007d14:	4b42      	ldr	r3, [pc, #264]	; (8007e20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007d16:	930a      	str	r3, [sp, #40]	; 0x28
 8007d18:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007d1a:	a90a      	add	r1, sp, #40	; 0x28
 8007d1c:	4650      	mov	r0, sl
 8007d1e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007d22:	f00b f845 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d26:	4651      	mov	r1, sl
 8007d28:	4630      	mov	r0, r6
 8007d2a:	f008 fe8c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007d2e:	223c      	movs	r2, #60	; 0x3c
 8007d30:	4648      	mov	r0, r9
 8007d32:	211f      	movs	r1, #31
 8007d34:	f7fa fc93 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007d38:	4649      	mov	r1, r9
 8007d3a:	4628      	mov	r0, r5
        color = newColor;
 8007d3c:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007d40:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007d44:	f00a fd9a 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d4c:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8007d50:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007d54:	4b32      	ldr	r3, [pc, #200]	; (8007e20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007d56:	930a      	str	r3, [sp, #40]	; 0x28
 8007d58:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007d5a:	a90a      	add	r1, sp, #40	; 0x28
 8007d5c:	4648      	mov	r0, r9
 8007d5e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007d62:	f00b f825 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d66:	4649      	mov	r1, r9
 8007d68:	4630      	mov	r0, r6
 8007d6a:	f008 fe6c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d6e:	220c      	movs	r2, #12
 8007d70:	4640      	mov	r0, r8
 8007d72:	2136      	movs	r1, #54	; 0x36
 8007d74:	f7fa fc73 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007d78:	4641      	mov	r1, r8
 8007d7a:	4628      	mov	r0, r5
        color = newColor;
 8007d7c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007d80:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007d84:	f00a fd7a 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d88:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d8c:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8007d90:	4b23      	ldr	r3, [pc, #140]	; (8007e20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007d92:	930a      	str	r3, [sp, #40]	; 0x28
 8007d94:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007d98:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007d9a:	a90a      	add	r1, sp, #40	; 0x28
 8007d9c:	4640      	mov	r0, r8
 8007d9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007da2:	f00b f805 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007da6:	4641      	mov	r1, r8
 8007da8:	4630      	mov	r0, r6
 8007daa:	f008 fe4c 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007dae:	ee18 0a90 	vmov	r0, s17
 8007db2:	f240 1201 	movw	r2, #257	; 0x101
 8007db6:	2121      	movs	r1, #33	; 0x21
 8007db8:	f7fa fc51 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007dbc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007dbe:	aa0a      	add	r2, sp, #40	; 0x28
 8007dc0:	a909      	add	r1, sp, #36	; 0x24
 8007dc2:	ee18 0a90 	vmov	r0, s17
 8007dc6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007dca:	2302      	movs	r3, #2
 8007dcc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007dd0:	f00b f9d3 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007dd4:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8007dd6:	ee18 0a90 	vmov	r0, s17
 8007dda:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007dde:	f7fa fc93 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007de2:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007de6:	330c      	adds	r3, #12
 8007de8:	4630      	mov	r0, r6
        colorPressed = col;
 8007dea:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007dee:	ee18 1a90 	vmov	r1, s17
 8007df2:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007df6:	f008 fe26 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007dfa:	4620      	mov	r0, r4
 8007dfc:	b00d      	add	sp, #52	; 0x34
 8007dfe:	ecbd 8b02 	vpop	{d8}
 8007e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e06:	bf00      	nop
 8007e08:	0802e638 	.word	0x0802e638
 8007e0c:	0802f640 	.word	0x0802f640
 8007e10:	0802f808 	.word	0x0802f808
 8007e14:	0802f374 	.word	0x0802f374
 8007e18:	0802e620 	.word	0x0802e620
 8007e1c:	08007b49 	.word	0x08007b49
 8007e20:	0802c8cc 	.word	0x0802c8cc

08007e24 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007e24:	4770      	bx	lr

08007e26 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e26:	4770      	bx	lr

08007e28 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e2a:	68c2      	ldr	r2, [r0, #12]
 8007e2c:	6844      	ldr	r4, [r0, #4]
 8007e2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e36:	07d2      	lsls	r2, r2, #31
 8007e38:	bf48      	it	mi
 8007e3a:	5962      	ldrmi	r2, [r4, r5]
 8007e3c:	689b      	ldr	r3, [r3, #8]
    }
 8007e3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e40:	bf48      	it	mi
 8007e42:	58d3      	ldrmi	r3, [r2, r3]
 8007e44:	4718      	bx	r3

08007e46 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e46:	6843      	ldr	r3, [r0, #4]
 8007e48:	b12b      	cbz	r3, 8007e56 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007e4a:	6883      	ldr	r3, [r0, #8]
 8007e4c:	b92b      	cbnz	r3, 8007e5a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007e4e:	68c0      	ldr	r0, [r0, #12]
 8007e50:	f000 0001 	and.w	r0, r0, #1
 8007e54:	4770      	bx	lr
 8007e56:	4618      	mov	r0, r3
 8007e58:	4770      	bx	lr
 8007e5a:	2001      	movs	r0, #1
    }
 8007e5c:	4770      	bx	lr

08007e5e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e5e:	b510      	push	{r4, lr}
 8007e60:	2110      	movs	r1, #16
 8007e62:	4604      	mov	r4, r0
 8007e64:	f022 f93d 	bl	802a0e2 <_ZdlPvj>
 8007e68:	4620      	mov	r0, r4
 8007e6a:	bd10      	pop	{r4, pc}

08007e6c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007e6c:	b510      	push	{r4, lr}
 8007e6e:	4b03      	ldr	r3, [pc, #12]	; (8007e7c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007e70:	6003      	str	r3, [r0, #0]
 8007e72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e74:	f00c fb7e 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e78:	4620      	mov	r0, r4
 8007e7a:	bd10      	pop	{r4, pc}
 8007e7c:	0802e684 	.word	0x0802e684

08007e80 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007e80:	b507      	push	{r0, r1, r2, lr}
 8007e82:	4b07      	ldr	r3, [pc, #28]	; (8007ea0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007e84:	6003      	str	r3, [r0, #0]
 8007e86:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e88:	f00c fb74 	bl	8014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e8c:	9801      	ldr	r0, [sp, #4]
 8007e8e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007e92:	f022 f926 	bl	802a0e2 <_ZdlPvj>
 8007e96:	9801      	ldr	r0, [sp, #4]
 8007e98:	b003      	add	sp, #12
 8007e9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8007e9e:	bf00      	nop
 8007ea0:	0802e684 	.word	0x0802e684

08007ea4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007ea4:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007ea8:	4288      	cmp	r0, r1
{
 8007eaa:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007eac:	d105      	bne.n	8007eba <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007eae:	f00e f863 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007eb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007eb6:	f7fc b997 	b.w	80041e8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007eba:	bd08      	pop	{r3, pc}

08007ebc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ec0:	ed2d 8b04 	vpush	{d8-d9}
 8007ec4:	4604      	mov	r4, r0
 8007ec6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007ec8:	46a3      	mov	fp, r4
 8007eca:	2500      	movs	r5, #0
 8007ecc:	f00f fcd4 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8007ed0:	4bd1      	ldr	r3, [pc, #836]	; (8008218 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007ed2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ed4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007ed8:	2226      	movs	r2, #38	; 0x26
 8007eda:	4629      	mov	r1, r5
 8007edc:	4658      	mov	r0, fp
 8007ede:	f023 f918 	bl	802b112 <memset>
 8007ee2:	4658      	mov	r0, fp
 8007ee4:	f7fa fbdc 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007ee8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007eec:	26ff      	movs	r6, #255	; 0xff
 8007eee:	4bcb      	ldr	r3, [pc, #812]	; (800821c <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007ef0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007ef2:	2226      	movs	r2, #38	; 0x26
 8007ef4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007ef8:	4629      	mov	r1, r5
 8007efa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007efe:	4650      	mov	r0, sl
 8007f00:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f06:	f023 f904 	bl	802b112 <memset>
 8007f0a:	4650      	mov	r0, sl
 8007f0c:	f7fa fbc8 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007f10:	4bc3      	ldr	r3, [pc, #780]	; (8008220 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007f12:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f18:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f1c:	a90a      	add	r1, sp, #40	; 0x28
 8007f1e:	4650      	mov	r0, sl
 8007f20:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007f24:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007f28:	f00b fb1d 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007f2c:	4648      	mov	r0, r9
 8007f2e:	f7fa fbc9 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f32:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007f36:	4bbb      	ldr	r3, [pc, #748]	; (8008224 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007f38:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007f3c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007f40:	4638      	mov	r0, r7
 8007f42:	f00a f9d9 	bl	80122f8 <_ZN8touchgfx4LineC1Ev>
 8007f46:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f4a:	4618      	mov	r0, r3
 8007f4c:	9303      	str	r3, [sp, #12]
 8007f4e:	f7fa f9a7 	bl	80022a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f52:	4bb5      	ldr	r3, [pc, #724]	; (8008228 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007f54:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007f58:	3324      	adds	r3, #36	; 0x24
 8007f5a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007f5e:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007f62:	4618      	mov	r0, r3
 8007f64:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007f68:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007f6c:	ee09 3a10 	vmov	s18, r3
 8007f70:	f00b fc3a 	bl	80137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007f74:	4640      	mov	r0, r8
 8007f76:	f7fa fba5 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f7a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007f7e:	4618      	mov	r0, r3
 8007f80:	ee08 3a10 	vmov	s16, r3
 8007f84:	f7fa fb9e 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f88:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007f8c:	4618      	mov	r0, r3
 8007f8e:	ee08 3a90 	vmov	s17, r3
 8007f92:	f7fa fb97 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007f96:	4aa5      	ldr	r2, [pc, #660]	; (800822c <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007f98:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007f9c:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007fa0:	4aa3      	ldr	r2, [pc, #652]	; (8008230 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007fa2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007fa6:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007faa:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007fae:	f00c fad7 	bl	8014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fb2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007fb6:	462a      	mov	r2, r5
 8007fb8:	4658      	mov	r0, fp
 8007fba:	9300      	str	r3, [sp, #0]
 8007fbc:	4629      	mov	r1, r5
 8007fbe:	23f0      	movs	r3, #240	; 0xf0
 8007fc0:	f7fa fb5a 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fc4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007fc6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007fca:	66a3      	str	r3, [r4, #104]	; 0x68
 8007fcc:	4659      	mov	r1, fp
 8007fce:	4630      	mov	r0, r6
 8007fd0:	f008 fd39 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007fd4:	462a      	mov	r2, r5
 8007fd6:	4650      	mov	r0, sl
 8007fd8:	4629      	mov	r1, r5
 8007fda:	f7fa fb40 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007fde:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007fe0:	4650      	mov	r0, sl
 8007fe2:	a90a      	add	r1, sp, #40	; 0x28
 8007fe4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007fe8:	f00b fabd 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007fec:	4651      	mov	r1, sl
 8007fee:	4630      	mov	r0, r6
 8007ff0:	f008 fd29 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007ff4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007ff8:	2156      	movs	r1, #86	; 0x56
 8007ffa:	4648      	mov	r0, r9
 8007ffc:	f7fa fb2f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8008000:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008004:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008008:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800800c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008010:	4650      	mov	r0, sl
 8008012:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008016:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800801a:	4649      	mov	r1, r9
 800801c:	4798      	blx	r3
 800801e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8008022:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008026:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800802a:	4b82      	ldr	r3, [pc, #520]	; (8008234 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 800802c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800802e:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8008032:	b92b      	cbnz	r3, 8008040 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008034:	4b80      	ldr	r3, [pc, #512]	; (8008238 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008036:	4a81      	ldr	r2, [pc, #516]	; (800823c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008038:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800803a:	4881      	ldr	r0, [pc, #516]	; (8008240 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 800803c:	f022 fe64 	bl	802ad08 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008040:	4b80      	ldr	r3, [pc, #512]	; (8008244 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008042:	881b      	ldrh	r3, [r3, #0]
 8008044:	2b20      	cmp	r3, #32
 8008046:	d803      	bhi.n	8008050 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008048:	4b7f      	ldr	r3, [pc, #508]	; (8008248 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 800804a:	4a7c      	ldr	r2, [pc, #496]	; (800823c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 800804c:	2161      	movs	r1, #97	; 0x61
 800804e:	e7f4      	b.n	800803a <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008050:	4b7e      	ldr	r3, [pc, #504]	; (800824c <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8008052:	2120      	movs	r1, #32
 8008054:	6818      	ldr	r0, [r3, #0]
 8008056:	f000 fb1b 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 800805a:	4a7d      	ldr	r2, [pc, #500]	; (8008250 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 800805c:	4603      	mov	r3, r0
 800805e:	2104      	movs	r1, #4
 8008060:	4650      	mov	r0, sl
 8008062:	f011 f937 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008066:	4648      	mov	r0, r9
        wc1 = value;
 8008068:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800806c:	f00a fe80 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008070:	4b78      	ldr	r3, [pc, #480]	; (8008254 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8008072:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008074:	a90a      	add	r1, sp, #40	; 0x28
 8008076:	2321      	movs	r3, #33	; 0x21
 8008078:	4648      	mov	r0, r9
 800807a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800807e:	f00a fe97 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008082:	4649      	mov	r1, r9
 8008084:	4630      	mov	r0, r6
 8008086:	f008 fcde 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800808a:	230a      	movs	r3, #10
 800808c:	9300      	str	r3, [sp, #0]
 800808e:	2232      	movs	r2, #50	; 0x32
 8008090:	23f0      	movs	r3, #240	; 0xf0
 8008092:	4629      	mov	r1, r5
 8008094:	4638      	mov	r0, r7
 8008096:	f7fa faef 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800809a:	9b03      	ldr	r3, [sp, #12]
 800809c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080a0:	22a0      	movs	r2, #160	; 0xa0
 80080a2:	4611      	mov	r1, r2
 80080a4:	4638      	mov	r0, r7
 80080a6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80080aa:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80080ae:	f00a fa39 	bl	8012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080b2:	22a0      	movs	r2, #160	; 0xa0
 80080b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80080b8:	4638      	mov	r0, r7
 80080ba:	f00a fa3e 	bl	801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80080be:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80080c2:	2b20      	cmp	r3, #32
 80080c4:	d005      	beq.n	80080d2 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 80080c6:	2320      	movs	r3, #32
 80080c8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80080cc:	4638      	mov	r0, r7
 80080ce:	f00a f933 	bl	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80080d2:	4638      	mov	r0, r7
 80080d4:	2101      	movs	r1, #1
 80080d6:	f00a fa3b 	bl	8012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80080da:	4639      	mov	r1, r7
 80080dc:	4630      	mov	r0, r6
 80080de:	f008 fcb2 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80080e2:	ee19 0a10 	vmov	r0, s18
 80080e6:	22f0      	movs	r2, #240	; 0xf0
 80080e8:	2121      	movs	r1, #33	; 0x21
 80080ea:	f7fa fab8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80080ee:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80080f0:	aa0a      	add	r2, sp, #40	; 0x28
 80080f2:	a909      	add	r1, sp, #36	; 0x24
 80080f4:	ee19 0a10 	vmov	r0, s18
 80080f8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80080fc:	2302      	movs	r3, #2
 80080fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008102:	f00b f83a 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008106:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 8008108:	ee19 0a10 	vmov	r0, s18
 800810c:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008110:	f7fa fafa 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008114:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008118:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 800811c:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008120:	ee19 1a10 	vmov	r1, s18
 8008124:	4630      	mov	r0, r6
        colorPressed = col;
 8008126:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 800812a:	ad04      	add	r5, sp, #16
 800812c:	f008 fc8b 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008130:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008134:	225b      	movs	r2, #91	; 0x5b
 8008136:	4640      	mov	r0, r8
 8008138:	2105      	movs	r1, #5
 800813a:	f7fa fa90 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800813e:	4641      	mov	r1, r8
 8008140:	4628      	mov	r0, r5
        color = newColor;
 8008142:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008146:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800814a:	f00a fb97 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800814e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008152:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800815a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008254 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 800815e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008162:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008164:	a90a      	add	r1, sp, #40	; 0x28
 8008166:	4640      	mov	r0, r8
 8008168:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800816c:	f00a fe20 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008170:	4641      	mov	r1, r8
 8008172:	4630      	mov	r0, r6
 8008174:	f008 fc67 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008178:	ee18 0a10 	vmov	r0, s16
 800817c:	2223      	movs	r2, #35	; 0x23
 800817e:	2145      	movs	r1, #69	; 0x45
 8008180:	f7fa fa6d 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8008184:	ee18 1a10 	vmov	r1, s16
 8008188:	4628      	mov	r0, r5
        color = newColor;
 800818a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800818e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008192:	f00a fb73 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008196:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800819a:	ee18 3a10 	vmov	r3, s16
 800819e:	333c      	adds	r3, #60	; 0x3c
 80081a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081a4:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 80081a6:	ee18 0a10 	vmov	r0, s16
 80081aa:	a90a      	add	r1, sp, #40	; 0x28
 80081ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081b0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80081b4:	f00a fdfc 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081b8:	ee18 1a10 	vmov	r1, s16
 80081bc:	4630      	mov	r0, r6
 80081be:	f008 fc42 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80081c2:	ee18 0a90 	vmov	r0, s17
 80081c6:	220c      	movs	r2, #12
 80081c8:	2136      	movs	r1, #54	; 0x36
 80081ca:	f7fa fa48 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80081ce:	ee18 1a90 	vmov	r1, s17
 80081d2:	4628      	mov	r0, r5
        color = newColor;
 80081d4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80081d8:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80081dc:	f00a fb4e 	bl	801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80081e4:	ee18 3a90 	vmov	r3, s17
 80081e8:	333c      	adds	r3, #60	; 0x3c
 80081ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081ee:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80081f0:	ee18 0a90 	vmov	r0, s17
 80081f4:	a90a      	add	r1, sp, #40	; 0x28
 80081f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081fa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80081fe:	f00a fdd7 	bl	8012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008202:	4630      	mov	r0, r6
 8008204:	ee18 1a90 	vmov	r1, s17
 8008208:	f008 fc1d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800820c:	4620      	mov	r0, r4
 800820e:	b00d      	add	sp, #52	; 0x34
 8008210:	ecbd 8b04 	vpop	{d8-d9}
 8008214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008218:	0802e684 	.word	0x0802e684
 800821c:	0802f640 	.word	0x0802f640
 8008220:	0802f808 	.word	0x0802f808
 8008224:	0802c8dc 	.word	0x0802c8dc
 8008228:	0802f374 	.word	0x0802f374
 800822c:	0802e66c 	.word	0x0802e66c
 8008230:	08007ea5 	.word	0x08007ea5
 8008234:	2001349c 	.word	0x2001349c
 8008238:	0802c71c 	.word	0x0802c71c
 800823c:	0802c81e 	.word	0x0802c81e
 8008240:	0802c799 	.word	0x0802c799
 8008244:	200134a0 	.word	0x200134a0
 8008248:	0802c7e0 	.word	0x0802c7e0
 800824c:	200134a8 	.word	0x200134a8
 8008250:	0802c856 	.word	0x0802c856
 8008254:	0802c8cc 	.word	0x0802c8cc

08008258 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008258:	4770      	bx	lr

0800825a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800825a:	4770      	bx	lr

0800825c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800825c:	b510      	push	{r4, lr}
}
 800825e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008260:	4604      	mov	r4, r0
}
 8008262:	f021 ff3e 	bl	802a0e2 <_ZdlPvj>
 8008266:	4620      	mov	r0, r4
 8008268:	bd10      	pop	{r4, pc}
	...

0800826c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800826c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008270:	4604      	mov	r4, r0
 8008272:	4626      	mov	r6, r4
 8008274:	f00f fb00 	bl	8017878 <_ZN8touchgfx6ScreenC1Ev>
 8008278:	2500      	movs	r5, #0
 800827a:	4b2e      	ldr	r3, [pc, #184]	; (8008334 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800827c:	63e5      	str	r5, [r4, #60]	; 0x3c
 800827e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008282:	4b2d      	ldr	r3, [pc, #180]	; (8008338 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008284:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008286:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800828a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800828e:	23ff      	movs	r3, #255	; 0xff
 8008290:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008294:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008298:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800829c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 80082a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80082a4:	4a25      	ldr	r2, [pc, #148]	; (800833c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 80082a6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80082aa:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 80082ae:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 80082b0:	a901      	add	r1, sp, #4
 80082b2:	4638      	mov	r0, r7
 80082b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 80082b8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 80082bc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 80082c0:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 80082c4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 80082c8:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 80082cc:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 80082d0:	66a5      	str	r5, [r4, #104]	; 0x68
 80082d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80082d6:	f00b f946 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 80082da:	462a      	mov	r2, r5
 80082dc:	4629      	mov	r1, r5
 80082de:	4630      	mov	r0, r6
 80082e0:	f7fa f9bd 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80082e4:	4630      	mov	r0, r6
 80082e6:	21f0      	movs	r1, #240	; 0xf0
 80082e8:	f7f9 ff26 	bl	8002138 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80082ec:	4630      	mov	r0, r6
 80082ee:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80082f2:	f7f9 ff23 	bl	800213c <_ZN8touchgfx8Drawable9setHeightEs>
 80082f6:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80082fa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082fe:	66a3      	str	r3, [r4, #104]	; 0x68
 8008300:	4631      	mov	r1, r6
 8008302:	4640      	mov	r0, r8
 8008304:	f008 fb9f 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008308:	462a      	mov	r2, r5
 800830a:	4638      	mov	r0, r7
 800830c:	f06f 0102 	mvn.w	r1, #2
 8008310:	f7fa f9a5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8008314:	230c      	movs	r3, #12
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008316:	a901      	add	r1, sp, #4
 8008318:	4638      	mov	r0, r7
 800831a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800831e:	f00b f922 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008322:	4640      	mov	r0, r8
 8008324:	4639      	mov	r1, r7
 8008326:	f008 fb8e 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800832a:	4620      	mov	r0, r4
 800832c:	b002      	add	sp, #8
 800832e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008332:	bf00      	nop
 8008334:	0802e6b8 	.word	0x0802e6b8
 8008338:	0802f640 	.word	0x0802f640
 800833c:	0802f808 	.word	0x0802f808

08008340 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008340:	4770      	bx	lr
	...

08008344 <_Z23getFont_verdana_10_4bppv>:
{
 8008344:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008346:	4d17      	ldr	r5, [pc, #92]	; (80083a4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008348:	682c      	ldr	r4, [r5, #0]
 800834a:	f3bf 8f5b 	dmb	ish
 800834e:	f014 0401 	ands.w	r4, r4, #1
{
 8008352:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008354:	d122      	bne.n	800839c <_Z23getFont_verdana_10_4bppv+0x58>
 8008356:	4628      	mov	r0, r5
 8008358:	f021 fec5 	bl	802a0e6 <__cxa_guard_acquire>
 800835c:	b1f0      	cbz	r0, 800839c <_Z23getFont_verdana_10_4bppv+0x58>
 800835e:	233f      	movs	r3, #63	; 0x3f
 8008360:	9309      	str	r3, [sp, #36]	; 0x24
 8008362:	4b11      	ldr	r3, [pc, #68]	; (80083a8 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008364:	9308      	str	r3, [sp, #32]
 8008366:	4b11      	ldr	r3, [pc, #68]	; (80083ac <_Z23getFont_verdana_10_4bppv+0x68>)
 8008368:	9307      	str	r3, [sp, #28]
 800836a:	2301      	movs	r3, #1
 800836c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008370:	9304      	str	r3, [sp, #16]
 8008372:	2304      	movs	r3, #4
 8008374:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008378:	230a      	movs	r3, #10
 800837a:	490d      	ldr	r1, [pc, #52]	; (80083b0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800837c:	9300      	str	r3, [sp, #0]
 800837e:	225f      	movs	r2, #95	; 0x5f
 8008380:	230c      	movs	r3, #12
 8008382:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008386:	480b      	ldr	r0, [pc, #44]	; (80083b4 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008388:	940a      	str	r4, [sp, #40]	; 0x28
 800838a:	9401      	str	r4, [sp, #4]
 800838c:	f7fd fa22 	bl	80057d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008390:	4809      	ldr	r0, [pc, #36]	; (80083b8 <_Z23getFont_verdana_10_4bppv+0x74>)
 8008392:	f022 fcd7 	bl	802ad44 <atexit>
 8008396:	4628      	mov	r0, r5
 8008398:	f021 feb1 	bl	802a0fe <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800839c:	4805      	ldr	r0, [pc, #20]	; (80083b4 <_Z23getFont_verdana_10_4bppv+0x70>)
 800839e:	b00f      	add	sp, #60	; 0x3c
 80083a0:	bd30      	pop	{r4, r5, pc}
 80083a2:	bf00      	nop
 80083a4:	20002564 	.word	0x20002564
 80083a8:	0804748c 	.word	0x0804748c
 80083ac:	080476c8 	.word	0x080476c8
 80083b0:	080464d4 	.word	0x080464d4
 80083b4:	20002568 	.word	0x20002568
 80083b8:	08008341 	.word	0x08008341

080083bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80083bc:	4770      	bx	lr
	...

080083c0 <_Z23getFont_verdana_12_4bppv>:
{
 80083c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80083c2:	4d17      	ldr	r5, [pc, #92]	; (8008420 <_Z23getFont_verdana_12_4bppv+0x60>)
 80083c4:	682c      	ldr	r4, [r5, #0]
 80083c6:	f3bf 8f5b 	dmb	ish
 80083ca:	f014 0401 	ands.w	r4, r4, #1
{
 80083ce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80083d0:	d122      	bne.n	8008418 <_Z23getFont_verdana_12_4bppv+0x58>
 80083d2:	4628      	mov	r0, r5
 80083d4:	f021 fe87 	bl	802a0e6 <__cxa_guard_acquire>
 80083d8:	b1f0      	cbz	r0, 8008418 <_Z23getFont_verdana_12_4bppv+0x58>
 80083da:	233f      	movs	r3, #63	; 0x3f
 80083dc:	9309      	str	r3, [sp, #36]	; 0x24
 80083de:	4b11      	ldr	r3, [pc, #68]	; (8008424 <_Z23getFont_verdana_12_4bppv+0x64>)
 80083e0:	9308      	str	r3, [sp, #32]
 80083e2:	4b11      	ldr	r3, [pc, #68]	; (8008428 <_Z23getFont_verdana_12_4bppv+0x68>)
 80083e4:	9307      	str	r3, [sp, #28]
 80083e6:	2301      	movs	r3, #1
 80083e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80083ec:	9304      	str	r3, [sp, #16]
 80083ee:	2304      	movs	r3, #4
 80083f0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80083f4:	230c      	movs	r3, #12
 80083f6:	490d      	ldr	r1, [pc, #52]	; (800842c <_Z23getFont_verdana_12_4bppv+0x6c>)
 80083f8:	9300      	str	r3, [sp, #0]
 80083fa:	2260      	movs	r2, #96	; 0x60
 80083fc:	230f      	movs	r3, #15
 80083fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008402:	480b      	ldr	r0, [pc, #44]	; (8008430 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008404:	940a      	str	r4, [sp, #40]	; 0x28
 8008406:	9401      	str	r4, [sp, #4]
 8008408:	f7fd f9e4 	bl	80057d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800840c:	4809      	ldr	r0, [pc, #36]	; (8008434 <_Z23getFont_verdana_12_4bppv+0x74>)
 800840e:	f022 fc99 	bl	802ad44 <atexit>
 8008412:	4628      	mov	r0, r5
 8008414:	f021 fe73 	bl	802a0fe <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008418:	4805      	ldr	r0, [pc, #20]	; (8008430 <_Z23getFont_verdana_12_4bppv+0x70>)
 800841a:	b00f      	add	sp, #60	; 0x3c
 800841c:	bd30      	pop	{r4, r5, pc}
 800841e:	bf00      	nop
 8008420:	20002594 	.word	0x20002594
 8008424:	080474c0 	.word	0x080474c0
 8008428:	080476cc 	.word	0x080476cc
 800842c:	08046a08 	.word	0x08046a08
 8008430:	20002598 	.word	0x20002598
 8008434:	080083bd 	.word	0x080083bd

08008438 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008438:	4770      	bx	lr
	...

0800843c <_Z23getFont_verdana_19_4bppv>:
{
 800843c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800843e:	4d17      	ldr	r5, [pc, #92]	; (800849c <_Z23getFont_verdana_19_4bppv+0x60>)
 8008440:	682c      	ldr	r4, [r5, #0]
 8008442:	f3bf 8f5b 	dmb	ish
 8008446:	f014 0401 	ands.w	r4, r4, #1
{
 800844a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800844c:	d122      	bne.n	8008494 <_Z23getFont_verdana_19_4bppv+0x58>
 800844e:	4628      	mov	r0, r5
 8008450:	f021 fe49 	bl	802a0e6 <__cxa_guard_acquire>
 8008454:	b1f0      	cbz	r0, 8008494 <_Z23getFont_verdana_19_4bppv+0x58>
 8008456:	233f      	movs	r3, #63	; 0x3f
 8008458:	9309      	str	r3, [sp, #36]	; 0x24
 800845a:	4b11      	ldr	r3, [pc, #68]	; (80084a0 <_Z23getFont_verdana_19_4bppv+0x64>)
 800845c:	9308      	str	r3, [sp, #32]
 800845e:	4b11      	ldr	r3, [pc, #68]	; (80084a4 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008460:	9307      	str	r3, [sp, #28]
 8008462:	2301      	movs	r3, #1
 8008464:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008468:	9304      	str	r3, [sp, #16]
 800846a:	2304      	movs	r3, #4
 800846c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008470:	2313      	movs	r3, #19
 8008472:	490d      	ldr	r1, [pc, #52]	; (80084a8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008474:	9300      	str	r3, [sp, #0]
 8008476:	225f      	movs	r2, #95	; 0x5f
 8008478:	2317      	movs	r3, #23
 800847a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800847e:	480b      	ldr	r0, [pc, #44]	; (80084ac <_Z23getFont_verdana_19_4bppv+0x70>)
 8008480:	940a      	str	r4, [sp, #40]	; 0x28
 8008482:	9401      	str	r4, [sp, #4]
 8008484:	f7fd f9a6 	bl	80057d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008488:	4809      	ldr	r0, [pc, #36]	; (80084b0 <_Z23getFont_verdana_19_4bppv+0x74>)
 800848a:	f022 fc5b 	bl	802ad44 <atexit>
 800848e:	4628      	mov	r0, r5
 8008490:	f021 fe35 	bl	802a0fe <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008494:	4805      	ldr	r0, [pc, #20]	; (80084ac <_Z23getFont_verdana_19_4bppv+0x70>)
 8008496:	b00f      	add	sp, #60	; 0x3c
 8008498:	bd30      	pop	{r4, r5, pc}
 800849a:	bf00      	nop
 800849c:	200025c4 	.word	0x200025c4
 80084a0:	08047544 	.word	0x08047544
 80084a4:	080476d0 	.word	0x080476d0
 80084a8:	08046f48 	.word	0x08046f48
 80084ac:	200025c8 	.word	0x200025c8
 80084b0:	08008439 	.word	0x08008439

080084b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80084b4:	4770      	bx	lr
	...

080084b8 <_Z23getFont_verdana_40_4bppv>:
{
 80084b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80084ba:	4d16      	ldr	r5, [pc, #88]	; (8008514 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80084bc:	682c      	ldr	r4, [r5, #0]
 80084be:	f3bf 8f5b 	dmb	ish
 80084c2:	f014 0401 	ands.w	r4, r4, #1
{
 80084c6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80084c8:	d120      	bne.n	800850c <_Z23getFont_verdana_40_4bppv+0x54>
 80084ca:	4628      	mov	r0, r5
 80084cc:	f021 fe0b 	bl	802a0e6 <__cxa_guard_acquire>
 80084d0:	b1e0      	cbz	r0, 800850c <_Z23getFont_verdana_40_4bppv+0x54>
 80084d2:	233f      	movs	r3, #63	; 0x3f
 80084d4:	9309      	str	r3, [sp, #36]	; 0x24
 80084d6:	4b10      	ldr	r3, [pc, #64]	; (8008518 <_Z23getFont_verdana_40_4bppv+0x60>)
 80084d8:	9308      	str	r3, [sp, #32]
 80084da:	4b10      	ldr	r3, [pc, #64]	; (800851c <_Z23getFont_verdana_40_4bppv+0x64>)
 80084dc:	4910      	ldr	r1, [pc, #64]	; (8008520 <_Z23getFont_verdana_40_4bppv+0x68>)
 80084de:	4811      	ldr	r0, [pc, #68]	; (8008524 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80084e0:	940a      	str	r4, [sp, #40]	; 0x28
 80084e2:	2201      	movs	r2, #1
 80084e4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80084e8:	2304      	movs	r3, #4
 80084ea:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80084ee:	2328      	movs	r3, #40	; 0x28
 80084f0:	9300      	str	r3, [sp, #0]
 80084f2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80084f6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80084fa:	9405      	str	r4, [sp, #20]
 80084fc:	f7fd f96a 	bl	80057d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008500:	4809      	ldr	r0, [pc, #36]	; (8008528 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008502:	f022 fc1f 	bl	802ad44 <atexit>
 8008506:	4628      	mov	r0, r5
 8008508:	f021 fdf9 	bl	802a0fe <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800850c:	4805      	ldr	r0, [pc, #20]	; (8008524 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800850e:	b00f      	add	sp, #60	; 0x3c
 8008510:	bd30      	pop	{r4, r5, pc}
 8008512:	bf00      	nop
 8008514:	200025f4 	.word	0x200025f4
 8008518:	080476c4 	.word	0x080476c4
 800851c:	080476d4 	.word	0x080476d4
 8008520:	0804747c 	.word	0x0804747c
 8008524:	200025f8 	.word	0x200025f8
 8008528:	080084b5 	.word	0x080084b5

0800852c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800852c:	2000      	movs	r0, #0
 800852e:	4770      	bx	lr

08008530 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008530:	2000      	movs	r0, #0
 8008532:	4770      	bx	lr

08008534 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008534:	b40e      	push	{r1, r2, r3}
 8008536:	b503      	push	{r0, r1, lr}
 8008538:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800853a:	2100      	movs	r1, #0
{
 800853c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008540:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008542:	f00e fcd7 	bl	8016ef4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008546:	b002      	add	sp, #8
 8008548:	f85d eb04 	ldr.w	lr, [sp], #4
 800854c:	b003      	add	sp, #12
 800854e:	4770      	bx	lr

08008550 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008550:	b40c      	push	{r2, r3}
 8008552:	b507      	push	{r0, r1, r2, lr}
 8008554:	ab04      	add	r3, sp, #16
 8008556:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800855a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800855c:	f00e fcca 	bl	8016ef4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008560:	b003      	add	sp, #12
 8008562:	f85d eb04 	ldr.w	lr, [sp], #4
 8008566:	b002      	add	sp, #8
 8008568:	4770      	bx	lr
	...

0800856c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800856c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800856e:	b510      	push	{r4, lr}
 8008570:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008572:	b373      	cbz	r3, 80085d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008574:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008576:	b92b      	cbnz	r3, 8008584 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008578:	4b18      	ldr	r3, [pc, #96]	; (80085dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800857a:	4a19      	ldr	r2, [pc, #100]	; (80085e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800857c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800857e:	4819      	ldr	r0, [pc, #100]	; (80085e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008580:	f022 fbc2 	bl	802ad08 <__assert_func>
            return buffer[pos];
 8008584:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008586:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800858a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800858c:	b30b      	cbz	r3, 80085d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800858e:	f010 f8ec 	bl	801876a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008592:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008594:	2b01      	cmp	r3, #1
 8008596:	d803      	bhi.n	80085a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008598:	4b13      	ldr	r3, [pc, #76]	; (80085e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800859a:	4a14      	ldr	r2, [pc, #80]	; (80085ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800859c:	21cb      	movs	r1, #203	; 0xcb
 800859e:	e7ee      	b.n	800857e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80085a0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80085a2:	1c53      	adds	r3, r2, #1
 80085a4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80085a6:	2b09      	cmp	r3, #9
 80085a8:	4619      	mov	r1, r3
 80085aa:	bf88      	it	hi
 80085ac:	f1a3 010a 	subhi.w	r1, r3, #10
 80085b0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80085b4:	f640 103f 	movw	r0, #2367	; 0x93f
 80085b8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80085ba:	4281      	cmp	r1, r0
 80085bc:	d109      	bne.n	80085d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80085be:	2b0a      	cmp	r3, #10
 80085c0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80085c4:	bf28      	it	cs
 80085c6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80085c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80085cc:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80085ce:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80085d0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80085d2:	4620      	mov	r0, r4
}
 80085d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80085d8:	f00f bfca 	b.w	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80085dc:	0802e6e4 	.word	0x0802e6e4
 80085e0:	0802e6ed 	.word	0x0802e6ed
 80085e4:	0802e798 	.word	0x0802e798
 80085e8:	0802e7e2 	.word	0x0802e7e2
 80085ec:	0802e7f0 	.word	0x0802e7f0

080085f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80085f0:	f00f bf85 	b.w	80184fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080085f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80085f4:	b510      	push	{r4, lr}
 80085f6:	b086      	sub	sp, #24
 80085f8:	ac02      	add	r4, sp, #8
 80085fa:	e884 0006 	stmia.w	r4, {r1, r2}
 80085fe:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008600:	ab0a      	add	r3, sp, #40	; 0x28
 8008602:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008604:	9301      	str	r3, [sp, #4]
 8008606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008608:	9300      	str	r3, [sp, #0]
 800860a:	4621      	mov	r1, r4
 800860c:	9b08      	ldr	r3, [sp, #32]
 800860e:	f00d f835 	bl	801567c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008612:	b006      	add	sp, #24
 8008614:	bd10      	pop	{r4, pc}
	...

08008618 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008618:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800861a:	bb18      	cbnz	r0, 8008664 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800861c:	4b12      	ldr	r3, [pc, #72]	; (8008668 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800861e:	4813      	ldr	r0, [pc, #76]	; (800866c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008620:	681c      	ldr	r4, [r3, #0]
 8008622:	4913      	ldr	r1, [pc, #76]	; (8008670 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008624:	b1b4      	cbz	r4, 8008654 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008626:	6822      	ldr	r2, [r4, #0]
 8008628:	4422      	add	r2, r4
 800862a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800862c:	6862      	ldr	r2, [r4, #4]
 800862e:	4422      	add	r2, r4
 8008630:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008632:	68a2      	ldr	r2, [r4, #8]
 8008634:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008636:	4b0f      	ldr	r3, [pc, #60]	; (8008674 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008638:	2200      	movs	r2, #0
 800863a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800863c:	f000 f838 	bl	80086b0 <_ZN17TypedTextDatabase8getFontsEv>
 8008640:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008642:	f000 f833 	bl	80086ac <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008646:	4b0c      	ldr	r3, [pc, #48]	; (8008678 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008648:	601c      	str	r4, [r3, #0]
        fonts = f;
 800864a:	4b0c      	ldr	r3, [pc, #48]	; (800867c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800864c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800864e:	4b0c      	ldr	r3, [pc, #48]	; (8008680 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008650:	8018      	strh	r0, [r3, #0]
    }
}
 8008652:	e007      	b.n	8008664 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008654:	4b0b      	ldr	r3, [pc, #44]	; (8008684 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008656:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008658:	4b0b      	ldr	r3, [pc, #44]	; (8008688 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800865a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800865c:	4b0b      	ldr	r3, [pc, #44]	; (800868c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800865e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008660:	2c00      	cmp	r4, #0
 8008662:	d1e8      	bne.n	8008636 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008664:	bd38      	pop	{r3, r4, r5, pc}
 8008666:	bf00      	nop
 8008668:	20002624 	.word	0x20002624
 800866c:	20002628 	.word	0x20002628
 8008670:	2000262c 	.word	0x2000262c
 8008674:	20002630 	.word	0x20002630
 8008678:	2001349c 	.word	0x2001349c
 800867c:	200134a4 	.word	0x200134a4
 8008680:	200134a0 	.word	0x200134a0
 8008684:	0804784c 	.word	0x0804784c
 8008688:	080476d8 	.word	0x080476d8
 800868c:	08047dd4 	.word	0x08047dd4

08008690 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008690:	4b04      	ldr	r3, [pc, #16]	; (80086a4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008698:	4b03      	ldr	r3, [pc, #12]	; (80086a8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800869a:	681b      	ldr	r3, [r3, #0]
}
 800869c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80086a0:	4770      	bx	lr
 80086a2:	bf00      	nop
 80086a4:	2000262c 	.word	0x2000262c
 80086a8:	20002628 	.word	0x20002628

080086ac <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80086ac:	205d      	movs	r0, #93	; 0x5d
 80086ae:	4770      	bx	lr

080086b0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80086b0:	4800      	ldr	r0, [pc, #0]	; (80086b4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80086b2:	4770      	bx	lr
 80086b4:	20002634 	.word	0x20002634

080086b8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80086b8:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80086ba:	f7ff febf 	bl	800843c <_Z23getFont_verdana_19_4bppv>
};
 80086be:	4c06      	ldr	r4, [pc, #24]	; (80086d8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80086c0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80086c2:	f7ff fef9 	bl	80084b8 <_Z23getFont_verdana_40_4bppv>
};
 80086c6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80086c8:	f7ff fe3c 	bl	8008344 <_Z23getFont_verdana_10_4bppv>
};
 80086cc:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80086ce:	f7ff fe77 	bl	80083c0 <_Z23getFont_verdana_12_4bppv>
};
 80086d2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80086d4:	bd10      	pop	{r4, pc}
 80086d6:	bf00      	nop
 80086d8:	20002634 	.word	0x20002634

080086dc <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80086dc:	4770      	bx	lr

080086de <_ZThn4_N20CalibrationPresenterD1Ev>:
 80086de:	3804      	subs	r0, #4
 80086e0:	4770      	bx	lr

080086e2 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80086e2:	4770      	bx	lr

080086e4 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80086e4:	68c0      	ldr	r0, [r0, #12]
 80086e6:	6803      	ldr	r3, [r0, #0]
 80086e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086ea:	4718      	bx	r3

080086ec <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80086ec:	f1a0 0004 	sub.w	r0, r0, #4
 80086f0:	f7ff bff8 	b.w	80086e4 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080086f4 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80086f4:	b510      	push	{r4, lr}
 80086f6:	2110      	movs	r1, #16
 80086f8:	4604      	mov	r4, r0
 80086fa:	f021 fcf2 	bl	802a0e2 <_ZdlPvj>
 80086fe:	4620      	mov	r0, r4
 8008700:	bd10      	pop	{r4, pc}

08008702 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008702:	f1a0 0004 	sub.w	r0, r0, #4
 8008706:	e7f5      	b.n	80086f4 <_ZN20CalibrationPresenterD0Ev>

08008708 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008708:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800870a:	2200      	movs	r2, #0
 800870c:	6082      	str	r2, [r0, #8]
    : view(v)
 800870e:	4a04      	ldr	r2, [pc, #16]	; (8008720 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008710:	60c1      	str	r1, [r0, #12]
 8008712:	f102 0408 	add.w	r4, r2, #8
 8008716:	3224      	adds	r2, #36	; 0x24
 8008718:	6004      	str	r4, [r0, #0]
 800871a:	6042      	str	r2, [r0, #4]
}
 800871c:	bd10      	pop	{r4, pc}
 800871e:	bf00      	nop
 8008720:	0802e8c4 	.word	0x0802e8c4

08008724 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008724:	4770      	bx	lr
	...

08008728 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008728:	b510      	push	{r4, lr}
 800872a:	4b03      	ldr	r3, [pc, #12]	; (8008738 <_ZN15CalibrationViewD1Ev+0x10>)
 800872c:	6003      	str	r3, [r0, #0]
 800872e:	4604      	mov	r4, r0
 8008730:	f7f9 ff1a 	bl	8002568 <_ZN19CalibrationViewBaseD1Ev>
 8008734:	4620      	mov	r0, r4
 8008736:	bd10      	pop	{r4, pc}
 8008738:	0802e900 	.word	0x0802e900

0800873c <_ZN15CalibrationViewD0Ev>:
 800873c:	b510      	push	{r4, lr}
 800873e:	4604      	mov	r4, r0
 8008740:	f7ff fff2 	bl	8008728 <_ZN15CalibrationViewD1Ev>
 8008744:	4620      	mov	r0, r4
 8008746:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800874a:	f021 fcca 	bl	802a0e2 <_ZdlPvj>
 800874e:	4620      	mov	r0, r4
 8008750:	bd10      	pop	{r4, pc}
	...

08008754 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008754:	b510      	push	{r4, lr}
 8008756:	4604      	mov	r4, r0
 8008758:	f7fa f81a 	bl	8002790 <_ZN19CalibrationViewBaseC1Ev>
 800875c:	4b01      	ldr	r3, [pc, #4]	; (8008764 <_ZN15CalibrationViewC1Ev+0x10>)
 800875e:	6023      	str	r3, [r4, #0]
}
 8008760:	4620      	mov	r0, r4
 8008762:	bd10      	pop	{r4, pc}
 8008764:	0802e900 	.word	0x0802e900

08008768 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008768:	f7f9 becb 	b.w	8002502 <_ZN19CalibrationViewBase11setupScreenEv>

0800876c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800876c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800876e:	4a0a      	ldr	r2, [pc, #40]	; (8008798 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008770:	4605      	mov	r5, r0
 8008772:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008774:	460b      	mov	r3, r1
 8008776:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800877a:	2104      	movs	r1, #4
 800877c:	f010 fdaa 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008780:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008784:	f00e fce0 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008788:	b92c      	cbnz	r4, 8008796 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800878a:	f00d fbf5 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800878e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008792:	f7fb be19 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008796:	bd38      	pop	{r3, r4, r5, pc}
 8008798:	0802e8f4 	.word	0x0802e8f4

0800879c <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 800879c:	4770      	bx	lr

0800879e <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800879e:	3804      	subs	r0, #4
 80087a0:	4770      	bx	lr

080087a2 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80087a2:	4770      	bx	lr

080087a4 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80087a4:	4770      	bx	lr

080087a6 <_ZN25Calibration_HallPresenterD0Ev>:
 80087a6:	b510      	push	{r4, lr}
 80087a8:	2110      	movs	r1, #16
 80087aa:	4604      	mov	r4, r0
 80087ac:	f021 fc99 	bl	802a0e2 <_ZdlPvj>
 80087b0:	4620      	mov	r0, r4
 80087b2:	bd10      	pop	{r4, pc}

080087b4 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80087b4:	f1a0 0004 	sub.w	r0, r0, #4
 80087b8:	e7f5      	b.n	80087a6 <_ZN25Calibration_HallPresenterD0Ev>

080087ba <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80087ba:	4770      	bx	lr

080087bc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80087bc:	b510      	push	{r4, lr}
 80087be:	2200      	movs	r2, #0
 80087c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80087c2:	4a04      	ldr	r2, [pc, #16]	; (80087d4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80087c4:	60c1      	str	r1, [r0, #12]
 80087c6:	f102 0408 	add.w	r4, r2, #8
 80087ca:	3224      	adds	r2, #36	; 0x24
 80087cc:	6004      	str	r4, [r0, #0]
 80087ce:	6042      	str	r2, [r0, #4]
}
 80087d0:	bd10      	pop	{r4, pc}
 80087d2:	bf00      	nop
 80087d4:	0802e930 	.word	0x0802e930

080087d8 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80087d8:	4770      	bx	lr

080087da <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80087da:	4770      	bx	lr

080087dc <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80087dc:	b510      	push	{r4, lr}
 80087de:	4b03      	ldr	r3, [pc, #12]	; (80087ec <_ZN20Calibration_HallViewD1Ev+0x10>)
 80087e0:	6003      	str	r3, [r0, #0]
 80087e2:	4604      	mov	r4, r0
 80087e4:	f7fa fa18 	bl	8002c18 <_ZN24Calibration_HallViewBaseD1Ev>
 80087e8:	4620      	mov	r0, r4
 80087ea:	bd10      	pop	{r4, pc}
 80087ec:	0802e968 	.word	0x0802e968

080087f0 <_ZN20Calibration_HallViewD0Ev>:
 80087f0:	b510      	push	{r4, lr}
 80087f2:	4604      	mov	r4, r0
 80087f4:	f7ff fff2 	bl	80087dc <_ZN20Calibration_HallViewD1Ev>
 80087f8:	4620      	mov	r0, r4
 80087fa:	f241 015c 	movw	r1, #4188	; 0x105c
 80087fe:	f021 fc70 	bl	802a0e2 <_ZdlPvj>
 8008802:	4620      	mov	r0, r4
 8008804:	bd10      	pop	{r4, pc}
	...

08008808 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008808:	b510      	push	{r4, lr}
 800880a:	4604      	mov	r4, r0
 800880c:	f7fa fa2c 	bl	8002c68 <_ZN24Calibration_HallViewBaseC1Ev>
 8008810:	4b01      	ldr	r3, [pc, #4]	; (8008818 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008812:	6023      	str	r3, [r4, #0]
}
 8008814:	4620      	mov	r0, r4
 8008816:	bd10      	pop	{r4, pc}
 8008818:	0802e968 	.word	0x0802e968

0800881c <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 800881c:	f7fa b9d8 	b.w	8002bd0 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008820 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008820:	4770      	bx	lr

08008822 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008822:	3804      	subs	r0, #4
 8008824:	4770      	bx	lr

08008826 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008826:	4770      	bx	lr

08008828 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008828:	4770      	bx	lr

0800882a <_ZN24Calibration_PadPresenterD0Ev>:
 800882a:	b510      	push	{r4, lr}
 800882c:	2110      	movs	r1, #16
 800882e:	4604      	mov	r4, r0
 8008830:	f021 fc57 	bl	802a0e2 <_ZdlPvj>
 8008834:	4620      	mov	r0, r4
 8008836:	bd10      	pop	{r4, pc}

08008838 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008838:	f1a0 0004 	sub.w	r0, r0, #4
 800883c:	e7f5      	b.n	800882a <_ZN24Calibration_PadPresenterD0Ev>

0800883e <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800883e:	4770      	bx	lr

08008840 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008840:	b510      	push	{r4, lr}
 8008842:	2200      	movs	r2, #0
 8008844:	6082      	str	r2, [r0, #8]
    : view(v)
 8008846:	4a04      	ldr	r2, [pc, #16]	; (8008858 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008848:	60c1      	str	r1, [r0, #12]
 800884a:	f102 0408 	add.w	r4, r2, #8
 800884e:	3224      	adds	r2, #36	; 0x24
 8008850:	6004      	str	r4, [r0, #0]
 8008852:	6042      	str	r2, [r0, #4]
}
 8008854:	bd10      	pop	{r4, pc}
 8008856:	bf00      	nop
 8008858:	0802e998 	.word	0x0802e998

0800885c <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800885c:	4770      	bx	lr

0800885e <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800885e:	4770      	bx	lr

08008860 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008860:	b510      	push	{r4, lr}
 8008862:	4b03      	ldr	r3, [pc, #12]	; (8008870 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008864:	6003      	str	r3, [r0, #0]
 8008866:	4604      	mov	r4, r0
 8008868:	f7fa fbcc 	bl	8003004 <_ZN23Calibration_PadViewBaseD1Ev>
 800886c:	4620      	mov	r0, r4
 800886e:	bd10      	pop	{r4, pc}
 8008870:	0802e9d0 	.word	0x0802e9d0

08008874 <_ZN19Calibration_PadViewD0Ev>:
 8008874:	b510      	push	{r4, lr}
 8008876:	4604      	mov	r4, r0
 8008878:	f7ff fff2 	bl	8008860 <_ZN19Calibration_PadViewD1Ev>
 800887c:	4620      	mov	r0, r4
 800887e:	f641 2198 	movw	r1, #6808	; 0x1a98
 8008882:	f021 fc2e 	bl	802a0e2 <_ZdlPvj>
 8008886:	4620      	mov	r0, r4
 8008888:	bd10      	pop	{r4, pc}
	...

0800888c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800888c:	b510      	push	{r4, lr}
 800888e:	4604      	mov	r4, r0
 8008890:	f7fa fc26 	bl	80030e0 <_ZN23Calibration_PadViewBaseC1Ev>
 8008894:	4b01      	ldr	r3, [pc, #4]	; (800889c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008896:	6023      	str	r3, [r4, #0]
}
 8008898:	4620      	mov	r0, r4
 800889a:	bd10      	pop	{r4, pc}
 800889c:	0802e9d0 	.word	0x0802e9d0

080088a0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80088a0:	f7fa bbc9 	b.w	8003036 <_ZN23Calibration_PadViewBase11setupScreenEv>

080088a4 <_ZN23Configuration_ContainerD1Ev>:

class Configuration_Container : public Configuration_ContainerBase
{
public:
    Configuration_Container();
    virtual ~Configuration_Container() {}
 80088a4:	b510      	push	{r4, lr}
 80088a6:	4b03      	ldr	r3, [pc, #12]	; (80088b4 <_ZN23Configuration_ContainerD1Ev+0x10>)
 80088a8:	6003      	str	r3, [r0, #0]
 80088aa:	4604      	mov	r4, r0
 80088ac:	f7fa fe34 	bl	8003518 <_ZN27Configuration_ContainerBaseD1Ev>
 80088b0:	4620      	mov	r0, r4
 80088b2:	bd10      	pop	{r4, pc}
 80088b4:	0802ea0c 	.word	0x0802ea0c

080088b8 <_ZN23Configuration_ContainerD0Ev>:
 80088b8:	b510      	push	{r4, lr}
 80088ba:	4604      	mov	r4, r0
 80088bc:	f7ff fff2 	bl	80088a4 <_ZN23Configuration_ContainerD1Ev>
 80088c0:	4620      	mov	r0, r4
 80088c2:	f44f 618e 	mov.w	r1, #1136	; 0x470
 80088c6:	f021 fc0c 	bl	802a0e2 <_ZdlPvj>
 80088ca:	4620      	mov	r0, r4
 80088cc:	bd10      	pop	{r4, pc}
	...

080088d0 <_ZN23Configuration_ContainerC1Ev>:
#include <gui/containers/Configuration_Container.hpp>

Configuration_Container::Configuration_Container()
 80088d0:	b510      	push	{r4, lr}
 80088d2:	4604      	mov	r4, r0
 80088d4:	f7fa fe4e 	bl	8003574 <_ZN27Configuration_ContainerBaseC1Ev>
 80088d8:	4b01      	ldr	r3, [pc, #4]	; (80088e0 <_ZN23Configuration_ContainerC1Ev+0x10>)
 80088da:	6023      	str	r3, [r4, #0]
{

}
 80088dc:	4620      	mov	r0, r4
 80088de:	bd10      	pop	{r4, pc}
 80088e0:	0802ea0c 	.word	0x0802ea0c

080088e4 <_ZN23Configuration_Container10initializeEv>:

void Configuration_Container::initialize()
{
    Configuration_ContainerBase::initialize();
 80088e4:	f7fa be19 	b.w	800351a <_ZN27Configuration_ContainerBase10initializeEv>

080088e8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80088e8:	4770      	bx	lr

080088ea <_ZN19FrontendApplicationD0Ev>:
 80088ea:	b510      	push	{r4, lr}
 80088ec:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80088f0:	4604      	mov	r4, r0
 80088f2:	f021 fbf6 	bl	802a0e2 <_ZdlPvj>
 80088f6:	4620      	mov	r0, r4
 80088f8:	bd10      	pop	{r4, pc}

080088fa <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80088fa:	b510      	push	{r4, lr}
 80088fc:	4604      	mov	r4, r0
    {
        model.tick();
 80088fe:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008902:	f000 fafb 	bl	8008efc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008906:	4620      	mov	r0, r4
    }
 8008908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800890c:	f00d bbf8 	b.w	8016100 <_ZN8touchgfx11Application15handleTickEventEv>

08008910 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008910:	b510      	push	{r4, lr}
 8008912:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008914:	f7fb fc28 	bl	8004168 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008918:	4b01      	ldr	r3, [pc, #4]	; (8008920 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800891a:	6023      	str	r3, [r4, #0]
{

}
 800891c:	4620      	mov	r0, r4
 800891e:	bd10      	pop	{r4, pc}
 8008920:	0802eaa0 	.word	0x0802eaa0

08008924 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008924:	4770      	bx	lr

08008926 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008926:	3804      	subs	r0, #4
 8008928:	4770      	bx	lr

0800892a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800892a:	4770      	bx	lr

0800892c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800892c:	68c0      	ldr	r0, [r0, #12]
 800892e:	6803      	ldr	r3, [r0, #0]
 8008930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008932:	4718      	bx	r3

08008934 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008934:	f1a0 0004 	sub.w	r0, r0, #4
 8008938:	f7ff bff8 	b.w	800892c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800893c <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800893c:	b510      	push	{r4, lr}
 800893e:	2110      	movs	r1, #16
 8008940:	4604      	mov	r4, r0
 8008942:	f021 fbce 	bl	802a0e2 <_ZdlPvj>
 8008946:	4620      	mov	r0, r4
 8008948:	bd10      	pop	{r4, pc}

0800894a <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800894a:	f1a0 0004 	sub.w	r0, r0, #4
 800894e:	e7f5      	b.n	800893c <_ZN18Main_MenuPresenterD0Ev>

08008950 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008950:	b510      	push	{r4, lr}
 8008952:	2200      	movs	r2, #0
 8008954:	6082      	str	r2, [r0, #8]
    : view(v)
 8008956:	4a04      	ldr	r2, [pc, #16]	; (8008968 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008958:	60c1      	str	r1, [r0, #12]
 800895a:	f102 0408 	add.w	r4, r2, #8
 800895e:	3224      	adds	r2, #36	; 0x24
 8008960:	6004      	str	r4, [r0, #0]
 8008962:	6042      	str	r2, [r0, #4]
}
 8008964:	bd10      	pop	{r4, pc}
 8008966:	bf00      	nop
 8008968:	0802eaec 	.word	0x0802eaec

0800896c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800896c:	4770      	bx	lr
	...

08008970 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008970:	b510      	push	{r4, lr}
 8008972:	4b03      	ldr	r3, [pc, #12]	; (8008980 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008974:	6003      	str	r3, [r0, #0]
 8008976:	4604      	mov	r4, r0
 8008978:	f7fc ff80 	bl	800587c <_ZN17Main_MenuViewBaseD1Ev>
 800897c:	4620      	mov	r0, r4
 800897e:	bd10      	pop	{r4, pc}
 8008980:	0802eb24 	.word	0x0802eb24

08008984 <_ZN13Main_MenuViewD0Ev>:
 8008984:	b510      	push	{r4, lr}
 8008986:	4604      	mov	r4, r0
 8008988:	f7ff fff2 	bl	8008970 <_ZN13Main_MenuViewD1Ev>
 800898c:	4620      	mov	r0, r4
 800898e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008992:	f021 fba6 	bl	802a0e2 <_ZdlPvj>
 8008996:	4620      	mov	r0, r4
 8008998:	bd10      	pop	{r4, pc}
	...

0800899c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800899c:	b510      	push	{r4, lr}
 800899e:	4604      	mov	r4, r0
 80089a0:	f7fc ffb6 	bl	8005910 <_ZN17Main_MenuViewBaseC1Ev>
 80089a4:	4b01      	ldr	r3, [pc, #4]	; (80089ac <_ZN13Main_MenuViewC1Ev+0x10>)
 80089a6:	6023      	str	r3, [r4, #0]
}
 80089a8:	4620      	mov	r0, r4
 80089aa:	bd10      	pop	{r4, pc}
 80089ac:	0802eb24 	.word	0x0802eb24

080089b0 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80089b0:	f7fc bf40 	b.w	8005834 <_ZN17Main_MenuViewBase11setupScreenEv>

080089b4 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80089b4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80089b6:	4a0a      	ldr	r2, [pc, #40]	; (80089e0 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80089b8:	4605      	mov	r5, r0
 80089ba:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80089bc:	460b      	mov	r3, r1
 80089be:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80089c2:	2104      	movs	r1, #4
 80089c4:	f010 fc86 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80089c8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80089cc:	f00e fbbc 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80089d0:	b92c      	cbnz	r4, 80089de <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80089d2:	f00d fad1 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80089d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80089da:	f7fb bcf5 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80089de:	bd38      	pop	{r3, r4, r5, pc}
 80089e0:	0802e8f4 	.word	0x0802e8f4

080089e4 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80089e4:	4770      	bx	lr

080089e6 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80089e6:	3804      	subs	r0, #4
 80089e8:	4770      	bx	lr

080089ea <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80089ea:	4770      	bx	lr

080089ec <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80089ec:	68c0      	ldr	r0, [r0, #12]
 80089ee:	6803      	ldr	r3, [r0, #0]
 80089f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089f2:	4718      	bx	r3

080089f4 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80089f4:	f1a0 0004 	sub.w	r0, r0, #4
 80089f8:	f7ff bff8 	b.w	80089ec <_ZN20MeasurementPresenter15setTimeoutValueEi>

080089fc <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80089fc:	b510      	push	{r4, lr}
 80089fe:	2110      	movs	r1, #16
 8008a00:	4604      	mov	r4, r0
 8008a02:	f021 fb6e 	bl	802a0e2 <_ZdlPvj>
 8008a06:	4620      	mov	r0, r4
 8008a08:	bd10      	pop	{r4, pc}

08008a0a <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008a0a:	f1a0 0004 	sub.w	r0, r0, #4
 8008a0e:	e7f5      	b.n	80089fc <_ZN20MeasurementPresenterD0Ev>

08008a10 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008a10:	b510      	push	{r4, lr}
 8008a12:	2200      	movs	r2, #0
 8008a14:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a16:	4a04      	ldr	r2, [pc, #16]	; (8008a28 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008a18:	60c1      	str	r1, [r0, #12]
 8008a1a:	f102 0408 	add.w	r4, r2, #8
 8008a1e:	3224      	adds	r2, #36	; 0x24
 8008a20:	6004      	str	r4, [r0, #0]
 8008a22:	6042      	str	r2, [r0, #4]
}
 8008a24:	bd10      	pop	{r4, pc}
 8008a26:	bf00      	nop
 8008a28:	0802eb54 	.word	0x0802eb54

08008a2c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008a2c:	4770      	bx	lr
	...

08008a30 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008a30:	b510      	push	{r4, lr}
 8008a32:	4b03      	ldr	r3, [pc, #12]	; (8008a40 <_ZN15MeasurementViewD1Ev+0x10>)
 8008a34:	6003      	str	r3, [r0, #0]
 8008a36:	4604      	mov	r4, r0
 8008a38:	f7fd f9dc 	bl	8005df4 <_ZN19MeasurementViewBaseD1Ev>
 8008a3c:	4620      	mov	r0, r4
 8008a3e:	bd10      	pop	{r4, pc}
 8008a40:	0802eb8c 	.word	0x0802eb8c

08008a44 <_ZN15MeasurementViewD0Ev>:
 8008a44:	b510      	push	{r4, lr}
 8008a46:	4604      	mov	r4, r0
 8008a48:	f7ff fff2 	bl	8008a30 <_ZN15MeasurementViewD1Ev>
 8008a4c:	4620      	mov	r0, r4
 8008a4e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008a52:	f021 fb46 	bl	802a0e2 <_ZdlPvj>
 8008a56:	4620      	mov	r0, r4
 8008a58:	bd10      	pop	{r4, pc}
	...

08008a5c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008a5c:	b510      	push	{r4, lr}
 8008a5e:	4604      	mov	r4, r0
 8008a60:	f7fd fa02 	bl	8005e68 <_ZN19MeasurementViewBaseC1Ev>
 8008a64:	4b01      	ldr	r3, [pc, #4]	; (8008a6c <_ZN15MeasurementViewC1Ev+0x10>)
 8008a66:	6023      	str	r3, [r4, #0]
}
 8008a68:	4620      	mov	r0, r4
 8008a6a:	bd10      	pop	{r4, pc}
 8008a6c:	0802eb8c 	.word	0x0802eb8c

08008a70 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008a70:	f7fd b99c 	b.w	8005dac <_ZN19MeasurementViewBase11setupScreenEv>

08008a74 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008a74:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a76:	4a0a      	ldr	r2, [pc, #40]	; (8008aa0 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008a78:	4605      	mov	r5, r0
 8008a7a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a7c:	460b      	mov	r3, r1
 8008a7e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008a82:	2104      	movs	r1, #4
 8008a84:	f010 fc26 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008a88:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a8c:	f00e fb5c 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008a90:	b92c      	cbnz	r4, 8008a9e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008a92:	f00d fa71 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008a96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008a9a:	f7fb bc95 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008a9e:	bd38      	pop	{r3, r4, r5, pc}
 8008aa0:	0802e8f4 	.word	0x0802e8f4

08008aa4 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008aa4:	4770      	bx	lr

08008aa6 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008aa6:	3804      	subs	r0, #4
 8008aa8:	4770      	bx	lr

08008aaa <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008aaa:	4770      	bx	lr

08008aac <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008aac:	68c0      	ldr	r0, [r0, #12]
 8008aae:	6803      	ldr	r3, [r0, #0]
 8008ab0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ab2:	4718      	bx	r3

08008ab4 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008ab4:	f1a0 0004 	sub.w	r0, r0, #4
 8008ab8:	f7ff bff8 	b.w	8008aac <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008abc <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008abc:	b510      	push	{r4, lr}
 8008abe:	2110      	movs	r1, #16
 8008ac0:	4604      	mov	r4, r0
 8008ac2:	f021 fb0e 	bl	802a0e2 <_ZdlPvj>
 8008ac6:	4620      	mov	r0, r4
 8008ac8:	bd10      	pop	{r4, pc}

08008aca <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008aca:	f1a0 0004 	sub.w	r0, r0, #4
 8008ace:	e7f5      	b.n	8008abc <_ZN29Measurement_AccuratePresenterD0Ev>

08008ad0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008ad0:	b510      	push	{r4, lr}
 8008ad2:	2200      	movs	r2, #0
 8008ad4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ad6:	4a04      	ldr	r2, [pc, #16]	; (8008ae8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008ad8:	60c1      	str	r1, [r0, #12]
 8008ada:	f102 0408 	add.w	r4, r2, #8
 8008ade:	3224      	adds	r2, #36	; 0x24
 8008ae0:	6004      	str	r4, [r0, #0]
 8008ae2:	6042      	str	r2, [r0, #4]
}
 8008ae4:	bd10      	pop	{r4, pc}
 8008ae6:	bf00      	nop
 8008ae8:	0802ebbc 	.word	0x0802ebbc

08008aec <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008aec:	4770      	bx	lr
	...

08008af0 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008af0:	b510      	push	{r4, lr}
 8008af2:	4b03      	ldr	r3, [pc, #12]	; (8008b00 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008af4:	6003      	str	r3, [r0, #0]
 8008af6:	4604      	mov	r4, r0
 8008af8:	f7fd fbfe 	bl	80062f8 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008afc:	4620      	mov	r0, r4
 8008afe:	bd10      	pop	{r4, pc}
 8008b00:	0802ebf4 	.word	0x0802ebf4

08008b04 <_ZN24Measurement_AccurateViewD0Ev>:
 8008b04:	b510      	push	{r4, lr}
 8008b06:	4604      	mov	r4, r0
 8008b08:	f7ff fff2 	bl	8008af0 <_ZN24Measurement_AccurateViewD1Ev>
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008b12:	f021 fae6 	bl	802a0e2 <_ZdlPvj>
 8008b16:	4620      	mov	r0, r4
 8008b18:	bd10      	pop	{r4, pc}
	...

08008b1c <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008b1c:	b510      	push	{r4, lr}
 8008b1e:	4604      	mov	r4, r0
 8008b20:	f7fd fc24 	bl	800636c <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008b24:	4b01      	ldr	r3, [pc, #4]	; (8008b2c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008b26:	6023      	str	r3, [r4, #0]
}
 8008b28:	4620      	mov	r0, r4
 8008b2a:	bd10      	pop	{r4, pc}
 8008b2c:	0802ebf4 	.word	0x0802ebf4

08008b30 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008b30:	f7fd bbbe 	b.w	80062b0 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008b34 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008b34:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b36:	4a0a      	ldr	r2, [pc, #40]	; (8008b60 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008b38:	4605      	mov	r5, r0
 8008b3a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b3c:	460b      	mov	r3, r1
 8008b3e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008b42:	2104      	movs	r1, #4
 8008b44:	f010 fbc6 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008b48:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008b4c:	f00e fafc 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008b50:	b92c      	cbnz	r4, 8008b5e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008b52:	f00d fa11 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008b56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008b5a:	f7fb bc35 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008b5e:	bd38      	pop	{r3, r4, r5, pc}
 8008b60:	0802e8f4 	.word	0x0802e8f4

08008b64 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008b64:	4770      	bx	lr

08008b66 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008b66:	3804      	subs	r0, #4
 8008b68:	4770      	bx	lr

08008b6a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008b6a:	4770      	bx	lr

08008b6c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008b6c:	4770      	bx	lr

08008b6e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008b6e:	b510      	push	{r4, lr}
 8008b70:	2110      	movs	r1, #16
 8008b72:	4604      	mov	r4, r0
 8008b74:	f021 fab5 	bl	802a0e2 <_ZdlPvj>
 8008b78:	4620      	mov	r0, r4
 8008b7a:	bd10      	pop	{r4, pc}

08008b7c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008b7c:	f1a0 0004 	sub.w	r0, r0, #4
 8008b80:	e7f5      	b.n	8008b6e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008b82 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008b82:	4770      	bx	lr

08008b84 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008b84:	b510      	push	{r4, lr}
 8008b86:	2200      	movs	r2, #0
 8008b88:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b8a:	4a04      	ldr	r2, [pc, #16]	; (8008b9c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008b8c:	60c1      	str	r1, [r0, #12]
 8008b8e:	f102 0408 	add.w	r4, r2, #8
 8008b92:	3224      	adds	r2, #36	; 0x24
 8008b94:	6004      	str	r4, [r0, #0]
 8008b96:	6042      	str	r2, [r0, #4]
}
 8008b98:	bd10      	pop	{r4, pc}
 8008b9a:	bf00      	nop
 8008b9c:	0802ec24 	.word	0x0802ec24

08008ba0 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008ba0:	4770      	bx	lr
	...

08008ba4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008ba4:	b510      	push	{r4, lr}
 8008ba6:	4b03      	ldr	r3, [pc, #12]	; (8008bb4 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008ba8:	6003      	str	r3, [r0, #0]
 8008baa:	4604      	mov	r4, r0
 8008bac:	f7fd fe22 	bl	80067f4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	bd10      	pop	{r4, pc}
 8008bb4:	0802ec5c 	.word	0x0802ec5c

08008bb8 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008bb8:	b510      	push	{r4, lr}
 8008bba:	4604      	mov	r4, r0
 8008bbc:	f7ff fff2 	bl	8008ba4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008bc0:	4620      	mov	r0, r4
 8008bc2:	f241 015c 	movw	r1, #4188	; 0x105c
 8008bc6:	f021 fa8c 	bl	802a0e2 <_ZdlPvj>
 8008bca:	4620      	mov	r0, r4
 8008bcc:	bd10      	pop	{r4, pc}
	...

08008bd0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008bd0:	b510      	push	{r4, lr}
 8008bd2:	4604      	mov	r4, r0
 8008bd4:	f7fd fe36 	bl	8006844 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008bd8:	4b01      	ldr	r3, [pc, #4]	; (8008be0 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008bda:	6023      	str	r3, [r4, #0]
}
 8008bdc:	4620      	mov	r0, r4
 8008bde:	bd10      	pop	{r4, pc}
 8008be0:	0802ec5c 	.word	0x0802ec5c

08008be4 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008be4:	f7fd bde2 	b.w	80067ac <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008be8 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008be8:	4770      	bx	lr

08008bea <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008bea:	3804      	subs	r0, #4
 8008bec:	4770      	bx	lr

08008bee <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008bee:	4770      	bx	lr

08008bf0 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008bf0:	4770      	bx	lr

08008bf2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008bf2:	b510      	push	{r4, lr}
 8008bf4:	2110      	movs	r1, #16
 8008bf6:	4604      	mov	r4, r0
 8008bf8:	f021 fa73 	bl	802a0e2 <_ZdlPvj>
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	bd10      	pop	{r4, pc}

08008c00 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008c00:	f1a0 0004 	sub.w	r0, r0, #4
 8008c04:	e7f5      	b.n	8008bf2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008c06 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008c06:	4770      	bx	lr

08008c08 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008c08:	b510      	push	{r4, lr}
 8008c0a:	2200      	movs	r2, #0
 8008c0c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c0e:	4a04      	ldr	r2, [pc, #16]	; (8008c20 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008c10:	60c1      	str	r1, [r0, #12]
 8008c12:	f102 0408 	add.w	r4, r2, #8
 8008c16:	3224      	adds	r2, #36	; 0x24
 8008c18:	6004      	str	r4, [r0, #0]
 8008c1a:	6042      	str	r2, [r0, #4]
}
 8008c1c:	bd10      	pop	{r4, pc}
 8008c1e:	bf00      	nop
 8008c20:	0802ec88 	.word	0x0802ec88

08008c24 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008c24:	4770      	bx	lr
	...

08008c28 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008c28:	b510      	push	{r4, lr}
 8008c2a:	4b03      	ldr	r3, [pc, #12]	; (8008c38 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008c2c:	6003      	str	r3, [r0, #0]
 8008c2e:	4604      	mov	r4, r0
 8008c30:	f7fd ff90 	bl	8006b54 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008c34:	4620      	mov	r0, r4
 8008c36:	bd10      	pop	{r4, pc}
 8008c38:	0802ecc0 	.word	0x0802ecc0

08008c3c <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008c3c:	b510      	push	{r4, lr}
 8008c3e:	4604      	mov	r4, r0
 8008c40:	f7ff fff2 	bl	8008c28 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008c44:	4620      	mov	r0, r4
 8008c46:	f241 015c 	movw	r1, #4188	; 0x105c
 8008c4a:	f021 fa4a 	bl	802a0e2 <_ZdlPvj>
 8008c4e:	4620      	mov	r0, r4
 8008c50:	bd10      	pop	{r4, pc}
	...

08008c54 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008c54:	b510      	push	{r4, lr}
 8008c56:	4604      	mov	r4, r0
 8008c58:	f7fd ffa4 	bl	8006ba4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008c5c:	4b01      	ldr	r3, [pc, #4]	; (8008c64 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008c5e:	6023      	str	r3, [r4, #0]
}
 8008c60:	4620      	mov	r0, r4
 8008c62:	bd10      	pop	{r4, pc}
 8008c64:	0802ecc0 	.word	0x0802ecc0

08008c68 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008c68:	f7fd bf50 	b.w	8006b0c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008c6c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008c6c:	4770      	bx	lr

08008c6e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008c6e:	3804      	subs	r0, #4
 8008c70:	4770      	bx	lr

08008c72 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008c72:	4770      	bx	lr

08008c74 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008c74:	68c0      	ldr	r0, [r0, #12]
 8008c76:	6803      	ldr	r3, [r0, #0]
 8008c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c7a:	4718      	bx	r3

08008c7c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008c7c:	f1a0 0004 	sub.w	r0, r0, #4
 8008c80:	f7ff bff8 	b.w	8008c74 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008c84 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008c84:	b510      	push	{r4, lr}
 8008c86:	2110      	movs	r1, #16
 8008c88:	4604      	mov	r4, r0
 8008c8a:	f021 fa2a 	bl	802a0e2 <_ZdlPvj>
 8008c8e:	4620      	mov	r0, r4
 8008c90:	bd10      	pop	{r4, pc}

08008c92 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008c92:	f1a0 0004 	sub.w	r0, r0, #4
 8008c96:	e7f5      	b.n	8008c84 <_ZN27Measurement_SinglePresenterD0Ev>

08008c98 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008c98:	b510      	push	{r4, lr}
 8008c9a:	2200      	movs	r2, #0
 8008c9c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c9e:	4a04      	ldr	r2, [pc, #16]	; (8008cb0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008ca0:	60c1      	str	r1, [r0, #12]
 8008ca2:	f102 0408 	add.w	r4, r2, #8
 8008ca6:	3224      	adds	r2, #36	; 0x24
 8008ca8:	6004      	str	r4, [r0, #0]
 8008caa:	6042      	str	r2, [r0, #4]
}
 8008cac:	bd10      	pop	{r4, pc}
 8008cae:	bf00      	nop
 8008cb0:	0802ecec 	.word	0x0802ecec

08008cb4 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008cb4:	4770      	bx	lr
	...

08008cb8 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008cb8:	b510      	push	{r4, lr}
 8008cba:	4b03      	ldr	r3, [pc, #12]	; (8008cc8 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008cbc:	6003      	str	r3, [r0, #0]
 8008cbe:	4604      	mov	r4, r0
 8008cc0:	f7fe f8f8 	bl	8006eb4 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	bd10      	pop	{r4, pc}
 8008cc8:	0802ed24 	.word	0x0802ed24

08008ccc <_ZN22Measurement_SingleViewD0Ev>:
 8008ccc:	b510      	push	{r4, lr}
 8008cce:	4604      	mov	r4, r0
 8008cd0:	f7ff fff2 	bl	8008cb8 <_ZN22Measurement_SingleViewD1Ev>
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008cda:	f021 fa02 	bl	802a0e2 <_ZdlPvj>
 8008cde:	4620      	mov	r0, r4
 8008ce0:	bd10      	pop	{r4, pc}
	...

08008ce4 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008ce4:	b510      	push	{r4, lr}
 8008ce6:	4604      	mov	r4, r0
 8008ce8:	f7fe f91e 	bl	8006f28 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008cec:	4b01      	ldr	r3, [pc, #4]	; (8008cf4 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008cee:	6023      	str	r3, [r4, #0]
}
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	bd10      	pop	{r4, pc}
 8008cf4:	0802ed24 	.word	0x0802ed24

08008cf8 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008cf8:	f7fe b8b8 	b.w	8006e6c <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008cfc <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008cfc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008cfe:	4a0a      	ldr	r2, [pc, #40]	; (8008d28 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008d00:	4605      	mov	r5, r0
 8008d02:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008d04:	460b      	mov	r3, r1
 8008d06:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008d0a:	2104      	movs	r1, #4
 8008d0c:	f010 fae2 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008d10:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d14:	f00e fa18 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d18:	b92c      	cbnz	r4, 8008d26 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008d1a:	f00d f92d 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d22:	f7fb bb51 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d26:	bd38      	pop	{r3, r4, r5, pc}
 8008d28:	0802e8f4 	.word	0x0802e8f4

08008d2c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008d2c:	4770      	bx	lr

08008d2e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008d2e:	3804      	subs	r0, #4
 8008d30:	4770      	bx	lr

08008d32 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008d32:	4770      	bx	lr

08008d34 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008d34:	4770      	bx	lr

08008d36 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008d36:	b510      	push	{r4, lr}
 8008d38:	2110      	movs	r1, #16
 8008d3a:	4604      	mov	r4, r0
 8008d3c:	f021 f9d1 	bl	802a0e2 <_ZdlPvj>
 8008d40:	4620      	mov	r0, r4
 8008d42:	bd10      	pop	{r4, pc}

08008d44 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008d44:	f1a0 0004 	sub.w	r0, r0, #4
 8008d48:	e7f5      	b.n	8008d36 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008d4a <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008d4a:	4770      	bx	lr

08008d4c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008d4c:	b510      	push	{r4, lr}
 8008d4e:	2200      	movs	r2, #0
 8008d50:	6082      	str	r2, [r0, #8]
    : view(v)
 8008d52:	4a04      	ldr	r2, [pc, #16]	; (8008d64 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008d54:	60c1      	str	r1, [r0, #12]
 8008d56:	f102 0408 	add.w	r4, r2, #8
 8008d5a:	3224      	adds	r2, #36	; 0x24
 8008d5c:	6004      	str	r4, [r0, #0]
 8008d5e:	6042      	str	r2, [r0, #4]
}
 8008d60:	bd10      	pop	{r4, pc}
 8008d62:	bf00      	nop
 8008d64:	0802ed54 	.word	0x0802ed54

08008d68 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008d68:	4770      	bx	lr
	...

08008d6c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008d6c:	b510      	push	{r4, lr}
 8008d6e:	4b03      	ldr	r3, [pc, #12]	; (8008d7c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008d70:	6003      	str	r3, [r0, #0]
 8008d72:	4604      	mov	r4, r0
 8008d74:	f7fe fb22 	bl	80073bc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008d78:	4620      	mov	r0, r4
 8008d7a:	bd10      	pop	{r4, pc}
 8008d7c:	0802ed94 	.word	0x0802ed94

08008d80 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008d80:	b510      	push	{r4, lr}
 8008d82:	4604      	mov	r4, r0
 8008d84:	f7ff fff2 	bl	8008d6c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008d88:	4620      	mov	r0, r4
 8008d8a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008d8e:	f021 f9a8 	bl	802a0e2 <_ZdlPvj>
 8008d92:	4620      	mov	r0, r4
 8008d94:	bd10      	pop	{r4, pc}
	...

08008d98 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008d98:	b510      	push	{r4, lr}
 8008d9a:	4604      	mov	r4, r0
 8008d9c:	f7fe fb48 	bl	8007430 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008da0:	4b01      	ldr	r3, [pc, #4]	; (8008da8 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008da2:	6023      	str	r3, [r4, #0]
}
 8008da4:	4620      	mov	r0, r4
 8008da6:	bd10      	pop	{r4, pc}
 8008da8:	0802ed94 	.word	0x0802ed94

08008dac <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008dac:	f7fe bae1 	b.w	8007372 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008db0 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008db2:	4e2a      	ldr	r6, [pc, #168]	; (8008e5c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008db4:	4f2a      	ldr	r7, [pc, #168]	; (8008e60 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8008db6:	4604      	mov	r4, r0
 8008db8:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008dba:	6803      	ldr	r3, [r0, #0]
{
 8008dbc:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008dbe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008dc0:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008dc2:	2201      	movs	r2, #1
 8008dc4:	2180      	movs	r1, #128	; 0x80
 8008dc6:	4638      	mov	r0, r7
 8008dc8:	f000 fdea 	bl	80099a0 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8008dcc:	f7f7 fd1c 	bl	8000808 <updateGUI_test>
 8008dd0:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008dd2:	f7f8 fa07 	bl	80011e4 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008dd6:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008dd8:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008dda:	2001      	movs	r0, #1
 8008ddc:	f7f7 fc60 	bl	80006a0 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008de0:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008de4:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008de6:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008dea:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008dee:	9001      	str	r0, [sp, #4]
 8008df0:	f00a f956 	bl	80130a0 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008df4:	9801      	ldr	r0, [sp, #4]
 8008df6:	f00e f9a7 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008dfa:	462b      	mov	r3, r5
 8008dfc:	4a19      	ldr	r2, [pc, #100]	; (8008e64 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8008dfe:	210a      	movs	r1, #10
 8008e00:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008e04:	f010 fa66 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008e08:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008e0c:	f00e f99c 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008e10:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008e12:	4a15      	ldr	r2, [pc, #84]	; (8008e68 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008e14:	9303      	str	r3, [sp, #12]
 8008e16:	210a      	movs	r1, #10
 8008e18:	ab03      	add	r3, sp, #12
 8008e1a:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008e1e:	f010 fc45 	bl	80196ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008e22:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8008e26:	f00e f98f 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008e2a:	9b05      	ldr	r3, [sp, #20]
 8008e2c:	4a0e      	ldr	r2, [pc, #56]	; (8008e68 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008e2e:	9303      	str	r3, [sp, #12]
 8008e30:	210a      	movs	r1, #10
 8008e32:	ab03      	add	r3, sp, #12
 8008e34:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008e38:	f010 fc38 	bl	80196ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008e3c:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008e40:	f00e f982 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008e44:	4638      	mov	r0, r7
 8008e46:	2200      	movs	r2, #0
 8008e48:	2180      	movs	r1, #128	; 0x80
 8008e4a:	f000 fda9 	bl	80099a0 <HAL_GPIO_WritePin>
 8008e4e:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008e50:	6803      	ldr	r3, [r0, #0]
 8008e52:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8008e54:	b007      	add	sp, #28
 8008e56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008e5a:	4718      	bx	r3
 8008e5c:	20013444 	.word	0x20013444
 8008e60:	40020000 	.word	0x40020000
 8008e64:	0802e8f4 	.word	0x0802e8f4
 8008e68:	0802ed84 	.word	0x0802ed84

08008e6c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008e6c:	4770      	bx	lr

08008e6e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008e6e:	3804      	subs	r0, #4
 8008e70:	4770      	bx	lr

08008e72 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008e72:	4770      	bx	lr

08008e74 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008e74:	4770      	bx	lr

08008e76 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008e76:	b510      	push	{r4, lr}
 8008e78:	2110      	movs	r1, #16
 8008e7a:	4604      	mov	r4, r0
 8008e7c:	f021 f931 	bl	802a0e2 <_ZdlPvj>
 8008e80:	4620      	mov	r0, r4
 8008e82:	bd10      	pop	{r4, pc}

08008e84 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008e84:	f1a0 0004 	sub.w	r0, r0, #4
 8008e88:	e7f5      	b.n	8008e76 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008e8a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008e8a:	4770      	bx	lr

08008e8c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008e8c:	b510      	push	{r4, lr}
 8008e8e:	2200      	movs	r2, #0
 8008e90:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e92:	4a04      	ldr	r2, [pc, #16]	; (8008ea4 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008e94:	60c1      	str	r1, [r0, #12]
 8008e96:	f102 0408 	add.w	r4, r2, #8
 8008e9a:	3224      	adds	r2, #36	; 0x24
 8008e9c:	6004      	str	r4, [r0, #0]
 8008e9e:	6042      	str	r2, [r0, #4]
}
 8008ea0:	bd10      	pop	{r4, pc}
 8008ea2:	bf00      	nop
 8008ea4:	0802edc4 	.word	0x0802edc4

08008ea8 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008ea8:	4770      	bx	lr
	...

08008eac <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008eac:	b510      	push	{r4, lr}
 8008eae:	4b03      	ldr	r3, [pc, #12]	; (8008ebc <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008eb0:	6003      	str	r3, [r0, #0]
 8008eb2:	4604      	mov	r4, r0
 8008eb4:	f7fe fe2c 	bl	8007b10 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008eb8:	4620      	mov	r0, r4
 8008eba:	bd10      	pop	{r4, pc}
 8008ebc:	0802edfc 	.word	0x0802edfc

08008ec0 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008ec0:	b510      	push	{r4, lr}
 8008ec2:	4604      	mov	r4, r0
 8008ec4:	f7ff fff2 	bl	8008eac <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f241 015c 	movw	r1, #4188	; 0x105c
 8008ece:	f021 f908 	bl	802a0e2 <_ZdlPvj>
 8008ed2:	4620      	mov	r0, r4
 8008ed4:	bd10      	pop	{r4, pc}
	...

08008ed8 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008ed8:	b510      	push	{r4, lr}
 8008eda:	4604      	mov	r4, r0
 8008edc:	f7fe fe40 	bl	8007b60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008ee0:	4b01      	ldr	r3, [pc, #4]	; (8008ee8 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008ee2:	6023      	str	r3, [r4, #0]
}
 8008ee4:	4620      	mov	r0, r4
 8008ee6:	bd10      	pop	{r4, pc}
 8008ee8:	0802edfc 	.word	0x0802edfc

08008eec <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008eec:	f7fe bdec 	b.w	8007ac8 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008ef0 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008ef0:	2100      	movs	r1, #0
 8008ef2:	223c      	movs	r2, #60	; 0x3c
 8008ef4:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008ef8:	4770      	bx	lr
	...

08008efc <_ZN5Model4tickEv>:

void Model::tick()
{
 8008efc:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008efe:	4d0a      	ldr	r5, [pc, #40]	; (8008f28 <_ZN5Model4tickEv+0x2c>)
{
 8008f00:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008f02:	6828      	ldr	r0, [r5, #0]
 8008f04:	f004 f8ac 	bl	800d060 <osMessageQueueGetCount>
 8008f08:	b168      	cbz	r0, 8008f26 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008f0a:	2300      	movs	r3, #0
 8008f0c:	6828      	ldr	r0, [r5, #0]
 8008f0e:	461a      	mov	r2, r3
 8008f10:	1d21      	adds	r1, r4, #4
 8008f12:	f004 f871 	bl	800cff8 <osMessageQueueGet>
 8008f16:	b930      	cbnz	r0, 8008f26 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008f18:	6820      	ldr	r0, [r4, #0]
 8008f1a:	6861      	ldr	r1, [r4, #4]
 8008f1c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008f22:	689b      	ldr	r3, [r3, #8]
 8008f24:	4718      	bx	r3
}
 8008f26:	bd70      	pop	{r4, r5, r6, pc}
 8008f28:	2000018c 	.word	0x2000018c

08008f2c <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008f2c:	4770      	bx	lr

08008f2e <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008f2e:	3804      	subs	r0, #4
 8008f30:	4770      	bx	lr

08008f32 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008f32:	4770      	bx	lr

08008f34 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008f34:	68c0      	ldr	r0, [r0, #12]
 8008f36:	6803      	ldr	r3, [r0, #0]
 8008f38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f3a:	4718      	bx	r3

08008f3c <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008f3c:	f1a0 0004 	sub.w	r0, r0, #4
 8008f40:	f7ff bff8 	b.w	8008f34 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008f44 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008f44:	b510      	push	{r4, lr}
 8008f46:	2110      	movs	r1, #16
 8008f48:	4604      	mov	r4, r0
 8008f4a:	f021 f8ca 	bl	802a0e2 <_ZdlPvj>
 8008f4e:	4620      	mov	r0, r4
 8008f50:	bd10      	pop	{r4, pc}

08008f52 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008f52:	f1a0 0004 	sub.w	r0, r0, #4
 8008f56:	e7f5      	b.n	8008f44 <_ZN21Project_InfoPresenterD0Ev>

08008f58 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008f58:	b510      	push	{r4, lr}
 8008f5a:	2200      	movs	r2, #0
 8008f5c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f5e:	4a04      	ldr	r2, [pc, #16]	; (8008f70 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008f60:	60c1      	str	r1, [r0, #12]
 8008f62:	f102 0408 	add.w	r4, r2, #8
 8008f66:	3224      	adds	r2, #36	; 0x24
 8008f68:	6004      	str	r4, [r0, #0]
 8008f6a:	6042      	str	r2, [r0, #4]
}
 8008f6c:	bd10      	pop	{r4, pc}
 8008f6e:	bf00      	nop
 8008f70:	0802ee28 	.word	0x0802ee28

08008f74 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008f74:	4770      	bx	lr
	...

08008f78 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	4b03      	ldr	r3, [pc, #12]	; (8008f88 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008f7c:	6003      	str	r3, [r0, #0]
 8008f7e:	4604      	mov	r4, r0
 8008f80:	f7fe ff74 	bl	8007e6c <_ZN20Project_InfoViewBaseD1Ev>
 8008f84:	4620      	mov	r0, r4
 8008f86:	bd10      	pop	{r4, pc}
 8008f88:	0802ee60 	.word	0x0802ee60

08008f8c <_ZN16Project_InfoViewD0Ev>:
 8008f8c:	b510      	push	{r4, lr}
 8008f8e:	4604      	mov	r4, r0
 8008f90:	f7ff fff2 	bl	8008f78 <_ZN16Project_InfoViewD1Ev>
 8008f94:	4620      	mov	r0, r4
 8008f96:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008f9a:	f021 f8a2 	bl	802a0e2 <_ZdlPvj>
 8008f9e:	4620      	mov	r0, r4
 8008fa0:	bd10      	pop	{r4, pc}
	...

08008fa4 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008fa4:	b510      	push	{r4, lr}
 8008fa6:	4604      	mov	r4, r0
 8008fa8:	f7fe ff88 	bl	8007ebc <_ZN20Project_InfoViewBaseC1Ev>
 8008fac:	4b01      	ldr	r3, [pc, #4]	; (8008fb4 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008fae:	6023      	str	r3, [r4, #0]
}
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	bd10      	pop	{r4, pc}
 8008fb4:	0802ee60 	.word	0x0802ee60

08008fb8 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008fb8:	f7fe bf34 	b.w	8007e24 <_ZN20Project_InfoViewBase11setupScreenEv>

08008fbc <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008fbc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fbe:	4a0a      	ldr	r2, [pc, #40]	; (8008fe8 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008fc0:	4605      	mov	r5, r0
 8008fc2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fc4:	460b      	mov	r3, r1
 8008fc6:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008fca:	2104      	movs	r1, #4
 8008fcc:	f010 f982 	bl	80192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008fd0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008fd4:	f00e f8b8 	bl	8017148 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008fd8:	b92c      	cbnz	r4, 8008fe6 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008fda:	f00c ffcd 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008fde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008fe2:	f7fb b9f1 	b.w	80043c8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008fe6:	bd38      	pop	{r3, r4, r5, pc}
 8008fe8:	0802e8f4 	.word	0x0802e8f4

08008fec <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008fec:	4770      	bx	lr

08008fee <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008fee:	3804      	subs	r0, #4
 8008ff0:	4770      	bx	lr

08008ff2 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008ff2:	4770      	bx	lr

08008ff4 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008ff4:	4770      	bx	lr

08008ff6 <_ZN21Shutting_OffPresenterD0Ev>:
 8008ff6:	b510      	push	{r4, lr}
 8008ff8:	2110      	movs	r1, #16
 8008ffa:	4604      	mov	r4, r0
 8008ffc:	f021 f871 	bl	802a0e2 <_ZdlPvj>
 8009000:	4620      	mov	r0, r4
 8009002:	bd10      	pop	{r4, pc}

08009004 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009004:	f1a0 0004 	sub.w	r0, r0, #4
 8009008:	e7f5      	b.n	8008ff6 <_ZN21Shutting_OffPresenterD0Ev>

0800900a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800900a:	4770      	bx	lr

0800900c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800900c:	b510      	push	{r4, lr}
 800900e:	2200      	movs	r2, #0
 8009010:	6082      	str	r2, [r0, #8]
    : view(v)
 8009012:	4a04      	ldr	r2, [pc, #16]	; (8009024 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009014:	60c1      	str	r1, [r0, #12]
 8009016:	f102 0408 	add.w	r4, r2, #8
 800901a:	3224      	adds	r2, #36	; 0x24
 800901c:	6004      	str	r4, [r0, #0]
 800901e:	6042      	str	r2, [r0, #4]
}
 8009020:	bd10      	pop	{r4, pc}
 8009022:	bf00      	nop
 8009024:	0802ee90 	.word	0x0802ee90

08009028 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009028:	4770      	bx	lr
	...

0800902c <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800902c:	b510      	push	{r4, lr}
 800902e:	4b03      	ldr	r3, [pc, #12]	; (800903c <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009030:	6003      	str	r3, [r0, #0]
 8009032:	4604      	mov	r4, r0
 8009034:	f7ff f910 	bl	8008258 <_ZN20Shutting_OffViewBaseD1Ev>
 8009038:	4620      	mov	r0, r4
 800903a:	bd10      	pop	{r4, pc}
 800903c:	0802eec8 	.word	0x0802eec8

08009040 <_ZN16Shutting_OffViewD0Ev>:
 8009040:	b510      	push	{r4, lr}
 8009042:	4604      	mov	r4, r0
 8009044:	f7ff fff2 	bl	800902c <_ZN16Shutting_OffViewD1Ev>
 8009048:	4620      	mov	r0, r4
 800904a:	2198      	movs	r1, #152	; 0x98
 800904c:	f021 f849 	bl	802a0e2 <_ZdlPvj>
 8009050:	4620      	mov	r0, r4
 8009052:	bd10      	pop	{r4, pc}

08009054 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009054:	b510      	push	{r4, lr}
 8009056:	4604      	mov	r4, r0
 8009058:	f7ff f908 	bl	800826c <_ZN20Shutting_OffViewBaseC1Ev>
 800905c:	4b01      	ldr	r3, [pc, #4]	; (8009064 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800905e:	6023      	str	r3, [r4, #0]
}
 8009060:	4620      	mov	r0, r4
 8009062:	bd10      	pop	{r4, pc}
 8009064:	0802eec8 	.word	0x0802eec8

08009068 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009068:	f7ff b8f7 	b.w	800825a <_ZN20Shutting_OffViewBase11setupScreenEv>

0800906c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800906c:	20f0      	movs	r0, #240	; 0xf0
 800906e:	4770      	bx	lr

08009070 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009070:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009074:	4770      	bx	lr
 8009076:	bf00      	nop

08009078 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009078:	2029      	movs	r0, #41	; 0x29
 800907a:	f7f7 bf2b 	b.w	8000ed4 <LCD_IO_WriteReg>
 800907e:	bf00      	nop

08009080 <ili9341_DisplayOff>:
 8009080:	2028      	movs	r0, #40	; 0x28
 8009082:	f7f7 bf27 	b.w	8000ed4 <LCD_IO_WriteReg>
 8009086:	bf00      	nop

08009088 <ili9341_Init>:
{
 8009088:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800908a:	f7f7 fee9 	bl	8000e60 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800908e:	20ca      	movs	r0, #202	; 0xca
 8009090:	f7f7 ff20 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009094:	20c3      	movs	r0, #195	; 0xc3
 8009096:	f7f7 fef3 	bl	8000e80 <LCD_IO_WriteData>
 800909a:	2008      	movs	r0, #8
 800909c:	f7f7 fef0 	bl	8000e80 <LCD_IO_WriteData>
 80090a0:	2050      	movs	r0, #80	; 0x50
 80090a2:	f7f7 feed 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090a6:	20cf      	movs	r0, #207	; 0xcf
 80090a8:	f7f7 ff14 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090ac:	2000      	movs	r0, #0
 80090ae:	f7f7 fee7 	bl	8000e80 <LCD_IO_WriteData>
 80090b2:	20c1      	movs	r0, #193	; 0xc1
 80090b4:	f7f7 fee4 	bl	8000e80 <LCD_IO_WriteData>
 80090b8:	2030      	movs	r0, #48	; 0x30
 80090ba:	f7f7 fee1 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090be:	20ed      	movs	r0, #237	; 0xed
 80090c0:	f7f7 ff08 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090c4:	2064      	movs	r0, #100	; 0x64
 80090c6:	f7f7 fedb 	bl	8000e80 <LCD_IO_WriteData>
 80090ca:	2003      	movs	r0, #3
 80090cc:	f7f7 fed8 	bl	8000e80 <LCD_IO_WriteData>
 80090d0:	2012      	movs	r0, #18
 80090d2:	f7f7 fed5 	bl	8000e80 <LCD_IO_WriteData>
 80090d6:	2081      	movs	r0, #129	; 0x81
 80090d8:	f7f7 fed2 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090dc:	20e8      	movs	r0, #232	; 0xe8
 80090de:	f7f7 fef9 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090e2:	2085      	movs	r0, #133	; 0x85
 80090e4:	f7f7 fecc 	bl	8000e80 <LCD_IO_WriteData>
 80090e8:	2000      	movs	r0, #0
 80090ea:	f7f7 fec9 	bl	8000e80 <LCD_IO_WriteData>
 80090ee:	2078      	movs	r0, #120	; 0x78
 80090f0:	f7f7 fec6 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090f4:	20cb      	movs	r0, #203	; 0xcb
 80090f6:	f7f7 feed 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090fa:	2039      	movs	r0, #57	; 0x39
 80090fc:	f7f7 fec0 	bl	8000e80 <LCD_IO_WriteData>
 8009100:	202c      	movs	r0, #44	; 0x2c
 8009102:	f7f7 febd 	bl	8000e80 <LCD_IO_WriteData>
 8009106:	2000      	movs	r0, #0
 8009108:	f7f7 feba 	bl	8000e80 <LCD_IO_WriteData>
 800910c:	2034      	movs	r0, #52	; 0x34
 800910e:	f7f7 feb7 	bl	8000e80 <LCD_IO_WriteData>
 8009112:	2002      	movs	r0, #2
 8009114:	f7f7 feb4 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009118:	20f7      	movs	r0, #247	; 0xf7
 800911a:	f7f7 fedb 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800911e:	2020      	movs	r0, #32
 8009120:	f7f7 feae 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009124:	20ea      	movs	r0, #234	; 0xea
 8009126:	f7f7 fed5 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800912a:	2000      	movs	r0, #0
 800912c:	f7f7 fea8 	bl	8000e80 <LCD_IO_WriteData>
 8009130:	2000      	movs	r0, #0
 8009132:	f7f7 fea5 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009136:	20b1      	movs	r0, #177	; 0xb1
 8009138:	f7f7 fecc 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800913c:	2000      	movs	r0, #0
 800913e:	f7f7 fe9f 	bl	8000e80 <LCD_IO_WriteData>
 8009142:	201b      	movs	r0, #27
 8009144:	f7f7 fe9c 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009148:	20b6      	movs	r0, #182	; 0xb6
 800914a:	f7f7 fec3 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800914e:	200a      	movs	r0, #10
 8009150:	f7f7 fe96 	bl	8000e80 <LCD_IO_WriteData>
 8009154:	20a2      	movs	r0, #162	; 0xa2
 8009156:	f7f7 fe93 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800915a:	20c0      	movs	r0, #192	; 0xc0
 800915c:	f7f7 feba 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009160:	2010      	movs	r0, #16
 8009162:	f7f7 fe8d 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009166:	20c1      	movs	r0, #193	; 0xc1
 8009168:	f7f7 feb4 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800916c:	2010      	movs	r0, #16
 800916e:	f7f7 fe87 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009172:	20c5      	movs	r0, #197	; 0xc5
 8009174:	f7f7 feae 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009178:	2045      	movs	r0, #69	; 0x45
 800917a:	f7f7 fe81 	bl	8000e80 <LCD_IO_WriteData>
 800917e:	2015      	movs	r0, #21
 8009180:	f7f7 fe7e 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009184:	20c7      	movs	r0, #199	; 0xc7
 8009186:	f7f7 fea5 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800918a:	2090      	movs	r0, #144	; 0x90
 800918c:	f7f7 fe78 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009190:	2036      	movs	r0, #54	; 0x36
 8009192:	f7f7 fe9f 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009196:	20c8      	movs	r0, #200	; 0xc8
 8009198:	f7f7 fe72 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800919c:	20f2      	movs	r0, #242	; 0xf2
 800919e:	f7f7 fe99 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091a2:	2000      	movs	r0, #0
 80091a4:	f7f7 fe6c 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091a8:	20b0      	movs	r0, #176	; 0xb0
 80091aa:	f7f7 fe93 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091ae:	20c2      	movs	r0, #194	; 0xc2
 80091b0:	f7f7 fe66 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091b4:	20b6      	movs	r0, #182	; 0xb6
 80091b6:	f7f7 fe8d 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091ba:	200a      	movs	r0, #10
 80091bc:	f7f7 fe60 	bl	8000e80 <LCD_IO_WriteData>
 80091c0:	20a7      	movs	r0, #167	; 0xa7
 80091c2:	f7f7 fe5d 	bl	8000e80 <LCD_IO_WriteData>
 80091c6:	2027      	movs	r0, #39	; 0x27
 80091c8:	f7f7 fe5a 	bl	8000e80 <LCD_IO_WriteData>
 80091cc:	2004      	movs	r0, #4
 80091ce:	f7f7 fe57 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091d2:	202a      	movs	r0, #42	; 0x2a
 80091d4:	f7f7 fe7e 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091d8:	2000      	movs	r0, #0
 80091da:	f7f7 fe51 	bl	8000e80 <LCD_IO_WriteData>
 80091de:	2000      	movs	r0, #0
 80091e0:	f7f7 fe4e 	bl	8000e80 <LCD_IO_WriteData>
 80091e4:	2000      	movs	r0, #0
 80091e6:	f7f7 fe4b 	bl	8000e80 <LCD_IO_WriteData>
 80091ea:	20ef      	movs	r0, #239	; 0xef
 80091ec:	f7f7 fe48 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091f0:	202b      	movs	r0, #43	; 0x2b
 80091f2:	f7f7 fe6f 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091f6:	2000      	movs	r0, #0
 80091f8:	f7f7 fe42 	bl	8000e80 <LCD_IO_WriteData>
 80091fc:	2000      	movs	r0, #0
 80091fe:	f7f7 fe3f 	bl	8000e80 <LCD_IO_WriteData>
 8009202:	2001      	movs	r0, #1
 8009204:	f7f7 fe3c 	bl	8000e80 <LCD_IO_WriteData>
 8009208:	203f      	movs	r0, #63	; 0x3f
 800920a:	f7f7 fe39 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800920e:	20f6      	movs	r0, #246	; 0xf6
 8009210:	f7f7 fe60 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009214:	2001      	movs	r0, #1
 8009216:	f7f7 fe33 	bl	8000e80 <LCD_IO_WriteData>
 800921a:	2000      	movs	r0, #0
 800921c:	f7f7 fe30 	bl	8000e80 <LCD_IO_WriteData>
 8009220:	2006      	movs	r0, #6
 8009222:	f7f7 fe2d 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009226:	202c      	movs	r0, #44	; 0x2c
 8009228:	f7f7 fe54 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800922c:	20c8      	movs	r0, #200	; 0xc8
 800922e:	f7f7 feb9 	bl	8000fa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009232:	2026      	movs	r0, #38	; 0x26
 8009234:	f7f7 fe4e 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009238:	2001      	movs	r0, #1
 800923a:	f7f7 fe21 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800923e:	20e0      	movs	r0, #224	; 0xe0
 8009240:	f7f7 fe48 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009244:	200f      	movs	r0, #15
 8009246:	f7f7 fe1b 	bl	8000e80 <LCD_IO_WriteData>
 800924a:	2029      	movs	r0, #41	; 0x29
 800924c:	f7f7 fe18 	bl	8000e80 <LCD_IO_WriteData>
 8009250:	2024      	movs	r0, #36	; 0x24
 8009252:	f7f7 fe15 	bl	8000e80 <LCD_IO_WriteData>
 8009256:	200c      	movs	r0, #12
 8009258:	f7f7 fe12 	bl	8000e80 <LCD_IO_WriteData>
 800925c:	200e      	movs	r0, #14
 800925e:	f7f7 fe0f 	bl	8000e80 <LCD_IO_WriteData>
 8009262:	2009      	movs	r0, #9
 8009264:	f7f7 fe0c 	bl	8000e80 <LCD_IO_WriteData>
 8009268:	204e      	movs	r0, #78	; 0x4e
 800926a:	f7f7 fe09 	bl	8000e80 <LCD_IO_WriteData>
 800926e:	2078      	movs	r0, #120	; 0x78
 8009270:	f7f7 fe06 	bl	8000e80 <LCD_IO_WriteData>
 8009274:	203c      	movs	r0, #60	; 0x3c
 8009276:	f7f7 fe03 	bl	8000e80 <LCD_IO_WriteData>
 800927a:	2009      	movs	r0, #9
 800927c:	f7f7 fe00 	bl	8000e80 <LCD_IO_WriteData>
 8009280:	2013      	movs	r0, #19
 8009282:	f7f7 fdfd 	bl	8000e80 <LCD_IO_WriteData>
 8009286:	2005      	movs	r0, #5
 8009288:	f7f7 fdfa 	bl	8000e80 <LCD_IO_WriteData>
 800928c:	2017      	movs	r0, #23
 800928e:	f7f7 fdf7 	bl	8000e80 <LCD_IO_WriteData>
 8009292:	2011      	movs	r0, #17
 8009294:	f7f7 fdf4 	bl	8000e80 <LCD_IO_WriteData>
 8009298:	2000      	movs	r0, #0
 800929a:	f7f7 fdf1 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800929e:	20e1      	movs	r0, #225	; 0xe1
 80092a0:	f7f7 fe18 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80092a4:	2000      	movs	r0, #0
 80092a6:	f7f7 fdeb 	bl	8000e80 <LCD_IO_WriteData>
 80092aa:	2016      	movs	r0, #22
 80092ac:	f7f7 fde8 	bl	8000e80 <LCD_IO_WriteData>
 80092b0:	201b      	movs	r0, #27
 80092b2:	f7f7 fde5 	bl	8000e80 <LCD_IO_WriteData>
 80092b6:	2004      	movs	r0, #4
 80092b8:	f7f7 fde2 	bl	8000e80 <LCD_IO_WriteData>
 80092bc:	2011      	movs	r0, #17
 80092be:	f7f7 fddf 	bl	8000e80 <LCD_IO_WriteData>
 80092c2:	2007      	movs	r0, #7
 80092c4:	f7f7 fddc 	bl	8000e80 <LCD_IO_WriteData>
 80092c8:	2031      	movs	r0, #49	; 0x31
 80092ca:	f7f7 fdd9 	bl	8000e80 <LCD_IO_WriteData>
 80092ce:	2033      	movs	r0, #51	; 0x33
 80092d0:	f7f7 fdd6 	bl	8000e80 <LCD_IO_WriteData>
 80092d4:	2042      	movs	r0, #66	; 0x42
 80092d6:	f7f7 fdd3 	bl	8000e80 <LCD_IO_WriteData>
 80092da:	2005      	movs	r0, #5
 80092dc:	f7f7 fdd0 	bl	8000e80 <LCD_IO_WriteData>
 80092e0:	200c      	movs	r0, #12
 80092e2:	f7f7 fdcd 	bl	8000e80 <LCD_IO_WriteData>
 80092e6:	200a      	movs	r0, #10
 80092e8:	f7f7 fdca 	bl	8000e80 <LCD_IO_WriteData>
 80092ec:	2028      	movs	r0, #40	; 0x28
 80092ee:	f7f7 fdc7 	bl	8000e80 <LCD_IO_WriteData>
 80092f2:	202f      	movs	r0, #47	; 0x2f
 80092f4:	f7f7 fdc4 	bl	8000e80 <LCD_IO_WriteData>
 80092f8:	200f      	movs	r0, #15
 80092fa:	f7f7 fdc1 	bl	8000e80 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80092fe:	2011      	movs	r0, #17
 8009300:	f7f7 fde8 	bl	8000ed4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009304:	20c8      	movs	r0, #200	; 0xc8
 8009306:	f7f7 fe4d 	bl	8000fa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800930a:	2029      	movs	r0, #41	; 0x29
 800930c:	f7f7 fde2 	bl	8000ed4 <LCD_IO_WriteReg>
}
 8009310:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009314:	202c      	movs	r0, #44	; 0x2c
 8009316:	f7f7 bddd 	b.w	8000ed4 <LCD_IO_WriteReg>
 800931a:	bf00      	nop

0800931c <ili9341_ReadID>:
{
 800931c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800931e:	f7f7 fd9f 	bl	8000e60 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009322:	2103      	movs	r1, #3
 8009324:	20d3      	movs	r0, #211	; 0xd3
 8009326:	f7f7 fdff 	bl	8000f28 <LCD_IO_ReadData>
}
 800932a:	b280      	uxth	r0, r0
 800932c:	bd08      	pop	{r3, pc}
 800932e:	bf00      	nop

08009330 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009330:	221f      	movs	r2, #31
 8009332:	210b      	movs	r1, #11
 8009334:	b2c0      	uxtb	r0, r0
 8009336:	f7f7 bd45 	b.w	8000dc4 <IOE_Write>
 800933a:	bf00      	nop

0800933c <stmpe811_Reset>:
{
 800933c:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800933e:	b2c4      	uxtb	r4, r0
 8009340:	2202      	movs	r2, #2
 8009342:	2103      	movs	r1, #3
 8009344:	4620      	mov	r0, r4
 8009346:	f7f7 fd3d 	bl	8000dc4 <IOE_Write>
  IOE_Delay(10); 
 800934a:	200a      	movs	r0, #10
 800934c:	f7f7 fd86 	bl	8000e5c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009350:	4620      	mov	r0, r4
 8009352:	2200      	movs	r2, #0
 8009354:	2103      	movs	r1, #3
 8009356:	f7f7 fd35 	bl	8000dc4 <IOE_Write>
}
 800935a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800935e:	2002      	movs	r0, #2
 8009360:	f7f7 bd7c 	b.w	8000e5c <IOE_Delay>

08009364 <stmpe811_ReadID>:
{
 8009364:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009366:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009368:	f7f7 fd28 	bl	8000dbc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800936c:	2100      	movs	r1, #0
 800936e:	4620      	mov	r0, r4
 8009370:	f7f7 fd40 	bl	8000df4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009374:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009376:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009378:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800937a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800937c:	f7f7 fd3a 	bl	8000df4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009380:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009384:	b280      	uxth	r0, r0
 8009386:	bd10      	pop	{r4, pc}

08009388 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009388:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800938a:	b2c4      	uxtb	r4, r0
 800938c:	2140      	movs	r1, #64	; 0x40
 800938e:	4620      	mov	r0, r4
 8009390:	f7f7 fd30 	bl	8000df4 <IOE_Read>
  
  if(state > 0)
 8009394:	0603      	lsls	r3, r0, #24
 8009396:	d40b      	bmi.n	80093b0 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009398:	4620      	mov	r0, r4
 800939a:	2201      	movs	r2, #1
 800939c:	214b      	movs	r1, #75	; 0x4b
 800939e:	f7f7 fd11 	bl	8000dc4 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80093a2:	4620      	mov	r0, r4
 80093a4:	2200      	movs	r2, #0
 80093a6:	214b      	movs	r1, #75	; 0x4b
 80093a8:	f7f7 fd0c 	bl	8000dc4 <IOE_Write>
  uint8_t ret = 0;
 80093ac:	2000      	movs	r0, #0
  }
  
  return ret;
}
 80093ae:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80093b0:	214c      	movs	r1, #76	; 0x4c
 80093b2:	4620      	mov	r0, r4
 80093b4:	f7f7 fd1e 	bl	8000df4 <IOE_Read>
      ret = 1;
 80093b8:	3800      	subs	r0, #0
 80093ba:	bf18      	it	ne
 80093bc:	2001      	movne	r0, #1
}
 80093be:	bd10      	pop	{r4, pc}

080093c0 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 80093c0:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80093c2:	210b      	movs	r1, #11
 80093c4:	b2c0      	uxtb	r0, r0
 80093c6:	f7f7 fd15 	bl	8000df4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 80093ca:	f000 001f 	and.w	r0, r0, #31
 80093ce:	bd08      	pop	{r3, pc}

080093d0 <stmpe811_TS_GetXY>:
{
 80093d0:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80093d2:	2304      	movs	r3, #4
{
 80093d4:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80093d6:	b2c4      	uxtb	r4, r0
{
 80093d8:	4615      	mov	r5, r2
 80093da:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80093dc:	eb0d 0203 	add.w	r2, sp, r3
 80093e0:	21d7      	movs	r1, #215	; 0xd7
 80093e2:	4620      	mov	r0, r4
 80093e4:	f7f7 fd22 	bl	8000e2c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80093e8:	9b01      	ldr	r3, [sp, #4]
 80093ea:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80093ec:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80093ee:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80093f2:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80093f4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80093f6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80093f8:	2201      	movs	r2, #1
 80093fa:	214b      	movs	r1, #75	; 0x4b
 80093fc:	f7f7 fce2 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009400:	2200      	movs	r2, #0
 8009402:	214b      	movs	r1, #75	; 0x4b
 8009404:	4620      	mov	r0, r4
 8009406:	f7f7 fcdd 	bl	8000dc4 <IOE_Write>
}
 800940a:	b002      	add	sp, #8
 800940c:	bd70      	pop	{r4, r5, r6, pc}
 800940e:	bf00      	nop

08009410 <stmpe811_TS_Start>:
{
 8009410:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009412:	b2c4      	uxtb	r4, r0
 8009414:	2104      	movs	r1, #4
 8009416:	4620      	mov	r0, r4
 8009418:	f7f7 fcec 	bl	8000df4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800941c:	2104      	movs	r1, #4
 800941e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009422:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009424:	4620      	mov	r0, r4
 8009426:	f7f7 fccd 	bl	8000dc4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800942a:	2117      	movs	r1, #23
 800942c:	4620      	mov	r0, r4
 800942e:	f7f7 fce1 	bl	8000df4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009432:	2117      	movs	r1, #23
 8009434:	f000 020f 	and.w	r2, r0, #15
 8009438:	4620      	mov	r0, r4
 800943a:	f7f7 fcc3 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800943e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009442:	4620      	mov	r0, r4
 8009444:	2104      	movs	r1, #4
 8009446:	f7f7 fcbd 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800944a:	2249      	movs	r2, #73	; 0x49
 800944c:	2120      	movs	r1, #32
 800944e:	4620      	mov	r0, r4
 8009450:	f7f7 fcb8 	bl	8000dc4 <IOE_Write>
  IOE_Delay(2); 
 8009454:	2002      	movs	r0, #2
 8009456:	f7f7 fd01 	bl	8000e5c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800945a:	4620      	mov	r0, r4
 800945c:	2201      	movs	r2, #1
 800945e:	2121      	movs	r1, #33	; 0x21
 8009460:	f7f7 fcb0 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009464:	4620      	mov	r0, r4
 8009466:	229a      	movs	r2, #154	; 0x9a
 8009468:	2141      	movs	r1, #65	; 0x41
 800946a:	f7f7 fcab 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800946e:	4620      	mov	r0, r4
 8009470:	2201      	movs	r2, #1
 8009472:	214a      	movs	r1, #74	; 0x4a
 8009474:	f7f7 fca6 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009478:	4620      	mov	r0, r4
 800947a:	2201      	movs	r2, #1
 800947c:	214b      	movs	r1, #75	; 0x4b
 800947e:	f7f7 fca1 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009482:	4620      	mov	r0, r4
 8009484:	2200      	movs	r2, #0
 8009486:	214b      	movs	r1, #75	; 0x4b
 8009488:	f7f7 fc9c 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800948c:	4620      	mov	r0, r4
 800948e:	2201      	movs	r2, #1
 8009490:	2156      	movs	r1, #86	; 0x56
 8009492:	f7f7 fc97 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009496:	4620      	mov	r0, r4
 8009498:	2201      	movs	r2, #1
 800949a:	2158      	movs	r1, #88	; 0x58
 800949c:	f7f7 fc92 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80094a0:	4620      	mov	r0, r4
 80094a2:	2201      	movs	r2, #1
 80094a4:	2140      	movs	r1, #64	; 0x40
 80094a6:	f7f7 fc8d 	bl	8000dc4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80094aa:	4620      	mov	r0, r4
 80094ac:	22ff      	movs	r2, #255	; 0xff
 80094ae:	210b      	movs	r1, #11
 80094b0:	f7f7 fc88 	bl	8000dc4 <IOE_Write>
}
 80094b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 80094b8:	2002      	movs	r0, #2
 80094ba:	f7f7 bccf 	b.w	8000e5c <IOE_Delay>
 80094be:	bf00      	nop

080094c0 <stmpe811_TS_DisableIT>:
{
 80094c0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80094c2:	b2c4      	uxtb	r4, r0
 80094c4:	2109      	movs	r1, #9
 80094c6:	4620      	mov	r0, r4
 80094c8:	f7f7 fc94 	bl	8000df4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80094cc:	2109      	movs	r1, #9
 80094ce:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80094d2:	4620      	mov	r0, r4
 80094d4:	f7f7 fc76 	bl	8000dc4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80094d8:	210a      	movs	r1, #10
 80094da:	4620      	mov	r0, r4
 80094dc:	f7f7 fc8a 	bl	8000df4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80094e0:	210a      	movs	r1, #10
 80094e2:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80094e6:	4620      	mov	r0, r4
}
 80094e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80094ec:	f7f7 bc6a 	b.w	8000dc4 <IOE_Write>

080094f0 <stmpe811_TS_EnableIT>:
{
 80094f0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80094f2:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80094f4:	f7f7 fc64 	bl	8000dc0 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80094f8:	210a      	movs	r1, #10
 80094fa:	4620      	mov	r0, r4
 80094fc:	f7f7 fc7a 	bl	8000df4 <IOE_Read>
  tmp |= Source; 
 8009500:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009504:	b2c2      	uxtb	r2, r0
 8009506:	210a      	movs	r1, #10
 8009508:	4620      	mov	r0, r4
 800950a:	f7f7 fc5b 	bl	8000dc4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800950e:	2109      	movs	r1, #9
 8009510:	4620      	mov	r0, r4
 8009512:	f7f7 fc6f 	bl	8000df4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009516:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800951a:	b2c2      	uxtb	r2, r0
 800951c:	2109      	movs	r1, #9
 800951e:	4620      	mov	r0, r4
}
 8009520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009524:	f7f7 bc4e 	b.w	8000dc4 <IOE_Write>

08009528 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009528:	4a10      	ldr	r2, [pc, #64]	; (800956c <stmpe811_Init+0x44>)
 800952a:	7813      	ldrb	r3, [r2, #0]
 800952c:	4298      	cmp	r0, r3
 800952e:	d004      	beq.n	800953a <stmpe811_Init+0x12>
 8009530:	7851      	ldrb	r1, [r2, #1]
 8009532:	4288      	cmp	r0, r1
 8009534:	d001      	beq.n	800953a <stmpe811_Init+0x12>
 8009536:	b113      	cbz	r3, 800953e <stmpe811_Init+0x16>
 8009538:	b101      	cbz	r1, 800953c <stmpe811_Init+0x14>
 800953a:	4770      	bx	lr
 800953c:	2301      	movs	r3, #1
{
 800953e:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009540:	b2c4      	uxtb	r4, r0
 8009542:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009544:	f7f7 fc3a 	bl	8000dbc <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009548:	2202      	movs	r2, #2
 800954a:	2103      	movs	r1, #3
 800954c:	4620      	mov	r0, r4
 800954e:	f7f7 fc39 	bl	8000dc4 <IOE_Write>
  IOE_Delay(10); 
 8009552:	200a      	movs	r0, #10
 8009554:	f7f7 fc82 	bl	8000e5c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009558:	4620      	mov	r0, r4
 800955a:	2200      	movs	r2, #0
 800955c:	2103      	movs	r1, #3
 800955e:	f7f7 fc31 	bl	8000dc4 <IOE_Write>
}
 8009562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009566:	2002      	movs	r0, #2
 8009568:	f7f7 bc78 	b.w	8000e5c <IOE_Delay>
 800956c:	20002644 	.word	0x20002644

08009570 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009570:	4b05      	ldr	r3, [pc, #20]	; (8009588 <SystemInit+0x18>)
 8009572:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009576:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800957a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800957e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009582:	6099      	str	r1, [r3, #8]
#endif
}
 8009584:	4770      	bx	lr
 8009586:	bf00      	nop
 8009588:	e000ed00 	.word	0xe000ed00

0800958c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800958c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800958e:	4b0b      	ldr	r3, [pc, #44]	; (80095bc <HAL_Init+0x30>)
 8009590:	681a      	ldr	r2, [r3, #0]
 8009592:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009596:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009598:	681a      	ldr	r2, [r3, #0]
 800959a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800959e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80095a0:	681a      	ldr	r2, [r3, #0]
 80095a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80095a6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80095a8:	2003      	movs	r0, #3
 80095aa:	f000 f82d 	bl	8009608 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80095ae:	2000      	movs	r0, #0
 80095b0:	f7f8 f8cc 	bl	800174c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80095b4:	f7f7 fe4a 	bl	800124c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80095b8:	2000      	movs	r0, #0
 80095ba:	bd08      	pop	{r3, pc}
 80095bc:	40023c00 	.word	0x40023c00

080095c0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80095c0:	4a03      	ldr	r2, [pc, #12]	; (80095d0 <HAL_IncTick+0x10>)
 80095c2:	4b04      	ldr	r3, [pc, #16]	; (80095d4 <HAL_IncTick+0x14>)
 80095c4:	6811      	ldr	r1, [r2, #0]
 80095c6:	781b      	ldrb	r3, [r3, #0]
 80095c8:	440b      	add	r3, r1
 80095ca:	6013      	str	r3, [r2, #0]
}
 80095cc:	4770      	bx	lr
 80095ce:	bf00      	nop
 80095d0:	20002648 	.word	0x20002648
 80095d4:	2000007c 	.word	0x2000007c

080095d8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80095d8:	4b01      	ldr	r3, [pc, #4]	; (80095e0 <HAL_GetTick+0x8>)
 80095da:	6818      	ldr	r0, [r3, #0]
}
 80095dc:	4770      	bx	lr
 80095de:	bf00      	nop
 80095e0:	20002648 	.word	0x20002648

080095e4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80095e4:	b538      	push	{r3, r4, r5, lr}
 80095e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80095e8:	f7ff fff6 	bl	80095d8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80095ec:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80095ee:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80095f0:	d002      	beq.n	80095f8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80095f2:	4b04      	ldr	r3, [pc, #16]	; (8009604 <HAL_Delay+0x20>)
 80095f4:	781b      	ldrb	r3, [r3, #0]
 80095f6:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80095f8:	f7ff ffee 	bl	80095d8 <HAL_GetTick>
 80095fc:	1b43      	subs	r3, r0, r5
 80095fe:	42a3      	cmp	r3, r4
 8009600:	d3fa      	bcc.n	80095f8 <HAL_Delay+0x14>
  {
  }
}
 8009602:	bd38      	pop	{r3, r4, r5, pc}
 8009604:	2000007c 	.word	0x2000007c

08009608 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009608:	4907      	ldr	r1, [pc, #28]	; (8009628 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800960a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800960c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800960e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009612:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009616:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009618:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800961a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800961e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009622:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009624:	4770      	bx	lr
 8009626:	bf00      	nop
 8009628:	e000ed00 	.word	0xe000ed00

0800962c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800962c:	4b1c      	ldr	r3, [pc, #112]	; (80096a0 <HAL_NVIC_SetPriority+0x74>)
 800962e:	68db      	ldr	r3, [r3, #12]
 8009630:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009634:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009636:	f1c3 0e07 	rsb	lr, r3, #7
 800963a:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800963e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009642:	bf28      	it	cs
 8009644:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009648:	f1bc 0f06 	cmp.w	ip, #6
 800964c:	d91b      	bls.n	8009686 <HAL_NVIC_SetPriority+0x5a>
 800964e:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009650:	f04f 3cff 	mov.w	ip, #4294967295
 8009654:	fa0c fc03 	lsl.w	ip, ip, r3
 8009658:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800965c:	f04f 3cff 	mov.w	ip, #4294967295
 8009660:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009664:	ea21 010c 	bic.w	r1, r1, ip
 8009668:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800966a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800966c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009670:	db0c      	blt.n	800968c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009672:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009676:	0109      	lsls	r1, r1, #4
 8009678:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800967c:	b2c9      	uxtb	r1, r1
 800967e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009682:	f85d fb04 	ldr.w	pc, [sp], #4
 8009686:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009688:	4613      	mov	r3, r2
 800968a:	e7e7      	b.n	800965c <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800968c:	4b05      	ldr	r3, [pc, #20]	; (80096a4 <HAL_NVIC_SetPriority+0x78>)
 800968e:	f000 000f 	and.w	r0, r0, #15
 8009692:	0109      	lsls	r1, r1, #4
 8009694:	4403      	add	r3, r0
 8009696:	b2c9      	uxtb	r1, r1
 8009698:	7619      	strb	r1, [r3, #24]
 800969a:	f85d fb04 	ldr.w	pc, [sp], #4
 800969e:	bf00      	nop
 80096a0:	e000ed00 	.word	0xe000ed00
 80096a4:	e000ecfc 	.word	0xe000ecfc

080096a8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80096a8:	2800      	cmp	r0, #0
 80096aa:	db07      	blt.n	80096bc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80096ac:	0941      	lsrs	r1, r0, #5
 80096ae:	4a04      	ldr	r2, [pc, #16]	; (80096c0 <HAL_NVIC_EnableIRQ+0x18>)
 80096b0:	f000 001f 	and.w	r0, r0, #31
 80096b4:	2301      	movs	r3, #1
 80096b6:	4083      	lsls	r3, r0
 80096b8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80096bc:	4770      	bx	lr
 80096be:	bf00      	nop
 80096c0:	e000e100 	.word	0xe000e100

080096c4 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80096c4:	b180      	cbz	r0, 80096e8 <HAL_CRC_Init+0x24>
{
 80096c6:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80096c8:	7943      	ldrb	r3, [r0, #5]
 80096ca:	4604      	mov	r4, r0
 80096cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80096d0:	b11b      	cbz	r3, 80096da <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80096d2:	2301      	movs	r3, #1
 80096d4:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80096d6:	2000      	movs	r0, #0
}
 80096d8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80096da:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80096dc:	f7f7 fdd6 	bl	800128c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80096e0:	2301      	movs	r3, #1
 80096e2:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80096e4:	2000      	movs	r0, #0
}
 80096e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80096e8:	2001      	movs	r0, #1
}
 80096ea:	4770      	bx	lr

080096ec <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80096ec:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80096f0:	2b02      	cmp	r3, #2
 80096f2:	d003      	beq.n	80096fc <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80096f4:	2380      	movs	r3, #128	; 0x80
 80096f6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80096f8:	2001      	movs	r0, #1
 80096fa:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80096fc:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80096fe:	2305      	movs	r3, #5
 8009700:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009704:	6813      	ldr	r3, [r2, #0]
 8009706:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800970a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800970c:	6013      	str	r3, [r2, #0]
}
 800970e:	4770      	bx	lr

08009710 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009710:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009714:	4770      	bx	lr
 8009716:	bf00      	nop

08009718 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800971c:	2200      	movs	r2, #0
 800971e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009720:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009984 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009724:	4e90      	ldr	r6, [pc, #576]	; (8009968 <HAL_GPIO_Init+0x250>)
{
 8009726:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009728:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800972a:	4689      	mov	r9, r1
 800972c:	e005      	b.n	800973a <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800972e:	3301      	adds	r3, #1
 8009730:	2b10      	cmp	r3, #16
 8009732:	f102 0202 	add.w	r2, r2, #2
 8009736:	f000 8095 	beq.w	8009864 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800973a:	2101      	movs	r1, #1
 800973c:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800973e:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009742:	43a1      	bics	r1, r4
 8009744:	d1f3      	bne.n	800972e <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009746:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800974a:	f00c 0103 	and.w	r1, ip, #3
 800974e:	1e4d      	subs	r5, r1, #1
 8009750:	2d01      	cmp	r5, #1
 8009752:	f240 808a 	bls.w	800986a <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009756:	2903      	cmp	r1, #3
 8009758:	f040 80ca 	bne.w	80098f0 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800975c:	4091      	lsls	r1, r2
 800975e:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009760:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009762:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009764:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009766:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800976a:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800976c:	d0df      	beq.n	800972e <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800976e:	2100      	movs	r1, #0
 8009770:	9103      	str	r1, [sp, #12]
 8009772:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009776:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800977a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800977e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009782:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009786:	9103      	str	r1, [sp, #12]
 8009788:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800978a:	f023 0103 	bic.w	r1, r3, #3
 800978e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009792:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009796:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800979a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800979c:	00bf      	lsls	r7, r7, #2
 800979e:	f04f 0e0f 	mov.w	lr, #15
 80097a2:	fa0e fe07 	lsl.w	lr, lr, r7
 80097a6:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80097aa:	4d70      	ldr	r5, [pc, #448]	; (800996c <HAL_GPIO_Init+0x254>)
 80097ac:	42a8      	cmp	r0, r5
 80097ae:	d02e      	beq.n	800980e <HAL_GPIO_Init+0xf6>
 80097b0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80097b4:	42a8      	cmp	r0, r5
 80097b6:	f000 809f 	beq.w	80098f8 <HAL_GPIO_Init+0x1e0>
 80097ba:	4d6d      	ldr	r5, [pc, #436]	; (8009970 <HAL_GPIO_Init+0x258>)
 80097bc:	42a8      	cmp	r0, r5
 80097be:	f000 80a2 	beq.w	8009906 <HAL_GPIO_Init+0x1ee>
 80097c2:	4d6c      	ldr	r5, [pc, #432]	; (8009974 <HAL_GPIO_Init+0x25c>)
 80097c4:	42a8      	cmp	r0, r5
 80097c6:	f000 80a5 	beq.w	8009914 <HAL_GPIO_Init+0x1fc>
 80097ca:	4d6b      	ldr	r5, [pc, #428]	; (8009978 <HAL_GPIO_Init+0x260>)
 80097cc:	42a8      	cmp	r0, r5
 80097ce:	f000 80a8 	beq.w	8009922 <HAL_GPIO_Init+0x20a>
 80097d2:	4d6a      	ldr	r5, [pc, #424]	; (800997c <HAL_GPIO_Init+0x264>)
 80097d4:	42a8      	cmp	r0, r5
 80097d6:	f000 80b2 	beq.w	800993e <HAL_GPIO_Init+0x226>
 80097da:	4d69      	ldr	r5, [pc, #420]	; (8009980 <HAL_GPIO_Init+0x268>)
 80097dc:	42a8      	cmp	r0, r5
 80097de:	f000 80b5 	beq.w	800994c <HAL_GPIO_Init+0x234>
 80097e2:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009988 <HAL_GPIO_Init+0x270>
 80097e6:	4570      	cmp	r0, lr
 80097e8:	f000 80a2 	beq.w	8009930 <HAL_GPIO_Init+0x218>
 80097ec:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800998c <HAL_GPIO_Init+0x274>
 80097f0:	4570      	cmp	r0, lr
 80097f2:	f000 80b2 	beq.w	800995a <HAL_GPIO_Init+0x242>
 80097f6:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009990 <HAL_GPIO_Init+0x278>
 80097fa:	4570      	cmp	r0, lr
 80097fc:	bf0c      	ite	eq
 80097fe:	f04f 0e09 	moveq.w	lr, #9
 8009802:	f04f 0e0a 	movne.w	lr, #10
 8009806:	fa0e f707 	lsl.w	r7, lr, r7
 800980a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800980e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009812:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009814:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009818:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800981c:	bf0c      	ite	eq
 800981e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009820:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009824:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009826:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009828:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800982c:	bf0c      	ite	eq
 800982e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009830:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009834:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009836:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009838:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800983c:	bf0c      	ite	eq
 800983e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009840:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009844:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009846:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009848:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800984c:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009850:	bf0c      	ite	eq
 8009852:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009854:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009858:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800985a:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800985c:	f102 0202 	add.w	r2, r2, #2
 8009860:	f47f af6b 	bne.w	800973a <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009864:	b005      	add	sp, #20
 8009866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800986a:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800986e:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009872:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009876:	2503      	movs	r5, #3
 8009878:	fa05 f802 	lsl.w	r8, r5, r2
 800987c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009880:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009884:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009886:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009888:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800988c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009890:	409f      	lsls	r7, r3
 8009892:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009896:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800989a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800989c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800989e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80098a2:	f8d9 7008 	ldr.w	r7, [r9, #8]
 80098a6:	4097      	lsls	r7, r2
 80098a8:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80098ac:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 80098ae:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80098b0:	fa01 f102 	lsl.w	r1, r1, r2
 80098b4:	f47f af54 	bne.w	8009760 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80098b8:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80098bc:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098c0:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80098c4:	f8de 7020 	ldr.w	r7, [lr, #32]
 80098c8:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098ca:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098ce:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098d2:	fa07 f708 	lsl.w	r7, r7, r8
 80098d6:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098d8:	270f      	movs	r7, #15
 80098da:	fa07 f808 	lsl.w	r8, r7, r8
 80098de:	9f00      	ldr	r7, [sp, #0]
 80098e0:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098e4:	9f01      	ldr	r7, [sp, #4]
 80098e6:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80098ea:	f8ce 7020 	str.w	r7, [lr, #32]
 80098ee:	e737      	b.n	8009760 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80098f0:	2503      	movs	r5, #3
 80098f2:	4095      	lsls	r5, r2
 80098f4:	43ed      	mvns	r5, r5
 80098f6:	e7d1      	b.n	800989c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80098f8:	f04f 0e01 	mov.w	lr, #1
 80098fc:	fa0e f707 	lsl.w	r7, lr, r7
 8009900:	ea48 0807 	orr.w	r8, r8, r7
 8009904:	e783      	b.n	800980e <HAL_GPIO_Init+0xf6>
 8009906:	f04f 0e02 	mov.w	lr, #2
 800990a:	fa0e f707 	lsl.w	r7, lr, r7
 800990e:	ea48 0807 	orr.w	r8, r8, r7
 8009912:	e77c      	b.n	800980e <HAL_GPIO_Init+0xf6>
 8009914:	f04f 0e03 	mov.w	lr, #3
 8009918:	fa0e f707 	lsl.w	r7, lr, r7
 800991c:	ea48 0807 	orr.w	r8, r8, r7
 8009920:	e775      	b.n	800980e <HAL_GPIO_Init+0xf6>
 8009922:	f04f 0e04 	mov.w	lr, #4
 8009926:	fa0e f707 	lsl.w	r7, lr, r7
 800992a:	ea48 0807 	orr.w	r8, r8, r7
 800992e:	e76e      	b.n	800980e <HAL_GPIO_Init+0xf6>
 8009930:	f04f 0e07 	mov.w	lr, #7
 8009934:	fa0e f707 	lsl.w	r7, lr, r7
 8009938:	ea48 0807 	orr.w	r8, r8, r7
 800993c:	e767      	b.n	800980e <HAL_GPIO_Init+0xf6>
 800993e:	f04f 0e05 	mov.w	lr, #5
 8009942:	fa0e f707 	lsl.w	r7, lr, r7
 8009946:	ea48 0807 	orr.w	r8, r8, r7
 800994a:	e760      	b.n	800980e <HAL_GPIO_Init+0xf6>
 800994c:	f04f 0e06 	mov.w	lr, #6
 8009950:	fa0e f707 	lsl.w	r7, lr, r7
 8009954:	ea48 0807 	orr.w	r8, r8, r7
 8009958:	e759      	b.n	800980e <HAL_GPIO_Init+0xf6>
 800995a:	f04f 0e08 	mov.w	lr, #8
 800995e:	fa0e f707 	lsl.w	r7, lr, r7
 8009962:	ea48 0807 	orr.w	r8, r8, r7
 8009966:	e752      	b.n	800980e <HAL_GPIO_Init+0xf6>
 8009968:	40013c00 	.word	0x40013c00
 800996c:	40020000 	.word	0x40020000
 8009970:	40020800 	.word	0x40020800
 8009974:	40020c00 	.word	0x40020c00
 8009978:	40021000 	.word	0x40021000
 800997c:	40021400 	.word	0x40021400
 8009980:	40021800 	.word	0x40021800
 8009984:	40023800 	.word	0x40023800
 8009988:	40021c00 	.word	0x40021c00
 800998c:	40022000 	.word	0x40022000
 8009990:	40022400 	.word	0x40022400

08009994 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009994:	6903      	ldr	r3, [r0, #16]
 8009996:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009998:	bf14      	ite	ne
 800999a:	2001      	movne	r0, #1
 800999c:	2000      	moveq	r0, #0
 800999e:	4770      	bx	lr

080099a0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80099a0:	b902      	cbnz	r2, 80099a4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80099a2:	0409      	lsls	r1, r1, #16
 80099a4:	6181      	str	r1, [r0, #24]
  }
}
 80099a6:	4770      	bx	lr

080099a8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80099a8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80099aa:	ea01 0203 	and.w	r2, r1, r3
 80099ae:	ea21 0103 	bic.w	r1, r1, r3
 80099b2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80099b6:	6181      	str	r1, [r0, #24]
}
 80099b8:	4770      	bx	lr
 80099ba:	bf00      	nop

080099bc <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80099bc:	4770      	bx	lr
 80099be:	bf00      	nop

080099c0 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80099c0:	4a04      	ldr	r2, [pc, #16]	; (80099d4 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80099c2:	6951      	ldr	r1, [r2, #20]
 80099c4:	4201      	tst	r1, r0
 80099c6:	d100      	bne.n	80099ca <HAL_GPIO_EXTI_IRQHandler+0xa>
 80099c8:	4770      	bx	lr
{
 80099ca:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80099cc:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80099ce:	f7ff fff5 	bl	80099bc <HAL_GPIO_EXTI_Callback>
}
 80099d2:	bd08      	pop	{r3, pc}
 80099d4:	40013c00 	.word	0x40013c00

080099d8 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80099d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099dc:	6804      	ldr	r4, [r0, #0]
{
 80099de:	b083      	sub	sp, #12
 80099e0:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099e2:	6823      	ldr	r3, [r4, #0]
{
 80099e4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80099e8:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80099f0:	4606      	mov	r6, r0
 80099f2:	468a      	mov	sl, r1
 80099f4:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099f6:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80099f8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80099fc:	d136      	bne.n	8009a6c <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80099fe:	6965      	ldr	r5, [r4, #20]
 8009a00:	07e8      	lsls	r0, r5, #31
 8009a02:	d5fc      	bpl.n	80099fe <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009a04:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009a08:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009a0a:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009a0e:	d003      	beq.n	8009a18 <I2C_RequestMemoryWrite+0x40>
 8009a10:	e04f      	b.n	8009ab2 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a12:	6961      	ldr	r1, [r4, #20]
 8009a14:	054d      	lsls	r5, r1, #21
 8009a16:	d45d      	bmi.n	8009ad4 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009a18:	6961      	ldr	r1, [r4, #20]
 8009a1a:	078b      	lsls	r3, r1, #30
 8009a1c:	d5f9      	bpl.n	8009a12 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a1e:	2300      	movs	r3, #0
 8009a20:	9301      	str	r3, [sp, #4]
 8009a22:	6963      	ldr	r3, [r4, #20]
 8009a24:	9301      	str	r3, [sp, #4]
 8009a26:	69a3      	ldr	r3, [r4, #24]
 8009a28:	9301      	str	r3, [sp, #4]
 8009a2a:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a2c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009a30:	f040 8088 	bne.w	8009b44 <I2C_RequestMemoryWrite+0x16c>
 8009a34:	6963      	ldr	r3, [r4, #20]
 8009a36:	061a      	lsls	r2, r3, #24
 8009a38:	d464      	bmi.n	8009b04 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a3a:	6963      	ldr	r3, [r4, #20]
 8009a3c:	055b      	lsls	r3, r3, #21
 8009a3e:	d5f9      	bpl.n	8009a34 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a40:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a42:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a46:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a48:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a4a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a4c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a50:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a54:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a56:	f043 0304 	orr.w	r3, r3, #4
 8009a5a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a5c:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009a5e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a60:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009a62:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a66:	d066      	beq.n	8009b36 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009a68:	2001      	movs	r0, #1
 8009a6a:	e01f      	b.n	8009aac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a6c:	6963      	ldr	r3, [r4, #20]
 8009a6e:	07d9      	lsls	r1, r3, #31
 8009a70:	d4c8      	bmi.n	8009a04 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a72:	f7ff fdb1 	bl	80095d8 <HAL_GetTick>
 8009a76:	eba0 000b 	sub.w	r0, r0, fp
 8009a7a:	4581      	cmp	r9, r0
 8009a7c:	d304      	bcc.n	8009a88 <I2C_RequestMemoryWrite+0xb0>
 8009a7e:	f1b9 0f00 	cmp.w	r9, #0
 8009a82:	d001      	beq.n	8009a88 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a84:	6834      	ldr	r4, [r6, #0]
 8009a86:	e7b7      	b.n	80099f8 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a88:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a8a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a8c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a8e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a92:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a96:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a98:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009a9a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a9e:	f042 0220 	orr.w	r2, r2, #32
 8009aa2:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009aa4:	680b      	ldr	r3, [r1, #0]
 8009aa6:	05dc      	lsls	r4, r3, #23
 8009aa8:	d435      	bmi.n	8009b16 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009aaa:	2003      	movs	r0, #3
}
 8009aac:	b003      	add	sp, #12
 8009aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ab2:	6963      	ldr	r3, [r4, #20]
 8009ab4:	0798      	lsls	r0, r3, #30
 8009ab6:	d4b2      	bmi.n	8009a1e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ab8:	6963      	ldr	r3, [r4, #20]
 8009aba:	055a      	lsls	r2, r3, #21
 8009abc:	d40a      	bmi.n	8009ad4 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009abe:	f7ff fd8b 	bl	80095d8 <HAL_GetTick>
 8009ac2:	eba0 000b 	sub.w	r0, r0, fp
 8009ac6:	4581      	cmp	r9, r0
 8009ac8:	d34e      	bcc.n	8009b68 <I2C_RequestMemoryWrite+0x190>
 8009aca:	f1b9 0f00 	cmp.w	r9, #0
 8009ace:	d04b      	beq.n	8009b68 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ad0:	6834      	ldr	r4, [r6, #0]
 8009ad2:	e79a      	b.n	8009a0a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ad4:	6823      	ldr	r3, [r4, #0]
 8009ad6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009ada:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009adc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ade:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ae2:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ae4:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ae6:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ae8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009aec:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009af0:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009af2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009af6:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009afa:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009afc:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009afe:	b003      	add	sp, #12
 8009b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009b04:	f1b8 0f01 	cmp.w	r8, #1
 8009b08:	d109      	bne.n	8009b1e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009b0a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009b0c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009b0e:	6127      	str	r7, [r4, #16]
}
 8009b10:	b003      	add	sp, #12
 8009b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009b16:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b1a:	6433      	str	r3, [r6, #64]	; 0x40
 8009b1c:	e7c5      	b.n	8009aaa <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009b1e:	0a3b      	lsrs	r3, r7, #8
 8009b20:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b22:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009b26:	d12e      	bne.n	8009b86 <I2C_RequestMemoryWrite+0x1ae>
 8009b28:	6963      	ldr	r3, [r4, #20]
 8009b2a:	0619      	lsls	r1, r3, #24
 8009b2c:	d4ed      	bmi.n	8009b0a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b2e:	6963      	ldr	r3, [r4, #20]
 8009b30:	055a      	lsls	r2, r3, #21
 8009b32:	d5f9      	bpl.n	8009b28 <I2C_RequestMemoryWrite+0x150>
 8009b34:	e784      	b.n	8009a40 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b36:	6832      	ldr	r2, [r6, #0]
 8009b38:	6813      	ldr	r3, [r2, #0]
 8009b3a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009b3e:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b40:	6013      	str	r3, [r2, #0]
 8009b42:	e7b3      	b.n	8009aac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b44:	6963      	ldr	r3, [r4, #20]
 8009b46:	061d      	lsls	r5, r3, #24
 8009b48:	d4dc      	bmi.n	8009b04 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b4a:	6963      	ldr	r3, [r4, #20]
 8009b4c:	0559      	lsls	r1, r3, #21
 8009b4e:	f53f af77 	bmi.w	8009a40 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b52:	f7ff fd41 	bl	80095d8 <HAL_GetTick>
 8009b56:	eba0 000b 	sub.w	r0, r0, fp
 8009b5a:	4581      	cmp	r9, r0
 8009b5c:	d325      	bcc.n	8009baa <I2C_RequestMemoryWrite+0x1d2>
 8009b5e:	f1b9 0f00 	cmp.w	r9, #0
 8009b62:	d022      	beq.n	8009baa <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b64:	6834      	ldr	r4, [r6, #0]
 8009b66:	e761      	b.n	8009a2c <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009b68:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009b6a:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009b6c:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009b6e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b72:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009b76:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009b78:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009b7c:	f043 0320 	orr.w	r3, r3, #32
 8009b80:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009b82:	2001      	movs	r0, #1
 8009b84:	e792      	b.n	8009aac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b86:	6963      	ldr	r3, [r4, #20]
 8009b88:	061b      	lsls	r3, r3, #24
 8009b8a:	d4be      	bmi.n	8009b0a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b8c:	6963      	ldr	r3, [r4, #20]
 8009b8e:	0558      	lsls	r0, r3, #21
 8009b90:	f53f af56 	bmi.w	8009a40 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b94:	f7ff fd20 	bl	80095d8 <HAL_GetTick>
 8009b98:	eba0 000b 	sub.w	r0, r0, fp
 8009b9c:	4581      	cmp	r9, r0
 8009b9e:	d304      	bcc.n	8009baa <I2C_RequestMemoryWrite+0x1d2>
 8009ba0:	f1b9 0f00 	cmp.w	r9, #0
 8009ba4:	d001      	beq.n	8009baa <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ba6:	6834      	ldr	r4, [r6, #0]
 8009ba8:	e7bb      	b.n	8009b22 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009baa:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009bac:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009bae:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009bb0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009bb4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009bb8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009bba:	4313      	orrs	r3, r2
 8009bbc:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009bbe:	e74d      	b.n	8009a5c <I2C_RequestMemoryWrite+0x84>

08009bc0 <I2C_RequestMemoryRead>:
{
 8009bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009bc4:	6804      	ldr	r4, [r0, #0]
{
 8009bc6:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009bc8:	6823      	ldr	r3, [r4, #0]
 8009bca:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009bce:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bd0:	6823      	ldr	r3, [r4, #0]
{
 8009bd2:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bd4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009bd8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009bdc:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009be0:	6023      	str	r3, [r4, #0]
{
 8009be2:	4606      	mov	r6, r0
 8009be4:	468b      	mov	fp, r1
 8009be6:	4617      	mov	r7, r2
 8009be8:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bec:	d13a      	bne.n	8009c64 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009bee:	6965      	ldr	r5, [r4, #20]
 8009bf0:	07eb      	lsls	r3, r5, #31
 8009bf2:	d5fc      	bpl.n	8009bee <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009bf4:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009bf8:	6123      	str	r3, [r4, #16]
 8009bfa:	fa5f fb8b 	uxtb.w	fp, fp
 8009bfe:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c02:	d003      	beq.n	8009c0c <I2C_RequestMemoryRead+0x4c>
 8009c04:	e069      	b.n	8009cda <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c06:	6965      	ldr	r5, [r4, #20]
 8009c08:	056a      	lsls	r2, r5, #21
 8009c0a:	d44e      	bmi.n	8009caa <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c0c:	6965      	ldr	r5, [r4, #20]
 8009c0e:	07a9      	lsls	r1, r5, #30
 8009c10:	d5f9      	bpl.n	8009c06 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009c12:	2300      	movs	r3, #0
 8009c14:	9301      	str	r3, [sp, #4]
 8009c16:	6963      	ldr	r3, [r4, #20]
 8009c18:	9301      	str	r3, [sp, #4]
 8009c1a:	69a3      	ldr	r3, [r4, #24]
 8009c1c:	9301      	str	r3, [sp, #4]
 8009c1e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c20:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c24:	f040 80bd 	bne.w	8009da2 <I2C_RequestMemoryRead+0x1e2>
 8009c28:	6963      	ldr	r3, [r4, #20]
 8009c2a:	0618      	lsls	r0, r3, #24
 8009c2c:	d468      	bmi.n	8009d00 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c2e:	6963      	ldr	r3, [r4, #20]
 8009c30:	0559      	lsls	r1, r3, #21
 8009c32:	d5f9      	bpl.n	8009c28 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c34:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c36:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c3a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c3c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c3e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c40:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c44:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009c48:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009c4a:	f043 0304 	orr.w	r3, r3, #4
 8009c4e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c50:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009c52:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c54:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009c56:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c5a:	d070      	beq.n	8009d3e <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009c5c:	2001      	movs	r0, #1
}
 8009c5e:	b003      	add	sp, #12
 8009c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c64:	6963      	ldr	r3, [r4, #20]
 8009c66:	07dd      	lsls	r5, r3, #31
 8009c68:	d4c4      	bmi.n	8009bf4 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c6a:	f7ff fcb5 	bl	80095d8 <HAL_GetTick>
 8009c6e:	eba0 0009 	sub.w	r0, r0, r9
 8009c72:	4582      	cmp	sl, r0
 8009c74:	d304      	bcc.n	8009c80 <I2C_RequestMemoryRead+0xc0>
 8009c76:	f1ba 0f00 	cmp.w	sl, #0
 8009c7a:	d001      	beq.n	8009c80 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c7c:	6834      	ldr	r4, [r6, #0]
 8009c7e:	e7b3      	b.n	8009be8 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c80:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c82:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c84:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c86:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c8a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c8e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c90:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009c92:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c96:	f042 0220 	orr.w	r2, r2, #32
 8009c9a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c9c:	680b      	ldr	r3, [r1, #0]
 8009c9e:	05dc      	lsls	r4, r3, #23
 8009ca0:	d43d      	bmi.n	8009d1e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009ca2:	2003      	movs	r0, #3
}
 8009ca4:	b003      	add	sp, #12
 8009ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009caa:	6823      	ldr	r3, [r4, #0]
 8009cac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009cb0:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009cb2:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009cb4:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009cb8:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009cba:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009cbc:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009cbe:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009cc2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cc6:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009cc8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ccc:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009cd0:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cd2:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009cd4:	b003      	add	sp, #12
 8009cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009cda:	6963      	ldr	r3, [r4, #20]
 8009cdc:	079b      	lsls	r3, r3, #30
 8009cde:	d498      	bmi.n	8009c12 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ce0:	6963      	ldr	r3, [r4, #20]
 8009ce2:	0558      	lsls	r0, r3, #21
 8009ce4:	d4e1      	bmi.n	8009caa <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ce6:	f7ff fc77 	bl	80095d8 <HAL_GetTick>
 8009cea:	eba0 0009 	sub.w	r0, r0, r9
 8009cee:	4582      	cmp	sl, r0
 8009cf0:	f0c0 808f 	bcc.w	8009e12 <I2C_RequestMemoryRead+0x252>
 8009cf4:	f1ba 0f00 	cmp.w	sl, #0
 8009cf8:	f000 808b 	beq.w	8009e12 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009cfc:	6834      	ldr	r4, [r6, #0]
 8009cfe:	e77e      	b.n	8009bfe <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009d00:	f1b8 0f01 	cmp.w	r8, #1
 8009d04:	d10f      	bne.n	8009d26 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009d06:	b2ff      	uxtb	r7, r7
 8009d08:	6127      	str	r7, [r4, #16]
 8009d0a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d0e:	d16e      	bne.n	8009dee <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d10:	6963      	ldr	r3, [r4, #20]
 8009d12:	061b      	lsls	r3, r3, #24
 8009d14:	d41a      	bmi.n	8009d4c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d16:	6963      	ldr	r3, [r4, #20]
 8009d18:	055f      	lsls	r7, r3, #21
 8009d1a:	d5f9      	bpl.n	8009d10 <I2C_RequestMemoryRead+0x150>
 8009d1c:	e78a      	b.n	8009c34 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009d1e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009d22:	6433      	str	r3, [r6, #64]	; 0x40
 8009d24:	e7bd      	b.n	8009ca2 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009d26:	0a3b      	lsrs	r3, r7, #8
 8009d28:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d2a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d2e:	d17e      	bne.n	8009e2e <I2C_RequestMemoryRead+0x26e>
 8009d30:	6963      	ldr	r3, [r4, #20]
 8009d32:	061d      	lsls	r5, r3, #24
 8009d34:	d4e7      	bmi.n	8009d06 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d36:	6963      	ldr	r3, [r4, #20]
 8009d38:	0558      	lsls	r0, r3, #21
 8009d3a:	d5f9      	bpl.n	8009d30 <I2C_RequestMemoryRead+0x170>
 8009d3c:	e77a      	b.n	8009c34 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d3e:	6832      	ldr	r2, [r6, #0]
 8009d40:	6813      	ldr	r3, [r2, #0]
 8009d42:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009d46:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d48:	6013      	str	r3, [r2, #0]
 8009d4a:	e7ab      	b.n	8009ca4 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d4c:	6823      	ldr	r3, [r4, #0]
 8009d4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009d52:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009d54:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d58:	d113      	bne.n	8009d82 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d5a:	6963      	ldr	r3, [r4, #20]
 8009d5c:	07d8      	lsls	r0, r3, #31
 8009d5e:	d5fc      	bpl.n	8009d5a <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009d60:	f04b 0301 	orr.w	r3, fp, #1
 8009d64:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009d66:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d6a:	d003      	beq.n	8009d74 <I2C_RequestMemoryRead+0x1b4>
 8009d6c:	e02b      	b.n	8009dc6 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d6e:	6963      	ldr	r3, [r4, #20]
 8009d70:	055b      	lsls	r3, r3, #21
 8009d72:	d49a      	bmi.n	8009caa <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009d74:	6963      	ldr	r3, [r4, #20]
 8009d76:	43db      	mvns	r3, r3
 8009d78:	f013 0302 	ands.w	r3, r3, #2
 8009d7c:	d1f7      	bne.n	8009d6e <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009d7e:	4618      	mov	r0, r3
 8009d80:	e790      	b.n	8009ca4 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d82:	6963      	ldr	r3, [r4, #20]
 8009d84:	07d9      	lsls	r1, r3, #31
 8009d86:	d4eb      	bmi.n	8009d60 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d88:	f7ff fc26 	bl	80095d8 <HAL_GetTick>
 8009d8c:	eba0 0009 	sub.w	r0, r0, r9
 8009d90:	4582      	cmp	sl, r0
 8009d92:	f4ff af75 	bcc.w	8009c80 <I2C_RequestMemoryRead+0xc0>
 8009d96:	f1ba 0f00 	cmp.w	sl, #0
 8009d9a:	f43f af71 	beq.w	8009c80 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009d9e:	6834      	ldr	r4, [r6, #0]
 8009da0:	e7d8      	b.n	8009d54 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009da2:	6963      	ldr	r3, [r4, #20]
 8009da4:	061a      	lsls	r2, r3, #24
 8009da6:	d4ab      	bmi.n	8009d00 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009da8:	6963      	ldr	r3, [r4, #20]
 8009daa:	055d      	lsls	r5, r3, #21
 8009dac:	f53f af42 	bmi.w	8009c34 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009db0:	f7ff fc12 	bl	80095d8 <HAL_GetTick>
 8009db4:	eba0 0009 	sub.w	r0, r0, r9
 8009db8:	4582      	cmp	sl, r0
 8009dba:	d34b      	bcc.n	8009e54 <I2C_RequestMemoryRead+0x294>
 8009dbc:	f1ba 0f00 	cmp.w	sl, #0
 8009dc0:	d048      	beq.n	8009e54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009dc2:	6834      	ldr	r4, [r6, #0]
 8009dc4:	e72c      	b.n	8009c20 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009dc6:	6963      	ldr	r3, [r4, #20]
 8009dc8:	43db      	mvns	r3, r3
 8009dca:	f013 0302 	ands.w	r3, r3, #2
 8009dce:	d0d6      	beq.n	8009d7e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009dd0:	6963      	ldr	r3, [r4, #20]
 8009dd2:	055a      	lsls	r2, r3, #21
 8009dd4:	f53f af69 	bmi.w	8009caa <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009dd8:	f7ff fbfe 	bl	80095d8 <HAL_GetTick>
 8009ddc:	eba0 0009 	sub.w	r0, r0, r9
 8009de0:	4582      	cmp	sl, r0
 8009de2:	d316      	bcc.n	8009e12 <I2C_RequestMemoryRead+0x252>
 8009de4:	f1ba 0f00 	cmp.w	sl, #0
 8009de8:	d013      	beq.n	8009e12 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009dea:	6834      	ldr	r4, [r6, #0]
 8009dec:	e7bb      	b.n	8009d66 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009dee:	6963      	ldr	r3, [r4, #20]
 8009df0:	061d      	lsls	r5, r3, #24
 8009df2:	d4ab      	bmi.n	8009d4c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009df4:	6963      	ldr	r3, [r4, #20]
 8009df6:	055a      	lsls	r2, r3, #21
 8009df8:	f53f af1c 	bmi.w	8009c34 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009dfc:	f7ff fbec 	bl	80095d8 <HAL_GetTick>
 8009e00:	eba0 0009 	sub.w	r0, r0, r9
 8009e04:	4582      	cmp	sl, r0
 8009e06:	d325      	bcc.n	8009e54 <I2C_RequestMemoryRead+0x294>
 8009e08:	f1ba 0f00 	cmp.w	sl, #0
 8009e0c:	d022      	beq.n	8009e54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e0e:	6834      	ldr	r4, [r6, #0]
 8009e10:	e77b      	b.n	8009d0a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009e12:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009e14:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009e16:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009e18:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009e1c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009e20:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e22:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009e26:	f043 0320 	orr.w	r3, r3, #32
 8009e2a:	6433      	str	r3, [r6, #64]	; 0x40
 8009e2c:	e716      	b.n	8009c5c <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e2e:	6963      	ldr	r3, [r4, #20]
 8009e30:	0619      	lsls	r1, r3, #24
 8009e32:	f53f af68 	bmi.w	8009d06 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e36:	6963      	ldr	r3, [r4, #20]
 8009e38:	055b      	lsls	r3, r3, #21
 8009e3a:	f53f aefb 	bmi.w	8009c34 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e3e:	f7ff fbcb 	bl	80095d8 <HAL_GetTick>
 8009e42:	eba0 0009 	sub.w	r0, r0, r9
 8009e46:	4582      	cmp	sl, r0
 8009e48:	d304      	bcc.n	8009e54 <I2C_RequestMemoryRead+0x294>
 8009e4a:	f1ba 0f00 	cmp.w	sl, #0
 8009e4e:	d001      	beq.n	8009e54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e50:	6834      	ldr	r4, [r6, #0]
 8009e52:	e76a      	b.n	8009d2a <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e54:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e56:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e58:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e5a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e5e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e62:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009e64:	4313      	orrs	r3, r2
 8009e66:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009e68:	e6f2      	b.n	8009c50 <I2C_RequestMemoryRead+0x90>
 8009e6a:	bf00      	nop

08009e6c <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009e6c:	2800      	cmp	r0, #0
 8009e6e:	f000 80b9 	beq.w	8009fe4 <HAL_I2C_Init+0x178>
{
 8009e72:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009e74:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009e78:	4604      	mov	r4, r0
 8009e7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009e7e:	2b00      	cmp	r3, #0
 8009e80:	f000 8098 	beq.w	8009fb4 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009e84:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009e86:	2224      	movs	r2, #36	; 0x24
 8009e88:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009e8c:	681a      	ldr	r2, [r3, #0]
 8009e8e:	f022 0201 	bic.w	r2, r2, #1
 8009e92:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009e94:	681a      	ldr	r2, [r3, #0]
 8009e96:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009e9a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009e9c:	681a      	ldr	r2, [r3, #0]
 8009e9e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009ea2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009ea4:	f001 fe70 	bl	800bb88 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009ea8:	6865      	ldr	r5, [r4, #4]
 8009eaa:	4b4f      	ldr	r3, [pc, #316]	; (8009fe8 <HAL_I2C_Init+0x17c>)
 8009eac:	429d      	cmp	r5, r3
 8009eae:	d84f      	bhi.n	8009f50 <HAL_I2C_Init+0xe4>
 8009eb0:	4b4e      	ldr	r3, [pc, #312]	; (8009fec <HAL_I2C_Init+0x180>)
 8009eb2:	4298      	cmp	r0, r3
 8009eb4:	d97c      	bls.n	8009fb0 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009eb6:	4b4e      	ldr	r3, [pc, #312]	; (8009ff0 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009eb8:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009eba:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ebe:	1e43      	subs	r3, r0, #1
 8009ec0:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ec4:	6822      	ldr	r2, [r4, #0]
 8009ec6:	6851      	ldr	r1, [r2, #4]
 8009ec8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ecc:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009ed0:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ed2:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ed4:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ed8:	f10c 0c01 	add.w	ip, ip, #1
 8009edc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ee0:	ea41 010c 	orr.w	r1, r1, ip
 8009ee4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ee6:	69d1      	ldr	r1, [r2, #28]
 8009ee8:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009eec:	3301      	adds	r3, #1
 8009eee:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009ef2:	4203      	tst	r3, r0
 8009ef4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009ef8:	d161      	bne.n	8009fbe <HAL_I2C_Init+0x152>
 8009efa:	2304      	movs	r3, #4
 8009efc:	430b      	orrs	r3, r1
 8009efe:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009f00:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009f04:	6811      	ldr	r1, [r2, #0]
 8009f06:	4303      	orrs	r3, r0
 8009f08:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009f0c:	430b      	orrs	r3, r1
 8009f0e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009f10:	6891      	ldr	r1, [r2, #8]
 8009f12:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009f16:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009f1a:	4303      	orrs	r3, r0
 8009f1c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f20:	430b      	orrs	r3, r1
 8009f22:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009f24:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009f28:	68d1      	ldr	r1, [r2, #12]
 8009f2a:	4303      	orrs	r3, r0
 8009f2c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f30:	430b      	orrs	r3, r1
 8009f32:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009f34:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f36:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009f38:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009f3c:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009f3e:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f40:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009f42:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009f46:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f48:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009f4c:	4618      	mov	r0, r3
}
 8009f4e:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009f50:	4b28      	ldr	r3, [pc, #160]	; (8009ff4 <HAL_I2C_Init+0x188>)
 8009f52:	4298      	cmp	r0, r3
 8009f54:	d92c      	bls.n	8009fb0 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f56:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009f58:	4b25      	ldr	r3, [pc, #148]	; (8009ff0 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f5a:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009f5c:	4e26      	ldr	r6, [pc, #152]	; (8009ff8 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009f5e:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f62:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009f66:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009f6a:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009f6c:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009f70:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009f74:	fb01 f303 	mul.w	r3, r1, r3
 8009f78:	fba6 6303 	umull	r6, r3, r6, r3
 8009f7c:	6a11      	ldr	r1, [r2, #32]
 8009f7e:	099b      	lsrs	r3, r3, #6
 8009f80:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009f84:	3301      	adds	r3, #1
 8009f86:	430b      	orrs	r3, r1
 8009f88:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009f8a:	69d1      	ldr	r1, [r2, #28]
 8009f8c:	68a3      	ldr	r3, [r4, #8]
 8009f8e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009f92:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f96:	b9ab      	cbnz	r3, 8009fc4 <HAL_I2C_Init+0x158>
 8009f98:	1e43      	subs	r3, r0, #1
 8009f9a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009f9e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009fa2:	3301      	adds	r3, #1
 8009fa4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009fa8:	b1d3      	cbz	r3, 8009fe0 <HAL_I2C_Init+0x174>
 8009faa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009fae:	e7a5      	b.n	8009efc <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009fb0:	2001      	movs	r0, #1
}
 8009fb2:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009fb4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009fb8:	f7f7 f982 	bl	80012c0 <HAL_I2C_MspInit>
 8009fbc:	e762      	b.n	8009e84 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009fbe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009fc2:	e79b      	b.n	8009efc <HAL_I2C_Init+0x90>
 8009fc4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009fc8:	1e43      	subs	r3, r0, #1
 8009fca:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009fce:	fbb3 f3f5 	udiv	r3, r3, r5
 8009fd2:	3301      	adds	r3, #1
 8009fd4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009fd8:	b113      	cbz	r3, 8009fe0 <HAL_I2C_Init+0x174>
 8009fda:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009fde:	e78d      	b.n	8009efc <HAL_I2C_Init+0x90>
 8009fe0:	2301      	movs	r3, #1
 8009fe2:	e78b      	b.n	8009efc <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009fe4:	2001      	movs	r0, #1
}
 8009fe6:	4770      	bx	lr
 8009fe8:	000186a0 	.word	0x000186a0
 8009fec:	001e847f 	.word	0x001e847f
 8009ff0:	431bde83 	.word	0x431bde83
 8009ff4:	003d08ff 	.word	0x003d08ff
 8009ff8:	10624dd3 	.word	0x10624dd3

08009ffc <HAL_I2C_Mem_Write>:
{
 8009ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a000:	4604      	mov	r4, r0
 800a002:	b083      	sub	sp, #12
 800a004:	4699      	mov	r9, r3
 800a006:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a00a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a00c:	460f      	mov	r7, r1
 800a00e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a010:	f7ff fae2 	bl	80095d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a014:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a018:	2b20      	cmp	r3, #32
 800a01a:	d004      	beq.n	800a026 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a01c:	2702      	movs	r7, #2
}
 800a01e:	4638      	mov	r0, r7
 800a020:	b003      	add	sp, #12
 800a022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a026:	4605      	mov	r5, r0
 800a028:	e005      	b.n	800a036 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a02a:	f7ff fad5 	bl	80095d8 <HAL_GetTick>
 800a02e:	1b40      	subs	r0, r0, r5
 800a030:	2819      	cmp	r0, #25
 800a032:	f200 80a8 	bhi.w	800a186 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a036:	6820      	ldr	r0, [r4, #0]
 800a038:	6983      	ldr	r3, [r0, #24]
 800a03a:	ea6f 0c03 	mvn.w	ip, r3
 800a03e:	f01c 0b02 	ands.w	fp, ip, #2
 800a042:	d0f2      	beq.n	800a02a <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a044:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a048:	2b01      	cmp	r3, #1
 800a04a:	d0e7      	beq.n	800a01c <HAL_I2C_Mem_Write+0x20>
 800a04c:	2301      	movs	r3, #1
 800a04e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a052:	6803      	ldr	r3, [r0, #0]
 800a054:	07db      	lsls	r3, r3, #31
 800a056:	d572      	bpl.n	800a13e <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a058:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a05a:	6807      	ldr	r7, [r0, #0]
 800a05c:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a060:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a062:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a064:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a066:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a068:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a06c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a070:	2040      	movs	r0, #64	; 0x40
 800a072:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a076:	2000      	movs	r0, #0
 800a078:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a07a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a07e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a080:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a082:	4856      	ldr	r0, [pc, #344]	; (800a1dc <HAL_I2C_Mem_Write+0x1e0>)
 800a084:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a086:	464b      	mov	r3, r9
 800a088:	4642      	mov	r2, r8
 800a08a:	4620      	mov	r0, r4
 800a08c:	f7ff fca4 	bl	80099d8 <I2C_RequestMemoryWrite>
 800a090:	4607      	mov	r7, r0
 800a092:	bb00      	cbnz	r0, 800a0d6 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a094:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a096:	2b00      	cmp	r3, #0
 800a098:	f000 809e 	beq.w	800a1d8 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a09c:	6823      	ldr	r3, [r4, #0]
 800a09e:	1c72      	adds	r2, r6, #1
 800a0a0:	d159      	bne.n	800a156 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a0a2:	695a      	ldr	r2, [r3, #20]
 800a0a4:	0610      	lsls	r0, r2, #24
 800a0a6:	d41b      	bmi.n	800a0e0 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0a8:	695a      	ldr	r2, [r3, #20]
 800a0aa:	0551      	lsls	r1, r2, #21
 800a0ac:	d5f9      	bpl.n	800a0a2 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0ae:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0b0:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0b4:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0b6:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0b8:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0ba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a0be:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a0c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a0c4:	f043 0304 	orr.w	r3, r3, #4
 800a0c8:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a0cc:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0ce:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a0d0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0d4:	d038      	beq.n	800a148 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a0d6:	2701      	movs	r7, #1
}
 800a0d8:	4638      	mov	r0, r7
 800a0da:	b003      	add	sp, #12
 800a0dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0e0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a0e4:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0e8:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a0ea:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a0f2:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a0f4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a0f6:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a0f8:	3a01      	subs	r2, #1
 800a0fa:	b292      	uxth	r2, r2
 800a0fc:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a0fe:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a100:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a102:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a104:	0740      	lsls	r0, r0, #29
 800a106:	d517      	bpl.n	800a138 <HAL_I2C_Mem_Write+0x13c>
 800a108:	b942      	cbnz	r2, 800a11c <HAL_I2C_Mem_Write+0x120>
 800a10a:	1c72      	adds	r2, r6, #1
 800a10c:	d156      	bne.n	800a1bc <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a10e:	695a      	ldr	r2, [r3, #20]
 800a110:	0750      	lsls	r0, r2, #29
 800a112:	d446      	bmi.n	800a1a2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a114:	695a      	ldr	r2, [r3, #20]
 800a116:	0551      	lsls	r1, r2, #21
 800a118:	d5f9      	bpl.n	800a10e <HAL_I2C_Mem_Write+0x112>
 800a11a:	e7c8      	b.n	800a0ae <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a11c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a120:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a122:	f10c 0102 	add.w	r1, ip, #2
 800a126:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a128:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a12a:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a12e:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a130:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a132:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a134:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a136:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a138:	2a00      	cmp	r2, #0
 800a13a:	d1b0      	bne.n	800a09e <HAL_I2C_Mem_Write+0xa2>
 800a13c:	e7e5      	b.n	800a10a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a13e:	6803      	ldr	r3, [r0, #0]
 800a140:	f043 0301 	orr.w	r3, r3, #1
 800a144:	6003      	str	r3, [r0, #0]
 800a146:	e787      	b.n	800a058 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a148:	6822      	ldr	r2, [r4, #0]
 800a14a:	6813      	ldr	r3, [r2, #0]
 800a14c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a150:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a152:	6013      	str	r3, [r2, #0]
 800a154:	e763      	b.n	800a01e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a156:	695a      	ldr	r2, [r3, #20]
 800a158:	0612      	lsls	r2, r2, #24
 800a15a:	d4c1      	bmi.n	800a0e0 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a15c:	695a      	ldr	r2, [r3, #20]
 800a15e:	0551      	lsls	r1, r2, #21
 800a160:	d4a5      	bmi.n	800a0ae <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a162:	f7ff fa39 	bl	80095d8 <HAL_GetTick>
 800a166:	1b40      	subs	r0, r0, r5
 800a168:	4286      	cmp	r6, r0
 800a16a:	d301      	bcc.n	800a170 <HAL_I2C_Mem_Write+0x174>
 800a16c:	2e00      	cmp	r6, #0
 800a16e:	d195      	bne.n	800a09c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a170:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a172:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a174:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a176:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a17a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a17e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a180:	4313      	orrs	r3, r2
 800a182:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a184:	e7a1      	b.n	800a0ca <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a186:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a188:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a18c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a190:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a194:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a196:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a19a:	f043 0320 	orr.w	r3, r3, #32
 800a19e:	6423      	str	r3, [r4, #64]	; 0x40
 800a1a0:	e73c      	b.n	800a01c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1a2:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1a4:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a1aa:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1ac:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a1ae:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a1b2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1b6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a1ba:	e730      	b.n	800a01e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a1bc:	695a      	ldr	r2, [r3, #20]
 800a1be:	0752      	lsls	r2, r2, #29
 800a1c0:	d4ef      	bmi.n	800a1a2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1c2:	695a      	ldr	r2, [r3, #20]
 800a1c4:	0551      	lsls	r1, r2, #21
 800a1c6:	f53f af72 	bmi.w	800a0ae <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1ca:	f7ff fa05 	bl	80095d8 <HAL_GetTick>
 800a1ce:	1b40      	subs	r0, r0, r5
 800a1d0:	4286      	cmp	r6, r0
 800a1d2:	d3cd      	bcc.n	800a170 <HAL_I2C_Mem_Write+0x174>
 800a1d4:	2e00      	cmp	r6, #0
 800a1d6:	d0cb      	beq.n	800a170 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a1d8:	6823      	ldr	r3, [r4, #0]
 800a1da:	e796      	b.n	800a10a <HAL_I2C_Mem_Write+0x10e>
 800a1dc:	ffff0000 	.word	0xffff0000

0800a1e0 <HAL_I2C_Mem_Read>:
{
 800a1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1e4:	4604      	mov	r4, r0
 800a1e6:	b087      	sub	sp, #28
 800a1e8:	4699      	mov	r9, r3
 800a1ea:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a1ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a1f0:	460f      	mov	r7, r1
 800a1f2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a1f4:	f7ff f9f0 	bl	80095d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a1f8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a1fc:	2b20      	cmp	r3, #32
 800a1fe:	d004      	beq.n	800a20a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a200:	2702      	movs	r7, #2
}
 800a202:	4638      	mov	r0, r7
 800a204:	b007      	add	sp, #28
 800a206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a20a:	4606      	mov	r6, r0
 800a20c:	e005      	b.n	800a21a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a20e:	f7ff f9e3 	bl	80095d8 <HAL_GetTick>
 800a212:	1b80      	subs	r0, r0, r6
 800a214:	2819      	cmp	r0, #25
 800a216:	f200 80d2 	bhi.w	800a3be <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a21a:	f8d4 c000 	ldr.w	ip, [r4]
 800a21e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a222:	43c0      	mvns	r0, r0
 800a224:	f010 0b02 	ands.w	fp, r0, #2
 800a228:	d0f1      	beq.n	800a20e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a22a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a22e:	2b01      	cmp	r3, #1
 800a230:	d0e6      	beq.n	800a200 <HAL_I2C_Mem_Read+0x20>
 800a232:	2301      	movs	r3, #1
 800a234:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a238:	f8dc 3000 	ldr.w	r3, [ip]
 800a23c:	07d9      	lsls	r1, r3, #31
 800a23e:	d537      	bpl.n	800a2b0 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a240:	f8dc 0000 	ldr.w	r0, [ip]
 800a244:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a248:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a24c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a24e:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a250:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a252:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a256:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a25a:	2040      	movs	r0, #64	; 0x40
 800a25c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a260:	2000      	movs	r0, #0
 800a262:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a264:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a268:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a26a:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a26c:	4893      	ldr	r0, [pc, #588]	; (800a4bc <HAL_I2C_Mem_Read+0x2dc>)
 800a26e:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a270:	4639      	mov	r1, r7
 800a272:	464b      	mov	r3, r9
 800a274:	4642      	mov	r2, r8
 800a276:	4620      	mov	r0, r4
 800a278:	f7ff fca2 	bl	8009bc0 <I2C_RequestMemoryRead>
 800a27c:	4607      	mov	r7, r0
 800a27e:	2800      	cmp	r0, #0
 800a280:	f040 80ab 	bne.w	800a3da <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a284:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a286:	b9d2      	cbnz	r2, 800a2be <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a288:	6823      	ldr	r3, [r4, #0]
 800a28a:	9002      	str	r0, [sp, #8]
 800a28c:	695a      	ldr	r2, [r3, #20]
 800a28e:	9202      	str	r2, [sp, #8]
 800a290:	699a      	ldr	r2, [r3, #24]
 800a292:	9202      	str	r2, [sp, #8]
 800a294:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a296:	681a      	ldr	r2, [r3, #0]
 800a298:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a29c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a29e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a2a0:	2220      	movs	r2, #32
 800a2a2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a2a6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a2ae:	e7a8      	b.n	800a202 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a2b0:	f8dc 3000 	ldr.w	r3, [ip]
 800a2b4:	f043 0301 	orr.w	r3, r3, #1
 800a2b8:	f8cc 3000 	str.w	r3, [ip]
 800a2bc:	e7c0      	b.n	800a240 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a2be:	2a01      	cmp	r2, #1
 800a2c0:	f000 812c 	beq.w	800a51c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a2c4:	2a02      	cmp	r2, #2
 800a2c6:	f000 80bd 	beq.w	800a444 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2ca:	6823      	ldr	r3, [r4, #0]
 800a2cc:	9005      	str	r0, [sp, #20]
 800a2ce:	6959      	ldr	r1, [r3, #20]
 800a2d0:	9105      	str	r1, [sp, #20]
 800a2d2:	6999      	ldr	r1, [r3, #24]
 800a2d4:	9105      	str	r1, [sp, #20]
 800a2d6:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a2d8:	2a03      	cmp	r2, #3
 800a2da:	d849      	bhi.n	800a370 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a2dc:	2a01      	cmp	r2, #1
 800a2de:	f000 80eb 	beq.w	800a4b8 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a2e2:	2a02      	cmp	r2, #2
 800a2e4:	f000 8089 	beq.w	800a3fa <HAL_I2C_Mem_Read+0x21a>
 800a2e8:	1c69      	adds	r1, r5, #1
 800a2ea:	f040 80bb 	bne.w	800a464 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a2ee:	695a      	ldr	r2, [r3, #20]
 800a2f0:	0752      	lsls	r2, r2, #29
 800a2f2:	d5fc      	bpl.n	800a2ee <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2f4:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a2fc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2fe:	691b      	ldr	r3, [r3, #16]
 800a300:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a302:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a304:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a306:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a308:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a30a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a30c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a30e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a310:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a312:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a314:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a316:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a318:	6822      	ldr	r2, [r4, #0]
 800a31a:	f040 80af 	bne.w	800a47c <HAL_I2C_Mem_Read+0x29c>
 800a31e:	6953      	ldr	r3, [r2, #20]
 800a320:	075b      	lsls	r3, r3, #29
 800a322:	d5fc      	bpl.n	800a31e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a324:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a326:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a328:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a32c:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a32e:	6913      	ldr	r3, [r2, #16]
 800a330:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a332:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a334:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a336:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a338:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a33a:	3b01      	subs	r3, #1
 800a33c:	b29b      	uxth	r3, r3
 800a33e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a340:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a342:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a344:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a348:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a34a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a34e:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a350:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a352:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a354:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a356:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a358:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a35a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a35c:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a35e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a360:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a362:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a364:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a366:	2a00      	cmp	r2, #0
 800a368:	d099      	beq.n	800a29e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a36a:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a36c:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a36e:	d9b5      	bls.n	800a2dc <HAL_I2C_Mem_Read+0xfc>
 800a370:	b95d      	cbnz	r5, 800a38a <HAL_I2C_Mem_Read+0x1aa>
 800a372:	e0c5      	b.n	800a500 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a374:	695a      	ldr	r2, [r3, #20]
 800a376:	06d0      	lsls	r0, r2, #27
 800a378:	f100 80b2 	bmi.w	800a4e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a37c:	f7ff f92c 	bl	80095d8 <HAL_GetTick>
 800a380:	1b80      	subs	r0, r0, r6
 800a382:	4285      	cmp	r5, r0
 800a384:	f0c0 8086 	bcc.w	800a494 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a388:	6823      	ldr	r3, [r4, #0]
 800a38a:	695a      	ldr	r2, [r3, #20]
 800a38c:	0652      	lsls	r2, r2, #25
 800a38e:	d5f1      	bpl.n	800a374 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a390:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a392:	691b      	ldr	r3, [r3, #16]
 800a394:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a396:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a398:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a39a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a39c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a39e:	3b01      	subs	r3, #1
 800a3a0:	b29b      	uxth	r3, r3
 800a3a2:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a3a4:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a3a6:	3a01      	subs	r2, #1
 800a3a8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a3aa:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a3ae:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a3b0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a3b2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a3b6:	d5d6      	bpl.n	800a366 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3b8:	6903      	ldr	r3, [r0, #16]
 800a3ba:	704b      	strb	r3, [r1, #1]
 800a3bc:	e036      	b.n	800a42c <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3be:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3c0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a3c8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a3ce:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3d2:	f043 0320 	orr.w	r3, r3, #32
 800a3d6:	6423      	str	r3, [r4, #64]	; 0x40
 800a3d8:	e712      	b.n	800a200 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a3da:	2701      	movs	r7, #1
}
 800a3dc:	4638      	mov	r0, r7
 800a3de:	b007      	add	sp, #28
 800a3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3e4:	695a      	ldr	r2, [r3, #20]
 800a3e6:	0750      	lsls	r0, r2, #29
 800a3e8:	d40c      	bmi.n	800a404 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3ea:	f7ff f8f5 	bl	80095d8 <HAL_GetTick>
 800a3ee:	1b80      	subs	r0, r0, r6
 800a3f0:	4285      	cmp	r5, r0
 800a3f2:	d34f      	bcc.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
 800a3f4:	2d00      	cmp	r5, #0
 800a3f6:	d04d      	beq.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3f8:	6823      	ldr	r3, [r4, #0]
 800a3fa:	1c69      	adds	r1, r5, #1
 800a3fc:	d1f2      	bne.n	800a3e4 <HAL_I2C_Mem_Read+0x204>
 800a3fe:	695a      	ldr	r2, [r3, #20]
 800a400:	0752      	lsls	r2, r2, #29
 800a402:	d5fc      	bpl.n	800a3fe <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a404:	681a      	ldr	r2, [r3, #0]
 800a406:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a40a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a40c:	691a      	ldr	r2, [r3, #16]
 800a40e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a410:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a412:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a414:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a416:	3b01      	subs	r3, #1
 800a418:	b29b      	uxth	r3, r3
 800a41a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a41c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a41e:	3b01      	subs	r3, #1
 800a420:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a422:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a424:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a426:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a428:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a42a:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a42c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a42e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a430:	3301      	adds	r3, #1
 800a432:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a434:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a436:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a438:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a43a:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a43c:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a43e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a440:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a442:	e790      	b.n	800a366 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a444:	6823      	ldr	r3, [r4, #0]
 800a446:	6819      	ldr	r1, [r3, #0]
 800a448:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a44c:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a44e:	6819      	ldr	r1, [r3, #0]
 800a450:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a454:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a456:	9004      	str	r0, [sp, #16]
 800a458:	6959      	ldr	r1, [r3, #20]
 800a45a:	9104      	str	r1, [sp, #16]
 800a45c:	6999      	ldr	r1, [r3, #24]
 800a45e:	9104      	str	r1, [sp, #16]
 800a460:	9904      	ldr	r1, [sp, #16]
 800a462:	e739      	b.n	800a2d8 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a464:	695a      	ldr	r2, [r3, #20]
 800a466:	0750      	lsls	r0, r2, #29
 800a468:	f53f af44 	bmi.w	800a2f4 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a46c:	f7ff f8b4 	bl	80095d8 <HAL_GetTick>
 800a470:	1b80      	subs	r0, r0, r6
 800a472:	4285      	cmp	r5, r0
 800a474:	d30e      	bcc.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
 800a476:	b16d      	cbz	r5, 800a494 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a478:	6823      	ldr	r3, [r4, #0]
 800a47a:	e735      	b.n	800a2e8 <HAL_I2C_Mem_Read+0x108>
 800a47c:	6953      	ldr	r3, [r2, #20]
 800a47e:	0758      	lsls	r0, r3, #29
 800a480:	f53f af50 	bmi.w	800a324 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a484:	f7ff f8a8 	bl	80095d8 <HAL_GetTick>
 800a488:	1b80      	subs	r0, r0, r6
 800a48a:	4285      	cmp	r5, r0
 800a48c:	d302      	bcc.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
 800a48e:	2d00      	cmp	r5, #0
 800a490:	f47f af41 	bne.w	800a316 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a494:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a496:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a498:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a49a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a49e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a4a4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a4a8:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4aa:	f043 0320 	orr.w	r3, r3, #32
}
 800a4ae:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4b0:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a4b2:	b007      	add	sp, #28
 800a4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4b8:	b95d      	cbnz	r5, 800a4d2 <HAL_I2C_Mem_Read+0x2f2>
 800a4ba:	e02b      	b.n	800a514 <HAL_I2C_Mem_Read+0x334>
 800a4bc:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a4c0:	695a      	ldr	r2, [r3, #20]
 800a4c2:	06d2      	lsls	r2, r2, #27
 800a4c4:	d40c      	bmi.n	800a4e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4c6:	f7ff f887 	bl	80095d8 <HAL_GetTick>
 800a4ca:	1b80      	subs	r0, r0, r6
 800a4cc:	4285      	cmp	r5, r0
 800a4ce:	d3e1      	bcc.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a4d0:	6823      	ldr	r3, [r4, #0]
 800a4d2:	695a      	ldr	r2, [r3, #20]
 800a4d4:	0651      	lsls	r1, r2, #25
 800a4d6:	d5f3      	bpl.n	800a4c0 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a4d8:	691a      	ldr	r2, [r3, #16]
 800a4da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a4dc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a4de:	e7a5      	b.n	800a42c <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4e0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a4e2:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4e6:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a4e8:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4ea:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4ec:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4f0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a4f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a4f6:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a4f8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a4fc:	2701      	movs	r7, #1
 800a4fe:	e680      	b.n	800a202 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a500:	695a      	ldr	r2, [r3, #20]
 800a502:	0652      	lsls	r2, r2, #25
 800a504:	f53f af44 	bmi.w	800a390 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a508:	695a      	ldr	r2, [r3, #20]
 800a50a:	06d1      	lsls	r1, r2, #27
 800a50c:	d4e8      	bmi.n	800a4e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a50e:	f7ff f863 	bl	80095d8 <HAL_GetTick>
 800a512:	e7bf      	b.n	800a494 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a514:	695a      	ldr	r2, [r3, #20]
 800a516:	0650      	lsls	r0, r2, #25
 800a518:	d5f6      	bpl.n	800a508 <HAL_I2C_Mem_Read+0x328>
 800a51a:	e7dd      	b.n	800a4d8 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a51c:	6823      	ldr	r3, [r4, #0]
 800a51e:	6819      	ldr	r1, [r3, #0]
 800a520:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a524:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a526:	9003      	str	r0, [sp, #12]
 800a528:	6959      	ldr	r1, [r3, #20]
 800a52a:	9103      	str	r1, [sp, #12]
 800a52c:	6999      	ldr	r1, [r3, #24]
 800a52e:	9103      	str	r1, [sp, #12]
 800a530:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a532:	6819      	ldr	r1, [r3, #0]
 800a534:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a538:	6019      	str	r1, [r3, #0]
 800a53a:	e6cd      	b.n	800a2d8 <HAL_I2C_Mem_Read+0xf8>

0800a53c <HAL_I2C_MasterTxCpltCallback>:
 800a53c:	4770      	bx	lr
 800a53e:	bf00      	nop

0800a540 <HAL_I2C_MasterRxCpltCallback>:
 800a540:	4770      	bx	lr
 800a542:	bf00      	nop

0800a544 <HAL_I2C_SlaveTxCpltCallback>:
 800a544:	4770      	bx	lr
 800a546:	bf00      	nop

0800a548 <HAL_I2C_SlaveRxCpltCallback>:
 800a548:	4770      	bx	lr
 800a54a:	bf00      	nop

0800a54c <HAL_I2C_AddrCallback>:
}
 800a54c:	4770      	bx	lr
 800a54e:	bf00      	nop

0800a550 <HAL_I2C_ListenCpltCallback>:
 800a550:	4770      	bx	lr
 800a552:	bf00      	nop

0800a554 <HAL_I2C_MemTxCpltCallback>:
 800a554:	4770      	bx	lr
 800a556:	bf00      	nop

0800a558 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a558:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a55c:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a55e:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a560:	b959      	cbnz	r1, 800a57a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a562:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a564:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a566:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a568:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a56a:	d00d      	beq.n	800a588 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a56c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a570:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a572:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a574:	3201      	adds	r2, #1
 800a576:	6502      	str	r2, [r0, #80]	; 0x50
 800a578:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a57a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a57c:	2901      	cmp	r1, #1
 800a57e:	d009      	beq.n	800a594 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a580:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a582:	2902      	cmp	r1, #2
 800a584:	d00e      	beq.n	800a5a4 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a586:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a588:	b2d2      	uxtb	r2, r2
 800a58a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a58c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a58e:	3202      	adds	r2, #2
 800a590:	6502      	str	r2, [r0, #80]	; 0x50
 800a592:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a594:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a596:	6801      	ldr	r1, [r0, #0]
 800a598:	b2d2      	uxtb	r2, r2
 800a59a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a59c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a59e:	3201      	adds	r2, #1
 800a5a0:	6502      	str	r2, [r0, #80]	; 0x50
 800a5a2:	4770      	bx	lr
 800a5a4:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a5a6:	2a22      	cmp	r2, #34	; 0x22
 800a5a8:	d01f      	beq.n	800a5ea <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5aa:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a5ac:	b289      	uxth	r1, r1
 800a5ae:	b9c1      	cbnz	r1, 800a5e2 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5b0:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a5b2:	b289      	uxth	r1, r1
 800a5b4:	2900      	cmp	r1, #0
 800a5b6:	d1e6      	bne.n	800a586 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a5b8:	2a21      	cmp	r2, #33	; 0x21
 800a5ba:	d1e4      	bne.n	800a586 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a5bc:	6802      	ldr	r2, [r0, #0]
{
 800a5be:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a5c0:	6854      	ldr	r4, [r2, #4]
 800a5c2:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a5c6:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a5c8:	6814      	ldr	r4, [r2, #0]
 800a5ca:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a5ce:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a5d0:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a5d2:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a5d4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5d8:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a5dc:	f7ff ffba 	bl	800a554 <HAL_I2C_MemTxCpltCallback>
}
 800a5e0:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5e2:	2a21      	cmp	r2, #33	; 0x21
 800a5e4:	d00a      	beq.n	800a5fc <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5e6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a5e8:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a5ea:	6801      	ldr	r1, [r0, #0]
 800a5ec:	680a      	ldr	r2, [r1, #0]
 800a5ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a5f2:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a5f4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a5f6:	3201      	adds	r2, #1
 800a5f8:	6502      	str	r2, [r0, #80]	; 0x50
 800a5fa:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5fc:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a5fe:	6802      	ldr	r2, [r0, #0]
 800a600:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a604:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a606:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a608:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a60a:	3a01      	subs	r2, #1
 800a60c:	b292      	uxth	r2, r2
 800a60e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a610:	4770      	bx	lr
 800a612:	bf00      	nop

0800a614 <HAL_I2C_MemRxCpltCallback>:
 800a614:	4770      	bx	lr
 800a616:	bf00      	nop

0800a618 <HAL_I2C_ErrorCallback>:
 800a618:	4770      	bx	lr
 800a61a:	bf00      	nop

0800a61c <HAL_I2C_AbortCpltCallback>:
 800a61c:	4770      	bx	lr
 800a61e:	bf00      	nop

0800a620 <I2C_DMAAbort>:
{
 800a620:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a622:	4b3a      	ldr	r3, [pc, #232]	; (800a70c <I2C_DMAAbort+0xec>)
 800a624:	4a3a      	ldr	r2, [pc, #232]	; (800a710 <I2C_DMAAbort+0xf0>)
 800a626:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a628:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a62a:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a62c:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a62e:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a630:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a634:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a636:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a638:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a63c:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a63e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a642:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a646:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a648:	9301      	str	r3, [sp, #4]
 800a64a:	e005      	b.n	800a658 <I2C_DMAAbort+0x38>
    count--;
 800a64c:	9b01      	ldr	r3, [sp, #4]
 800a64e:	3b01      	subs	r3, #1
 800a650:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a652:	6813      	ldr	r3, [r2, #0]
 800a654:	059b      	lsls	r3, r3, #22
 800a656:	d506      	bpl.n	800a666 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a658:	9b01      	ldr	r3, [sp, #4]
 800a65a:	2b00      	cmp	r3, #0
 800a65c:	d1f6      	bne.n	800a64c <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a65e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a660:	f043 0320 	orr.w	r3, r3, #32
 800a664:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a666:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a668:	b34c      	cbz	r4, 800a6be <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a66a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a66c:	2500      	movs	r5, #0
 800a66e:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a670:	b1f3      	cbz	r3, 800a6b0 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a672:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a674:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a676:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a67a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a67c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a67e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a680:	2400      	movs	r4, #0
 800a682:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a684:	6813      	ldr	r3, [r2, #0]
 800a686:	f023 0301 	bic.w	r3, r3, #1
 800a68a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a68c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a690:	2b60      	cmp	r3, #96	; 0x60
 800a692:	d02a      	beq.n	800a6ea <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a694:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a698:	2928      	cmp	r1, #40	; 0x28
 800a69a:	d019      	beq.n	800a6d0 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a69c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a69e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a6a0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6a4:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a6a8:	f7ff ffb6 	bl	800a618 <HAL_I2C_ErrorCallback>
}
 800a6ac:	b002      	add	sp, #8
 800a6ae:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6b0:	6815      	ldr	r5, [r2, #0]
 800a6b2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a6b6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a6b8:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a6ba:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a6bc:	e7e2      	b.n	800a684 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a6be:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a6c0:	b1f3      	cbz	r3, 800a700 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6c2:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a6c4:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6c6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a6ca:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a6cc:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a6ce:	e7d7      	b.n	800a680 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a6d0:	6813      	ldr	r3, [r2, #0]
 800a6d2:	f043 0301 	orr.w	r3, r3, #1
 800a6d6:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6d8:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a6da:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6dc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a6e0:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a6e2:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a6e4:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a6e8:	e7de      	b.n	800a6a8 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a6ea:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a6ec:	2220      	movs	r2, #32
 800a6ee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a6f2:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a6f6:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a6f8:	f7ff ff90 	bl	800a61c <HAL_I2C_AbortCpltCallback>
}
 800a6fc:	b002      	add	sp, #8
 800a6fe:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a700:	6814      	ldr	r4, [r2, #0]
 800a702:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a706:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a708:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a70a:	e7bb      	b.n	800a684 <I2C_DMAAbort+0x64>
 800a70c:	20000078 	.word	0x20000078
 800a710:	14f8b589 	.word	0x14f8b589

0800a714 <I2C_ITError>:
{
 800a714:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a716:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a71a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a71e:	2b10      	cmp	r3, #16
{
 800a720:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a722:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a724:	d039      	beq.n	800a79a <I2C_ITError+0x86>
 800a726:	b2d9      	uxtb	r1, r3
 800a728:	2940      	cmp	r1, #64	; 0x40
 800a72a:	d036      	beq.n	800a79a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a72c:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a730:	2928      	cmp	r1, #40	; 0x28
 800a732:	d03d      	beq.n	800a7b0 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a734:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a736:	6859      	ldr	r1, [r3, #4]
 800a738:	0508      	lsls	r0, r1, #20
 800a73a:	d407      	bmi.n	800a74c <I2C_ITError+0x38>
 800a73c:	2a60      	cmp	r2, #96	; 0x60
 800a73e:	d005      	beq.n	800a74c <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a740:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a742:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a744:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a748:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a74c:	2200      	movs	r2, #0
 800a74e:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a750:	685a      	ldr	r2, [r3, #4]
 800a752:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a756:	d134      	bne.n	800a7c2 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a758:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a75c:	2960      	cmp	r1, #96	; 0x60
 800a75e:	d075      	beq.n	800a84c <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a760:	695a      	ldr	r2, [r3, #20]
 800a762:	0650      	lsls	r0, r2, #25
 800a764:	d505      	bpl.n	800a772 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a766:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a768:	691b      	ldr	r3, [r3, #16]
 800a76a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a76c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a76e:	3301      	adds	r3, #1
 800a770:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a772:	4620      	mov	r0, r4
 800a774:	f7ff ff50 	bl	800a618 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a778:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a77a:	0719      	lsls	r1, r3, #28
 800a77c:	d004      	beq.n	800a788 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a77e:	6822      	ldr	r2, [r4, #0]
 800a780:	6853      	ldr	r3, [r2, #4]
 800a782:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a786:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a788:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a78c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a78e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a790:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a792:	d501      	bpl.n	800a798 <I2C_ITError+0x84>
 800a794:	2b28      	cmp	r3, #40	; 0x28
 800a796:	d02f      	beq.n	800a7f8 <I2C_ITError+0xe4>
}
 800a798:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a79a:	2a22      	cmp	r2, #34	; 0x22
 800a79c:	d1c6      	bne.n	800a72c <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a79e:	6823      	ldr	r3, [r4, #0]
 800a7a0:	681a      	ldr	r2, [r3, #0]
 800a7a2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a7a6:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a7a8:	685a      	ldr	r2, [r3, #4]
 800a7aa:	0512      	lsls	r2, r2, #20
 800a7ac:	d5c8      	bpl.n	800a740 <I2C_ITError+0x2c>
 800a7ae:	e7cd      	b.n	800a74c <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a7b0:	2300      	movs	r3, #0
 800a7b2:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a7b4:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7b6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a7ba:	685a      	ldr	r2, [r3, #4]
 800a7bc:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a7c0:	d0ca      	beq.n	800a758 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a7c2:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a7c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a7c6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a7ca:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a7cc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a7d0:	2b01      	cmp	r3, #1
 800a7d2:	d01e      	beq.n	800a812 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a7d4:	4b28      	ldr	r3, [pc, #160]	; (800a878 <I2C_ITError+0x164>)
 800a7d6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a7d8:	f7fe ff88 	bl	80096ec <HAL_DMA_Abort_IT>
 800a7dc:	2800      	cmp	r0, #0
 800a7de:	d0cb      	beq.n	800a778 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a7e0:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a7e2:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a7e4:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a7e6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a7e8:	f023 0301 	bic.w	r3, r3, #1
 800a7ec:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a7ee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a7f2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a7f4:	4798      	blx	r3
 800a7f6:	e7bf      	b.n	800a778 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a7f8:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a7fa:	4920      	ldr	r1, [pc, #128]	; (800a87c <I2C_ITError+0x168>)
 800a7fc:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a7fe:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a800:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a802:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a804:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a808:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a80c:	f7ff fea0 	bl	800a550 <HAL_I2C_ListenCpltCallback>
}
 800a810:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a812:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a814:	4b18      	ldr	r3, [pc, #96]	; (800a878 <I2C_ITError+0x164>)
 800a816:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a818:	f7fe ff68 	bl	80096ec <HAL_DMA_Abort_IT>
 800a81c:	2800      	cmp	r0, #0
 800a81e:	d0ab      	beq.n	800a778 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a820:	6823      	ldr	r3, [r4, #0]
 800a822:	695a      	ldr	r2, [r3, #20]
 800a824:	0651      	lsls	r1, r2, #25
 800a826:	d506      	bpl.n	800a836 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a828:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a82a:	691b      	ldr	r3, [r3, #16]
 800a82c:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a82e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a830:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a832:	3201      	adds	r2, #1
 800a834:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a836:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a838:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a83a:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a83e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a840:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a842:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a846:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a848:	4798      	blx	r3
 800a84a:	e795      	b.n	800a778 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a84c:	2120      	movs	r1, #32
 800a84e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a852:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a854:	695a      	ldr	r2, [r3, #20]
 800a856:	0652      	lsls	r2, r2, #25
 800a858:	d506      	bpl.n	800a868 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a85a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a85c:	691b      	ldr	r3, [r3, #16]
 800a85e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a860:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a862:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a864:	3201      	adds	r2, #1
 800a866:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a868:	681a      	ldr	r2, [r3, #0]
 800a86a:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a86e:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a870:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a872:	f7ff fed3 	bl	800a61c <HAL_I2C_AbortCpltCallback>
 800a876:	e77f      	b.n	800a778 <I2C_ITError+0x64>
 800a878:	0800a621 	.word	0x0800a621
 800a87c:	ffff0000 	.word	0xffff0000

0800a880 <HAL_I2C_EV_IRQHandler>:
{
 800a880:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a882:	6803      	ldr	r3, [r0, #0]
{
 800a884:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a886:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a888:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a88a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a88e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a892:	2910      	cmp	r1, #16
{
 800a894:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a896:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a898:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a89c:	d022      	beq.n	800a8e4 <HAL_I2C_EV_IRQHandler+0x64>
 800a89e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a8a2:	d01f      	beq.n	800a8e4 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a8a4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a8a6:	2900      	cmp	r1, #0
 800a8a8:	f000 8094 	beq.w	800a9d4 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a8ac:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a8ae:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a8b0:	f011 0602 	ands.w	r6, r1, #2
 800a8b4:	d059      	beq.n	800a96a <HAL_I2C_EV_IRQHandler+0xea>
 800a8b6:	0586      	lsls	r6, r0, #22
 800a8b8:	d559      	bpl.n	800a96e <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a8ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a8bc:	b102      	cbz	r2, 800a8c0 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a8be:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a8c0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a8c4:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a8c8:	2a28      	cmp	r2, #40	; 0x28
 800a8ca:	f000 821e 	beq.w	800ad0a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8ce:	2200      	movs	r2, #0
 800a8d0:	920c      	str	r2, [sp, #48]	; 0x30
 800a8d2:	6959      	ldr	r1, [r3, #20]
 800a8d4:	910c      	str	r1, [sp, #48]	; 0x30
 800a8d6:	699b      	ldr	r3, [r3, #24]
 800a8d8:	930c      	str	r3, [sp, #48]	; 0x30
 800a8da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a8dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a8e0:	b00e      	add	sp, #56	; 0x38
 800a8e2:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a8e4:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a8e6:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a8e8:	f011 0f01 	tst.w	r1, #1
 800a8ec:	d11a      	bne.n	800a924 <HAL_I2C_EV_IRQHandler+0xa4>
 800a8ee:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a8f2:	d0f5      	beq.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800a8f4:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a8f8:	d0f2      	beq.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a8fa:	070d      	lsls	r5, r1, #28
 800a8fc:	d56d      	bpl.n	800a9da <HAL_I2C_EV_IRQHandler+0x15a>
 800a8fe:	0585      	lsls	r5, r0, #22
 800a900:	f140 8083 	bpl.w	800aa0a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a904:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a906:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a908:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a90a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a90c:	2900      	cmp	r1, #0
 800a90e:	f000 81e3 	beq.w	800acd8 <HAL_I2C_EV_IRQHandler+0x458>
 800a912:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a914:	2a00      	cmp	r2, #0
 800a916:	f000 81df 	beq.w	800acd8 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a91a:	685a      	ldr	r2, [r3, #4]
 800a91c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a920:	605a      	str	r2, [r3, #4]
 800a922:	e7dd      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a924:	0585      	lsls	r5, r0, #22
 800a926:	d56e      	bpl.n	800aa06 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a928:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a92a:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a92e:	f000 81e9 	beq.w	800ad04 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a932:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a934:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a938:	bf04      	itt	eq
 800a93a:	2208      	moveq	r2, #8
 800a93c:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a93e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a942:	2a40      	cmp	r2, #64	; 0x40
 800a944:	f000 81d7 	beq.w	800acf6 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a948:	6922      	ldr	r2, [r4, #16]
 800a94a:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a94e:	f000 81b2 	beq.w	800acb6 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a952:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a954:	2a00      	cmp	r2, #0
 800a956:	f040 81ef 	bne.w	800ad38 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a95a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a95c:	11d2      	asrs	r2, r2, #7
 800a95e:	f002 0206 	and.w	r2, r2, #6
 800a962:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a966:	611a      	str	r2, [r3, #16]
 800a968:	e7ba      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a96a:	06cd      	lsls	r5, r1, #27
 800a96c:	d47c      	bmi.n	800aa68 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a96e:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a972:	2a21      	cmp	r2, #33	; 0x21
 800a974:	f000 80f5 	beq.w	800ab62 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a978:	064e      	lsls	r6, r1, #25
 800a97a:	f140 8132 	bpl.w	800abe2 <HAL_I2C_EV_IRQHandler+0x362>
 800a97e:	0545      	lsls	r5, r0, #21
 800a980:	f140 812f 	bpl.w	800abe2 <HAL_I2C_EV_IRQHandler+0x362>
 800a984:	0749      	lsls	r1, r1, #29
 800a986:	f100 812f 	bmi.w	800abe8 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a98a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a98e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a990:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a992:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a994:	2a00      	cmp	r2, #0
 800a996:	d0a3      	beq.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a998:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a99a:	691b      	ldr	r3, [r3, #16]
 800a99c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a99e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a9a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a9a2:	3b01      	subs	r3, #1
 800a9a4:	b29b      	uxth	r3, r3
 800a9a6:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a9a8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a9aa:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a9ac:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a9ae:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a9b0:	2b00      	cmp	r3, #0
 800a9b2:	d195      	bne.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800a9b4:	292a      	cmp	r1, #42	; 0x2a
 800a9b6:	d193      	bne.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9b8:	6822      	ldr	r2, [r4, #0]
 800a9ba:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a9bc:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9be:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9c0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a9c4:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9c6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a9c8:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9ca:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9ce:	f7ff fdbb 	bl	800a548 <HAL_I2C_SlaveRxCpltCallback>
 800a9d2:	e785      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a9d4:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a9d6:	6959      	ldr	r1, [r3, #20]
 800a9d8:	e76a      	b.n	800a8b0 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9da:	078d      	lsls	r5, r1, #30
 800a9dc:	d515      	bpl.n	800aa0a <HAL_I2C_EV_IRQHandler+0x18a>
 800a9de:	0585      	lsls	r5, r0, #22
 800a9e0:	d513      	bpl.n	800aa0a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a9e2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a9e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a9e8:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a9ea:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a9ee:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a9f0:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a9f2:	f000 81b3 	beq.w	800ad5c <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9f6:	2200      	movs	r2, #0
 800a9f8:	920a      	str	r2, [sp, #40]	; 0x28
 800a9fa:	695a      	ldr	r2, [r3, #20]
 800a9fc:	920a      	str	r2, [sp, #40]	; 0x28
 800a9fe:	699b      	ldr	r3, [r3, #24]
 800aa00:	930a      	str	r3, [sp, #40]	; 0x28
 800aa02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aa04:	e76c      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa06:	070d      	lsls	r5, r1, #28
 800aa08:	d5e7      	bpl.n	800a9da <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800aa0a:	0776      	lsls	r6, r6, #29
 800aa0c:	f140 80f5 	bpl.w	800abfa <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800aa10:	685d      	ldr	r5, [r3, #4]
 800aa12:	052d      	lsls	r5, r5, #20
 800aa14:	f53f af64 	bmi.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa18:	060e      	lsls	r6, r1, #24
 800aa1a:	f140 8115 	bpl.w	800ac48 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aa1e:	0545      	lsls	r5, r0, #21
 800aa20:	f140 8112 	bpl.w	800ac48 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aa24:	074e      	lsls	r6, r1, #29
 800aa26:	f100 8112 	bmi.w	800ac4e <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa2a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa2e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aa30:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800aa34:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa36:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aa38:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa3a:	2800      	cmp	r0, #0
 800aa3c:	f040 8235 	bne.w	800aeaa <HAL_I2C_EV_IRQHandler+0x62a>
 800aa40:	2a21      	cmp	r2, #33	; 0x21
 800aa42:	f000 8347 	beq.w	800b0d4 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aa46:	2940      	cmp	r1, #64	; 0x40
 800aa48:	f47f af4a 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800aa4c:	2a22      	cmp	r2, #34	; 0x22
 800aa4e:	f47f af47 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800aa52:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa54:	b292      	uxth	r2, r2
 800aa56:	2a00      	cmp	r2, #0
 800aa58:	f000 8268 	beq.w	800af2c <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa5c:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800aa60:	2a40      	cmp	r2, #64	; 0x40
 800aa62:	f040 80b4 	bne.w	800abce <HAL_I2C_EV_IRQHandler+0x34e>
 800aa66:	e0fc      	b.n	800ac62 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa68:	0585      	lsls	r5, r0, #22
 800aa6a:	d580      	bpl.n	800a96e <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa6c:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa70:	685a      	ldr	r2, [r3, #4]
 800aa72:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aa76:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800aa78:	960d      	str	r6, [sp, #52]	; 0x34
 800aa7a:	695a      	ldr	r2, [r3, #20]
 800aa7c:	920d      	str	r2, [sp, #52]	; 0x34
 800aa7e:	681a      	ldr	r2, [r3, #0]
 800aa80:	f042 0201 	orr.w	r2, r2, #1
 800aa84:	601a      	str	r2, [r3, #0]
 800aa86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa88:	681a      	ldr	r2, [r3, #0]
 800aa8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa8e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aa90:	685a      	ldr	r2, [r3, #4]
 800aa92:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa94:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aa96:	d521      	bpl.n	800aadc <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800aa98:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800aa9c:	2a22      	cmp	r2, #34	; 0x22
 800aa9e:	f000 817a 	beq.w	800ad96 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800aaa2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aaa4:	6802      	ldr	r2, [r0, #0]
 800aaa6:	6852      	ldr	r2, [r2, #4]
 800aaa8:	b292      	uxth	r2, r2
 800aaaa:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800aaac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aaae:	b292      	uxth	r2, r2
 800aab0:	b11a      	cbz	r2, 800aaba <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800aab2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800aab4:	f042 0204 	orr.w	r2, r2, #4
 800aab8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800aaba:	685a      	ldr	r2, [r3, #4]
 800aabc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aac0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800aac2:	f7fe fe25 	bl	8009710 <HAL_DMA_GetState>
 800aac6:	2801      	cmp	r0, #1
 800aac8:	d008      	beq.n	800aadc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800aaca:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aacc:	4b99      	ldr	r3, [pc, #612]	; (800ad34 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800aace:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800aad0:	f7fe fe0c 	bl	80096ec <HAL_DMA_Abort_IT>
 800aad4:	b110      	cbz	r0, 800aadc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800aad6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aad8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800aada:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800aadc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800aade:	b29b      	uxth	r3, r3
 800aae0:	b313      	cbz	r3, 800ab28 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aae2:	6823      	ldr	r3, [r4, #0]
 800aae4:	695a      	ldr	r2, [r3, #20]
 800aae6:	0752      	lsls	r2, r2, #29
 800aae8:	d50a      	bpl.n	800ab00 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aaec:	691b      	ldr	r3, [r3, #16]
 800aaee:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aaf0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aaf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aaf4:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800aaf6:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800aaf8:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aafa:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aafc:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aafe:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ab00:	695a      	ldr	r2, [r3, #20]
 800ab02:	0656      	lsls	r6, r2, #25
 800ab04:	d509      	bpl.n	800ab1a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab06:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab08:	691b      	ldr	r3, [r3, #16]
 800ab0a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ab0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ab0e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ab10:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800ab12:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800ab14:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ab16:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ab18:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800ab1a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ab1c:	b29b      	uxth	r3, r3
 800ab1e:	b11b      	cbz	r3, 800ab28 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ab20:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab22:	f043 0304 	orr.w	r3, r3, #4
 800ab26:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ab28:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab2a:	2b00      	cmp	r3, #0
 800ab2c:	f040 80dd 	bne.w	800acea <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800ab30:	2d2a      	cmp	r5, #42	; 0x2a
 800ab32:	f000 8151 	beq.w	800add8 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800ab36:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ab3a:	2b28      	cmp	r3, #40	; 0x28
 800ab3c:	f000 8154 	beq.w	800ade8 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ab40:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ab42:	2b22      	cmp	r3, #34	; 0x22
 800ab44:	d002      	beq.n	800ab4c <HAL_I2C_EV_IRQHandler+0x2cc>
 800ab46:	2d22      	cmp	r5, #34	; 0x22
 800ab48:	f47f aeca 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800ab4c:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ab4e:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800ab50:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ab52:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ab54:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab58:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ab5c:	f7ff fcf4 	bl	800a548 <HAL_I2C_SlaveRxCpltCallback>
 800ab60:	e6be      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ab62:	060d      	lsls	r5, r1, #24
 800ab64:	d528      	bpl.n	800abb8 <HAL_I2C_EV_IRQHandler+0x338>
 800ab66:	0546      	lsls	r6, r0, #21
 800ab68:	d526      	bpl.n	800abb8 <HAL_I2C_EV_IRQHandler+0x338>
 800ab6a:	074d      	lsls	r5, r1, #29
 800ab6c:	d427      	bmi.n	800abbe <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ab6e:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800ab72:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab74:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ab76:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800ab78:	2900      	cmp	r1, #0
 800ab7a:	f43f aeb1 	beq.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab7e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ab80:	f811 5b01 	ldrb.w	r5, [r1], #1
 800ab84:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800ab86:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab88:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab8a:	3901      	subs	r1, #1
 800ab8c:	b289      	uxth	r1, r1
 800ab8e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800ab90:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab92:	b289      	uxth	r1, r1
 800ab94:	2900      	cmp	r1, #0
 800ab96:	f47f aea3 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800ab9a:	2829      	cmp	r0, #41	; 0x29
 800ab9c:	f47f aea0 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aba0:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aba2:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aba4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aba8:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800abaa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800abac:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800abae:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800abb2:	f7ff fcc7 	bl	800a544 <HAL_I2C_SlaveTxCpltCallback>
 800abb6:	e693      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800abb8:	0749      	lsls	r1, r1, #29
 800abba:	f57f ae91 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800abbe:	0582      	lsls	r2, r0, #22
 800abc0:	f57f ae8e 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800abc4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abc6:	b292      	uxth	r2, r2
 800abc8:	2a00      	cmp	r2, #0
 800abca:	f43f ae89 	beq.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800abce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800abd0:	f812 1b01 	ldrb.w	r1, [r2], #1
 800abd4:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800abd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800abd8:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800abda:	3b01      	subs	r3, #1
 800abdc:	b29b      	uxth	r3, r3
 800abde:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abe0:	e67e      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800abe2:	074a      	lsls	r2, r1, #29
 800abe4:	f57f ae7c 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800abe8:	0586      	lsls	r6, r0, #22
 800abea:	f57f ae79 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800abee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abf0:	b292      	uxth	r2, r2
 800abf2:	2a00      	cmp	r2, #0
 800abf4:	f43f ae74 	beq.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800abf8:	e01b      	b.n	800ac32 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800abfa:	685a      	ldr	r2, [r3, #4]
 800abfc:	0512      	lsls	r2, r2, #20
 800abfe:	f53f ae6f 	bmi.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ac02:	064e      	lsls	r6, r1, #25
 800ac04:	d433      	bmi.n	800ac6e <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ac06:	0749      	lsls	r1, r1, #29
 800ac08:	f57f ae6a 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800ac0c:	0582      	lsls	r2, r0, #22
 800ac0e:	f57f ae67 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ac12:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800ac14:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac16:	b292      	uxth	r2, r2
 800ac18:	2a04      	cmp	r2, #4
 800ac1a:	f000 8113 	beq.w	800ae44 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800ac1e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac20:	b292      	uxth	r2, r2
 800ac22:	2a03      	cmp	r2, #3
 800ac24:	f000 8153 	beq.w	800aece <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800ac28:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac2a:	b292      	uxth	r2, r2
 800ac2c:	2a02      	cmp	r2, #2
 800ac2e:	f000 8182 	beq.w	800af36 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac32:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac34:	691b      	ldr	r3, [r3, #16]
 800ac36:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ac38:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ac3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ac3c:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800ac3e:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800ac40:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ac42:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ac44:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800ac46:	e64b      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ac48:	074d      	lsls	r5, r1, #29
 800ac4a:	f57f ae49 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800ac4e:	0581      	lsls	r1, r0, #22
 800ac50:	f57f ae46 	bpl.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800ac54:	2a21      	cmp	r2, #33	; 0x21
 800ac56:	f000 80fd 	beq.w	800ae54 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800ac5a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800ac5e:	f47f ae3f 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ac62:	4620      	mov	r0, r4
}
 800ac64:	b00e      	add	sp, #56	; 0x38
 800ac66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ac6a:	f7ff bc75 	b.w	800a558 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ac6e:	0545      	lsls	r5, r0, #21
 800ac70:	d5c9      	bpl.n	800ac06 <HAL_I2C_EV_IRQHandler+0x386>
 800ac72:	f011 0104 	ands.w	r1, r1, #4
 800ac76:	d1c9      	bne.n	800ac0c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ac78:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ac7c:	2a22      	cmp	r2, #34	; 0x22
 800ac7e:	f47f ae2f 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800ac82:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac84:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800ac86:	2a03      	cmp	r2, #3
 800ac88:	f240 81ec 	bls.w	800b064 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac8e:	691b      	ldr	r3, [r3, #16]
 800ac90:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ac92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ac94:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ac96:	3b01      	subs	r3, #1
 800ac98:	b29b      	uxth	r3, r3
 800ac9a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800ac9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ac9e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800aca0:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800aca2:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800aca4:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800aca6:	f47f ae1b 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acaa:	6822      	ldr	r2, [r4, #0]
 800acac:	6853      	ldr	r3, [r2, #4]
 800acae:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800acb2:	6053      	str	r3, [r2, #4]
 800acb4:	e614      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800acb6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800acba:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800acbc:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800acbe:	bf16      	itet	ne
 800acc0:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800acc4:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800acc8:	b2d2      	uxtbne	r2, r2
 800acca:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800accc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800acce:	b11a      	cbz	r2, 800acd8 <HAL_I2C_EV_IRQHandler+0x458>
 800acd0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800acd2:	2a00      	cmp	r2, #0
 800acd4:	f47f ae21 	bne.w	800a91a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800acd8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800acda:	2a00      	cmp	r2, #0
 800acdc:	f43f ae00 	beq.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800ace0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ace2:	2a00      	cmp	r2, #0
 800ace4:	f47f ae19 	bne.w	800a91a <HAL_I2C_EV_IRQHandler+0x9a>
 800ace8:	e5fa      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800acea:	4620      	mov	r0, r4
}
 800acec:	b00e      	add	sp, #56	; 0x38
 800acee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800acf2:	f7ff bd0f 	b.w	800a714 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800acf6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800acf8:	bb52      	cbnz	r2, 800ad50 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800acfa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800acfc:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800ad00:	611a      	str	r2, [r3, #16]
 800ad02:	e5ed      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800ad04:	2201      	movs	r2, #1
 800ad06:	62e2      	str	r2, [r4, #44]	; 0x2c
 800ad08:	e619      	b.n	800a93e <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800ad0a:	685a      	ldr	r2, [r3, #4]
 800ad0c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad10:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800ad12:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800ad14:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800ad18:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800ad1c:	bf54      	ite	pl
 800ad1e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800ad20:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800ad22:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800ad26:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	f7ff fc0e 	bl	800a54c <HAL_I2C_AddrCallback>
 800ad30:	e5d6      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800ad32:	bf00      	nop
 800ad34:	0800a621 	.word	0x0800a621
      else if (hi2c->EventCount == 1U)
 800ad38:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ad3a:	2a01      	cmp	r2, #1
 800ad3c:	f47f add0 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800ad40:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ad42:	11d2      	asrs	r2, r2, #7
 800ad44:	f002 0206 	and.w	r2, r2, #6
 800ad48:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800ad4c:	611a      	str	r2, [r3, #16]
 800ad4e:	e5c7      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ad50:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ad52:	f042 0201 	orr.w	r2, r2, #1
 800ad56:	b2d2      	uxtb	r2, r2
 800ad58:	611a      	str	r2, [r3, #16]
 800ad5a:	e5c1      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800ad5c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800ad5e:	b911      	cbnz	r1, 800ad66 <HAL_I2C_EV_IRQHandler+0x4e6>
 800ad60:	2a40      	cmp	r2, #64	; 0x40
 800ad62:	f000 809b 	beq.w	800ae9c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800ad66:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ad68:	b922      	cbnz	r2, 800ad74 <HAL_I2C_EV_IRQHandler+0x4f4>
 800ad6a:	6921      	ldr	r1, [r4, #16]
 800ad6c:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ad70:	f000 809f 	beq.w	800aeb2 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ad74:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad76:	b292      	uxth	r2, r2
 800ad78:	2a00      	cmp	r2, #0
 800ad7a:	d142      	bne.n	800ae02 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad7c:	9203      	str	r2, [sp, #12]
 800ad7e:	695a      	ldr	r2, [r3, #20]
 800ad80:	9203      	str	r2, [sp, #12]
 800ad82:	699a      	ldr	r2, [r3, #24]
 800ad84:	9203      	str	r2, [sp, #12]
 800ad86:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad88:	681a      	ldr	r2, [r3, #0]
 800ad8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad8e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800ad90:	2300      	movs	r3, #0
 800ad92:	6523      	str	r3, [r4, #80]	; 0x50
 800ad94:	e5a4      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800ad96:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ad98:	6802      	ldr	r2, [r0, #0]
 800ad9a:	6852      	ldr	r2, [r2, #4]
 800ad9c:	b292      	uxth	r2, r2
 800ad9e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ada0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ada2:	b292      	uxth	r2, r2
 800ada4:	b11a      	cbz	r2, 800adae <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ada6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ada8:	f042 0204 	orr.w	r2, r2, #4
 800adac:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800adae:	685a      	ldr	r2, [r3, #4]
 800adb0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800adb4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800adb6:	f7fe fcab 	bl	8009710 <HAL_DMA_GetState>
 800adba:	2801      	cmp	r0, #1
 800adbc:	f43f ae8e 	beq.w	800aadc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800adc0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800adc2:	4b98      	ldr	r3, [pc, #608]	; (800b024 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800adc4:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800adc6:	f7fe fc91 	bl	80096ec <HAL_DMA_Abort_IT>
 800adca:	2800      	cmp	r0, #0
 800adcc:	f43f ae86 	beq.w	800aadc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800add0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800add2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800add4:	4798      	blx	r3
 800add6:	e681      	b.n	800aadc <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800add8:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800adda:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800addc:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800adde:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ade2:	f7ff fbb1 	bl	800a548 <HAL_I2C_SlaveRxCpltCallback>
 800ade6:	e6a6      	b.n	800ab36 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800ade8:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800adea:	498f      	ldr	r1, [pc, #572]	; (800b028 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800adec:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800adee:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800adf0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800adf2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800adf4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800adf8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800adfc:	f7ff fba8 	bl	800a550 <HAL_I2C_ListenCpltCallback>
 800ae00:	e56e      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800ae02:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ae04:	b292      	uxth	r2, r2
 800ae06:	2a01      	cmp	r2, #1
 800ae08:	d070      	beq.n	800aeec <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800ae0a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ae0c:	b292      	uxth	r2, r2
 800ae0e:	2a02      	cmp	r2, #2
 800ae10:	f000 80d6 	beq.w	800afc0 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae14:	681a      	ldr	r2, [r3, #0]
 800ae16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ae1a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ae1c:	685a      	ldr	r2, [r3, #4]
 800ae1e:	0511      	lsls	r1, r2, #20
 800ae20:	d508      	bpl.n	800ae34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ae22:	2820      	cmp	r0, #32
 800ae24:	f200 80f8 	bhi.w	800b018 <HAL_I2C_EV_IRQHandler+0x798>
 800ae28:	2807      	cmp	r0, #7
 800ae2a:	f200 80ea 	bhi.w	800b002 <HAL_I2C_EV_IRQHandler+0x782>
 800ae2e:	2801      	cmp	r0, #1
 800ae30:	f000 80ed 	beq.w	800b00e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae34:	2200      	movs	r2, #0
 800ae36:	9209      	str	r2, [sp, #36]	; 0x24
 800ae38:	695a      	ldr	r2, [r3, #20]
 800ae3a:	9209      	str	r2, [sp, #36]	; 0x24
 800ae3c:	699b      	ldr	r3, [r3, #24]
 800ae3e:	9309      	str	r3, [sp, #36]	; 0x24
 800ae40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ae42:	e7a5      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae44:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae46:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae4c:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae4e:	691b      	ldr	r3, [r3, #16]
 800ae50:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ae52:	e6f1      	b.n	800ac38 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ae54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ae56:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ae5a:	2a21      	cmp	r2, #33	; 0x21
 800ae5c:	f47f ad40 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ae60:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ae62:	b292      	uxth	r2, r2
 800ae64:	2a00      	cmp	r2, #0
 800ae66:	f47f aeb2 	bne.w	800abce <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ae6a:	2908      	cmp	r1, #8
 800ae6c:	f000 80e2 	beq.w	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ae70:	2920      	cmp	r1, #32
 800ae72:	f000 80df 	beq.w	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ae76:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ae7a:	f000 80db 	beq.w	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae7e:	6859      	ldr	r1, [r3, #4]
 800ae80:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ae84:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ae86:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ae88:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ae8a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae8c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ae90:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ae92:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ae96:	f7ff fb51 	bl	800a53c <HAL_I2C_MasterTxCpltCallback>
 800ae9a:	e521      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae9c:	9101      	str	r1, [sp, #4]
 800ae9e:	695a      	ldr	r2, [r3, #20]
 800aea0:	9201      	str	r2, [sp, #4]
 800aea2:	699b      	ldr	r3, [r3, #24]
 800aea4:	9301      	str	r3, [sp, #4]
 800aea6:	9b01      	ldr	r3, [sp, #4]
 800aea8:	e51a      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aeaa:	2a21      	cmp	r2, #33	; 0x21
 800aeac:	f43f add1 	beq.w	800aa52 <HAL_I2C_EV_IRQHandler+0x1d2>
 800aeb0:	e5c9      	b.n	800aa46 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeb2:	9202      	str	r2, [sp, #8]
 800aeb4:	695a      	ldr	r2, [r3, #20]
 800aeb6:	9202      	str	r2, [sp, #8]
 800aeb8:	699a      	ldr	r2, [r3, #24]
 800aeba:	9202      	str	r2, [sp, #8]
 800aebc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aebe:	681a      	ldr	r2, [r3, #0]
 800aec0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aec4:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800aec6:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aec8:	3301      	adds	r3, #1
 800aeca:	6523      	str	r3, [r4, #80]	; 0x50
 800aecc:	e508      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aece:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aed0:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aed2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aed6:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aed8:	f43f aeab 	beq.w	800ac32 <HAL_I2C_EV_IRQHandler+0x3b2>
 800aedc:	2902      	cmp	r1, #2
 800aede:	f43f aea8 	beq.w	800ac32 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aee2:	681a      	ldr	r2, [r3, #0]
 800aee4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aee8:	601a      	str	r2, [r3, #0]
 800aeea:	e6a2      	b.n	800ac32 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800aeec:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aef0:	f000 811b 	beq.w	800b12a <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800aef4:	2808      	cmp	r0, #8
 800aef6:	f000 8108 	beq.w	800b10a <HAL_I2C_EV_IRQHandler+0x88a>
 800aefa:	2820      	cmp	r0, #32
 800aefc:	f000 8105 	beq.w	800b10a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800af00:	2d12      	cmp	r5, #18
 800af02:	f000 80ff 	beq.w	800b104 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800af06:	2810      	cmp	r0, #16
 800af08:	d804      	bhi.n	800af14 <HAL_I2C_EV_IRQHandler+0x694>
 800af0a:	4a48      	ldr	r2, [pc, #288]	; (800b02c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800af0c:	40c2      	lsrs	r2, r0
 800af0e:	07d1      	lsls	r1, r2, #31
 800af10:	f100 814c 	bmi.w	800b1ac <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af14:	681a      	ldr	r2, [r3, #0]
 800af16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af1a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af1c:	2200      	movs	r2, #0
 800af1e:	9206      	str	r2, [sp, #24]
 800af20:	695a      	ldr	r2, [r3, #20]
 800af22:	9206      	str	r2, [sp, #24]
 800af24:	699b      	ldr	r3, [r3, #24]
 800af26:	9306      	str	r3, [sp, #24]
 800af28:	9b06      	ldr	r3, [sp, #24]
 800af2a:	e731      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800af2c:	685a      	ldr	r2, [r3, #4]
 800af2e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af32:	605a      	str	r2, [r3, #4]
 800af34:	e4d4      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800af36:	3901      	subs	r1, #1
 800af38:	290f      	cmp	r1, #15
 800af3a:	d809      	bhi.n	800af50 <HAL_I2C_EV_IRQHandler+0x6d0>
 800af3c:	e8df f001 	tbb	[pc, r1]
 800af40:	3608363b 	.word	0x3608363b
 800af44:	08080808 	.word	0x08080808
 800af48:	08080808 	.word	0x08080808
 800af4c:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af50:	681a      	ldr	r2, [r3, #0]
 800af52:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af56:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af58:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af5a:	691b      	ldr	r3, [r3, #16]
 800af5c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800af5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800af60:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af62:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800af64:	3b01      	subs	r3, #1
 800af66:	b29b      	uxth	r3, r3
 800af68:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af6a:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800af6c:	1c51      	adds	r1, r2, #1
 800af6e:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af70:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800af72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af74:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800af76:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800af78:	3b01      	subs	r3, #1
 800af7a:	b29b      	uxth	r3, r3
 800af7c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af7e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800af80:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800af86:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800af88:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af8a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800af8c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af90:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800af94:	2b40      	cmp	r3, #64	; 0x40
 800af96:	f000 80f5 	beq.w	800b184 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af9a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800af9c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af9e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800afa2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800afa4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800afa6:	f7ff facb 	bl	800a540 <HAL_I2C_MasterRxCpltCallback>
 800afaa:	e499      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afac:	681a      	ldr	r2, [r3, #0]
 800afae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800afb2:	601a      	str	r2, [r3, #0]
 800afb4:	e7d0      	b.n	800af58 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afb6:	681a      	ldr	r2, [r3, #0]
 800afb8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afbc:	601a      	str	r2, [r3, #0]
 800afbe:	e7cb      	b.n	800af58 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800afc0:	2810      	cmp	r0, #16
 800afc2:	d804      	bhi.n	800afce <HAL_I2C_EV_IRQHandler+0x74e>
 800afc4:	4a19      	ldr	r2, [pc, #100]	; (800b02c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800afc6:	40c2      	lsrs	r2, r0
 800afc8:	07d2      	lsls	r2, r2, #31
 800afca:	f100 80c2 	bmi.w	800b152 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afce:	681a      	ldr	r2, [r3, #0]
 800afd0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afd4:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800afd6:	681a      	ldr	r2, [r3, #0]
 800afd8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800afdc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800afde:	685a      	ldr	r2, [r3, #4]
 800afe0:	0516      	lsls	r6, r2, #20
 800afe2:	d506      	bpl.n	800aff2 <HAL_I2C_EV_IRQHandler+0x772>
 800afe4:	2820      	cmp	r0, #32
 800afe6:	f240 80bc 	bls.w	800b162 <HAL_I2C_EV_IRQHandler+0x8e2>
 800afea:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800afee:	f000 80bd 	beq.w	800b16c <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aff2:	2200      	movs	r2, #0
 800aff4:	9208      	str	r2, [sp, #32]
 800aff6:	695a      	ldr	r2, [r3, #20]
 800aff8:	9208      	str	r2, [sp, #32]
 800affa:	699b      	ldr	r3, [r3, #24]
 800affc:	9308      	str	r3, [sp, #32]
 800affe:	9b08      	ldr	r3, [sp, #32]
 800b000:	e6c6      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
 800b002:	4a0b      	ldr	r2, [pc, #44]	; (800b030 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b004:	3808      	subs	r0, #8
 800b006:	40c2      	lsrs	r2, r0
 800b008:	07d2      	lsls	r2, r2, #31
 800b00a:	f57f af13 	bpl.w	800ae34 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b00e:	685a      	ldr	r2, [r3, #4]
 800b010:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b014:	605a      	str	r2, [r3, #4]
 800b016:	e70d      	b.n	800ae34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b018:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b01c:	f47f af0a 	bne.w	800ae34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b020:	e7f5      	b.n	800b00e <HAL_I2C_EV_IRQHandler+0x78e>
 800b022:	bf00      	nop
 800b024:	0800a621 	.word	0x0800a621
 800b028:	ffff0000 	.word	0xffff0000
 800b02c:	00010014 	.word	0x00010014
 800b030:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b034:	6859      	ldr	r1, [r3, #4]
 800b036:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b03a:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b03c:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b03e:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b040:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b042:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b046:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b048:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b04a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b04e:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b052:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b056:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b058:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b05a:	f47f af1c 	bne.w	800ae96 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b05e:	f7ff fa79 	bl	800a554 <HAL_I2C_MemTxCpltCallback>
 800b062:	e43d      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b064:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b066:	2802      	cmp	r0, #2
 800b068:	f43f af60 	beq.w	800af2c <HAL_I2C_EV_IRQHandler+0x6ac>
 800b06c:	2a01      	cmp	r2, #1
 800b06e:	f63f af5d 	bhi.w	800af2c <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b072:	4a62      	ldr	r2, [pc, #392]	; (800b1fc <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b074:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b076:	6812      	ldr	r2, [r2, #0]
 800b078:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b07c:	fbb2 f2f0 	udiv	r2, r2, r0
 800b080:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b084:	920b      	str	r2, [sp, #44]	; 0x2c
 800b086:	e004      	b.n	800b092 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b088:	681a      	ldr	r2, [r3, #0]
 800b08a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b08e:	f000 8092 	beq.w	800b1b6 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b092:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b094:	3a01      	subs	r2, #1
 800b096:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b098:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b09a:	2900      	cmp	r1, #0
 800b09c:	d1f4      	bne.n	800b088 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b09e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0a0:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b0a2:	f042 0220 	orr.w	r2, r2, #32
 800b0a6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0a8:	685a      	ldr	r2, [r3, #4]
 800b0aa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b0ae:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0b0:	691b      	ldr	r3, [r3, #16]
 800b0b2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b0b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b0b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b0b8:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b0ba:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b0bc:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b0be:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b0c0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b0c2:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b0c4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b0c8:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0ca:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b0ce:	f7ff faa3 	bl	800a618 <HAL_I2C_ErrorCallback>
 800b0d2:	e405      	b.n	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b0d4:	2d08      	cmp	r5, #8
 800b0d6:	d0ad      	beq.n	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b0d8:	2d20      	cmp	r5, #32
 800b0da:	d0ab      	beq.n	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b0dc:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b0e0:	d0a8      	beq.n	800b034 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0e2:	685a      	ldr	r2, [r3, #4]
 800b0e4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b0e8:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b0ea:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0ec:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b0ee:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b0f0:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0f2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b0f6:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b0f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b0fc:	f7ff fa1e 	bl	800a53c <HAL_I2C_MasterTxCpltCallback>
 800b100:	f7ff bbee 	b.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b104:	2801      	cmp	r0, #1
 800b106:	f43f af05 	beq.w	800af14 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b10a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b10c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b10e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b112:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b114:	9107      	str	r1, [sp, #28]
 800b116:	695a      	ldr	r2, [r3, #20]
 800b118:	9207      	str	r2, [sp, #28]
 800b11a:	699a      	ldr	r2, [r3, #24]
 800b11c:	9207      	str	r2, [sp, #28]
 800b11e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b120:	681a      	ldr	r2, [r3, #0]
 800b122:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b126:	601a      	str	r2, [r3, #0]
 800b128:	e632      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b12a:	681a      	ldr	r2, [r3, #0]
 800b12c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b130:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b132:	685a      	ldr	r2, [r3, #4]
 800b134:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b138:	d02d      	beq.n	800b196 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b13a:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b13c:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b13e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b142:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b144:	9104      	str	r1, [sp, #16]
 800b146:	695a      	ldr	r2, [r3, #20]
 800b148:	9204      	str	r2, [sp, #16]
 800b14a:	699b      	ldr	r3, [r3, #24]
 800b14c:	9304      	str	r3, [sp, #16]
 800b14e:	9b04      	ldr	r3, [sp, #16]
 800b150:	e61e      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b152:	681a      	ldr	r2, [r3, #0]
 800b154:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b158:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b15a:	685a      	ldr	r2, [r3, #4]
 800b15c:	0515      	lsls	r5, r2, #20
 800b15e:	f57f af48 	bpl.w	800aff2 <HAL_I2C_EV_IRQHandler+0x772>
 800b162:	2807      	cmp	r0, #7
 800b164:	d807      	bhi.n	800b176 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b166:	2801      	cmp	r0, #1
 800b168:	f47f af43 	bne.w	800aff2 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b16c:	685a      	ldr	r2, [r3, #4]
 800b16e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b172:	605a      	str	r2, [r3, #4]
 800b174:	e73d      	b.n	800aff2 <HAL_I2C_EV_IRQHandler+0x772>
 800b176:	4a22      	ldr	r2, [pc, #136]	; (800b200 <HAL_I2C_EV_IRQHandler+0x980>)
 800b178:	3808      	subs	r0, #8
 800b17a:	40c2      	lsrs	r2, r0
 800b17c:	07d0      	lsls	r0, r2, #31
 800b17e:	f57f af38 	bpl.w	800aff2 <HAL_I2C_EV_IRQHandler+0x772>
 800b182:	e7f3      	b.n	800b16c <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b184:	2300      	movs	r3, #0
 800b186:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b18a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b18c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b18e:	f7ff fa41 	bl	800a614 <HAL_I2C_MemRxCpltCallback>
 800b192:	f7ff bba5 	b.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b196:	9205      	str	r2, [sp, #20]
 800b198:	695a      	ldr	r2, [r3, #20]
 800b19a:	9205      	str	r2, [sp, #20]
 800b19c:	699a      	ldr	r2, [r3, #24]
 800b19e:	9205      	str	r2, [sp, #20]
 800b1a0:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1a2:	681a      	ldr	r2, [r3, #0]
 800b1a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b1a8:	601a      	str	r2, [r3, #0]
 800b1aa:	e5f1      	b.n	800ad90 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1ac:	681a      	ldr	r2, [r3, #0]
 800b1ae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b1b2:	601a      	str	r2, [r3, #0]
 800b1b4:	e6b2      	b.n	800af1c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1b6:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1b8:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1ba:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b1be:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1c0:	6859      	ldr	r1, [r3, #4]
 800b1c2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b1c6:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1c8:	691b      	ldr	r3, [r3, #16]
 800b1ca:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b1cc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b1ce:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b1d0:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b1d2:	b29b      	uxth	r3, r3
 800b1d4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b1d6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b1da:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1dc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b1e0:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1e2:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b1e4:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1e6:	f47f aed9 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1ea:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b1ee:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b1f0:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b1f2:	f7ff fa0f 	bl	800a614 <HAL_I2C_MemRxCpltCallback>
 800b1f6:	f7ff bb73 	b.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b1fa:	bf00      	nop
 800b1fc:	20000078 	.word	0x20000078
 800b200:	01000101 	.word	0x01000101

0800b204 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b204:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b208:	2a20      	cmp	r2, #32
{
 800b20a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b20c:	fa5f fc82 	uxtb.w	ip, r2
 800b210:	d001      	beq.n	800b216 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b212:	2002      	movs	r0, #2
  }
}
 800b214:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b216:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b218:	2024      	movs	r0, #36	; 0x24
 800b21a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b21e:	6810      	ldr	r0, [r2, #0]
 800b220:	f020 0001 	bic.w	r0, r0, #1
 800b224:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b226:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b228:	f020 0010 	bic.w	r0, r0, #16
 800b22c:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b22e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b230:	4301      	orrs	r1, r0
 800b232:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b234:	6811      	ldr	r1, [r2, #0]
 800b236:	f041 0101 	orr.w	r1, r1, #1
 800b23a:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b23c:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b23e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b242:	4770      	bx	lr

0800b244 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b244:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b248:	2a20      	cmp	r2, #32
 800b24a:	d001      	beq.n	800b250 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b24c:	2002      	movs	r0, #2
  }
}
 800b24e:	4770      	bx	lr
{
 800b250:	b410      	push	{r4}
 800b252:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b256:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b258:	2224      	movs	r2, #36	; 0x24
 800b25a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b25e:	6822      	ldr	r2, [r4, #0]
 800b260:	f022 0201 	bic.w	r2, r2, #1
 800b264:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b266:	4603      	mov	r3, r0
 800b268:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b26a:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b26e:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b270:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b272:	b289      	uxth	r1, r1
 800b274:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b276:	6822      	ldr	r2, [r4, #0]
 800b278:	f042 0201 	orr.w	r2, r2, #1
 800b27c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b27e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b282:	2000      	movs	r0, #0
}
 800b284:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b288:	4770      	bx	lr
 800b28a:	bf00      	nop

0800b28c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b28c:	2800      	cmp	r0, #0
 800b28e:	d069      	beq.n	800b364 <HAL_LTDC_Init+0xd8>
{
 800b290:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b292:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b296:	4604      	mov	r4, r0
 800b298:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	d05c      	beq.n	800b35a <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b2a0:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b2a2:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b2a4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2a8:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b2ac:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2ae:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b2b0:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b2b4:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b2b8:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2ba:	6999      	ldr	r1, [r3, #24]
 800b2bc:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b2be:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2c0:	430a      	orrs	r2, r1
 800b2c2:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b2c4:	689a      	ldr	r2, [r3, #8]
 800b2c6:	4928      	ldr	r1, [pc, #160]	; (800b368 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b2c8:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b2ca:	400a      	ands	r2, r1
 800b2cc:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b2ce:	689a      	ldr	r2, [r3, #8]
 800b2d0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2d4:	69a0      	ldr	r0, [r4, #24]
 800b2d6:	4302      	orrs	r2, r0
 800b2d8:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b2da:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b2dc:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b2de:	400a      	ands	r2, r1
 800b2e0:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b2e2:	68da      	ldr	r2, [r3, #12]
 800b2e4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2e8:	6a20      	ldr	r0, [r4, #32]
 800b2ea:	4302      	orrs	r2, r0
 800b2ec:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b2ee:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b2f0:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b2f2:	400a      	ands	r2, r1
 800b2f4:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b2f6:	691a      	ldr	r2, [r3, #16]
 800b2f8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2fc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b2fe:	4302      	orrs	r2, r0
 800b300:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b302:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b304:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b306:	400a      	ands	r2, r1
 800b308:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b30a:	695a      	ldr	r2, [r3, #20]
 800b30c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b30e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b312:	430a      	orrs	r2, r1
 800b314:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b316:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b318:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b31c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b320:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b324:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b326:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b328:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b32c:	432a      	orrs	r2, r5
 800b32e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b332:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b336:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b338:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b33a:	f042 0206 	orr.w	r2, r2, #6
 800b33e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b340:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b342:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b346:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b348:	ea42 020c 	orr.w	r2, r2, ip
 800b34c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b34e:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b352:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b356:	4608      	mov	r0, r1
}
 800b358:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b35a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b35e:	f7f6 f817 	bl	8001390 <HAL_LTDC_MspInit>
 800b362:	e79d      	b.n	800b2a0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b364:	2001      	movs	r0, #1
}
 800b366:	4770      	bx	lr
 800b368:	f000f800 	.word	0xf000f800

0800b36c <HAL_LTDC_ErrorCallback>:
 800b36c:	4770      	bx	lr
 800b36e:	bf00      	nop

0800b370 <HAL_LTDC_ReloadEventCallback>:
 800b370:	4770      	bx	lr
 800b372:	bf00      	nop

0800b374 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b374:	6803      	ldr	r3, [r0, #0]
{
 800b376:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b378:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b37a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b37c:	076a      	lsls	r2, r5, #29
{
 800b37e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b380:	d501      	bpl.n	800b386 <HAL_LTDC_IRQHandler+0x12>
 800b382:	0771      	lsls	r1, r6, #29
 800b384:	d41d      	bmi.n	800b3c2 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b386:	07aa      	lsls	r2, r5, #30
 800b388:	d501      	bpl.n	800b38e <HAL_LTDC_IRQHandler+0x1a>
 800b38a:	07b3      	lsls	r3, r6, #30
 800b38c:	d42d      	bmi.n	800b3ea <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b38e:	07e8      	lsls	r0, r5, #31
 800b390:	d501      	bpl.n	800b396 <HAL_LTDC_IRQHandler+0x22>
 800b392:	07f1      	lsls	r1, r6, #31
 800b394:	d440      	bmi.n	800b418 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b396:	072a      	lsls	r2, r5, #28
 800b398:	d501      	bpl.n	800b39e <HAL_LTDC_IRQHandler+0x2a>
 800b39a:	0733      	lsls	r3, r6, #28
 800b39c:	d400      	bmi.n	800b3a0 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b39e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b3a0:	6823      	ldr	r3, [r4, #0]
 800b3a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b3a4:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b3a6:	f022 0208 	bic.w	r2, r2, #8
 800b3aa:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b3ac:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b3ae:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b3b0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b3b2:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b3b6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	f7ff ffd8 	bl	800b370 <HAL_LTDC_ReloadEventCallback>
}
 800b3c0:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b3c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b3c4:	f022 0204 	bic.w	r2, r2, #4
 800b3c8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b3ca:	2204      	movs	r2, #4
 800b3cc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b3ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b3d2:	f043 0301 	orr.w	r3, r3, #1
 800b3d6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b3da:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b3dc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b3e0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b3e4:	f7ff ffc2 	bl	800b36c <HAL_LTDC_ErrorCallback>
 800b3e8:	e7cd      	b.n	800b386 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b3ea:	6823      	ldr	r3, [r4, #0]
 800b3ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b3ee:	f022 0202 	bic.w	r2, r2, #2
 800b3f2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b3f4:	2202      	movs	r2, #2
 800b3f6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b3f8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b3fc:	f043 0302 	orr.w	r3, r3, #2
 800b400:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b404:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b406:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b408:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b40c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b410:	4620      	mov	r0, r4
 800b412:	f7ff ffab 	bl	800b36c <HAL_LTDC_ErrorCallback>
 800b416:	e7ba      	b.n	800b38e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b418:	6823      	ldr	r3, [r4, #0]
 800b41a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b41c:	f022 0201 	bic.w	r2, r2, #1
 800b420:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b422:	2201      	movs	r2, #1
 800b424:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b426:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b428:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b42c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b430:	4620      	mov	r0, r4
 800b432:	f7f6 ffa9 	bl	8002388 <HAL_LTDC_LineEventCallback>
 800b436:	e7ae      	b.n	800b396 <HAL_LTDC_IRQHandler+0x22>

0800b438 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b438:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b43c:	2b01      	cmp	r3, #1
 800b43e:	f000 80c2 	beq.w	800b5c6 <HAL_LTDC_ConfigLayer+0x18e>
{
 800b442:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b446:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b44a:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b44e:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b452:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b454:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b456:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b45a:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b45e:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b462:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b466:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b46a:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b46e:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b470:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b474:	460c      	mov	r4, r1
 800b476:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b478:	9301      	str	r3, [sp, #4]
 800b47a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b47c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b47e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b482:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b486:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b488:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b48a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b48e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b490:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b494:	6823      	ldr	r3, [r4, #0]
 800b496:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b49a:	9b01      	ldr	r3, [sp, #4]
 800b49c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b4a0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b4a4:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4a6:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b4a8:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b4ac:	1c51      	adds	r1, r2, #1
 800b4ae:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b4b2:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b4b4:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b4b6:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b4ba:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4be:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b4c2:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b4c6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b4ca:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4ce:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4d2:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4d4:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4d6:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b4da:	3301      	adds	r3, #1
 800b4dc:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b4e0:	4403      	add	r3, r0
 800b4e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b4e6:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4ea:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4ee:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4f0:	f023 0307 	bic.w	r3, r3, #7
 800b4f4:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4f8:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4fc:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b500:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b504:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b508:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b50c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b510:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b514:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b518:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b51c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b520:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b524:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b528:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b52c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b530:	696b      	ldr	r3, [r5, #20]
 800b532:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b536:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b53a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b53e:	f023 0307 	bic.w	r3, r3, #7
 800b542:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b546:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b54a:	4303      	orrs	r3, r0
 800b54c:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b550:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b554:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b556:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b55a:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b55e:	bb69      	cbnz	r1, 800b5bc <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b560:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b562:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b564:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b566:	fb03 f707 	mul.w	r7, r3, r7
 800b56a:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b56c:	fb02 f303 	mul.w	r3, r2, r3
 800b570:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b574:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b578:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b57a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b57e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b582:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b586:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b58a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b58e:	f023 0307 	bic.w	r3, r3, #7
 800b592:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b596:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b59a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b59e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b5a0:	4313      	orrs	r3, r2
 800b5a2:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b5a6:	2300      	movs	r3, #0
  return HAL_OK;
 800b5a8:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b5aa:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b5ae:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b5b2:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b5b6:	b003      	add	sp, #12
 800b5b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b5bc:	3901      	subs	r1, #1
 800b5be:	2906      	cmp	r1, #6
 800b5c0:	d903      	bls.n	800b5ca <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b5c2:	2301      	movs	r3, #1
 800b5c4:	e7cd      	b.n	800b562 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b5c6:	2002      	movs	r0, #2
}
 800b5c8:	4770      	bx	lr
 800b5ca:	4b02      	ldr	r3, [pc, #8]	; (800b5d4 <HAL_LTDC_ConfigLayer+0x19c>)
 800b5cc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b5d0:	e7c7      	b.n	800b562 <HAL_LTDC_ConfigLayer+0x12a>
 800b5d2:	bf00      	nop
 800b5d4:	0802ef0c 	.word	0x0802ef0c

0800b5d8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b5d8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b5dc:	2b01      	cmp	r3, #1
 800b5de:	d019      	beq.n	800b614 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5e0:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5e2:	2302      	movs	r3, #2
{
 800b5e4:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5e6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5ea:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b5ec:	4c0a      	ldr	r4, [pc, #40]	; (800b618 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5ee:	f023 0301 	bic.w	r3, r3, #1
 800b5f2:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b5f4:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b5f6:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b5f8:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b5fa:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b5fe:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b602:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b604:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b608:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b60c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b610:	4618      	mov	r0, r3
}
 800b612:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b614:	2002      	movs	r0, #2
}
 800b616:	4770      	bx	lr
 800b618:	40016800 	.word	0x40016800

0800b61c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b61c:	2800      	cmp	r0, #0
 800b61e:	f000 81a2 	beq.w	800b966 <HAL_RCC_OscConfig+0x34a>
{
 800b622:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b626:	6803      	ldr	r3, [r0, #0]
 800b628:	07dd      	lsls	r5, r3, #31
{
 800b62a:	b082      	sub	sp, #8
 800b62c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b62e:	d52f      	bpl.n	800b690 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b630:	499e      	ldr	r1, [pc, #632]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b632:	688a      	ldr	r2, [r1, #8]
 800b634:	f002 020c 	and.w	r2, r2, #12
 800b638:	2a04      	cmp	r2, #4
 800b63a:	f000 80ed 	beq.w	800b818 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b63e:	688a      	ldr	r2, [r1, #8]
 800b640:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b644:	2a08      	cmp	r2, #8
 800b646:	f000 80e3 	beq.w	800b810 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b64a:	6863      	ldr	r3, [r4, #4]
 800b64c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b650:	f000 80ec 	beq.w	800b82c <HAL_RCC_OscConfig+0x210>
 800b654:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b658:	f000 8175 	beq.w	800b946 <HAL_RCC_OscConfig+0x32a>
 800b65c:	4d93      	ldr	r5, [pc, #588]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b65e:	682a      	ldr	r2, [r5, #0]
 800b660:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b664:	602a      	str	r2, [r5, #0]
 800b666:	682a      	ldr	r2, [r5, #0]
 800b668:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b66c:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b66e:	2b00      	cmp	r3, #0
 800b670:	f040 80e1 	bne.w	800b836 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b674:	f7fd ffb0 	bl	80095d8 <HAL_GetTick>
 800b678:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b67a:	e005      	b.n	800b688 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b67c:	f7fd ffac 	bl	80095d8 <HAL_GetTick>
 800b680:	1b80      	subs	r0, r0, r6
 800b682:	2864      	cmp	r0, #100	; 0x64
 800b684:	f200 8101 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b688:	682b      	ldr	r3, [r5, #0]
 800b68a:	039b      	lsls	r3, r3, #14
 800b68c:	d4f6      	bmi.n	800b67c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b68e:	6823      	ldr	r3, [r4, #0]
 800b690:	079f      	lsls	r7, r3, #30
 800b692:	d528      	bpl.n	800b6e6 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b694:	4a85      	ldr	r2, [pc, #532]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b696:	6891      	ldr	r1, [r2, #8]
 800b698:	f011 0f0c 	tst.w	r1, #12
 800b69c:	f000 8090 	beq.w	800b7c0 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b6a0:	6891      	ldr	r1, [r2, #8]
 800b6a2:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b6a6:	2908      	cmp	r1, #8
 800b6a8:	f000 8086 	beq.w	800b7b8 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b6ac:	68e3      	ldr	r3, [r4, #12]
 800b6ae:	2b00      	cmp	r3, #0
 800b6b0:	f000 810e 	beq.w	800b8d0 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b6b4:	4b7e      	ldr	r3, [pc, #504]	; (800b8b0 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6b6:	4e7d      	ldr	r6, [pc, #500]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b6b8:	2201      	movs	r2, #1
 800b6ba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b6bc:	f7fd ff8c 	bl	80095d8 <HAL_GetTick>
 800b6c0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6c2:	e005      	b.n	800b6d0 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b6c4:	f7fd ff88 	bl	80095d8 <HAL_GetTick>
 800b6c8:	1b40      	subs	r0, r0, r5
 800b6ca:	2802      	cmp	r0, #2
 800b6cc:	f200 80dd 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6d0:	6833      	ldr	r3, [r6, #0]
 800b6d2:	0798      	lsls	r0, r3, #30
 800b6d4:	d5f6      	bpl.n	800b6c4 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b6d6:	6833      	ldr	r3, [r6, #0]
 800b6d8:	6922      	ldr	r2, [r4, #16]
 800b6da:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b6de:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b6e2:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b6e4:	6823      	ldr	r3, [r4, #0]
 800b6e6:	071a      	lsls	r2, r3, #28
 800b6e8:	d451      	bmi.n	800b78e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b6ea:	0758      	lsls	r0, r3, #29
 800b6ec:	d52f      	bpl.n	800b74e <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b6ee:	4a6f      	ldr	r2, [pc, #444]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b6f0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b6f2:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b6f6:	d07f      	beq.n	800b7f8 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b6f8:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b6fa:	4e6e      	ldr	r6, [pc, #440]	; (800b8b4 <HAL_RCC_OscConfig+0x298>)
 800b6fc:	6833      	ldr	r3, [r6, #0]
 800b6fe:	05d9      	lsls	r1, r3, #23
 800b700:	f140 80b3 	bpl.w	800b86a <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b704:	68a3      	ldr	r3, [r4, #8]
 800b706:	2b01      	cmp	r3, #1
 800b708:	f000 80c3 	beq.w	800b892 <HAL_RCC_OscConfig+0x276>
 800b70c:	2b05      	cmp	r3, #5
 800b70e:	f000 812c 	beq.w	800b96a <HAL_RCC_OscConfig+0x34e>
 800b712:	4e66      	ldr	r6, [pc, #408]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b714:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b716:	f022 0201 	bic.w	r2, r2, #1
 800b71a:	6732      	str	r2, [r6, #112]	; 0x70
 800b71c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b71e:	f022 0204 	bic.w	r2, r2, #4
 800b722:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b724:	2b00      	cmp	r3, #0
 800b726:	f040 80b9 	bne.w	800b89c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b72a:	f7fd ff55 	bl	80095d8 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b72e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b732:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b734:	e005      	b.n	800b742 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b736:	f7fd ff4f 	bl	80095d8 <HAL_GetTick>
 800b73a:	1bc0      	subs	r0, r0, r7
 800b73c:	4540      	cmp	r0, r8
 800b73e:	f200 80a4 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b742:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b744:	0798      	lsls	r0, r3, #30
 800b746:	d4f6      	bmi.n	800b736 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b748:	2d00      	cmp	r5, #0
 800b74a:	f040 8106 	bne.w	800b95a <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b74e:	69a0      	ldr	r0, [r4, #24]
 800b750:	b1c8      	cbz	r0, 800b786 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b752:	4d56      	ldr	r5, [pc, #344]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b754:	68ab      	ldr	r3, [r5, #8]
 800b756:	f003 030c 	and.w	r3, r3, #12
 800b75a:	2b08      	cmp	r3, #8
 800b75c:	f000 80c9 	beq.w	800b8f2 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b760:	4b53      	ldr	r3, [pc, #332]	; (800b8b0 <HAL_RCC_OscConfig+0x294>)
 800b762:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b764:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b766:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b768:	f000 8109 	beq.w	800b97e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b76c:	f7fd ff34 	bl	80095d8 <HAL_GetTick>
 800b770:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b772:	e005      	b.n	800b780 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b774:	f7fd ff30 	bl	80095d8 <HAL_GetTick>
 800b778:	1b00      	subs	r0, r0, r4
 800b77a:	2802      	cmp	r0, #2
 800b77c:	f200 8085 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b780:	682b      	ldr	r3, [r5, #0]
 800b782:	019b      	lsls	r3, r3, #6
 800b784:	d4f6      	bmi.n	800b774 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b786:	2000      	movs	r0, #0
}
 800b788:	b002      	add	sp, #8
 800b78a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b78e:	6963      	ldr	r3, [r4, #20]
 800b790:	b30b      	cbz	r3, 800b7d6 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b792:	4b47      	ldr	r3, [pc, #284]	; (800b8b0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b794:	4e45      	ldr	r6, [pc, #276]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b796:	2201      	movs	r2, #1
 800b798:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b79c:	f7fd ff1c 	bl	80095d8 <HAL_GetTick>
 800b7a0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b7a2:	e004      	b.n	800b7ae <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b7a4:	f7fd ff18 	bl	80095d8 <HAL_GetTick>
 800b7a8:	1b40      	subs	r0, r0, r5
 800b7aa:	2802      	cmp	r0, #2
 800b7ac:	d86d      	bhi.n	800b88a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b7ae:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b7b0:	079b      	lsls	r3, r3, #30
 800b7b2:	d5f7      	bpl.n	800b7a4 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b7b4:	6823      	ldr	r3, [r4, #0]
 800b7b6:	e798      	b.n	800b6ea <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b7b8:	6852      	ldr	r2, [r2, #4]
 800b7ba:	0256      	lsls	r6, r2, #9
 800b7bc:	f53f af76 	bmi.w	800b6ac <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b7c0:	4a3a      	ldr	r2, [pc, #232]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b7c2:	6812      	ldr	r2, [r2, #0]
 800b7c4:	0795      	lsls	r5, r2, #30
 800b7c6:	d544      	bpl.n	800b852 <HAL_RCC_OscConfig+0x236>
 800b7c8:	68e2      	ldr	r2, [r4, #12]
 800b7ca:	2a01      	cmp	r2, #1
 800b7cc:	d041      	beq.n	800b852 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b7ce:	2001      	movs	r0, #1
}
 800b7d0:	b002      	add	sp, #8
 800b7d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b7d6:	4a36      	ldr	r2, [pc, #216]	; (800b8b0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7d8:	4e34      	ldr	r6, [pc, #208]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b7da:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b7de:	f7fd fefb 	bl	80095d8 <HAL_GetTick>
 800b7e2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7e4:	e004      	b.n	800b7f0 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b7e6:	f7fd fef7 	bl	80095d8 <HAL_GetTick>
 800b7ea:	1b40      	subs	r0, r0, r5
 800b7ec:	2802      	cmp	r0, #2
 800b7ee:	d84c      	bhi.n	800b88a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7f0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b7f2:	079f      	lsls	r7, r3, #30
 800b7f4:	d4f7      	bmi.n	800b7e6 <HAL_RCC_OscConfig+0x1ca>
 800b7f6:	e7dd      	b.n	800b7b4 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b7f8:	9301      	str	r3, [sp, #4]
 800b7fa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b7fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b800:	6413      	str	r3, [r2, #64]	; 0x40
 800b802:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b804:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b808:	9301      	str	r3, [sp, #4]
 800b80a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b80c:	2501      	movs	r5, #1
 800b80e:	e774      	b.n	800b6fa <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b810:	684a      	ldr	r2, [r1, #4]
 800b812:	0250      	lsls	r0, r2, #9
 800b814:	f57f af19 	bpl.w	800b64a <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b818:	4a24      	ldr	r2, [pc, #144]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b81a:	6812      	ldr	r2, [r2, #0]
 800b81c:	0391      	lsls	r1, r2, #14
 800b81e:	f57f af37 	bpl.w	800b690 <HAL_RCC_OscConfig+0x74>
 800b822:	6862      	ldr	r2, [r4, #4]
 800b824:	2a00      	cmp	r2, #0
 800b826:	f47f af33 	bne.w	800b690 <HAL_RCC_OscConfig+0x74>
 800b82a:	e7d0      	b.n	800b7ce <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b82c:	4a1f      	ldr	r2, [pc, #124]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b82e:	6813      	ldr	r3, [r2, #0]
 800b830:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b834:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b836:	f7fd fecf 	bl	80095d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b83a:	4e1c      	ldr	r6, [pc, #112]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b83c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b83e:	e004      	b.n	800b84a <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b840:	f7fd feca 	bl	80095d8 <HAL_GetTick>
 800b844:	1b40      	subs	r0, r0, r5
 800b846:	2864      	cmp	r0, #100	; 0x64
 800b848:	d81f      	bhi.n	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b84a:	6833      	ldr	r3, [r6, #0]
 800b84c:	039a      	lsls	r2, r3, #14
 800b84e:	d5f7      	bpl.n	800b840 <HAL_RCC_OscConfig+0x224>
 800b850:	e71d      	b.n	800b68e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b852:	4916      	ldr	r1, [pc, #88]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b854:	6920      	ldr	r0, [r4, #16]
 800b856:	680a      	ldr	r2, [r1, #0]
 800b858:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b85c:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b860:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b862:	071a      	lsls	r2, r3, #28
 800b864:	f57f af41 	bpl.w	800b6ea <HAL_RCC_OscConfig+0xce>
 800b868:	e791      	b.n	800b78e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b86a:	6833      	ldr	r3, [r6, #0]
 800b86c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b870:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b872:	f7fd feb1 	bl	80095d8 <HAL_GetTick>
 800b876:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b878:	6833      	ldr	r3, [r6, #0]
 800b87a:	05da      	lsls	r2, r3, #23
 800b87c:	f53f af42 	bmi.w	800b704 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b880:	f7fd feaa 	bl	80095d8 <HAL_GetTick>
 800b884:	1bc0      	subs	r0, r0, r7
 800b886:	2802      	cmp	r0, #2
 800b888:	d9f6      	bls.n	800b878 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b88a:	2003      	movs	r0, #3
}
 800b88c:	b002      	add	sp, #8
 800b88e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b892:	4a06      	ldr	r2, [pc, #24]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
 800b894:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b896:	f043 0301 	orr.w	r3, r3, #1
 800b89a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b89c:	f7fd fe9c 	bl	80095d8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b8a0:	4f02      	ldr	r7, [pc, #8]	; (800b8ac <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b8a2:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b8a4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b8a8:	e00b      	b.n	800b8c2 <HAL_RCC_OscConfig+0x2a6>
 800b8aa:	bf00      	nop
 800b8ac:	40023800 	.word	0x40023800
 800b8b0:	42470000 	.word	0x42470000
 800b8b4:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b8b8:	f7fd fe8e 	bl	80095d8 <HAL_GetTick>
 800b8bc:	1b80      	subs	r0, r0, r6
 800b8be:	4540      	cmp	r0, r8
 800b8c0:	d8e3      	bhi.n	800b88a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b8c2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b8c4:	079b      	lsls	r3, r3, #30
 800b8c6:	d5f7      	bpl.n	800b8b8 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b8c8:	2d00      	cmp	r5, #0
 800b8ca:	f43f af40 	beq.w	800b74e <HAL_RCC_OscConfig+0x132>
 800b8ce:	e044      	b.n	800b95a <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b8d0:	4a42      	ldr	r2, [pc, #264]	; (800b9dc <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8d2:	4e43      	ldr	r6, [pc, #268]	; (800b9e0 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b8d4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b8d6:	f7fd fe7f 	bl	80095d8 <HAL_GetTick>
 800b8da:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8dc:	e004      	b.n	800b8e8 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b8de:	f7fd fe7b 	bl	80095d8 <HAL_GetTick>
 800b8e2:	1b40      	subs	r0, r0, r5
 800b8e4:	2802      	cmp	r0, #2
 800b8e6:	d8d0      	bhi.n	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8e8:	6833      	ldr	r3, [r6, #0]
 800b8ea:	0799      	lsls	r1, r3, #30
 800b8ec:	d4f7      	bmi.n	800b8de <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b8ee:	6823      	ldr	r3, [r4, #0]
 800b8f0:	e6f9      	b.n	800b6e6 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b8f2:	2801      	cmp	r0, #1
 800b8f4:	f43f af48 	beq.w	800b788 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b8f8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b8fa:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b8fc:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b900:	4291      	cmp	r1, r2
 800b902:	f47f af64 	bne.w	800b7ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b906:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b908:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b90c:	4291      	cmp	r1, r2
 800b90e:	f47f af5e 	bne.w	800b7ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b912:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b914:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b918:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b91a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b91e:	f47f af56 	bne.w	800b7ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b922:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b924:	0852      	lsrs	r2, r2, #1
 800b926:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b92a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b92c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b930:	f47f af4d 	bne.w	800b7ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b934:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b936:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b93a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b93e:	bf14      	ite	ne
 800b940:	2001      	movne	r0, #1
 800b942:	2000      	moveq	r0, #0
 800b944:	e720      	b.n	800b788 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b946:	4b26      	ldr	r3, [pc, #152]	; (800b9e0 <HAL_RCC_OscConfig+0x3c4>)
 800b948:	681a      	ldr	r2, [r3, #0]
 800b94a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b94e:	601a      	str	r2, [r3, #0]
 800b950:	681a      	ldr	r2, [r3, #0]
 800b952:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b956:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b958:	e76d      	b.n	800b836 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b95a:	4a21      	ldr	r2, [pc, #132]	; (800b9e0 <HAL_RCC_OscConfig+0x3c4>)
 800b95c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b95e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b962:	6413      	str	r3, [r2, #64]	; 0x40
 800b964:	e6f3      	b.n	800b74e <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b966:	2001      	movs	r0, #1
}
 800b968:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b96a:	4b1d      	ldr	r3, [pc, #116]	; (800b9e0 <HAL_RCC_OscConfig+0x3c4>)
 800b96c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b96e:	f042 0204 	orr.w	r2, r2, #4
 800b972:	671a      	str	r2, [r3, #112]	; 0x70
 800b974:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b976:	f042 0201 	orr.w	r2, r2, #1
 800b97a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b97c:	e78e      	b.n	800b89c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b97e:	f7fd fe2b 	bl	80095d8 <HAL_GetTick>
 800b982:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b984:	e005      	b.n	800b992 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b986:	f7fd fe27 	bl	80095d8 <HAL_GetTick>
 800b98a:	1b80      	subs	r0, r0, r6
 800b98c:	2802      	cmp	r0, #2
 800b98e:	f63f af7c 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b992:	682b      	ldr	r3, [r5, #0]
 800b994:	0199      	lsls	r1, r3, #6
 800b996:	d4f6      	bmi.n	800b986 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b998:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b99c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b99e:	430b      	orrs	r3, r1
 800b9a0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b9a4:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b9a8:	0852      	lsrs	r2, r2, #1
 800b9aa:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b9ae:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b9b0:	490a      	ldr	r1, [pc, #40]	; (800b9dc <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b9b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b9b6:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b9b8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b9ba:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b9bc:	f7fd fe0c 	bl	80095d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9c0:	4d07      	ldr	r5, [pc, #28]	; (800b9e0 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b9c2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9c4:	e005      	b.n	800b9d2 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b9c6:	f7fd fe07 	bl	80095d8 <HAL_GetTick>
 800b9ca:	1b00      	subs	r0, r0, r4
 800b9cc:	2802      	cmp	r0, #2
 800b9ce:	f63f af5c 	bhi.w	800b88a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9d2:	682b      	ldr	r3, [r5, #0]
 800b9d4:	019a      	lsls	r2, r3, #6
 800b9d6:	d5f6      	bpl.n	800b9c6 <HAL_RCC_OscConfig+0x3aa>
 800b9d8:	e6d5      	b.n	800b786 <HAL_RCC_OscConfig+0x16a>
 800b9da:	bf00      	nop
 800b9dc:	42470000 	.word	0x42470000
 800b9e0:	40023800 	.word	0x40023800

0800b9e4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b9e4:	4916      	ldr	r1, [pc, #88]	; (800ba40 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b9e6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b9e8:	688b      	ldr	r3, [r1, #8]
 800b9ea:	f003 030c 	and.w	r3, r3, #12
 800b9ee:	2b04      	cmp	r3, #4
 800b9f0:	d01b      	beq.n	800ba2a <HAL_RCC_GetSysClockFreq+0x46>
 800b9f2:	2b08      	cmp	r3, #8
 800b9f4:	d117      	bne.n	800ba26 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b9f6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b9f8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b9fa:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b9fc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ba00:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ba04:	d113      	bne.n	800ba2e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ba06:	480f      	ldr	r0, [pc, #60]	; (800ba44 <HAL_RCC_GetSysClockFreq+0x60>)
 800ba08:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ba0c:	fba1 0100 	umull	r0, r1, r1, r0
 800ba10:	f7f4 fc9e 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ba14:	4b0a      	ldr	r3, [pc, #40]	; (800ba40 <HAL_RCC_GetSysClockFreq+0x5c>)
 800ba16:	685b      	ldr	r3, [r3, #4]
 800ba18:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800ba1c:	3301      	adds	r3, #1
 800ba1e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ba20:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800ba24:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800ba26:	4807      	ldr	r0, [pc, #28]	; (800ba44 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800ba28:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ba2a:	4807      	ldr	r0, [pc, #28]	; (800ba48 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800ba2c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ba2e:	4806      	ldr	r0, [pc, #24]	; (800ba48 <HAL_RCC_GetSysClockFreq+0x64>)
 800ba30:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ba34:	2300      	movs	r3, #0
 800ba36:	fba1 0100 	umull	r0, r1, r1, r0
 800ba3a:	f7f4 fc89 	bl	8000350 <__aeabi_uldivmod>
 800ba3e:	e7e9      	b.n	800ba14 <HAL_RCC_GetSysClockFreq+0x30>
 800ba40:	40023800 	.word	0x40023800
 800ba44:	00f42400 	.word	0x00f42400
 800ba48:	007a1200 	.word	0x007a1200

0800ba4c <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800ba4c:	2800      	cmp	r0, #0
 800ba4e:	f000 8087 	beq.w	800bb60 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ba52:	4a48      	ldr	r2, [pc, #288]	; (800bb74 <HAL_RCC_ClockConfig+0x128>)
 800ba54:	6813      	ldr	r3, [r2, #0]
 800ba56:	f003 030f 	and.w	r3, r3, #15
 800ba5a:	428b      	cmp	r3, r1
{
 800ba5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba60:	460d      	mov	r5, r1
 800ba62:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ba64:	d209      	bcs.n	800ba7a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ba66:	b2cb      	uxtb	r3, r1
 800ba68:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ba6a:	6813      	ldr	r3, [r2, #0]
 800ba6c:	f003 030f 	and.w	r3, r3, #15
 800ba70:	428b      	cmp	r3, r1
 800ba72:	d002      	beq.n	800ba7a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800ba74:	2001      	movs	r0, #1
}
 800ba76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800ba7a:	6823      	ldr	r3, [r4, #0]
 800ba7c:	0798      	lsls	r0, r3, #30
 800ba7e:	d514      	bpl.n	800baaa <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ba80:	0759      	lsls	r1, r3, #29
 800ba82:	d504      	bpl.n	800ba8e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800ba84:	493c      	ldr	r1, [pc, #240]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800ba86:	688a      	ldr	r2, [r1, #8]
 800ba88:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800ba8c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ba8e:	071a      	lsls	r2, r3, #28
 800ba90:	d504      	bpl.n	800ba9c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800ba92:	4939      	ldr	r1, [pc, #228]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800ba94:	688a      	ldr	r2, [r1, #8]
 800ba96:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800ba9a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800ba9c:	4936      	ldr	r1, [pc, #216]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800ba9e:	68a0      	ldr	r0, [r4, #8]
 800baa0:	688a      	ldr	r2, [r1, #8]
 800baa2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800baa6:	4302      	orrs	r2, r0
 800baa8:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800baaa:	07df      	lsls	r7, r3, #31
 800baac:	d521      	bpl.n	800baf2 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800baae:	6862      	ldr	r2, [r4, #4]
 800bab0:	2a01      	cmp	r2, #1
 800bab2:	d057      	beq.n	800bb64 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bab4:	1e93      	subs	r3, r2, #2
 800bab6:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bab8:	4b2f      	ldr	r3, [pc, #188]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800baba:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800babc:	d94d      	bls.n	800bb5a <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800babe:	0799      	lsls	r1, r3, #30
 800bac0:	d5d8      	bpl.n	800ba74 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800bac2:	4e2d      	ldr	r6, [pc, #180]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800bac4:	68b3      	ldr	r3, [r6, #8]
 800bac6:	f023 0303 	bic.w	r3, r3, #3
 800baca:	4313      	orrs	r3, r2
 800bacc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800bace:	f7fd fd83 	bl	80095d8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bad2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800bad6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bad8:	e004      	b.n	800bae4 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bada:	f7fd fd7d 	bl	80095d8 <HAL_GetTick>
 800bade:	1bc0      	subs	r0, r0, r7
 800bae0:	4540      	cmp	r0, r8
 800bae2:	d844      	bhi.n	800bb6e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bae4:	68b3      	ldr	r3, [r6, #8]
 800bae6:	6862      	ldr	r2, [r4, #4]
 800bae8:	f003 030c 	and.w	r3, r3, #12
 800baec:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800baf0:	d1f3      	bne.n	800bada <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800baf2:	4a20      	ldr	r2, [pc, #128]	; (800bb74 <HAL_RCC_ClockConfig+0x128>)
 800baf4:	6813      	ldr	r3, [r2, #0]
 800baf6:	f003 030f 	and.w	r3, r3, #15
 800bafa:	42ab      	cmp	r3, r5
 800bafc:	d906      	bls.n	800bb0c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bafe:	b2eb      	uxtb	r3, r5
 800bb00:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bb02:	6813      	ldr	r3, [r2, #0]
 800bb04:	f003 030f 	and.w	r3, r3, #15
 800bb08:	42ab      	cmp	r3, r5
 800bb0a:	d1b3      	bne.n	800ba74 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bb0c:	6823      	ldr	r3, [r4, #0]
 800bb0e:	075a      	lsls	r2, r3, #29
 800bb10:	d506      	bpl.n	800bb20 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bb12:	4919      	ldr	r1, [pc, #100]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800bb14:	68e0      	ldr	r0, [r4, #12]
 800bb16:	688a      	ldr	r2, [r1, #8]
 800bb18:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800bb1c:	4302      	orrs	r2, r0
 800bb1e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bb20:	071b      	lsls	r3, r3, #28
 800bb22:	d507      	bpl.n	800bb34 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800bb24:	4a14      	ldr	r2, [pc, #80]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800bb26:	6921      	ldr	r1, [r4, #16]
 800bb28:	6893      	ldr	r3, [r2, #8]
 800bb2a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800bb2e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bb32:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb34:	f7ff ff56 	bl	800b9e4 <HAL_RCC_GetSysClockFreq>
 800bb38:	4a0f      	ldr	r2, [pc, #60]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800bb3a:	4c10      	ldr	r4, [pc, #64]	; (800bb7c <HAL_RCC_ClockConfig+0x130>)
 800bb3c:	6892      	ldr	r2, [r2, #8]
 800bb3e:	4910      	ldr	r1, [pc, #64]	; (800bb80 <HAL_RCC_ClockConfig+0x134>)
 800bb40:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800bb44:	4603      	mov	r3, r0
 800bb46:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800bb48:	480e      	ldr	r0, [pc, #56]	; (800bb84 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb4a:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800bb4c:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb4e:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800bb50:	f7f5 fdfc 	bl	800174c <HAL_InitTick>
  return HAL_OK;
 800bb54:	2000      	movs	r0, #0
}
 800bb56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bb5a:	0198      	lsls	r0, r3, #6
 800bb5c:	d4b1      	bmi.n	800bac2 <HAL_RCC_ClockConfig+0x76>
 800bb5e:	e789      	b.n	800ba74 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800bb60:	2001      	movs	r0, #1
}
 800bb62:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bb64:	4b04      	ldr	r3, [pc, #16]	; (800bb78 <HAL_RCC_ClockConfig+0x12c>)
 800bb66:	681b      	ldr	r3, [r3, #0]
 800bb68:	039e      	lsls	r6, r3, #14
 800bb6a:	d4aa      	bmi.n	800bac2 <HAL_RCC_ClockConfig+0x76>
 800bb6c:	e782      	b.n	800ba74 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800bb6e:	2003      	movs	r0, #3
 800bb70:	e781      	b.n	800ba76 <HAL_RCC_ClockConfig+0x2a>
 800bb72:	bf00      	nop
 800bb74:	40023c00 	.word	0x40023c00
 800bb78:	40023800 	.word	0x40023800
 800bb7c:	0802eef4 	.word	0x0802eef4
 800bb80:	20000078 	.word	0x20000078
 800bb84:	20000080 	.word	0x20000080

0800bb88 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bb88:	4b04      	ldr	r3, [pc, #16]	; (800bb9c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800bb8a:	4905      	ldr	r1, [pc, #20]	; (800bba0 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bb8c:	689b      	ldr	r3, [r3, #8]
 800bb8e:	4a05      	ldr	r2, [pc, #20]	; (800bba4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bb90:	6808      	ldr	r0, [r1, #0]
 800bb92:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800bb96:	5cd3      	ldrb	r3, [r2, r3]
}
 800bb98:	40d8      	lsrs	r0, r3
 800bb9a:	4770      	bx	lr
 800bb9c:	40023800 	.word	0x40023800
 800bba0:	20000078 	.word	0x20000078
 800bba4:	0802ef04 	.word	0x0802ef04

0800bba8 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bba8:	4b0e      	ldr	r3, [pc, #56]	; (800bbe4 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800bbaa:	220f      	movs	r2, #15
 800bbac:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bbae:	689a      	ldr	r2, [r3, #8]
 800bbb0:	f002 0203 	and.w	r2, r2, #3
 800bbb4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800bbb6:	689a      	ldr	r2, [r3, #8]
 800bbb8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800bbbc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bbbe:	689a      	ldr	r2, [r3, #8]
 800bbc0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800bbc4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbc6:	689b      	ldr	r3, [r3, #8]
 800bbc8:	08db      	lsrs	r3, r3, #3
{
 800bbca:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbcc:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbd0:	4c05      	ldr	r4, [pc, #20]	; (800bbe8 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbd2:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbd4:	6823      	ldr	r3, [r4, #0]
}
 800bbd6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbda:	f003 030f 	and.w	r3, r3, #15
 800bbde:	600b      	str	r3, [r1, #0]
}
 800bbe0:	4770      	bx	lr
 800bbe2:	bf00      	nop
 800bbe4:	40023800 	.word	0x40023800
 800bbe8:	40023c00 	.word	0x40023c00

0800bbec <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800bbec:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800bbee:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bbf0:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800bbf4:	b083      	sub	sp, #12
 800bbf6:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bbf8:	d111      	bne.n	800bc1e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bbfa:	f013 0f0c 	tst.w	r3, #12
 800bbfe:	d16f      	bne.n	800bce0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bc00:	0698      	lsls	r0, r3, #26
 800bc02:	f100 80c2 	bmi.w	800bd8a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bc06:	f013 0310 	ands.w	r3, r3, #16
 800bc0a:	f000 80bb 	beq.w	800bd84 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800bc0e:	4b89      	ldr	r3, [pc, #548]	; (800be34 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800bc10:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800bc14:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800bc18:	2000      	movs	r0, #0
}
 800bc1a:	b003      	add	sp, #12
 800bc1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800bc1e:	4b86      	ldr	r3, [pc, #536]	; (800be38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc20:	4e86      	ldr	r6, [pc, #536]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800bc22:	2200      	movs	r2, #0
 800bc24:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bc26:	f7fd fcd7 	bl	80095d8 <HAL_GetTick>
 800bc2a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc2c:	e004      	b.n	800bc38 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bc2e:	f7fd fcd3 	bl	80095d8 <HAL_GetTick>
 800bc32:	1b43      	subs	r3, r0, r5
 800bc34:	2b02      	cmp	r3, #2
 800bc36:	d850      	bhi.n	800bcda <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc38:	6833      	ldr	r3, [r6, #0]
 800bc3a:	0118      	lsls	r0, r3, #4
 800bc3c:	d4f7      	bmi.n	800bc2e <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800bc3e:	6823      	ldr	r3, [r4, #0]
 800bc40:	07d9      	lsls	r1, r3, #31
 800bc42:	d506      	bpl.n	800bc52 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800bc44:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800bc48:	0712      	lsls	r2, r2, #28
 800bc4a:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800bc4e:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800bc52:	079a      	lsls	r2, r3, #30
 800bc54:	d515      	bpl.n	800bc82 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bc56:	4979      	ldr	r1, [pc, #484]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bc58:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bc5a:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bc5e:	6865      	ldr	r5, [r4, #4]
 800bc60:	0612      	lsls	r2, r2, #24
 800bc62:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800bc66:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800bc6a:	4302      	orrs	r2, r0
 800bc6c:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bc70:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800bc74:	69e2      	ldr	r2, [r4, #28]
 800bc76:	f020 001f 	bic.w	r0, r0, #31
 800bc7a:	3a01      	subs	r2, #1
 800bc7c:	4302      	orrs	r2, r0
 800bc7e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bc82:	065b      	lsls	r3, r3, #25
 800bc84:	d509      	bpl.n	800bc9a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800bc86:	1d20      	adds	r0, r4, #4
 800bc88:	c80b      	ldmia	r0, {r0, r1, r3}
 800bc8a:	061b      	lsls	r3, r3, #24
 800bc8c:	4a6b      	ldr	r2, [pc, #428]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc8e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bc92:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800bc96:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800bc9a:	4b67      	ldr	r3, [pc, #412]	; (800be38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bc9c:	4e67      	ldr	r6, [pc, #412]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bc9e:	2201      	movs	r2, #1
 800bca0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bca2:	f7fd fc99 	bl	80095d8 <HAL_GetTick>
 800bca6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bca8:	e004      	b.n	800bcb4 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bcaa:	f7fd fc95 	bl	80095d8 <HAL_GetTick>
 800bcae:	1b40      	subs	r0, r0, r5
 800bcb0:	2802      	cmp	r0, #2
 800bcb2:	d812      	bhi.n	800bcda <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bcb4:	6833      	ldr	r3, [r6, #0]
 800bcb6:	011f      	lsls	r7, r3, #4
 800bcb8:	d5f7      	bpl.n	800bcaa <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bcba:	6823      	ldr	r3, [r4, #0]
 800bcbc:	e79d      	b.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800bcbe:	f7fd fc8b 	bl	80095d8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bcc2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800bcc6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bcc8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bcca:	079b      	lsls	r3, r3, #30
 800bccc:	f100 80a5 	bmi.w	800be1a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bcd0:	f7fd fc82 	bl	80095d8 <HAL_GetTick>
 800bcd4:	1b80      	subs	r0, r0, r6
 800bcd6:	42b8      	cmp	r0, r7
 800bcd8:	d9f6      	bls.n	800bcc8 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800bcda:	2003      	movs	r0, #3
}
 800bcdc:	b003      	add	sp, #12
 800bcde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bce0:	4b55      	ldr	r3, [pc, #340]	; (800be38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bce2:	4e56      	ldr	r6, [pc, #344]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bce4:	2200      	movs	r2, #0
 800bce6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bce8:	f7fd fc76 	bl	80095d8 <HAL_GetTick>
 800bcec:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bcee:	e004      	b.n	800bcfa <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bcf0:	f7fd fc72 	bl	80095d8 <HAL_GetTick>
 800bcf4:	1b43      	subs	r3, r0, r5
 800bcf6:	2b02      	cmp	r3, #2
 800bcf8:	d8ef      	bhi.n	800bcda <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bcfa:	6833      	ldr	r3, [r6, #0]
 800bcfc:	0098      	lsls	r0, r3, #2
 800bcfe:	d4f7      	bmi.n	800bcf0 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bd00:	6822      	ldr	r2, [r4, #0]
 800bd02:	0751      	lsls	r1, r2, #29
 800bd04:	d515      	bpl.n	800bd32 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bd06:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800bd08:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bd0c:	6920      	ldr	r0, [r4, #16]
 800bd0e:	061b      	lsls	r3, r3, #24
 800bd10:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800bd14:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bd18:	430b      	orrs	r3, r1
 800bd1a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bd1e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bd22:	6a21      	ldr	r1, [r4, #32]
 800bd24:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bd28:	3901      	subs	r1, #1
 800bd2a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bd2e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bd32:	0713      	lsls	r3, r2, #28
 800bd34:	d514      	bpl.n	800bd60 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bd36:	4a41      	ldr	r2, [pc, #260]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bd38:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bd3a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bd3e:	6920      	ldr	r0, [r4, #16]
 800bd40:	071b      	lsls	r3, r3, #28
 800bd42:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bd46:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bd4a:	430b      	orrs	r3, r1
 800bd4c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bd50:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bd54:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bd56:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bd5a:	430b      	orrs	r3, r1
 800bd5c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bd60:	4b35      	ldr	r3, [pc, #212]	; (800be38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd62:	4e36      	ldr	r6, [pc, #216]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bd64:	2201      	movs	r2, #1
 800bd66:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bd68:	f7fd fc36 	bl	80095d8 <HAL_GetTick>
 800bd6c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd6e:	e004      	b.n	800bd7a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bd70:	f7fd fc32 	bl	80095d8 <HAL_GetTick>
 800bd74:	1b40      	subs	r0, r0, r5
 800bd76:	2802      	cmp	r0, #2
 800bd78:	d8af      	bhi.n	800bcda <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd7a:	6833      	ldr	r3, [r6, #0]
 800bd7c:	009f      	lsls	r7, r3, #2
 800bd7e:	d5f7      	bpl.n	800bd70 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bd80:	6823      	ldr	r3, [r4, #0]
 800bd82:	e73d      	b.n	800bc00 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bd84:	4618      	mov	r0, r3
}
 800bd86:	b003      	add	sp, #12
 800bd88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bd8a:	4b2c      	ldr	r3, [pc, #176]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bd8c:	4d2c      	ldr	r5, [pc, #176]	; (800be40 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bd8e:	2200      	movs	r2, #0
 800bd90:	9201      	str	r2, [sp, #4]
 800bd92:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bd94:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bd98:	641a      	str	r2, [r3, #64]	; 0x40
 800bd9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd9c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bda0:	9301      	str	r3, [sp, #4]
 800bda2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bda4:	682b      	ldr	r3, [r5, #0]
 800bda6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bdaa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bdac:	f7fd fc14 	bl	80095d8 <HAL_GetTick>
 800bdb0:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bdb2:	e004      	b.n	800bdbe <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bdb4:	f7fd fc10 	bl	80095d8 <HAL_GetTick>
 800bdb8:	1b83      	subs	r3, r0, r6
 800bdba:	2b02      	cmp	r3, #2
 800bdbc:	d88d      	bhi.n	800bcda <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bdbe:	682b      	ldr	r3, [r5, #0]
 800bdc0:	05d9      	lsls	r1, r3, #23
 800bdc2:	d5f7      	bpl.n	800bdb4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bdc4:	4d1d      	ldr	r5, [pc, #116]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bdc6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bdc8:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bdca:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bdce:	d111      	bne.n	800bdf4 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bdd0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bdd4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bdd8:	d021      	beq.n	800be1e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bdda:	4918      	ldr	r1, [pc, #96]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bddc:	688a      	ldr	r2, [r1, #8]
 800bdde:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bde2:	608a      	str	r2, [r1, #8]
 800bde4:	4a15      	ldr	r2, [pc, #84]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bde6:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bde8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bdec:	430b      	orrs	r3, r1
 800bdee:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bdf0:	6823      	ldr	r3, [r4, #0]
 800bdf2:	e708      	b.n	800bc06 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bdf4:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bdf8:	4291      	cmp	r1, r2
 800bdfa:	d0eb      	beq.n	800bdd4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bdfc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bdfe:	4a0e      	ldr	r2, [pc, #56]	; (800be38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800be00:	2101      	movs	r1, #1
 800be02:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800be06:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800be0a:	2100      	movs	r1, #0
 800be0c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800be10:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800be12:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800be14:	07da      	lsls	r2, r3, #31
 800be16:	f53f af52 	bmi.w	800bcbe <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800be1a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800be1c:	e7d8      	b.n	800bdd0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800be1e:	4807      	ldr	r0, [pc, #28]	; (800be3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800be20:	6882      	ldr	r2, [r0, #8]
 800be22:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800be26:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800be2a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800be2e:	430a      	orrs	r2, r1
 800be30:	6082      	str	r2, [r0, #8]
 800be32:	e7d7      	b.n	800bde4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800be34:	42471000 	.word	0x42471000
 800be38:	42470000 	.word	0x42470000
 800be3c:	40023800 	.word	0x40023800
 800be40:	40007000 	.word	0x40007000

0800be44 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800be44:	b1f0      	cbz	r0, 800be84 <HAL_SDRAM_Init+0x40>
{
 800be46:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800be48:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800be4c:	460d      	mov	r5, r1
 800be4e:	4604      	mov	r4, r0
 800be50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be54:	b18b      	cbz	r3, 800be7a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800be56:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800be58:	2302      	movs	r3, #2
 800be5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800be5e:	f851 0b04 	ldr.w	r0, [r1], #4
 800be62:	f000 fe51 	bl	800cb08 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800be66:	e9d4 0200 	ldrd	r0, r2, [r4]
 800be6a:	4629      	mov	r1, r5
 800be6c:	f000 fe8a 	bl	800cb84 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800be70:	2301      	movs	r3, #1
 800be72:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800be76:	2000      	movs	r0, #0
}
 800be78:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800be7a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800be7e:	f7f5 fbfd 	bl	800167c <HAL_SDRAM_MspInit>
 800be82:	e7e8      	b.n	800be56 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800be84:	2001      	movs	r0, #1
}
 800be86:	4770      	bx	lr

0800be88 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800be88:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800be8a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800be8e:	2b02      	cmp	r3, #2
{
 800be90:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800be92:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800be94:	d004      	beq.n	800bea0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800be96:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800be9a:	2c01      	cmp	r4, #1
 800be9c:	d001      	beq.n	800bea2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800be9e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bea0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bea2:	460e      	mov	r6, r1
 800bea4:	2302      	movs	r3, #2
 800bea6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800beaa:	6828      	ldr	r0, [r5, #0]
 800beac:	f000 feb6 	bl	800cc1c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800beb0:	6833      	ldr	r3, [r6, #0]
 800beb2:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800beb4:	bf06      	itte	eq
 800beb6:	2305      	moveq	r3, #5
 800beb8:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bebc:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bec0:	2000      	movs	r0, #0
}
 800bec2:	bd70      	pop	{r4, r5, r6, pc}

0800bec4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bec4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bec6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800beca:	2b02      	cmp	r3, #2
{
 800becc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bece:	b2d8      	uxtb	r0, r3
 800bed0:	d005      	beq.n	800bede <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bed2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bed6:	2b01      	cmp	r3, #1
 800bed8:	b2dd      	uxtb	r5, r3
 800beda:	d001      	beq.n	800bee0 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bedc:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bede:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bee0:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bee2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bee4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bee8:	f000 fec2 	bl	800cc70 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800beec:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bef0:	2000      	movs	r0, #0
}
 800bef2:	bd38      	pop	{r3, r4, r5, pc}

0800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bef8:	b082      	sub	sp, #8
 800befa:	461d      	mov	r5, r3
 800befc:	4616      	mov	r6, r2
 800befe:	460c      	mov	r4, r1
 800bf00:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800bf02:	f7fd fb69 	bl	80095d8 <HAL_GetTick>
 800bf06:	4435      	add	r5, r6
 800bf08:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bf0a:	f7fd fb65 	bl	80095d8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bf0e:	4b27      	ldr	r3, [pc, #156]	; (800bfac <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bf10:	681b      	ldr	r3, [r3, #0]
 800bf12:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bf16:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bf1a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bf1c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bf1e:	1c73      	adds	r3, r6, #1
 800bf20:	6839      	ldr	r1, [r7, #0]
 800bf22:	d107      	bne.n	800bf34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bf24:	688b      	ldr	r3, [r1, #8]
 800bf26:	ea34 0303 	bics.w	r3, r4, r3
 800bf2a:	d0fb      	beq.n	800bf24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bf2c:	2000      	movs	r0, #0
}
 800bf2e:	b002      	add	sp, #8
 800bf30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bf34:	688b      	ldr	r3, [r1, #8]
 800bf36:	ea34 0303 	bics.w	r3, r4, r3
 800bf3a:	d1f7      	bne.n	800bf2c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bf3c:	f7fd fb4c 	bl	80095d8 <HAL_GetTick>
 800bf40:	eba0 0008 	sub.w	r0, r0, r8
 800bf44:	42a8      	cmp	r0, r5
 800bf46:	d208      	bcs.n	800bf5a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bf48:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bf4a:	2b00      	cmp	r3, #0
      count--;
 800bf4c:	9b01      	ldr	r3, [sp, #4]
 800bf4e:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bf52:	bf08      	it	eq
 800bf54:	2500      	moveq	r5, #0
      count--;
 800bf56:	9301      	str	r3, [sp, #4]
 800bf58:	e7e1      	b.n	800bf1e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf5a:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bf5e:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf60:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bf64:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bf68:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf6a:	d013      	beq.n	800bf94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bf6c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bf6e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bf72:	d107      	bne.n	800bf84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bf74:	681a      	ldr	r2, [r3, #0]
 800bf76:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bf7a:	601a      	str	r2, [r3, #0]
 800bf7c:	681a      	ldr	r2, [r3, #0]
 800bf7e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bf82:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bf84:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bf86:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bf88:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bf8c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bf90:	2003      	movs	r0, #3
 800bf92:	e7cc      	b.n	800bf2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf94:	68ba      	ldr	r2, [r7, #8]
 800bf96:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bf9a:	d002      	beq.n	800bfa2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bf9c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bfa0:	d1e4      	bne.n	800bf6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bfa2:	681a      	ldr	r2, [r3, #0]
 800bfa4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bfa8:	601a      	str	r2, [r3, #0]
 800bfaa:	e7df      	b.n	800bf6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bfac:	20000078 	.word	0x20000078

0800bfb0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bfb0:	b538      	push	{r3, r4, r5, lr}
 800bfb2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfb4:	6842      	ldr	r2, [r0, #4]
 800bfb6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bfba:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfbc:	d006      	beq.n	800bfcc <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bfbe:	460a      	mov	r2, r1
 800bfc0:	2101      	movs	r1, #1
 800bfc2:	f7ff ff97 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bfc6:	b978      	cbnz	r0, 800bfe8 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bfc8:	2000      	movs	r0, #0
}
 800bfca:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfcc:	6882      	ldr	r2, [r0, #8]
 800bfce:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bfd2:	d01c      	beq.n	800c00e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bfd4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bfd8:	d00c      	beq.n	800bff4 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bfda:	460a      	mov	r2, r1
 800bfdc:	4620      	mov	r0, r4
 800bfde:	2180      	movs	r1, #128	; 0x80
 800bfe0:	f7ff ff88 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bfe4:	2800      	cmp	r0, #0
 800bfe6:	d0ef      	beq.n	800bfc8 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bfe8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bfea:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bfee:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bff0:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bff2:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bff4:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bff6:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bff8:	6829      	ldr	r1, [r5, #0]
 800bffa:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bffe:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c000:	2101      	movs	r1, #1
 800c002:	f7ff ff77 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c006:	2800      	cmp	r0, #0
 800c008:	d1ee      	bne.n	800bfe8 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c00a:	2000      	movs	r0, #0
 800c00c:	e7dd      	b.n	800bfca <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c00e:	6800      	ldr	r0, [r0, #0]
 800c010:	6802      	ldr	r2, [r0, #0]
 800c012:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c016:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c018:	460a      	mov	r2, r1
 800c01a:	4620      	mov	r0, r4
 800c01c:	2180      	movs	r1, #128	; 0x80
 800c01e:	f7ff ff69 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c022:	2800      	cmp	r0, #0
 800c024:	d0d0      	beq.n	800bfc8 <SPI_EndRxTransaction+0x18>
 800c026:	e7df      	b.n	800bfe8 <SPI_EndRxTransaction+0x38>

0800c028 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c028:	2800      	cmp	r0, #0
 800c02a:	d05c      	beq.n	800c0e6 <HAL_SPI_Init+0xbe>
{
 800c02c:	b570      	push	{r4, r5, r6, lr}
 800c02e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c030:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c032:	2800      	cmp	r0, #0
 800c034:	d047      	beq.n	800c0c6 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c036:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c038:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c03c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c040:	2200      	movs	r2, #0
 800c042:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c044:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c048:	2b00      	cmp	r3, #0
 800c04a:	d042      	beq.n	800c0d2 <HAL_SPI_Init+0xaa>
 800c04c:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c04e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c050:	68a5      	ldr	r5, [r4, #8]
 800c052:	69a2      	ldr	r2, [r4, #24]
 800c054:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c056:	2302      	movs	r3, #2
 800c058:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c05c:	680b      	ldr	r3, [r1, #0]
 800c05e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c062:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c064:	6863      	ldr	r3, [r4, #4]
 800c066:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c06a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c06e:	432b      	orrs	r3, r5
 800c070:	68e5      	ldr	r5, [r4, #12]
 800c072:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c076:	432b      	orrs	r3, r5
 800c078:	6925      	ldr	r5, [r4, #16]
 800c07a:	f005 0502 	and.w	r5, r5, #2
 800c07e:	432b      	orrs	r3, r5
 800c080:	6965      	ldr	r5, [r4, #20]
 800c082:	f005 0501 	and.w	r5, r5, #1
 800c086:	432b      	orrs	r3, r5
 800c088:	69e5      	ldr	r5, [r4, #28]
 800c08a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c08e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c092:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c096:	4333      	orrs	r3, r6
 800c098:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c09a:	0c12      	lsrs	r2, r2, #16
 800c09c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c0a0:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c0a4:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c0a8:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c0ac:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c0ae:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c0b0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c0b2:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c0b4:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c0b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c0ba:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c0bc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c0be:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c0c0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c0c4:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c0c6:	6863      	ldr	r3, [r4, #4]
 800c0c8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c0cc:	d0b6      	beq.n	800c03c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c0ce:	61e0      	str	r0, [r4, #28]
 800c0d0:	e7b4      	b.n	800c03c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c0d2:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c0d4:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c0d8:	f7f5 fa4a 	bl	8001570 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c0dc:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c0e0:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c0e4:	e7b3      	b.n	800c04e <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c0e6:	2001      	movs	r0, #1
}
 800c0e8:	4770      	bx	lr
 800c0ea:	bf00      	nop

0800c0ec <HAL_SPI_Transmit>:
{
 800c0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0f0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c0f2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c0f6:	2801      	cmp	r0, #1
{
 800c0f8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c0fa:	f000 8085 	beq.w	800c208 <HAL_SPI_Transmit+0x11c>
 800c0fe:	461d      	mov	r5, r3
 800c100:	2301      	movs	r3, #1
 800c102:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c106:	4688      	mov	r8, r1
 800c108:	4617      	mov	r7, r2
 800c10a:	f7fd fa65 	bl	80095d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c10e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c112:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c114:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c116:	b2d8      	uxtb	r0, r3
 800c118:	d009      	beq.n	800c12e <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c11a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c11c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c11e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c120:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c124:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c128:	b002      	add	sp, #8
 800c12a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c12e:	f1b8 0f00 	cmp.w	r8, #0
 800c132:	d0f3      	beq.n	800c11c <HAL_SPI_Transmit+0x30>
 800c134:	2f00      	cmp	r7, #0
 800c136:	d0f1      	beq.n	800c11c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c138:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c13a:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c13c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c140:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c142:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c144:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c148:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c14c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c150:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c152:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c154:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c156:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c158:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c15a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c15c:	f000 8085 	beq.w	800c26a <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c160:	6803      	ldr	r3, [r0, #0]
 800c162:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c164:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c166:	d403      	bmi.n	800c170 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c168:	6803      	ldr	r3, [r0, #0]
 800c16a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c16e:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c170:	68e3      	ldr	r3, [r4, #12]
 800c172:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c176:	d04b      	beq.n	800c210 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c178:	6863      	ldr	r3, [r4, #4]
 800c17a:	2b00      	cmp	r3, #0
 800c17c:	f000 8097 	beq.w	800c2ae <HAL_SPI_Transmit+0x1c2>
 800c180:	2f01      	cmp	r7, #1
 800c182:	f000 8094 	beq.w	800c2ae <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c186:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c188:	b29b      	uxth	r3, r3
 800c18a:	b1ab      	cbz	r3, 800c1b8 <HAL_SPI_Transmit+0xcc>
 800c18c:	1c68      	adds	r0, r5, #1
 800c18e:	f040 8083 	bne.w	800c298 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c192:	6823      	ldr	r3, [r4, #0]
 800c194:	689a      	ldr	r2, [r3, #8]
 800c196:	0791      	lsls	r1, r2, #30
 800c198:	f140 8094 	bpl.w	800c2c4 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c19c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c19e:	7812      	ldrb	r2, [r2, #0]
 800c1a0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c1a2:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c1a6:	3901      	subs	r1, #1
 800c1a8:	b289      	uxth	r1, r1
 800c1aa:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c1ac:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1ae:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c1b0:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1b2:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c1b4:	2900      	cmp	r1, #0
 800c1b6:	d1ec      	bne.n	800c192 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1b8:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c1ba:	4b5b      	ldr	r3, [pc, #364]	; (800c328 <HAL_SPI_Transmit+0x23c>)
 800c1bc:	4a5b      	ldr	r2, [pc, #364]	; (800c32c <HAL_SPI_Transmit+0x240>)
 800c1be:	681b      	ldr	r3, [r3, #0]
 800c1c0:	fba2 2303 	umull	r2, r3, r2, r3
 800c1c4:	0d5b      	lsrs	r3, r3, #21
 800c1c6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c1ca:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1ce:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c1d2:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1d4:	d107      	bne.n	800c1e6 <HAL_SPI_Transmit+0xfa>
 800c1d6:	e098      	b.n	800c30a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c1d8:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c1da:	6822      	ldr	r2, [r4, #0]
      count--;
 800c1dc:	3b01      	subs	r3, #1
 800c1de:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c1e0:	6893      	ldr	r3, [r2, #8]
 800c1e2:	061b      	lsls	r3, r3, #24
 800c1e4:	d502      	bpl.n	800c1ec <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c1e6:	9b01      	ldr	r3, [sp, #4]
 800c1e8:	2b00      	cmp	r3, #0
 800c1ea:	d1f5      	bne.n	800c1d8 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c1ec:	68a3      	ldr	r3, [r4, #8]
 800c1ee:	b933      	cbnz	r3, 800c1fe <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c1f0:	6822      	ldr	r2, [r4, #0]
 800c1f2:	9300      	str	r3, [sp, #0]
 800c1f4:	68d3      	ldr	r3, [r2, #12]
 800c1f6:	9300      	str	r3, [sp, #0]
 800c1f8:	6893      	ldr	r3, [r2, #8]
 800c1fa:	9300      	str	r3, [sp, #0]
 800c1fc:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c1fe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c200:	3800      	subs	r0, #0
 800c202:	bf18      	it	ne
 800c204:	2001      	movne	r0, #1
error:
 800c206:	e789      	b.n	800c11c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c208:	2002      	movs	r0, #2
}
 800c20a:	b002      	add	sp, #8
 800c20c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c210:	6861      	ldr	r1, [r4, #4]
 800c212:	2900      	cmp	r1, #0
 800c214:	d176      	bne.n	800c304 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c216:	4643      	mov	r3, r8
 800c218:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c21c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c21e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c220:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c222:	3b01      	subs	r3, #1
 800c224:	b29b      	uxth	r3, r3
 800c226:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c228:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c22a:	b29b      	uxth	r3, r3
 800c22c:	2b00      	cmp	r3, #0
 800c22e:	d0c4      	beq.n	800c1ba <HAL_SPI_Transmit+0xce>
 800c230:	1c6b      	adds	r3, r5, #1
 800c232:	d15e      	bne.n	800c2f2 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c234:	6883      	ldr	r3, [r0, #8]
 800c236:	079f      	lsls	r7, r3, #30
 800c238:	d50f      	bpl.n	800c25a <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c23a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c23c:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c240:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c242:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c244:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c246:	3b01      	subs	r3, #1
 800c248:	b29b      	uxth	r3, r3
 800c24a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c24c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c24e:	b29b      	uxth	r3, r3
 800c250:	2b00      	cmp	r3, #0
 800c252:	d0b1      	beq.n	800c1b8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c254:	6883      	ldr	r3, [r0, #8]
 800c256:	079f      	lsls	r7, r3, #30
 800c258:	d4ef      	bmi.n	800c23a <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c25a:	f7fd f9bd 	bl	80095d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c25e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c260:	b29b      	uxth	r3, r3
 800c262:	2b00      	cmp	r3, #0
 800c264:	d0a8      	beq.n	800c1b8 <HAL_SPI_Transmit+0xcc>
 800c266:	6820      	ldr	r0, [r4, #0]
 800c268:	e7e4      	b.n	800c234 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c26a:	6803      	ldr	r3, [r0, #0]
 800c26c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c270:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c272:	6803      	ldr	r3, [r0, #0]
 800c274:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c278:	6003      	str	r3, [r0, #0]
 800c27a:	e771      	b.n	800c160 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c27c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c27e:	7812      	ldrb	r2, [r2, #0]
 800c280:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c282:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c284:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c286:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c288:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c28a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c28c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c28e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c290:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c292:	b29b      	uxth	r3, r3
 800c294:	2b00      	cmp	r3, #0
 800c296:	d08f      	beq.n	800c1b8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c298:	6823      	ldr	r3, [r4, #0]
 800c29a:	689a      	ldr	r2, [r3, #8]
 800c29c:	0792      	lsls	r2, r2, #30
 800c29e:	d4ed      	bmi.n	800c27c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2a0:	f7fd f99a 	bl	80095d8 <HAL_GetTick>
 800c2a4:	1b80      	subs	r0, r0, r6
 800c2a6:	42a8      	cmp	r0, r5
 800c2a8:	d3f2      	bcc.n	800c290 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c2aa:	2003      	movs	r0, #3
 800c2ac:	e736      	b.n	800c11c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c2ae:	f898 3000 	ldrb.w	r3, [r8]
 800c2b2:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c2b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2b6:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2b8:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2ba:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c2bc:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2be:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2c0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c2c2:	e760      	b.n	800c186 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2c4:	f7fd f988 	bl	80095d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c2c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2ca:	b29b      	uxth	r3, r3
 800c2cc:	2b00      	cmp	r3, #0
 800c2ce:	f47f af60 	bne.w	800c192 <HAL_SPI_Transmit+0xa6>
 800c2d2:	e771      	b.n	800c1b8 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c2d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c2d6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c2da:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c2dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c2de:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c2e0:	3b01      	subs	r3, #1
 800c2e2:	b29b      	uxth	r3, r3
 800c2e4:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c2e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2e8:	b29b      	uxth	r3, r3
 800c2ea:	2b00      	cmp	r3, #0
 800c2ec:	f43f af64 	beq.w	800c1b8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c2f0:	6822      	ldr	r2, [r4, #0]
 800c2f2:	6893      	ldr	r3, [r2, #8]
 800c2f4:	0799      	lsls	r1, r3, #30
 800c2f6:	d4ed      	bmi.n	800c2d4 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2f8:	f7fd f96e 	bl	80095d8 <HAL_GetTick>
 800c2fc:	1b80      	subs	r0, r0, r6
 800c2fe:	42a8      	cmp	r0, r5
 800c300:	d3f1      	bcc.n	800c2e6 <HAL_SPI_Transmit+0x1fa>
 800c302:	e7d2      	b.n	800c2aa <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c304:	2f01      	cmp	r7, #1
 800c306:	d18f      	bne.n	800c228 <HAL_SPI_Transmit+0x13c>
 800c308:	e785      	b.n	800c216 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c30a:	4633      	mov	r3, r6
 800c30c:	462a      	mov	r2, r5
 800c30e:	2180      	movs	r1, #128	; 0x80
 800c310:	4620      	mov	r0, r4
 800c312:	f7ff fdef 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c316:	2800      	cmp	r0, #0
 800c318:	f43f af68 	beq.w	800c1ec <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c31c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c31e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c320:	4313      	orrs	r3, r2
 800c322:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c324:	6562      	str	r2, [r4, #84]	; 0x54
 800c326:	e761      	b.n	800c1ec <HAL_SPI_Transmit+0x100>
 800c328:	20000078 	.word	0x20000078
 800c32c:	165e9f81 	.word	0x165e9f81

0800c330 <HAL_SPI_TransmitReceive>:
{
 800c330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c334:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c336:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c33a:	2801      	cmp	r0, #1
{
 800c33c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c33e:	f000 80ac 	beq.w	800c49a <HAL_SPI_TransmitReceive+0x16a>
 800c342:	461e      	mov	r6, r3
 800c344:	2301      	movs	r3, #1
 800c346:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c34a:	4690      	mov	r8, r2
 800c34c:	460f      	mov	r7, r1
 800c34e:	f7fd f943 	bl	80095d8 <HAL_GetTick>
 800c352:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c354:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c358:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c35a:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c35c:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c35e:	d011      	beq.n	800c384 <HAL_SPI_TransmitReceive+0x54>
 800c360:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c364:	d009      	beq.n	800c37a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c366:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c368:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c36a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c36c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c370:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c374:	b002      	add	sp, #8
 800c376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c37a:	68a1      	ldr	r1, [r4, #8]
 800c37c:	2900      	cmp	r1, #0
 800c37e:	d1f2      	bne.n	800c366 <HAL_SPI_TransmitReceive+0x36>
 800c380:	2a04      	cmp	r2, #4
 800c382:	d1f0      	bne.n	800c366 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c384:	2f00      	cmp	r7, #0
 800c386:	f000 808c 	beq.w	800c4a2 <HAL_SPI_TransmitReceive+0x172>
 800c38a:	f1b8 0f00 	cmp.w	r8, #0
 800c38e:	f000 8088 	beq.w	800c4a2 <HAL_SPI_TransmitReceive+0x172>
 800c392:	2e00      	cmp	r6, #0
 800c394:	f000 8085 	beq.w	800c4a2 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c398:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c39c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c3a0:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c3a2:	bf1c      	itt	ne
 800c3a4:	2205      	movne	r2, #5
 800c3a6:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c3aa:	2200      	movs	r2, #0
 800c3ac:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c3ae:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3b2:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c3b4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c3b6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3b8:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c3ba:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3bc:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c3be:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c3c0:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3c2:	d403      	bmi.n	800c3cc <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c3c4:	6811      	ldr	r1, [r2, #0]
 800c3c6:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c3ca:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c3cc:	68e1      	ldr	r1, [r4, #12]
 800c3ce:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c3d2:	f000 809e 	beq.w	800c512 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	f000 8091 	beq.w	800c4fe <HAL_SPI_TransmitReceive+0x1ce>
 800c3dc:	2e01      	cmp	r6, #1
 800c3de:	f000 808e 	beq.w	800c4fe <HAL_SPI_TransmitReceive+0x1ce>
 800c3e2:	9b08      	ldr	r3, [sp, #32]
 800c3e4:	3301      	adds	r3, #1
        txallowed = 1U;
 800c3e6:	f04f 0601 	mov.w	r6, #1
 800c3ea:	d028      	beq.n	800c43e <HAL_SPI_TransmitReceive+0x10e>
 800c3ec:	e05b      	b.n	800c4a6 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c3ee:	6821      	ldr	r1, [r4, #0]
 800c3f0:	688b      	ldr	r3, [r1, #8]
 800c3f2:	0798      	lsls	r0, r3, #30
 800c3f4:	d50f      	bpl.n	800c416 <HAL_SPI_TransmitReceive+0xe6>
 800c3f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c3f8:	b29b      	uxth	r3, r3
 800c3fa:	b163      	cbz	r3, 800c416 <HAL_SPI_TransmitReceive+0xe6>
 800c3fc:	b15e      	cbz	r6, 800c416 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c3fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c400:	781b      	ldrb	r3, [r3, #0]
 800c402:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c404:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c406:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c408:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c40a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c40c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c40e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c410:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c412:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c414:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c416:	688a      	ldr	r2, [r1, #8]
 800c418:	f012 0201 	ands.w	r2, r2, #1
 800c41c:	d00d      	beq.n	800c43a <HAL_SPI_TransmitReceive+0x10a>
 800c41e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c420:	b29b      	uxth	r3, r3
 800c422:	b153      	cbz	r3, 800c43a <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c424:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c426:	68c9      	ldr	r1, [r1, #12]
 800c428:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c42a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c42c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c42e:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c430:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c432:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c434:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c436:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c438:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c43a:	f7fd f8cd 	bl	80095d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c43e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c440:	b292      	uxth	r2, r2
 800c442:	2a00      	cmp	r2, #0
 800c444:	d1d3      	bne.n	800c3ee <HAL_SPI_TransmitReceive+0xbe>
 800c446:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c448:	b29b      	uxth	r3, r3
 800c44a:	2b00      	cmp	r3, #0
 800c44c:	d1cf      	bne.n	800c3ee <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c44e:	4b79      	ldr	r3, [pc, #484]	; (800c634 <HAL_SPI_TransmitReceive+0x304>)
 800c450:	4a79      	ldr	r2, [pc, #484]	; (800c638 <HAL_SPI_TransmitReceive+0x308>)
 800c452:	681b      	ldr	r3, [r3, #0]
 800c454:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c458:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c45a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c45e:	0d5b      	lsrs	r3, r3, #21
 800c460:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c464:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c468:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c46a:	d107      	bne.n	800c47c <HAL_SPI_TransmitReceive+0x14c>
 800c46c:	e0d2      	b.n	800c614 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c46e:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c470:	6822      	ldr	r2, [r4, #0]
      count--;
 800c472:	3b01      	subs	r3, #1
 800c474:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c476:	6893      	ldr	r3, [r2, #8]
 800c478:	061b      	lsls	r3, r3, #24
 800c47a:	d502      	bpl.n	800c482 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c47c:	9b01      	ldr	r3, [sp, #4]
 800c47e:	2b00      	cmp	r3, #0
 800c480:	d1f5      	bne.n	800c46e <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c482:	68a0      	ldr	r0, [r4, #8]
 800c484:	2800      	cmp	r0, #0
 800c486:	f040 8082 	bne.w	800c58e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c48a:	6823      	ldr	r3, [r4, #0]
 800c48c:	9000      	str	r0, [sp, #0]
 800c48e:	68da      	ldr	r2, [r3, #12]
 800c490:	9200      	str	r2, [sp, #0]
 800c492:	689b      	ldr	r3, [r3, #8]
 800c494:	9300      	str	r3, [sp, #0]
 800c496:	9b00      	ldr	r3, [sp, #0]
 800c498:	e766      	b.n	800c368 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c49a:	2002      	movs	r0, #2
}
 800c49c:	b002      	add	sp, #8
 800c49e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c4a2:	2001      	movs	r0, #1
 800c4a4:	e760      	b.n	800c368 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c4a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4a8:	b29b      	uxth	r3, r3
 800c4aa:	b91b      	cbnz	r3, 800c4b4 <HAL_SPI_TransmitReceive+0x184>
 800c4ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c4ae:	b29b      	uxth	r3, r3
 800c4b0:	2b00      	cmp	r3, #0
 800c4b2:	d0cc      	beq.n	800c44e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c4b4:	6822      	ldr	r2, [r4, #0]
 800c4b6:	6893      	ldr	r3, [r2, #8]
 800c4b8:	0799      	lsls	r1, r3, #30
 800c4ba:	d50f      	bpl.n	800c4dc <HAL_SPI_TransmitReceive+0x1ac>
 800c4bc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4be:	b29b      	uxth	r3, r3
 800c4c0:	b163      	cbz	r3, 800c4dc <HAL_SPI_TransmitReceive+0x1ac>
 800c4c2:	b15e      	cbz	r6, 800c4dc <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c4c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c4c6:	781b      	ldrb	r3, [r3, #0]
 800c4c8:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c4ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c4cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c4ce:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c4d0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c4d2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c4d4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c4d6:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c4d8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c4da:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c4dc:	6893      	ldr	r3, [r2, #8]
 800c4de:	f013 0301 	ands.w	r3, r3, #1
 800c4e2:	d004      	beq.n	800c4ee <HAL_SPI_TransmitReceive+0x1be>
 800c4e4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c4e6:	b289      	uxth	r1, r1
 800c4e8:	2900      	cmp	r1, #0
 800c4ea:	f040 8087 	bne.w	800c5fc <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c4ee:	f7fd f873 	bl	80095d8 <HAL_GetTick>
 800c4f2:	9b08      	ldr	r3, [sp, #32]
 800c4f4:	1b40      	subs	r0, r0, r5
 800c4f6:	4298      	cmp	r0, r3
 800c4f8:	d3d5      	bcc.n	800c4a6 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c4fa:	2003      	movs	r0, #3
 800c4fc:	e734      	b.n	800c368 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c4fe:	783b      	ldrb	r3, [r7, #0]
 800c500:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c502:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c504:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c506:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c508:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c50a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c50c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c50e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c510:	e767      	b.n	800c3e2 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c512:	2b00      	cmp	r3, #0
 800c514:	d13d      	bne.n	800c592 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c516:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c51a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c51c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c51e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c520:	3b01      	subs	r3, #1
 800c522:	b29b      	uxth	r3, r3
 800c524:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c526:	9b08      	ldr	r3, [sp, #32]
 800c528:	3301      	adds	r3, #1
{
 800c52a:	f04f 0601 	mov.w	r6, #1
 800c52e:	d025      	beq.n	800c57c <HAL_SPI_TransmitReceive+0x24c>
 800c530:	e032      	b.n	800c598 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c532:	6823      	ldr	r3, [r4, #0]
 800c534:	689a      	ldr	r2, [r3, #8]
 800c536:	0792      	lsls	r2, r2, #30
 800c538:	d50d      	bpl.n	800c556 <HAL_SPI_TransmitReceive+0x226>
 800c53a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c53c:	b292      	uxth	r2, r2
 800c53e:	b152      	cbz	r2, 800c556 <HAL_SPI_TransmitReceive+0x226>
 800c540:	b14e      	cbz	r6, 800c556 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c542:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c544:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c548:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c54a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c54c:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c54e:	3a01      	subs	r2, #1
 800c550:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c552:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c554:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c556:	689a      	ldr	r2, [r3, #8]
 800c558:	f012 0201 	ands.w	r2, r2, #1
 800c55c:	d00c      	beq.n	800c578 <HAL_SPI_TransmitReceive+0x248>
 800c55e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c560:	b289      	uxth	r1, r1
 800c562:	b149      	cbz	r1, 800c578 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c564:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c566:	68db      	ldr	r3, [r3, #12]
 800c568:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c56c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c56e:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c570:	3b01      	subs	r3, #1
 800c572:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c574:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c576:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c578:	f7fd f82e 	bl	80095d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c57c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c57e:	b29b      	uxth	r3, r3
 800c580:	2b00      	cmp	r3, #0
 800c582:	d1d6      	bne.n	800c532 <HAL_SPI_TransmitReceive+0x202>
 800c584:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c586:	b29b      	uxth	r3, r3
 800c588:	2b00      	cmp	r3, #0
 800c58a:	d1d2      	bne.n	800c532 <HAL_SPI_TransmitReceive+0x202>
 800c58c:	e75f      	b.n	800c44e <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c58e:	2000      	movs	r0, #0
 800c590:	e6ea      	b.n	800c368 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c592:	2e01      	cmp	r6, #1
 800c594:	d1c7      	bne.n	800c526 <HAL_SPI_TransmitReceive+0x1f6>
 800c596:	e7be      	b.n	800c516 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c598:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c59a:	b29b      	uxth	r3, r3
 800c59c:	b923      	cbnz	r3, 800c5a8 <HAL_SPI_TransmitReceive+0x278>
 800c59e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5a0:	b29b      	uxth	r3, r3
 800c5a2:	2b00      	cmp	r3, #0
 800c5a4:	f43f af53 	beq.w	800c44e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c5a8:	6822      	ldr	r2, [r4, #0]
 800c5aa:	6893      	ldr	r3, [r2, #8]
 800c5ac:	079f      	lsls	r7, r3, #30
 800c5ae:	d50d      	bpl.n	800c5cc <HAL_SPI_TransmitReceive+0x29c>
 800c5b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c5b2:	b29b      	uxth	r3, r3
 800c5b4:	b153      	cbz	r3, 800c5cc <HAL_SPI_TransmitReceive+0x29c>
 800c5b6:	b14e      	cbz	r6, 800c5cc <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c5b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c5ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c5be:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c5c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c5c2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c5c4:	3b01      	subs	r3, #1
 800c5c6:	b29b      	uxth	r3, r3
 800c5c8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c5ca:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c5cc:	6893      	ldr	r3, [r2, #8]
 800c5ce:	f013 0301 	ands.w	r3, r3, #1
 800c5d2:	d00c      	beq.n	800c5ee <HAL_SPI_TransmitReceive+0x2be>
 800c5d4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c5d6:	b289      	uxth	r1, r1
 800c5d8:	b149      	cbz	r1, 800c5ee <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c5da:	68d1      	ldr	r1, [r2, #12]
 800c5dc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5de:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c5e2:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c5e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c5e6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5e8:	3b01      	subs	r3, #1
 800c5ea:	b29b      	uxth	r3, r3
 800c5ec:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c5ee:	f7fc fff3 	bl	80095d8 <HAL_GetTick>
 800c5f2:	9b08      	ldr	r3, [sp, #32]
 800c5f4:	1b40      	subs	r0, r0, r5
 800c5f6:	4298      	cmp	r0, r3
 800c5f8:	d3ce      	bcc.n	800c598 <HAL_SPI_TransmitReceive+0x268>
 800c5fa:	e77e      	b.n	800c4fa <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c5fc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c5fe:	68d2      	ldr	r2, [r2, #12]
 800c600:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c602:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c604:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c606:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c608:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c60a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c60c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c60e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c610:	461e      	mov	r6, r3
 800c612:	e76c      	b.n	800c4ee <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c614:	9a08      	ldr	r2, [sp, #32]
 800c616:	462b      	mov	r3, r5
 800c618:	2180      	movs	r1, #128	; 0x80
 800c61a:	4620      	mov	r0, r4
 800c61c:	f7ff fc6a 	bl	800bef4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c620:	2800      	cmp	r0, #0
 800c622:	f43f af2e 	beq.w	800c482 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c626:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c628:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c62a:	4313      	orrs	r3, r2
 800c62c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c62e:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c630:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c632:	e699      	b.n	800c368 <HAL_SPI_TransmitReceive+0x38>
 800c634:	20000078 	.word	0x20000078
 800c638:	165e9f81 	.word	0x165e9f81

0800c63c <HAL_SPI_Receive>:
{
 800c63c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c640:	6846      	ldr	r6, [r0, #4]
 800c642:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c646:	b082      	sub	sp, #8
 800c648:	4604      	mov	r4, r0
 800c64a:	4690      	mov	r8, r2
 800c64c:	461d      	mov	r5, r3
 800c64e:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c650:	d06e      	beq.n	800c730 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c652:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c656:	2b01      	cmp	r3, #1
 800c658:	d076      	beq.n	800c748 <HAL_SPI_Receive+0x10c>
 800c65a:	2301      	movs	r3, #1
 800c65c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c660:	f7fc ffba 	bl	80095d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c664:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c668:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c66c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c66e:	fa5f f08c 	uxtb.w	r0, ip
 800c672:	d009      	beq.n	800c688 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c674:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c676:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c678:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c67a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c67e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c682:	b002      	add	sp, #8
 800c684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c688:	2f00      	cmp	r7, #0
 800c68a:	d0f4      	beq.n	800c676 <HAL_SPI_Receive+0x3a>
 800c68c:	f1b8 0f00 	cmp.w	r8, #0
 800c690:	d0f1      	beq.n	800c676 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c692:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c694:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c696:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c69a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c69c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c6a0:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c6a4:	f04f 0104 	mov.w	r1, #4
 800c6a8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c6ac:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c6b0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c6b2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c6b4:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c6b6:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c6ba:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c6bc:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6be:	d107      	bne.n	800c6d0 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c6c0:	6811      	ldr	r1, [r2, #0]
 800c6c2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c6c6:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c6c8:	6811      	ldr	r1, [r2, #0]
 800c6ca:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c6ce:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c6d0:	6811      	ldr	r1, [r2, #0]
 800c6d2:	0648      	lsls	r0, r1, #25
 800c6d4:	d403      	bmi.n	800c6de <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c6d6:	6811      	ldr	r1, [r2, #0]
 800c6d8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c6dc:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c6de:	68e1      	ldr	r1, [r4, #12]
 800c6e0:	2900      	cmp	r1, #0
 800c6e2:	d054      	beq.n	800c78e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c6e4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c6e6:	b289      	uxth	r1, r1
 800c6e8:	b1a9      	cbz	r1, 800c716 <HAL_SPI_Receive+0xda>
 800c6ea:	1c69      	adds	r1, r5, #1
 800c6ec:	d13e      	bne.n	800c76c <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c6ee:	6893      	ldr	r3, [r2, #8]
 800c6f0:	07db      	lsls	r3, r3, #31
 800c6f2:	d544      	bpl.n	800c77e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c6f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c6f6:	68d1      	ldr	r1, [r2, #12]
 800c6f8:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c6fc:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c700:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c702:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c706:	fa1f fc8c 	uxth.w	ip, ip
 800c70a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c70e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c710:	b29b      	uxth	r3, r3
 800c712:	2b00      	cmp	r3, #0
 800c714:	d1eb      	bne.n	800c6ee <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c716:	4632      	mov	r2, r6
 800c718:	4629      	mov	r1, r5
 800c71a:	4620      	mov	r0, r4
 800c71c:	f7ff fc48 	bl	800bfb0 <SPI_EndRxTransaction>
 800c720:	b108      	cbz	r0, 800c726 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c722:	2320      	movs	r3, #32
 800c724:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c726:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c728:	3800      	subs	r0, #0
 800c72a:	bf18      	it	ne
 800c72c:	2001      	movne	r0, #1
error :
 800c72e:	e7a2      	b.n	800c676 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c730:	6883      	ldr	r3, [r0, #8]
 800c732:	2b00      	cmp	r3, #0
 800c734:	d18d      	bne.n	800c652 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c736:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c738:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c73a:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c73c:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c740:	460a      	mov	r2, r1
 800c742:	f7ff fdf5 	bl	800c330 <HAL_SPI_TransmitReceive>
 800c746:	e79c      	b.n	800c682 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c748:	2002      	movs	r0, #2
}
 800c74a:	b002      	add	sp, #8
 800c74c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c750:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c752:	68db      	ldr	r3, [r3, #12]
 800c754:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c758:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c75a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c75c:	3b01      	subs	r3, #1
 800c75e:	b29b      	uxth	r3, r3
 800c760:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c762:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c764:	b29b      	uxth	r3, r3
 800c766:	2b00      	cmp	r3, #0
 800c768:	d0d5      	beq.n	800c716 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c76a:	6823      	ldr	r3, [r4, #0]
 800c76c:	689a      	ldr	r2, [r3, #8]
 800c76e:	07d2      	lsls	r2, r2, #31
 800c770:	d4ee      	bmi.n	800c750 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c772:	f7fc ff31 	bl	80095d8 <HAL_GetTick>
 800c776:	1b80      	subs	r0, r0, r6
 800c778:	42a8      	cmp	r0, r5
 800c77a:	d243      	bcs.n	800c804 <HAL_SPI_Receive+0x1c8>
 800c77c:	e7f1      	b.n	800c762 <HAL_SPI_Receive+0x126>
 800c77e:	f7fc ff2b 	bl	80095d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c782:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c784:	b29b      	uxth	r3, r3
 800c786:	2b00      	cmp	r3, #0
 800c788:	d0c5      	beq.n	800c716 <HAL_SPI_Receive+0xda>
 800c78a:	6822      	ldr	r2, [r4, #0]
 800c78c:	e7af      	b.n	800c6ee <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c78e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c790:	b292      	uxth	r2, r2
 800c792:	2a00      	cmp	r2, #0
 800c794:	d0bf      	beq.n	800c716 <HAL_SPI_Receive+0xda>
 800c796:	1c6f      	adds	r7, r5, #1
 800c798:	d013      	beq.n	800c7c2 <HAL_SPI_Receive+0x186>
 800c79a:	e02b      	b.n	800c7f4 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c79c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c79e:	7b1b      	ldrb	r3, [r3, #12]
 800c7a0:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c7a2:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7a6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c7a8:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c7ac:	fa1f fc8c 	uxth.w	ip, ip
 800c7b0:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c7b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7b6:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c7b8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7ba:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c7bc:	2b00      	cmp	r3, #0
 800c7be:	d0aa      	beq.n	800c716 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c7c0:	6823      	ldr	r3, [r4, #0]
 800c7c2:	689a      	ldr	r2, [r3, #8]
 800c7c4:	07d0      	lsls	r0, r2, #31
 800c7c6:	d4e9      	bmi.n	800c79c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c7c8:	f7fc ff06 	bl	80095d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c7cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c7ce:	b29b      	uxth	r3, r3
 800c7d0:	2b00      	cmp	r3, #0
 800c7d2:	d1f5      	bne.n	800c7c0 <HAL_SPI_Receive+0x184>
 800c7d4:	e79f      	b.n	800c716 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c7d6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c7d8:	7b1b      	ldrb	r3, [r3, #12]
 800c7da:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c7dc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c7e0:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7e2:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c7e4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7e6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c7e8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c7ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c7ec:	b29b      	uxth	r3, r3
 800c7ee:	2b00      	cmp	r3, #0
 800c7f0:	d091      	beq.n	800c716 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c7f2:	6823      	ldr	r3, [r4, #0]
 800c7f4:	689a      	ldr	r2, [r3, #8]
 800c7f6:	07d1      	lsls	r1, r2, #31
 800c7f8:	d4ed      	bmi.n	800c7d6 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c7fa:	f7fc feed 	bl	80095d8 <HAL_GetTick>
 800c7fe:	1b80      	subs	r0, r0, r6
 800c800:	42a8      	cmp	r0, r5
 800c802:	d3f2      	bcc.n	800c7ea <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c804:	2003      	movs	r0, #3
 800c806:	e736      	b.n	800c676 <HAL_SPI_Receive+0x3a>

0800c808 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c808:	2800      	cmp	r0, #0
 800c80a:	f000 8087 	beq.w	800c91c <HAL_TIM_Base_Init+0x114>
{
 800c80e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c810:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c814:	4604      	mov	r4, r0
 800c816:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c81a:	2b00      	cmp	r3, #0
 800c81c:	d079      	beq.n	800c912 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c81e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c820:	493f      	ldr	r1, [pc, #252]	; (800c920 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c822:	2302      	movs	r3, #2
 800c824:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c828:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c82a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c82c:	d05d      	beq.n	800c8ea <HAL_TIM_Base_Init+0xe2>
 800c82e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c832:	d031      	beq.n	800c898 <HAL_TIM_Base_Init+0x90>
 800c834:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c838:	428a      	cmp	r2, r1
 800c83a:	d02d      	beq.n	800c898 <HAL_TIM_Base_Init+0x90>
 800c83c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c840:	428a      	cmp	r2, r1
 800c842:	d029      	beq.n	800c898 <HAL_TIM_Base_Init+0x90>
 800c844:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c848:	428a      	cmp	r2, r1
 800c84a:	d025      	beq.n	800c898 <HAL_TIM_Base_Init+0x90>
 800c84c:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c850:	428a      	cmp	r2, r1
 800c852:	d04a      	beq.n	800c8ea <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c854:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c858:	428a      	cmp	r2, r1
 800c85a:	d021      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
 800c85c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c860:	428a      	cmp	r2, r1
 800c862:	d01d      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
 800c864:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c868:	428a      	cmp	r2, r1
 800c86a:	d019      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
 800c86c:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c870:	428a      	cmp	r2, r1
 800c872:	d015      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
 800c874:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c878:	428a      	cmp	r2, r1
 800c87a:	d011      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
 800c87c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c880:	428a      	cmp	r2, r1
 800c882:	d00d      	beq.n	800c8a0 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c884:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c886:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c888:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c88c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c88e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c890:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c892:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c894:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c896:	e010      	b.n	800c8ba <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c898:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c89a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c89e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8a0:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c8a2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c8a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8a8:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c8aa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c8ae:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c8b0:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c8b2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c8b4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c8b6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c8b8:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c8ba:	2301      	movs	r3, #1
 800c8bc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c8be:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c8c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c8c6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c8ca:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c8ce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c8d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c8d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c8da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c8de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c8e2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c8e6:	2000      	movs	r0, #0
}
 800c8e8:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c8ea:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8ec:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c8ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c8f2:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c8f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8f8:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c8fa:	69a1      	ldr	r1, [r4, #24]
 800c8fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c900:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c902:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c904:	68e3      	ldr	r3, [r4, #12]
 800c906:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c908:	6863      	ldr	r3, [r4, #4]
 800c90a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c90c:	6963      	ldr	r3, [r4, #20]
 800c90e:	6313      	str	r3, [r2, #48]	; 0x30
 800c910:	e7d3      	b.n	800c8ba <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c912:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c916:	f7f4 fe67 	bl	80015e8 <HAL_TIM_Base_MspInit>
 800c91a:	e780      	b.n	800c81e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c91c:	2001      	movs	r0, #1
}
 800c91e:	4770      	bx	lr
 800c920:	40010000 	.word	0x40010000

0800c924 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c924:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c928:	2b01      	cmp	r3, #1
 800c92a:	d12f      	bne.n	800c98c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c92c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c92e:	4919      	ldr	r1, [pc, #100]	; (800c994 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c930:	2202      	movs	r2, #2
 800c932:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c936:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c938:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c93a:	f042 0201 	orr.w	r2, r2, #1
 800c93e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c940:	d019      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c942:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c946:	d016      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c948:	4a13      	ldr	r2, [pc, #76]	; (800c998 <HAL_TIM_Base_Start_IT+0x74>)
 800c94a:	4293      	cmp	r3, r2
 800c94c:	d013      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c94e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c952:	4293      	cmp	r3, r2
 800c954:	d00f      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c956:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c95a:	4293      	cmp	r3, r2
 800c95c:	d00b      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c95e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c962:	4293      	cmp	r3, r2
 800c964:	d007      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c966:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c96a:	4293      	cmp	r3, r2
 800c96c:	d003      	beq.n	800c976 <HAL_TIM_Base_Start_IT+0x52>
 800c96e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c972:	4293      	cmp	r3, r2
 800c974:	d104      	bne.n	800c980 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c976:	689a      	ldr	r2, [r3, #8]
 800c978:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c97c:	2a06      	cmp	r2, #6
 800c97e:	d007      	beq.n	800c990 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c980:	681a      	ldr	r2, [r3, #0]
 800c982:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c986:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c988:	601a      	str	r2, [r3, #0]
 800c98a:	4770      	bx	lr
    return HAL_ERROR;
 800c98c:	2001      	movs	r0, #1
 800c98e:	4770      	bx	lr
  return HAL_OK;
 800c990:	2000      	movs	r0, #0
}
 800c992:	4770      	bx	lr
 800c994:	40010000 	.word	0x40010000
 800c998:	40000400 	.word	0x40000400

0800c99c <HAL_TIM_OC_DelayElapsedCallback>:
 800c99c:	4770      	bx	lr
 800c99e:	bf00      	nop

0800c9a0 <HAL_TIM_IC_CaptureCallback>:
 800c9a0:	4770      	bx	lr
 800c9a2:	bf00      	nop

0800c9a4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c9a4:	4770      	bx	lr
 800c9a6:	bf00      	nop

0800c9a8 <HAL_TIM_TriggerCallback>:
 800c9a8:	4770      	bx	lr
 800c9aa:	bf00      	nop

0800c9ac <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c9ac:	6803      	ldr	r3, [r0, #0]
 800c9ae:	691a      	ldr	r2, [r3, #16]
 800c9b0:	0791      	lsls	r1, r2, #30
{
 800c9b2:	b510      	push	{r4, lr}
 800c9b4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c9b6:	d502      	bpl.n	800c9be <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c9b8:	68da      	ldr	r2, [r3, #12]
 800c9ba:	0792      	lsls	r2, r2, #30
 800c9bc:	d45f      	bmi.n	800ca7e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c9be:	691a      	ldr	r2, [r3, #16]
 800c9c0:	0750      	lsls	r0, r2, #29
 800c9c2:	d502      	bpl.n	800c9ca <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c9c4:	68da      	ldr	r2, [r3, #12]
 800c9c6:	0751      	lsls	r1, r2, #29
 800c9c8:	d446      	bmi.n	800ca58 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c9ca:	691a      	ldr	r2, [r3, #16]
 800c9cc:	0712      	lsls	r2, r2, #28
 800c9ce:	d502      	bpl.n	800c9d6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c9d0:	68da      	ldr	r2, [r3, #12]
 800c9d2:	0710      	lsls	r0, r2, #28
 800c9d4:	d42e      	bmi.n	800ca34 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c9d6:	691a      	ldr	r2, [r3, #16]
 800c9d8:	06d2      	lsls	r2, r2, #27
 800c9da:	d502      	bpl.n	800c9e2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c9dc:	68da      	ldr	r2, [r3, #12]
 800c9de:	06d0      	lsls	r0, r2, #27
 800c9e0:	d418      	bmi.n	800ca14 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c9e2:	691a      	ldr	r2, [r3, #16]
 800c9e4:	07d1      	lsls	r1, r2, #31
 800c9e6:	d502      	bpl.n	800c9ee <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c9e8:	68da      	ldr	r2, [r3, #12]
 800c9ea:	07d2      	lsls	r2, r2, #31
 800c9ec:	d45d      	bmi.n	800caaa <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c9ee:	691a      	ldr	r2, [r3, #16]
 800c9f0:	0610      	lsls	r0, r2, #24
 800c9f2:	d502      	bpl.n	800c9fa <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c9f4:	68da      	ldr	r2, [r3, #12]
 800c9f6:	0611      	lsls	r1, r2, #24
 800c9f8:	d45f      	bmi.n	800caba <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c9fa:	691a      	ldr	r2, [r3, #16]
 800c9fc:	0652      	lsls	r2, r2, #25
 800c9fe:	d502      	bpl.n	800ca06 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ca00:	68da      	ldr	r2, [r3, #12]
 800ca02:	0650      	lsls	r0, r2, #25
 800ca04:	d461      	bmi.n	800caca <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ca06:	691a      	ldr	r2, [r3, #16]
 800ca08:	0691      	lsls	r1, r2, #26
 800ca0a:	d502      	bpl.n	800ca12 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ca0c:	68da      	ldr	r2, [r3, #12]
 800ca0e:	0692      	lsls	r2, r2, #26
 800ca10:	d443      	bmi.n	800ca9a <HAL_TIM_IRQHandler+0xee>
}
 800ca12:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ca14:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ca18:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ca1a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ca1c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ca1e:	69db      	ldr	r3, [r3, #28]
 800ca20:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800ca24:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ca26:	d064      	beq.n	800caf2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800ca28:	f7ff ffba 	bl	800c9a0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca2c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ca2e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca30:	7722      	strb	r2, [r4, #28]
 800ca32:	e7d6      	b.n	800c9e2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ca34:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ca38:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ca3a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ca3c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ca3e:	69db      	ldr	r3, [r3, #28]
 800ca40:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800ca42:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ca44:	d152      	bne.n	800caec <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ca46:	f7ff ffa9 	bl	800c99c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ca4a:	4620      	mov	r0, r4
 800ca4c:	f7ff ffaa 	bl	800c9a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca50:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800ca52:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca54:	7722      	strb	r2, [r4, #28]
 800ca56:	e7be      	b.n	800c9d6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ca58:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800ca5c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ca5e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800ca60:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800ca62:	699b      	ldr	r3, [r3, #24]
 800ca64:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800ca68:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800ca6a:	d13c      	bne.n	800cae6 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ca6c:	f7ff ff96 	bl	800c99c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ca70:	4620      	mov	r0, r4
 800ca72:	f7ff ff97 	bl	800c9a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca76:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800ca78:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca7a:	7722      	strb	r2, [r4, #28]
 800ca7c:	e7a5      	b.n	800c9ca <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ca7e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ca82:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ca84:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ca86:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800ca88:	699b      	ldr	r3, [r3, #24]
 800ca8a:	079b      	lsls	r3, r3, #30
 800ca8c:	d025      	beq.n	800cada <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800ca8e:	f7ff ff87 	bl	800c9a0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca92:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800ca94:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca96:	7722      	strb	r2, [r4, #28]
 800ca98:	e791      	b.n	800c9be <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ca9a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800ca9e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800caa0:	611a      	str	r2, [r3, #16]
}
 800caa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800caa6:	f000 b82b 	b.w	800cb00 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800caaa:	f06f 0201 	mvn.w	r2, #1
 800caae:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800cab0:	4620      	mov	r0, r4
 800cab2:	f7f4 fa79 	bl	8000fa8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cab6:	6823      	ldr	r3, [r4, #0]
 800cab8:	e799      	b.n	800c9ee <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800caba:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cabe:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800cac0:	4620      	mov	r0, r4
 800cac2:	f000 f81f 	bl	800cb04 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cac6:	6823      	ldr	r3, [r4, #0]
 800cac8:	e797      	b.n	800c9fa <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800caca:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cace:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800cad0:	4620      	mov	r0, r4
 800cad2:	f7ff ff69 	bl	800c9a8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cad6:	6823      	ldr	r3, [r4, #0]
 800cad8:	e795      	b.n	800ca06 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cada:	f7ff ff5f 	bl	800c99c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cade:	4620      	mov	r0, r4
 800cae0:	f7ff ff60 	bl	800c9a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800cae4:	e7d5      	b.n	800ca92 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800cae6:	f7ff ff5b 	bl	800c9a0 <HAL_TIM_IC_CaptureCallback>
 800caea:	e7c4      	b.n	800ca76 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800caec:	f7ff ff58 	bl	800c9a0 <HAL_TIM_IC_CaptureCallback>
 800caf0:	e7ae      	b.n	800ca50 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800caf2:	f7ff ff53 	bl	800c99c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800caf6:	4620      	mov	r0, r4
 800caf8:	f7ff ff54 	bl	800c9a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800cafc:	e796      	b.n	800ca2c <HAL_TIM_IRQHandler+0x80>
 800cafe:	bf00      	nop

0800cb00 <HAL_TIMEx_CommutCallback>:
 800cb00:	4770      	bx	lr
 800cb02:	bf00      	nop

0800cb04 <HAL_TIMEx_BreakCallback>:
 800cb04:	4770      	bx	lr
 800cb06:	bf00      	nop

0800cb08 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cb08:	680b      	ldr	r3, [r1, #0]
{
 800cb0a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cb0c:	b9d3      	cbnz	r3, 800cb44 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb0e:	6803      	ldr	r3, [r0, #0]
 800cb10:	684c      	ldr	r4, [r1, #4]
 800cb12:	688a      	ldr	r2, [r1, #8]
 800cb14:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cb18:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cb1c:	4323      	orrs	r3, r4
 800cb1e:	4313      	orrs	r3, r2
 800cb20:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800cb24:	4323      	orrs	r3, r4
 800cb26:	4313      	orrs	r3, r2
 800cb28:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800cb2c:	4323      	orrs	r3, r4
 800cb2e:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800cb32:	4313      	orrs	r3, r2
 800cb34:	432b      	orrs	r3, r5
 800cb36:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cb38:	4323      	orrs	r3, r4
 800cb3a:	4313      	orrs	r3, r2
 800cb3c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cb3e:	bc30      	pop	{r4, r5}
 800cb40:	2000      	movs	r0, #0
 800cb42:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb44:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800cb48:	6803      	ldr	r3, [r0, #0]
 800cb4a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cb4e:	4323      	orrs	r3, r4
 800cb50:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800cb52:	4313      	orrs	r3, r2
 800cb54:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cb56:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb58:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cb5a:	6843      	ldr	r3, [r0, #4]
 800cb5c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cb60:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cb64:	4313      	orrs	r3, r2
 800cb66:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cb6a:	4323      	orrs	r3, r4
 800cb6c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cb70:	4313      	orrs	r3, r2
 800cb72:	432b      	orrs	r3, r5
 800cb74:	698a      	ldr	r2, [r1, #24]
 800cb76:	4323      	orrs	r3, r4
 800cb78:	4313      	orrs	r3, r2
 800cb7a:	6043      	str	r3, [r0, #4]
}
 800cb7c:	bc30      	pop	{r4, r5}
 800cb7e:	2000      	movs	r0, #0
 800cb80:	4770      	bx	lr
 800cb82:	bf00      	nop

0800cb84 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800cb84:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb86:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800cb88:	bb02      	cbnz	r2, 800cbcc <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb8a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cb8e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cb92:	3c01      	subs	r4, #1
 800cb94:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cb98:	3a01      	subs	r2, #1
 800cb9a:	4313      	orrs	r3, r2
 800cb9c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cba0:	3c01      	subs	r4, #1
 800cba2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cba6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cbaa:	3a01      	subs	r2, #1
 800cbac:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cbb0:	698a      	ldr	r2, [r1, #24]
 800cbb2:	1e69      	subs	r1, r5, #1
 800cbb4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cbb8:	1e61      	subs	r1, r4, #1
 800cbba:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cbbe:	3a01      	subs	r2, #1
 800cbc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cbc4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cbc6:	bc30      	pop	{r4, r5}
 800cbc8:	2000      	movs	r0, #0
 800cbca:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cbcc:	68cc      	ldr	r4, [r1, #12]
 800cbce:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cbd0:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cbd2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cbd6:	3c01      	subs	r4, #1
 800cbd8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cbdc:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800cbe0:	3a01      	subs	r2, #1
 800cbe2:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800cbe6:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cbe8:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cbec:	68c3      	ldr	r3, [r0, #12]
 800cbee:	3c01      	subs	r4, #1
 800cbf0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cbf4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cbf8:	3a01      	subs	r2, #1
 800cbfa:	690c      	ldr	r4, [r1, #16]
 800cbfc:	4313      	orrs	r3, r2
 800cbfe:	698a      	ldr	r2, [r1, #24]
 800cc00:	1e69      	subs	r1, r5, #1
 800cc02:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cc06:	1e61      	subs	r1, r4, #1
 800cc08:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cc0c:	3a01      	subs	r2, #1
 800cc0e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cc12:	60c3      	str	r3, [r0, #12]
}
 800cc14:	bc30      	pop	{r4, r5}
 800cc16:	2000      	movs	r0, #0
 800cc18:	4770      	bx	lr
 800cc1a:	bf00      	nop

0800cc1c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cc1c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cc1e:	680b      	ldr	r3, [r1, #0]
{
 800cc20:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cc22:	684a      	ldr	r2, [r1, #4]
{
 800cc24:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cc26:	4313      	orrs	r3, r2
 800cc28:	6900      	ldr	r0, [r0, #16]
 800cc2a:	68ca      	ldr	r2, [r1, #12]
 800cc2c:	0d80      	lsrs	r0, r0, #22
 800cc2e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cc32:	688a      	ldr	r2, [r1, #8]
 800cc34:	0580      	lsls	r0, r0, #22
 800cc36:	4303      	orrs	r3, r0
 800cc38:	3a01      	subs	r2, #1
 800cc3a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cc3e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cc40:	f7fc fcca 	bl	80095d8 <HAL_GetTick>
 800cc44:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cc46:	1c6b      	adds	r3, r5, #1
 800cc48:	d105      	bne.n	800cc56 <FMC_SDRAM_SendCommand+0x3a>
 800cc4a:	69a3      	ldr	r3, [r4, #24]
 800cc4c:	f013 0320 	ands.w	r3, r3, #32
 800cc50:	d1fb      	bne.n	800cc4a <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cc52:	4618      	mov	r0, r3
}
 800cc54:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cc56:	69a3      	ldr	r3, [r4, #24]
 800cc58:	f013 0320 	ands.w	r3, r3, #32
 800cc5c:	d0f9      	beq.n	800cc52 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cc5e:	b125      	cbz	r5, 800cc6a <FMC_SDRAM_SendCommand+0x4e>
 800cc60:	f7fc fcba 	bl	80095d8 <HAL_GetTick>
 800cc64:	1b80      	subs	r0, r0, r6
 800cc66:	42a8      	cmp	r0, r5
 800cc68:	d9ed      	bls.n	800cc46 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cc6a:	2003      	movs	r0, #3
}
 800cc6c:	bd70      	pop	{r4, r5, r6, pc}
 800cc6e:	bf00      	nop

0800cc70 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc70:	6943      	ldr	r3, [r0, #20]
 800cc72:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cc76:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc78:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cc7c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cc80:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc82:	6151      	str	r1, [r2, #20]
}
 800cc84:	4770      	bx	lr
 800cc86:	bf00      	nop

0800cc88 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cc88:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cc8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc8e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cc90:	f002 fb00 	bl	800f294 <xTaskGetSchedulerState>
 800cc94:	2801      	cmp	r0, #1
 800cc96:	d100      	bne.n	800cc9a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cc98:	bd08      	pop	{r3, pc}
 800cc9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cc9e:	f000 bc41 	b.w	800d524 <xPortSysTickHandler>
 800cca2:	bf00      	nop

0800cca4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cca4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cca8:	b92b      	cbnz	r3, 800ccb6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ccaa:	4b06      	ldr	r3, [pc, #24]	; (800ccc4 <osKernelInitialize+0x20>)
 800ccac:	6818      	ldr	r0, [r3, #0]
 800ccae:	b928      	cbnz	r0, 800ccbc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ccb0:	2201      	movs	r2, #1
 800ccb2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ccb4:	4770      	bx	lr
    stat = osErrorISR;
 800ccb6:	f06f 0005 	mvn.w	r0, #5
 800ccba:	4770      	bx	lr
    } else {
      stat = osError;
 800ccbc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ccc0:	4770      	bx	lr
 800ccc2:	bf00      	nop
 800ccc4:	200028f8 	.word	0x200028f8

0800ccc8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ccc8:	b510      	push	{r4, lr}
 800ccca:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ccce:	b974      	cbnz	r4, 800ccee <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ccd0:	4b08      	ldr	r3, [pc, #32]	; (800ccf4 <osKernelStart+0x2c>)
 800ccd2:	681a      	ldr	r2, [r3, #0]
 800ccd4:	2a01      	cmp	r2, #1
 800ccd6:	d107      	bne.n	800cce8 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ccd8:	4907      	ldr	r1, [pc, #28]	; (800ccf8 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ccda:	2202      	movs	r2, #2
 800ccdc:	77cc      	strb	r4, [r1, #31]
 800ccde:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cce0:	f002 f8b2 	bl	800ee48 <vTaskStartScheduler>
      stat = osOK;
 800cce4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cce6:	bd10      	pop	{r4, pc}
      stat = osError;
 800cce8:	f04f 30ff 	mov.w	r0, #4294967295
}
 800ccec:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ccee:	f06f 0005 	mvn.w	r0, #5
}
 800ccf2:	bd10      	pop	{r4, pc}
 800ccf4:	200028f8 	.word	0x200028f8
 800ccf8:	e000ed00 	.word	0xe000ed00

0800ccfc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ccfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccfe:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cd00:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cd02:	4615      	mov	r5, r2
  hTask = NULL;
 800cd04:	9405      	str	r4, [sp, #20]
 800cd06:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cd0a:	b9ea      	cbnz	r2, 800cd48 <osThreadNew+0x4c>
 800cd0c:	b350      	cbz	r0, 800cd64 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cd0e:	b1f5      	cbz	r5, 800cd4e <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cd10:	69ab      	ldr	r3, [r5, #24]
 800cd12:	bb5b      	cbnz	r3, 800cd6c <osThreadNew+0x70>
 800cd14:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cd16:	686a      	ldr	r2, [r5, #4]
 800cd18:	07d2      	lsls	r2, r2, #31
 800cd1a:	d423      	bmi.n	800cd64 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cd1c:	696e      	ldr	r6, [r5, #20]
 800cd1e:	b34e      	cbz	r6, 800cd74 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cd20:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd24:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cd26:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd28:	b34c      	cbz	r4, 800cd7e <osThreadNew+0x82>
 800cd2a:	68ea      	ldr	r2, [r5, #12]
 800cd2c:	2aab      	cmp	r2, #171	; 0xab
 800cd2e:	d919      	bls.n	800cd64 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cd30:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd32:	b1bd      	cbz	r5, 800cd64 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cd34:	b1b6      	cbz	r6, 800cd64 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cd36:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cd3a:	9300      	str	r3, [sp, #0]
 800cd3c:	4662      	mov	r2, ip
 800cd3e:	460b      	mov	r3, r1
 800cd40:	4639      	mov	r1, r7
 800cd42:	f001 ffbf 	bl	800ecc4 <xTaskCreateStatic>
 800cd46:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cd48:	4620      	mov	r0, r4
 800cd4a:	b007      	add	sp, #28
 800cd4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd4e:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cd50:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cd52:	ac05      	add	r4, sp, #20
 800cd54:	9300      	str	r3, [sp, #0]
 800cd56:	9401      	str	r4, [sp, #4]
 800cd58:	460b      	mov	r3, r1
 800cd5a:	4629      	mov	r1, r5
 800cd5c:	f001 ffec 	bl	800ed38 <xTaskCreate>
 800cd60:	2801      	cmp	r0, #1
 800cd62:	d00a      	beq.n	800cd7a <osThreadNew+0x7e>
        return (NULL);
 800cd64:	2400      	movs	r4, #0
}
 800cd66:	4620      	mov	r0, r4
 800cd68:	b007      	add	sp, #28
 800cd6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cd6c:	1e5c      	subs	r4, r3, #1
 800cd6e:	2c37      	cmp	r4, #55	; 0x37
 800cd70:	d9d1      	bls.n	800cd16 <osThreadNew+0x1a>
 800cd72:	e7f7      	b.n	800cd64 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cd74:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cd78:	e7d4      	b.n	800cd24 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cd7a:	9c05      	ldr	r4, [sp, #20]
 800cd7c:	e7e4      	b.n	800cd48 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cd7e:	68ee      	ldr	r6, [r5, #12]
 800cd80:	2e00      	cmp	r6, #0
 800cd82:	d1e1      	bne.n	800cd48 <osThreadNew+0x4c>
 800cd84:	692d      	ldr	r5, [r5, #16]
 800cd86:	2d00      	cmp	r5, #0
 800cd88:	d1de      	bne.n	800cd48 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cd8a:	fa1f f28c 	uxth.w	r2, ip
 800cd8e:	463d      	mov	r5, r7
 800cd90:	e7df      	b.n	800cd52 <osThreadNew+0x56>
 800cd92:	bf00      	nop

0800cd94 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cd94:	b510      	push	{r4, lr}
 800cd96:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cd9a:	b92c      	cbnz	r4, 800cda8 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cd9c:	b900      	cbnz	r0, 800cda0 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cd9e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cda0:	f001 fffc 	bl	800ed9c <vTaskDelay>
    stat = osOK;
 800cda4:	4620      	mov	r0, r4
}
 800cda6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cda8:	f06f 0005 	mvn.w	r0, #5
}
 800cdac:	bd10      	pop	{r4, pc}
 800cdae:	bf00      	nop

0800cdb0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cdb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdb2:	b083      	sub	sp, #12
 800cdb4:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cdb8:	b9fe      	cbnz	r6, 800cdfa <osSemaphoreNew+0x4a>
 800cdba:	b1f0      	cbz	r0, 800cdfa <osSemaphoreNew+0x4a>
 800cdbc:	4288      	cmp	r0, r1
 800cdbe:	460f      	mov	r7, r1
 800cdc0:	d31b      	bcc.n	800cdfa <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cdc2:	4615      	mov	r5, r2
 800cdc4:	b192      	cbz	r2, 800cdec <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cdc6:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cdca:	b1d2      	cbz	r2, 800ce02 <osSemaphoreNew+0x52>
 800cdcc:	2b4f      	cmp	r3, #79	; 0x4f
 800cdce:	d914      	bls.n	800cdfa <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cdd0:	2801      	cmp	r0, #1
 800cdd2:	d038      	beq.n	800ce46 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cdd4:	f000 fd8c 	bl	800d8f0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cdd8:	4604      	mov	r4, r0
 800cdda:	b170      	cbz	r0, 800cdfa <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cddc:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cdde:	4620      	mov	r0, r4
 800cde0:	4629      	mov	r1, r5
 800cde2:	f001 fc37 	bl	800e654 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cde6:	4620      	mov	r0, r4
 800cde8:	b003      	add	sp, #12
 800cdea:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cdec:	2801      	cmp	r0, #1
 800cdee:	d012      	beq.n	800ce16 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cdf0:	f000 fdde 	bl	800d9b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cdf4:	4604      	mov	r4, r0
 800cdf6:	2800      	cmp	r0, #0
 800cdf8:	d1f1      	bne.n	800cdde <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cdfa:	2400      	movs	r4, #0
}
 800cdfc:	4620      	mov	r0, r4
 800cdfe:	b003      	add	sp, #12
 800ce00:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800ce02:	2b00      	cmp	r3, #0
 800ce04:	d1f9      	bne.n	800cdfa <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800ce06:	2801      	cmp	r0, #1
 800ce08:	d005      	beq.n	800ce16 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ce0a:	f000 fdd1 	bl	800d9b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ce0e:	4604      	mov	r4, r0
 800ce10:	2800      	cmp	r0, #0
 800ce12:	d1e3      	bne.n	800cddc <osSemaphoreNew+0x2c>
 800ce14:	e7f1      	b.n	800cdfa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800ce16:	2203      	movs	r2, #3
 800ce18:	2100      	movs	r1, #0
 800ce1a:	2001      	movs	r0, #1
 800ce1c:	f000 fd26 	bl	800d86c <xQueueGenericCreate>
 800ce20:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800ce22:	2c00      	cmp	r4, #0
 800ce24:	d0e9      	beq.n	800cdfa <osSemaphoreNew+0x4a>
 800ce26:	b917      	cbnz	r7, 800ce2e <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800ce28:	2d00      	cmp	r5, #0
 800ce2a:	d1d7      	bne.n	800cddc <osSemaphoreNew+0x2c>
 800ce2c:	e7d7      	b.n	800cdde <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ce2e:	2300      	movs	r3, #0
 800ce30:	461a      	mov	r2, r3
 800ce32:	4619      	mov	r1, r3
 800ce34:	4620      	mov	r0, r4
 800ce36:	f000 fe01 	bl	800da3c <xQueueGenericSend>
 800ce3a:	2801      	cmp	r0, #1
 800ce3c:	d0f4      	beq.n	800ce28 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ce3e:	4620      	mov	r0, r4
 800ce40:	f001 fbc2 	bl	800e5c8 <vQueueDelete>
 800ce44:	e7d9      	b.n	800cdfa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800ce46:	4613      	mov	r3, r2
 800ce48:	2203      	movs	r2, #3
 800ce4a:	9200      	str	r2, [sp, #0]
 800ce4c:	4631      	mov	r1, r6
 800ce4e:	4632      	mov	r2, r6
 800ce50:	f000 fc9e 	bl	800d790 <xQueueGenericCreateStatic>
 800ce54:	4604      	mov	r4, r0
 800ce56:	e7e4      	b.n	800ce22 <osSemaphoreNew+0x72>

0800ce58 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ce58:	b370      	cbz	r0, 800ceb8 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ce5a:	b510      	push	{r4, lr}
 800ce5c:	460c      	mov	r4, r1
 800ce5e:	b082      	sub	sp, #8
 800ce60:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ce64:	b1c3      	cbz	r3, 800ce98 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800ce66:	bb21      	cbnz	r1, 800ceb2 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce68:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce6a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce6c:	f001 fb2a 	bl	800e4c4 <xQueueReceiveFromISR>
 800ce70:	2801      	cmp	r0, #1
 800ce72:	d11a      	bne.n	800ceaa <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce74:	9b01      	ldr	r3, [sp, #4]
 800ce76:	b913      	cbnz	r3, 800ce7e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800ce78:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ce7a:	b002      	add	sp, #8
 800ce7c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ce7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce8a:	f3bf 8f4f 	dsb	sy
 800ce8e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ce92:	4620      	mov	r0, r4
}
 800ce94:	b002      	add	sp, #8
 800ce96:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ce98:	f001 f98a 	bl	800e1b0 <xQueueSemaphoreTake>
 800ce9c:	2801      	cmp	r0, #1
 800ce9e:	d0eb      	beq.n	800ce78 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cea0:	b11c      	cbz	r4, 800ceaa <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cea2:	f06f 0001 	mvn.w	r0, #1
}
 800cea6:	b002      	add	sp, #8
 800cea8:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800ceaa:	f06f 0002 	mvn.w	r0, #2
}
 800ceae:	b002      	add	sp, #8
 800ceb0:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800ceb2:	f06f 0003 	mvn.w	r0, #3
 800ceb6:	e7e0      	b.n	800ce7a <osSemaphoreAcquire+0x22>
 800ceb8:	f06f 0003 	mvn.w	r0, #3
}
 800cebc:	4770      	bx	lr
 800cebe:	bf00      	nop

0800cec0 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cec0:	b330      	cbz	r0, 800cf10 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cec2:	b510      	push	{r4, lr}
 800cec4:	b082      	sub	sp, #8
 800cec6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ceca:	b1ab      	cbz	r3, 800cef8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cecc:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cece:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800ced0:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ced2:	f000 ff97 	bl	800de04 <xQueueGiveFromISR>
 800ced6:	2801      	cmp	r0, #1
 800ced8:	d117      	bne.n	800cf0a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800ceda:	9b01      	ldr	r3, [sp, #4]
 800cedc:	b193      	cbz	r3, 800cf04 <osSemaphoreRelease+0x44>
 800cede:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cee2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cee6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ceea:	f3bf 8f4f 	dsb	sy
 800ceee:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cef2:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cef4:	b002      	add	sp, #8
 800cef6:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cef8:	461a      	mov	r2, r3
 800cefa:	4619      	mov	r1, r3
 800cefc:	f000 fd9e 	bl	800da3c <xQueueGenericSend>
 800cf00:	2801      	cmp	r0, #1
 800cf02:	d102      	bne.n	800cf0a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cf04:	2000      	movs	r0, #0
}
 800cf06:	b002      	add	sp, #8
 800cf08:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cf0a:	f06f 0002 	mvn.w	r0, #2
 800cf0e:	e7fa      	b.n	800cf06 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cf10:	f06f 0003 	mvn.w	r0, #3
}
 800cf14:	4770      	bx	lr
 800cf16:	bf00      	nop

0800cf18 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cf18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf1a:	b085      	sub	sp, #20
 800cf1c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cf20:	b987      	cbnz	r7, 800cf44 <osMessageQueueNew+0x2c>
 800cf22:	4605      	mov	r5, r0
 800cf24:	b170      	cbz	r0, 800cf44 <osMessageQueueNew+0x2c>
 800cf26:	b169      	cbz	r1, 800cf44 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800cf28:	4614      	mov	r4, r2
 800cf2a:	b1ea      	cbz	r2, 800cf68 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cf2c:	6893      	ldr	r3, [r2, #8]
 800cf2e:	b163      	cbz	r3, 800cf4a <osMessageQueueNew+0x32>
 800cf30:	68d2      	ldr	r2, [r2, #12]
 800cf32:	2a4f      	cmp	r2, #79	; 0x4f
 800cf34:	d906      	bls.n	800cf44 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cf36:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cf38:	b122      	cbz	r2, 800cf44 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cf3a:	6966      	ldr	r6, [r4, #20]
 800cf3c:	fb01 f505 	mul.w	r5, r1, r5
 800cf40:	42ae      	cmp	r6, r5
 800cf42:	d21c      	bcs.n	800cf7e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800cf44:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cf46:	b005      	add	sp, #20
 800cf48:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cf4a:	68d3      	ldr	r3, [r2, #12]
 800cf4c:	2b00      	cmp	r3, #0
 800cf4e:	d1f9      	bne.n	800cf44 <osMessageQueueNew+0x2c>
 800cf50:	6913      	ldr	r3, [r2, #16]
 800cf52:	2b00      	cmp	r3, #0
 800cf54:	d1f6      	bne.n	800cf44 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cf56:	6952      	ldr	r2, [r2, #20]
 800cf58:	2a00      	cmp	r2, #0
 800cf5a:	d1f3      	bne.n	800cf44 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cf5c:	f000 fc86 	bl	800d86c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cf60:	2800      	cmp	r0, #0
 800cf62:	d0ef      	beq.n	800cf44 <osMessageQueueNew+0x2c>
        name = attr->name;
 800cf64:	6824      	ldr	r4, [r4, #0]
 800cf66:	e003      	b.n	800cf70 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cf68:	f000 fc80 	bl	800d86c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cf6c:	2800      	cmp	r0, #0
 800cf6e:	d0e9      	beq.n	800cf44 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800cf70:	4621      	mov	r1, r4
 800cf72:	9003      	str	r0, [sp, #12]
 800cf74:	f001 fb6e 	bl	800e654 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cf78:	9803      	ldr	r0, [sp, #12]
}
 800cf7a:	b005      	add	sp, #20
 800cf7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cf7e:	9700      	str	r7, [sp, #0]
 800cf80:	f000 fc06 	bl	800d790 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cf84:	2800      	cmp	r0, #0
 800cf86:	d1ed      	bne.n	800cf64 <osMessageQueueNew+0x4c>
 800cf88:	e7dc      	b.n	800cf44 <osMessageQueueNew+0x2c>
 800cf8a:	bf00      	nop

0800cf8c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cf8c:	b570      	push	{r4, r5, r6, lr}
 800cf8e:	461c      	mov	r4, r3
 800cf90:	b082      	sub	sp, #8
 800cf92:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cf96:	b1be      	cbz	r6, 800cfc8 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cf98:	b350      	cbz	r0, 800cff0 <osMessageQueuePut+0x64>
 800cf9a:	b349      	cbz	r1, 800cff0 <osMessageQueuePut+0x64>
 800cf9c:	bb43      	cbnz	r3, 800cff0 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cf9e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cfa0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cfa2:	f000 fec9 	bl	800dd38 <xQueueGenericSendFromISR>
 800cfa6:	2801      	cmp	r0, #1
 800cfa8:	d11e      	bne.n	800cfe8 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cfaa:	9b01      	ldr	r3, [sp, #4]
 800cfac:	b1cb      	cbz	r3, 800cfe2 <osMessageQueuePut+0x56>
 800cfae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cfb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cfba:	f3bf 8f4f 	dsb	sy
 800cfbe:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cfc2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cfc4:	b002      	add	sp, #8
 800cfc6:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cfc8:	b190      	cbz	r0, 800cff0 <osMessageQueuePut+0x64>
 800cfca:	b189      	cbz	r1, 800cff0 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cfcc:	4633      	mov	r3, r6
 800cfce:	4622      	mov	r2, r4
 800cfd0:	f000 fd34 	bl	800da3c <xQueueGenericSend>
 800cfd4:	2801      	cmp	r0, #1
 800cfd6:	d004      	beq.n	800cfe2 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cfd8:	b134      	cbz	r4, 800cfe8 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800cfda:	f06f 0001 	mvn.w	r0, #1
}
 800cfde:	b002      	add	sp, #8
 800cfe0:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800cfe2:	2000      	movs	r0, #0
}
 800cfe4:	b002      	add	sp, #8
 800cfe6:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800cfe8:	f06f 0002 	mvn.w	r0, #2
}
 800cfec:	b002      	add	sp, #8
 800cfee:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cff0:	f06f 0003 	mvn.w	r0, #3
 800cff4:	e7e6      	b.n	800cfc4 <osMessageQueuePut+0x38>
 800cff6:	bf00      	nop

0800cff8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cff8:	b530      	push	{r4, r5, lr}
 800cffa:	461c      	mov	r4, r3
 800cffc:	b083      	sub	sp, #12
 800cffe:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d002:	b1bb      	cbz	r3, 800d034 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d004:	b348      	cbz	r0, 800d05a <osMessageQueueGet+0x62>
 800d006:	b341      	cbz	r1, 800d05a <osMessageQueueGet+0x62>
 800d008:	bb3c      	cbnz	r4, 800d05a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d00a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d00c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d00e:	f001 fa59 	bl	800e4c4 <xQueueReceiveFromISR>
 800d012:	2801      	cmp	r0, #1
 800d014:	d11d      	bne.n	800d052 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d016:	9b01      	ldr	r3, [sp, #4]
 800d018:	b1c3      	cbz	r3, 800d04c <osMessageQueueGet+0x54>
 800d01a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d01e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d022:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d026:	f3bf 8f4f 	dsb	sy
 800d02a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d02e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d030:	b003      	add	sp, #12
 800d032:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d034:	b188      	cbz	r0, 800d05a <osMessageQueueGet+0x62>
 800d036:	b181      	cbz	r1, 800d05a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d038:	4622      	mov	r2, r4
 800d03a:	f000 ff3b 	bl	800deb4 <xQueueReceive>
 800d03e:	2801      	cmp	r0, #1
 800d040:	d004      	beq.n	800d04c <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d042:	b134      	cbz	r4, 800d052 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d044:	f06f 0001 	mvn.w	r0, #1
}
 800d048:	b003      	add	sp, #12
 800d04a:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d04c:	2000      	movs	r0, #0
}
 800d04e:	b003      	add	sp, #12
 800d050:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d052:	f06f 0002 	mvn.w	r0, #2
}
 800d056:	b003      	add	sp, #12
 800d058:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d05a:	f06f 0003 	mvn.w	r0, #3
 800d05e:	e7e7      	b.n	800d030 <osMessageQueueGet+0x38>

0800d060 <osMessageQueueGetCount>:
 800d060:	b130      	cbz	r0, 800d070 <osMessageQueueGetCount+0x10>
 800d062:	f3ef 8305 	mrs	r3, IPSR
 800d066:	b10b      	cbz	r3, 800d06c <osMessageQueueGetCount+0xc>
 800d068:	f001 baa0 	b.w	800e5ac <uxQueueMessagesWaitingFromISR>
 800d06c:	f001 ba88 	b.w	800e580 <uxQueueMessagesWaiting>
 800d070:	4770      	bx	lr
 800d072:	bf00      	nop

0800d074 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d074:	4b04      	ldr	r3, [pc, #16]	; (800d088 <vApplicationGetIdleTaskMemory+0x14>)
 800d076:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d078:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d07a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d07c:	4c03      	ldr	r4, [pc, #12]	; (800d08c <vApplicationGetIdleTaskMemory+0x18>)
 800d07e:	600c      	str	r4, [r1, #0]
}
 800d080:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d084:	6013      	str	r3, [r2, #0]
}
 800d086:	4770      	bx	lr
 800d088:	2000284c 	.word	0x2000284c
 800d08c:	2000264c 	.word	0x2000264c

0800d090 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d090:	4b05      	ldr	r3, [pc, #20]	; (800d0a8 <vApplicationGetTimerTaskMemory+0x18>)
 800d092:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d094:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d096:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d09a:	4c04      	ldr	r4, [pc, #16]	; (800d0ac <vApplicationGetTimerTaskMemory+0x1c>)
 800d09c:	600c      	str	r4, [r1, #0]
}
 800d09e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d0a2:	6013      	str	r3, [r2, #0]
}
 800d0a4:	4770      	bx	lr
 800d0a6:	bf00      	nop
 800d0a8:	20002cfc 	.word	0x20002cfc
 800d0ac:	200028fc 	.word	0x200028fc

0800d0b0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d0b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0b4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d0b6:	f001 ff43 	bl	800ef40 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d0ba:	4a54      	ldr	r2, [pc, #336]	; (800d20c <pvPortMalloc+0x15c>)
 800d0bc:	6816      	ldr	r6, [r2, #0]
 800d0be:	2e00      	cmp	r6, #0
 800d0c0:	d06e      	beq.n	800d1a0 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d0c2:	4b53      	ldr	r3, [pc, #332]	; (800d210 <pvPortMalloc+0x160>)
 800d0c4:	681f      	ldr	r7, [r3, #0]
 800d0c6:	423d      	tst	r5, r7
 800d0c8:	d12e      	bne.n	800d128 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d0ca:	b36d      	cbz	r5, 800d128 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d0cc:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d0d0:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d0d2:	bf1c      	itt	ne
 800d0d4:	f024 0407 	bicne.w	r4, r4, #7
 800d0d8:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d0da:	b32c      	cbz	r4, 800d128 <pvPortMalloc+0x78>
 800d0dc:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d224 <pvPortMalloc+0x174>
 800d0e0:	f8dc 5000 	ldr.w	r5, [ip]
 800d0e4:	42a5      	cmp	r5, r4
 800d0e6:	d31f      	bcc.n	800d128 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d0e8:	484a      	ldr	r0, [pc, #296]	; (800d214 <pvPortMalloc+0x164>)
 800d0ea:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d0ec:	e003      	b.n	800d0f6 <pvPortMalloc+0x46>
 800d0ee:	681a      	ldr	r2, [r3, #0]
 800d0f0:	b122      	cbz	r2, 800d0fc <pvPortMalloc+0x4c>
 800d0f2:	4618      	mov	r0, r3
 800d0f4:	4613      	mov	r3, r2
 800d0f6:	6859      	ldr	r1, [r3, #4]
 800d0f8:	42a1      	cmp	r1, r4
 800d0fa:	d3f8      	bcc.n	800d0ee <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d0fc:	42b3      	cmp	r3, r6
 800d0fe:	d013      	beq.n	800d128 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d100:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d102:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d104:	f858 eb08 	ldr.w	lr, [r8], #8
 800d108:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d10c:	2a10      	cmp	r2, #16
 800d10e:	d929      	bls.n	800d164 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d110:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d112:	0748      	lsls	r0, r1, #29
 800d114:	d00f      	beq.n	800d136 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d11a:	f383 8811 	msr	BASEPRI, r3
 800d11e:	f3bf 8f6f 	isb	sy
 800d122:	f3bf 8f4f 	dsb	sy
 800d126:	e7fe      	b.n	800d126 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d128:	f001 ff12 	bl	800ef50 <xTaskResumeAll>
 800d12c:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d130:	4640      	mov	r0, r8
 800d132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d136:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d138:	4a36      	ldr	r2, [pc, #216]	; (800d214 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d13a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d13c:	4614      	mov	r4, r2
 800d13e:	6812      	ldr	r2, [r2, #0]
 800d140:	4291      	cmp	r1, r2
 800d142:	d8fb      	bhi.n	800d13c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d144:	6860      	ldr	r0, [r4, #4]
 800d146:	eb04 0e00 	add.w	lr, r4, r0
 800d14a:	4571      	cmp	r1, lr
 800d14c:	d04b      	beq.n	800d1e6 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d14e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d152:	eb01 000e 	add.w	r0, r1, lr
 800d156:	4282      	cmp	r2, r0
 800d158:	d051      	beq.n	800d1fe <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d15a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d15c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d15e:	bf18      	it	ne
 800d160:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d162:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d164:	4a2c      	ldr	r2, [pc, #176]	; (800d218 <pvPortMalloc+0x168>)
 800d166:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d168:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d16a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d16c:	bf38      	it	cc
 800d16e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d170:	4a2a      	ldr	r2, [pc, #168]	; (800d21c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d172:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d176:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d178:	2000      	movs	r0, #0
 800d17a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d17e:	6813      	ldr	r3, [r2, #0]
 800d180:	3301      	adds	r3, #1
 800d182:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d184:	f001 fee4 	bl	800ef50 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d188:	f018 0f07 	tst.w	r8, #7
 800d18c:	d0d0      	beq.n	800d130 <pvPortMalloc+0x80>
 800d18e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d192:	f383 8811 	msr	BASEPRI, r3
 800d196:	f3bf 8f6f 	isb	sy
 800d19a:	f3bf 8f4f 	dsb	sy
 800d19e:	e7fe      	b.n	800d19e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d1a0:	4b1f      	ldr	r3, [pc, #124]	; (800d220 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d1a2:	075e      	lsls	r6, r3, #29
 800d1a4:	d118      	bne.n	800d1d8 <pvPortMalloc+0x128>
 800d1a6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d1aa:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d1ac:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d1ae:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d1b2:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d1b4:	4a18      	ldr	r2, [pc, #96]	; (800d218 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d1b6:	4817      	ldr	r0, [pc, #92]	; (800d214 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d1b8:	4c15      	ldr	r4, [pc, #84]	; (800d210 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d1ba:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d1bc:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d1be:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d1c0:	4a18      	ldr	r2, [pc, #96]	; (800d224 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d1c2:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d1c6:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d1c8:	2200      	movs	r2, #0
 800d1ca:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d1cc:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d1ce:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d1d2:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d1d6:	e776      	b.n	800d0c6 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d1d8:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d1da:	f021 0107 	bic.w	r1, r1, #7
 800d1de:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d1e2:	460b      	mov	r3, r1
 800d1e4:	e7e2      	b.n	800d1ac <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1e6:	6849      	ldr	r1, [r1, #4]
 800d1e8:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1ec:	eb04 010e 	add.w	r1, r4, lr
 800d1f0:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1f2:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1f6:	d001      	beq.n	800d1fc <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1f8:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d1fa:	e7b2      	b.n	800d162 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1fc:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d1fe:	42b2      	cmp	r2, r6
 800d200:	d0ab      	beq.n	800d15a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d202:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d204:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d206:	4470      	add	r0, lr
 800d208:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d20a:	e7a6      	b.n	800d15a <pvPortMalloc+0xaa>
 800d20c:	20002da8 	.word	0x20002da8
 800d210:	20012dac 	.word	0x20012dac
 800d214:	20012dc0 	.word	0x20012dc0
 800d218:	20012db4 	.word	0x20012db4
 800d21c:	20012db8 	.word	0x20012db8
 800d220:	20002dac 	.word	0x20002dac
 800d224:	20012db0 	.word	0x20012db0

0800d228 <vPortFree>:
	if( pv != NULL )
 800d228:	b1d0      	cbz	r0, 800d260 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d22a:	4a2c      	ldr	r2, [pc, #176]	; (800d2dc <vPortFree+0xb4>)
 800d22c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d230:	6812      	ldr	r2, [r2, #0]
 800d232:	4213      	tst	r3, r2
 800d234:	d00b      	beq.n	800d24e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d236:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d23a:	b191      	cbz	r1, 800d262 <vPortFree+0x3a>
 800d23c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d240:	f383 8811 	msr	BASEPRI, r3
 800d244:	f3bf 8f6f 	isb	sy
 800d248:	f3bf 8f4f 	dsb	sy
 800d24c:	e7fe      	b.n	800d24c <vPortFree+0x24>
 800d24e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d252:	f383 8811 	msr	BASEPRI, r3
 800d256:	f3bf 8f6f 	isb	sy
 800d25a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d25e:	e7fe      	b.n	800d25e <vPortFree+0x36>
 800d260:	4770      	bx	lr
{
 800d262:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d264:	ea23 0302 	bic.w	r3, r3, r2
{
 800d268:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d26a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d26e:	4c1c      	ldr	r4, [pc, #112]	; (800d2e0 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d270:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d272:	f001 fe65 	bl	800ef40 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d276:	9801      	ldr	r0, [sp, #4]
 800d278:	6822      	ldr	r2, [r4, #0]
 800d27a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d27e:	4b19      	ldr	r3, [pc, #100]	; (800d2e4 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d280:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d282:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d284:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d286:	461a      	mov	r2, r3
 800d288:	681b      	ldr	r3, [r3, #0]
 800d28a:	4298      	cmp	r0, r3
 800d28c:	d8fb      	bhi.n	800d286 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d28e:	6854      	ldr	r4, [r2, #4]
 800d290:	eb02 0e04 	add.w	lr, r2, r4
 800d294:	4570      	cmp	r0, lr
 800d296:	d010      	beq.n	800d2ba <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d298:	eb00 0c01 	add.w	ip, r0, r1
 800d29c:	4563      	cmp	r3, ip
 800d29e:	d014      	beq.n	800d2ca <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d2a0:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2a2:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d2a4:	bf18      	it	ne
 800d2a6:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d2a8:	4a0f      	ldr	r2, [pc, #60]	; (800d2e8 <vPortFree+0xc0>)
 800d2aa:	6813      	ldr	r3, [r2, #0]
 800d2ac:	3301      	adds	r3, #1
 800d2ae:	6013      	str	r3, [r2, #0]
}
 800d2b0:	b002      	add	sp, #8
 800d2b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d2b6:	f001 be4b 	b.w	800ef50 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2ba:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2bc:	1850      	adds	r0, r2, r1
 800d2be:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2c0:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2c2:	d001      	beq.n	800d2c8 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2c4:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d2c6:	e7ef      	b.n	800d2a8 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2c8:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d2ca:	4c08      	ldr	r4, [pc, #32]	; (800d2ec <vPortFree+0xc4>)
 800d2cc:	6824      	ldr	r4, [r4, #0]
 800d2ce:	42a3      	cmp	r3, r4
 800d2d0:	d0e6      	beq.n	800d2a0 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2d2:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2d6:	4421      	add	r1, r4
 800d2d8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2da:	e7e1      	b.n	800d2a0 <vPortFree+0x78>
 800d2dc:	20012dac 	.word	0x20012dac
 800d2e0:	20012db0 	.word	0x20012db0
 800d2e4:	20012dc0 	.word	0x20012dc0
 800d2e8:	20012dbc 	.word	0x20012dbc
 800d2ec:	20002da8 	.word	0x20002da8

0800d2f0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d2f0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d2f4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d2f8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d2fa:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d2fe:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d302:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d304:	4770      	bx	lr
 800d306:	bf00      	nop

0800d308 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d308:	2300      	movs	r3, #0
 800d30a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d30c:	4770      	bx	lr
 800d30e:	bf00      	nop

0800d310 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d310:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d312:	689a      	ldr	r2, [r3, #8]
 800d314:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d316:	6802      	ldr	r2, [r0, #0]
{
 800d318:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d31a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d31c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d31e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d320:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d322:	6099      	str	r1, [r3, #8]
}
 800d324:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d328:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d32a:	6002      	str	r2, [r0, #0]
}
 800d32c:	4770      	bx	lr
 800d32e:	bf00      	nop

0800d330 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d330:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d332:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d334:	1c6b      	adds	r3, r5, #1
 800d336:	d010      	beq.n	800d35a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d338:	f100 0308 	add.w	r3, r0, #8
 800d33c:	461c      	mov	r4, r3
 800d33e:	685b      	ldr	r3, [r3, #4]
 800d340:	681a      	ldr	r2, [r3, #0]
 800d342:	42aa      	cmp	r2, r5
 800d344:	d9fa      	bls.n	800d33c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d346:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d348:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d34a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d34c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d34e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d350:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d352:	6108      	str	r0, [r1, #16]
}
 800d354:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d356:	6002      	str	r2, [r0, #0]
}
 800d358:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d35a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d35c:	6863      	ldr	r3, [r4, #4]
 800d35e:	e7f2      	b.n	800d346 <vListInsert+0x16>

0800d360 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d360:	6903      	ldr	r3, [r0, #16]
{
 800d362:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d364:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d368:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d36a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d36c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d36e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d370:	bf08      	it	eq
 800d372:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d374:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d376:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d37a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d37c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d37e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d380:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d382:	6818      	ldr	r0, [r3, #0]
}
 800d384:	4770      	bx	lr
 800d386:	bf00      	nop

0800d388 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d388:	4808      	ldr	r0, [pc, #32]	; (800d3ac <prvPortStartFirstTask+0x24>)
 800d38a:	6800      	ldr	r0, [r0, #0]
 800d38c:	6800      	ldr	r0, [r0, #0]
 800d38e:	f380 8808 	msr	MSP, r0
 800d392:	f04f 0000 	mov.w	r0, #0
 800d396:	f380 8814 	msr	CONTROL, r0
 800d39a:	b662      	cpsie	i
 800d39c:	b661      	cpsie	f
 800d39e:	f3bf 8f4f 	dsb	sy
 800d3a2:	f3bf 8f6f 	isb	sy
 800d3a6:	df00      	svc	0
 800d3a8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d3aa:	0000      	.short	0x0000
 800d3ac:	e000ed08 	.word	0xe000ed08

0800d3b0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d3b0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d3c0 <vPortEnableVFP+0x10>
 800d3b4:	6801      	ldr	r1, [r0, #0]
 800d3b6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d3ba:	6001      	str	r1, [r0, #0]
 800d3bc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d3be:	0000      	.short	0x0000
 800d3c0:	e000ed88 	.word	0xe000ed88

0800d3c4 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d3c4:	4b0e      	ldr	r3, [pc, #56]	; (800d400 <prvTaskExitError+0x3c>)
 800d3c6:	681b      	ldr	r3, [r3, #0]
{
 800d3c8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d3ca:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d3cc:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d3ce:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d3d0:	d008      	beq.n	800d3e4 <prvTaskExitError+0x20>
 800d3d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3d6:	f383 8811 	msr	BASEPRI, r3
 800d3da:	f3bf 8f6f 	isb	sy
 800d3de:	f3bf 8f4f 	dsb	sy
 800d3e2:	e7fe      	b.n	800d3e2 <prvTaskExitError+0x1e>
 800d3e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3e8:	f383 8811 	msr	BASEPRI, r3
 800d3ec:	f3bf 8f6f 	isb	sy
 800d3f0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d3f4:	9b01      	ldr	r3, [sp, #4]
 800d3f6:	2b00      	cmp	r3, #0
 800d3f8:	d0fc      	beq.n	800d3f4 <prvTaskExitError+0x30>
}
 800d3fa:	b002      	add	sp, #8
 800d3fc:	4770      	bx	lr
 800d3fe:	bf00      	nop
 800d400:	20000084 	.word	0x20000084

0800d404 <pxPortInitialiseStack>:
{
 800d404:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d406:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d40a:	4c07      	ldr	r4, [pc, #28]	; (800d428 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d40c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d410:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d414:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d418:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d41c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d420:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d424:	3844      	subs	r0, #68	; 0x44
 800d426:	4770      	bx	lr
 800d428:	0800d3c5 	.word	0x0800d3c5
 800d42c:	00000000 	.word	0x00000000

0800d430 <SVC_Handler>:
	__asm volatile (
 800d430:	4b07      	ldr	r3, [pc, #28]	; (800d450 <pxCurrentTCBConst2>)
 800d432:	6819      	ldr	r1, [r3, #0]
 800d434:	6808      	ldr	r0, [r1, #0]
 800d436:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d43a:	f380 8809 	msr	PSP, r0
 800d43e:	f3bf 8f6f 	isb	sy
 800d442:	f04f 0000 	mov.w	r0, #0
 800d446:	f380 8811 	msr	BASEPRI, r0
 800d44a:	4770      	bx	lr
 800d44c:	f3af 8000 	nop.w

0800d450 <pxCurrentTCBConst2>:
 800d450:	20012e10 	.word	0x20012e10

0800d454 <vPortEnterCritical>:
 800d454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d458:	f383 8811 	msr	BASEPRI, r3
 800d45c:	f3bf 8f6f 	isb	sy
 800d460:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d464:	4a0b      	ldr	r2, [pc, #44]	; (800d494 <vPortEnterCritical+0x40>)
 800d466:	6813      	ldr	r3, [r2, #0]
 800d468:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d46a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d46c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d46e:	d000      	beq.n	800d472 <vPortEnterCritical+0x1e>
}
 800d470:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d472:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d476:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d47a:	b2db      	uxtb	r3, r3
 800d47c:	2b00      	cmp	r3, #0
 800d47e:	d0f7      	beq.n	800d470 <vPortEnterCritical+0x1c>
 800d480:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d484:	f383 8811 	msr	BASEPRI, r3
 800d488:	f3bf 8f6f 	isb	sy
 800d48c:	f3bf 8f4f 	dsb	sy
 800d490:	e7fe      	b.n	800d490 <vPortEnterCritical+0x3c>
 800d492:	bf00      	nop
 800d494:	20000084 	.word	0x20000084

0800d498 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d498:	4a08      	ldr	r2, [pc, #32]	; (800d4bc <vPortExitCritical+0x24>)
 800d49a:	6813      	ldr	r3, [r2, #0]
 800d49c:	b943      	cbnz	r3, 800d4b0 <vPortExitCritical+0x18>
 800d49e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4a2:	f383 8811 	msr	BASEPRI, r3
 800d4a6:	f3bf 8f6f 	isb	sy
 800d4aa:	f3bf 8f4f 	dsb	sy
 800d4ae:	e7fe      	b.n	800d4ae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d4b0:	3b01      	subs	r3, #1
 800d4b2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d4b4:	b90b      	cbnz	r3, 800d4ba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d4b6:	f383 8811 	msr	BASEPRI, r3
}
 800d4ba:	4770      	bx	lr
 800d4bc:	20000084 	.word	0x20000084

0800d4c0 <PendSV_Handler>:
	__asm volatile
 800d4c0:	f3ef 8009 	mrs	r0, PSP
 800d4c4:	f3bf 8f6f 	isb	sy
 800d4c8:	4b15      	ldr	r3, [pc, #84]	; (800d520 <pxCurrentTCBConst>)
 800d4ca:	681a      	ldr	r2, [r3, #0]
 800d4cc:	f01e 0f10 	tst.w	lr, #16
 800d4d0:	bf08      	it	eq
 800d4d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d4d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4da:	6010      	str	r0, [r2, #0]
 800d4dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d4e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d4e4:	f380 8811 	msr	BASEPRI, r0
 800d4e8:	f3bf 8f4f 	dsb	sy
 800d4ec:	f3bf 8f6f 	isb	sy
 800d4f0:	f001 fd54 	bl	800ef9c <vTaskSwitchContext>
 800d4f4:	f04f 0000 	mov.w	r0, #0
 800d4f8:	f380 8811 	msr	BASEPRI, r0
 800d4fc:	bc09      	pop	{r0, r3}
 800d4fe:	6819      	ldr	r1, [r3, #0]
 800d500:	6808      	ldr	r0, [r1, #0]
 800d502:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d506:	f01e 0f10 	tst.w	lr, #16
 800d50a:	bf08      	it	eq
 800d50c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d510:	f380 8809 	msr	PSP, r0
 800d514:	f3bf 8f6f 	isb	sy
 800d518:	4770      	bx	lr
 800d51a:	bf00      	nop
 800d51c:	f3af 8000 	nop.w

0800d520 <pxCurrentTCBConst>:
 800d520:	20012e10 	.word	0x20012e10

0800d524 <xPortSysTickHandler>:
{
 800d524:	b508      	push	{r3, lr}
	__asm volatile
 800d526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d52a:	f383 8811 	msr	BASEPRI, r3
 800d52e:	f3bf 8f6f 	isb	sy
 800d532:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d536:	f001 fd21 	bl	800ef7c <xTaskIncrementTick>
 800d53a:	b128      	cbz	r0, 800d548 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d53c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d540:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d544:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d548:	2300      	movs	r3, #0
 800d54a:	f383 8811 	msr	BASEPRI, r3
}
 800d54e:	bd08      	pop	{r3, pc}

0800d550 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d550:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d554:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d556:	4906      	ldr	r1, [pc, #24]	; (800d570 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d558:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d55a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d55c:	680b      	ldr	r3, [r1, #0]
 800d55e:	4905      	ldr	r1, [pc, #20]	; (800d574 <vPortSetupTimerInterrupt+0x24>)
 800d560:	fba1 1303 	umull	r1, r3, r1, r3
 800d564:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d566:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d568:	3b01      	subs	r3, #1
 800d56a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d56c:	6110      	str	r0, [r2, #16]
}
 800d56e:	4770      	bx	lr
 800d570:	20000078 	.word	0x20000078
 800d574:	10624dd3 	.word	0x10624dd3

0800d578 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d578:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d57c:	4a49      	ldr	r2, [pc, #292]	; (800d6a4 <xPortStartScheduler+0x12c>)
 800d57e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d582:	4291      	cmp	r1, r2
 800d584:	d043      	beq.n	800d60e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d586:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d58a:	4b47      	ldr	r3, [pc, #284]	; (800d6a8 <xPortStartScheduler+0x130>)
 800d58c:	429a      	cmp	r2, r3
 800d58e:	d035      	beq.n	800d5fc <xPortStartScheduler+0x84>
{
 800d590:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d592:	4b46      	ldr	r3, [pc, #280]	; (800d6ac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d594:	4846      	ldr	r0, [pc, #280]	; (800d6b0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d596:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d598:	4c46      	ldr	r4, [pc, #280]	; (800d6b4 <xPortStartScheduler+0x13c>)
{
 800d59a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d59c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d59e:	b2d2      	uxtb	r2, r2
 800d5a0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d5a2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d5a4:	781b      	ldrb	r3, [r3, #0]
 800d5a6:	b2db      	uxtb	r3, r3
 800d5a8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d5ac:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d5b0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d5b4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d5b8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d5ba:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d5bc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d5be:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d5c0:	bf48      	it	mi
 800d5c2:	2206      	movmi	r2, #6
 800d5c4:	d511      	bpl.n	800d5ea <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d5c6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d5ca:	005b      	lsls	r3, r3, #1
 800d5cc:	b2db      	uxtb	r3, r3
 800d5ce:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d5d2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d5d6:	0609      	lsls	r1, r1, #24
 800d5d8:	4610      	mov	r0, r2
 800d5da:	f102 32ff 	add.w	r2, r2, #4294967295
 800d5de:	d4f2      	bmi.n	800d5c6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d5e0:	2803      	cmp	r0, #3
 800d5e2:	6020      	str	r0, [r4, #0]
 800d5e4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d5e8:	d01a      	beq.n	800d620 <xPortStartScheduler+0xa8>
	__asm volatile
 800d5ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5ee:	f383 8811 	msr	BASEPRI, r3
 800d5f2:	f3bf 8f6f 	isb	sy
 800d5f6:	f3bf 8f4f 	dsb	sy
 800d5fa:	e7fe      	b.n	800d5fa <xPortStartScheduler+0x82>
 800d5fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d600:	f383 8811 	msr	BASEPRI, r3
 800d604:	f3bf 8f6f 	isb	sy
 800d608:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d60c:	e7fe      	b.n	800d60c <xPortStartScheduler+0x94>
 800d60e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d612:	f383 8811 	msr	BASEPRI, r3
 800d616:	f3bf 8f6f 	isb	sy
 800d61a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d61e:	e7fe      	b.n	800d61e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d620:	9b02      	ldr	r3, [sp, #8]
 800d622:	4a22      	ldr	r2, [pc, #136]	; (800d6ac <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d624:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d628:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d62c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d62e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d630:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d632:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d636:	4c20      	ldr	r4, [pc, #128]	; (800d6b8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d638:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d63c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d640:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d644:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d648:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d64c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d64e:	f7ff ff7f 	bl	800d550 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d652:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d654:	f7ff feac 	bl	800d3b0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d658:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d65c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d660:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d664:	f7ff fe90 	bl	800d388 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d668:	f001 fc98 	bl	800ef9c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d66c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d66e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d670:	3301      	adds	r3, #1
 800d672:	d008      	beq.n	800d686 <xPortStartScheduler+0x10e>
 800d674:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d678:	f383 8811 	msr	BASEPRI, r3
 800d67c:	f3bf 8f6f 	isb	sy
 800d680:	f3bf 8f4f 	dsb	sy
 800d684:	e7fe      	b.n	800d684 <xPortStartScheduler+0x10c>
 800d686:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d68a:	f383 8811 	msr	BASEPRI, r3
 800d68e:	f3bf 8f6f 	isb	sy
 800d692:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d696:	9b03      	ldr	r3, [sp, #12]
 800d698:	2b00      	cmp	r3, #0
 800d69a:	d0fc      	beq.n	800d696 <xPortStartScheduler+0x11e>
}
 800d69c:	2000      	movs	r0, #0
 800d69e:	b004      	add	sp, #16
 800d6a0:	bd70      	pop	{r4, r5, r6, pc}
 800d6a2:	bf00      	nop
 800d6a4:	410fc271 	.word	0x410fc271
 800d6a8:	410fc270 	.word	0x410fc270
 800d6ac:	e000e400 	.word	0xe000e400
 800d6b0:	20012dc8 	.word	0x20012dc8
 800d6b4:	20012dcc 	.word	0x20012dcc
 800d6b8:	20000084 	.word	0x20000084

0800d6bc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d6bc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d6c0:	2b0f      	cmp	r3, #15
 800d6c2:	d90e      	bls.n	800d6e2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d6c4:	4911      	ldr	r1, [pc, #68]	; (800d70c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d6c6:	4a12      	ldr	r2, [pc, #72]	; (800d710 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d6c8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d6ca:	7812      	ldrb	r2, [r2, #0]
 800d6cc:	429a      	cmp	r2, r3
 800d6ce:	d908      	bls.n	800d6e2 <vPortValidateInterruptPriority+0x26>
 800d6d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6d4:	f383 8811 	msr	BASEPRI, r3
 800d6d8:	f3bf 8f6f 	isb	sy
 800d6dc:	f3bf 8f4f 	dsb	sy
 800d6e0:	e7fe      	b.n	800d6e0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d6e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d6e6:	4a0b      	ldr	r2, [pc, #44]	; (800d714 <vPortValidateInterruptPriority+0x58>)
 800d6e8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d6ec:	6812      	ldr	r2, [r2, #0]
 800d6ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d6f2:	4293      	cmp	r3, r2
 800d6f4:	d908      	bls.n	800d708 <vPortValidateInterruptPriority+0x4c>
 800d6f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6fa:	f383 8811 	msr	BASEPRI, r3
 800d6fe:	f3bf 8f6f 	isb	sy
 800d702:	f3bf 8f4f 	dsb	sy
 800d706:	e7fe      	b.n	800d706 <vPortValidateInterruptPriority+0x4a>
	}
 800d708:	4770      	bx	lr
 800d70a:	bf00      	nop
 800d70c:	e000e3f0 	.word	0xe000e3f0
 800d710:	20012dc8 	.word	0x20012dc8
 800d714:	20012dcc 	.word	0x20012dcc

0800d718 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d718:	b570      	push	{r4, r5, r6, lr}
 800d71a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d71c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d71e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d720:	b920      	cbnz	r0, 800d72c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d722:	6825      	ldr	r5, [r4, #0]
 800d724:	b34d      	cbz	r5, 800d77a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d726:	3601      	adds	r6, #1
 800d728:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d72a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d72c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d72e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d730:	b97d      	cbnz	r5, 800d752 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d732:	6860      	ldr	r0, [r4, #4]
 800d734:	f01d fe13 	bl	802b35e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d738:	6863      	ldr	r3, [r4, #4]
 800d73a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d73c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d73e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d740:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d742:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d744:	bf24      	itt	cs
 800d746:	6823      	ldrcs	r3, [r4, #0]
 800d748:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d74a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d74c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d74e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d750:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d752:	68e0      	ldr	r0, [r4, #12]
 800d754:	f01d fe03 	bl	802b35e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d758:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d75a:	68e3      	ldr	r3, [r4, #12]
 800d75c:	4251      	negs	r1, r2
 800d75e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d760:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d762:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d764:	4293      	cmp	r3, r2
 800d766:	d202      	bcs.n	800d76e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d768:	68a3      	ldr	r3, [r4, #8]
 800d76a:	440b      	add	r3, r1
 800d76c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d76e:	2d02      	cmp	r5, #2
 800d770:	d008      	beq.n	800d784 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d772:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d774:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d776:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d778:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d77a:	68a0      	ldr	r0, [r4, #8]
 800d77c:	f001 fde0 	bl	800f340 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d780:	60a5      	str	r5, [r4, #8]
 800d782:	e7d0      	b.n	800d726 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d784:	2e01      	cmp	r6, #1
 800d786:	bf38      	it	cc
 800d788:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d78a:	2000      	movs	r0, #0
 800d78c:	e7cc      	b.n	800d728 <prvCopyDataToQueue+0x10>
 800d78e:	bf00      	nop

0800d790 <xQueueGenericCreateStatic>:
	{
 800d790:	b530      	push	{r4, r5, lr}
 800d792:	b083      	sub	sp, #12
 800d794:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d798:	b940      	cbnz	r0, 800d7ac <xQueueGenericCreateStatic+0x1c>
 800d79a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d79e:	f383 8811 	msr	BASEPRI, r3
 800d7a2:	f3bf 8f6f 	isb	sy
 800d7a6:	f3bf 8f4f 	dsb	sy
 800d7aa:	e7fe      	b.n	800d7aa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d7ac:	461d      	mov	r5, r3
 800d7ae:	b17b      	cbz	r3, 800d7d0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d7b0:	b302      	cbz	r2, 800d7f4 <xQueueGenericCreateStatic+0x64>
 800d7b2:	b1b1      	cbz	r1, 800d7e2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d7b4:	2350      	movs	r3, #80	; 0x50
 800d7b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d7b8:	9b01      	ldr	r3, [sp, #4]
 800d7ba:	2b50      	cmp	r3, #80	; 0x50
 800d7bc:	d023      	beq.n	800d806 <xQueueGenericCreateStatic+0x76>
 800d7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7c2:	f383 8811 	msr	BASEPRI, r3
 800d7c6:	f3bf 8f6f 	isb	sy
 800d7ca:	f3bf 8f4f 	dsb	sy
 800d7ce:	e7fe      	b.n	800d7ce <xQueueGenericCreateStatic+0x3e>
 800d7d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7d4:	f383 8811 	msr	BASEPRI, r3
 800d7d8:	f3bf 8f6f 	isb	sy
 800d7dc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d7e0:	e7fe      	b.n	800d7e0 <xQueueGenericCreateStatic+0x50>
 800d7e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7e6:	f383 8811 	msr	BASEPRI, r3
 800d7ea:	f3bf 8f6f 	isb	sy
 800d7ee:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d7f2:	e7fe      	b.n	800d7f2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d7f4:	bb89      	cbnz	r1, 800d85a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d7f6:	2250      	movs	r2, #80	; 0x50
 800d7f8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d7fa:	9a01      	ldr	r2, [sp, #4]
 800d7fc:	2a50      	cmp	r2, #80	; 0x50
 800d7fe:	d1de      	bne.n	800d7be <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d800:	9a01      	ldr	r2, [sp, #4]
 800d802:	462a      	mov	r2, r5
 800d804:	e000      	b.n	800d808 <xQueueGenericCreateStatic+0x78>
 800d806:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d808:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d80a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d80c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d810:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d814:	f7ff fe1e 	bl	800d454 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d818:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d81c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d81e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d820:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d824:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d826:	4401      	add	r1, r0
 800d828:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d82a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d82c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d82e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d830:	21ff      	movs	r1, #255	; 0xff
 800d832:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d836:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d838:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d83c:	f105 0010 	add.w	r0, r5, #16
 800d840:	f7ff fd56 	bl	800d2f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d844:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d848:	f7ff fd52 	bl	800d2f0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d84c:	f7ff fe24 	bl	800d498 <vPortExitCritical>
	}
 800d850:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d852:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d856:	b003      	add	sp, #12
 800d858:	bd30      	pop	{r4, r5, pc}
 800d85a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d85e:	f383 8811 	msr	BASEPRI, r3
 800d862:	f3bf 8f6f 	isb	sy
 800d866:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d86a:	e7fe      	b.n	800d86a <xQueueGenericCreateStatic+0xda>

0800d86c <xQueueGenericCreate>:
	{
 800d86c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d86e:	b940      	cbnz	r0, 800d882 <xQueueGenericCreate+0x16>
 800d870:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d874:	f383 8811 	msr	BASEPRI, r3
 800d878:	f3bf 8f6f 	isb	sy
 800d87c:	f3bf 8f4f 	dsb	sy
 800d880:	e7fe      	b.n	800d880 <xQueueGenericCreate+0x14>
 800d882:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d884:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d888:	3050      	adds	r0, #80	; 0x50
 800d88a:	460e      	mov	r6, r1
 800d88c:	4617      	mov	r7, r2
 800d88e:	f7ff fc0f 	bl	800d0b0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d892:	4604      	mov	r4, r0
 800d894:	b340      	cbz	r0, 800d8e8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d896:	2300      	movs	r3, #0
 800d898:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d89c:	b336      	cbz	r6, 800d8ec <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d89e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d8a2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d8a4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d8a8:	f7ff fdd4 	bl	800d454 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8ac:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d8b0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8b2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8b4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8b8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8ba:	440a      	add	r2, r1
 800d8bc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d8be:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8c0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d8c2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d8c4:	22ff      	movs	r2, #255	; 0xff
 800d8c6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8ca:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d8cc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d8d0:	f104 0010 	add.w	r0, r4, #16
 800d8d4:	f7ff fd0c 	bl	800d2f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d8d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d8dc:	f7ff fd08 	bl	800d2f0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d8e0:	f7ff fdda 	bl	800d498 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d8e4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d8e8:	4620      	mov	r0, r4
 800d8ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8ec:	4603      	mov	r3, r0
 800d8ee:	e7d8      	b.n	800d8a2 <xQueueGenericCreate+0x36>

0800d8f0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d8f0:	b940      	cbnz	r0, 800d904 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d8f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8f6:	f383 8811 	msr	BASEPRI, r3
 800d8fa:	f3bf 8f6f 	isb	sy
 800d8fe:	f3bf 8f4f 	dsb	sy
 800d902:	e7fe      	b.n	800d902 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d904:	4288      	cmp	r0, r1
 800d906:	d208      	bcs.n	800d91a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d908:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d90c:	f383 8811 	msr	BASEPRI, r3
 800d910:	f3bf 8f6f 	isb	sy
 800d914:	f3bf 8f4f 	dsb	sy
 800d918:	e7fe      	b.n	800d918 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d91a:	b530      	push	{r4, r5, lr}
 800d91c:	4615      	mov	r5, r2
 800d91e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d920:	2a00      	cmp	r2, #0
 800d922:	d03c      	beq.n	800d99e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d924:	2350      	movs	r3, #80	; 0x50
 800d926:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d928:	9b03      	ldr	r3, [sp, #12]
 800d92a:	2b50      	cmp	r3, #80	; 0x50
 800d92c:	d008      	beq.n	800d940 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d92e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d932:	f383 8811 	msr	BASEPRI, r3
 800d936:	f3bf 8f6f 	isb	sy
 800d93a:	f3bf 8f4f 	dsb	sy
 800d93e:	e7fe      	b.n	800d93e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d940:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d942:	2301      	movs	r3, #1
 800d944:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d948:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d94a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d94e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d950:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d952:	f7ff fd7f 	bl	800d454 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d956:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d95a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d95c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d95e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d962:	1ac3      	subs	r3, r0, r3
 800d964:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d966:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d968:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d96c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d970:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d972:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d974:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d978:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d97a:	f105 0010 	add.w	r0, r5, #16
 800d97e:	f7ff fcb7 	bl	800d2f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d982:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d986:	f7ff fcb3 	bl	800d2f0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d98a:	f7ff fd85 	bl	800d498 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d98e:	9901      	ldr	r1, [sp, #4]
 800d990:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d992:	2302      	movs	r3, #2
	}
 800d994:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d996:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d99a:	b005      	add	sp, #20
 800d99c:	bd30      	pop	{r4, r5, pc}
 800d99e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9a2:	f383 8811 	msr	BASEPRI, r3
 800d9a6:	f3bf 8f6f 	isb	sy
 800d9aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d9ae:	e7fe      	b.n	800d9ae <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d9b0 <xQueueCreateCountingSemaphore>:
	{
 800d9b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d9b2:	b940      	cbnz	r0, 800d9c6 <xQueueCreateCountingSemaphore+0x16>
 800d9b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9b8:	f383 8811 	msr	BASEPRI, r3
 800d9bc:	f3bf 8f6f 	isb	sy
 800d9c0:	f3bf 8f4f 	dsb	sy
 800d9c4:	e7fe      	b.n	800d9c4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d9c6:	4288      	cmp	r0, r1
 800d9c8:	460e      	mov	r6, r1
 800d9ca:	4604      	mov	r4, r0
 800d9cc:	d208      	bcs.n	800d9e0 <xQueueCreateCountingSemaphore+0x30>
 800d9ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9d2:	f383 8811 	msr	BASEPRI, r3
 800d9d6:	f3bf 8f6f 	isb	sy
 800d9da:	f3bf 8f4f 	dsb	sy
 800d9de:	e7fe      	b.n	800d9de <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d9e0:	2050      	movs	r0, #80	; 0x50
 800d9e2:	f7ff fb65 	bl	800d0b0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d9e6:	4605      	mov	r5, r0
 800d9e8:	b330      	cbz	r0, 800da38 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d9ea:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d9ec:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d9f0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d9f4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d9f6:	f7ff fd2d 	bl	800d454 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9fa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d9fe:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da00:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da02:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da06:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da08:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da0a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da0c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800da0e:	22ff      	movs	r2, #255	; 0xff
 800da10:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da14:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800da16:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800da18:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da1c:	f105 0010 	add.w	r0, r5, #16
 800da20:	f7ff fc66 	bl	800d2f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da24:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800da28:	f7ff fc62 	bl	800d2f0 <vListInitialise>
	taskEXIT_CRITICAL();
 800da2c:	f7ff fd34 	bl	800d498 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800da30:	2302      	movs	r3, #2
 800da32:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800da36:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800da38:	4628      	mov	r0, r5
 800da3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800da3c <xQueueGenericSend>:
{
 800da3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da40:	b085      	sub	sp, #20
 800da42:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800da44:	2800      	cmp	r0, #0
 800da46:	f000 80a4 	beq.w	800db92 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da4a:	4688      	mov	r8, r1
 800da4c:	461f      	mov	r7, r3
 800da4e:	4604      	mov	r4, r0
 800da50:	2900      	cmp	r1, #0
 800da52:	f000 8091 	beq.w	800db78 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800da56:	2f02      	cmp	r7, #2
 800da58:	d10b      	bne.n	800da72 <xQueueGenericSend+0x36>
 800da5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da5c:	2b01      	cmp	r3, #1
 800da5e:	d008      	beq.n	800da72 <xQueueGenericSend+0x36>
 800da60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da64:	f383 8811 	msr	BASEPRI, r3
 800da68:	f3bf 8f6f 	isb	sy
 800da6c:	f3bf 8f4f 	dsb	sy
 800da70:	e7fe      	b.n	800da70 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da72:	f001 fc0f 	bl	800f294 <xTaskGetSchedulerState>
 800da76:	4605      	mov	r5, r0
 800da78:	2800      	cmp	r0, #0
 800da7a:	f000 8093 	beq.w	800dba4 <xQueueGenericSend+0x168>
 800da7e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da80:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800da84:	f7ff fce6 	bl	800d454 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800da88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da8a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da8c:	429a      	cmp	r2, r3
 800da8e:	f0c0 80ef 	bcc.w	800dc70 <xQueueGenericSend+0x234>
 800da92:	2f02      	cmp	r7, #2
 800da94:	f000 80ec 	beq.w	800dc70 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800da98:	9801      	ldr	r0, [sp, #4]
 800da9a:	2800      	cmp	r0, #0
 800da9c:	f000 8101 	beq.w	800dca2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800daa0:	2d00      	cmp	r5, #0
 800daa2:	f000 80e1 	beq.w	800dc68 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800daa6:	f7ff fcf7 	bl	800d498 <vPortExitCritical>
		vTaskSuspendAll();
 800daaa:	f001 fa49 	bl	800ef40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800daae:	f7ff fcd1 	bl	800d454 <vPortEnterCritical>
 800dab2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dab6:	2bff      	cmp	r3, #255	; 0xff
 800dab8:	bf04      	itt	eq
 800daba:	2300      	moveq	r3, #0
 800dabc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dac0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dac4:	2bff      	cmp	r3, #255	; 0xff
 800dac6:	bf04      	itt	eq
 800dac8:	2300      	moveq	r3, #0
 800daca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dace:	f7ff fce3 	bl	800d498 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dad2:	a901      	add	r1, sp, #4
 800dad4:	a802      	add	r0, sp, #8
 800dad6:	f001 fb8f 	bl	800f1f8 <xTaskCheckForTimeOut>
 800dada:	2800      	cmp	r0, #0
 800dadc:	f040 80e6 	bne.w	800dcac <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dae0:	f7ff fcb8 	bl	800d454 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dae4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dae6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dae8:	429a      	cmp	r2, r3
 800daea:	d068      	beq.n	800dbbe <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800daec:	f7ff fcd4 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800daf0:	f7ff fcb0 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800daf4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800daf8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dafa:	2d00      	cmp	r5, #0
 800dafc:	dc04      	bgt.n	800db08 <xQueueGenericSend+0xcc>
 800dafe:	e011      	b.n	800db24 <xQueueGenericSend+0xe8>
			--cTxLock;
 800db00:	1e6a      	subs	r2, r5, #1
 800db02:	b2d3      	uxtb	r3, r2
 800db04:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db06:	b16b      	cbz	r3, 800db24 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db08:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db0a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db0c:	b153      	cbz	r3, 800db24 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db0e:	f001 fb1f 	bl	800f150 <xTaskRemoveFromEventList>
 800db12:	2800      	cmp	r0, #0
 800db14:	d0f4      	beq.n	800db00 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800db16:	f001 fbb7 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800db1a:	1e6a      	subs	r2, r5, #1
 800db1c:	b2d3      	uxtb	r3, r2
 800db1e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db20:	2b00      	cmp	r3, #0
 800db22:	d1f1      	bne.n	800db08 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800db24:	23ff      	movs	r3, #255	; 0xff
 800db26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800db2a:	f7ff fcb5 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db2e:	f7ff fc91 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db32:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800db36:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db38:	2d00      	cmp	r5, #0
 800db3a:	dd14      	ble.n	800db66 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db3c:	f104 0910 	add.w	r9, r4, #16
 800db40:	e003      	b.n	800db4a <xQueueGenericSend+0x10e>
				--cRxLock;
 800db42:	1e6a      	subs	r2, r5, #1
 800db44:	b2d3      	uxtb	r3, r2
 800db46:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db48:	b16b      	cbz	r3, 800db66 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db4a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db4c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db4e:	b153      	cbz	r3, 800db66 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db50:	f001 fafe 	bl	800f150 <xTaskRemoveFromEventList>
 800db54:	2800      	cmp	r0, #0
 800db56:	d0f4      	beq.n	800db42 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800db58:	f001 fb96 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800db5c:	1e6a      	subs	r2, r5, #1
 800db5e:	b2d3      	uxtb	r3, r2
 800db60:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db62:	2b00      	cmp	r3, #0
 800db64:	d1f1      	bne.n	800db4a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800db66:	23ff      	movs	r3, #255	; 0xff
 800db68:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db6c:	f7ff fc94 	bl	800d498 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800db70:	f001 f9ee 	bl	800ef50 <xTaskResumeAll>
 800db74:	2501      	movs	r5, #1
 800db76:	e785      	b.n	800da84 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db78:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800db7a:	2b00      	cmp	r3, #0
 800db7c:	f43f af6b 	beq.w	800da56 <xQueueGenericSend+0x1a>
 800db80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db84:	f383 8811 	msr	BASEPRI, r3
 800db88:	f3bf 8f6f 	isb	sy
 800db8c:	f3bf 8f4f 	dsb	sy
 800db90:	e7fe      	b.n	800db90 <xQueueGenericSend+0x154>
 800db92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db96:	f383 8811 	msr	BASEPRI, r3
 800db9a:	f3bf 8f6f 	isb	sy
 800db9e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dba2:	e7fe      	b.n	800dba2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dba4:	9b01      	ldr	r3, [sp, #4]
 800dba6:	2b00      	cmp	r3, #0
 800dba8:	f43f af6a 	beq.w	800da80 <xQueueGenericSend+0x44>
 800dbac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbb0:	f383 8811 	msr	BASEPRI, r3
 800dbb4:	f3bf 8f6f 	isb	sy
 800dbb8:	f3bf 8f4f 	dsb	sy
 800dbbc:	e7fe      	b.n	800dbbc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dbbe:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dbc2:	f7ff fc69 	bl	800d498 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dbc6:	9901      	ldr	r1, [sp, #4]
 800dbc8:	4648      	mov	r0, r9
 800dbca:	f001 fa33 	bl	800f034 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dbce:	f7ff fc41 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dbd2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dbd6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbd8:	2d00      	cmp	r5, #0
 800dbda:	dc04      	bgt.n	800dbe6 <xQueueGenericSend+0x1aa>
 800dbdc:	e011      	b.n	800dc02 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800dbde:	1e6b      	subs	r3, r5, #1
 800dbe0:	b2da      	uxtb	r2, r3
 800dbe2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbe4:	b16a      	cbz	r2, 800dc02 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbe6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbe8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbea:	b153      	cbz	r3, 800dc02 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbec:	f001 fab0 	bl	800f150 <xTaskRemoveFromEventList>
 800dbf0:	2800      	cmp	r0, #0
 800dbf2:	d0f4      	beq.n	800dbde <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800dbf4:	f001 fb48 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800dbf8:	1e6b      	subs	r3, r5, #1
 800dbfa:	b2da      	uxtb	r2, r3
 800dbfc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbfe:	2a00      	cmp	r2, #0
 800dc00:	d1f1      	bne.n	800dbe6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800dc02:	23ff      	movs	r3, #255	; 0xff
 800dc04:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dc08:	f7ff fc46 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc0c:	f7ff fc22 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc10:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc14:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc16:	2d00      	cmp	r5, #0
 800dc18:	dc04      	bgt.n	800dc24 <xQueueGenericSend+0x1e8>
 800dc1a:	e011      	b.n	800dc40 <xQueueGenericSend+0x204>
				--cRxLock;
 800dc1c:	1e6b      	subs	r3, r5, #1
 800dc1e:	b2da      	uxtb	r2, r3
 800dc20:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc22:	b16a      	cbz	r2, 800dc40 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc24:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc26:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc28:	b153      	cbz	r3, 800dc40 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc2a:	f001 fa91 	bl	800f150 <xTaskRemoveFromEventList>
 800dc2e:	2800      	cmp	r0, #0
 800dc30:	d0f4      	beq.n	800dc1c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800dc32:	f001 fb29 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800dc36:	1e6b      	subs	r3, r5, #1
 800dc38:	b2da      	uxtb	r2, r3
 800dc3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc3c:	2a00      	cmp	r2, #0
 800dc3e:	d1f1      	bne.n	800dc24 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc40:	23ff      	movs	r3, #255	; 0xff
 800dc42:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc46:	f7ff fc27 	bl	800d498 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dc4a:	f001 f981 	bl	800ef50 <xTaskResumeAll>
 800dc4e:	2800      	cmp	r0, #0
 800dc50:	d190      	bne.n	800db74 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800dc52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc5e:	f3bf 8f4f 	dsb	sy
 800dc62:	f3bf 8f6f 	isb	sy
 800dc66:	e785      	b.n	800db74 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc68:	a802      	add	r0, sp, #8
 800dc6a:	f001 fab9 	bl	800f1e0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dc6e:	e71a      	b.n	800daa6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc70:	463a      	mov	r2, r7
 800dc72:	4641      	mov	r1, r8
 800dc74:	4620      	mov	r0, r4
 800dc76:	f7ff fd4f 	bl	800d718 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc7c:	2b00      	cmp	r3, #0
 800dc7e:	d153      	bne.n	800dd28 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800dc80:	b148      	cbz	r0, 800dc96 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800dc82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc8a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc8e:	f3bf 8f4f 	dsb	sy
 800dc92:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dc96:	f7ff fbff 	bl	800d498 <vPortExitCritical>
				return pdPASS;
 800dc9a:	2001      	movs	r0, #1
}
 800dc9c:	b005      	add	sp, #20
 800dc9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dca2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800dca4:	f7ff fbf8 	bl	800d498 <vPortExitCritical>
					return errQUEUE_FULL;
 800dca8:	9800      	ldr	r0, [sp, #0]
 800dcaa:	e7f7      	b.n	800dc9c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800dcac:	f7ff fbd2 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcb0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcb4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcb6:	2d00      	cmp	r5, #0
 800dcb8:	dd10      	ble.n	800dcdc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcba:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800dcbe:	e003      	b.n	800dcc8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dcc0:	1e6b      	subs	r3, r5, #1
 800dcc2:	b2da      	uxtb	r2, r3
 800dcc4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcc6:	b14a      	cbz	r2, 800dcdc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcca:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dccc:	b133      	cbz	r3, 800dcdc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcce:	f001 fa3f 	bl	800f150 <xTaskRemoveFromEventList>
 800dcd2:	2800      	cmp	r0, #0
 800dcd4:	d0f4      	beq.n	800dcc0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800dcd6:	f001 fad7 	bl	800f288 <vTaskMissedYield>
 800dcda:	e7f1      	b.n	800dcc0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcdc:	23ff      	movs	r3, #255	; 0xff
 800dcde:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dce2:	f7ff fbd9 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dce6:	f7ff fbb5 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcf0:	2d00      	cmp	r5, #0
 800dcf2:	dd10      	ble.n	800dd16 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcf4:	f104 0610 	add.w	r6, r4, #16
 800dcf8:	e003      	b.n	800dd02 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800dcfa:	1e6b      	subs	r3, r5, #1
 800dcfc:	b2da      	uxtb	r2, r3
 800dcfe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd00:	b14a      	cbz	r2, 800dd16 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd02:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd04:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd06:	b133      	cbz	r3, 800dd16 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd08:	f001 fa22 	bl	800f150 <xTaskRemoveFromEventList>
 800dd0c:	2800      	cmp	r0, #0
 800dd0e:	d0f4      	beq.n	800dcfa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dd10:	f001 faba 	bl	800f288 <vTaskMissedYield>
 800dd14:	e7f1      	b.n	800dcfa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd16:	23ff      	movs	r3, #255	; 0xff
 800dd18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd1c:	f7ff fbbc 	bl	800d498 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dd20:	f001 f916 	bl	800ef50 <xTaskResumeAll>
			return errQUEUE_FULL;
 800dd24:	2000      	movs	r0, #0
 800dd26:	e7b9      	b.n	800dc9c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd28:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dd2c:	f001 fa10 	bl	800f150 <xTaskRemoveFromEventList>
 800dd30:	2800      	cmp	r0, #0
 800dd32:	d0b0      	beq.n	800dc96 <xQueueGenericSend+0x25a>
 800dd34:	e7a5      	b.n	800dc82 <xQueueGenericSend+0x246>
 800dd36:	bf00      	nop

0800dd38 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dd38:	2800      	cmp	r0, #0
 800dd3a:	d04b      	beq.n	800ddd4 <xQueueGenericSendFromISR+0x9c>
{
 800dd3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd40:	460e      	mov	r6, r1
 800dd42:	4617      	mov	r7, r2
 800dd44:	461d      	mov	r5, r3
 800dd46:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd48:	b321      	cbz	r1, 800dd94 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd4a:	2d02      	cmp	r5, #2
 800dd4c:	d10b      	bne.n	800dd66 <xQueueGenericSendFromISR+0x2e>
 800dd4e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd50:	2b01      	cmp	r3, #1
 800dd52:	d008      	beq.n	800dd66 <xQueueGenericSendFromISR+0x2e>
 800dd54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd58:	f383 8811 	msr	BASEPRI, r3
 800dd5c:	f3bf 8f6f 	isb	sy
 800dd60:	f3bf 8f4f 	dsb	sy
 800dd64:	e7fe      	b.n	800dd64 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd66:	f7ff fca9 	bl	800d6bc <vPortValidateInterruptPriority>
	__asm volatile
 800dd6a:	f3ef 8811 	mrs	r8, BASEPRI
 800dd6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd72:	f383 8811 	msr	BASEPRI, r3
 800dd76:	f3bf 8f6f 	isb	sy
 800dd7a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd7e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd80:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd82:	429a      	cmp	r2, r3
 800dd84:	d312      	bcc.n	800ddac <xQueueGenericSendFromISR+0x74>
 800dd86:	2d02      	cmp	r5, #2
 800dd88:	d010      	beq.n	800ddac <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dd8a:	2000      	movs	r0, #0
	__asm volatile
 800dd8c:	f388 8811 	msr	BASEPRI, r8
}
 800dd90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd94:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd96:	2b00      	cmp	r3, #0
 800dd98:	d0d7      	beq.n	800dd4a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dd9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd9e:	f383 8811 	msr	BASEPRI, r3
 800dda2:	f3bf 8f6f 	isb	sy
 800dda6:	f3bf 8f4f 	dsb	sy
 800ddaa:	e7fe      	b.n	800ddaa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ddac:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800ddae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ddb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ddb4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800ddb6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ddb8:	4620      	mov	r0, r4
 800ddba:	f7ff fcad 	bl	800d718 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ddbe:	1c6b      	adds	r3, r5, #1
 800ddc0:	d011      	beq.n	800dde6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ddc2:	1c6b      	adds	r3, r5, #1
 800ddc4:	b25b      	sxtb	r3, r3
 800ddc6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800ddca:	2001      	movs	r0, #1
	__asm volatile
 800ddcc:	f388 8811 	msr	BASEPRI, r8
}
 800ddd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800ddd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddd8:	f383 8811 	msr	BASEPRI, r3
 800dddc:	f3bf 8f6f 	isb	sy
 800dde0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dde4:	e7fe      	b.n	800dde4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dde6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dde8:	2b00      	cmp	r3, #0
 800ddea:	d0ee      	beq.n	800ddca <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ddf0:	f001 f9ae 	bl	800f150 <xTaskRemoveFromEventList>
 800ddf4:	2800      	cmp	r0, #0
 800ddf6:	d0e8      	beq.n	800ddca <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ddf8:	2f00      	cmp	r7, #0
 800ddfa:	d0e6      	beq.n	800ddca <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ddfc:	2001      	movs	r0, #1
 800ddfe:	6038      	str	r0, [r7, #0]
 800de00:	e7c4      	b.n	800dd8c <xQueueGenericSendFromISR+0x54>
 800de02:	bf00      	nop

0800de04 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800de04:	b370      	cbz	r0, 800de64 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800de06:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800de08:	b570      	push	{r4, r5, r6, lr}
 800de0a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800de0c:	b143      	cbz	r3, 800de20 <xQueueGiveFromISR+0x1c>
 800de0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de12:	f383 8811 	msr	BASEPRI, r3
 800de16:	f3bf 8f6f 	isb	sy
 800de1a:	f3bf 8f4f 	dsb	sy
 800de1e:	e7fe      	b.n	800de1e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800de20:	6803      	ldr	r3, [r0, #0]
 800de22:	460c      	mov	r4, r1
 800de24:	b33b      	cbz	r3, 800de76 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800de26:	f7ff fc49 	bl	800d6bc <vPortValidateInterruptPriority>
	__asm volatile
 800de2a:	f3ef 8511 	mrs	r5, BASEPRI
 800de2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de32:	f383 8811 	msr	BASEPRI, r3
 800de36:	f3bf 8f6f 	isb	sy
 800de3a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de3e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800de40:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800de42:	429a      	cmp	r2, r3
 800de44:	d923      	bls.n	800de8e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800de46:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de4a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800de4c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de4e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800de50:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800de52:	d020      	beq.n	800de96 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800de54:	3301      	adds	r3, #1
 800de56:	b25b      	sxtb	r3, r3
 800de58:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800de5c:	2001      	movs	r0, #1
	__asm volatile
 800de5e:	f385 8811 	msr	BASEPRI, r5
}
 800de62:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800de64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de68:	f383 8811 	msr	BASEPRI, r3
 800de6c:	f3bf 8f6f 	isb	sy
 800de70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800de74:	e7fe      	b.n	800de74 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800de76:	6883      	ldr	r3, [r0, #8]
 800de78:	2b00      	cmp	r3, #0
 800de7a:	d0d4      	beq.n	800de26 <xQueueGiveFromISR+0x22>
 800de7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de80:	f383 8811 	msr	BASEPRI, r3
 800de84:	f3bf 8f6f 	isb	sy
 800de88:	f3bf 8f4f 	dsb	sy
 800de8c:	e7fe      	b.n	800de8c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800de8e:	2000      	movs	r0, #0
	__asm volatile
 800de90:	f385 8811 	msr	BASEPRI, r5
}
 800de94:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de96:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800de98:	2b00      	cmp	r3, #0
 800de9a:	d0df      	beq.n	800de5c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de9c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800dea0:	f001 f956 	bl	800f150 <xTaskRemoveFromEventList>
 800dea4:	2800      	cmp	r0, #0
 800dea6:	d0d9      	beq.n	800de5c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800dea8:	2c00      	cmp	r4, #0
 800deaa:	d0d7      	beq.n	800de5c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800deac:	2001      	movs	r0, #1
 800deae:	6020      	str	r0, [r4, #0]
 800deb0:	e7ee      	b.n	800de90 <xQueueGiveFromISR+0x8c>
 800deb2:	bf00      	nop

0800deb4 <xQueueReceive>:
{
 800deb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800deb8:	b085      	sub	sp, #20
 800deba:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800debc:	2800      	cmp	r0, #0
 800debe:	f000 815c 	beq.w	800e17a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dec2:	460f      	mov	r7, r1
 800dec4:	4604      	mov	r4, r0
 800dec6:	2900      	cmp	r1, #0
 800dec8:	d079      	beq.n	800dfbe <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800deca:	f001 f9e3 	bl	800f294 <xTaskGetSchedulerState>
 800dece:	2800      	cmp	r0, #0
 800ded0:	f000 8081 	beq.w	800dfd6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ded4:	f7ff fabe 	bl	800d454 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ded8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800deda:	2d00      	cmp	r5, #0
 800dedc:	f040 8138 	bne.w	800e150 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dee0:	9b01      	ldr	r3, [sp, #4]
 800dee2:	2b00      	cmp	r3, #0
 800dee4:	f000 80d5 	beq.w	800e092 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dee8:	a802      	add	r0, sp, #8
 800deea:	f001 f979 	bl	800f1e0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800deee:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800def0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800def4:	f7ff fad0 	bl	800d498 <vPortExitCritical>
		vTaskSuspendAll();
 800def8:	f001 f822 	bl	800ef40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800defc:	f7ff faaa 	bl	800d454 <vPortEnterCritical>
 800df00:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df04:	2bff      	cmp	r3, #255	; 0xff
 800df06:	bf08      	it	eq
 800df08:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800df0c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df10:	2bff      	cmp	r3, #255	; 0xff
 800df12:	bf08      	it	eq
 800df14:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800df18:	f7ff fabe 	bl	800d498 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800df1c:	a901      	add	r1, sp, #4
 800df1e:	a802      	add	r0, sp, #8
 800df20:	f001 f96a 	bl	800f1f8 <xTaskCheckForTimeOut>
 800df24:	2800      	cmp	r0, #0
 800df26:	d163      	bne.n	800dff0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800df28:	f7ff fa94 	bl	800d454 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800df2c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800df2e:	2b00      	cmp	r3, #0
 800df30:	f000 80b5 	beq.w	800e09e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800df34:	f7ff fab0 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df38:	f7ff fa8c 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df3c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df42:	2d00      	cmp	r5, #0
 800df44:	dc04      	bgt.n	800df50 <xQueueReceive+0x9c>
 800df46:	e011      	b.n	800df6c <xQueueReceive+0xb8>
			--cTxLock;
 800df48:	1e6b      	subs	r3, r5, #1
 800df4a:	b2da      	uxtb	r2, r3
 800df4c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df4e:	b16a      	cbz	r2, 800df6c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df50:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df52:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df54:	b153      	cbz	r3, 800df6c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df56:	f001 f8fb 	bl	800f150 <xTaskRemoveFromEventList>
 800df5a:	2800      	cmp	r0, #0
 800df5c:	d0f4      	beq.n	800df48 <xQueueReceive+0x94>
						vTaskMissedYield();
 800df5e:	f001 f993 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800df62:	1e6b      	subs	r3, r5, #1
 800df64:	b2da      	uxtb	r2, r3
 800df66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df68:	2a00      	cmp	r2, #0
 800df6a:	d1f1      	bne.n	800df50 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800df6c:	23ff      	movs	r3, #255	; 0xff
 800df6e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df72:	f7ff fa91 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df76:	f7ff fa6d 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df80:	2d00      	cmp	r5, #0
 800df82:	dd14      	ble.n	800dfae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df84:	f104 0910 	add.w	r9, r4, #16
 800df88:	e003      	b.n	800df92 <xQueueReceive+0xde>
				--cRxLock;
 800df8a:	1e6b      	subs	r3, r5, #1
 800df8c:	b2da      	uxtb	r2, r3
 800df8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df90:	b16a      	cbz	r2, 800dfae <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df92:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df94:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df96:	b153      	cbz	r3, 800dfae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df98:	f001 f8da 	bl	800f150 <xTaskRemoveFromEventList>
 800df9c:	2800      	cmp	r0, #0
 800df9e:	d0f4      	beq.n	800df8a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800dfa0:	f001 f972 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800dfa4:	1e6b      	subs	r3, r5, #1
 800dfa6:	b2da      	uxtb	r2, r3
 800dfa8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfaa:	2a00      	cmp	r2, #0
 800dfac:	d1f1      	bne.n	800df92 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800dfae:	23ff      	movs	r3, #255	; 0xff
 800dfb0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dfb4:	f7ff fa70 	bl	800d498 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dfb8:	f000 ffca 	bl	800ef50 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800dfbc:	e060      	b.n	800e080 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dfbe:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dfc0:	2b00      	cmp	r3, #0
 800dfc2:	d082      	beq.n	800deca <xQueueReceive+0x16>
	__asm volatile
 800dfc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc8:	f383 8811 	msr	BASEPRI, r3
 800dfcc:	f3bf 8f6f 	isb	sy
 800dfd0:	f3bf 8f4f 	dsb	sy
 800dfd4:	e7fe      	b.n	800dfd4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dfd6:	9b01      	ldr	r3, [sp, #4]
 800dfd8:	2b00      	cmp	r3, #0
 800dfda:	f43f af7b 	beq.w	800ded4 <xQueueReceive+0x20>
 800dfde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe2:	f383 8811 	msr	BASEPRI, r3
 800dfe6:	f3bf 8f6f 	isb	sy
 800dfea:	f3bf 8f4f 	dsb	sy
 800dfee:	e7fe      	b.n	800dfee <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800dff0:	f7ff fa30 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dff4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dff8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dffa:	2d00      	cmp	r5, #0
 800dffc:	dc04      	bgt.n	800e008 <xQueueReceive+0x154>
 800dffe:	e011      	b.n	800e024 <xQueueReceive+0x170>
			--cTxLock;
 800e000:	1e6b      	subs	r3, r5, #1
 800e002:	b2da      	uxtb	r2, r3
 800e004:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e006:	b16a      	cbz	r2, 800e024 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e008:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e00a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e00c:	b153      	cbz	r3, 800e024 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e00e:	f001 f89f 	bl	800f150 <xTaskRemoveFromEventList>
 800e012:	2800      	cmp	r0, #0
 800e014:	d0f4      	beq.n	800e000 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e016:	f001 f937 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800e01a:	1e6b      	subs	r3, r5, #1
 800e01c:	b2da      	uxtb	r2, r3
 800e01e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e020:	2a00      	cmp	r2, #0
 800e022:	d1f1      	bne.n	800e008 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e024:	23ff      	movs	r3, #255	; 0xff
 800e026:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e02a:	f7ff fa35 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e02e:	f7ff fa11 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e032:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e036:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e038:	2d00      	cmp	r5, #0
 800e03a:	dd14      	ble.n	800e066 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e03c:	f104 0910 	add.w	r9, r4, #16
 800e040:	e003      	b.n	800e04a <xQueueReceive+0x196>
				--cRxLock;
 800e042:	1e6b      	subs	r3, r5, #1
 800e044:	b2da      	uxtb	r2, r3
 800e046:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e048:	b16a      	cbz	r2, 800e066 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e04a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e04c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e04e:	b153      	cbz	r3, 800e066 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e050:	f001 f87e 	bl	800f150 <xTaskRemoveFromEventList>
 800e054:	2800      	cmp	r0, #0
 800e056:	d0f4      	beq.n	800e042 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e058:	f001 f916 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800e05c:	1e6b      	subs	r3, r5, #1
 800e05e:	b2da      	uxtb	r2, r3
 800e060:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e062:	2a00      	cmp	r2, #0
 800e064:	d1f1      	bne.n	800e04a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e066:	23ff      	movs	r3, #255	; 0xff
 800e068:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e06c:	f7ff fa14 	bl	800d498 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e070:	f000 ff6e 	bl	800ef50 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e074:	f7ff f9ee 	bl	800d454 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e078:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e07a:	b153      	cbz	r3, 800e092 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e07c:	f7ff fa0c 	bl	800d498 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e080:	f7ff f9e8 	bl	800d454 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e084:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e086:	2d00      	cmp	r5, #0
 800e088:	d162      	bne.n	800e150 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e08a:	9b01      	ldr	r3, [sp, #4]
 800e08c:	2b00      	cmp	r3, #0
 800e08e:	f47f af31 	bne.w	800def4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e092:	f7ff fa01 	bl	800d498 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e096:	2000      	movs	r0, #0
}
 800e098:	b005      	add	sp, #20
 800e09a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e09e:	f7ff f9fb 	bl	800d498 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e0a2:	9901      	ldr	r1, [sp, #4]
 800e0a4:	4630      	mov	r0, r6
 800e0a6:	f000 ffc5 	bl	800f034 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e0aa:	f7ff f9d3 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0ae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0b4:	2d00      	cmp	r5, #0
 800e0b6:	dc04      	bgt.n	800e0c2 <xQueueReceive+0x20e>
 800e0b8:	e011      	b.n	800e0de <xQueueReceive+0x22a>
			--cTxLock;
 800e0ba:	1e6b      	subs	r3, r5, #1
 800e0bc:	b2da      	uxtb	r2, r3
 800e0be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0c0:	b16a      	cbz	r2, 800e0de <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0c4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0c6:	b153      	cbz	r3, 800e0de <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0c8:	f001 f842 	bl	800f150 <xTaskRemoveFromEventList>
 800e0cc:	2800      	cmp	r0, #0
 800e0ce:	d0f4      	beq.n	800e0ba <xQueueReceive+0x206>
						vTaskMissedYield();
 800e0d0:	f001 f8da 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800e0d4:	1e6b      	subs	r3, r5, #1
 800e0d6:	b2da      	uxtb	r2, r3
 800e0d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0da:	2a00      	cmp	r2, #0
 800e0dc:	d1f1      	bne.n	800e0c2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0de:	23ff      	movs	r3, #255	; 0xff
 800e0e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e0e4:	f7ff f9d8 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0e8:	f7ff f9b4 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e0ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0f2:	2d00      	cmp	r5, #0
 800e0f4:	dd14      	ble.n	800e120 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0f6:	f104 0910 	add.w	r9, r4, #16
 800e0fa:	e003      	b.n	800e104 <xQueueReceive+0x250>
				--cRxLock;
 800e0fc:	1e6b      	subs	r3, r5, #1
 800e0fe:	b2da      	uxtb	r2, r3
 800e100:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e102:	b16a      	cbz	r2, 800e120 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e104:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e106:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e108:	b153      	cbz	r3, 800e120 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e10a:	f001 f821 	bl	800f150 <xTaskRemoveFromEventList>
 800e10e:	2800      	cmp	r0, #0
 800e110:	d0f4      	beq.n	800e0fc <xQueueReceive+0x248>
					vTaskMissedYield();
 800e112:	f001 f8b9 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800e116:	1e6b      	subs	r3, r5, #1
 800e118:	b2da      	uxtb	r2, r3
 800e11a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e11c:	2a00      	cmp	r2, #0
 800e11e:	d1f1      	bne.n	800e104 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e120:	23ff      	movs	r3, #255	; 0xff
 800e122:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e126:	f7ff f9b7 	bl	800d498 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e12a:	f000 ff11 	bl	800ef50 <xTaskResumeAll>
 800e12e:	2800      	cmp	r0, #0
 800e130:	d1a6      	bne.n	800e080 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e132:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e136:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e13a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e13e:	f3bf 8f4f 	dsb	sy
 800e142:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e146:	f7ff f985 	bl	800d454 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e14a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e14c:	2d00      	cmp	r5, #0
 800e14e:	d09c      	beq.n	800e08a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e150:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e152:	b152      	cbz	r2, 800e16a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e154:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e156:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e158:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e15a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e15c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e15e:	bf24      	itt	cs
 800e160:	6821      	ldrcs	r1, [r4, #0]
 800e162:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e164:	4638      	mov	r0, r7
 800e166:	f01d f8fa 	bl	802b35e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e16a:	3d01      	subs	r5, #1
 800e16c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e16e:	6923      	ldr	r3, [r4, #16]
 800e170:	b963      	cbnz	r3, 800e18c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e172:	f7ff f991 	bl	800d498 <vPortExitCritical>
				return pdPASS;
 800e176:	2001      	movs	r0, #1
 800e178:	e78e      	b.n	800e098 <xQueueReceive+0x1e4>
 800e17a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e17e:	f383 8811 	msr	BASEPRI, r3
 800e182:	f3bf 8f6f 	isb	sy
 800e186:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e18a:	e7fe      	b.n	800e18a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e18c:	f104 0010 	add.w	r0, r4, #16
 800e190:	f000 ffde 	bl	800f150 <xTaskRemoveFromEventList>
 800e194:	2800      	cmp	r0, #0
 800e196:	d0ec      	beq.n	800e172 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e198:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e19c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1a4:	f3bf 8f4f 	dsb	sy
 800e1a8:	f3bf 8f6f 	isb	sy
 800e1ac:	e7e1      	b.n	800e172 <xQueueReceive+0x2be>
 800e1ae:	bf00      	nop

0800e1b0 <xQueueSemaphoreTake>:
{
 800e1b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1b4:	b084      	sub	sp, #16
 800e1b6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e1b8:	2800      	cmp	r0, #0
 800e1ba:	d05c      	beq.n	800e276 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e1bc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e1be:	4604      	mov	r4, r0
 800e1c0:	b147      	cbz	r7, 800e1d4 <xQueueSemaphoreTake+0x24>
 800e1c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1c6:	f383 8811 	msr	BASEPRI, r3
 800e1ca:	f3bf 8f6f 	isb	sy
 800e1ce:	f3bf 8f4f 	dsb	sy
 800e1d2:	e7fe      	b.n	800e1d2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e1d4:	f001 f85e 	bl	800f294 <xTaskGetSchedulerState>
 800e1d8:	4605      	mov	r5, r0
 800e1da:	2800      	cmp	r0, #0
 800e1dc:	d054      	beq.n	800e288 <xQueueSemaphoreTake+0xd8>
 800e1de:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1e0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e1e4:	f7ff f936 	bl	800d454 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e1e8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	f040 8148 	bne.w	800e480 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e1f0:	9b01      	ldr	r3, [sp, #4]
 800e1f2:	2b00      	cmp	r3, #0
 800e1f4:	f000 813a 	beq.w	800e46c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e1f8:	2d00      	cmp	r5, #0
 800e1fa:	f000 809d 	beq.w	800e338 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e1fe:	f7ff f94b 	bl	800d498 <vPortExitCritical>
		vTaskSuspendAll();
 800e202:	f000 fe9d 	bl	800ef40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e206:	f7ff f925 	bl	800d454 <vPortEnterCritical>
 800e20a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e20e:	2bff      	cmp	r3, #255	; 0xff
 800e210:	bf04      	itt	eq
 800e212:	2300      	moveq	r3, #0
 800e214:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e218:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e21c:	2bff      	cmp	r3, #255	; 0xff
 800e21e:	bf04      	itt	eq
 800e220:	2300      	moveq	r3, #0
 800e222:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e226:	f7ff f937 	bl	800d498 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e22a:	a901      	add	r1, sp, #4
 800e22c:	a802      	add	r0, sp, #8
 800e22e:	f000 ffe3 	bl	800f1f8 <xTaskCheckForTimeOut>
 800e232:	2800      	cmp	r0, #0
 800e234:	d135      	bne.n	800e2a2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e236:	f7ff f90d 	bl	800d454 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e23a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e23c:	2b00      	cmp	r3, #0
 800e23e:	f000 80a4 	beq.w	800e38a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e242:	f7ff f929 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e246:	f7ff f905 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e24a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e24e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e250:	2d00      	cmp	r5, #0
 800e252:	dc05      	bgt.n	800e260 <xQueueSemaphoreTake+0xb0>
 800e254:	e074      	b.n	800e340 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e256:	1e6b      	subs	r3, r5, #1
 800e258:	b2da      	uxtb	r2, r3
 800e25a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e25c:	2a00      	cmp	r2, #0
 800e25e:	d06f      	beq.n	800e340 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e260:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e262:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e264:	2b00      	cmp	r3, #0
 800e266:	d06b      	beq.n	800e340 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e268:	f000 ff72 	bl	800f150 <xTaskRemoveFromEventList>
 800e26c:	2800      	cmp	r0, #0
 800e26e:	d0f2      	beq.n	800e256 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e270:	f001 f80a 	bl	800f288 <vTaskMissedYield>
 800e274:	e7ef      	b.n	800e256 <xQueueSemaphoreTake+0xa6>
 800e276:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e27a:	f383 8811 	msr	BASEPRI, r3
 800e27e:	f3bf 8f6f 	isb	sy
 800e282:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e286:	e7fe      	b.n	800e286 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e288:	9b01      	ldr	r3, [sp, #4]
 800e28a:	2b00      	cmp	r3, #0
 800e28c:	f000 80d4 	beq.w	800e438 <xQueueSemaphoreTake+0x288>
 800e290:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e294:	f383 8811 	msr	BASEPRI, r3
 800e298:	f3bf 8f6f 	isb	sy
 800e29c:	f3bf 8f4f 	dsb	sy
 800e2a0:	e7fe      	b.n	800e2a0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e2a2:	f7ff f8d7 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2a6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2aa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2ac:	2d00      	cmp	r5, #0
 800e2ae:	dc04      	bgt.n	800e2ba <xQueueSemaphoreTake+0x10a>
 800e2b0:	e011      	b.n	800e2d6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e2b2:	1e6b      	subs	r3, r5, #1
 800e2b4:	b2da      	uxtb	r2, r3
 800e2b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2b8:	b16a      	cbz	r2, 800e2d6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2bc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2be:	b153      	cbz	r3, 800e2d6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2c0:	f000 ff46 	bl	800f150 <xTaskRemoveFromEventList>
 800e2c4:	2800      	cmp	r0, #0
 800e2c6:	d0f4      	beq.n	800e2b2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e2c8:	f000 ffde 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800e2cc:	1e6b      	subs	r3, r5, #1
 800e2ce:	b2da      	uxtb	r2, r3
 800e2d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2d2:	2a00      	cmp	r2, #0
 800e2d4:	d1f1      	bne.n	800e2ba <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2d6:	23ff      	movs	r3, #255	; 0xff
 800e2d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e2dc:	f7ff f8dc 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2e0:	f7ff f8b8 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e2e4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e2e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2ea:	2d00      	cmp	r5, #0
 800e2ec:	dd14      	ble.n	800e318 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2ee:	f104 0810 	add.w	r8, r4, #16
 800e2f2:	e003      	b.n	800e2fc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e2f4:	1e6b      	subs	r3, r5, #1
 800e2f6:	b2da      	uxtb	r2, r3
 800e2f8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2fa:	b16a      	cbz	r2, 800e318 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2fc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2fe:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e300:	b153      	cbz	r3, 800e318 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e302:	f000 ff25 	bl	800f150 <xTaskRemoveFromEventList>
 800e306:	2800      	cmp	r0, #0
 800e308:	d0f4      	beq.n	800e2f4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e30a:	f000 ffbd 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800e30e:	1e6b      	subs	r3, r5, #1
 800e310:	b2da      	uxtb	r2, r3
 800e312:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e314:	2a00      	cmp	r2, #0
 800e316:	d1f1      	bne.n	800e2fc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e318:	23ff      	movs	r3, #255	; 0xff
 800e31a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e31e:	f7ff f8bb 	bl	800d498 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e322:	f000 fe15 	bl	800ef50 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e326:	f7ff f895 	bl	800d454 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e32a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e32c:	2b00      	cmp	r3, #0
 800e32e:	d07c      	beq.n	800e42a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e330:	f7ff f8b2 	bl	800d498 <vPortExitCritical>
	return xReturn;
 800e334:	2501      	movs	r5, #1
 800e336:	e755      	b.n	800e1e4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e338:	a802      	add	r0, sp, #8
 800e33a:	f000 ff51 	bl	800f1e0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e33e:	e75e      	b.n	800e1fe <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e340:	23ff      	movs	r3, #255	; 0xff
 800e342:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e346:	f7ff f8a7 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e34a:	f7ff f883 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e34e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e352:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e354:	2d00      	cmp	r5, #0
 800e356:	dd10      	ble.n	800e37a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e358:	f104 0810 	add.w	r8, r4, #16
 800e35c:	e003      	b.n	800e366 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e35e:	1e6b      	subs	r3, r5, #1
 800e360:	b2da      	uxtb	r2, r3
 800e362:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e364:	b14a      	cbz	r2, 800e37a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e366:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e368:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e36a:	b133      	cbz	r3, 800e37a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e36c:	f000 fef0 	bl	800f150 <xTaskRemoveFromEventList>
 800e370:	2800      	cmp	r0, #0
 800e372:	d0f4      	beq.n	800e35e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e374:	f000 ff88 	bl	800f288 <vTaskMissedYield>
 800e378:	e7f1      	b.n	800e35e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e37a:	23ff      	movs	r3, #255	; 0xff
 800e37c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e380:	f7ff f88a 	bl	800d498 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e384:	f000 fde4 	bl	800ef50 <xTaskResumeAll>
 800e388:	e7d4      	b.n	800e334 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e38a:	f7ff f885 	bl	800d498 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e38e:	6823      	ldr	r3, [r4, #0]
 800e390:	2b00      	cmp	r3, #0
 800e392:	d062      	beq.n	800e45a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e394:	9901      	ldr	r1, [sp, #4]
 800e396:	4630      	mov	r0, r6
 800e398:	f000 fe4c 	bl	800f034 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e39c:	f7ff f85a 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e3a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e3a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3a6:	2d00      	cmp	r5, #0
 800e3a8:	dc04      	bgt.n	800e3b4 <xQueueSemaphoreTake+0x204>
 800e3aa:	e00d      	b.n	800e3c8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e3ac:	1e6b      	subs	r3, r5, #1
 800e3ae:	b2da      	uxtb	r2, r3
 800e3b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3b2:	b14a      	cbz	r2, 800e3c8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3b6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3b8:	b133      	cbz	r3, 800e3c8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3ba:	f000 fec9 	bl	800f150 <xTaskRemoveFromEventList>
 800e3be:	2800      	cmp	r0, #0
 800e3c0:	d0f4      	beq.n	800e3ac <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e3c2:	f000 ff61 	bl	800f288 <vTaskMissedYield>
 800e3c6:	e7f1      	b.n	800e3ac <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e3c8:	23ff      	movs	r3, #255	; 0xff
 800e3ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e3ce:	f7ff f863 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3d2:	f7ff f83f 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3d6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3dc:	2d00      	cmp	r5, #0
 800e3de:	dd10      	ble.n	800e402 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3e0:	f104 0810 	add.w	r8, r4, #16
 800e3e4:	e003      	b.n	800e3ee <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e3e6:	1e6b      	subs	r3, r5, #1
 800e3e8:	b2da      	uxtb	r2, r3
 800e3ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3ec:	b14a      	cbz	r2, 800e402 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3ee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3f0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3f2:	b133      	cbz	r3, 800e402 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3f4:	f000 feac 	bl	800f150 <xTaskRemoveFromEventList>
 800e3f8:	2800      	cmp	r0, #0
 800e3fa:	d0f4      	beq.n	800e3e6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e3fc:	f000 ff44 	bl	800f288 <vTaskMissedYield>
 800e400:	e7f1      	b.n	800e3e6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e402:	23ff      	movs	r3, #255	; 0xff
 800e404:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e408:	f7ff f846 	bl	800d498 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e40c:	f000 fda0 	bl	800ef50 <xTaskResumeAll>
 800e410:	2800      	cmp	r0, #0
 800e412:	d18f      	bne.n	800e334 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e414:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e418:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e41c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e420:	f3bf 8f4f 	dsb	sy
 800e424:	f3bf 8f6f 	isb	sy
 800e428:	e784      	b.n	800e334 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e42a:	f7ff f835 	bl	800d498 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e42e:	b92f      	cbnz	r7, 800e43c <xQueueSemaphoreTake+0x28c>
}
 800e430:	4638      	mov	r0, r7
 800e432:	b004      	add	sp, #16
 800e434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e438:	4607      	mov	r7, r0
 800e43a:	e6d1      	b.n	800e1e0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e43c:	f7ff f80a 	bl	800d454 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e440:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e442:	b119      	cbz	r1, 800e44c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e444:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e446:	6819      	ldr	r1, [r3, #0]
 800e448:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e44c:	68a0      	ldr	r0, [r4, #8]
 800e44e:	f000 ffbd 	bl	800f3cc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e452:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e454:	f7ff f820 	bl	800d498 <vPortExitCritical>
 800e458:	e7ea      	b.n	800e430 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e45a:	f7fe fffb 	bl	800d454 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e45e:	68a0      	ldr	r0, [r4, #8]
 800e460:	f000 ff28 	bl	800f2b4 <xTaskPriorityInherit>
 800e464:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e466:	f7ff f817 	bl	800d498 <vPortExitCritical>
 800e46a:	e793      	b.n	800e394 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e46c:	b197      	cbz	r7, 800e494 <xQueueSemaphoreTake+0x2e4>
 800e46e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e472:	f383 8811 	msr	BASEPRI, r3
 800e476:	f3bf 8f6f 	isb	sy
 800e47a:	f3bf 8f4f 	dsb	sy
 800e47e:	e7fe      	b.n	800e47e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e480:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e482:	3b01      	subs	r3, #1
 800e484:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e486:	b1ca      	cbz	r2, 800e4bc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e488:	6923      	ldr	r3, [r4, #16]
 800e48a:	b933      	cbnz	r3, 800e49a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e48c:	f7ff f804 	bl	800d498 <vPortExitCritical>
				return pdPASS;
 800e490:	2701      	movs	r7, #1
 800e492:	e7cd      	b.n	800e430 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e494:	f7ff f800 	bl	800d498 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e498:	e7ca      	b.n	800e430 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e49a:	f104 0010 	add.w	r0, r4, #16
 800e49e:	f000 fe57 	bl	800f150 <xTaskRemoveFromEventList>
 800e4a2:	2800      	cmp	r0, #0
 800e4a4:	d0f2      	beq.n	800e48c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e4a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e4aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e4ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e4b2:	f3bf 8f4f 	dsb	sy
 800e4b6:	f3bf 8f6f 	isb	sy
 800e4ba:	e7e7      	b.n	800e48c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e4bc:	f000 ffda 	bl	800f474 <pvTaskIncrementMutexHeldCount>
 800e4c0:	60a0      	str	r0, [r4, #8]
 800e4c2:	e7e1      	b.n	800e488 <xQueueSemaphoreTake+0x2d8>

0800e4c4 <xQueueReceiveFromISR>:
{
 800e4c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e4c8:	b310      	cbz	r0, 800e510 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4ca:	460e      	mov	r6, r1
 800e4cc:	4617      	mov	r7, r2
 800e4ce:	4604      	mov	r4, r0
 800e4d0:	b191      	cbz	r1, 800e4f8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e4d2:	f7ff f8f3 	bl	800d6bc <vPortValidateInterruptPriority>
	__asm volatile
 800e4d6:	f3ef 8911 	mrs	r9, BASEPRI
 800e4da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4de:	f383 8811 	msr	BASEPRI, r3
 800e4e2:	f3bf 8f6f 	isb	sy
 800e4e6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e4ea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e4ec:	b9cd      	cbnz	r5, 800e522 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e4ee:	4628      	mov	r0, r5
	__asm volatile
 800e4f0:	f389 8811 	msr	BASEPRI, r9
}
 800e4f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e4fa:	2b00      	cmp	r3, #0
 800e4fc:	d0e9      	beq.n	800e4d2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e4fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e502:	f383 8811 	msr	BASEPRI, r3
 800e506:	f3bf 8f6f 	isb	sy
 800e50a:	f3bf 8f4f 	dsb	sy
 800e50e:	e7fe      	b.n	800e50e <xQueueReceiveFromISR+0x4a>
 800e510:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e514:	f383 8811 	msr	BASEPRI, r3
 800e518:	f3bf 8f6f 	isb	sy
 800e51c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e520:	e7fe      	b.n	800e520 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e522:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e526:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e528:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e52c:	b152      	cbz	r2, 800e544 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e52e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e530:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e532:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e534:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e536:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e538:	bf24      	itt	cs
 800e53a:	6821      	ldrcs	r1, [r4, #0]
 800e53c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e53e:	4630      	mov	r0, r6
 800e540:	f01c ff0d 	bl	802b35e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e544:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e546:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e54a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e54c:	d009      	beq.n	800e562 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e54e:	f108 0301 	add.w	r3, r8, #1
 800e552:	b25b      	sxtb	r3, r3
 800e554:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e558:	2001      	movs	r0, #1
	__asm volatile
 800e55a:	f389 8811 	msr	BASEPRI, r9
}
 800e55e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e562:	6923      	ldr	r3, [r4, #16]
 800e564:	2b00      	cmp	r3, #0
 800e566:	d0f7      	beq.n	800e558 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e568:	f104 0010 	add.w	r0, r4, #16
 800e56c:	f000 fdf0 	bl	800f150 <xTaskRemoveFromEventList>
 800e570:	2800      	cmp	r0, #0
 800e572:	d0f1      	beq.n	800e558 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e574:	2f00      	cmp	r7, #0
 800e576:	d0ef      	beq.n	800e558 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e578:	2001      	movs	r0, #1
 800e57a:	6038      	str	r0, [r7, #0]
 800e57c:	e7b8      	b.n	800e4f0 <xQueueReceiveFromISR+0x2c>
 800e57e:	bf00      	nop

0800e580 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e580:	b158      	cbz	r0, 800e59a <uxQueueMessagesWaiting+0x1a>
{
 800e582:	b510      	push	{r4, lr}
 800e584:	4604      	mov	r4, r0
 800e586:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e588:	f7fe ff64 	bl	800d454 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e58c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e58e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e590:	f7fe ff82 	bl	800d498 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e594:	9801      	ldr	r0, [sp, #4]
 800e596:	b002      	add	sp, #8
 800e598:	bd10      	pop	{r4, pc}
	__asm volatile
 800e59a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e59e:	f383 8811 	msr	BASEPRI, r3
 800e5a2:	f3bf 8f6f 	isb	sy
 800e5a6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e5aa:	e7fe      	b.n	800e5aa <uxQueueMessagesWaiting+0x2a>

0800e5ac <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e5ac:	b108      	cbz	r0, 800e5b2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e5ae:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e5b0:	4770      	bx	lr
 800e5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5b6:	f383 8811 	msr	BASEPRI, r3
 800e5ba:	f3bf 8f6f 	isb	sy
 800e5be:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e5c2:	e7fe      	b.n	800e5c2 <uxQueueMessagesWaitingFromISR+0x16>
 800e5c4:	0000      	movs	r0, r0
	...

0800e5c8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e5c8:	b1f0      	cbz	r0, 800e608 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e5ca:	4b21      	ldr	r3, [pc, #132]	; (800e650 <vQueueDelete+0x88>)
 800e5cc:	685a      	ldr	r2, [r3, #4]
 800e5ce:	4290      	cmp	r0, r2
 800e5d0:	d025      	beq.n	800e61e <vQueueDelete+0x56>
 800e5d2:	68da      	ldr	r2, [r3, #12]
 800e5d4:	4290      	cmp	r0, r2
 800e5d6:	d02c      	beq.n	800e632 <vQueueDelete+0x6a>
 800e5d8:	695a      	ldr	r2, [r3, #20]
 800e5da:	4290      	cmp	r0, r2
 800e5dc:	d02b      	beq.n	800e636 <vQueueDelete+0x6e>
 800e5de:	69da      	ldr	r2, [r3, #28]
 800e5e0:	4290      	cmp	r0, r2
 800e5e2:	d02a      	beq.n	800e63a <vQueueDelete+0x72>
 800e5e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e5e6:	4290      	cmp	r0, r2
 800e5e8:	d029      	beq.n	800e63e <vQueueDelete+0x76>
 800e5ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e5ec:	4290      	cmp	r0, r2
 800e5ee:	d01e      	beq.n	800e62e <vQueueDelete+0x66>
 800e5f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e5f2:	4290      	cmp	r0, r2
 800e5f4:	d025      	beq.n	800e642 <vQueueDelete+0x7a>
 800e5f6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e5f8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e5fa:	bf08      	it	eq
 800e5fc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e5fe:	d00f      	beq.n	800e620 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e600:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e604:	b14b      	cbz	r3, 800e61a <vQueueDelete+0x52>
}
 800e606:	4770      	bx	lr
 800e608:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e60c:	f383 8811 	msr	BASEPRI, r3
 800e610:	f3bf 8f6f 	isb	sy
 800e614:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e618:	e7fe      	b.n	800e618 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e61a:	f7fe be05 	b.w	800d228 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e61e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e620:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e648 <vQueueDelete+0x80>
 800e624:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e628:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e62c:	e7e8      	b.n	800e600 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e62e:	2205      	movs	r2, #5
 800e630:	e7f6      	b.n	800e620 <vQueueDelete+0x58>
 800e632:	2201      	movs	r2, #1
 800e634:	e7f4      	b.n	800e620 <vQueueDelete+0x58>
 800e636:	2202      	movs	r2, #2
 800e638:	e7f2      	b.n	800e620 <vQueueDelete+0x58>
 800e63a:	2203      	movs	r2, #3
 800e63c:	e7f0      	b.n	800e620 <vQueueDelete+0x58>
 800e63e:	2204      	movs	r2, #4
 800e640:	e7ee      	b.n	800e620 <vQueueDelete+0x58>
 800e642:	2206      	movs	r2, #6
 800e644:	e7ec      	b.n	800e620 <vQueueDelete+0x58>
 800e646:	bf00      	nop
	...
 800e650:	20012dd0 	.word	0x20012dd0

0800e654 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e654:	4b12      	ldr	r3, [pc, #72]	; (800e6a0 <vQueueAddToRegistry+0x4c>)
 800e656:	681a      	ldr	r2, [r3, #0]
 800e658:	b17a      	cbz	r2, 800e67a <vQueueAddToRegistry+0x26>
 800e65a:	689a      	ldr	r2, [r3, #8]
 800e65c:	b162      	cbz	r2, 800e678 <vQueueAddToRegistry+0x24>
 800e65e:	691a      	ldr	r2, [r3, #16]
 800e660:	b192      	cbz	r2, 800e688 <vQueueAddToRegistry+0x34>
 800e662:	699a      	ldr	r2, [r3, #24]
 800e664:	b192      	cbz	r2, 800e68c <vQueueAddToRegistry+0x38>
 800e666:	6a1a      	ldr	r2, [r3, #32]
 800e668:	b192      	cbz	r2, 800e690 <vQueueAddToRegistry+0x3c>
 800e66a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e66c:	b192      	cbz	r2, 800e694 <vQueueAddToRegistry+0x40>
 800e66e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e670:	b192      	cbz	r2, 800e698 <vQueueAddToRegistry+0x44>
 800e672:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e674:	b192      	cbz	r2, 800e69c <vQueueAddToRegistry+0x48>
	}
 800e676:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e678:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e67a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e67e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e682:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e686:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e688:	2202      	movs	r2, #2
 800e68a:	e7f6      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e68c:	2203      	movs	r2, #3
 800e68e:	e7f4      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e690:	2204      	movs	r2, #4
 800e692:	e7f2      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e694:	2205      	movs	r2, #5
 800e696:	e7f0      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e698:	2206      	movs	r2, #6
 800e69a:	e7ee      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e69c:	2207      	movs	r2, #7
 800e69e:	e7ec      	b.n	800e67a <vQueueAddToRegistry+0x26>
 800e6a0:	20012dd0 	.word	0x20012dd0

0800e6a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e6a4:	b570      	push	{r4, r5, r6, lr}
 800e6a6:	4605      	mov	r5, r0
 800e6a8:	460e      	mov	r6, r1
 800e6aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e6ac:	f7fe fed2 	bl	800d454 <vPortEnterCritical>
 800e6b0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e6b4:	2bff      	cmp	r3, #255	; 0xff
 800e6b6:	bf04      	itt	eq
 800e6b8:	2300      	moveq	r3, #0
 800e6ba:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e6be:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e6c2:	2bff      	cmp	r3, #255	; 0xff
 800e6c4:	bf04      	itt	eq
 800e6c6:	2300      	moveq	r3, #0
 800e6c8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e6cc:	f7fe fee4 	bl	800d498 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e6d0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e6d2:	2b00      	cmp	r3, #0
 800e6d4:	d043      	beq.n	800e75e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e6d6:	f7fe febd 	bl	800d454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6da:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e6de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6e0:	2c00      	cmp	r4, #0
 800e6e2:	dd14      	ble.n	800e70e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6e4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e6e8:	e003      	b.n	800e6f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e6ea:	1e63      	subs	r3, r4, #1
 800e6ec:	b2da      	uxtb	r2, r3
 800e6ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6f0:	b16a      	cbz	r2, 800e70e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6f2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6f6:	b153      	cbz	r3, 800e70e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6f8:	f000 fd2a 	bl	800f150 <xTaskRemoveFromEventList>
 800e6fc:	2800      	cmp	r0, #0
 800e6fe:	d0f4      	beq.n	800e6ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e700:	f000 fdc2 	bl	800f288 <vTaskMissedYield>
			--cTxLock;
 800e704:	1e63      	subs	r3, r4, #1
 800e706:	b2da      	uxtb	r2, r3
 800e708:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e70a:	2a00      	cmp	r2, #0
 800e70c:	d1f1      	bne.n	800e6f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e70e:	23ff      	movs	r3, #255	; 0xff
 800e710:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e714:	f7fe fec0 	bl	800d498 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e718:	f7fe fe9c 	bl	800d454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e71c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e720:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e722:	2c00      	cmp	r4, #0
 800e724:	dd14      	ble.n	800e750 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e726:	f105 0610 	add.w	r6, r5, #16
 800e72a:	e003      	b.n	800e734 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e72c:	1e63      	subs	r3, r4, #1
 800e72e:	b2da      	uxtb	r2, r3
 800e730:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e732:	b16a      	cbz	r2, 800e750 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e734:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e736:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e738:	b153      	cbz	r3, 800e750 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e73a:	f000 fd09 	bl	800f150 <xTaskRemoveFromEventList>
 800e73e:	2800      	cmp	r0, #0
 800e740:	d0f4      	beq.n	800e72c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e742:	f000 fda1 	bl	800f288 <vTaskMissedYield>
				--cRxLock;
 800e746:	1e63      	subs	r3, r4, #1
 800e748:	b2da      	uxtb	r2, r3
 800e74a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e74c:	2a00      	cmp	r2, #0
 800e74e:	d1f1      	bne.n	800e734 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e750:	23ff      	movs	r3, #255	; 0xff
 800e752:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e756:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e75a:	f7fe be9d 	b.w	800d498 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e75e:	4622      	mov	r2, r4
 800e760:	4631      	mov	r1, r6
 800e762:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e766:	f000 fca9 	bl	800f0bc <vTaskPlaceOnEventListRestricted>
 800e76a:	e7b4      	b.n	800e6d6 <vQueueWaitForMessageRestricted+0x32>

0800e76c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e76c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e770:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e772:	f7fe fe6f 	bl	800d454 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e776:	4a34      	ldr	r2, [pc, #208]	; (800e848 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e778:	4e34      	ldr	r6, [pc, #208]	; (800e84c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e77a:	6813      	ldr	r3, [r2, #0]
 800e77c:	3301      	adds	r3, #1
 800e77e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e780:	6833      	ldr	r3, [r6, #0]
 800e782:	2b00      	cmp	r3, #0
 800e784:	d032      	beq.n	800e7ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e786:	4c32      	ldr	r4, [pc, #200]	; (800e850 <prvAddNewTaskToReadyList+0xe4>)
 800e788:	6823      	ldr	r3, [r4, #0]
 800e78a:	b33b      	cbz	r3, 800e7dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e78c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e78e:	4f31      	ldr	r7, [pc, #196]	; (800e854 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e790:	4a31      	ldr	r2, [pc, #196]	; (800e858 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e792:	4932      	ldr	r1, [pc, #200]	; (800e85c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e794:	6813      	ldr	r3, [r2, #0]
 800e796:	3301      	adds	r3, #1
 800e798:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e79a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e79c:	680b      	ldr	r3, [r1, #0]
 800e79e:	4283      	cmp	r3, r0
 800e7a0:	bf38      	it	cc
 800e7a2:	6008      	strcc	r0, [r1, #0]
 800e7a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e7a8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e7ac:	1d29      	adds	r1, r5, #4
 800e7ae:	f7fe fdaf 	bl	800d310 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e7b2:	f7fe fe71 	bl	800d498 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e7b6:	6823      	ldr	r3, [r4, #0]
 800e7b8:	b173      	cbz	r3, 800e7d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e7ba:	6832      	ldr	r2, [r6, #0]
 800e7bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e7be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e7c0:	429a      	cmp	r2, r3
 800e7c2:	d209      	bcs.n	800e7d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e7c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e7c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e7cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7d0:	f3bf 8f4f 	dsb	sy
 800e7d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e7d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e7dc:	6833      	ldr	r3, [r6, #0]
 800e7de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e7e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7e2:	4f1c      	ldr	r7, [pc, #112]	; (800e854 <prvAddNewTaskToReadyList+0xe8>)
 800e7e4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e7e6:	bf98      	it	ls
 800e7e8:	6035      	strls	r5, [r6, #0]
 800e7ea:	e7d1      	b.n	800e790 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e7ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e7ee:	6813      	ldr	r3, [r2, #0]
 800e7f0:	2b01      	cmp	r3, #1
 800e7f2:	d003      	beq.n	800e7fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e7f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e7f6:	4f17      	ldr	r7, [pc, #92]	; (800e854 <prvAddNewTaskToReadyList+0xe8>)
 800e7f8:	4c15      	ldr	r4, [pc, #84]	; (800e850 <prvAddNewTaskToReadyList+0xe4>)
 800e7fa:	e7c9      	b.n	800e790 <prvAddNewTaskToReadyList+0x24>
 800e7fc:	4f15      	ldr	r7, [pc, #84]	; (800e854 <prvAddNewTaskToReadyList+0xe8>)
 800e7fe:	463c      	mov	r4, r7
 800e800:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e804:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e806:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e808:	f7fe fd72 	bl	800d2f0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e80c:	45a0      	cmp	r8, r4
 800e80e:	d1f9      	bne.n	800e804 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e810:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e874 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e814:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e878 <prvAddNewTaskToReadyList+0x10c>
 800e818:	4c0d      	ldr	r4, [pc, #52]	; (800e850 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e81a:	4648      	mov	r0, r9
 800e81c:	f7fe fd68 	bl	800d2f0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e820:	4640      	mov	r0, r8
 800e822:	f7fe fd65 	bl	800d2f0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e826:	480e      	ldr	r0, [pc, #56]	; (800e860 <prvAddNewTaskToReadyList+0xf4>)
 800e828:	f7fe fd62 	bl	800d2f0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e82c:	480d      	ldr	r0, [pc, #52]	; (800e864 <prvAddNewTaskToReadyList+0xf8>)
 800e82e:	f7fe fd5f 	bl	800d2f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e832:	480d      	ldr	r0, [pc, #52]	; (800e868 <prvAddNewTaskToReadyList+0xfc>)
 800e834:	f7fe fd5c 	bl	800d2f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e838:	4b0c      	ldr	r3, [pc, #48]	; (800e86c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e83a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e83c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e840:	4b0b      	ldr	r3, [pc, #44]	; (800e870 <prvAddNewTaskToReadyList+0x104>)
 800e842:	f8c3 8000 	str.w	r8, [r3]
}
 800e846:	e7a3      	b.n	800e790 <prvAddNewTaskToReadyList+0x24>
 800e848:	2001327c 	.word	0x2001327c
 800e84c:	20012e10 	.word	0x20012e10
 800e850:	200132d8 	.word	0x200132d8
 800e854:	20012e1c 	.word	0x20012e1c
 800e858:	20013288 	.word	0x20013288
 800e85c:	2001328c 	.word	0x2001328c
 800e860:	200132c4 	.word	0x200132c4
 800e864:	200132f0 	.word	0x200132f0
 800e868:	200132dc 	.word	0x200132dc
 800e86c:	20012e14 	.word	0x20012e14
 800e870:	20012e18 	.word	0x20012e18
 800e874:	20013290 	.word	0x20013290
 800e878:	200132a4 	.word	0x200132a4

0800e87c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e87c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e880:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e882:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e886:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e88a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e88c:	4606      	mov	r6, r0
 800e88e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e890:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e892:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e894:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e896:	f01c fc3c 	bl	802b112 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e89a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e89c:	f1a9 0904 	sub.w	r9, r9, #4
 800e8a0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e8a2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e8a6:	2d00      	cmp	r5, #0
 800e8a8:	d079      	beq.n	800e99e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8aa:	782b      	ldrb	r3, [r5, #0]
 800e8ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e8b0:	2b00      	cmp	r3, #0
 800e8b2:	d03b      	beq.n	800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8b4:	786b      	ldrb	r3, [r5, #1]
 800e8b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e8ba:	2b00      	cmp	r3, #0
 800e8bc:	d036      	beq.n	800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8be:	78ab      	ldrb	r3, [r5, #2]
 800e8c0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e8c4:	b393      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8c6:	78eb      	ldrb	r3, [r5, #3]
 800e8c8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e8cc:	b373      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8ce:	792b      	ldrb	r3, [r5, #4]
 800e8d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e8d4:	b353      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8d6:	796b      	ldrb	r3, [r5, #5]
 800e8d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e8dc:	b333      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8de:	79ab      	ldrb	r3, [r5, #6]
 800e8e0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e8e4:	b313      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8e6:	79eb      	ldrb	r3, [r5, #7]
 800e8e8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e8ec:	b1f3      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8ee:	7a2b      	ldrb	r3, [r5, #8]
 800e8f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e8f4:	b1d3      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8f6:	7a6b      	ldrb	r3, [r5, #9]
 800e8f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e8fc:	b1b3      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e8fe:	7aab      	ldrb	r3, [r5, #10]
 800e900:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e904:	b193      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e906:	7aeb      	ldrb	r3, [r5, #11]
 800e908:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e90c:	b173      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e90e:	7b2b      	ldrb	r3, [r5, #12]
 800e910:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e914:	b153      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e916:	7b6b      	ldrb	r3, [r5, #13]
 800e918:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e91c:	b133      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e91e:	7bab      	ldrb	r3, [r5, #14]
 800e920:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e924:	b113      	cbz	r3, 800e92c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e926:	7beb      	ldrb	r3, [r5, #15]
 800e928:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e92c:	2300      	movs	r3, #0
 800e92e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e932:	9d08      	ldr	r5, [sp, #32]
 800e934:	2d37      	cmp	r5, #55	; 0x37
 800e936:	bf28      	it	cs
 800e938:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e93a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e93e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e940:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e942:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e944:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e948:	f7fe fcde 	bl	800d308 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e94c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e950:	f104 0018 	add.w	r0, r4, #24
 800e954:	f7fe fcd8 	bl	800d308 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e958:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e95a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e95e:	4651      	mov	r1, sl
 800e960:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e962:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e964:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e966:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e96a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e96e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e972:	f01c fbce 	bl	802b112 <memset>
 800e976:	4b0b      	ldr	r3, [pc, #44]	; (800e9a4 <prvInitialiseNewTask.constprop.0+0x128>)
 800e978:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e97a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e97e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e980:	463a      	mov	r2, r7
 800e982:	4631      	mov	r1, r6
 800e984:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e986:	6625      	str	r5, [r4, #96]	; 0x60
 800e988:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e98a:	f7fe fd3b 	bl	800d404 <pxPortInitialiseStack>
 800e98e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e990:	f1b8 0f00 	cmp.w	r8, #0
 800e994:	d001      	beq.n	800e99a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e996:	f8c8 4000 	str.w	r4, [r8]
}
 800e99a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e99e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e9a2:	e7c6      	b.n	800e932 <prvInitialiseNewTask.constprop.0+0xb6>
 800e9a4:	20013da0 	.word	0x20013da0

0800e9a8 <prvIdleTask>:
{
 800e9a8:	b580      	push	{r7, lr}
 800e9aa:	4d23      	ldr	r5, [pc, #140]	; (800ea38 <prvIdleTask+0x90>)
 800e9ac:	4f23      	ldr	r7, [pc, #140]	; (800ea3c <prvIdleTask+0x94>)
 800e9ae:	4e24      	ldr	r6, [pc, #144]	; (800ea40 <prvIdleTask+0x98>)
 800e9b0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ea44 <prvIdleTask+0x9c>
				taskYIELD();
 800e9b4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e9b8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e9bc:	682b      	ldr	r3, [r5, #0]
 800e9be:	b35b      	cbz	r3, 800ea18 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e9c0:	f7fe fd48 	bl	800d454 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9c4:	68fb      	ldr	r3, [r7, #12]
 800e9c6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e9c8:	1d20      	adds	r0, r4, #4
 800e9ca:	f7fe fcc9 	bl	800d360 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e9ce:	6833      	ldr	r3, [r6, #0]
 800e9d0:	3b01      	subs	r3, #1
 800e9d2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e9d4:	682b      	ldr	r3, [r5, #0]
 800e9d6:	3b01      	subs	r3, #1
 800e9d8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e9da:	f7fe fd5d 	bl	800d498 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e9de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e9e2:	f01c fbdf 	bl	802b1a4 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e9e6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e9ea:	b163      	cbz	r3, 800ea06 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e9ec:	2b01      	cmp	r3, #1
 800e9ee:	d01e      	beq.n	800ea2e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e9f0:	2b02      	cmp	r3, #2
 800e9f2:	d0e3      	beq.n	800e9bc <prvIdleTask+0x14>
 800e9f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f8:	f383 8811 	msr	BASEPRI, r3
 800e9fc:	f3bf 8f6f 	isb	sy
 800ea00:	f3bf 8f4f 	dsb	sy
 800ea04:	e7fe      	b.n	800ea04 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800ea06:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ea08:	f7fe fc0e 	bl	800d228 <vPortFree>
				vPortFree( pxTCB );
 800ea0c:	4620      	mov	r0, r4
 800ea0e:	f7fe fc0b 	bl	800d228 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ea12:	682b      	ldr	r3, [r5, #0]
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d1d3      	bne.n	800e9c0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ea18:	f8d8 3000 	ldr.w	r3, [r8]
 800ea1c:	2b01      	cmp	r3, #1
 800ea1e:	d9cd      	bls.n	800e9bc <prvIdleTask+0x14>
				taskYIELD();
 800ea20:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800ea24:	f3bf 8f4f 	dsb	sy
 800ea28:	f3bf 8f6f 	isb	sy
 800ea2c:	e7c6      	b.n	800e9bc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800ea2e:	4620      	mov	r0, r4
 800ea30:	f7fe fbfa 	bl	800d228 <vPortFree>
 800ea34:	e7c2      	b.n	800e9bc <prvIdleTask+0x14>
 800ea36:	bf00      	nop
 800ea38:	20013280 	.word	0x20013280
 800ea3c:	200132f0 	.word	0x200132f0
 800ea40:	2001327c 	.word	0x2001327c
 800ea44:	20012e1c 	.word	0x20012e1c

0800ea48 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ea48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ea4c:	4b47      	ldr	r3, [pc, #284]	; (800eb6c <xTaskIncrementTick.part.0+0x124>)
 800ea4e:	681e      	ldr	r6, [r3, #0]
 800ea50:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800ea52:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800ea54:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ea56:	2e00      	cmp	r6, #0
 800ea58:	d040      	beq.n	800eadc <xTaskIncrementTick.part.0+0x94>
 800ea5a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800eb80 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ea5e:	f8db 3000 	ldr.w	r3, [fp]
 800ea62:	429e      	cmp	r6, r3
 800ea64:	d347      	bcc.n	800eaf6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea66:	4f42      	ldr	r7, [pc, #264]	; (800eb70 <xTaskIncrementTick.part.0+0x128>)
 800ea68:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800eb84 <xTaskIncrementTick.part.0+0x13c>
 800ea6c:	683b      	ldr	r3, [r7, #0]
 800ea6e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800eb88 <xTaskIncrementTick.part.0+0x140>
 800ea72:	681d      	ldr	r5, [r3, #0]
 800ea74:	2d00      	cmp	r5, #0
 800ea76:	d073      	beq.n	800eb60 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800ea78:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800eb8c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800ea7c:	2500      	movs	r5, #0
 800ea7e:	e022      	b.n	800eac6 <xTaskIncrementTick.part.0+0x7e>
 800ea80:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea82:	f7fe fc6d 	bl	800d360 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ea86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ea88:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea8a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ea8e:	b113      	cbz	r3, 800ea96 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea90:	f7fe fc66 	bl	800d360 <uxListRemove>
 800ea94:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ea96:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea98:	f8d8 2000 	ldr.w	r2, [r8]
 800ea9c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800eaa0:	4293      	cmp	r3, r2
 800eaa2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800eaa6:	bf88      	it	hi
 800eaa8:	f8c8 3000 	strhi.w	r3, [r8]
 800eaac:	f7fe fc30 	bl	800d310 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eab0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eab4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eab6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800eab8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eaba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800eabc:	4291      	cmp	r1, r2
 800eabe:	bf28      	it	cs
 800eac0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eac2:	2b00      	cmp	r3, #0
 800eac4:	d04c      	beq.n	800eb60 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eac6:	683b      	ldr	r3, [r7, #0]
 800eac8:	68db      	ldr	r3, [r3, #12]
 800eaca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800eacc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eace:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800ead0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ead2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800ead4:	d2d4      	bcs.n	800ea80 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800ead6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800eada:	e011      	b.n	800eb00 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800eadc:	4b24      	ldr	r3, [pc, #144]	; (800eb70 <xTaskIncrementTick.part.0+0x128>)
 800eade:	681a      	ldr	r2, [r3, #0]
 800eae0:	6812      	ldr	r2, [r2, #0]
 800eae2:	b30a      	cbz	r2, 800eb28 <xTaskIncrementTick.part.0+0xe0>
 800eae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eae8:	f383 8811 	msr	BASEPRI, r3
 800eaec:	f3bf 8f6f 	isb	sy
 800eaf0:	f3bf 8f4f 	dsb	sy
 800eaf4:	e7fe      	b.n	800eaf4 <xTaskIncrementTick.part.0+0xac>
 800eaf6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800eb84 <xTaskIncrementTick.part.0+0x13c>
 800eafa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800eb88 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800eafe:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800eb00:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800eb04:	491b      	ldr	r1, [pc, #108]	; (800eb74 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800eb06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb08:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800eb0c:	009b      	lsls	r3, r3, #2
 800eb0e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800eb12:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800eb14:	2a02      	cmp	r2, #2
 800eb16:	bf28      	it	cs
 800eb18:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800eb1a:	2b00      	cmp	r3, #0
}
 800eb1c:	bf0c      	ite	eq
 800eb1e:	4628      	moveq	r0, r5
 800eb20:	2001      	movne	r0, #1
 800eb22:	b003      	add	sp, #12
 800eb24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800eb28:	4a13      	ldr	r2, [pc, #76]	; (800eb78 <xTaskIncrementTick.part.0+0x130>)
 800eb2a:	6818      	ldr	r0, [r3, #0]
 800eb2c:	6811      	ldr	r1, [r2, #0]
 800eb2e:	6019      	str	r1, [r3, #0]
 800eb30:	4912      	ldr	r1, [pc, #72]	; (800eb7c <xTaskIncrementTick.part.0+0x134>)
 800eb32:	6010      	str	r0, [r2, #0]
 800eb34:	680a      	ldr	r2, [r1, #0]
 800eb36:	3201      	adds	r2, #1
 800eb38:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb3a:	681a      	ldr	r2, [r3, #0]
 800eb3c:	6812      	ldr	r2, [r2, #0]
 800eb3e:	b932      	cbnz	r2, 800eb4e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800eb40:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800eb80 <xTaskIncrementTick.part.0+0x138>
 800eb44:	f04f 33ff 	mov.w	r3, #4294967295
 800eb48:	f8cb 3000 	str.w	r3, [fp]
 800eb4c:	e787      	b.n	800ea5e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb4e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb50:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800eb80 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb54:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb56:	68db      	ldr	r3, [r3, #12]
 800eb58:	685b      	ldr	r3, [r3, #4]
 800eb5a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800eb5e:	e77e      	b.n	800ea5e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb60:	f04f 33ff 	mov.w	r3, #4294967295
 800eb64:	f8cb 3000 	str.w	r3, [fp]
					break;
 800eb68:	e7ca      	b.n	800eb00 <xTaskIncrementTick.part.0+0xb8>
 800eb6a:	bf00      	nop
 800eb6c:	20013304 	.word	0x20013304
 800eb70:	20012e14 	.word	0x20012e14
 800eb74:	20013308 	.word	0x20013308
 800eb78:	20012e18 	.word	0x20012e18
 800eb7c:	200132bc 	.word	0x200132bc
 800eb80:	200132b8 	.word	0x200132b8
 800eb84:	20012e1c 	.word	0x20012e1c
 800eb88:	20012e10 	.word	0x20012e10
 800eb8c:	2001328c 	.word	0x2001328c

0800eb90 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800eb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800eb94:	4d41      	ldr	r5, [pc, #260]	; (800ec9c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800eb96:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800eb98:	f7fe fc5c 	bl	800d454 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800eb9c:	682b      	ldr	r3, [r5, #0]
 800eb9e:	3b01      	subs	r3, #1
 800eba0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eba2:	682b      	ldr	r3, [r5, #0]
 800eba4:	2b00      	cmp	r3, #0
 800eba6:	d161      	bne.n	800ec6c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800eba8:	4b3d      	ldr	r3, [pc, #244]	; (800eca0 <xTaskResumeAll.part.0+0x110>)
 800ebaa:	681b      	ldr	r3, [r3, #0]
 800ebac:	2b00      	cmp	r3, #0
 800ebae:	d05d      	beq.n	800ec6c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ebb0:	4e3c      	ldr	r6, [pc, #240]	; (800eca4 <xTaskResumeAll.part.0+0x114>)
 800ebb2:	6833      	ldr	r3, [r6, #0]
 800ebb4:	2b00      	cmp	r3, #0
 800ebb6:	d06e      	beq.n	800ec96 <xTaskResumeAll.part.0+0x106>
 800ebb8:	4f3b      	ldr	r7, [pc, #236]	; (800eca8 <xTaskResumeAll.part.0+0x118>)
 800ebba:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ecb8 <xTaskResumeAll.part.0+0x128>
 800ebbe:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ecbc <xTaskResumeAll.part.0+0x12c>
 800ebc2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ecc0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ebc6:	68f3      	ldr	r3, [r6, #12]
 800ebc8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ebca:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ebce:	f104 0018 	add.w	r0, r4, #24
 800ebd2:	f7fe fbc5 	bl	800d360 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ebd6:	4658      	mov	r0, fp
 800ebd8:	f7fe fbc2 	bl	800d360 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ebdc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ebde:	683a      	ldr	r2, [r7, #0]
 800ebe0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ebe4:	4293      	cmp	r3, r2
 800ebe6:	4659      	mov	r1, fp
 800ebe8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ebec:	bf88      	it	hi
 800ebee:	603b      	strhi	r3, [r7, #0]
 800ebf0:	f7fe fb8e 	bl	800d310 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ebf4:	f8d8 3000 	ldr.w	r3, [r8]
 800ebf8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ebfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebfc:	429a      	cmp	r2, r3
 800ebfe:	d33d      	bcc.n	800ec7c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ec00:	2301      	movs	r3, #1
 800ec02:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ec06:	6833      	ldr	r3, [r6, #0]
 800ec08:	2b00      	cmp	r3, #0
 800ec0a:	d1dc      	bne.n	800ebc6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec0c:	4b27      	ldr	r3, [pc, #156]	; (800ecac <xTaskResumeAll.part.0+0x11c>)
 800ec0e:	681a      	ldr	r2, [r3, #0]
 800ec10:	6812      	ldr	r2, [r2, #0]
 800ec12:	2a00      	cmp	r2, #0
 800ec14:	d03a      	beq.n	800ec8c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec16:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ec18:	4b25      	ldr	r3, [pc, #148]	; (800ecb0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec1a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ec1c:	68d2      	ldr	r2, [r2, #12]
 800ec1e:	6852      	ldr	r2, [r2, #4]
 800ec20:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ec22:	4e24      	ldr	r6, [pc, #144]	; (800ecb4 <xTaskResumeAll.part.0+0x124>)
 800ec24:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ec26:	b194      	cbz	r4, 800ec4e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ec28:	2701      	movs	r7, #1
 800ec2a:	e006      	b.n	800ec3a <xTaskResumeAll.part.0+0xaa>
 800ec2c:	f7ff ff0c 	bl	800ea48 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ec30:	b108      	cbz	r0, 800ec36 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ec32:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec36:	3c01      	subs	r4, #1
 800ec38:	d008      	beq.n	800ec4c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec3a:	682b      	ldr	r3, [r5, #0]
 800ec3c:	2b00      	cmp	r3, #0
 800ec3e:	d0f5      	beq.n	800ec2c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800ec40:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec42:	3c01      	subs	r4, #1
		++xPendedTicks;
 800ec44:	f103 0301 	add.w	r3, r3, #1
 800ec48:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ec4a:	d1f6      	bne.n	800ec3a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800ec4c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800ec4e:	f8da 3000 	ldr.w	r3, [sl]
 800ec52:	b15b      	cbz	r3, 800ec6c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ec54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec60:	f3bf 8f4f 	dsb	sy
 800ec64:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ec68:	2001      	movs	r0, #1
 800ec6a:	e000      	b.n	800ec6e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ec6c:	2000      	movs	r0, #0
 800ec6e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ec70:	f7fe fc12 	bl	800d498 <vPortExitCritical>
}
 800ec74:	9801      	ldr	r0, [sp, #4]
 800ec76:	b003      	add	sp, #12
 800ec78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ec7c:	6833      	ldr	r3, [r6, #0]
 800ec7e:	2b00      	cmp	r3, #0
 800ec80:	d1a1      	bne.n	800ebc6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec82:	4b0a      	ldr	r3, [pc, #40]	; (800ecac <xTaskResumeAll.part.0+0x11c>)
 800ec84:	681a      	ldr	r2, [r3, #0]
 800ec86:	6812      	ldr	r2, [r2, #0]
 800ec88:	2a00      	cmp	r2, #0
 800ec8a:	d1c4      	bne.n	800ec16 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec8c:	4b08      	ldr	r3, [pc, #32]	; (800ecb0 <xTaskResumeAll.part.0+0x120>)
 800ec8e:	f04f 32ff 	mov.w	r2, #4294967295
 800ec92:	601a      	str	r2, [r3, #0]
 800ec94:	e7c5      	b.n	800ec22 <xTaskResumeAll.part.0+0x92>
 800ec96:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ecc0 <xTaskResumeAll.part.0+0x130>
 800ec9a:	e7c2      	b.n	800ec22 <xTaskResumeAll.part.0+0x92>
 800ec9c:	20013284 	.word	0x20013284
 800eca0:	2001327c 	.word	0x2001327c
 800eca4:	200132c4 	.word	0x200132c4
 800eca8:	2001328c 	.word	0x2001328c
 800ecac:	20012e14 	.word	0x20012e14
 800ecb0:	200132b8 	.word	0x200132b8
 800ecb4:	200132c0 	.word	0x200132c0
 800ecb8:	20012e1c 	.word	0x20012e1c
 800ecbc:	20012e10 	.word	0x20012e10
 800ecc0:	20013308 	.word	0x20013308

0800ecc4 <xTaskCreateStatic>:
	{
 800ecc4:	b530      	push	{r4, r5, lr}
 800ecc6:	b087      	sub	sp, #28
 800ecc8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ecca:	b1c4      	cbz	r4, 800ecfe <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800eccc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ecce:	b16d      	cbz	r5, 800ecec <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ecd0:	25ac      	movs	r5, #172	; 0xac
 800ecd2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ecd4:	9d05      	ldr	r5, [sp, #20]
 800ecd6:	2dac      	cmp	r5, #172	; 0xac
 800ecd8:	d01a      	beq.n	800ed10 <xTaskCreateStatic+0x4c>
 800ecda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecde:	f383 8811 	msr	BASEPRI, r3
 800ece2:	f3bf 8f6f 	isb	sy
 800ece6:	f3bf 8f4f 	dsb	sy
 800ecea:	e7fe      	b.n	800ecea <xTaskCreateStatic+0x26>
 800ecec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecf0:	f383 8811 	msr	BASEPRI, r3
 800ecf4:	f3bf 8f6f 	isb	sy
 800ecf8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ecfc:	e7fe      	b.n	800ecfc <xTaskCreateStatic+0x38>
 800ecfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed02:	f383 8811 	msr	BASEPRI, r3
 800ed06:	f3bf 8f6f 	isb	sy
 800ed0a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ed0e:	e7fe      	b.n	800ed0e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ed10:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ed12:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ed14:	2402      	movs	r4, #2
 800ed16:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed1a:	ac04      	add	r4, sp, #16
 800ed1c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ed20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ed22:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ed24:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed26:	f7ff fda9 	bl	800e87c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ed2a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ed2c:	f7ff fd1e 	bl	800e76c <prvAddNewTaskToReadyList>
	}
 800ed30:	9804      	ldr	r0, [sp, #16]
 800ed32:	b007      	add	sp, #28
 800ed34:	bd30      	pop	{r4, r5, pc}
 800ed36:	bf00      	nop

0800ed38 <xTaskCreate>:
	{
 800ed38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed3c:	4607      	mov	r7, r0
 800ed3e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ed40:	0090      	lsls	r0, r2, #2
	{
 800ed42:	4615      	mov	r5, r2
 800ed44:	4688      	mov	r8, r1
 800ed46:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ed48:	f7fe f9b2 	bl	800d0b0 <pvPortMalloc>
			if( pxStack != NULL )
 800ed4c:	b1d8      	cbz	r0, 800ed86 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ed4e:	4604      	mov	r4, r0
 800ed50:	20ac      	movs	r0, #172	; 0xac
 800ed52:	f7fe f9ad 	bl	800d0b0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ed56:	4606      	mov	r6, r0
 800ed58:	b1d0      	cbz	r0, 800ed90 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ed5a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ed5c:	2400      	movs	r4, #0
 800ed5e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ed62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ed64:	9401      	str	r4, [sp, #4]
 800ed66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ed68:	9602      	str	r6, [sp, #8]
 800ed6a:	464b      	mov	r3, r9
 800ed6c:	462a      	mov	r2, r5
 800ed6e:	4641      	mov	r1, r8
 800ed70:	4638      	mov	r0, r7
 800ed72:	9400      	str	r4, [sp, #0]
 800ed74:	f7ff fd82 	bl	800e87c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ed78:	4630      	mov	r0, r6
 800ed7a:	f7ff fcf7 	bl	800e76c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ed7e:	2001      	movs	r0, #1
	}
 800ed80:	b005      	add	sp, #20
 800ed82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ed86:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ed8a:	b005      	add	sp, #20
 800ed8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ed90:	4620      	mov	r0, r4
 800ed92:	f7fe fa49 	bl	800d228 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ed96:	f04f 30ff 	mov.w	r0, #4294967295
 800ed9a:	e7f1      	b.n	800ed80 <xTaskCreate+0x48>

0800ed9c <vTaskDelay>:
	{
 800ed9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ed9e:	b950      	cbnz	r0, 800edb6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800eda0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eda4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eda8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800edac:	f3bf 8f4f 	dsb	sy
 800edb0:	f3bf 8f6f 	isb	sy
	}
 800edb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800edb6:	4d1e      	ldr	r5, [pc, #120]	; (800ee30 <vTaskDelay+0x94>)
 800edb8:	682b      	ldr	r3, [r5, #0]
 800edba:	b143      	cbz	r3, 800edce <vTaskDelay+0x32>
 800edbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edc0:	f383 8811 	msr	BASEPRI, r3
 800edc4:	f3bf 8f6f 	isb	sy
 800edc8:	f3bf 8f4f 	dsb	sy
 800edcc:	e7fe      	b.n	800edcc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800edce:	682b      	ldr	r3, [r5, #0]
 800edd0:	3301      	adds	r3, #1
 800edd2:	4604      	mov	r4, r0
 800edd4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800edd6:	4b17      	ldr	r3, [pc, #92]	; (800ee34 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800edd8:	4e17      	ldr	r6, [pc, #92]	; (800ee38 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800edda:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eddc:	6830      	ldr	r0, [r6, #0]
 800edde:	3004      	adds	r0, #4
 800ede0:	f7fe fabe 	bl	800d360 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ede4:	6833      	ldr	r3, [r6, #0]
 800ede6:	19e4      	adds	r4, r4, r7
 800ede8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800edea:	d310      	bcc.n	800ee0e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edec:	4b13      	ldr	r3, [pc, #76]	; (800ee3c <vTaskDelay+0xa0>)
 800edee:	6818      	ldr	r0, [r3, #0]
 800edf0:	6831      	ldr	r1, [r6, #0]
 800edf2:	3104      	adds	r1, #4
 800edf4:	f7fe fa9c 	bl	800d330 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800edf8:	682b      	ldr	r3, [r5, #0]
 800edfa:	b9a3      	cbnz	r3, 800ee26 <vTaskDelay+0x8a>
 800edfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee00:	f383 8811 	msr	BASEPRI, r3
 800ee04:	f3bf 8f6f 	isb	sy
 800ee08:	f3bf 8f4f 	dsb	sy
 800ee0c:	e7fe      	b.n	800ee0c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee0e:	4b0c      	ldr	r3, [pc, #48]	; (800ee40 <vTaskDelay+0xa4>)
 800ee10:	6818      	ldr	r0, [r3, #0]
 800ee12:	6831      	ldr	r1, [r6, #0]
 800ee14:	3104      	adds	r1, #4
 800ee16:	f7fe fa8b 	bl	800d330 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800ee1a:	4b0a      	ldr	r3, [pc, #40]	; (800ee44 <vTaskDelay+0xa8>)
 800ee1c:	681a      	ldr	r2, [r3, #0]
 800ee1e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ee20:	bf38      	it	cc
 800ee22:	601c      	strcc	r4, [r3, #0]
 800ee24:	e7e8      	b.n	800edf8 <vTaskDelay+0x5c>
 800ee26:	f7ff feb3 	bl	800eb90 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ee2a:	2800      	cmp	r0, #0
 800ee2c:	d0b8      	beq.n	800eda0 <vTaskDelay+0x4>
	}
 800ee2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee30:	20013284 	.word	0x20013284
 800ee34:	20013304 	.word	0x20013304
 800ee38:	20012e10 	.word	0x20012e10
 800ee3c:	20012e18 	.word	0x20012e18
 800ee40:	20012e14 	.word	0x20012e14
 800ee44:	200132b8 	.word	0x200132b8

0800ee48 <vTaskStartScheduler>:
{
 800ee48:	b530      	push	{r4, r5, lr}
 800ee4a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee4c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ee4e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee50:	a906      	add	r1, sp, #24
 800ee52:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ee54:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ee58:	f7fe f90c 	bl	800d074 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ee5c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ee60:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ee62:	b1bb      	cbz	r3, 800ee94 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ee64:	b16d      	cbz	r5, 800ee82 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ee66:	21ac      	movs	r1, #172	; 0xac
 800ee68:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ee6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ee6c:	29ac      	cmp	r1, #172	; 0xac
 800ee6e:	d01a      	beq.n	800eea6 <vTaskStartScheduler+0x5e>
 800ee70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee74:	f383 8811 	msr	BASEPRI, r3
 800ee78:	f3bf 8f6f 	isb	sy
 800ee7c:	f3bf 8f4f 	dsb	sy
 800ee80:	e7fe      	b.n	800ee80 <vTaskStartScheduler+0x38>
 800ee82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee86:	f383 8811 	msr	BASEPRI, r3
 800ee8a:	f3bf 8f6f 	isb	sy
 800ee8e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ee92:	e7fe      	b.n	800ee92 <vTaskStartScheduler+0x4a>
 800ee94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee98:	f383 8811 	msr	BASEPRI, r3
 800ee9c:	f3bf 8f6f 	isb	sy
 800eea0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800eea4:	e7fe      	b.n	800eea4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eea6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eea8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eeaa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eeac:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eeb0:	4623      	mov	r3, r4
 800eeb2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800eeb6:	491b      	ldr	r1, [pc, #108]	; (800ef24 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800eeb8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eeba:	9400      	str	r4, [sp, #0]
 800eebc:	481a      	ldr	r0, [pc, #104]	; (800ef28 <vTaskStartScheduler+0xe0>)
 800eebe:	f7ff fcdd 	bl	800e87c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eec2:	4628      	mov	r0, r5
 800eec4:	f7ff fc52 	bl	800e76c <prvAddNewTaskToReadyList>
		return xReturn;
 800eec8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800eeca:	b1eb      	cbz	r3, 800ef08 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800eecc:	f000 fc6e 	bl	800f7ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800eed0:	2801      	cmp	r0, #1
 800eed2:	d11b      	bne.n	800ef0c <vTaskStartScheduler+0xc4>
 800eed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eed8:	f383 8811 	msr	BASEPRI, r3
 800eedc:	f3bf 8f6f 	isb	sy
 800eee0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eee4:	4b11      	ldr	r3, [pc, #68]	; (800ef2c <vTaskStartScheduler+0xe4>)
 800eee6:	4a12      	ldr	r2, [pc, #72]	; (800ef30 <vTaskStartScheduler+0xe8>)
 800eee8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800eeea:	4912      	ldr	r1, [pc, #72]	; (800ef34 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eeec:	3358      	adds	r3, #88	; 0x58
 800eeee:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800eef0:	4a11      	ldr	r2, [pc, #68]	; (800ef38 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800eef2:	4b12      	ldr	r3, [pc, #72]	; (800ef3c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800eef4:	f04f 35ff 	mov.w	r5, #4294967295
 800eef8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800eefa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800eefc:	601c      	str	r4, [r3, #0]
}
 800eefe:	b00b      	add	sp, #44	; 0x2c
 800ef00:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ef04:	f7fe bb38 	b.w	800d578 <xPortStartScheduler>
}
 800ef08:	b00b      	add	sp, #44	; 0x2c
 800ef0a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ef0c:	3001      	adds	r0, #1
 800ef0e:	d1fb      	bne.n	800ef08 <vTaskStartScheduler+0xc0>
 800ef10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef14:	f383 8811 	msr	BASEPRI, r3
 800ef18:	f3bf 8f6f 	isb	sy
 800ef1c:	f3bf 8f4f 	dsb	sy
 800ef20:	e7fe      	b.n	800ef20 <vTaskStartScheduler+0xd8>
 800ef22:	bf00      	nop
 800ef24:	0802ef28 	.word	0x0802ef28
 800ef28:	0800e9a9 	.word	0x0800e9a9
 800ef2c:	20012e10 	.word	0x20012e10
 800ef30:	20000160 	.word	0x20000160
 800ef34:	200132b8 	.word	0x200132b8
 800ef38:	200132d8 	.word	0x200132d8
 800ef3c:	20013304 	.word	0x20013304

0800ef40 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ef40:	4a02      	ldr	r2, [pc, #8]	; (800ef4c <vTaskSuspendAll+0xc>)
 800ef42:	6813      	ldr	r3, [r2, #0]
 800ef44:	3301      	adds	r3, #1
 800ef46:	6013      	str	r3, [r2, #0]
}
 800ef48:	4770      	bx	lr
 800ef4a:	bf00      	nop
 800ef4c:	20013284 	.word	0x20013284

0800ef50 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ef50:	4b06      	ldr	r3, [pc, #24]	; (800ef6c <xTaskResumeAll+0x1c>)
 800ef52:	681b      	ldr	r3, [r3, #0]
 800ef54:	b943      	cbnz	r3, 800ef68 <xTaskResumeAll+0x18>
 800ef56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef5a:	f383 8811 	msr	BASEPRI, r3
 800ef5e:	f3bf 8f6f 	isb	sy
 800ef62:	f3bf 8f4f 	dsb	sy
 800ef66:	e7fe      	b.n	800ef66 <xTaskResumeAll+0x16>
 800ef68:	f7ff be12 	b.w	800eb90 <xTaskResumeAll.part.0>
 800ef6c:	20013284 	.word	0x20013284

0800ef70 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ef70:	4b01      	ldr	r3, [pc, #4]	; (800ef78 <xTaskGetTickCount+0x8>)
 800ef72:	6818      	ldr	r0, [r3, #0]
}
 800ef74:	4770      	bx	lr
 800ef76:	bf00      	nop
 800ef78:	20013304 	.word	0x20013304

0800ef7c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ef7c:	4b05      	ldr	r3, [pc, #20]	; (800ef94 <xTaskIncrementTick+0x18>)
 800ef7e:	681b      	ldr	r3, [r3, #0]
 800ef80:	b90b      	cbnz	r3, 800ef86 <xTaskIncrementTick+0xa>
 800ef82:	f7ff bd61 	b.w	800ea48 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ef86:	4a04      	ldr	r2, [pc, #16]	; (800ef98 <xTaskIncrementTick+0x1c>)
 800ef88:	6813      	ldr	r3, [r2, #0]
 800ef8a:	3301      	adds	r3, #1
}
 800ef8c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ef8e:	6013      	str	r3, [r2, #0]
}
 800ef90:	4770      	bx	lr
 800ef92:	bf00      	nop
 800ef94:	20013284 	.word	0x20013284
 800ef98:	200132c0 	.word	0x200132c0

0800ef9c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ef9c:	4b1f      	ldr	r3, [pc, #124]	; (800f01c <vTaskSwitchContext+0x80>)
 800ef9e:	681b      	ldr	r3, [r3, #0]
 800efa0:	b11b      	cbz	r3, 800efaa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800efa2:	4b1f      	ldr	r3, [pc, #124]	; (800f020 <vTaskSwitchContext+0x84>)
 800efa4:	2201      	movs	r2, #1
 800efa6:	601a      	str	r2, [r3, #0]
 800efa8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800efaa:	4a1d      	ldr	r2, [pc, #116]	; (800f020 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efac:	491d      	ldr	r1, [pc, #116]	; (800f024 <vTaskSwitchContext+0x88>)
{
 800efae:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efb0:	4c1d      	ldr	r4, [pc, #116]	; (800f028 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800efb2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efb4:	6823      	ldr	r3, [r4, #0]
 800efb6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800efba:	0092      	lsls	r2, r2, #2
 800efbc:	0098      	lsls	r0, r3, #2
 800efbe:	588a      	ldr	r2, [r1, r2]
 800efc0:	b942      	cbnz	r2, 800efd4 <vTaskSwitchContext+0x38>
 800efc2:	b313      	cbz	r3, 800f00a <vTaskSwitchContext+0x6e>
 800efc4:	3b01      	subs	r3, #1
 800efc6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800efca:	0098      	lsls	r0, r3, #2
 800efcc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800efd0:	2a00      	cmp	r2, #0
 800efd2:	d0f6      	beq.n	800efc2 <vTaskSwitchContext+0x26>
 800efd4:	4418      	add	r0, r3
 800efd6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800efda:	4662      	mov	r2, ip
 800efdc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800efe0:	6849      	ldr	r1, [r1, #4]
 800efe2:	f8cc 1004 	str.w	r1, [ip, #4]
 800efe6:	3208      	adds	r2, #8
 800efe8:	4291      	cmp	r1, r2
 800efea:	bf08      	it	eq
 800efec:	6849      	ldreq	r1, [r1, #4]
 800efee:	4a0f      	ldr	r2, [pc, #60]	; (800f02c <vTaskSwitchContext+0x90>)
 800eff0:	bf08      	it	eq
 800eff2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800eff6:	68c9      	ldr	r1, [r1, #12]
 800eff8:	6011      	str	r1, [r2, #0]
 800effa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800effc:	6813      	ldr	r3, [r2, #0]
 800effe:	4a0c      	ldr	r2, [pc, #48]	; (800f030 <vTaskSwitchContext+0x94>)
}
 800f000:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f004:	3358      	adds	r3, #88	; 0x58
 800f006:	6013      	str	r3, [r2, #0]
}
 800f008:	4770      	bx	lr
 800f00a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f00e:	f383 8811 	msr	BASEPRI, r3
 800f012:	f3bf 8f6f 	isb	sy
 800f016:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f01a:	e7fe      	b.n	800f01a <vTaskSwitchContext+0x7e>
 800f01c:	20013284 	.word	0x20013284
 800f020:	20013308 	.word	0x20013308
 800f024:	20012e1c 	.word	0x20012e1c
 800f028:	2001328c 	.word	0x2001328c
 800f02c:	20012e10 	.word	0x20012e10
 800f030:	20000160 	.word	0x20000160

0800f034 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f034:	b1d0      	cbz	r0, 800f06c <vTaskPlaceOnEventList+0x38>
{
 800f036:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f038:	4d1a      	ldr	r5, [pc, #104]	; (800f0a4 <vTaskPlaceOnEventList+0x70>)
 800f03a:	460c      	mov	r4, r1
 800f03c:	6829      	ldr	r1, [r5, #0]
 800f03e:	3118      	adds	r1, #24
 800f040:	f7fe f976 	bl	800d330 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f044:	4b18      	ldr	r3, [pc, #96]	; (800f0a8 <vTaskPlaceOnEventList+0x74>)
 800f046:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f048:	6828      	ldr	r0, [r5, #0]
 800f04a:	3004      	adds	r0, #4
 800f04c:	f7fe f988 	bl	800d360 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f050:	1c63      	adds	r3, r4, #1
 800f052:	d014      	beq.n	800f07e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f054:	682b      	ldr	r3, [r5, #0]
 800f056:	19a4      	adds	r4, r4, r6
 800f058:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f05a:	d317      	bcc.n	800f08c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f05c:	4b13      	ldr	r3, [pc, #76]	; (800f0ac <vTaskPlaceOnEventList+0x78>)
 800f05e:	6818      	ldr	r0, [r3, #0]
 800f060:	6829      	ldr	r1, [r5, #0]
}
 800f062:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f066:	3104      	adds	r1, #4
 800f068:	f7fe b962 	b.w	800d330 <vListInsert>
 800f06c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f070:	f383 8811 	msr	BASEPRI, r3
 800f074:	f3bf 8f6f 	isb	sy
 800f078:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f07c:	e7fe      	b.n	800f07c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f07e:	6829      	ldr	r1, [r5, #0]
 800f080:	480b      	ldr	r0, [pc, #44]	; (800f0b0 <vTaskPlaceOnEventList+0x7c>)
}
 800f082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f086:	3104      	adds	r1, #4
 800f088:	f7fe b942 	b.w	800d310 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f08c:	4b09      	ldr	r3, [pc, #36]	; (800f0b4 <vTaskPlaceOnEventList+0x80>)
 800f08e:	6818      	ldr	r0, [r3, #0]
 800f090:	6829      	ldr	r1, [r5, #0]
 800f092:	3104      	adds	r1, #4
 800f094:	f7fe f94c 	bl	800d330 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f098:	4b07      	ldr	r3, [pc, #28]	; (800f0b8 <vTaskPlaceOnEventList+0x84>)
 800f09a:	681a      	ldr	r2, [r3, #0]
 800f09c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f09e:	bf38      	it	cc
 800f0a0:	601c      	strcc	r4, [r3, #0]
}
 800f0a2:	bd70      	pop	{r4, r5, r6, pc}
 800f0a4:	20012e10 	.word	0x20012e10
 800f0a8:	20013304 	.word	0x20013304
 800f0ac:	20012e18 	.word	0x20012e18
 800f0b0:	200132dc 	.word	0x200132dc
 800f0b4:	20012e14 	.word	0x20012e14
 800f0b8:	200132b8 	.word	0x200132b8

0800f0bc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f0bc:	b330      	cbz	r0, 800f10c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f0be:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f0c0:	4e1d      	ldr	r6, [pc, #116]	; (800f138 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f0c2:	460c      	mov	r4, r1
 800f0c4:	6831      	ldr	r1, [r6, #0]
 800f0c6:	4615      	mov	r5, r2
 800f0c8:	3118      	adds	r1, #24
 800f0ca:	f7fe f921 	bl	800d310 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f0ce:	4b1b      	ldr	r3, [pc, #108]	; (800f13c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f0d0:	b985      	cbnz	r5, 800f0f4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f0d2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0d4:	6830      	ldr	r0, [r6, #0]
 800f0d6:	3004      	adds	r0, #4
 800f0d8:	f7fe f942 	bl	800d360 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f0dc:	6833      	ldr	r3, [r6, #0]
 800f0de:	1964      	adds	r4, r4, r5
 800f0e0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f0e2:	d31c      	bcc.n	800f11e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0e4:	4b16      	ldr	r3, [pc, #88]	; (800f140 <vTaskPlaceOnEventListRestricted+0x84>)
 800f0e6:	6818      	ldr	r0, [r3, #0]
 800f0e8:	6831      	ldr	r1, [r6, #0]
	}
 800f0ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0ee:	3104      	adds	r1, #4
 800f0f0:	f7fe b91e 	b.w	800d330 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f0f4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0f6:	6830      	ldr	r0, [r6, #0]
 800f0f8:	3004      	adds	r0, #4
 800f0fa:	f7fe f931 	bl	800d360 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0fe:	6831      	ldr	r1, [r6, #0]
 800f100:	4810      	ldr	r0, [pc, #64]	; (800f144 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f106:	3104      	adds	r1, #4
 800f108:	f7fe b902 	b.w	800d310 <vListInsertEnd>
 800f10c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f110:	f383 8811 	msr	BASEPRI, r3
 800f114:	f3bf 8f6f 	isb	sy
 800f118:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f11c:	e7fe      	b.n	800f11c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f11e:	4b0a      	ldr	r3, [pc, #40]	; (800f148 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f120:	6818      	ldr	r0, [r3, #0]
 800f122:	6831      	ldr	r1, [r6, #0]
 800f124:	3104      	adds	r1, #4
 800f126:	f7fe f903 	bl	800d330 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f12a:	4b08      	ldr	r3, [pc, #32]	; (800f14c <vTaskPlaceOnEventListRestricted+0x90>)
 800f12c:	681a      	ldr	r2, [r3, #0]
 800f12e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f130:	bf38      	it	cc
 800f132:	601c      	strcc	r4, [r3, #0]
	}
 800f134:	bd70      	pop	{r4, r5, r6, pc}
 800f136:	bf00      	nop
 800f138:	20012e10 	.word	0x20012e10
 800f13c:	20013304 	.word	0x20013304
 800f140:	20012e18 	.word	0x20012e18
 800f144:	200132dc 	.word	0x200132dc
 800f148:	20012e14 	.word	0x20012e14
 800f14c:	200132b8 	.word	0x200132b8

0800f150 <xTaskRemoveFromEventList>:
{
 800f150:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f152:	68c3      	ldr	r3, [r0, #12]
 800f154:	68dc      	ldr	r4, [r3, #12]
{
 800f156:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f158:	2c00      	cmp	r4, #0
 800f15a:	d02b      	beq.n	800f1b4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f15c:	f104 0518 	add.w	r5, r4, #24
 800f160:	4628      	mov	r0, r5
 800f162:	f7fe f8fd 	bl	800d360 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f166:	4b18      	ldr	r3, [pc, #96]	; (800f1c8 <xTaskRemoveFromEventList+0x78>)
 800f168:	681b      	ldr	r3, [r3, #0]
 800f16a:	b17b      	cbz	r3, 800f18c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f16c:	4817      	ldr	r0, [pc, #92]	; (800f1cc <xTaskRemoveFromEventList+0x7c>)
 800f16e:	4629      	mov	r1, r5
 800f170:	f7fe f8ce 	bl	800d310 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f174:	4b16      	ldr	r3, [pc, #88]	; (800f1d0 <xTaskRemoveFromEventList+0x80>)
 800f176:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f178:	681b      	ldr	r3, [r3, #0]
 800f17a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f17c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f17e:	bf85      	ittet	hi
 800f180:	4b14      	ldrhi	r3, [pc, #80]	; (800f1d4 <xTaskRemoveFromEventList+0x84>)
 800f182:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f184:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f186:	6018      	strhi	r0, [r3, #0]
}
 800f188:	b003      	add	sp, #12
 800f18a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f18c:	1d21      	adds	r1, r4, #4
 800f18e:	4608      	mov	r0, r1
 800f190:	9101      	str	r1, [sp, #4]
 800f192:	f7fe f8e5 	bl	800d360 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f196:	4a10      	ldr	r2, [pc, #64]	; (800f1d8 <xTaskRemoveFromEventList+0x88>)
 800f198:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f19a:	6810      	ldr	r0, [r2, #0]
 800f19c:	9901      	ldr	r1, [sp, #4]
 800f19e:	4283      	cmp	r3, r0
 800f1a0:	480e      	ldr	r0, [pc, #56]	; (800f1dc <xTaskRemoveFromEventList+0x8c>)
 800f1a2:	bf88      	it	hi
 800f1a4:	6013      	strhi	r3, [r2, #0]
 800f1a6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f1aa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f1ae:	f7fe f8af 	bl	800d310 <vListInsertEnd>
 800f1b2:	e7df      	b.n	800f174 <xTaskRemoveFromEventList+0x24>
 800f1b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1b8:	f383 8811 	msr	BASEPRI, r3
 800f1bc:	f3bf 8f6f 	isb	sy
 800f1c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f1c4:	e7fe      	b.n	800f1c4 <xTaskRemoveFromEventList+0x74>
 800f1c6:	bf00      	nop
 800f1c8:	20013284 	.word	0x20013284
 800f1cc:	200132c4 	.word	0x200132c4
 800f1d0:	20012e10 	.word	0x20012e10
 800f1d4:	20013308 	.word	0x20013308
 800f1d8:	2001328c 	.word	0x2001328c
 800f1dc:	20012e1c 	.word	0x20012e1c

0800f1e0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f1e0:	4a03      	ldr	r2, [pc, #12]	; (800f1f0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f1e2:	4b04      	ldr	r3, [pc, #16]	; (800f1f4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f1e4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f1e6:	681b      	ldr	r3, [r3, #0]
 800f1e8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f1ec:	4770      	bx	lr
 800f1ee:	bf00      	nop
 800f1f0:	200132bc 	.word	0x200132bc
 800f1f4:	20013304 	.word	0x20013304

0800f1f8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f1f8:	b328      	cbz	r0, 800f246 <xTaskCheckForTimeOut+0x4e>
{
 800f1fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1fc:	460d      	mov	r5, r1
 800f1fe:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f200:	b1c1      	cbz	r1, 800f234 <xTaskCheckForTimeOut+0x3c>
 800f202:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f204:	f7fe f926 	bl	800d454 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f208:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f20a:	4a1d      	ldr	r2, [pc, #116]	; (800f280 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f20c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f20e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f210:	d030      	beq.n	800f274 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f212:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f284 <xTaskCheckForTimeOut+0x8c>
 800f216:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f21a:	f8dc 7000 	ldr.w	r7, [ip]
 800f21e:	42be      	cmp	r6, r7
 800f220:	d01a      	beq.n	800f258 <xTaskCheckForTimeOut+0x60>
 800f222:	4288      	cmp	r0, r1
 800f224:	d818      	bhi.n	800f258 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f226:	2001      	movs	r0, #1
 800f228:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f22a:	f7fe f935 	bl	800d498 <vPortExitCritical>
}
 800f22e:	9801      	ldr	r0, [sp, #4]
 800f230:	b003      	add	sp, #12
 800f232:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f234:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f238:	f383 8811 	msr	BASEPRI, r3
 800f23c:	f3bf 8f6f 	isb	sy
 800f240:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f244:	e7fe      	b.n	800f244 <xTaskCheckForTimeOut+0x4c>
 800f246:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f24a:	f383 8811 	msr	BASEPRI, r3
 800f24e:	f3bf 8f6f 	isb	sy
 800f252:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f256:	e7fe      	b.n	800f256 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f258:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f25c:	4573      	cmp	r3, lr
 800f25e:	d90b      	bls.n	800f278 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f260:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f262:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f266:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f268:	4403      	add	r3, r0
 800f26a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f26c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f26e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f272:	e7d9      	b.n	800f228 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f274:	2000      	movs	r0, #0
 800f276:	e7d7      	b.n	800f228 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f278:	2300      	movs	r3, #0
 800f27a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f27c:	2001      	movs	r0, #1
 800f27e:	e7d3      	b.n	800f228 <xTaskCheckForTimeOut+0x30>
 800f280:	20013304 	.word	0x20013304
 800f284:	200132bc 	.word	0x200132bc

0800f288 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f288:	4b01      	ldr	r3, [pc, #4]	; (800f290 <vTaskMissedYield+0x8>)
 800f28a:	2201      	movs	r2, #1
 800f28c:	601a      	str	r2, [r3, #0]
}
 800f28e:	4770      	bx	lr
 800f290:	20013308 	.word	0x20013308

0800f294 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f294:	4b05      	ldr	r3, [pc, #20]	; (800f2ac <xTaskGetSchedulerState+0x18>)
 800f296:	681b      	ldr	r3, [r3, #0]
 800f298:	b133      	cbz	r3, 800f2a8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f29a:	4b05      	ldr	r3, [pc, #20]	; (800f2b0 <xTaskGetSchedulerState+0x1c>)
 800f29c:	6818      	ldr	r0, [r3, #0]
 800f29e:	fab0 f080 	clz	r0, r0
 800f2a2:	0940      	lsrs	r0, r0, #5
 800f2a4:	0040      	lsls	r0, r0, #1
 800f2a6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f2a8:	2001      	movs	r0, #1
	}
 800f2aa:	4770      	bx	lr
 800f2ac:	200132d8 	.word	0x200132d8
 800f2b0:	20013284 	.word	0x20013284

0800f2b4 <xTaskPriorityInherit>:
	{
 800f2b4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f2b6:	4604      	mov	r4, r0
	{
 800f2b8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f2ba:	b1c8      	cbz	r0, 800f2f0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f2bc:	4d1d      	ldr	r5, [pc, #116]	; (800f334 <xTaskPriorityInherit+0x80>)
 800f2be:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f2c0:	682a      	ldr	r2, [r5, #0]
 800f2c2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f2c4:	4293      	cmp	r3, r2
 800f2c6:	d215      	bcs.n	800f2f4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f2c8:	6982      	ldr	r2, [r0, #24]
 800f2ca:	2a00      	cmp	r2, #0
 800f2cc:	db04      	blt.n	800f2d8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2ce:	682a      	ldr	r2, [r5, #0]
 800f2d0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f2d2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f2d6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f2d8:	4e17      	ldr	r6, [pc, #92]	; (800f338 <xTaskPriorityInherit+0x84>)
 800f2da:	6962      	ldr	r2, [r4, #20]
 800f2dc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f2e0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f2e4:	429a      	cmp	r2, r3
 800f2e6:	d00e      	beq.n	800f306 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f2e8:	682b      	ldr	r3, [r5, #0]
 800f2ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2ec:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f2ee:	2001      	movs	r0, #1
	}
 800f2f0:	b002      	add	sp, #8
 800f2f2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f2f4:	682b      	ldr	r3, [r5, #0]
 800f2f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f2f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2fa:	4298      	cmp	r0, r3
 800f2fc:	bf2c      	ite	cs
 800f2fe:	2000      	movcs	r0, #0
 800f300:	2001      	movcc	r0, #1
	}
 800f302:	b002      	add	sp, #8
 800f304:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f306:	1d21      	adds	r1, r4, #4
 800f308:	4608      	mov	r0, r1
 800f30a:	9101      	str	r1, [sp, #4]
 800f30c:	f7fe f828 	bl	800d360 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f310:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f312:	4b0a      	ldr	r3, [pc, #40]	; (800f33c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f314:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f316:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f318:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f31a:	4290      	cmp	r0, r2
 800f31c:	bf88      	it	hi
 800f31e:	6018      	strhi	r0, [r3, #0]
 800f320:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f324:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f328:	9901      	ldr	r1, [sp, #4]
 800f32a:	f7fd fff1 	bl	800d310 <vListInsertEnd>
				xReturn = pdTRUE;
 800f32e:	2001      	movs	r0, #1
 800f330:	e7de      	b.n	800f2f0 <xTaskPriorityInherit+0x3c>
 800f332:	bf00      	nop
 800f334:	20012e10 	.word	0x20012e10
 800f338:	20012e1c 	.word	0x20012e1c
 800f33c:	2001328c 	.word	0x2001328c

0800f340 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f340:	b318      	cbz	r0, 800f38a <xTaskPriorityDisinherit+0x4a>
	{
 800f342:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f344:	4b1e      	ldr	r3, [pc, #120]	; (800f3c0 <xTaskPriorityDisinherit+0x80>)
 800f346:	681c      	ldr	r4, [r3, #0]
 800f348:	4284      	cmp	r4, r0
	{
 800f34a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f34c:	d008      	beq.n	800f360 <xTaskPriorityDisinherit+0x20>
 800f34e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f352:	f383 8811 	msr	BASEPRI, r3
 800f356:	f3bf 8f6f 	isb	sy
 800f35a:	f3bf 8f4f 	dsb	sy
 800f35e:	e7fe      	b.n	800f35e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f360:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f362:	b14b      	cbz	r3, 800f378 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f364:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f366:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f368:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f36a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f36c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f36e:	d000      	beq.n	800f372 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f370:	b16b      	cbz	r3, 800f38e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f372:	2000      	movs	r0, #0
	}
 800f374:	b002      	add	sp, #8
 800f376:	bd10      	pop	{r4, pc}
 800f378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f37c:	f383 8811 	msr	BASEPRI, r3
 800f380:	f3bf 8f6f 	isb	sy
 800f384:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f388:	e7fe      	b.n	800f388 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f38a:	2000      	movs	r0, #0
	}
 800f38c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f38e:	1d21      	adds	r1, r4, #4
 800f390:	4608      	mov	r0, r1
 800f392:	9101      	str	r1, [sp, #4]
 800f394:	f7fd ffe4 	bl	800d360 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f398:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f39a:	4a0a      	ldr	r2, [pc, #40]	; (800f3c4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f39c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f39e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f3a2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f3a4:	6810      	ldr	r0, [r2, #0]
 800f3a6:	9901      	ldr	r1, [sp, #4]
 800f3a8:	4283      	cmp	r3, r0
 800f3aa:	4807      	ldr	r0, [pc, #28]	; (800f3c8 <xTaskPriorityDisinherit+0x88>)
 800f3ac:	bf88      	it	hi
 800f3ae:	6013      	strhi	r3, [r2, #0]
 800f3b0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f3b4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f3b8:	f7fd ffaa 	bl	800d310 <vListInsertEnd>
					xReturn = pdTRUE;
 800f3bc:	2001      	movs	r0, #1
		return xReturn;
 800f3be:	e7d9      	b.n	800f374 <xTaskPriorityDisinherit+0x34>
 800f3c0:	20012e10 	.word	0x20012e10
 800f3c4:	2001328c 	.word	0x2001328c
 800f3c8:	20012e1c 	.word	0x20012e1c

0800f3cc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f3cc:	2800      	cmp	r0, #0
 800f3ce:	d041      	beq.n	800f454 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f3d0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f3d2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f3d4:	b083      	sub	sp, #12
 800f3d6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f3d8:	b153      	cbz	r3, 800f3f0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f3da:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f3dc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f3de:	4281      	cmp	r1, r0
 800f3e0:	bf38      	it	cc
 800f3e2:	4601      	movcc	r1, r0
 800f3e4:	428a      	cmp	r2, r1
 800f3e6:	d001      	beq.n	800f3ec <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f3e8:	2b01      	cmp	r3, #1
 800f3ea:	d00a      	beq.n	800f402 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f3ec:	b003      	add	sp, #12
 800f3ee:	bd30      	pop	{r4, r5, pc}
 800f3f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3f4:	f383 8811 	msr	BASEPRI, r3
 800f3f8:	f3bf 8f6f 	isb	sy
 800f3fc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f400:	e7fe      	b.n	800f400 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f402:	4b19      	ldr	r3, [pc, #100]	; (800f468 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f404:	681b      	ldr	r3, [r3, #0]
 800f406:	42a3      	cmp	r3, r4
 800f408:	d025      	beq.n	800f456 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f40a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f40c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f40e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f410:	bfa8      	it	ge
 800f412:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f416:	4d15      	ldr	r5, [pc, #84]	; (800f46c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f418:	bfa8      	it	ge
 800f41a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f41c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f420:	6961      	ldr	r1, [r4, #20]
 800f422:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f426:	4299      	cmp	r1, r3
 800f428:	d1e0      	bne.n	800f3ec <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f42a:	1d21      	adds	r1, r4, #4
 800f42c:	4608      	mov	r0, r1
 800f42e:	9101      	str	r1, [sp, #4]
 800f430:	f7fd ff96 	bl	800d360 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f434:	4b0e      	ldr	r3, [pc, #56]	; (800f470 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f436:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f438:	681a      	ldr	r2, [r3, #0]
 800f43a:	9901      	ldr	r1, [sp, #4]
 800f43c:	4290      	cmp	r0, r2
 800f43e:	bf88      	it	hi
 800f440:	6018      	strhi	r0, [r3, #0]
 800f442:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f446:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f44a:	b003      	add	sp, #12
 800f44c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f450:	f7fd bf5e 	b.w	800d310 <vListInsertEnd>
 800f454:	4770      	bx	lr
 800f456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f45a:	f383 8811 	msr	BASEPRI, r3
 800f45e:	f3bf 8f6f 	isb	sy
 800f462:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f466:	e7fe      	b.n	800f466 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f468:	20012e10 	.word	0x20012e10
 800f46c:	20012e1c 	.word	0x20012e1c
 800f470:	2001328c 	.word	0x2001328c

0800f474 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f474:	4b04      	ldr	r3, [pc, #16]	; (800f488 <pvTaskIncrementMutexHeldCount+0x14>)
 800f476:	681a      	ldr	r2, [r3, #0]
 800f478:	b11a      	cbz	r2, 800f482 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f47a:	6819      	ldr	r1, [r3, #0]
 800f47c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f47e:	3201      	adds	r2, #1
 800f480:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f482:	6818      	ldr	r0, [r3, #0]
	}
 800f484:	4770      	bx	lr
 800f486:	bf00      	nop
 800f488:	20012e10 	.word	0x20012e10

0800f48c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f48c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f490:	4e22      	ldr	r6, [pc, #136]	; (800f51c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f492:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f524 <prvSwitchTimerLists+0x98>
{
 800f496:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f498:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f49c:	e00d      	b.n	800f4ba <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f49e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4a0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f4a2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f4a4:	1d25      	adds	r5, r4, #4
 800f4a6:	4628      	mov	r0, r5
 800f4a8:	f7fd ff5a 	bl	800d360 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f4ac:	6a23      	ldr	r3, [r4, #32]
 800f4ae:	4620      	mov	r0, r4
 800f4b0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f4b2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f4b6:	075b      	lsls	r3, r3, #29
 800f4b8:	d40a      	bmi.n	800f4d0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f4ba:	6833      	ldr	r3, [r6, #0]
 800f4bc:	681a      	ldr	r2, [r3, #0]
 800f4be:	2a00      	cmp	r2, #0
 800f4c0:	d1ed      	bne.n	800f49e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f4c2:	4a17      	ldr	r2, [pc, #92]	; (800f520 <prvSwitchTimerLists+0x94>)
 800f4c4:	6811      	ldr	r1, [r2, #0]
 800f4c6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f4c8:	6013      	str	r3, [r2, #0]
}
 800f4ca:	b005      	add	sp, #20
 800f4cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f4d0:	69a3      	ldr	r3, [r4, #24]
 800f4d2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f4d4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4d6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f4d8:	d205      	bcs.n	800f4e6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4da:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f4dc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4de:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4e0:	f7fd ff26 	bl	800d330 <vListInsert>
 800f4e4:	e7e9      	b.n	800f4ba <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f4e6:	f8d9 3000 	ldr.w	r3, [r9]
 800f4ea:	b16b      	cbz	r3, 800f508 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f4ec:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f4f0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f4f2:	f7ff fecf 	bl	800f294 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f4f6:	2300      	movs	r3, #0
 800f4f8:	f8d9 0000 	ldr.w	r0, [r9]
 800f4fc:	461a      	mov	r2, r3
 800f4fe:	4669      	mov	r1, sp
 800f500:	f7fe fa9c 	bl	800da3c <xQueueGenericSend>
				configASSERT( xResult );
 800f504:	2800      	cmp	r0, #0
 800f506:	d1d8      	bne.n	800f4ba <prvSwitchTimerLists+0x2e>
 800f508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f50c:	f383 8811 	msr	BASEPRI, r3
 800f510:	f3bf 8f6f 	isb	sy
 800f514:	f3bf 8f4f 	dsb	sy
 800f518:	e7fe      	b.n	800f518 <prvSwitchTimerLists+0x8c>
 800f51a:	bf00      	nop
 800f51c:	2001330c 	.word	0x2001330c
 800f520:	20013310 	.word	0x20013310
 800f524:	20013430 	.word	0x20013430

0800f528 <prvTimerTask>:
{
 800f528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f52c:	4e9b      	ldr	r6, [pc, #620]	; (800f79c <prvTimerTask+0x274>)
 800f52e:	4d9c      	ldr	r5, [pc, #624]	; (800f7a0 <prvTimerTask+0x278>)
 800f530:	4c9c      	ldr	r4, [pc, #624]	; (800f7a4 <prvTimerTask+0x27c>)
 800f532:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f534:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f538:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f53c:	6833      	ldr	r3, [r6, #0]
 800f53e:	681f      	ldr	r7, [r3, #0]
 800f540:	2f00      	cmp	r7, #0
 800f542:	f000 80a8 	beq.w	800f696 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f546:	68db      	ldr	r3, [r3, #12]
 800f548:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f54a:	f7ff fcf9 	bl	800ef40 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f54e:	f7ff fd0f 	bl	800ef70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f552:	682a      	ldr	r2, [r5, #0]
 800f554:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f556:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f558:	f0c0 80ae 	bcc.w	800f6b8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f55c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f55e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f560:	f240 80b4 	bls.w	800f6cc <prvTimerTask+0x1a4>
 800f564:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f566:	6820      	ldr	r0, [r4, #0]
 800f568:	eba7 010a 	sub.w	r1, r7, sl
 800f56c:	f7ff f89a 	bl	800e6a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f570:	f7ff fcee 	bl	800ef50 <xTaskResumeAll>
 800f574:	b928      	cbnz	r0, 800f582 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f576:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f57a:	f3bf 8f4f 	dsb	sy
 800f57e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f582:	6820      	ldr	r0, [r4, #0]
 800f584:	2200      	movs	r2, #0
 800f586:	a902      	add	r1, sp, #8
 800f588:	f7fe fc94 	bl	800deb4 <xQueueReceive>
 800f58c:	2800      	cmp	r0, #0
 800f58e:	d0d5      	beq.n	800f53c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f590:	9b02      	ldr	r3, [sp, #8]
 800f592:	2b00      	cmp	r3, #0
 800f594:	db76      	blt.n	800f684 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f596:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f598:	697b      	ldr	r3, [r7, #20]
 800f59a:	b113      	cbz	r3, 800f5a2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f59c:	1d38      	adds	r0, r7, #4
 800f59e:	f7fd fedf 	bl	800d360 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f5a2:	f7ff fce5 	bl	800ef70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f5a6:	682b      	ldr	r3, [r5, #0]
 800f5a8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f5aa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f5ac:	f0c0 808b 	bcc.w	800f6c6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f5b0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f5b2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f5b6:	2b09      	cmp	r3, #9
 800f5b8:	d8e3      	bhi.n	800f582 <prvTimerTask+0x5a>
 800f5ba:	e8df f003 	tbb	[pc, r3]
 800f5be:	0505      	.short	0x0505
 800f5c0:	5a3d5305 	.word	0x5a3d5305
 800f5c4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f5c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f5cc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f5ce:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f5d0:	f043 0301 	orr.w	r3, r3, #1
 800f5d4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f5d8:	9b03      	ldr	r3, [sp, #12]
 800f5da:	1899      	adds	r1, r3, r2
 800f5dc:	bf2c      	ite	cs
 800f5de:	2001      	movcs	r0, #1
 800f5e0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f5e2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f5e4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f5e6:	f200 808c 	bhi.w	800f702 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5ea:	ebaa 0303 	sub.w	r3, sl, r3
 800f5ee:	429a      	cmp	r2, r3
 800f5f0:	d832      	bhi.n	800f658 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f5f2:	6a3b      	ldr	r3, [r7, #32]
 800f5f4:	4638      	mov	r0, r7
 800f5f6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f5f8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f5fc:	075b      	lsls	r3, r3, #29
 800f5fe:	d5c0      	bpl.n	800f582 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f600:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f602:	9903      	ldr	r1, [sp, #12]
 800f604:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f606:	b172      	cbz	r2, 800f626 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f608:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f60a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f60e:	2300      	movs	r3, #0
 800f610:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f612:	f7ff fe3f 	bl	800f294 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f616:	2300      	movs	r3, #0
 800f618:	6820      	ldr	r0, [r4, #0]
 800f61a:	461a      	mov	r2, r3
 800f61c:	a906      	add	r1, sp, #24
 800f61e:	f7fe fa0d 	bl	800da3c <xQueueGenericSend>
							configASSERT( xResult );
 800f622:	2800      	cmp	r0, #0
 800f624:	d1ad      	bne.n	800f582 <prvTimerTask+0x5a>
 800f626:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f62a:	f383 8811 	msr	BASEPRI, r3
 800f62e:	f3bf 8f6f 	isb	sy
 800f632:	f3bf 8f4f 	dsb	sy
 800f636:	e7fe      	b.n	800f636 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f638:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f63c:	f043 0301 	orr.w	r3, r3, #1
 800f640:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f644:	9b03      	ldr	r3, [sp, #12]
 800f646:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f648:	2b00      	cmp	r3, #0
 800f64a:	f000 809d 	beq.w	800f788 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f64e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f650:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f652:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f654:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f656:	d85e      	bhi.n	800f716 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f658:	4b53      	ldr	r3, [pc, #332]	; (800f7a8 <prvTimerTask+0x280>)
 800f65a:	1d39      	adds	r1, r7, #4
 800f65c:	6818      	ldr	r0, [r3, #0]
 800f65e:	f7fd fe67 	bl	800d330 <vListInsert>
	return xProcessTimerNow;
 800f662:	e78e      	b.n	800f582 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f664:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f668:	f023 0301 	bic.w	r3, r3, #1
 800f66c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f670:	e787      	b.n	800f582 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f672:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f676:	079a      	lsls	r2, r3, #30
 800f678:	d552      	bpl.n	800f720 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f67a:	f023 0301 	bic.w	r3, r3, #1
 800f67e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f682:	e77e      	b.n	800f582 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f684:	9b03      	ldr	r3, [sp, #12]
 800f686:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f68a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f68c:	9b02      	ldr	r3, [sp, #8]
 800f68e:	2b00      	cmp	r3, #0
 800f690:	f6ff af77 	blt.w	800f582 <prvTimerTask+0x5a>
 800f694:	e77f      	b.n	800f596 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f696:	f7ff fc53 	bl	800ef40 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f69a:	f7ff fc69 	bl	800ef70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f69e:	682a      	ldr	r2, [r5, #0]
 800f6a0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f6a2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f6a4:	d808      	bhi.n	800f6b8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f6a6:	4b40      	ldr	r3, [pc, #256]	; (800f7a8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f6a8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f6ac:	681a      	ldr	r2, [r3, #0]
 800f6ae:	6812      	ldr	r2, [r2, #0]
 800f6b0:	fab2 f282 	clz	r2, r2
 800f6b4:	0952      	lsrs	r2, r2, #5
 800f6b6:	e756      	b.n	800f566 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f6b8:	f7ff fee8 	bl	800f48c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f6bc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f6c0:	f7ff fc46 	bl	800ef50 <xTaskResumeAll>
 800f6c4:	e75d      	b.n	800f582 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f6c6:	f7ff fee1 	bl	800f48c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f6ca:	e771      	b.n	800f5b0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f6cc:	f7ff fc40 	bl	800ef50 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6d0:	6832      	ldr	r2, [r6, #0]
 800f6d2:	68d2      	ldr	r2, [r2, #12]
 800f6d4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f6d8:	f10b 0104 	add.w	r1, fp, #4
 800f6dc:	4608      	mov	r0, r1
 800f6de:	9101      	str	r1, [sp, #4]
 800f6e0:	f7fd fe3e 	bl	800d360 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f6e4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f6e8:	9901      	ldr	r1, [sp, #4]
 800f6ea:	f010 0f04 	tst.w	r0, #4
 800f6ee:	d11b      	bne.n	800f728 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f6f0:	f020 0001 	bic.w	r0, r0, #1
 800f6f4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f6f8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f6fc:	4658      	mov	r0, fp
 800f6fe:	4798      	blx	r3
}
 800f700:	e73f      	b.n	800f582 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f702:	4553      	cmp	r3, sl
 800f704:	d902      	bls.n	800f70c <prvTimerTask+0x1e4>
 800f706:	2800      	cmp	r0, #0
 800f708:	f43f af73 	beq.w	800f5f2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f70c:	6830      	ldr	r0, [r6, #0]
 800f70e:	1d39      	adds	r1, r7, #4
 800f710:	f7fd fe0e 	bl	800d330 <vListInsert>
	return xProcessTimerNow;
 800f714:	e735      	b.n	800f582 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f716:	6830      	ldr	r0, [r6, #0]
 800f718:	1d39      	adds	r1, r7, #4
 800f71a:	f7fd fe09 	bl	800d330 <vListInsert>
 800f71e:	e730      	b.n	800f582 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f720:	4638      	mov	r0, r7
 800f722:	f7fd fd81 	bl	800d228 <vPortFree>
 800f726:	e72c      	b.n	800f582 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f728:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f72c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f730:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f732:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f734:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f738:	d903      	bls.n	800f742 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f73a:	6830      	ldr	r0, [r6, #0]
 800f73c:	f7fd fdf8 	bl	800d330 <vListInsert>
	return xProcessTimerNow;
 800f740:	e7da      	b.n	800f6f8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f742:	ebaa 0307 	sub.w	r3, sl, r7
 800f746:	429a      	cmp	r2, r3
 800f748:	d819      	bhi.n	800f77e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f74a:	6823      	ldr	r3, [r4, #0]
 800f74c:	b173      	cbz	r3, 800f76c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f74e:	2300      	movs	r3, #0
 800f750:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f752:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f754:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f758:	f7ff fd9c 	bl	800f294 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f75c:	2300      	movs	r3, #0
 800f75e:	6820      	ldr	r0, [r4, #0]
 800f760:	461a      	mov	r2, r3
 800f762:	a906      	add	r1, sp, #24
 800f764:	f7fe f96a 	bl	800da3c <xQueueGenericSend>
			configASSERT( xResult );
 800f768:	2800      	cmp	r0, #0
 800f76a:	d1c5      	bne.n	800f6f8 <prvTimerTask+0x1d0>
 800f76c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f770:	f383 8811 	msr	BASEPRI, r3
 800f774:	f3bf 8f6f 	isb	sy
 800f778:	f3bf 8f4f 	dsb	sy
 800f77c:	e7fe      	b.n	800f77c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f77e:	4b0a      	ldr	r3, [pc, #40]	; (800f7a8 <prvTimerTask+0x280>)
 800f780:	6818      	ldr	r0, [r3, #0]
 800f782:	f7fd fdd5 	bl	800d330 <vListInsert>
	return xProcessTimerNow;
 800f786:	e7b7      	b.n	800f6f8 <prvTimerTask+0x1d0>
 800f788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f78c:	f383 8811 	msr	BASEPRI, r3
 800f790:	f3bf 8f6f 	isb	sy
 800f794:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f798:	e7fe      	b.n	800f798 <prvTimerTask+0x270>
 800f79a:	bf00      	nop
 800f79c:	2001330c 	.word	0x2001330c
 800f7a0:	200133dc 	.word	0x200133dc
 800f7a4:	20013430 	.word	0x20013430
 800f7a8:	20013310 	.word	0x20013310

0800f7ac <xTimerCreateTimerTask>:
{
 800f7ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f7ae:	4c23      	ldr	r4, [pc, #140]	; (800f83c <xTimerCreateTimerTask+0x90>)
{
 800f7b0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f7b2:	f7fd fe4f 	bl	800d454 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f7b6:	6825      	ldr	r5, [r4, #0]
 800f7b8:	b335      	cbz	r5, 800f808 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f7ba:	f7fd fe6d 	bl	800d498 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f7be:	6823      	ldr	r3, [r4, #0]
 800f7c0:	b1cb      	cbz	r3, 800f7f6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f7c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f7c4:	aa07      	add	r2, sp, #28
 800f7c6:	a906      	add	r1, sp, #24
 800f7c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f7ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f7ce:	f7fd fc5f 	bl	800d090 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f7d2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f7d6:	2302      	movs	r3, #2
 800f7d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f7dc:	9300      	str	r3, [sp, #0]
 800f7de:	9a07      	ldr	r2, [sp, #28]
 800f7e0:	4917      	ldr	r1, [pc, #92]	; (800f840 <xTimerCreateTimerTask+0x94>)
 800f7e2:	4818      	ldr	r0, [pc, #96]	; (800f844 <xTimerCreateTimerTask+0x98>)
 800f7e4:	4623      	mov	r3, r4
 800f7e6:	f7ff fa6d 	bl	800ecc4 <xTaskCreateStatic>
 800f7ea:	4b17      	ldr	r3, [pc, #92]	; (800f848 <xTimerCreateTimerTask+0x9c>)
 800f7ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f7ee:	b110      	cbz	r0, 800f7f6 <xTimerCreateTimerTask+0x4a>
}
 800f7f0:	2001      	movs	r0, #1
 800f7f2:	b009      	add	sp, #36	; 0x24
 800f7f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7fa:	f383 8811 	msr	BASEPRI, r3
 800f7fe:	f3bf 8f6f 	isb	sy
 800f802:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f806:	e7fe      	b.n	800f806 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f808:	4f10      	ldr	r7, [pc, #64]	; (800f84c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f80a:	4e11      	ldr	r6, [pc, #68]	; (800f850 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f80c:	4638      	mov	r0, r7
 800f80e:	f7fd fd6f 	bl	800d2f0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f812:	4630      	mov	r0, r6
 800f814:	f7fd fd6c 	bl	800d2f0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f818:	4a0e      	ldr	r2, [pc, #56]	; (800f854 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f81a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f81c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f81e:	4a0e      	ldr	r2, [pc, #56]	; (800f858 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f820:	4b0e      	ldr	r3, [pc, #56]	; (800f85c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f822:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f824:	2110      	movs	r1, #16
 800f826:	4a0e      	ldr	r2, [pc, #56]	; (800f860 <xTimerCreateTimerTask+0xb4>)
 800f828:	200a      	movs	r0, #10
 800f82a:	f7fd ffb1 	bl	800d790 <xQueueGenericCreateStatic>
 800f82e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f830:	2800      	cmp	r0, #0
 800f832:	d0c2      	beq.n	800f7ba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f834:	490b      	ldr	r1, [pc, #44]	; (800f864 <xTimerCreateTimerTask+0xb8>)
 800f836:	f7fe ff0d 	bl	800e654 <vQueueAddToRegistry>
 800f83a:	e7be      	b.n	800f7ba <xTimerCreateTimerTask+0xe>
 800f83c:	20013430 	.word	0x20013430
 800f840:	0802ef38 	.word	0x0802ef38
 800f844:	0800f529 	.word	0x0800f529
 800f848:	20013434 	.word	0x20013434
 800f84c:	200133b4 	.word	0x200133b4
 800f850:	200133c8 	.word	0x200133c8
 800f854:	2001330c 	.word	0x2001330c
 800f858:	20013310 	.word	0x20013310
 800f85c:	200133e0 	.word	0x200133e0
 800f860:	20013314 	.word	0x20013314
 800f864:	0802ef30 	.word	0x0802ef30

0800f868 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f868:	8880      	ldrh	r0, [r0, #4]
 800f86a:	4770      	bx	lr

0800f86c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f86c:	b570      	push	{r4, r5, r6, lr}
 800f86e:	6803      	ldr	r3, [r0, #0]
 800f870:	4605      	mov	r5, r0
 800f872:	460c      	mov	r4, r1
 800f874:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f876:	2100      	movs	r1, #0
 800f878:	4798      	blx	r3
 800f87a:	682b      	ldr	r3, [r5, #0]
 800f87c:	4606      	mov	r6, r0
 800f87e:	6a1b      	ldr	r3, [r3, #32]
 800f880:	4628      	mov	r0, r5
 800f882:	4798      	blx	r3
 800f884:	1ba4      	subs	r4, r4, r6
 800f886:	b2a4      	uxth	r4, r4
 800f888:	fbb4 f0f0 	udiv	r0, r4, r0
 800f88c:	bd70      	pop	{r4, r5, r6, pc}

0800f88e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f88e:	2300      	movs	r3, #0
 800f890:	8083      	strh	r3, [r0, #4]
 800f892:	4770      	bx	lr

0800f894 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f894:	b510      	push	{r4, lr}
 800f896:	6803      	ldr	r3, [r0, #0]
 800f898:	8881      	ldrh	r1, [r0, #4]
 800f89a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f89c:	4604      	mov	r4, r0
 800f89e:	4798      	blx	r3
 800f8a0:	88a3      	ldrh	r3, [r4, #4]
 800f8a2:	3301      	adds	r3, #1
 800f8a4:	80a3      	strh	r3, [r4, #4]
 800f8a6:	bd10      	pop	{r4, pc}

0800f8a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f8a8:	6803      	ldr	r3, [r0, #0]
 800f8aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8ac:	4718      	bx	r3

0800f8ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f8ae:	4770      	bx	lr

0800f8b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f8b0:	4a02      	ldr	r2, [pc, #8]	; (800f8bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f8b2:	6002      	str	r2, [r0, #0]
 800f8b4:	2200      	movs	r2, #0
 800f8b6:	8082      	strh	r2, [r0, #4]
 800f8b8:	4770      	bx	lr
 800f8ba:	bf00      	nop
 800f8bc:	0802ef48 	.word	0x0802ef48

0800f8c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f8c0:	b510      	push	{r4, lr}
 800f8c2:	6803      	ldr	r3, [r0, #0]
 800f8c4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f8c8:	4604      	mov	r4, r0
 800f8ca:	4798      	blx	r3
 800f8cc:	b110      	cbz	r0, 800f8d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f8ce:	4620      	mov	r0, r4
 800f8d0:	f7f2 fcd2 	bl	8002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f8d4:	bd10      	pop	{r4, pc}

0800f8d6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f8d6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f8da:	4770      	bx	lr

0800f8dc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f8dc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f8e0:	4770      	bx	lr

0800f8e2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f8e2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f8e6:	4770      	bx	lr

0800f8e8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f8e8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f8ec:	4770      	bx	lr

0800f8ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f8ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8f0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f8f4:	461e      	mov	r6, r3
 800f8f6:	6803      	ldr	r3, [r0, #0]
 800f8f8:	460f      	mov	r7, r1
 800f8fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f8fe:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f902:	4604      	mov	r4, r0
 800f904:	4615      	mov	r5, r2
 800f906:	4798      	blx	r3
 800f908:	b93e      	cbnz	r6, 800f91a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f90a:	1bed      	subs	r5, r5, r7
 800f90c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f910:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f914:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f91a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f91e:	e7f7      	b.n	800f910 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f920 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f920:	b510      	push	{r4, lr}
 800f922:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f926:	600c      	str	r4, [r1, #0]
 800f928:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f92c:	6011      	str	r1, [r2, #0]
 800f92e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f932:	801a      	strh	r2, [r3, #0]
 800f934:	9b02      	ldr	r3, [sp, #8]
 800f936:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f93a:	801a      	strh	r2, [r3, #0]
 800f93c:	bd10      	pop	{r4, pc}

0800f93e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f93e:	b510      	push	{r4, lr}
 800f940:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f944:	600c      	str	r4, [r1, #0]
 800f946:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f94a:	6011      	str	r1, [r2, #0]
 800f94c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f950:	801a      	strh	r2, [r3, #0]
 800f952:	bd10      	pop	{r4, pc}

0800f954 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f954:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f958:	600b      	str	r3, [r1, #0]
 800f95a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f95e:	6013      	str	r3, [r2, #0]
 800f960:	4770      	bx	lr

0800f962 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f962:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f966:	4770      	bx	lr

0800f968 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f968:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f96c:	4770      	bx	lr

0800f96e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f96e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f972:	4770      	bx	lr

0800f974 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f974:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f978:	4770      	bx	lr

0800f97a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f97a:	4770      	bx	lr

0800f97c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f97c:	b510      	push	{r4, lr}
 800f97e:	21b4      	movs	r1, #180	; 0xb4
 800f980:	4604      	mov	r4, r0
 800f982:	f01a fbae 	bl	802a0e2 <_ZdlPvj>
 800f986:	4620      	mov	r0, r4
 800f988:	bd10      	pop	{r4, pc}

0800f98a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f98a:	b570      	push	{r4, r5, r6, lr}
 800f98c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f990:	428d      	cmp	r5, r1
 800f992:	bfb8      	it	lt
 800f994:	460d      	movlt	r5, r1
 800f996:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f99a:	428d      	cmp	r5, r1
 800f99c:	4604      	mov	r4, r0
 800f99e:	bfa8      	it	ge
 800f9a0:	460d      	movge	r5, r1
 800f9a2:	4616      	mov	r6, r2
 800f9a4:	b99a      	cbnz	r2, 800f9ce <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f9a6:	6803      	ldr	r3, [r0, #0]
 800f9a8:	4629      	mov	r1, r5
 800f9aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f9ae:	4798      	blx	r3
 800f9b0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f9b4:	b368      	cbz	r0, 800fa12 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f9b6:	6803      	ldr	r3, [r0, #0]
 800f9b8:	68db      	ldr	r3, [r3, #12]
 800f9ba:	4798      	blx	r3
 800f9bc:	b348      	cbz	r0, 800fa12 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f9be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f9c2:	6803      	ldr	r3, [r0, #0]
 800f9c4:	4621      	mov	r1, r4
 800f9c6:	689b      	ldr	r3, [r3, #8]
 800f9c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9cc:	4718      	bx	r3
 800f9ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f9d2:	2b00      	cmp	r3, #0
 800f9d4:	dd08      	ble.n	800f9e8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f9d6:	f006 facf 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 800f9da:	4621      	mov	r1, r4
 800f9dc:	3004      	adds	r0, #4
 800f9de:	f006 fb18 	bl	8016012 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f9e2:	2300      	movs	r3, #0
 800f9e4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f9e8:	6823      	ldr	r3, [r4, #0]
 800f9ea:	4620      	mov	r0, r4
 800f9ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f9f0:	4798      	blx	r3
 800f9f2:	2300      	movs	r3, #0
 800f9f4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f9f8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f9fc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800fa00:	f006 faba 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 800fa04:	4621      	mov	r1, r4
 800fa06:	3004      	adds	r0, #4
 800fa08:	f006 fbac 	bl	8016164 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800fa0c:	2301      	movs	r3, #1
 800fa0e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fa12:	bd70      	pop	{r4, r5, r6, pc}

0800fa14 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800fa14:	b510      	push	{r4, lr}
 800fa16:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fa1a:	4299      	cmp	r1, r3
 800fa1c:	bfb8      	it	lt
 800fa1e:	4619      	movlt	r1, r3
 800fa20:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fa24:	4299      	cmp	r1, r3
 800fa26:	bfa8      	it	ge
 800fa28:	4619      	movge	r1, r3
 800fa2a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800fa2e:	428b      	cmp	r3, r1
 800fa30:	4604      	mov	r4, r0
 800fa32:	d010      	beq.n	800fa56 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa34:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fa38:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fa3c:	b158      	cbz	r0, 800fa56 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa3e:	6803      	ldr	r3, [r0, #0]
 800fa40:	68db      	ldr	r3, [r3, #12]
 800fa42:	4798      	blx	r3
 800fa44:	b138      	cbz	r0, 800fa56 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fa46:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fa4a:	6803      	ldr	r3, [r0, #0]
 800fa4c:	4621      	mov	r1, r4
 800fa4e:	689b      	ldr	r3, [r3, #8]
 800fa50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa54:	4718      	bx	r3
 800fa56:	bd10      	pop	{r4, pc}

0800fa58 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fa58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fa5a:	4604      	mov	r4, r0
 800fa5c:	460d      	mov	r5, r1
 800fa5e:	b1a9      	cbz	r1, 800fa8c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fa60:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fa64:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fa68:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fa6c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fa70:	ab01      	add	r3, sp, #4
 800fa72:	1a12      	subs	r2, r2, r0
 800fa74:	1b89      	subs	r1, r1, r6
 800fa76:	1a38      	subs	r0, r7, r0
 800fa78:	f007 fd34 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 800fa7c:	4629      	mov	r1, r5
 800fa7e:	ab01      	add	r3, sp, #4
 800fa80:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fa84:	4430      	add	r0, r6
 800fa86:	f007 fd2d 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 800fa8a:	b285      	uxth	r5, r0
 800fa8c:	4628      	mov	r0, r5
 800fa8e:	b003      	add	sp, #12
 800fa90:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fa92 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fa92:	b570      	push	{r4, r5, r6, lr}
 800fa94:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fa98:	4604      	mov	r4, r0
 800fa9a:	2b00      	cmp	r3, #0
 800fa9c:	d035      	beq.n	800fb0a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fa9e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800faa2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800faa6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800faaa:	3001      	adds	r0, #1
 800faac:	1ad2      	subs	r2, r2, r3
 800faae:	b212      	sxth	r2, r2
 800fab0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fab4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fab8:	2100      	movs	r1, #0
 800faba:	b280      	uxth	r0, r0
 800fabc:	47a8      	blx	r5
 800fabe:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fac2:	6823      	ldr	r3, [r4, #0]
 800fac4:	4401      	add	r1, r0
 800fac6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800faca:	4620      	mov	r0, r4
 800facc:	4798      	blx	r3
 800face:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800fad2:	429a      	cmp	r2, r3
 800fad4:	db19      	blt.n	800fb0a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fad6:	2500      	movs	r5, #0
 800fad8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fadc:	f006 fa4c 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 800fae0:	4621      	mov	r1, r4
 800fae2:	3004      	adds	r0, #4
 800fae4:	f006 fa95 	bl	8016012 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fae8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800faec:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800faf0:	b158      	cbz	r0, 800fb0a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800faf2:	6803      	ldr	r3, [r0, #0]
 800faf4:	68db      	ldr	r3, [r3, #12]
 800faf6:	4798      	blx	r3
 800faf8:	b138      	cbz	r0, 800fb0a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fafa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fafe:	6803      	ldr	r3, [r0, #0]
 800fb00:	4621      	mov	r1, r4
 800fb02:	689b      	ldr	r3, [r3, #8]
 800fb04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb08:	4718      	bx	r3
 800fb0a:	bd70      	pop	{r4, r5, r6, pc}

0800fb0c <_ZN8touchgfx8DrawableC1Ev>:
 800fb0c:	4a0a      	ldr	r2, [pc, #40]	; (800fb38 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fb0e:	6002      	str	r2, [r0, #0]
 800fb10:	2200      	movs	r2, #0
 800fb12:	8082      	strh	r2, [r0, #4]
 800fb14:	80c2      	strh	r2, [r0, #6]
 800fb16:	8102      	strh	r2, [r0, #8]
 800fb18:	8142      	strh	r2, [r0, #10]
 800fb1a:	8182      	strh	r2, [r0, #12]
 800fb1c:	81c2      	strh	r2, [r0, #14]
 800fb1e:	8202      	strh	r2, [r0, #16]
 800fb20:	8242      	strh	r2, [r0, #18]
 800fb22:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fb26:	61c2      	str	r2, [r0, #28]
 800fb28:	8402      	strh	r2, [r0, #32]
 800fb2a:	8442      	strh	r2, [r0, #34]	; 0x22
 800fb2c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fb30:	2201      	movs	r2, #1
 800fb32:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fb36:	4770      	bx	lr
 800fb38:	0802f94c 	.word	0x0802f94c

0800fb3c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fb3c:	b570      	push	{r4, r5, r6, lr}
 800fb3e:	6803      	ldr	r3, [r0, #0]
 800fb40:	4604      	mov	r4, r0
 800fb42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fb44:	4615      	mov	r5, r2
 800fb46:	4798      	blx	r3
 800fb48:	6823      	ldr	r3, [r4, #0]
 800fb4a:	4629      	mov	r1, r5
 800fb4c:	4620      	mov	r0, r4
 800fb4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb54:	4718      	bx	r3

0800fb56 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fb56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb5a:	4604      	mov	r4, r0
 800fb5c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fb60:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fb64:	460e      	mov	r6, r1
 800fb66:	4615      	mov	r5, r2
 800fb68:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fb6c:	4619      	mov	r1, r3
 800fb6e:	463a      	mov	r2, r7
 800fb70:	3058      	adds	r0, #88	; 0x58
 800fb72:	4698      	mov	r8, r3
 800fb74:	f7ff ffe2 	bl	800fb3c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fb78:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fb7c:	4446      	add	r6, r8
 800fb7e:	42b3      	cmp	r3, r6
 800fb80:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fb84:	bfb8      	it	lt
 800fb86:	8126      	strhlt	r6, [r4, #8]
 800fb88:	443d      	add	r5, r7
 800fb8a:	42ab      	cmp	r3, r5
 800fb8c:	bfb8      	it	lt
 800fb8e:	8165      	strhlt	r5, [r4, #10]
 800fb90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb94 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fb94:	b510      	push	{r4, lr}
 800fb96:	4604      	mov	r4, r0
 800fb98:	302c      	adds	r0, #44	; 0x2c
 800fb9a:	f003 fce4 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fb9e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fba2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fba6:	4620      	mov	r0, r4
 800fba8:	f7ff ffc8 	bl	800fb3c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fbac:	bd10      	pop	{r4, pc}
	...

0800fbb0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fbb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fbb2:	4604      	mov	r4, r0
 800fbb4:	4626      	mov	r6, r4
 800fbb6:	2500      	movs	r5, #0
 800fbb8:	f7ff ffa8 	bl	800fb0c <_ZN8touchgfx8DrawableC1Ev>
 800fbbc:	4b23      	ldr	r3, [pc, #140]	; (800fc4c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fbbe:	62a5      	str	r5, [r4, #40]	; 0x28
 800fbc0:	f846 3b2c 	str.w	r3, [r6], #44
 800fbc4:	2226      	movs	r2, #38	; 0x26
 800fbc6:	4629      	mov	r1, r5
 800fbc8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fbcc:	4630      	mov	r0, r6
 800fbce:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fbd2:	f01b fa9e 	bl	802b112 <memset>
 800fbd6:	4630      	mov	r0, r6
 800fbd8:	f7ff ff98 	bl	800fb0c <_ZN8touchgfx8DrawableC1Ev>
 800fbdc:	a902      	add	r1, sp, #8
 800fbde:	4b1c      	ldr	r3, [pc, #112]	; (800fc50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fbe0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fbe2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fbe6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fbea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fbee:	4630      	mov	r0, r6
 800fbf0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fbf4:	f003 fcb7 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fbf8:	4638      	mov	r0, r7
 800fbfa:	f7ff ff87 	bl	800fb0c <_ZN8touchgfx8DrawableC1Ev>
 800fbfe:	4b15      	ldr	r3, [pc, #84]	; (800fc54 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fc00:	65a3      	str	r3, [r4, #88]	; 0x58
 800fc02:	2364      	movs	r3, #100	; 0x64
 800fc04:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fc08:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fc0c:	4b12      	ldr	r3, [pc, #72]	; (800fc58 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fc0e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fc12:	4629      	mov	r1, r5
 800fc14:	4630      	mov	r0, r6
 800fc16:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fc1a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fc1e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fc22:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fc26:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fc2a:	f7f2 fa81 	bl	8002130 <_ZN8touchgfx8Drawable4setXEs>
 800fc2e:	4629      	mov	r1, r5
 800fc30:	4630      	mov	r0, r6
 800fc32:	f7f2 fa7f 	bl	8002134 <_ZN8touchgfx8Drawable4setYEs>
 800fc36:	4631      	mov	r1, r6
 800fc38:	4620      	mov	r0, r4
 800fc3a:	f000 ff04 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fc3e:	4620      	mov	r0, r4
 800fc40:	4639      	mov	r1, r7
 800fc42:	f000 ff00 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fc46:	4620      	mov	r0, r4
 800fc48:	b003      	add	sp, #12
 800fc4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc4c:	0802ef7c 	.word	0x0802ef7c
 800fc50:	0802f808 	.word	0x0802f808
 800fc54:	0802f2b4 	.word	0x0802f2b4
 800fc58:	08017cbf 	.word	0x08017cbf

0800fc5c <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 800fc5c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800fc60:	4770      	bx	lr

0800fc62 <_ZNK8touchgfx12DrawableList11getCircularEv>:
 800fc62:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800fc66:	4770      	bx	lr

0800fc68 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 800fc68:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 800fc6c:	4770      	bx	lr

0800fc6e <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 800fc6e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800fc70:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800fc72:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 800fc76:	b200      	sxth	r0, r0
 800fc78:	4770      	bx	lr

0800fc7a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 800fc7a:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 800fc7e:	4770      	bx	lr

0800fc80 <_ZN8touchgfx12DrawableListD1Ev>:
 800fc80:	4770      	bx	lr

0800fc82 <_ZN8touchgfx12DrawableListD0Ev>:
 800fc82:	b510      	push	{r4, lr}
 800fc84:	214c      	movs	r1, #76	; 0x4c
 800fc86:	4604      	mov	r4, r0
 800fc88:	f01a fa2b 	bl	802a0e2 <_ZdlPvj>
 800fc8c:	4620      	mov	r0, r4
 800fc8e:	bd10      	pop	{r4, pc}

0800fc90 <_ZN8touchgfx12DrawableListC1Ev>:
 800fc90:	2101      	movs	r1, #1
 800fc92:	2200      	movs	r2, #0
 800fc94:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800fc98:	4910      	ldr	r1, [pc, #64]	; (800fcdc <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 800fc9a:	8082      	strh	r2, [r0, #4]
 800fc9c:	80c2      	strh	r2, [r0, #6]
 800fc9e:	8102      	strh	r2, [r0, #8]
 800fca0:	8142      	strh	r2, [r0, #10]
 800fca2:	8182      	strh	r2, [r0, #12]
 800fca4:	81c2      	strh	r2, [r0, #14]
 800fca6:	8202      	strh	r2, [r0, #16]
 800fca8:	8242      	strh	r2, [r0, #18]
 800fcaa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fcae:	61c2      	str	r2, [r0, #28]
 800fcb0:	8402      	strh	r2, [r0, #32]
 800fcb2:	8442      	strh	r2, [r0, #34]	; 0x22
 800fcb4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fcb8:	6282      	str	r2, [r0, #40]	; 0x28
 800fcba:	6001      	str	r1, [r0, #0]
 800fcbc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800fcc0:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800fcc4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 800fcc8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 800fccc:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 800fcd0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800fcd4:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 800fcd8:	4770      	bx	lr
 800fcda:	bf00      	nop
 800fcdc:	0802f050 	.word	0x0802f050

0800fce0 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 800fce0:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 800fce4:	8681      	strh	r1, [r0, #52]	; 0x34
 800fce6:	86c2      	strh	r2, [r0, #54]	; 0x36
 800fce8:	4770      	bx	lr

0800fcea <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 800fcea:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 800fcee:	4770      	bx	lr

0800fcf0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 800fcf0:	b538      	push	{r3, r4, r5, lr}
 800fcf2:	4605      	mov	r5, r0
 800fcf4:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fcf6:	b308      	cbz	r0, 800fd3c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 800fcf8:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800fcfc:	2a00      	cmp	r2, #0
 800fcfe:	dd21      	ble.n	800fd44 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 800fd00:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800fd04:	b1db      	cbz	r3, 800fd3e <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 800fd06:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800fd0a:	1e63      	subs	r3, r4, #1
 800fd0c:	1e54      	subs	r4, r2, #1
 800fd0e:	441c      	add	r4, r3
 800fd10:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 800fd14:	fb94 f4f2 	sdiv	r4, r4, r2
 800fd18:	3401      	adds	r4, #1
 800fd1a:	b224      	sxth	r4, r4
 800fd1c:	b923      	cbnz	r3, 800fd28 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 800fd1e:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 800fd22:	429c      	cmp	r4, r3
 800fd24:	bfa8      	it	ge
 800fd26:	461c      	movge	r4, r3
 800fd28:	6803      	ldr	r3, [r0, #0]
 800fd2a:	68db      	ldr	r3, [r3, #12]
 800fd2c:	4798      	blx	r3
 800fd2e:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 800fd32:	1ac0      	subs	r0, r0, r3
 800fd34:	42a0      	cmp	r0, r4
 800fd36:	bfa8      	it	ge
 800fd38:	4620      	movge	r0, r4
 800fd3a:	b200      	sxth	r0, r0
 800fd3c:	bd38      	pop	{r3, r4, r5, pc}
 800fd3e:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 800fd42:	e7e2      	b.n	800fd0a <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 800fd44:	2000      	movs	r0, #0
 800fd46:	e7f9      	b.n	800fd3c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

0800fd48 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 800fd48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd4c:	4604      	mov	r4, r0
 800fd4e:	460d      	mov	r5, r1
 800fd50:	6321      	str	r1, [r4, #48]	; 0x30
 800fd52:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 800fd56:	2b00      	cmp	r3, #0
 800fd58:	f000 80e8 	beq.w	800ff2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fd5c:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800fd60:	2b00      	cmp	r3, #0
 800fd62:	f000 80e3 	beq.w	800ff2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fd66:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 800fd6a:	2b00      	cmp	r3, #0
 800fd6c:	f000 80de 	beq.w	800ff2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fd70:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fd72:	2800      	cmp	r0, #0
 800fd74:	f000 80da 	beq.w	800ff2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fd78:	6803      	ldr	r3, [r0, #0]
 800fd7a:	68db      	ldr	r3, [r3, #12]
 800fd7c:	4798      	blx	r3
 800fd7e:	2800      	cmp	r0, #0
 800fd80:	f000 80d4 	beq.w	800ff2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fd84:	2d00      	cmp	r5, #0
 800fd86:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fd8a:	bfc1      	itttt	gt
 800fd8c:	fb95 f2f1 	sdivgt	r2, r5, r1
 800fd90:	3201      	addgt	r2, #1
 800fd92:	4253      	neggt	r3, r2
 800fd94:	fb01 5512 	mlsgt	r5, r1, r2, r5
 800fd98:	f1c1 0200 	rsb	r2, r1, #0
 800fd9c:	bfcc      	ite	gt
 800fd9e:	b21b      	sxthgt	r3, r3
 800fda0:	2300      	movle	r3, #0
 800fda2:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 800fda6:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 800fdaa:	42aa      	cmp	r2, r5
 800fdac:	bfa1      	itttt	ge
 800fdae:	fb95 f2f1 	sdivge	r2, r5, r1
 800fdb2:	1a9b      	subge	r3, r3, r2
 800fdb4:	b21b      	sxthge	r3, r3
 800fdb6:	fb01 5512 	mlsge	r5, r1, r2, r5
 800fdba:	b14f      	cbz	r7, 800fdd0 <_ZN8touchgfx12DrawableList9setOffsetEl+0x88>
 800fdbc:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fdc0:	fb93 f1f2 	sdiv	r1, r3, r2
 800fdc4:	fb02 3311 	mls	r3, r2, r1, r3
 800fdc8:	2b00      	cmp	r3, #0
 800fdca:	db70      	blt.n	800feae <_ZN8touchgfx12DrawableList9setOffsetEl+0x166>
 800fdcc:	b21b      	sxth	r3, r3
 800fdce:	e004      	b.n	800fdda <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 800fdd0:	2b00      	cmp	r3, #0
 800fdd2:	da64      	bge.n	800fe9e <_ZN8touchgfx12DrawableList9setOffsetEl+0x156>
 800fdd4:	fb01 5513 	mls	r5, r1, r3, r5
 800fdd8:	463b      	mov	r3, r7
 800fdda:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 800fdde:	b1be      	cbz	r6, 800fe10 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fde0:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 800fde4:	459e      	cmp	lr, r3
 800fde6:	d068      	beq.n	800feba <_ZN8touchgfx12DrawableList9setOffsetEl+0x172>
 800fde8:	2601      	movs	r6, #1
 800fdea:	4286      	cmp	r6, r0
 800fdec:	da67      	bge.n	800febe <_ZN8touchgfx12DrawableList9setOffsetEl+0x176>
 800fdee:	eb0e 0106 	add.w	r1, lr, r6
 800fdf2:	199a      	adds	r2, r3, r6
 800fdf4:	b14f      	cbz	r7, 800fe0a <_ZN8touchgfx12DrawableList9setOffsetEl+0xc2>
 800fdf6:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 800fdfa:	fb91 f8fc 	sdiv	r8, r1, ip
 800fdfe:	fb0c 1118 	mls	r1, ip, r8, r1
 800fe02:	fb92 f8fc 	sdiv	r8, r2, ip
 800fe06:	fb0c 2218 	mls	r2, ip, r8, r2
 800fe0a:	428b      	cmp	r3, r1
 800fe0c:	d151      	bne.n	800feb2 <_ZN8touchgfx12DrawableList9setOffsetEl+0x16a>
 800fe0e:	4276      	negs	r6, r6
 800fe10:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800fe14:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800fe16:	1b92      	subs	r2, r2, r6
 800fe18:	4402      	add	r2, r0
 800fe1a:	2700      	movs	r7, #0
 800fe1c:	fb92 f1f0 	sdiv	r1, r2, r0
 800fe20:	fb00 2011 	mls	r0, r0, r1, r2
 800fe24:	87e0      	strh	r0, [r4, #62]	; 0x3e
 800fe26:	b2ad      	uxth	r5, r5
 800fe28:	46ba      	mov	sl, r7
 800fe2a:	f04f 0b01 	mov.w	fp, #1
 800fe2e:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800fe32:	42ba      	cmp	r2, r7
 800fe34:	dd77      	ble.n	800ff26 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1de>
 800fe36:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800fe3a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800fe3c:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800fe40:	443b      	add	r3, r7
 800fe42:	fb93 f8f2 	sdiv	r8, r3, r2
 800fe46:	fb02 3818 	mls	r8, r2, r8, r3
 800fe4a:	fa1f f888 	uxth.w	r8, r8
 800fe4e:	6803      	ldr	r3, [r0, #0]
 800fe50:	4441      	add	r1, r8
 800fe52:	689b      	ldr	r3, [r3, #8]
 800fe54:	b209      	sxth	r1, r1
 800fe56:	4798      	blx	r3
 800fe58:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800fe5c:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 800fe60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fe62:	6802      	ldr	r2, [r0, #0]
 800fe64:	4681      	mov	r9, r0
 800fe66:	fa1f fe87 	uxth.w	lr, r7
 800fe6a:	b351      	cbz	r1, 800fec2 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17a>
 800fe6c:	18e9      	adds	r1, r5, r3
 800fe6e:	fb1c 110e 	smlabb	r1, ip, lr, r1
 800fe72:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800fe74:	b209      	sxth	r1, r1
 800fe76:	2200      	movs	r2, #0
 800fe78:	4798      	blx	r3
 800fe7a:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800fe7e:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 800fe82:	443b      	add	r3, r7
 800fe84:	b322      	cbz	r2, 800fed0 <_ZN8touchgfx12DrawableList9setOffsetEl+0x188>
 800fe86:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fe8a:	fb93 f1f2 	sdiv	r1, r3, r2
 800fe8e:	fb02 3311 	mls	r3, r2, r1, r3
 800fe92:	2b00      	cmp	r3, #0
 800fe94:	da22      	bge.n	800fedc <_ZN8touchgfx12DrawableList9setOffsetEl+0x194>
 800fe96:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 800fe9a:	3701      	adds	r7, #1
 800fe9c:	e7c7      	b.n	800fe2e <_ZN8touchgfx12DrawableList9setOffsetEl+0xe6>
 800fe9e:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fea2:	18c6      	adds	r6, r0, r3
 800fea4:	4296      	cmp	r6, r2
 800fea6:	dd98      	ble.n	800fdda <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 800fea8:	1b92      	subs	r2, r2, r6
 800feaa:	fb01 5502 	mla	r5, r1, r2, r5
 800feae:	4413      	add	r3, r2
 800feb0:	e78c      	b.n	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x84>
 800feb2:	4596      	cmp	lr, r2
 800feb4:	d0ac      	beq.n	800fe10 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800feb6:	3601      	adds	r6, #1
 800feb8:	e797      	b.n	800fdea <_ZN8touchgfx12DrawableList9setOffsetEl+0xa2>
 800feba:	2600      	movs	r6, #0
 800febc:	e7a8      	b.n	800fe10 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800febe:	4606      	mov	r6, r0
 800fec0:	e7a6      	b.n	800fe10 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fec2:	442b      	add	r3, r5
 800fec4:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 800fec8:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800feca:	fa0f f28c 	sxth.w	r2, ip
 800fece:	e7d3      	b.n	800fe78 <_ZN8touchgfx12DrawableList9setOffsetEl+0x130>
 800fed0:	2b00      	cmp	r3, #0
 800fed2:	dbe0      	blt.n	800fe96 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 800fed4:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fed8:	4293      	cmp	r3, r2
 800feda:	dadc      	bge.n	800fe96 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 800fedc:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 800fee0:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800fee4:	b132      	cbz	r2, 800fef4 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 800fee6:	42be      	cmp	r6, r7
 800fee8:	dc04      	bgt.n	800fef4 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 800feea:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800feee:	4432      	add	r2, r6
 800fef0:	4297      	cmp	r7, r2
 800fef2:	dbd2      	blt.n	800fe9a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800fef4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800fef6:	9301      	str	r3, [sp, #4]
 800fef8:	6802      	ldr	r2, [r0, #0]
 800fefa:	68d2      	ldr	r2, [r2, #12]
 800fefc:	4790      	blx	r2
 800fefe:	2800      	cmp	r0, #0
 800ff00:	d0cb      	beq.n	800fe9a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800ff02:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800ff04:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800ff08:	6801      	ldr	r1, [r0, #0]
 800ff0a:	9b01      	ldr	r3, [sp, #4]
 800ff0c:	4442      	add	r2, r8
 800ff0e:	b21b      	sxth	r3, r3
 800ff10:	f8d1 8008 	ldr.w	r8, [r1, #8]
 800ff14:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800ff16:	b212      	sxth	r2, r2
 800ff18:	47c0      	blx	r8
 800ff1a:	f8d9 3000 	ldr.w	r3, [r9]
 800ff1e:	4648      	mov	r0, r9
 800ff20:	699b      	ldr	r3, [r3, #24]
 800ff22:	4798      	blx	r3
 800ff24:	e7b9      	b.n	800fe9a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800ff26:	2301      	movs	r3, #1
 800ff28:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ff2c:	b003      	add	sp, #12
 800ff2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff32 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 800ff32:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ff34:	4770      	bx	lr

0800ff36 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 800ff36:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff38:	1c54      	adds	r4, r2, #1
 800ff3a:	db2f      	blt.n	800ff9c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800ff3c:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 800ff40:	4294      	cmp	r4, r2
 800ff42:	dd2b      	ble.n	800ff9c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800ff44:	b354      	cbz	r4, 800ff9c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800ff46:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 800ff4a:	b33e      	cbz	r6, 800ff9c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800ff4c:	1c53      	adds	r3, r2, #1
 800ff4e:	d008      	beq.n	800ff62 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 800ff50:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 800ff54:	1ad2      	subs	r2, r2, r3
 800ff56:	4422      	add	r2, r4
 800ff58:	fb92 f3f4 	sdiv	r3, r2, r4
 800ff5c:	fb04 2213 	mls	r2, r4, r3, r2
 800ff60:	b212      	sxth	r2, r2
 800ff62:	3201      	adds	r2, #1
 800ff64:	b212      	sxth	r2, r2
 800ff66:	4294      	cmp	r4, r2
 800ff68:	dd18      	ble.n	800ff9c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800ff6a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800ff6c:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 800ff70:	b295      	uxth	r5, r2
 800ff72:	442b      	add	r3, r5
 800ff74:	b21b      	sxth	r3, r3
 800ff76:	b127      	cbz	r7, 800ff82 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 800ff78:	fb93 f7f6 	sdiv	r7, r3, r6
 800ff7c:	fb06 3317 	mls	r3, r6, r7, r3
 800ff80:	b21b      	sxth	r3, r3
 800ff82:	428b      	cmp	r3, r1
 800ff84:	d108      	bne.n	800ff98 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 800ff86:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 800ff8a:	4402      	add	r2, r0
 800ff8c:	fb92 f0f4 	sdiv	r0, r2, r4
 800ff90:	fb04 2010 	mls	r0, r4, r0, r2
 800ff94:	b200      	sxth	r0, r0
 800ff96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff98:	1c6a      	adds	r2, r5, #1
 800ff9a:	e7e3      	b.n	800ff64 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 800ff9c:	f04f 30ff 	mov.w	r0, #4294967295
 800ffa0:	e7f9      	b.n	800ff96 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

0800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 800ffa2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffa6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800ffa8:	4604      	mov	r4, r0
 800ffaa:	b913      	cbnz	r3, 800ffb2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 800ffac:	8743      	strh	r3, [r0, #58]	; 0x3a
 800ffae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ffb2:	f7ff fe9d 	bl	800fcf0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 800ffb6:	8760      	strh	r0, [r4, #58]	; 0x3a
 800ffb8:	4620      	mov	r0, r4
 800ffba:	f000 fd51 	bl	8010a60 <_ZN8touchgfx9Container9removeAllEv>
 800ffbe:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800ffc2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ffc4:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800ffc6:	2a00      	cmp	r2, #0
 800ffc8:	d032      	beq.n	8010030 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8e>
 800ffca:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 800ffce:	fa0f f886 	sxth.w	r8, r6
 800ffd2:	f9b4 600a 	ldrsh.w	r6, [r4, #10]
 800ffd6:	2700      	movs	r7, #0
 800ffd8:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 800ffdc:	42bb      	cmp	r3, r7
 800ffde:	dd2d      	ble.n	801003c <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x9a>
 800ffe0:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ffe2:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800ffe6:	6803      	ldr	r3, [r0, #0]
 800ffe8:	4439      	add	r1, r7
 800ffea:	689b      	ldr	r3, [r3, #8]
 800ffec:	b209      	sxth	r1, r1
 800ffee:	4798      	blx	r3
 800fff0:	6803      	ldr	r3, [r0, #0]
 800fff2:	4605      	mov	r5, r0
 800fff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fff6:	2100      	movs	r1, #0
 800fff8:	4798      	blx	r3
 800fffa:	682b      	ldr	r3, [r5, #0]
 800fffc:	2100      	movs	r1, #0
 800fffe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010000:	4628      	mov	r0, r5
 8010002:	4798      	blx	r3
 8010004:	682b      	ldr	r3, [r5, #0]
 8010006:	4641      	mov	r1, r8
 8010008:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801000a:	4628      	mov	r0, r5
 801000c:	4798      	blx	r3
 801000e:	682b      	ldr	r3, [r5, #0]
 8010010:	4628      	mov	r0, r5
 8010012:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010014:	4631      	mov	r1, r6
 8010016:	4798      	blx	r3
 8010018:	6968      	ldr	r0, [r5, #20]
 801001a:	b118      	cbz	r0, 8010024 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x82>
 801001c:	6803      	ldr	r3, [r0, #0]
 801001e:	4629      	mov	r1, r5
 8010020:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010022:	4798      	blx	r3
 8010024:	4629      	mov	r1, r5
 8010026:	4620      	mov	r0, r4
 8010028:	f000 fd0d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801002c:	3701      	adds	r7, #1
 801002e:	e7d3      	b.n	800ffd8 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x36>
 8010030:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 8010034:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8010038:	b236      	sxth	r6, r6
 801003a:	e7cc      	b.n	800ffd6 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x34>
 801003c:	2300      	movs	r3, #0
 801003e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010042:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010044:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010046:	4620      	mov	r0, r4
 8010048:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801004c:	f7ff be7c 	b.w	800fd48 <_ZN8touchgfx12DrawableList9setOffsetEl>

08010050 <_ZN8touchgfx12DrawableList8setWidthEs>:
 8010050:	8101      	strh	r1, [r0, #8]
 8010052:	f7ff bfa6 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010056 <_ZN8touchgfx12DrawableList9setHeightEs>:
 8010056:	8141      	strh	r1, [r0, #10]
 8010058:	f7ff bfa3 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0801005c <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 801005c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010060:	b121      	cbz	r1, 801006c <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 8010062:	b92b      	cbnz	r3, 8010070 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 8010064:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8010068:	f7ff bf9b 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 801006c:	2b00      	cmp	r3, #0
 801006e:	d1f9      	bne.n	8010064 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 8010070:	4770      	bx	lr

08010072 <_ZN8touchgfx12DrawableList11setCircularEb>:
 8010072:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8010076:	b121      	cbz	r1, 8010082 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 8010078:	b92b      	cbnz	r3, 8010086 <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 801007a:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 801007e:	f7ff bf90 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 8010082:	2b00      	cmp	r3, #0
 8010084:	d1f9      	bne.n	801007a <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 8010086:	4770      	bx	lr

08010088 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 8010088:	b410      	push	{r4}
 801008a:	6441      	str	r1, [r0, #68]	; 0x44
 801008c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8010090:	6483      	str	r3, [r0, #72]	; 0x48
 8010092:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010096:	f7ff bf84 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0801009a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 801009a:	8701      	strh	r1, [r0, #56]	; 0x38
 801009c:	f7ff bf81 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080100a0 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 80100a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100a2:	4604      	mov	r4, r0
 80100a4:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80100a6:	460e      	mov	r6, r1
 80100a8:	b1c0      	cbz	r0, 80100dc <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 80100aa:	6803      	ldr	r3, [r0, #0]
 80100ac:	68db      	ldr	r3, [r3, #12]
 80100ae:	4798      	blx	r3
 80100b0:	b1a0      	cbz	r0, 80100dc <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 80100b2:	f04f 35ff 	mov.w	r5, #4294967295
 80100b6:	462a      	mov	r2, r5
 80100b8:	4631      	mov	r1, r6
 80100ba:	4620      	mov	r0, r4
 80100bc:	f7ff ff3b 	bl	800ff36 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 80100c0:	1c43      	adds	r3, r0, #1
 80100c2:	4605      	mov	r5, r0
 80100c4:	d00a      	beq.n	80100dc <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 80100c6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80100c8:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 80100cc:	6803      	ldr	r3, [r0, #0]
 80100ce:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80100d0:	689f      	ldr	r7, [r3, #8]
 80100d2:	442a      	add	r2, r5
 80100d4:	4633      	mov	r3, r6
 80100d6:	b212      	sxth	r2, r2
 80100d8:	47b8      	blx	r7
 80100da:	e7ec      	b.n	80100b6 <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 80100dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080100de <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 80100de:	b570      	push	{r4, r5, r6, lr}
 80100e0:	790b      	ldrb	r3, [r1, #4]
 80100e2:	4604      	mov	r4, r0
 80100e4:	2b00      	cmp	r3, #0
 80100e6:	d158      	bne.n	801019a <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 80100e8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80100ec:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 80100f0:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 80100f4:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 80100f8:	6803      	ldr	r3, [r0, #0]
 80100fa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80100fe:	4798      	blx	r3
 8010100:	6823      	ldr	r3, [r4, #0]
 8010102:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8010106:	4601      	mov	r1, r0
 8010108:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801010c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010110:	4620      	mov	r0, r4
 8010112:	4798      	blx	r3
 8010114:	4601      	mov	r1, r0
 8010116:	4620      	mov	r0, r4
 8010118:	47a8      	blx	r5
 801011a:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 801011e:	2800      	cmp	r0, #0
 8010120:	f000 809f 	beq.w	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010124:	6803      	ldr	r3, [r0, #0]
 8010126:	68db      	ldr	r3, [r3, #12]
 8010128:	4798      	blx	r3
 801012a:	2800      	cmp	r0, #0
 801012c:	f000 8099 	beq.w	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010130:	6823      	ldr	r3, [r4, #0]
 8010132:	4620      	mov	r0, r4
 8010134:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010138:	4798      	blx	r3
 801013a:	b358      	cbz	r0, 8010194 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 801013c:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8010140:	6823      	ldr	r3, [r4, #0]
 8010142:	4620      	mov	r0, r4
 8010144:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010148:	4798      	blx	r3
 801014a:	6823      	ldr	r3, [r4, #0]
 801014c:	1a2d      	subs	r5, r5, r0
 801014e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010152:	4620      	mov	r0, r4
 8010154:	4798      	blx	r3
 8010156:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 801015a:	6823      	ldr	r3, [r4, #0]
 801015c:	fb16 f600 	smulbb	r6, r6, r0
 8010160:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010164:	4620      	mov	r0, r4
 8010166:	4798      	blx	r3
 8010168:	b120      	cbz	r0, 8010174 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 801016a:	4435      	add	r5, r6
 801016c:	fb95 f1f6 	sdiv	r1, r5, r6
 8010170:	fb06 5511 	mls	r5, r6, r1, r5
 8010174:	2d00      	cmp	r5, #0
 8010176:	db74      	blt.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010178:	42b5      	cmp	r5, r6
 801017a:	da72      	bge.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801017c:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8010180:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010184:	fb95 f1f1 	sdiv	r1, r5, r1
 8010188:	6803      	ldr	r3, [r0, #0]
 801018a:	b209      	sxth	r1, r1
 801018c:	689b      	ldr	r3, [r3, #8]
 801018e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010192:	4718      	bx	r3
 8010194:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010198:	e7d2      	b.n	8010140 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 801019a:	2b01      	cmp	r3, #1
 801019c:	d161      	bne.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801019e:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 80101a2:	2b00      	cmp	r3, #0
 80101a4:	d14a      	bne.n	801023c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 80101a6:	6803      	ldr	r3, [r0, #0]
 80101a8:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80101ac:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 80101b0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80101b4:	4798      	blx	r3
 80101b6:	4601      	mov	r1, r0
 80101b8:	4620      	mov	r0, r4
 80101ba:	47b0      	blx	r6
 80101bc:	4601      	mov	r1, r0
 80101be:	4620      	mov	r0, r4
 80101c0:	47a8      	blx	r5
 80101c2:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 80101c6:	2800      	cmp	r0, #0
 80101c8:	d04b      	beq.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80101ca:	6803      	ldr	r3, [r0, #0]
 80101cc:	68db      	ldr	r3, [r3, #12]
 80101ce:	4798      	blx	r3
 80101d0:	2800      	cmp	r0, #0
 80101d2:	d046      	beq.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80101d4:	6823      	ldr	r3, [r4, #0]
 80101d6:	4620      	mov	r0, r4
 80101d8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80101dc:	4798      	blx	r3
 80101de:	b330      	cbz	r0, 801022e <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 80101e0:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 80101e4:	6823      	ldr	r3, [r4, #0]
 80101e6:	4620      	mov	r0, r4
 80101e8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80101ec:	4798      	blx	r3
 80101ee:	6823      	ldr	r3, [r4, #0]
 80101f0:	1a2d      	subs	r5, r5, r0
 80101f2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80101f6:	4620      	mov	r0, r4
 80101f8:	4798      	blx	r3
 80101fa:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 80101fe:	6823      	ldr	r3, [r4, #0]
 8010200:	fb16 f600 	smulbb	r6, r6, r0
 8010204:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010208:	4620      	mov	r0, r4
 801020a:	4798      	blx	r3
 801020c:	b190      	cbz	r0, 8010234 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 801020e:	19a9      	adds	r1, r5, r6
 8010210:	fb91 f3f6 	sdiv	r3, r1, r6
 8010214:	fb06 1113 	mls	r1, r6, r3, r1
 8010218:	2900      	cmp	r1, #0
 801021a:	db22      	blt.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801021c:	42b1      	cmp	r1, r6
 801021e:	da20      	bge.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010220:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8010224:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8010228:	fb91 f1f3 	sdiv	r1, r1, r3
 801022c:	e7ac      	b.n	8010188 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 801022e:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010232:	e7d7      	b.n	80101e4 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 8010234:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 8010238:	1a69      	subs	r1, r5, r1
 801023a:	e7ed      	b.n	8010218 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 801023c:	2b02      	cmp	r3, #2
 801023e:	d110      	bne.n	8010262 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010240:	6803      	ldr	r3, [r0, #0]
 8010242:	e9d3 6532 	ldrd	r6, r5, [r3, #200]	; 0xc8
 8010246:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801024a:	4798      	blx	r3
 801024c:	4601      	mov	r1, r0
 801024e:	4620      	mov	r0, r4
 8010250:	47b0      	blx	r6
 8010252:	462b      	mov	r3, r5
 8010254:	4601      	mov	r1, r0
 8010256:	f04f 32ff 	mov.w	r2, #4294967295
 801025a:	4620      	mov	r0, r4
 801025c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010260:	4718      	bx	r3
 8010262:	bd70      	pop	{r4, r5, r6, pc}

08010264 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 8010264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010268:	6803      	ldr	r3, [r0, #0]
 801026a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801026e:	4605      	mov	r5, r0
 8010270:	460e      	mov	r6, r1
 8010272:	4617      	mov	r7, r2
 8010274:	4798      	blx	r3
 8010276:	4604      	mov	r4, r0
 8010278:	b9d8      	cbnz	r0, 80102b2 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 801027a:	682b      	ldr	r3, [r5, #0]
 801027c:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 8010280:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010284:	42be      	cmp	r6, r7
 8010286:	4628      	mov	r0, r5
 8010288:	bfa8      	it	ge
 801028a:	463e      	movge	r6, r7
 801028c:	4798      	blx	r3
 801028e:	4580      	cmp	r8, r0
 8010290:	da07      	bge.n	80102a2 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 8010292:	682b      	ldr	r3, [r5, #0]
 8010294:	4628      	mov	r0, r5
 8010296:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 801029a:	4798      	blx	r3
 801029c:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 80102a0:	1b04      	subs	r4, r0, r4
 80102a2:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 80102a6:	434c      	muls	r4, r1
 80102a8:	4264      	negs	r4, r4
 80102aa:	1be1      	subs	r1, r4, r7
 80102ac:	428e      	cmp	r6, r1
 80102ae:	bfb8      	it	lt
 80102b0:	460e      	movlt	r6, r1
 80102b2:	4630      	mov	r0, r6
 80102b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102b8 <_ZN8touchgfx10ScrollListD1Ev>:
 80102b8:	4770      	bx	lr

080102ba <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 80102ba:	b570      	push	{r4, r5, r6, lr}
 80102bc:	460d      	mov	r5, r1
 80102be:	4604      	mov	r4, r0
 80102c0:	4616      	mov	r6, r2
 80102c2:	f000 fa8d 	bl	80107e0 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 80102c6:	682b      	ldr	r3, [r5, #0]
 80102c8:	4628      	mov	r0, r5
 80102ca:	68db      	ldr	r3, [r3, #12]
 80102cc:	4798      	blx	r3
 80102ce:	4633      	mov	r3, r6
 80102d0:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 80102d4:	4629      	mov	r1, r5
 80102d6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80102da:	2200      	movs	r2, #0
 80102dc:	f7ff fed4 	bl	8010088 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 80102e0:	6823      	ldr	r3, [r4, #0]
 80102e2:	4620      	mov	r0, r4
 80102e4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80102e8:	2100      	movs	r1, #0
 80102ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102ee:	4718      	bx	r3

080102f0 <_ZN8touchgfx10ScrollBase10initializeEv>:
 80102f0:	302c      	adds	r0, #44	; 0x2c
 80102f2:	f7ff be56 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080102f6 <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 80102f6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80102fa:	6803      	ldr	r3, [r0, #0]
 80102fc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010300:	4688      	mov	r8, r1
 8010302:	4604      	mov	r4, r0
 8010304:	4798      	blx	r3
 8010306:	4601      	mov	r1, r0
 8010308:	4620      	mov	r0, r4
 801030a:	f000 fab9 	bl	8010880 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 801030e:	f1b8 0f00 	cmp.w	r8, #0
 8010312:	4605      	mov	r5, r0
 8010314:	db6d      	blt.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010316:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 801031a:	4648      	mov	r0, r9
 801031c:	f7ff fce5 	bl	800fcea <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010320:	4540      	cmp	r0, r8
 8010322:	dd66      	ble.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010324:	f9b4 607c 	ldrsh.w	r6, [r4, #124]	; 0x7c
 8010328:	2e00      	cmp	r6, #0
 801032a:	d062      	beq.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 801032c:	6823      	ldr	r3, [r4, #0]
 801032e:	f1c8 0100 	rsb	r1, r8, #0
 8010332:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010336:	4620      	mov	r0, r4
 8010338:	434e      	muls	r6, r1
 801033a:	4798      	blx	r3
 801033c:	2800      	cmp	r0, #0
 801033e:	d05b      	beq.n	80103f8 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 8010340:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 8010344:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 8010348:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 801034c:	4419      	add	r1, r3
 801034e:	1a7f      	subs	r7, r7, r1
 8010350:	4648      	mov	r0, r9
 8010352:	b23f      	sxth	r7, r7
 8010354:	f7ff fc85 	bl	800fc62 <_ZNK8touchgfx12DrawableList11getCircularEv>
 8010358:	2800      	cmp	r0, #0
 801035a:	d050      	beq.n	80103fe <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x108>
 801035c:	46aa      	mov	sl, r5
 801035e:	4651      	mov	r1, sl
 8010360:	4620      	mov	r0, r4
 8010362:	f000 fa8d 	bl	8010880 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010366:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 801036a:	4240      	negs	r0, r0
 801036c:	fb90 f0f3 	sdiv	r0, r0, r3
 8010370:	b200      	sxth	r0, r0
 8010372:	4580      	cmp	r8, r0
 8010374:	d03d      	beq.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010376:	ebaa 0a03 	sub.w	sl, sl, r3
 801037a:	1afb      	subs	r3, r7, r3
 801037c:	1aeb      	subs	r3, r5, r3
 801037e:	4553      	cmp	r3, sl
 8010380:	dded      	ble.n	801035e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 8010382:	4648      	mov	r0, r9
 8010384:	f7ff fcb1 	bl	800fcea <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010388:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 801038c:	fb00 fa01 	mul.w	sl, r0, r1
 8010390:	1a79      	subs	r1, r7, r1
 8010392:	1a69      	subs	r1, r5, r1
 8010394:	4620      	mov	r0, r4
 8010396:	f000 fa73 	bl	8010880 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 801039a:	eb06 090a 	add.w	r9, r6, sl
 801039e:	eba6 0805 	sub.w	r8, r6, r5
 80103a2:	eba9 0905 	sub.w	r9, r9, r5
 80103a6:	1b83      	subs	r3, r0, r6
 80103a8:	ea88 72e8 	eor.w	r2, r8, r8, asr #31
 80103ac:	eba6 060a 	sub.w	r6, r6, sl
 80103b0:	ea89 71e9 	eor.w	r1, r9, r9, asr #31
 80103b4:	1b80      	subs	r0, r0, r6
 80103b6:	eba1 71e9 	sub.w	r1, r1, r9, asr #31
 80103ba:	eba2 72e8 	sub.w	r2, r2, r8, asr #31
 80103be:	4291      	cmp	r1, r2
 80103c0:	bfb8      	it	lt
 80103c2:	46c8      	movlt	r8, r9
 80103c4:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 80103c8:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 80103cc:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 80103d0:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 80103d4:	4291      	cmp	r1, r2
 80103d6:	bfb8      	it	lt
 80103d8:	4603      	movlt	r3, r0
 80103da:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 80103de:	ea88 71e8 	eor.w	r1, r8, r8, asr #31
 80103e2:	eba1 71e8 	sub.w	r1, r1, r8, asr #31
 80103e6:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 80103ea:	4291      	cmp	r1, r2
 80103ec:	bfcc      	ite	gt
 80103ee:	1aed      	subgt	r5, r5, r3
 80103f0:	4445      	addle	r5, r8
 80103f2:	4628      	mov	r0, r5
 80103f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80103f8:	f9b4 700a 	ldrsh.w	r7, [r4, #10]
 80103fc:	e7a2      	b.n	8010344 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4e>
 80103fe:	42b5      	cmp	r5, r6
 8010400:	db13      	blt.n	801042a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x134>
 8010402:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 8010406:	fb97 f3f2 	sdiv	r3, r7, r2
 801040a:	b21b      	sxth	r3, r3
 801040c:	2b00      	cmp	r3, #0
 801040e:	dd05      	ble.n	801041c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 8010410:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 8010414:	b131      	cbz	r1, 8010424 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x12e>
 8010416:	3b01      	subs	r3, #1
 8010418:	fb02 6603 	mla	r6, r2, r3, r6
 801041c:	42b5      	cmp	r5, r6
 801041e:	bfa8      	it	ge
 8010420:	4635      	movge	r5, r6
 8010422:	e7e6      	b.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010424:	443e      	add	r6, r7
 8010426:	1ab6      	subs	r6, r6, r2
 8010428:	e7f8      	b.n	801041c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 801042a:	4635      	mov	r5, r6
 801042c:	e7e1      	b.n	80103f2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>

0801042e <_ZN8touchgfx10ScrollListD0Ev>:
 801042e:	b510      	push	{r4, lr}
 8010430:	21c4      	movs	r1, #196	; 0xc4
 8010432:	4604      	mov	r4, r0
 8010434:	f019 fe55 	bl	802a0e2 <_ZdlPvj>
 8010438:	4620      	mov	r0, r4
 801043a:	bd10      	pop	{r4, pc}

0801043c <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 801043c:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 8010440:	b10a      	cbz	r2, 8010446 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 8010442:	f000 b919 	b.w	8010678 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 8010446:	6803      	ldr	r3, [r0, #0]
 8010448:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801044c:	4718      	bx	r3
	...

08010450 <_ZN8touchgfx10ScrollListC1Ev>:
 8010450:	b510      	push	{r4, lr}
 8010452:	4604      	mov	r4, r0
 8010454:	f000 fa84 	bl	8010960 <_ZN8touchgfx10ScrollBaseC1Ev>
 8010458:	4b05      	ldr	r3, [pc, #20]	; (8010470 <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 801045a:	6023      	str	r3, [r4, #0]
 801045c:	2300      	movs	r3, #0
 801045e:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8010462:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 8010466:	2301      	movs	r3, #1
 8010468:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801046c:	4620      	mov	r0, r4
 801046e:	bd10      	pop	{r4, pc}
 8010470:	0802f100 	.word	0x0802f100

08010474 <_ZN8touchgfx10ScrollList13setWindowSizeEs>:
 8010474:	b570      	push	{r4, r5, r6, lr}
 8010476:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 801047a:	2b00      	cmp	r3, #0
 801047c:	4604      	mov	r4, r0
 801047e:	460d      	mov	r5, r1
 8010480:	dd19      	ble.n	80104b6 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x42>
 8010482:	6803      	ldr	r3, [r0, #0]
 8010484:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010488:	4798      	blx	r3
 801048a:	b370      	cbz	r0, 80104ea <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x76>
 801048c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010490:	f8b4 207a 	ldrh.w	r2, [r4, #122]	; 0x7a
 8010494:	f8b4 00ba 	ldrh.w	r0, [r4, #186]	; 0xba
 8010498:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 801049c:	4402      	add	r2, r0
 801049e:	1a9b      	subs	r3, r3, r2
 80104a0:	2202      	movs	r2, #2
 80104a2:	fb91 f2f2 	sdiv	r2, r1, r2
 80104a6:	fa02 f383 	sxtah	r3, r2, r3
 80104aa:	fb93 f3f1 	sdiv	r3, r3, r1
 80104ae:	b21b      	sxth	r3, r3
 80104b0:	429d      	cmp	r5, r3
 80104b2:	bfa8      	it	ge
 80104b4:	461d      	movge	r5, r3
 80104b6:	2d01      	cmp	r5, #1
 80104b8:	6823      	ldr	r3, [r4, #0]
 80104ba:	bfb8      	it	lt
 80104bc:	2501      	movlt	r5, #1
 80104be:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 80104c2:	f8d3 50cc 	ldr.w	r5, [r3, #204]	; 0xcc
 80104c6:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 80104ca:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80104ce:	4620      	mov	r0, r4
 80104d0:	4798      	blx	r3
 80104d2:	2200      	movs	r2, #0
 80104d4:	4601      	mov	r1, r0
 80104d6:	4620      	mov	r0, r4
 80104d8:	47b0      	blx	r6
 80104da:	462b      	mov	r3, r5
 80104dc:	4601      	mov	r1, r0
 80104de:	f04f 32ff 	mov.w	r2, #4294967295
 80104e2:	4620      	mov	r0, r4
 80104e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104e8:	4718      	bx	r3
 80104ea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80104ee:	e7cf      	b.n	8010490 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x1c>

080104f0 <_ZN8touchgfx10ScrollList8setWidthEs>:
 80104f0:	b510      	push	{r4, lr}
 80104f2:	4604      	mov	r4, r0
 80104f4:	f000 fa89 	bl	8010a0a <_ZN8touchgfx10ScrollBase8setWidthEs>
 80104f8:	6823      	ldr	r3, [r4, #0]
 80104fa:	4620      	mov	r0, r4
 80104fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010500:	4798      	blx	r3
 8010502:	b130      	cbz	r0, 8010512 <_ZN8touchgfx10ScrollList8setWidthEs+0x22>
 8010504:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010508:	4620      	mov	r0, r4
 801050a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801050e:	f7ff bfb1 	b.w	8010474 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 8010512:	bd10      	pop	{r4, pc}

08010514 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>:
 8010514:	b510      	push	{r4, lr}
 8010516:	4604      	mov	r4, r0
 8010518:	f000 f858 	bl	80105cc <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
 801051c:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010520:	4620      	mov	r0, r4
 8010522:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010526:	f7ff bfa5 	b.w	8010474 <_ZN8touchgfx10ScrollList13setWindowSizeEs>

0801052a <_ZN8touchgfx10ScrollList9setHeightEs>:
 801052a:	b510      	push	{r4, lr}
 801052c:	4604      	mov	r4, r0
 801052e:	f000 fa70 	bl	8010a12 <_ZN8touchgfx10ScrollBase9setHeightEs>
 8010532:	6823      	ldr	r3, [r4, #0]
 8010534:	4620      	mov	r0, r4
 8010536:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801053a:	4798      	blx	r3
 801053c:	b930      	cbnz	r0, 801054c <_ZN8touchgfx10ScrollList9setHeightEs+0x22>
 801053e:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010542:	4620      	mov	r0, r4
 8010544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010548:	f7ff bf94 	b.w	8010474 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 801054c:	bd10      	pop	{r4, pc}

0801054e <_ZN8touchgfx10ScrollList10setPaddingEss>:
 801054e:	b570      	push	{r4, r5, r6, lr}
 8010550:	6803      	ldr	r3, [r0, #0]
 8010552:	4604      	mov	r4, r0
 8010554:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010558:	460e      	mov	r6, r1
 801055a:	4615      	mov	r5, r2
 801055c:	4798      	blx	r3
 801055e:	6823      	ldr	r3, [r4, #0]
 8010560:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 8010564:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 8010568:	4601      	mov	r1, r0
 801056a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801056e:	4620      	mov	r0, r4
 8010570:	4798      	blx	r3
 8010572:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010576:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801057a:	f7ff bd12 	b.w	800ffa2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0801057e <_ZN8touchgfx10ScrollList11setSnappingEb>:
 801057e:	b570      	push	{r4, r5, r6, lr}
 8010580:	4604      	mov	r4, r0
 8010582:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 8010586:	b181      	cbz	r1, 80105aa <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 8010588:	6803      	ldr	r3, [r0, #0]
 801058a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801058e:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 8010592:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010596:	4798      	blx	r3
 8010598:	4601      	mov	r1, r0
 801059a:	4620      	mov	r0, r4
 801059c:	47b0      	blx	r6
 801059e:	462b      	mov	r3, r5
 80105a0:	4601      	mov	r1, r0
 80105a2:	4620      	mov	r0, r4
 80105a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105a8:	4718      	bx	r3
 80105aa:	bd70      	pop	{r4, r5, r6, pc}

080105ac <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 80105ac:	b570      	push	{r4, r5, r6, lr}
 80105ae:	6803      	ldr	r3, [r0, #0]
 80105b0:	4604      	mov	r4, r0
 80105b2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80105b6:	4615      	mov	r5, r2
 80105b8:	4798      	blx	r3
 80105ba:	6823      	ldr	r3, [r4, #0]
 80105bc:	462a      	mov	r2, r5
 80105be:	4601      	mov	r1, r0
 80105c0:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80105c4:	4620      	mov	r0, r4
 80105c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105ca:	4718      	bx	r3

080105cc <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 80105cc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80105d0:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 80105d4:	302c      	adds	r0, #44	; 0x2c
 80105d6:	f7ff bb83 	b.w	800fce0 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

080105da <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 80105da:	302c      	adds	r0, #44	; 0x2c
 80105dc:	f7ff bb85 	b.w	800fcea <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

080105e0 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 80105e0:	b209      	sxth	r1, r1
 80105e2:	302c      	adds	r0, #44	; 0x2c
 80105e4:	f7ff bd5c 	b.w	80100a0 <_ZN8touchgfx12DrawableList11itemChangedEs>

080105e8 <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 80105e8:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 80105ec:	302c      	adds	r0, #44	; 0x2c
 80105ee:	4419      	add	r1, r3
 80105f0:	f7ff bbaa 	b.w	800fd48 <_ZN8touchgfx12DrawableList9setOffsetEl>

080105f4 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 80105f4:	b510      	push	{r4, lr}
 80105f6:	4604      	mov	r4, r0
 80105f8:	302c      	adds	r0, #44	; 0x2c
 80105fa:	f7ff fc9a 	bl	800ff32 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 80105fe:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 8010602:	1ac0      	subs	r0, r0, r3
 8010604:	bd10      	pop	{r4, pc}

08010606 <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 8010606:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010608:	6803      	ldr	r3, [r0, #0]
 801060a:	4604      	mov	r4, r0
 801060c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010610:	4615      	mov	r5, r2
 8010612:	460f      	mov	r7, r1
 8010614:	4798      	blx	r3
 8010616:	6823      	ldr	r3, [r4, #0]
 8010618:	4606      	mov	r6, r0
 801061a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801061e:	4639      	mov	r1, r7
 8010620:	4620      	mov	r0, r4
 8010622:	4798      	blx	r3
 8010624:	2d00      	cmp	r5, #0
 8010626:	eba0 0306 	sub.w	r3, r0, r6
 801062a:	bfb8      	it	lt
 801062c:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 8010630:	2b00      	cmp	r3, #0
 8010632:	bfb8      	it	lt
 8010634:	425b      	neglt	r3, r3
 8010636:	42ab      	cmp	r3, r5
 8010638:	bfa8      	it	ge
 801063a:	462b      	movge	r3, r5
 801063c:	b21a      	sxth	r2, r3
 801063e:	2a00      	cmp	r2, #0
 8010640:	4601      	mov	r1, r0
 8010642:	dc08      	bgt.n	8010656 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x50>
 8010644:	6823      	ldr	r3, [r4, #0]
 8010646:	4620      	mov	r0, r4
 8010648:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801064c:	4798      	blx	r3
 801064e:	2300      	movs	r3, #0
 8010650:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010654:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010656:	2300      	movs	r3, #0
 8010658:	e9c4 3228 	strd	r3, r2, [r4, #160]	; 0xa0
 801065c:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8010660:	2b01      	cmp	r3, #1
 8010662:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 8010666:	d0f5      	beq.n	8010654 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 8010668:	f005 fc86 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 801066c:	4621      	mov	r1, r4
 801066e:	3004      	adds	r0, #4
 8010670:	f005 fd78 	bl	8016164 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010674:	2301      	movs	r3, #1
 8010676:	e7eb      	b.n	8010650 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4a>

08010678 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 8010678:	b538      	push	{r3, r4, r5, lr}
 801067a:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 801067e:	4605      	mov	r5, r0
 8010680:	460c      	mov	r4, r1
 8010682:	b193      	cbz	r3, 80106aa <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 8010684:	6803      	ldr	r3, [r0, #0]
 8010686:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801068a:	4798      	blx	r3
 801068c:	4602      	mov	r2, r0
 801068e:	b170      	cbz	r0, 80106ae <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 8010690:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010694:	2c00      	cmp	r4, #0
 8010696:	f04f 0102 	mov.w	r1, #2
 801069a:	fb93 f1f1 	sdiv	r1, r3, r1
 801069e:	bfb4      	ite	lt
 80106a0:	1a64      	sublt	r4, r4, r1
 80106a2:	1864      	addge	r4, r4, r1
 80106a4:	fb94 f4f3 	sdiv	r4, r4, r3
 80106a8:	435c      	muls	r4, r3
 80106aa:	4620      	mov	r0, r4
 80106ac:	bd38      	pop	{r3, r4, r5, pc}
 80106ae:	682b      	ldr	r3, [r5, #0]
 80106b0:	4621      	mov	r1, r4
 80106b2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80106b6:	4628      	mov	r0, r5
 80106b8:	4798      	blx	r3
 80106ba:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 80106be:	2302      	movs	r3, #2
 80106c0:	fb94 f3f3 	sdiv	r3, r4, r3
 80106c4:	1ac0      	subs	r0, r0, r3
 80106c6:	fb90 f0f4 	sdiv	r0, r0, r4
 80106ca:	4344      	muls	r4, r0
 80106cc:	e7ed      	b.n	80106aa <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

080106ce <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 80106ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106d2:	6803      	ldr	r3, [r0, #0]
 80106d4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80106d8:	460d      	mov	r5, r1
 80106da:	4604      	mov	r4, r0
 80106dc:	4798      	blx	r3
 80106de:	42a8      	cmp	r0, r5
 80106e0:	d020      	beq.n	8010724 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 80106e2:	4629      	mov	r1, r5
 80106e4:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80106e8:	f7ff fcd7 	bl	801009a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 80106ec:	6823      	ldr	r3, [r4, #0]
 80106ee:	4620      	mov	r0, r4
 80106f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80106f4:	4798      	blx	r3
 80106f6:	4605      	mov	r5, r0
 80106f8:	b9a0      	cbnz	r0, 8010724 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 80106fa:	6823      	ldr	r3, [r4, #0]
 80106fc:	4620      	mov	r0, r4
 80106fe:	f8d3 60cc 	ldr.w	r6, [r3, #204]	; 0xcc
 8010702:	f8d3 70c4 	ldr.w	r7, [r3, #196]	; 0xc4
 8010706:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801070a:	4798      	blx	r3
 801070c:	462a      	mov	r2, r5
 801070e:	4601      	mov	r1, r0
 8010710:	4620      	mov	r0, r4
 8010712:	47b8      	blx	r7
 8010714:	4633      	mov	r3, r6
 8010716:	4601      	mov	r1, r0
 8010718:	f04f 32ff 	mov.w	r2, #4294967295
 801071c:	4620      	mov	r0, r4
 801071e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010722:	4718      	bx	r3
 8010724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010728 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 8010728:	b570      	push	{r4, r5, r6, lr}
 801072a:	6803      	ldr	r3, [r0, #0]
 801072c:	790e      	ldrb	r6, [r1, #4]
 801072e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010732:	4605      	mov	r5, r0
 8010734:	460c      	mov	r4, r1
 8010736:	4798      	blx	r3
 8010738:	f080 0001 	eor.w	r0, r0, #1
 801073c:	b2c0      	uxtb	r0, r0
 801073e:	42b0      	cmp	r0, r6
 8010740:	d144      	bne.n	80107cc <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0xa4>
 8010742:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010746:	ea83 74e3 	eor.w	r4, r3, r3, asr #31
 801074a:	eba4 74e3 	sub.w	r4, r4, r3, asr #31
 801074e:	b224      	sxth	r4, r4
 8010750:	2b00      	cmp	r3, #0
 8010752:	bfb4      	ite	lt
 8010754:	f04f 36ff 	movlt.w	r6, #4294967295
 8010758:	2601      	movge	r6, #1
 801075a:	682b      	ldr	r3, [r5, #0]
 801075c:	2c04      	cmp	r4, #4
 801075e:	bfc4      	itt	gt
 8010760:	3c04      	subgt	r4, #4
 8010762:	ebc4 04c4 	rsbgt	r4, r4, r4, lsl #3
 8010766:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801076a:	4628      	mov	r0, r5
 801076c:	bfcc      	ite	gt
 801076e:	b224      	sxthgt	r4, r4
 8010770:	2407      	movle	r4, #7
 8010772:	4798      	blx	r3
 8010774:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 8010778:	4366      	muls	r6, r4
 801077a:	230a      	movs	r3, #10
 801077c:	4371      	muls	r1, r6
 801077e:	fb91 f1f3 	sdiv	r1, r1, r3
 8010782:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 8010786:	4401      	add	r1, r0
 8010788:	b163      	cbz	r3, 80107a4 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x7c>
 801078a:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 801078e:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 8010792:	4343      	muls	r3, r0
 8010794:	1898      	adds	r0, r3, r2
 8010796:	4281      	cmp	r1, r0
 8010798:	bfa8      	it	ge
 801079a:	4601      	movge	r1, r0
 801079c:	1ad0      	subs	r0, r2, r3
 801079e:	4281      	cmp	r1, r0
 80107a0:	bfb8      	it	lt
 80107a2:	4601      	movlt	r1, r0
 80107a4:	682b      	ldr	r3, [r5, #0]
 80107a6:	2200      	movs	r2, #0
 80107a8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80107ac:	4628      	mov	r0, r5
 80107ae:	4798      	blx	r3
 80107b0:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 80107b4:	682b      	ldr	r3, [r5, #0]
 80107b6:	42a2      	cmp	r2, r4
 80107b8:	bfa8      	it	ge
 80107ba:	4622      	movge	r2, r4
 80107bc:	4601      	mov	r1, r0
 80107be:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80107c2:	4628      	mov	r0, r5
 80107c4:	b212      	sxth	r2, r2
 80107c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107ca:	4718      	bx	r3
 80107cc:	bd70      	pop	{r4, r5, r6, pc}

080107ce <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 80107ce:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 80107d2:	4770      	bx	lr

080107d4 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 80107d4:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 80107d8:	4770      	bx	lr

080107da <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 80107da:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 80107de:	4770      	bx	lr

080107e0 <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 80107e0:	b510      	push	{r4, lr}
 80107e2:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 80107e6:	2b01      	cmp	r3, #1
 80107e8:	4604      	mov	r4, r0
 80107ea:	d10c      	bne.n	8010806 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x26>
 80107ec:	f005 fbc4 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 80107f0:	4621      	mov	r1, r4
 80107f2:	3004      	adds	r0, #4
 80107f4:	f005 fc0d 	bl	8016012 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80107f8:	6823      	ldr	r3, [r4, #0]
 80107fa:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 80107fe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010802:	4620      	mov	r0, r4
 8010804:	4798      	blx	r3
 8010806:	2300      	movs	r3, #0
 8010808:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 801080c:	bd10      	pop	{r4, pc}

0801080e <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 801080e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010812:	4605      	mov	r5, r0
 8010814:	460e      	mov	r6, r1
 8010816:	f7ff ffe3 	bl	80107e0 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 801081a:	2302      	movs	r3, #2
 801081c:	f885 309c 	strb.w	r3, [r5, #156]	; 0x9c
 8010820:	682b      	ldr	r3, [r5, #0]
 8010822:	4628      	mov	r0, r5
 8010824:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010828:	4798      	blx	r3
 801082a:	682b      	ldr	r3, [r5, #0]
 801082c:	4607      	mov	r7, r0
 801082e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010832:	4628      	mov	r0, r5
 8010834:	4798      	blx	r3
 8010836:	b300      	cbz	r0, 801087a <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x6c>
 8010838:	8973      	ldrh	r3, [r6, #10]
 801083a:	88f2      	ldrh	r2, [r6, #6]
 801083c:	f8b5 4080 	ldrh.w	r4, [r5, #128]	; 0x80
 8010840:	f895 108a 	ldrb.w	r1, [r5, #138]	; 0x8a
 8010844:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 8010848:	1a9b      	subs	r3, r3, r2
 801084a:	b21b      	sxth	r3, r3
 801084c:	435c      	muls	r4, r3
 801084e:	230a      	movs	r3, #10
 8010850:	fb94 f4f3 	sdiv	r4, r4, r3
 8010854:	682b      	ldr	r3, [r5, #0]
 8010856:	2264      	movs	r2, #100	; 0x64
 8010858:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 801085c:	f006 fe61 	bl	8017522 <_ZN8touchgfx6muldivElll>
 8010860:	443c      	add	r4, r7
 8010862:	4621      	mov	r1, r4
 8010864:	b202      	sxth	r2, r0
 8010866:	4628      	mov	r0, r5
 8010868:	47b0      	blx	r6
 801086a:	682b      	ldr	r3, [r5, #0]
 801086c:	4601      	mov	r1, r0
 801086e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010872:	4628      	mov	r0, r5
 8010874:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010878:	4718      	bx	r3
 801087a:	89b3      	ldrh	r3, [r6, #12]
 801087c:	8932      	ldrh	r2, [r6, #8]
 801087e:	e7dd      	b.n	801083c <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2e>

08010880 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8010880:	b538      	push	{r3, r4, r5, lr}
 8010882:	6803      	ldr	r3, [r0, #0]
 8010884:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010888:	4605      	mov	r5, r0
 801088a:	460c      	mov	r4, r1
 801088c:	4798      	blx	r3
 801088e:	b150      	cbz	r0, 80108a6 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010890:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010894:	b13b      	cbz	r3, 80108a6 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010896:	4358      	muls	r0, r3
 8010898:	fb94 f3f0 	sdiv	r3, r4, r0
 801089c:	fb00 4413 	mls	r4, r0, r3, r4
 80108a0:	2c00      	cmp	r4, #0
 80108a2:	bfc8      	it	gt
 80108a4:	1a24      	subgt	r4, r4, r0
 80108a6:	4620      	mov	r0, r4
 80108a8:	bd38      	pop	{r3, r4, r5, pc}

080108aa <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 80108aa:	b570      	push	{r4, r5, r6, lr}
 80108ac:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 80108b0:	2b01      	cmp	r3, #1
 80108b2:	4604      	mov	r4, r0
 80108b4:	d14a      	bne.n	801094c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80108b6:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 80108ba:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 80108be:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80108c2:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 80108c6:	3001      	adds	r0, #1
 80108c8:	1b92      	subs	r2, r2, r6
 80108ca:	b212      	sxth	r2, r2
 80108cc:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 80108d0:	2100      	movs	r1, #0
 80108d2:	b280      	uxth	r0, r0
 80108d4:	47a8      	blx	r5
 80108d6:	6823      	ldr	r3, [r4, #0]
 80108d8:	1981      	adds	r1, r0, r6
 80108da:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80108de:	4620      	mov	r0, r4
 80108e0:	4798      	blx	r3
 80108e2:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 80108e6:	429a      	cmp	r2, r3
 80108e8:	dd30      	ble.n	801094c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80108ea:	2300      	movs	r3, #0
 80108ec:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80108f0:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 80108f4:	f005 fb40 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 80108f8:	4621      	mov	r1, r4
 80108fa:	3004      	adds	r0, #4
 80108fc:	f005 fb89 	bl	8016012 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010900:	6823      	ldr	r3, [r4, #0]
 8010902:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 8010906:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801090a:	4620      	mov	r0, r4
 801090c:	f7ff ffb8 	bl	8010880 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010910:	4601      	mov	r1, r0
 8010912:	4620      	mov	r0, r4
 8010914:	47a8      	blx	r5
 8010916:	6823      	ldr	r3, [r4, #0]
 8010918:	4620      	mov	r0, r4
 801091a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801091e:	4798      	blx	r3
 8010920:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8010924:	1ac0      	subs	r0, r0, r3
 8010926:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 801092a:	4403      	add	r3, r0
 801092c:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 8010930:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 8010934:	b150      	cbz	r0, 801094c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 8010936:	6803      	ldr	r3, [r0, #0]
 8010938:	68db      	ldr	r3, [r3, #12]
 801093a:	4798      	blx	r3
 801093c:	b130      	cbz	r0, 801094c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 801093e:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 8010942:	6803      	ldr	r3, [r0, #0]
 8010944:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010948:	689b      	ldr	r3, [r3, #8]
 801094a:	4718      	bx	r3
 801094c:	bd70      	pop	{r4, r5, r6, pc}

0801094e <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 801094e:	f081 0301 	eor.w	r3, r1, #1
 8010952:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 8010956:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 801095a:	302c      	adds	r0, #44	; 0x2c
 801095c:	f7ff bb7e 	b.w	801005c <_ZN8touchgfx12DrawableList13setHorizontalEb>

08010960 <_ZN8touchgfx10ScrollBaseC1Ev>:
 8010960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010962:	4606      	mov	r6, r0
 8010964:	2500      	movs	r5, #0
 8010966:	2701      	movs	r7, #1
 8010968:	4b24      	ldr	r3, [pc, #144]	; (80109fc <_ZN8touchgfx10ScrollBaseC1Ev+0x9c>)
 801096a:	8085      	strh	r5, [r0, #4]
 801096c:	80c5      	strh	r5, [r0, #6]
 801096e:	8105      	strh	r5, [r0, #8]
 8010970:	8145      	strh	r5, [r0, #10]
 8010972:	8185      	strh	r5, [r0, #12]
 8010974:	81c5      	strh	r5, [r0, #14]
 8010976:	8205      	strh	r5, [r0, #16]
 8010978:	8245      	strh	r5, [r0, #18]
 801097a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801097e:	61c5      	str	r5, [r0, #28]
 8010980:	8405      	strh	r5, [r0, #32]
 8010982:	8445      	strh	r5, [r0, #34]	; 0x22
 8010984:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8010988:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 801098c:	6285      	str	r5, [r0, #40]	; 0x28
 801098e:	f846 3b2c 	str.w	r3, [r6], #44
 8010992:	4604      	mov	r4, r0
 8010994:	4630      	mov	r0, r6
 8010996:	f7ff f97b 	bl	800fc90 <_ZN8touchgfx12DrawableListC1Ev>
 801099a:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 801099e:	230a      	movs	r3, #10
 80109a0:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 80109a4:	4b16      	ldr	r3, [pc, #88]	; (8010a00 <_ZN8touchgfx10ScrollBaseC1Ev+0xa0>)
 80109a6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80109aa:	231e      	movs	r3, #30
 80109ac:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 80109b0:	234b      	movs	r3, #75	; 0x4b
 80109b2:	f884 308a 	strb.w	r3, [r4, #138]	; 0x8a
 80109b6:	4631      	mov	r1, r6
 80109b8:	4620      	mov	r0, r4
 80109ba:	67a5      	str	r5, [r4, #120]	; 0x78
 80109bc:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 80109c0:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 80109c4:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 80109c8:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 80109cc:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 80109d0:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 80109d4:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 80109d8:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 80109dc:	f000 f833 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80109e0:	4629      	mov	r1, r5
 80109e2:	4630      	mov	r0, r6
 80109e4:	6325      	str	r5, [r4, #48]	; 0x30
 80109e6:	f7ff fb39 	bl	801005c <_ZN8touchgfx12DrawableList13setHorizontalEb>
 80109ea:	4630      	mov	r0, r6
 80109ec:	4629      	mov	r1, r5
 80109ee:	f7ff fb40 	bl	8010072 <_ZN8touchgfx12DrawableList11setCircularEb>
 80109f2:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 80109f6:	4620      	mov	r0, r4
 80109f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80109fa:	bf00      	nop
 80109fc:	0802f1dc 	.word	0x0802f1dc
 8010a00:	08017bdd 	.word	0x08017bdd

08010a04 <_ZN8touchgfx10ScrollBase11setCircularEb>:
 8010a04:	302c      	adds	r0, #44	; 0x2c
 8010a06:	f7ff bb34 	b.w	8010072 <_ZN8touchgfx12DrawableList11setCircularEb>

08010a0a <_ZN8touchgfx10ScrollBase8setWidthEs>:
 8010a0a:	8101      	strh	r1, [r0, #8]
 8010a0c:	302c      	adds	r0, #44	; 0x2c
 8010a0e:	f7ff bb1f 	b.w	8010050 <_ZN8touchgfx12DrawableList8setWidthEs>

08010a12 <_ZN8touchgfx10ScrollBase9setHeightEs>:
 8010a12:	8141      	strh	r1, [r0, #10]
 8010a14:	302c      	adds	r0, #44	; 0x2c
 8010a16:	f7ff bb1e 	b.w	8010056 <_ZN8touchgfx12DrawableList9setHeightEs>

08010a1a <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 8010a1a:	302c      	adds	r0, #44	; 0x2c
 8010a1c:	f7ff b91e 	b.w	800fc5c <_ZNK8touchgfx12DrawableList13getHorizontalEv>

08010a20 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 8010a20:	302c      	adds	r0, #44	; 0x2c
 8010a22:	f7ff b91e 	b.w	800fc62 <_ZNK8touchgfx12DrawableList11getCircularEv>

08010a26 <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 8010a26:	302c      	adds	r0, #44	; 0x2c
 8010a28:	f7ff b921 	b.w	800fc6e <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

08010a2c <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 8010a2c:	302c      	adds	r0, #44	; 0x2c
 8010a2e:	f7ff b924 	b.w	800fc7a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

08010a32 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010a32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010a34:	2000      	movs	r0, #0
 8010a36:	b12b      	cbz	r3, 8010a44 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010a38:	b920      	cbnz	r0, 8010a44 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010a3a:	1a5a      	subs	r2, r3, r1
 8010a3c:	4250      	negs	r0, r2
 8010a3e:	4150      	adcs	r0, r2
 8010a40:	699b      	ldr	r3, [r3, #24]
 8010a42:	e7f8      	b.n	8010a36 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8010a44:	4770      	bx	lr

08010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010a46:	2300      	movs	r3, #0
 8010a48:	6148      	str	r0, [r1, #20]
 8010a4a:	618b      	str	r3, [r1, #24]
 8010a4c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010a4e:	b913      	cbnz	r3, 8010a56 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010a50:	6281      	str	r1, [r0, #40]	; 0x28
 8010a52:	4770      	bx	lr
 8010a54:	4613      	mov	r3, r2
 8010a56:	699a      	ldr	r2, [r3, #24]
 8010a58:	2a00      	cmp	r2, #0
 8010a5a:	d1fb      	bne.n	8010a54 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010a5c:	6199      	str	r1, [r3, #24]
 8010a5e:	4770      	bx	lr

08010a60 <_ZN8touchgfx9Container9removeAllEv>:
 8010a60:	2200      	movs	r2, #0
 8010a62:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010a64:	b123      	cbz	r3, 8010a70 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010a66:	6999      	ldr	r1, [r3, #24]
 8010a68:	6281      	str	r1, [r0, #40]	; 0x28
 8010a6a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010a6e:	e7f8      	b.n	8010a62 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010a70:	4770      	bx	lr

08010a72 <_ZN8touchgfx9Container6unlinkEv>:
 8010a72:	2300      	movs	r3, #0
 8010a74:	6283      	str	r3, [r0, #40]	; 0x28
 8010a76:	4770      	bx	lr

08010a78 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010a78:	2200      	movs	r2, #0
 8010a7a:	8002      	strh	r2, [r0, #0]
 8010a7c:	8042      	strh	r2, [r0, #2]
 8010a7e:	8082      	strh	r2, [r0, #4]
 8010a80:	80c2      	strh	r2, [r0, #6]
 8010a82:	4770      	bx	lr

08010a84 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010a84:	b570      	push	{r4, r5, r6, lr}
 8010a86:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010a88:	460d      	mov	r5, r1
 8010a8a:	4616      	mov	r6, r2
 8010a8c:	b13c      	cbz	r4, 8010a9e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010a8e:	6823      	ldr	r3, [r4, #0]
 8010a90:	4620      	mov	r0, r4
 8010a92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010a94:	4632      	mov	r2, r6
 8010a96:	4629      	mov	r1, r5
 8010a98:	4798      	blx	r3
 8010a9a:	69a4      	ldr	r4, [r4, #24]
 8010a9c:	e7f6      	b.n	8010a8c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010a9e:	bd70      	pop	{r4, r5, r6, pc}

08010aa0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010aa0:	b538      	push	{r3, r4, r5, lr}
 8010aa2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010aa4:	460d      	mov	r5, r1
 8010aa6:	b134      	cbz	r4, 8010ab6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010aa8:	682b      	ldr	r3, [r5, #0]
 8010aaa:	4621      	mov	r1, r4
 8010aac:	689b      	ldr	r3, [r3, #8]
 8010aae:	4628      	mov	r0, r5
 8010ab0:	4798      	blx	r3
 8010ab2:	69a4      	ldr	r4, [r4, #24]
 8010ab4:	e7f7      	b.n	8010aa6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010ab6:	bd38      	pop	{r3, r4, r5, pc}

08010ab8 <_ZN8touchgfx9ContainerD1Ev>:
 8010ab8:	4770      	bx	lr

08010aba <_ZN8touchgfx9ContainerD0Ev>:
 8010aba:	b510      	push	{r4, lr}
 8010abc:	212c      	movs	r1, #44	; 0x2c
 8010abe:	4604      	mov	r4, r0
 8010ac0:	f019 fb0f 	bl	802a0e2 <_ZdlPvj>
 8010ac4:	4620      	mov	r0, r4
 8010ac6:	bd10      	pop	{r4, pc}

08010ac8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010ac8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010aca:	b19b      	cbz	r3, 8010af4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010acc:	428b      	cmp	r3, r1
 8010ace:	d109      	bne.n	8010ae4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010ad0:	699a      	ldr	r2, [r3, #24]
 8010ad2:	2100      	movs	r1, #0
 8010ad4:	6159      	str	r1, [r3, #20]
 8010ad6:	6282      	str	r2, [r0, #40]	; 0x28
 8010ad8:	b902      	cbnz	r2, 8010adc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010ada:	4770      	bx	lr
 8010adc:	6199      	str	r1, [r3, #24]
 8010ade:	4770      	bx	lr
 8010ae0:	4613      	mov	r3, r2
 8010ae2:	b13a      	cbz	r2, 8010af4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010ae4:	699a      	ldr	r2, [r3, #24]
 8010ae6:	428a      	cmp	r2, r1
 8010ae8:	d1fa      	bne.n	8010ae0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010aea:	698a      	ldr	r2, [r1, #24]
 8010aec:	619a      	str	r2, [r3, #24]
 8010aee:	2300      	movs	r3, #0
 8010af0:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010af4:	4770      	bx	lr

08010af6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010af6:	b410      	push	{r4}
 8010af8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010afa:	4604      	mov	r4, r0
 8010afc:	b92b      	cbnz	r3, 8010b0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010afe:	6803      	ldr	r3, [r0, #0]
 8010b00:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b04:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010b06:	4611      	mov	r1, r2
 8010b08:	4718      	bx	r3
 8010b0a:	b941      	cbnz	r1, 8010b1e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010b0c:	6193      	str	r3, [r2, #24]
 8010b0e:	6282      	str	r2, [r0, #40]	; 0x28
 8010b10:	6154      	str	r4, [r2, #20]
 8010b12:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b16:	4770      	bx	lr
 8010b18:	4603      	mov	r3, r0
 8010b1a:	2800      	cmp	r0, #0
 8010b1c:	d0f9      	beq.n	8010b12 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010b1e:	4299      	cmp	r1, r3
 8010b20:	6998      	ldr	r0, [r3, #24]
 8010b22:	d1f9      	bne.n	8010b18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010b24:	6190      	str	r0, [r2, #24]
 8010b26:	618a      	str	r2, [r1, #24]
 8010b28:	e7f2      	b.n	8010b10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010b2a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010b2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b2e:	461f      	mov	r7, r3
 8010b30:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010b34:	460d      	mov	r5, r1
 8010b36:	4616      	mov	r6, r2
 8010b38:	b103      	cbz	r3, 8010b3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010b3a:	6038      	str	r0, [r7, #0]
 8010b3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b3e:	b314      	cbz	r4, 8010b86 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010b40:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010b44:	b1eb      	cbz	r3, 8010b82 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010b46:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010b4a:	428d      	cmp	r5, r1
 8010b4c:	db19      	blt.n	8010b82 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010b4e:	8923      	ldrh	r3, [r4, #8]
 8010b50:	b289      	uxth	r1, r1
 8010b52:	440b      	add	r3, r1
 8010b54:	b21b      	sxth	r3, r3
 8010b56:	429d      	cmp	r5, r3
 8010b58:	da13      	bge.n	8010b82 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010b5a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010b5e:	4296      	cmp	r6, r2
 8010b60:	db0f      	blt.n	8010b82 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010b62:	8963      	ldrh	r3, [r4, #10]
 8010b64:	b292      	uxth	r2, r2
 8010b66:	4413      	add	r3, r2
 8010b68:	b21b      	sxth	r3, r3
 8010b6a:	429e      	cmp	r6, r3
 8010b6c:	da09      	bge.n	8010b82 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010b6e:	6823      	ldr	r3, [r4, #0]
 8010b70:	1ab2      	subs	r2, r6, r2
 8010b72:	1a69      	subs	r1, r5, r1
 8010b74:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010b78:	b212      	sxth	r2, r2
 8010b7a:	463b      	mov	r3, r7
 8010b7c:	b209      	sxth	r1, r1
 8010b7e:	4620      	mov	r0, r4
 8010b80:	47c0      	blx	r8
 8010b82:	69a4      	ldr	r4, [r4, #24]
 8010b84:	e7db      	b.n	8010b3e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010b8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b90:	4c6e      	ldr	r4, [pc, #440]	; (8010d4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010b92:	b0a1      	sub	sp, #132	; 0x84
 8010b94:	6824      	ldr	r4, [r4, #0]
 8010b96:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010b98:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010b9c:	9303      	str	r3, [sp, #12]
 8010b9e:	2400      	movs	r4, #0
 8010ba0:	802c      	strh	r4, [r5, #0]
 8010ba2:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010ba4:	802c      	strh	r4, [r5, #0]
 8010ba6:	601c      	str	r4, [r3, #0]
 8010ba8:	4606      	mov	r6, r0
 8010baa:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010bae:	f7ff ffbc 	bl	8010b2a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010bb2:	f1b9 0f03 	cmp.w	r9, #3
 8010bb6:	f340 80c2 	ble.w	8010d3e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010bba:	4631      	mov	r1, r6
 8010bbc:	a80c      	add	r0, sp, #48	; 0x30
 8010bbe:	f006 fb5f 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010bc2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010bc6:	9306      	str	r3, [sp, #24]
 8010bc8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010bcc:	9307      	str	r3, [sp, #28]
 8010bce:	9b03      	ldr	r3, [sp, #12]
 8010bd0:	f8d3 a000 	ldr.w	sl, [r3]
 8010bd4:	f1ba 0f00 	cmp.w	sl, #0
 8010bd8:	f000 80b4 	beq.w	8010d44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010bdc:	4651      	mov	r1, sl
 8010bde:	a810      	add	r0, sp, #64	; 0x40
 8010be0:	f006 fb4e 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010be4:	9b01      	ldr	r3, [sp, #4]
 8010be6:	9a06      	ldr	r2, [sp, #24]
 8010be8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010bec:	189d      	adds	r5, r3, r2
 8010bee:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010bf2:	9a07      	ldr	r2, [sp, #28]
 8010bf4:	2002      	movs	r0, #2
 8010bf6:	fb91 f1f0 	sdiv	r1, r1, r0
 8010bfa:	4419      	add	r1, r3
 8010bfc:	1a6d      	subs	r5, r5, r1
 8010bfe:	9b02      	ldr	r3, [sp, #8]
 8010c00:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010c04:	4413      	add	r3, r2
 8010c06:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010c0a:	fb92 f2f0 	sdiv	r2, r2, r0
 8010c0e:	440a      	add	r2, r1
 8010c10:	1a9b      	subs	r3, r3, r2
 8010c12:	435b      	muls	r3, r3
 8010c14:	fb05 3505 	mla	r5, r5, r5, r3
 8010c18:	4f4d      	ldr	r7, [pc, #308]	; (8010d50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010c1a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010c1c:	ac10      	add	r4, sp, #64	; 0x40
 8010c1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010c20:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010c22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010c24:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010c26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010c28:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010c2c:	f1b9 0f0c 	cmp.w	r9, #12
 8010c30:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010c34:	f04f 0303 	mov.w	r3, #3
 8010c38:	bfc8      	it	gt
 8010c3a:	4698      	movgt	r8, r3
 8010c3c:	f8cd 9000 	str.w	r9, [sp]
 8010c40:	f04f 0400 	mov.w	r4, #0
 8010c44:	bfdc      	itt	le
 8010c46:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010c4a:	fb92 f8f3 	sdivle	r8, r2, r3
 8010c4e:	1c63      	adds	r3, r4, #1
 8010c50:	aa10      	add	r2, sp, #64	; 0x40
 8010c52:	f004 0401 	and.w	r4, r4, #1
 8010c56:	9308      	str	r3, [sp, #32]
 8010c58:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010c5c:	9b00      	ldr	r3, [sp, #0]
 8010c5e:	fb93 f3f8 	sdiv	r3, r3, r8
 8010c62:	b29b      	uxth	r3, r3
 8010c64:	3404      	adds	r4, #4
 8010c66:	f04f 0b00 	mov.w	fp, #0
 8010c6a:	9304      	str	r3, [sp, #16]
 8010c6c:	9a04      	ldr	r2, [sp, #16]
 8010c6e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010c72:	fb13 f302 	smulbb	r3, r3, r2
 8010c76:	9a01      	ldr	r2, [sp, #4]
 8010c78:	b29b      	uxth	r3, r3
 8010c7a:	1899      	adds	r1, r3, r2
 8010c7c:	9305      	str	r3, [sp, #20]
 8010c7e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010c82:	b209      	sxth	r1, r1
 8010c84:	4299      	cmp	r1, r3
 8010c86:	db4d      	blt.n	8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010c88:	8932      	ldrh	r2, [r6, #8]
 8010c8a:	4413      	add	r3, r2
 8010c8c:	b21b      	sxth	r3, r3
 8010c8e:	4299      	cmp	r1, r3
 8010c90:	da48      	bge.n	8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010c92:	9b04      	ldr	r3, [sp, #16]
 8010c94:	6827      	ldr	r7, [r4, #0]
 8010c96:	fb17 f703 	smulbb	r7, r7, r3
 8010c9a:	9b02      	ldr	r3, [sp, #8]
 8010c9c:	b2bf      	uxth	r7, r7
 8010c9e:	18fa      	adds	r2, r7, r3
 8010ca0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010ca4:	b212      	sxth	r2, r2
 8010ca6:	429a      	cmp	r2, r3
 8010ca8:	db3c      	blt.n	8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010caa:	8970      	ldrh	r0, [r6, #10]
 8010cac:	4403      	add	r3, r0
 8010cae:	b21b      	sxth	r3, r3
 8010cb0:	429a      	cmp	r2, r3
 8010cb2:	da37      	bge.n	8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010cb4:	2300      	movs	r3, #0
 8010cb6:	930b      	str	r3, [sp, #44]	; 0x2c
 8010cb8:	4630      	mov	r0, r6
 8010cba:	ab0b      	add	r3, sp, #44	; 0x2c
 8010cbc:	f7ff ff35 	bl	8010b2a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010cc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010cc2:	b37a      	cbz	r2, 8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010cc4:	4552      	cmp	r2, sl
 8010cc6:	d02d      	beq.n	8010d24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010cc8:	4611      	mov	r1, r2
 8010cca:	a80e      	add	r0, sp, #56	; 0x38
 8010ccc:	9209      	str	r2, [sp, #36]	; 0x24
 8010cce:	f006 fad7 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010cd2:	9a06      	ldr	r2, [sp, #24]
 8010cd4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010cd8:	9b01      	ldr	r3, [sp, #4]
 8010cda:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010cde:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010ce2:	4413      	add	r3, r2
 8010ce4:	f04f 0e02 	mov.w	lr, #2
 8010ce8:	fb91 f1fe 	sdiv	r1, r1, lr
 8010cec:	4401      	add	r1, r0
 8010cee:	1a58      	subs	r0, r3, r1
 8010cf0:	9a07      	ldr	r2, [sp, #28]
 8010cf2:	9b02      	ldr	r3, [sp, #8]
 8010cf4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010cf8:	fb9c fcfe 	sdiv	ip, ip, lr
 8010cfc:	4413      	add	r3, r2
 8010cfe:	448c      	add	ip, r1
 8010d00:	eba3 030c 	sub.w	r3, r3, ip
 8010d04:	435b      	muls	r3, r3
 8010d06:	fb00 3300 	mla	r3, r0, r0, r3
 8010d0a:	42ab      	cmp	r3, r5
 8010d0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010d0e:	d208      	bcs.n	8010d22 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010d10:	9803      	ldr	r0, [sp, #12]
 8010d12:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010d14:	6001      	str	r1, [r0, #0]
 8010d16:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010d18:	9805      	ldr	r0, [sp, #20]
 8010d1a:	8008      	strh	r0, [r1, #0]
 8010d1c:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010d1e:	461d      	mov	r5, r3
 8010d20:	800f      	strh	r7, [r1, #0]
 8010d22:	4692      	mov	sl, r2
 8010d24:	f10b 0b01 	add.w	fp, fp, #1
 8010d28:	f1bb 0f04 	cmp.w	fp, #4
 8010d2c:	f104 0408 	add.w	r4, r4, #8
 8010d30:	d19c      	bne.n	8010c6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010d32:	9b00      	ldr	r3, [sp, #0]
 8010d34:	9c08      	ldr	r4, [sp, #32]
 8010d36:	444b      	add	r3, r9
 8010d38:	4544      	cmp	r4, r8
 8010d3a:	9300      	str	r3, [sp, #0]
 8010d3c:	d187      	bne.n	8010c4e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010d3e:	b021      	add	sp, #132	; 0x84
 8010d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d44:	f04f 35ff 	mov.w	r5, #4294967295
 8010d48:	e766      	b.n	8010c18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010d4a:	bf00      	nop
 8010d4c:	20013444 	.word	0x20013444
 8010d50:	0802be20 	.word	0x0802be20

08010d54 <_ZN8touchgfx4RectaNERKS0_>:
 8010d54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d58:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010d5c:	888c      	ldrh	r4, [r1, #4]
 8010d5e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010d62:	443c      	add	r4, r7
 8010d64:	b2a4      	uxth	r4, r4
 8010d66:	fa0f f884 	sxth.w	r8, r4
 8010d6a:	45c1      	cmp	r9, r8
 8010d6c:	da2f      	bge.n	8010dce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010d6e:	8882      	ldrh	r2, [r0, #4]
 8010d70:	444a      	add	r2, r9
 8010d72:	b292      	uxth	r2, r2
 8010d74:	fa0f fe82 	sxth.w	lr, r2
 8010d78:	4577      	cmp	r7, lr
 8010d7a:	da28      	bge.n	8010dce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010d7c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010d80:	88cb      	ldrh	r3, [r1, #6]
 8010d82:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010d86:	442b      	add	r3, r5
 8010d88:	b21b      	sxth	r3, r3
 8010d8a:	429e      	cmp	r6, r3
 8010d8c:	da1f      	bge.n	8010dce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010d8e:	88c3      	ldrh	r3, [r0, #6]
 8010d90:	4433      	add	r3, r6
 8010d92:	b29b      	uxth	r3, r3
 8010d94:	fa0f fc83 	sxth.w	ip, r3
 8010d98:	4565      	cmp	r5, ip
 8010d9a:	da18      	bge.n	8010dce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010d9c:	454f      	cmp	r7, r9
 8010d9e:	bfb8      	it	lt
 8010da0:	464f      	movlt	r7, r9
 8010da2:	42b5      	cmp	r5, r6
 8010da4:	bfb8      	it	lt
 8010da6:	4635      	movlt	r5, r6
 8010da8:	45f0      	cmp	r8, lr
 8010daa:	bfd8      	it	le
 8010dac:	4622      	movle	r2, r4
 8010dae:	1bd2      	subs	r2, r2, r7
 8010db0:	8082      	strh	r2, [r0, #4]
 8010db2:	884a      	ldrh	r2, [r1, #2]
 8010db4:	88c9      	ldrh	r1, [r1, #6]
 8010db6:	8007      	strh	r7, [r0, #0]
 8010db8:	440a      	add	r2, r1
 8010dba:	b292      	uxth	r2, r2
 8010dbc:	b211      	sxth	r1, r2
 8010dbe:	458c      	cmp	ip, r1
 8010dc0:	bfa8      	it	ge
 8010dc2:	4613      	movge	r3, r2
 8010dc4:	1b5b      	subs	r3, r3, r5
 8010dc6:	80c3      	strh	r3, [r0, #6]
 8010dc8:	8045      	strh	r5, [r0, #2]
 8010dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010dce:	2300      	movs	r3, #0
 8010dd0:	8003      	strh	r3, [r0, #0]
 8010dd2:	8043      	strh	r3, [r0, #2]
 8010dd4:	8083      	strh	r3, [r0, #4]
 8010dd6:	80c3      	strh	r3, [r0, #6]
 8010dd8:	e7f7      	b.n	8010dca <_ZN8touchgfx4RectaNERKS0_+0x76>

08010dda <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010dda:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010dde:	2b00      	cmp	r3, #0
 8010de0:	dd06      	ble.n	8010df0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010de2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010de6:	2800      	cmp	r0, #0
 8010de8:	bfcc      	ite	gt
 8010dea:	2000      	movgt	r0, #0
 8010dec:	2001      	movle	r0, #1
 8010dee:	4770      	bx	lr
 8010df0:	2001      	movs	r0, #1
 8010df2:	4770      	bx	lr

08010df4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010df8:	2300      	movs	r3, #0
 8010dfa:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010dfc:	8003      	strh	r3, [r0, #0]
 8010dfe:	4604      	mov	r4, r0
 8010e00:	8043      	strh	r3, [r0, #2]
 8010e02:	8083      	strh	r3, [r0, #4]
 8010e04:	80c3      	strh	r3, [r0, #6]
 8010e06:	2d00      	cmp	r5, #0
 8010e08:	d040      	beq.n	8010e8c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010e0a:	1d28      	adds	r0, r5, #4
 8010e0c:	f7ff ffe5 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e10:	b988      	cbnz	r0, 8010e36 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010e12:	4620      	mov	r0, r4
 8010e14:	f7ff ffe1 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e18:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010e1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010e20:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010e24:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010e28:	b138      	cbz	r0, 8010e3a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010e2a:	8022      	strh	r2, [r4, #0]
 8010e2c:	8063      	strh	r3, [r4, #2]
 8010e2e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010e32:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010e36:	69ad      	ldr	r5, [r5, #24]
 8010e38:	e7e5      	b.n	8010e06 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010e3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010e3e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010e42:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010e46:	4290      	cmp	r0, r2
 8010e48:	4607      	mov	r7, r0
 8010e4a:	bfa8      	it	ge
 8010e4c:	4617      	movge	r7, r2
 8010e4e:	4472      	add	r2, lr
 8010e50:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010e54:	8027      	strh	r7, [r4, #0]
 8010e56:	4299      	cmp	r1, r3
 8010e58:	460e      	mov	r6, r1
 8010e5a:	4440      	add	r0, r8
 8010e5c:	bfa8      	it	ge
 8010e5e:	461e      	movge	r6, r3
 8010e60:	4471      	add	r1, lr
 8010e62:	4463      	add	r3, ip
 8010e64:	b200      	sxth	r0, r0
 8010e66:	b212      	sxth	r2, r2
 8010e68:	b209      	sxth	r1, r1
 8010e6a:	b21b      	sxth	r3, r3
 8010e6c:	4290      	cmp	r0, r2
 8010e6e:	bfac      	ite	ge
 8010e70:	ebc7 0200 	rsbge	r2, r7, r0
 8010e74:	ebc7 0202 	rsblt	r2, r7, r2
 8010e78:	4299      	cmp	r1, r3
 8010e7a:	bfac      	ite	ge
 8010e7c:	ebc6 0301 	rsbge	r3, r6, r1
 8010e80:	ebc6 0303 	rsblt	r3, r6, r3
 8010e84:	8066      	strh	r6, [r4, #2]
 8010e86:	80a2      	strh	r2, [r4, #4]
 8010e88:	80e3      	strh	r3, [r4, #6]
 8010e8a:	e7d4      	b.n	8010e36 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010e92 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010e92:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010e96:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010e9a:	b383      	cbz	r3, 8010efe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010e9c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010e9e:	b374      	cbz	r4, 8010efe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010ea0:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010ea4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010ea8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010eac:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010eb0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010eb4:	b303      	cbz	r3, 8010ef8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010eb6:	4668      	mov	r0, sp
 8010eb8:	1d21      	adds	r1, r4, #4
 8010eba:	f8ad 5000 	strh.w	r5, [sp]
 8010ebe:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010ec2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010ec6:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010eca:	f7ff ff43 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8010ece:	4668      	mov	r0, sp
 8010ed0:	f7ff ff83 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ed4:	b980      	cbnz	r0, 8010ef8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010ed6:	f8bd 3000 	ldrh.w	r3, [sp]
 8010eda:	88a2      	ldrh	r2, [r4, #4]
 8010edc:	1a9b      	subs	r3, r3, r2
 8010ede:	f8ad 3000 	strh.w	r3, [sp]
 8010ee2:	88e2      	ldrh	r2, [r4, #6]
 8010ee4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010ee8:	1a9b      	subs	r3, r3, r2
 8010eea:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010eee:	6823      	ldr	r3, [r4, #0]
 8010ef0:	4669      	mov	r1, sp
 8010ef2:	689b      	ldr	r3, [r3, #8]
 8010ef4:	4620      	mov	r0, r4
 8010ef6:	4798      	blx	r3
 8010ef8:	69a4      	ldr	r4, [r4, #24]
 8010efa:	2c00      	cmp	r4, #0
 8010efc:	d1d8      	bne.n	8010eb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010efe:	b002      	add	sp, #8
 8010f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f04 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010f04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010f06:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010f0a:	460d      	mov	r5, r1
 8010f0c:	4616      	mov	r6, r2
 8010f0e:	b323      	cbz	r3, 8010f5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010f10:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010f12:	b314      	cbz	r4, 8010f5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010f14:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010f18:	b1eb      	cbz	r3, 8010f56 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010f1a:	6828      	ldr	r0, [r5, #0]
 8010f1c:	6869      	ldr	r1, [r5, #4]
 8010f1e:	466b      	mov	r3, sp
 8010f20:	c303      	stmia	r3!, {r0, r1}
 8010f22:	4668      	mov	r0, sp
 8010f24:	1d21      	adds	r1, r4, #4
 8010f26:	f7ff ff15 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8010f2a:	4668      	mov	r0, sp
 8010f2c:	f7ff ff55 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f30:	b988      	cbnz	r0, 8010f56 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010f32:	f8bd 3000 	ldrh.w	r3, [sp]
 8010f36:	88a2      	ldrh	r2, [r4, #4]
 8010f38:	1a9b      	subs	r3, r3, r2
 8010f3a:	f8ad 3000 	strh.w	r3, [sp]
 8010f3e:	88e2      	ldrh	r2, [r4, #6]
 8010f40:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010f44:	1a9b      	subs	r3, r3, r2
 8010f46:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010f4a:	6823      	ldr	r3, [r4, #0]
 8010f4c:	4632      	mov	r2, r6
 8010f4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010f50:	4669      	mov	r1, sp
 8010f52:	4620      	mov	r0, r4
 8010f54:	4798      	blx	r3
 8010f56:	69a4      	ldr	r4, [r4, #24]
 8010f58:	e7db      	b.n	8010f12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010f5a:	b002      	add	sp, #8
 8010f5c:	bd70      	pop	{r4, r5, r6, pc}

08010f5e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010f5e:	b513      	push	{r0, r1, r4, lr}
 8010f60:	6803      	ldr	r3, [r0, #0]
 8010f62:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010f66:	2300      	movs	r3, #0
 8010f68:	e9cd 3300 	strd	r3, r3, [sp]
 8010f6c:	466b      	mov	r3, sp
 8010f6e:	47a0      	blx	r4
 8010f70:	b002      	add	sp, #8
 8010f72:	bd10      	pop	{r4, pc}

08010f74 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010f74:	2301      	movs	r3, #1
 8010f76:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010f7a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010f7e:	4770      	bx	lr

08010f80 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010f80:	2301      	movs	r3, #1
 8010f82:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010f86:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010f8a:	4770      	bx	lr

08010f8c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010f8c:	6843      	ldr	r3, [r0, #4]
 8010f8e:	2201      	movs	r2, #1
 8010f90:	725a      	strb	r2, [r3, #9]
 8010f92:	6840      	ldr	r0, [r0, #4]
 8010f94:	6803      	ldr	r3, [r0, #0]
 8010f96:	691b      	ldr	r3, [r3, #16]
 8010f98:	4718      	bx	r3

08010f9a <_ZN8touchgfx3HAL8flushDMAEv>:
 8010f9a:	6840      	ldr	r0, [r0, #4]
 8010f9c:	6803      	ldr	r3, [r0, #0]
 8010f9e:	689b      	ldr	r3, [r3, #8]
 8010fa0:	4718      	bx	r3

08010fa2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010fa2:	b530      	push	{r4, r5, lr}
 8010fa4:	b08b      	sub	sp, #44	; 0x2c
 8010fa6:	6804      	ldr	r4, [r0, #0]
 8010fa8:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010fac:	9509      	str	r5, [sp, #36]	; 0x24
 8010fae:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010fb2:	9508      	str	r5, [sp, #32]
 8010fb4:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010fb8:	9507      	str	r5, [sp, #28]
 8010fba:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010fbe:	9506      	str	r5, [sp, #24]
 8010fc0:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010fc4:	9505      	str	r5, [sp, #20]
 8010fc6:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010fca:	9504      	str	r5, [sp, #16]
 8010fcc:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010fd0:	9503      	str	r5, [sp, #12]
 8010fd2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010fd6:	9502      	str	r5, [sp, #8]
 8010fd8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010fdc:	e9cd 3500 	strd	r3, r5, [sp]
 8010fe0:	4613      	mov	r3, r2
 8010fe2:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010fe4:	2200      	movs	r2, #0
 8010fe6:	47a0      	blx	r4
 8010fe8:	b00b      	add	sp, #44	; 0x2c
 8010fea:	bd30      	pop	{r4, r5, pc}

08010fec <_ZN8touchgfx3HAL10beginFrameEv>:
 8010fec:	4b04      	ldr	r3, [pc, #16]	; (8011000 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010fee:	781b      	ldrb	r3, [r3, #0]
 8010ff0:	b123      	cbz	r3, 8010ffc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010ff2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010ff6:	f080 0001 	eor.w	r0, r0, #1
 8010ffa:	4770      	bx	lr
 8010ffc:	2001      	movs	r0, #1
 8010ffe:	4770      	bx	lr
 8011000:	20013442 	.word	0x20013442

08011004 <_ZN8touchgfx3HAL8endFrameEv>:
 8011004:	b510      	push	{r4, lr}
 8011006:	4604      	mov	r4, r0
 8011008:	6840      	ldr	r0, [r0, #4]
 801100a:	6803      	ldr	r3, [r0, #0]
 801100c:	689b      	ldr	r3, [r3, #8]
 801100e:	4798      	blx	r3
 8011010:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8011014:	b113      	cbz	r3, 801101c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8011016:	2301      	movs	r3, #1
 8011018:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801101c:	bd10      	pop	{r4, pc}

0801101e <_ZN8touchgfx3HAL10initializeEv>:
 801101e:	b510      	push	{r4, lr}
 8011020:	4604      	mov	r4, r0
 8011022:	f7f0 fe71 	bl	8001d08 <_ZN8touchgfx10OSWrappers10initializeEv>
 8011026:	f7f0 fd7d 	bl	8001b24 <_ZN8touchgfx4GPIO4initEv>
 801102a:	6860      	ldr	r0, [r4, #4]
 801102c:	6803      	ldr	r3, [r0, #0]
 801102e:	68db      	ldr	r3, [r3, #12]
 8011030:	4798      	blx	r3
 8011032:	68e0      	ldr	r0, [r4, #12]
 8011034:	6803      	ldr	r3, [r0, #0]
 8011036:	689b      	ldr	r3, [r3, #8]
 8011038:	4798      	blx	r3
 801103a:	6823      	ldr	r3, [r4, #0]
 801103c:	4620      	mov	r0, r4
 801103e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011040:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011044:	4718      	bx	r3
	...

08011048 <_ZN8touchgfx3HAL4tickEv>:
 8011048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801104a:	6803      	ldr	r3, [r0, #0]
 801104c:	4d5b      	ldr	r5, [pc, #364]	; (80111bc <_ZN8touchgfx3HAL4tickEv+0x174>)
 801104e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011052:	4604      	mov	r4, r0
 8011054:	4798      	blx	r3
 8011056:	2800      	cmp	r0, #0
 8011058:	f000 8095 	beq.w	8011186 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801105c:	2001      	movs	r0, #1
 801105e:	f7f0 fd13 	bl	8001a88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011062:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011066:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801106a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801106e:	2600      	movs	r6, #0
 8011070:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011074:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011078:	b133      	cbz	r3, 8011088 <_ZN8touchgfx3HAL4tickEv+0x40>
 801107a:	6823      	ldr	r3, [r4, #0]
 801107c:	4620      	mov	r0, r4
 801107e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011082:	4798      	blx	r3
 8011084:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011088:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801108c:	6862      	ldr	r2, [r4, #4]
 801108e:	f083 0301 	eor.w	r3, r3, #1
 8011092:	7253      	strb	r3, [r2, #9]
 8011094:	2601      	movs	r6, #1
 8011096:	702e      	strb	r6, [r5, #0]
 8011098:	f004 ff6e 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 801109c:	6803      	ldr	r3, [r0, #0]
 801109e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80110a0:	4798      	blx	r3
 80110a2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80110a6:	b90b      	cbnz	r3, 80110ac <_ZN8touchgfx3HAL4tickEv+0x64>
 80110a8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80110ac:	f004 ff64 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 80110b0:	6803      	ldr	r3, [r0, #0]
 80110b2:	695b      	ldr	r3, [r3, #20]
 80110b4:	4798      	blx	r3
 80110b6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80110b8:	6803      	ldr	r3, [r0, #0]
 80110ba:	691b      	ldr	r3, [r3, #16]
 80110bc:	4798      	blx	r3
 80110be:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80110c2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80110c6:	3b01      	subs	r3, #1
 80110c8:	b2db      	uxtb	r3, r3
 80110ca:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80110ce:	b10a      	cbz	r2, 80110d4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 80110d0:	2b00      	cmp	r3, #0
 80110d2:	d1eb      	bne.n	80110ac <_ZN8touchgfx3HAL4tickEv+0x64>
 80110d4:	4a3a      	ldr	r2, [pc, #232]	; (80111c0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80110d6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80110da:	7813      	ldrb	r3, [r2, #0]
 80110dc:	3301      	adds	r3, #1
 80110de:	b25b      	sxtb	r3, r3
 80110e0:	4299      	cmp	r1, r3
 80110e2:	7013      	strb	r3, [r2, #0]
 80110e4:	dc10      	bgt.n	8011108 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80110e6:	68e0      	ldr	r0, [r4, #12]
 80110e8:	2300      	movs	r3, #0
 80110ea:	7013      	strb	r3, [r2, #0]
 80110ec:	6803      	ldr	r3, [r0, #0]
 80110ee:	aa03      	add	r2, sp, #12
 80110f0:	68db      	ldr	r3, [r3, #12]
 80110f2:	a902      	add	r1, sp, #8
 80110f4:	4798      	blx	r3
 80110f6:	6823      	ldr	r3, [r4, #0]
 80110f8:	2800      	cmp	r0, #0
 80110fa:	d050      	beq.n	801119e <_ZN8touchgfx3HAL4tickEv+0x156>
 80110fc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011100:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011104:	4620      	mov	r0, r4
 8011106:	4798      	blx	r3
 8011108:	6960      	ldr	r0, [r4, #20]
 801110a:	2300      	movs	r3, #0
 801110c:	f88d 3007 	strb.w	r3, [sp, #7]
 8011110:	b158      	cbz	r0, 801112a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011112:	6803      	ldr	r3, [r0, #0]
 8011114:	f10d 0107 	add.w	r1, sp, #7
 8011118:	68db      	ldr	r3, [r3, #12]
 801111a:	4798      	blx	r3
 801111c:	b128      	cbz	r0, 801112a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801111e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011120:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011124:	6803      	ldr	r3, [r0, #0]
 8011126:	68db      	ldr	r3, [r3, #12]
 8011128:	4798      	blx	r3
 801112a:	f104 001c 	add.w	r0, r4, #28
 801112e:	f015 fef7 	bl	8026f20 <_ZN8touchgfx8Gestures4tickEv>
 8011132:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011136:	b30b      	cbz	r3, 801117c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011138:	6920      	ldr	r0, [r4, #16]
 801113a:	6803      	ldr	r3, [r0, #0]
 801113c:	691b      	ldr	r3, [r3, #16]
 801113e:	4798      	blx	r3
 8011140:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011142:	4606      	mov	r6, r0
 8011144:	b903      	cbnz	r3, 8011148 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011146:	6760      	str	r0, [r4, #116]	; 0x74
 8011148:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801114a:	4a1e      	ldr	r2, [pc, #120]	; (80111c4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801114c:	1af3      	subs	r3, r6, r3
 801114e:	4293      	cmp	r3, r2
 8011150:	d914      	bls.n	801117c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011152:	6920      	ldr	r0, [r4, #16]
 8011154:	6803      	ldr	r3, [r0, #0]
 8011156:	699b      	ldr	r3, [r3, #24]
 8011158:	4798      	blx	r3
 801115a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801115c:	2264      	movs	r2, #100	; 0x64
 801115e:	1af3      	subs	r3, r6, r3
 8011160:	fbb3 f3f2 	udiv	r3, r3, r2
 8011164:	fbb0 f0f3 	udiv	r0, r0, r3
 8011168:	2800      	cmp	r0, #0
 801116a:	dc1d      	bgt.n	80111a8 <_ZN8touchgfx3HAL4tickEv+0x160>
 801116c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011170:	6920      	ldr	r0, [r4, #16]
 8011172:	6803      	ldr	r3, [r0, #0]
 8011174:	2100      	movs	r1, #0
 8011176:	69db      	ldr	r3, [r3, #28]
 8011178:	4798      	blx	r3
 801117a:	6766      	str	r6, [r4, #116]	; 0x74
 801117c:	f004 fefc 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 8011180:	6803      	ldr	r3, [r0, #0]
 8011182:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011184:	4798      	blx	r3
 8011186:	6823      	ldr	r3, [r4, #0]
 8011188:	4620      	mov	r0, r4
 801118a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801118e:	4798      	blx	r3
 8011190:	2001      	movs	r0, #1
 8011192:	f7f0 fc91 	bl	8001ab8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011196:	2300      	movs	r3, #0
 8011198:	702b      	strb	r3, [r5, #0]
 801119a:	b004      	add	sp, #16
 801119c:	bd70      	pop	{r4, r5, r6, pc}
 801119e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80111a2:	4620      	mov	r0, r4
 80111a4:	4798      	blx	r3
 80111a6:	e7af      	b.n	8011108 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80111a8:	2863      	cmp	r0, #99	; 0x63
 80111aa:	bfcb      	itete	gt
 80111ac:	2300      	movgt	r3, #0
 80111ae:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80111b2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80111b6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80111ba:	e7d9      	b.n	8011170 <_ZN8touchgfx3HAL4tickEv+0x128>
 80111bc:	20013448 	.word	0x20013448
 80111c0:	20013449 	.word	0x20013449
 80111c4:	05f5e100 	.word	0x05f5e100

080111c8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80111c8:	b510      	push	{r4, lr}
 80111ca:	4604      	mov	r4, r0
 80111cc:	f7f0 fdcc 	bl	8001d68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80111d0:	6863      	ldr	r3, [r4, #4]
 80111d2:	2200      	movs	r2, #0
 80111d4:	729a      	strb	r2, [r3, #10]
 80111d6:	bd10      	pop	{r4, pc}

080111d8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80111d8:	65c1      	str	r1, [r0, #92]	; 0x5c
 80111da:	301c      	adds	r0, #28
 80111dc:	f015 be9e 	b.w	8026f1c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080111e0 <_ZN8touchgfx3HAL5touchEll>:
 80111e0:	b530      	push	{r4, r5, lr}
 80111e2:	b087      	sub	sp, #28
 80111e4:	4604      	mov	r4, r0
 80111e6:	a804      	add	r0, sp, #16
 80111e8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80111ec:	f004 fc90 	bl	8015b10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80111f0:	9b04      	ldr	r3, [sp, #16]
 80111f2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80111f6:	a906      	add	r1, sp, #24
 80111f8:	9b05      	ldr	r3, [sp, #20]
 80111fa:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80111fe:	a803      	add	r0, sp, #12
 8011200:	f004 fcd8 	bl	8015bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011204:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011208:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801120c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011210:	f104 001c 	add.w	r0, r4, #28
 8011214:	b189      	cbz	r1, 801123a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011216:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801121a:	9300      	str	r3, [sp, #0]
 801121c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011220:	4613      	mov	r3, r2
 8011222:	462a      	mov	r2, r5
 8011224:	f015 fe8a 	bl	8026f3c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011228:	b128      	cbz	r0, 8011236 <_ZN8touchgfx3HAL5touchEll+0x56>
 801122a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801122e:	6623      	str	r3, [r4, #96]	; 0x60
 8011230:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011234:	6663      	str	r3, [r4, #100]	; 0x64
 8011236:	b007      	add	sp, #28
 8011238:	bd30      	pop	{r4, r5, pc}
 801123a:	f015 febf 	bl	8026fbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801123e:	2301      	movs	r3, #1
 8011240:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011244:	e7f1      	b.n	801122a <_ZN8touchgfx3HAL5touchEll+0x4a>

08011246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011246:	b510      	push	{r4, lr}
 8011248:	2b00      	cmp	r3, #0
 801124a:	d046      	beq.n	80112da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801124c:	ea81 0002 	eor.w	r0, r1, r2
 8011250:	07c4      	lsls	r4, r0, #31
 8011252:	d508      	bpl.n	8011266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011254:	440b      	add	r3, r1
 8011256:	3a01      	subs	r2, #1
 8011258:	428b      	cmp	r3, r1
 801125a:	d93e      	bls.n	80112da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801125c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011260:	f801 0b01 	strb.w	r0, [r1], #1
 8011264:	e7f8      	b.n	8011258 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011266:	07d0      	lsls	r0, r2, #31
 8011268:	bf42      	ittt	mi
 801126a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801126e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011272:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011276:	2b01      	cmp	r3, #1
 8011278:	d911      	bls.n	801129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801127a:	ea81 0402 	eor.w	r4, r1, r2
 801127e:	07a4      	lsls	r4, r4, #30
 8011280:	4610      	mov	r0, r2
 8011282:	d022      	beq.n	80112ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011284:	f023 0401 	bic.w	r4, r3, #1
 8011288:	440c      	add	r4, r1
 801128a:	428c      	cmp	r4, r1
 801128c:	4602      	mov	r2, r0
 801128e:	d904      	bls.n	801129a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011290:	8812      	ldrh	r2, [r2, #0]
 8011292:	f821 2b02 	strh.w	r2, [r1], #2
 8011296:	3002      	adds	r0, #2
 8011298:	e7f7      	b.n	801128a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801129a:	f003 0301 	and.w	r3, r3, #1
 801129e:	f023 0003 	bic.w	r0, r3, #3
 80112a2:	4408      	add	r0, r1
 80112a4:	4288      	cmp	r0, r1
 80112a6:	4614      	mov	r4, r2
 80112a8:	d904      	bls.n	80112b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80112aa:	6824      	ldr	r4, [r4, #0]
 80112ac:	f841 4b04 	str.w	r4, [r1], #4
 80112b0:	3204      	adds	r2, #4
 80112b2:	e7f7      	b.n	80112a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80112b4:	f003 0303 	and.w	r3, r3, #3
 80112b8:	440b      	add	r3, r1
 80112ba:	3a01      	subs	r2, #1
 80112bc:	428b      	cmp	r3, r1
 80112be:	d90c      	bls.n	80112da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80112c0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80112c4:	f801 0b01 	strb.w	r0, [r1], #1
 80112c8:	e7f8      	b.n	80112bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80112ca:	0790      	lsls	r0, r2, #30
 80112cc:	d0e7      	beq.n	801129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80112ce:	f832 0b02 	ldrh.w	r0, [r2], #2
 80112d2:	f821 0b02 	strh.w	r0, [r1], #2
 80112d6:	3b02      	subs	r3, #2
 80112d8:	e7e1      	b.n	801129e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80112da:	2001      	movs	r0, #1
 80112dc:	bd10      	pop	{r4, pc}

080112de <_ZN8touchgfx3HAL7noTouchEv>:
 80112de:	b510      	push	{r4, lr}
 80112e0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80112e4:	4604      	mov	r4, r0
 80112e6:	b153      	cbz	r3, 80112fe <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80112e8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80112ec:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80112f0:	2101      	movs	r1, #1
 80112f2:	301c      	adds	r0, #28
 80112f4:	f015 fe62 	bl	8026fbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80112f8:	2300      	movs	r3, #0
 80112fa:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80112fe:	bd10      	pop	{r4, pc}

08011300 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011300:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011304:	b085      	sub	sp, #20
 8011306:	ad04      	add	r5, sp, #16
 8011308:	4604      	mov	r4, r0
 801130a:	2000      	movs	r0, #0
 801130c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011310:	69a0      	ldr	r0, [r4, #24]
 8011312:	6806      	ldr	r6, [r0, #0]
 8011314:	9501      	str	r5, [sp, #4]
 8011316:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801131a:	9500      	str	r5, [sp, #0]
 801131c:	6835      	ldr	r5, [r6, #0]
 801131e:	4699      	mov	r9, r3
 8011320:	460f      	mov	r7, r1
 8011322:	4690      	mov	r8, r2
 8011324:	47a8      	blx	r5
 8011326:	4d10      	ldr	r5, [pc, #64]	; (8011368 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011328:	4606      	mov	r6, r0
 801132a:	f8a5 9000 	strh.w	r9, [r5]
 801132e:	f7f2 ff0f 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8011332:	6803      	ldr	r3, [r0, #0]
 8011334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011336:	4798      	blx	r3
 8011338:	b128      	cbz	r0, 8011346 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801133a:	2801      	cmp	r0, #1
 801133c:	d00b      	beq.n	8011356 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801133e:	4630      	mov	r0, r6
 8011340:	b005      	add	sp, #20
 8011342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011346:	882b      	ldrh	r3, [r5, #0]
 8011348:	fb08 7203 	mla	r2, r8, r3, r7
 801134c:	9b03      	ldr	r3, [sp, #12]
 801134e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011352:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011354:	e7f3      	b.n	801133e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011356:	882a      	ldrh	r2, [r5, #0]
 8011358:	9b03      	ldr	r3, [sp, #12]
 801135a:	fb08 7202 	mla	r2, r8, r2, r7
 801135e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011362:	1a9a      	subs	r2, r3, r2
 8011364:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011366:	e7ea      	b.n	801133e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011368:	2001343e 	.word	0x2001343e

0801136c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801136c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801136e:	b08b      	sub	sp, #44	; 0x2c
 8011370:	4617      	mov	r7, r2
 8011372:	4604      	mov	r4, r0
 8011374:	460e      	mov	r6, r1
 8011376:	461d      	mov	r5, r3
 8011378:	f7f2 feea 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 801137c:	6803      	ldr	r3, [r0, #0]
 801137e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011380:	4798      	blx	r3
 8011382:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011386:	9007      	str	r0, [sp, #28]
 8011388:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801138c:	4b0d      	ldr	r3, [pc, #52]	; (80113c4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801138e:	6822      	ldr	r2, [r4, #0]
 8011390:	881b      	ldrh	r3, [r3, #0]
 8011392:	9306      	str	r3, [sp, #24]
 8011394:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011398:	9305      	str	r3, [sp, #20]
 801139a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801139e:	9304      	str	r3, [sp, #16]
 80113a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80113a4:	9303      	str	r3, [sp, #12]
 80113a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80113aa:	9302      	str	r3, [sp, #8]
 80113ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80113b0:	e9cd 5300 	strd	r5, r3, [sp]
 80113b4:	4631      	mov	r1, r6
 80113b6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80113b8:	463b      	mov	r3, r7
 80113ba:	2200      	movs	r2, #0
 80113bc:	4620      	mov	r0, r4
 80113be:	47a8      	blx	r5
 80113c0:	b00b      	add	sp, #44	; 0x2c
 80113c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80113c4:	2001343e 	.word	0x2001343e

080113c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80113c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80113cc:	4698      	mov	r8, r3
 80113ce:	6803      	ldr	r3, [r0, #0]
 80113d0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80113d2:	4b15      	ldr	r3, [pc, #84]	; (8011428 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80113d4:	b08b      	sub	sp, #44	; 0x2c
 80113d6:	4617      	mov	r7, r2
 80113d8:	f8b3 9000 	ldrh.w	r9, [r3]
 80113dc:	460e      	mov	r6, r1
 80113de:	4604      	mov	r4, r0
 80113e0:	f7f2 feb6 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 80113e4:	6803      	ldr	r3, [r0, #0]
 80113e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113e8:	4798      	blx	r3
 80113ea:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80113ee:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80113f2:	2302      	movs	r3, #2
 80113f4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80113f8:	2301      	movs	r3, #1
 80113fa:	9305      	str	r3, [sp, #20]
 80113fc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011400:	9304      	str	r3, [sp, #16]
 8011402:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011406:	9303      	str	r3, [sp, #12]
 8011408:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801140c:	9302      	str	r3, [sp, #8]
 801140e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011412:	2200      	movs	r2, #0
 8011414:	e9cd 8300 	strd	r8, r3, [sp]
 8011418:	4631      	mov	r1, r6
 801141a:	463b      	mov	r3, r7
 801141c:	4620      	mov	r0, r4
 801141e:	47a8      	blx	r5
 8011420:	b00b      	add	sp, #44	; 0x2c
 8011422:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011426:	bf00      	nop
 8011428:	2001343e 	.word	0x2001343e

0801142c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801142c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011430:	4698      	mov	r8, r3
 8011432:	6803      	ldr	r3, [r0, #0]
 8011434:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011436:	4b11      	ldr	r3, [pc, #68]	; (801147c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011438:	b087      	sub	sp, #28
 801143a:	f8b3 9000 	ldrh.w	r9, [r3]
 801143e:	460e      	mov	r6, r1
 8011440:	4617      	mov	r7, r2
 8011442:	4604      	mov	r4, r0
 8011444:	f7f2 fe84 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8011448:	6803      	ldr	r3, [r0, #0]
 801144a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801144c:	4798      	blx	r3
 801144e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011452:	f8cd 900c 	str.w	r9, [sp, #12]
 8011456:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801145a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801145e:	9302      	str	r3, [sp, #8]
 8011460:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011464:	9301      	str	r3, [sp, #4]
 8011466:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801146a:	9300      	str	r3, [sp, #0]
 801146c:	463a      	mov	r2, r7
 801146e:	4643      	mov	r3, r8
 8011470:	4631      	mov	r1, r6
 8011472:	4620      	mov	r0, r4
 8011474:	47a8      	blx	r5
 8011476:	b007      	add	sp, #28
 8011478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801147c:	2001343e 	.word	0x2001343e

08011480 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011484:	4604      	mov	r4, r0
 8011486:	b08f      	sub	sp, #60	; 0x3c
 8011488:	4610      	mov	r0, r2
 801148a:	460d      	mov	r5, r1
 801148c:	4691      	mov	r9, r2
 801148e:	461e      	mov	r6, r3
 8011490:	f008 f92e 	bl	80196f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011494:	2800      	cmp	r0, #0
 8011496:	f000 809d 	beq.w	80115d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801149a:	6823      	ldr	r3, [r4, #0]
 801149c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80114a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114a2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801163c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80114a6:	4f61      	ldr	r7, [pc, #388]	; (801162c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80114a8:	4620      	mov	r0, r4
 80114aa:	4798      	blx	r3
 80114ac:	6823      	ldr	r3, [r4, #0]
 80114ae:	4620      	mov	r0, r4
 80114b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114b2:	4798      	blx	r3
 80114b4:	f8bb 3000 	ldrh.w	r3, [fp]
 80114b8:	9301      	str	r3, [sp, #4]
 80114ba:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80114be:	f8ba 3000 	ldrh.w	r3, [sl]
 80114c2:	9302      	str	r3, [sp, #8]
 80114c4:	883b      	ldrh	r3, [r7, #0]
 80114c6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80114ca:	9303      	str	r3, [sp, #12]
 80114cc:	4b58      	ldr	r3, [pc, #352]	; (8011630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80114ce:	9305      	str	r3, [sp, #20]
 80114d0:	881a      	ldrh	r2, [r3, #0]
 80114d2:	9204      	str	r2, [sp, #16]
 80114d4:	4640      	mov	r0, r8
 80114d6:	f008 f99f 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80114da:	8038      	strh	r0, [r7, #0]
 80114dc:	4640      	mov	r0, r8
 80114de:	f008 f9cf 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80114e2:	9b05      	ldr	r3, [sp, #20]
 80114e4:	b280      	uxth	r0, r0
 80114e6:	8018      	strh	r0, [r3, #0]
 80114e8:	4b52      	ldr	r3, [pc, #328]	; (8011634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80114ea:	781b      	ldrb	r3, [r3, #0]
 80114ec:	2b00      	cmp	r3, #0
 80114ee:	d174      	bne.n	80115da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80114f0:	883b      	ldrh	r3, [r7, #0]
 80114f2:	f8ab 3000 	strh.w	r3, [fp]
 80114f6:	f8aa 0000 	strh.w	r0, [sl]
 80114fa:	4648      	mov	r0, r9
 80114fc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011500:	f008 f8f6 	bl	80196f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011504:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011508:	2200      	movs	r2, #0
 801150a:	4611      	mov	r1, r2
 801150c:	4628      	mov	r0, r5
 801150e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011512:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011516:	f7f1 f8a2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 801151a:	2301      	movs	r3, #1
 801151c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011520:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011524:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011528:	2b00      	cmp	r3, #0
 801152a:	dd5c      	ble.n	80115e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801152c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011530:	2b00      	cmp	r3, #0
 8011532:	dd58      	ble.n	80115e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011534:	462a      	mov	r2, r5
 8011536:	ab0a      	add	r3, sp, #40	; 0x28
 8011538:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801153c:	6851      	ldr	r1, [r2, #4]
 801153e:	c303      	stmia	r3!, {r0, r1}
 8011540:	4631      	mov	r1, r6
 8011542:	a80a      	add	r0, sp, #40	; 0x28
 8011544:	f7ff fc06 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8011548:	4b38      	ldr	r3, [pc, #224]	; (801162c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801154a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801154e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011552:	2100      	movs	r1, #0
 8011554:	aa0a      	add	r2, sp, #40	; 0x28
 8011556:	4b36      	ldr	r3, [pc, #216]	; (8011630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011558:	910c      	str	r1, [sp, #48]	; 0x30
 801155a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801155e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011562:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011566:	ab08      	add	r3, sp, #32
 8011568:	e883 0003 	stmia.w	r3, {r0, r1}
 801156c:	4618      	mov	r0, r3
 801156e:	a90c      	add	r1, sp, #48	; 0x30
 8011570:	f7ff fbf0 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8011574:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011576:	2b00      	cmp	r3, #0
 8011578:	d13c      	bne.n	80115f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801157a:	2000      	movs	r0, #0
 801157c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011580:	2600      	movs	r6, #0
 8011582:	682a      	ldr	r2, [r5, #0]
 8011584:	696b      	ldr	r3, [r5, #20]
 8011586:	616e      	str	r6, [r5, #20]
 8011588:	9305      	str	r3, [sp, #20]
 801158a:	6892      	ldr	r2, [r2, #8]
 801158c:	a908      	add	r1, sp, #32
 801158e:	4628      	mov	r0, r5
 8011590:	4790      	blx	r2
 8011592:	9b05      	ldr	r3, [sp, #20]
 8011594:	616b      	str	r3, [r5, #20]
 8011596:	4652      	mov	r2, sl
 8011598:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 801159c:	4649      	mov	r1, r9
 801159e:	4628      	mov	r0, r5
 80115a0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80115a4:	f7f1 f85b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80115a8:	4b23      	ldr	r3, [pc, #140]	; (8011638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80115aa:	9a01      	ldr	r2, [sp, #4]
 80115ac:	801a      	strh	r2, [r3, #0]
 80115ae:	4b23      	ldr	r3, [pc, #140]	; (801163c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80115b0:	9a02      	ldr	r2, [sp, #8]
 80115b2:	801a      	strh	r2, [r3, #0]
 80115b4:	4b1d      	ldr	r3, [pc, #116]	; (801162c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80115b6:	9a03      	ldr	r2, [sp, #12]
 80115b8:	801a      	strh	r2, [r3, #0]
 80115ba:	4b1d      	ldr	r3, [pc, #116]	; (8011630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80115bc:	9a04      	ldr	r2, [sp, #16]
 80115be:	801a      	strh	r2, [r3, #0]
 80115c0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80115c4:	6823      	ldr	r3, [r4, #0]
 80115c6:	4620      	mov	r0, r4
 80115c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80115ca:	4798      	blx	r3
 80115cc:	6823      	ldr	r3, [r4, #0]
 80115ce:	4620      	mov	r0, r4
 80115d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115d2:	4798      	blx	r3
 80115d4:	b00f      	add	sp, #60	; 0x3c
 80115d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115da:	883b      	ldrh	r3, [r7, #0]
 80115dc:	f8ab 0000 	strh.w	r0, [fp]
 80115e0:	f8aa 3000 	strh.w	r3, [sl]
 80115e4:	e789      	b.n	80114fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80115e6:	462a      	mov	r2, r5
 80115e8:	ab0a      	add	r3, sp, #40	; 0x28
 80115ea:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80115ee:	6851      	ldr	r1, [r2, #4]
 80115f0:	c303      	stmia	r3!, {r0, r1}
 80115f2:	e7a9      	b.n	8011548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80115f4:	a807      	add	r0, sp, #28
 80115f6:	f008 fa7f 	bl	8019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80115fa:	4606      	mov	r6, r0
 80115fc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80115fe:	6803      	ldr	r3, [r0, #0]
 8011600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011602:	4798      	blx	r3
 8011604:	4286      	cmp	r6, r0
 8011606:	d1b8      	bne.n	801157a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011608:	f7f2 fda2 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 801160c:	6803      	ldr	r3, [r0, #0]
 801160e:	4606      	mov	r6, r0
 8011610:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011612:	9305      	str	r3, [sp, #20]
 8011614:	a807      	add	r0, sp, #28
 8011616:	f008 fa6f 	bl	8019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801161a:	9b05      	ldr	r3, [sp, #20]
 801161c:	4601      	mov	r1, r0
 801161e:	4630      	mov	r0, r6
 8011620:	4798      	blx	r3
 8011622:	f080 0001 	eor.w	r0, r0, #1
 8011626:	b2c0      	uxtb	r0, r0
 8011628:	e7a8      	b.n	801157c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801162a:	bf00      	nop
 801162c:	20013438 	.word	0x20013438
 8011630:	2001343a 	.word	0x2001343a
 8011634:	2001343c 	.word	0x2001343c
 8011638:	2001343e 	.word	0x2001343e
 801163c:	20013440 	.word	0x20013440

08011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011640:	b510      	push	{r4, lr}
 8011642:	4b07      	ldr	r3, [pc, #28]	; (8011660 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011644:	781b      	ldrb	r3, [r3, #0]
 8011646:	4604      	mov	r4, r0
 8011648:	b13b      	cbz	r3, 801165a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801164a:	6803      	ldr	r3, [r0, #0]
 801164c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801164e:	4798      	blx	r3
 8011650:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011652:	4283      	cmp	r3, r0
 8011654:	d101      	bne.n	801165a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011656:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011658:	bd10      	pop	{r4, pc}
 801165a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801165c:	e7fc      	b.n	8011658 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801165e:	bf00      	nop
 8011660:	20013442 	.word	0x20013442

08011664 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011668:	b08a      	sub	sp, #40	; 0x28
 801166a:	461d      	mov	r5, r3
 801166c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011670:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011674:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011678:	f8ad 3018 	strh.w	r3, [sp, #24]
 801167c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011680:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011684:	2400      	movs	r4, #0
 8011686:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801168a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801168e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011692:	4690      	mov	r8, r2
 8011694:	4607      	mov	r7, r0
 8011696:	9404      	str	r4, [sp, #16]
 8011698:	f88d 4020 	strb.w	r4, [sp, #32]
 801169c:	f7ff ffd0 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116a0:	fb06 8505 	mla	r5, r6, r5, r8
 80116a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80116a8:	6878      	ldr	r0, [r7, #4]
 80116aa:	9505      	str	r5, [sp, #20]
 80116ac:	f8ad 601e 	strh.w	r6, [sp, #30]
 80116b0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80116b4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80116b8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80116bc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80116c0:	6803      	ldr	r3, [r0, #0]
 80116c2:	a901      	add	r1, sp, #4
 80116c4:	685b      	ldr	r3, [r3, #4]
 80116c6:	4798      	blx	r3
 80116c8:	b00a      	add	sp, #40	; 0x28
 80116ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080116ce <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80116ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80116d2:	b08b      	sub	sp, #44	; 0x2c
 80116d4:	2400      	movs	r4, #0
 80116d6:	461d      	mov	r5, r3
 80116d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80116dc:	4688      	mov	r8, r1
 80116de:	4691      	mov	r9, r2
 80116e0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80116e4:	9404      	str	r4, [sp, #16]
 80116e6:	4607      	mov	r7, r0
 80116e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80116ec:	f7ff ffa8 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116f0:	fb06 9505 	mla	r5, r6, r5, r9
 80116f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80116f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80116fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011700:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011704:	6878      	ldr	r0, [r7, #4]
 8011706:	9505      	str	r5, [sp, #20]
 8011708:	f8ad 301a 	strh.w	r3, [sp, #26]
 801170c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011710:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011714:	f8cd 8010 	str.w	r8, [sp, #16]
 8011718:	f8ad 4020 	strh.w	r4, [sp, #32]
 801171c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011720:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011724:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011728:	6803      	ldr	r3, [r0, #0]
 801172a:	a901      	add	r1, sp, #4
 801172c:	685b      	ldr	r3, [r3, #4]
 801172e:	4798      	blx	r3
 8011730:	b00b      	add	sp, #44	; 0x2c
 8011732:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801173c:	b08a      	sub	sp, #40	; 0x28
 801173e:	4698      	mov	r8, r3
 8011740:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011744:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011748:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801174c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011750:	2300      	movs	r3, #0
 8011752:	2d0b      	cmp	r5, #11
 8011754:	4606      	mov	r6, r0
 8011756:	9304      	str	r3, [sp, #16]
 8011758:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801175c:	d138      	bne.n	80117d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801175e:	2380      	movs	r3, #128	; 0x80
 8011760:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011764:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011768:	f8ad 3018 	strh.w	r3, [sp, #24]
 801176c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011770:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011774:	f88d 0020 	strb.w	r0, [sp, #32]
 8011778:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801177c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011780:	4630      	mov	r0, r6
 8011782:	9203      	str	r2, [sp, #12]
 8011784:	f7ff ff5c 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011788:	2c0b      	cmp	r4, #11
 801178a:	bf98      	it	ls
 801178c:	4b1b      	ldrls	r3, [pc, #108]	; (80117fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801178e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011792:	bf98      	it	ls
 8011794:	5d19      	ldrbls	r1, [r3, r4]
 8011796:	f8ad 701e 	strh.w	r7, [sp, #30]
 801179a:	bf88      	it	hi
 801179c:	2100      	movhi	r1, #0
 801179e:	fb02 8307 	mla	r3, r2, r7, r8
 80117a2:	10c9      	asrs	r1, r1, #3
 80117a4:	fb01 0003 	mla	r0, r1, r3, r0
 80117a8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80117ac:	9005      	str	r0, [sp, #20]
 80117ae:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80117b2:	6870      	ldr	r0, [r6, #4]
 80117b4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80117b8:	2300      	movs	r3, #0
 80117ba:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80117be:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80117c2:	6803      	ldr	r3, [r0, #0]
 80117c4:	a901      	add	r1, sp, #4
 80117c6:	685b      	ldr	r3, [r3, #4]
 80117c8:	4798      	blx	r3
 80117ca:	b00a      	add	sp, #40	; 0x28
 80117cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80117d0:	2d02      	cmp	r5, #2
 80117d2:	d109      	bne.n	80117e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80117d4:	28ff      	cmp	r0, #255	; 0xff
 80117d6:	d105      	bne.n	80117e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80117d8:	f1bc 0f00 	cmp.w	ip, #0
 80117dc:	bf14      	ite	ne
 80117de:	2340      	movne	r3, #64	; 0x40
 80117e0:	2320      	moveq	r3, #32
 80117e2:	e7bd      	b.n	8011760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80117e4:	2340      	movs	r3, #64	; 0x40
 80117e6:	e7bb      	b.n	8011760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80117e8:	28ff      	cmp	r0, #255	; 0xff
 80117ea:	d105      	bne.n	80117f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80117ec:	f1bc 0f00 	cmp.w	ip, #0
 80117f0:	bf14      	ite	ne
 80117f2:	2304      	movne	r3, #4
 80117f4:	2301      	moveq	r3, #1
 80117f6:	e7b3      	b.n	8011760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80117f8:	2304      	movs	r3, #4
 80117fa:	e7b1      	b.n	8011760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80117fc:	0802f33c 	.word	0x0802f33c

08011800 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011804:	b08b      	sub	sp, #44	; 0x2c
 8011806:	461d      	mov	r5, r3
 8011808:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801180c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011810:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011814:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011818:	bf14      	ite	ne
 801181a:	2308      	movne	r3, #8
 801181c:	2302      	moveq	r3, #2
 801181e:	2400      	movs	r4, #0
 8011820:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011824:	4688      	mov	r8, r1
 8011826:	4693      	mov	fp, r2
 8011828:	9404      	str	r4, [sp, #16]
 801182a:	4607      	mov	r7, r0
 801182c:	f7ff ff08 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011830:	2e0b      	cmp	r6, #11
 8011832:	bf98      	it	ls
 8011834:	4b15      	ldrls	r3, [pc, #84]	; (801188c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011836:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801183a:	bf98      	it	ls
 801183c:	5d9c      	ldrbls	r4, [r3, r6]
 801183e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011842:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011846:	fb05 b50a 	mla	r5, r5, sl, fp
 801184a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801184e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011852:	10e4      	asrs	r4, r4, #3
 8011854:	fb04 0405 	mla	r4, r4, r5, r0
 8011858:	2300      	movs	r3, #0
 801185a:	6878      	ldr	r0, [r7, #4]
 801185c:	9405      	str	r4, [sp, #20]
 801185e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011862:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011866:	f8cd 8010 	str.w	r8, [sp, #16]
 801186a:	f88d 9020 	strb.w	r9, [sp, #32]
 801186e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011872:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011876:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801187a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801187e:	6803      	ldr	r3, [r0, #0]
 8011880:	a901      	add	r1, sp, #4
 8011882:	685b      	ldr	r3, [r3, #4]
 8011884:	4798      	blx	r3
 8011886:	b00b      	add	sp, #44	; 0x2c
 8011888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801188c:	0802f33c 	.word	0x0802f33c

08011890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011894:	461e      	mov	r6, r3
 8011896:	4b0a      	ldr	r3, [pc, #40]	; (80118c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011898:	460f      	mov	r7, r1
 801189a:	881d      	ldrh	r5, [r3, #0]
 801189c:	4690      	mov	r8, r2
 801189e:	f7f2 fc57 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 80118a2:	6803      	ldr	r3, [r0, #0]
 80118a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118a6:	4798      	blx	r3
 80118a8:	280b      	cmp	r0, #11
 80118aa:	bf9a      	itte	ls
 80118ac:	4b05      	ldrls	r3, [pc, #20]	; (80118c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80118ae:	5c1c      	ldrbls	r4, [r3, r0]
 80118b0:	2400      	movhi	r4, #0
 80118b2:	fb08 7005 	mla	r0, r8, r5, r7
 80118b6:	10e4      	asrs	r4, r4, #3
 80118b8:	fb04 6000 	mla	r0, r4, r0, r6
 80118bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118c0:	2001343e 	.word	0x2001343e
 80118c4:	0802f33c 	.word	0x0802f33c

080118c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80118c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80118ca:	b08b      	sub	sp, #44	; 0x2c
 80118cc:	461f      	mov	r7, r3
 80118ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80118d2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80118d6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80118da:	f8ad 3018 	strh.w	r3, [sp, #24]
 80118de:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80118e2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80118e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80118ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80118ee:	2500      	movs	r5, #0
 80118f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80118f4:	f88d 3020 	strb.w	r3, [sp, #32]
 80118f8:	4604      	mov	r4, r0
 80118fa:	4616      	mov	r6, r2
 80118fc:	9504      	str	r5, [sp, #16]
 80118fe:	f7ff fe9f 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011902:	463a      	mov	r2, r7
 8011904:	4631      	mov	r1, r6
 8011906:	4603      	mov	r3, r0
 8011908:	4620      	mov	r0, r4
 801190a:	f7ff ffc1 	bl	8011890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801190e:	4b0e      	ldr	r3, [pc, #56]	; (8011948 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011910:	9005      	str	r0, [sp, #20]
 8011912:	881b      	ldrh	r3, [r3, #0]
 8011914:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011918:	f7f2 fc1a 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 801191c:	6803      	ldr	r3, [r0, #0]
 801191e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011920:	4798      	blx	r3
 8011922:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011924:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011928:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801192c:	9304      	str	r3, [sp, #16]
 801192e:	6860      	ldr	r0, [r4, #4]
 8011930:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011934:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011938:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801193c:	6803      	ldr	r3, [r0, #0]
 801193e:	a901      	add	r1, sp, #4
 8011940:	685b      	ldr	r3, [r3, #4]
 8011942:	4798      	blx	r3
 8011944:	b00b      	add	sp, #44	; 0x2c
 8011946:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011948:	2001343e 	.word	0x2001343e

0801194c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801194c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801194e:	b08d      	sub	sp, #52	; 0x34
 8011950:	466b      	mov	r3, sp
 8011952:	e883 0006 	stmia.w	r3, {r1, r2}
 8011956:	2300      	movs	r3, #0
 8011958:	9306      	str	r3, [sp, #24]
 801195a:	6803      	ldr	r3, [r0, #0]
 801195c:	f8bd 6000 	ldrh.w	r6, [sp]
 8011960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011962:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011966:	2501      	movs	r5, #1
 8011968:	9503      	str	r5, [sp, #12]
 801196a:	4604      	mov	r4, r0
 801196c:	4798      	blx	r3
 801196e:	463a      	mov	r2, r7
 8011970:	4631      	mov	r1, r6
 8011972:	4603      	mov	r3, r0
 8011974:	4620      	mov	r0, r4
 8011976:	f7ff ff8b 	bl	8011890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801197a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801197c:	9307      	str	r3, [sp, #28]
 801197e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011982:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011986:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801198a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801198e:	4b0f      	ldr	r3, [pc, #60]	; (80119cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011990:	9004      	str	r0, [sp, #16]
 8011992:	881b      	ldrh	r3, [r3, #0]
 8011994:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011998:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801199c:	f7f2 fbd8 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 80119a0:	6803      	ldr	r3, [r0, #0]
 80119a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80119a4:	4798      	blx	r3
 80119a6:	23ff      	movs	r3, #255	; 0xff
 80119a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80119ac:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80119b0:	6860      	ldr	r0, [r4, #4]
 80119b2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80119b6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80119ba:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80119be:	6803      	ldr	r3, [r0, #0]
 80119c0:	a903      	add	r1, sp, #12
 80119c2:	685b      	ldr	r3, [r3, #4]
 80119c4:	4798      	blx	r3
 80119c6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80119c8:	b00d      	add	sp, #52	; 0x34
 80119ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119cc:	2001343e 	.word	0x2001343e

080119d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80119d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119d4:	b08c      	sub	sp, #48	; 0x30
 80119d6:	461e      	mov	r6, r3
 80119d8:	466d      	mov	r5, sp
 80119da:	2300      	movs	r3, #0
 80119dc:	e885 0006 	stmia.w	r5, {r1, r2}
 80119e0:	9306      	str	r3, [sp, #24]
 80119e2:	6803      	ldr	r3, [r0, #0]
 80119e4:	f8bd 7000 	ldrh.w	r7, [sp]
 80119e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80119ea:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80119ee:	2501      	movs	r5, #1
 80119f0:	9503      	str	r5, [sp, #12]
 80119f2:	4604      	mov	r4, r0
 80119f4:	4798      	blx	r3
 80119f6:	4642      	mov	r2, r8
 80119f8:	4639      	mov	r1, r7
 80119fa:	4603      	mov	r3, r0
 80119fc:	4620      	mov	r0, r4
 80119fe:	f7ff ff47 	bl	8011890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011a02:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011a06:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011a0a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011a0e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011a12:	4b11      	ldr	r3, [pc, #68]	; (8011a58 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011a14:	9004      	str	r0, [sp, #16]
 8011a16:	881b      	ldrh	r3, [r3, #0]
 8011a18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011a1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011a1e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011a22:	9607      	str	r6, [sp, #28]
 8011a24:	f7f2 fb94 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8011a28:	6803      	ldr	r3, [r0, #0]
 8011a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a2c:	4798      	blx	r3
 8011a2e:	23ff      	movs	r3, #255	; 0xff
 8011a30:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011a34:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011a38:	6860      	ldr	r0, [r4, #4]
 8011a3a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011a3e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011a42:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011a46:	6803      	ldr	r3, [r0, #0]
 8011a48:	a903      	add	r1, sp, #12
 8011a4a:	685b      	ldr	r3, [r3, #4]
 8011a4c:	4798      	blx	r3
 8011a4e:	4630      	mov	r0, r6
 8011a50:	b00c      	add	sp, #48	; 0x30
 8011a52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a56:	bf00      	nop
 8011a58:	2001343e 	.word	0x2001343e

08011a5c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a5e:	b085      	sub	sp, #20
 8011a60:	ac02      	add	r4, sp, #8
 8011a62:	e884 0006 	stmia.w	r4, {r1, r2}
 8011a66:	4605      	mov	r5, r0
 8011a68:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011a6c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011a70:	f7ff fde6 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011a74:	463a      	mov	r2, r7
 8011a76:	4603      	mov	r3, r0
 8011a78:	4631      	mov	r1, r6
 8011a7a:	4628      	mov	r0, r5
 8011a7c:	f7ff ff08 	bl	8011890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011a80:	4a05      	ldr	r2, [pc, #20]	; (8011a98 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011a82:	682b      	ldr	r3, [r5, #0]
 8011a84:	8812      	ldrh	r2, [r2, #0]
 8011a86:	9200      	str	r2, [sp, #0]
 8011a88:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011a8a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011a8e:	4603      	mov	r3, r0
 8011a90:	4628      	mov	r0, r5
 8011a92:	47b0      	blx	r6
 8011a94:	b005      	add	sp, #20
 8011a96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a98:	2001343e 	.word	0x2001343e

08011a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011a9c:	b570      	push	{r4, r5, r6, lr}
 8011a9e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011aa2:	4604      	mov	r4, r0
 8011aa4:	b19b      	cbz	r3, 8011ace <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011aa6:	2002      	movs	r0, #2
 8011aa8:	f7f0 f81e 	bl	8001ae8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011aac:	2300      	movs	r3, #0
 8011aae:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011ab2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011ab6:	6823      	ldr	r3, [r4, #0]
 8011ab8:	4620      	mov	r0, r4
 8011aba:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011abe:	f7ff fdbf 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011ac2:	462b      	mov	r3, r5
 8011ac4:	4601      	mov	r1, r0
 8011ac6:	4620      	mov	r0, r4
 8011ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011acc:	4718      	bx	r3
 8011ace:	bd70      	pop	{r4, r5, r6, pc}

08011ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011ad0:	b538      	push	{r3, r4, r5, lr}
 8011ad2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011ad6:	428b      	cmp	r3, r1
 8011ad8:	4604      	mov	r4, r0
 8011ada:	460d      	mov	r5, r1
 8011adc:	d006      	beq.n	8011aec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011ade:	6803      	ldr	r3, [r0, #0]
 8011ae0:	b929      	cbnz	r1, 8011aee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011ae2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011ae6:	4798      	blx	r3
 8011ae8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011aec:	bd38      	pop	{r3, r4, r5, pc}
 8011aee:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011af2:	e7f8      	b.n	8011ae6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011af4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011af4:	b510      	push	{r4, lr}
 8011af6:	4b0d      	ldr	r3, [pc, #52]	; (8011b2c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011af8:	781b      	ldrb	r3, [r3, #0]
 8011afa:	4604      	mov	r4, r0
 8011afc:	b95b      	cbnz	r3, 8011b16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011afe:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011b02:	2b02      	cmp	r3, #2
 8011b04:	d007      	beq.n	8011b16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011b06:	6840      	ldr	r0, [r0, #4]
 8011b08:	f000 f92c 	bl	8011d64 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011b0c:	b118      	cbz	r0, 8011b16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011b0e:	6862      	ldr	r2, [r4, #4]
 8011b10:	7a53      	ldrb	r3, [r2, #9]
 8011b12:	2b00      	cmp	r3, #0
 8011b14:	d0fc      	beq.n	8011b10 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011b16:	f7f0 f91f 	bl	8001d58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011b1a:	4620      	mov	r0, r4
 8011b1c:	2100      	movs	r1, #0
 8011b1e:	f7ff ffd7 	bl	8011ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011b22:	4620      	mov	r0, r4
 8011b24:	f7ff fd8c 	bl	8011640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011b28:	bd10      	pop	{r4, pc}
 8011b2a:	bf00      	nop
 8011b2c:	20013442 	.word	0x20013442

08011b30 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011b30:	b570      	push	{r4, r5, r6, lr}
 8011b32:	4604      	mov	r4, r0
 8011b34:	6803      	ldr	r3, [r0, #0]
 8011b36:	b919      	cbnz	r1, 8011b40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011b38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011b3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b3e:	4718      	bx	r3
 8011b40:	2200      	movs	r2, #0
 8011b42:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8011b46:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011b4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011b4c:	4798      	blx	r3
 8011b4e:	6863      	ldr	r3, [r4, #4]
 8011b50:	2101      	movs	r1, #1
 8011b52:	4605      	mov	r5, r0
 8011b54:	7299      	strb	r1, [r3, #10]
 8011b56:	4620      	mov	r0, r4
 8011b58:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011b5c:	f7ff ffb8 	bl	8011ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011b60:	4628      	mov	r0, r5
 8011b62:	bd70      	pop	{r4, r5, r6, pc}

08011b64 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011b64:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011b68:	1a13      	subs	r3, r2, r0
 8011b6a:	4258      	negs	r0, r3
 8011b6c:	4158      	adcs	r0, r3
 8011b6e:	4770      	bx	lr

08011b70 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011b70:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011b74:	1a9b      	subs	r3, r3, r2
 8011b76:	2b00      	cmp	r3, #0
 8011b78:	bfdc      	itt	le
 8011b7a:	6882      	ldrle	r2, [r0, #8]
 8011b7c:	189b      	addle	r3, r3, r2
 8011b7e:	2b01      	cmp	r3, #1
 8011b80:	bfcc      	ite	gt
 8011b82:	2000      	movgt	r0, #0
 8011b84:	2001      	movle	r0, #1
 8011b86:	4770      	bx	lr

08011b88 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011b88:	6902      	ldr	r2, [r0, #16]
 8011b8a:	6843      	ldr	r3, [r0, #4]
 8011b8c:	2024      	movs	r0, #36	; 0x24
 8011b8e:	fb00 3002 	mla	r0, r0, r2, r3
 8011b92:	4770      	bx	lr

08011b94 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011b94:	6803      	ldr	r3, [r0, #0]
 8011b96:	691b      	ldr	r3, [r3, #16]
 8011b98:	4718      	bx	r3

08011b9a <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011b9a:	b570      	push	{r4, r5, r6, lr}
 8011b9c:	2301      	movs	r3, #1
 8011b9e:	7203      	strb	r3, [r0, #8]
 8011ba0:	4604      	mov	r4, r0
 8011ba2:	6840      	ldr	r0, [r0, #4]
 8011ba4:	6803      	ldr	r3, [r0, #0]
 8011ba6:	699b      	ldr	r3, [r3, #24]
 8011ba8:	4798      	blx	r3
 8011baa:	6803      	ldr	r3, [r0, #0]
 8011bac:	2b40      	cmp	r3, #64	; 0x40
 8011bae:	4605      	mov	r5, r0
 8011bb0:	d00c      	beq.n	8011bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011bb2:	d810      	bhi.n	8011bd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011bb4:	2b04      	cmp	r3, #4
 8011bb6:	d01d      	beq.n	8011bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011bb8:	d804      	bhi.n	8011bc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011bba:	2b01      	cmp	r3, #1
 8011bbc:	d006      	beq.n	8011bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011bbe:	2b02      	cmp	r3, #2
 8011bc0:	d02c      	beq.n	8011c1c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011bc2:	bd70      	pop	{r4, r5, r6, pc}
 8011bc4:	2b08      	cmp	r3, #8
 8011bc6:	d01d      	beq.n	8011c04 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011bc8:	2b20      	cmp	r3, #32
 8011bca:	d1fa      	bne.n	8011bc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011bcc:	6823      	ldr	r3, [r4, #0]
 8011bce:	4620      	mov	r0, r4
 8011bd0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011bd2:	4798      	blx	r3
 8011bd4:	e013      	b.n	8011bfe <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011bd6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011bda:	d0f7      	beq.n	8011bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011bdc:	d804      	bhi.n	8011be8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011bde:	2b80      	cmp	r3, #128	; 0x80
 8011be0:	d0f4      	beq.n	8011bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011be2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011be6:	e7f0      	b.n	8011bca <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011be8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011bec:	d0ee      	beq.n	8011bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011bee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011bf2:	e7e5      	b.n	8011bc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011bf4:	6823      	ldr	r3, [r4, #0]
 8011bf6:	7f01      	ldrb	r1, [r0, #28]
 8011bf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011bfa:	4620      	mov	r0, r4
 8011bfc:	4798      	blx	r3
 8011bfe:	6823      	ldr	r3, [r4, #0]
 8011c00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011c02:	e006      	b.n	8011c12 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011c04:	6823      	ldr	r3, [r4, #0]
 8011c06:	7f01      	ldrb	r1, [r0, #28]
 8011c08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011c0a:	4620      	mov	r0, r4
 8011c0c:	4798      	blx	r3
 8011c0e:	6823      	ldr	r3, [r4, #0]
 8011c10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011c12:	4629      	mov	r1, r5
 8011c14:	4620      	mov	r0, r4
 8011c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c1a:	4718      	bx	r3
 8011c1c:	6823      	ldr	r3, [r4, #0]
 8011c1e:	4620      	mov	r0, r4
 8011c20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011c22:	4798      	blx	r3
 8011c24:	e7f3      	b.n	8011c0e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011c26 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011c26:	4770      	bx	lr

08011c28 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011c28:	4770      	bx	lr

08011c2a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011c2a:	4770      	bx	lr

08011c2c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011c2c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011c30:	1ad2      	subs	r2, r2, r3
 8011c32:	2a00      	cmp	r2, #0
 8011c34:	b510      	push	{r4, lr}
 8011c36:	bfdc      	itt	le
 8011c38:	6884      	ldrle	r4, [r0, #8]
 8011c3a:	1912      	addle	r2, r2, r4
 8011c3c:	2a01      	cmp	r2, #1
 8011c3e:	dd16      	ble.n	8011c6e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011c40:	6842      	ldr	r2, [r0, #4]
 8011c42:	2424      	movs	r4, #36	; 0x24
 8011c44:	fb04 2303 	mla	r3, r4, r3, r2
 8011c48:	f101 0220 	add.w	r2, r1, #32
 8011c4c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011c50:	f843 4b04 	str.w	r4, [r3], #4
 8011c54:	4291      	cmp	r1, r2
 8011c56:	d1f9      	bne.n	8011c4c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011c58:	780a      	ldrb	r2, [r1, #0]
 8011c5a:	701a      	strb	r2, [r3, #0]
 8011c5c:	68c3      	ldr	r3, [r0, #12]
 8011c5e:	6882      	ldr	r2, [r0, #8]
 8011c60:	f3bf 8f5b 	dmb	ish
 8011c64:	3301      	adds	r3, #1
 8011c66:	429a      	cmp	r2, r3
 8011c68:	bfd8      	it	le
 8011c6a:	1a9b      	suble	r3, r3, r2
 8011c6c:	60c3      	str	r3, [r0, #12]
 8011c6e:	bd10      	pop	{r4, pc}

08011c70 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011c70:	6903      	ldr	r3, [r0, #16]
 8011c72:	6882      	ldr	r2, [r0, #8]
 8011c74:	f3bf 8f5b 	dmb	ish
 8011c78:	3301      	adds	r3, #1
 8011c7a:	429a      	cmp	r2, r3
 8011c7c:	bfd8      	it	le
 8011c7e:	1a9b      	suble	r3, r3, r2
 8011c80:	6103      	str	r3, [r0, #16]
 8011c82:	4770      	bx	lr

08011c84 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011c84:	b570      	push	{r4, r5, r6, lr}
 8011c86:	4604      	mov	r4, r0
 8011c88:	460e      	mov	r6, r1
 8011c8a:	6860      	ldr	r0, [r4, #4]
 8011c8c:	6803      	ldr	r3, [r0, #0]
 8011c8e:	685b      	ldr	r3, [r3, #4]
 8011c90:	4798      	blx	r3
 8011c92:	2800      	cmp	r0, #0
 8011c94:	d1f9      	bne.n	8011c8a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011c96:	4d0d      	ldr	r5, [pc, #52]	; (8011ccc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011c98:	6828      	ldr	r0, [r5, #0]
 8011c9a:	6803      	ldr	r3, [r0, #0]
 8011c9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c9e:	4798      	blx	r3
 8011ca0:	f7f0 f868 	bl	8001d74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011ca4:	6828      	ldr	r0, [r5, #0]
 8011ca6:	2101      	movs	r1, #1
 8011ca8:	f7ff ff12 	bl	8011ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011cac:	6860      	ldr	r0, [r4, #4]
 8011cae:	6803      	ldr	r3, [r0, #0]
 8011cb0:	4631      	mov	r1, r6
 8011cb2:	689b      	ldr	r3, [r3, #8]
 8011cb4:	4798      	blx	r3
 8011cb6:	6823      	ldr	r3, [r4, #0]
 8011cb8:	4620      	mov	r0, r4
 8011cba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cbc:	4798      	blx	r3
 8011cbe:	6828      	ldr	r0, [r5, #0]
 8011cc0:	6803      	ldr	r3, [r0, #0]
 8011cc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cc6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011cc8:	4718      	bx	r3
 8011cca:	bf00      	nop
 8011ccc:	20013444 	.word	0x20013444

08011cd0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011cd0:	b508      	push	{r3, lr}
 8011cd2:	f7f0 f841 	bl	8001d58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011cd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011cda:	f7f0 b845 	b.w	8001d68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011cde <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011cde:	b510      	push	{r4, lr}
 8011ce0:	2114      	movs	r1, #20
 8011ce2:	4604      	mov	r4, r0
 8011ce4:	f018 f9fd 	bl	802a0e2 <_ZdlPvj>
 8011ce8:	4620      	mov	r0, r4
 8011cea:	bd10      	pop	{r4, pc}

08011cec <_ZN8touchgfx13DMA_Interface5startEv>:
 8011cec:	b510      	push	{r4, lr}
 8011cee:	4604      	mov	r4, r0
 8011cf0:	6840      	ldr	r0, [r0, #4]
 8011cf2:	6803      	ldr	r3, [r0, #0]
 8011cf4:	681b      	ldr	r3, [r3, #0]
 8011cf6:	4798      	blx	r3
 8011cf8:	b948      	cbnz	r0, 8011d0e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011cfa:	7a63      	ldrb	r3, [r4, #9]
 8011cfc:	b13b      	cbz	r3, 8011d0e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011cfe:	7a23      	ldrb	r3, [r4, #8]
 8011d00:	b92b      	cbnz	r3, 8011d0e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011d02:	6823      	ldr	r3, [r4, #0]
 8011d04:	4620      	mov	r0, r4
 8011d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d0c:	4718      	bx	r3
 8011d0e:	bd10      	pop	{r4, pc}

08011d10 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011d10:	b570      	push	{r4, r5, r6, lr}
 8011d12:	4604      	mov	r4, r0
 8011d14:	6840      	ldr	r0, [r0, #4]
 8011d16:	6803      	ldr	r3, [r0, #0]
 8011d18:	681b      	ldr	r3, [r3, #0]
 8011d1a:	4798      	blx	r3
 8011d1c:	4605      	mov	r5, r0
 8011d1e:	b930      	cbnz	r0, 8011d2e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011d20:	7a23      	ldrb	r3, [r4, #8]
 8011d22:	b123      	cbz	r3, 8011d2e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011d24:	6860      	ldr	r0, [r4, #4]
 8011d26:	6803      	ldr	r3, [r0, #0]
 8011d28:	695b      	ldr	r3, [r3, #20]
 8011d2a:	4798      	blx	r3
 8011d2c:	7225      	strb	r5, [r4, #8]
 8011d2e:	6860      	ldr	r0, [r4, #4]
 8011d30:	6803      	ldr	r3, [r0, #0]
 8011d32:	681b      	ldr	r3, [r3, #0]
 8011d34:	4798      	blx	r3
 8011d36:	b928      	cbnz	r0, 8011d44 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011d38:	6823      	ldr	r3, [r4, #0]
 8011d3a:	4620      	mov	r0, r4
 8011d3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d42:	4718      	bx	r3
 8011d44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d48:	f7f0 b81c 	b.w	8001d84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011d4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011d4c:	b510      	push	{r4, lr}
 8011d4e:	4c04      	ldr	r4, [pc, #16]	; (8011d60 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011d50:	6082      	str	r2, [r0, #8]
 8011d52:	2200      	movs	r2, #0
 8011d54:	e9c0 4100 	strd	r4, r1, [r0]
 8011d58:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011d5c:	bd10      	pop	{r4, pc}
 8011d5e:	bf00      	nop
 8011d60:	0802f350 	.word	0x0802f350

08011d64 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011d64:	6840      	ldr	r0, [r0, #4]
 8011d66:	6803      	ldr	r3, [r0, #0]
 8011d68:	681b      	ldr	r3, [r3, #0]
 8011d6a:	4718      	bx	r3

08011d6c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011d6c:	4b06      	ldr	r3, [pc, #24]	; (8011d88 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011d6e:	60c1      	str	r1, [r0, #12]
 8011d70:	094a      	lsrs	r2, r1, #5
 8011d72:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011d76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011d7a:	4313      	orrs	r3, r2
 8011d7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011d80:	4319      	orrs	r1, r3
 8011d82:	8201      	strh	r1, [r0, #16]
 8011d84:	4770      	bx	lr
 8011d86:	bf00      	nop
 8011d88:	fffff800 	.word	0xfffff800

08011d8c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011d8c:	f1a0 0008 	sub.w	r0, r0, #8
 8011d90:	e7ec      	b.n	8011d6c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011d92:	bf00      	nop

08011d94 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011d94:	b508      	push	{r3, lr}
 8011d96:	4b05      	ldr	r3, [pc, #20]	; (8011dac <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011d98:	6818      	ldr	r0, [r3, #0]
 8011d9a:	6803      	ldr	r3, [r0, #0]
 8011d9c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011da0:	4798      	blx	r3
 8011da2:	1e43      	subs	r3, r0, #1
 8011da4:	4258      	negs	r0, r3
 8011da6:	4158      	adcs	r0, r3
 8011da8:	bd08      	pop	{r3, pc}
 8011daa:	bf00      	nop
 8011dac:	20013444 	.word	0x20013444

08011db0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011db0:	4770      	bx	lr

08011db2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011db2:	3808      	subs	r0, #8
 8011db4:	4770      	bx	lr

08011db6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011db6:	b430      	push	{r4, r5}
 8011db8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011dbc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011dc0:	8a02      	ldrh	r2, [r0, #16]
 8011dc2:	9202      	str	r2, [sp, #8]
 8011dc4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011dc8:	68c2      	ldr	r2, [r0, #12]
 8011dca:	4629      	mov	r1, r5
 8011dcc:	4620      	mov	r0, r4
 8011dce:	bc30      	pop	{r4, r5}
 8011dd0:	f7f0 ba9a 	b.w	8002308 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011dd4 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011dd4:	f7f0 ba96 	b.w	8002304 <_ZN8touchgfx5paint8tearDownEv>

08011dd8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011dd8:	b510      	push	{r4, lr}
 8011dda:	2114      	movs	r1, #20
 8011ddc:	4604      	mov	r4, r0
 8011dde:	f018 f980 	bl	802a0e2 <_ZdlPvj>
 8011de2:	4620      	mov	r0, r4
 8011de4:	bd10      	pop	{r4, pc}

08011de6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011de6:	f1a0 0008 	sub.w	r0, r0, #8
 8011dea:	e7f5      	b.n	8011dd8 <_ZN8touchgfx13PainterRGB565D0Ev>

08011dec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011dec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011dee:	6803      	ldr	r3, [r0, #0]
 8011df0:	460d      	mov	r5, r1
 8011df2:	4604      	mov	r4, r0
 8011df4:	4601      	mov	r1, r0
 8011df6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011df8:	a802      	add	r0, sp, #8
 8011dfa:	4798      	blx	r3
 8011dfc:	6828      	ldr	r0, [r5, #0]
 8011dfe:	6869      	ldr	r1, [r5, #4]
 8011e00:	466b      	mov	r3, sp
 8011e02:	c303      	stmia	r3!, {r0, r1}
 8011e04:	4668      	mov	r0, sp
 8011e06:	4619      	mov	r1, r3
 8011e08:	f7fe ffa4 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8011e0c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011e0e:	b188      	cbz	r0, 8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e10:	6803      	ldr	r3, [r0, #0]
 8011e12:	1d21      	adds	r1, r4, #4
 8011e14:	68db      	ldr	r3, [r3, #12]
 8011e16:	4798      	blx	r3
 8011e18:	b160      	cbz	r0, 8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e1a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011e1e:	2b00      	cmp	r3, #0
 8011e20:	dd08      	ble.n	8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e22:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011e26:	2d00      	cmp	r5, #0
 8011e28:	dd04      	ble.n	8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e2a:	4a2b      	ldr	r2, [pc, #172]	; (8011ed8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011e2c:	7812      	ldrb	r2, [r2, #0]
 8011e2e:	b11a      	cbz	r2, 8011e38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011e30:	2a01      	cmp	r2, #1
 8011e32:	d029      	beq.n	8011e88 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011e34:	b004      	add	sp, #16
 8011e36:	bd70      	pop	{r4, r5, r6, pc}
 8011e38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011e3c:	441d      	add	r5, r3
 8011e3e:	b2ad      	uxth	r5, r5
 8011e40:	b22e      	sxth	r6, r5
 8011e42:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011e46:	42b3      	cmp	r3, r6
 8011e48:	daf4      	bge.n	8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e4a:	6823      	ldr	r3, [r4, #0]
 8011e4c:	4669      	mov	r1, sp
 8011e4e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011e50:	4620      	mov	r0, r4
 8011e52:	4798      	blx	r3
 8011e54:	b940      	cbnz	r0, 8011e68 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011e56:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011e5a:	2b01      	cmp	r3, #1
 8011e5c:	d004      	beq.n	8011e68 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011e5e:	3301      	adds	r3, #1
 8011e60:	105b      	asrs	r3, r3, #1
 8011e62:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011e66:	e7f0      	b.n	8011e4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011e68:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011e6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011e70:	4413      	add	r3, r2
 8011e72:	b29b      	uxth	r3, r3
 8011e74:	441a      	add	r2, r3
 8011e76:	b212      	sxth	r2, r2
 8011e78:	4296      	cmp	r6, r2
 8011e7a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011e7e:	dae0      	bge.n	8011e42 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011e80:	1aeb      	subs	r3, r5, r3
 8011e82:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011e86:	e7dc      	b.n	8011e42 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011e88:	f8bd 5000 	ldrh.w	r5, [sp]
 8011e8c:	441d      	add	r5, r3
 8011e8e:	b2ad      	uxth	r5, r5
 8011e90:	b22e      	sxth	r6, r5
 8011e92:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011e96:	42b3      	cmp	r3, r6
 8011e98:	dacc      	bge.n	8011e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011e9a:	6823      	ldr	r3, [r4, #0]
 8011e9c:	4669      	mov	r1, sp
 8011e9e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011ea0:	4620      	mov	r0, r4
 8011ea2:	4798      	blx	r3
 8011ea4:	b940      	cbnz	r0, 8011eb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011ea6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011eaa:	2b01      	cmp	r3, #1
 8011eac:	d004      	beq.n	8011eb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011eae:	3301      	adds	r3, #1
 8011eb0:	105b      	asrs	r3, r3, #1
 8011eb2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011eb6:	e7f0      	b.n	8011e9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011eb8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011ebc:	f8bd 3000 	ldrh.w	r3, [sp]
 8011ec0:	4413      	add	r3, r2
 8011ec2:	b29b      	uxth	r3, r3
 8011ec4:	441a      	add	r2, r3
 8011ec6:	b212      	sxth	r2, r2
 8011ec8:	4296      	cmp	r6, r2
 8011eca:	f8ad 3000 	strh.w	r3, [sp]
 8011ece:	dae0      	bge.n	8011e92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011ed0:	1aeb      	subs	r3, r5, r3
 8011ed2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011ed6:	e7dc      	b.n	8011e92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011ed8:	2001343c 	.word	0x2001343c

08011edc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011edc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011ede:	6803      	ldr	r3, [r0, #0]
 8011ee0:	4604      	mov	r4, r0
 8011ee2:	4601      	mov	r1, r0
 8011ee4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011ee6:	4668      	mov	r0, sp
 8011ee8:	4798      	blx	r3
 8011eea:	2100      	movs	r1, #0
 8011eec:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011ef0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011ef4:	9102      	str	r1, [sp, #8]
 8011ef6:	4668      	mov	r0, sp
 8011ef8:	a902      	add	r1, sp, #8
 8011efa:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011efe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011f02:	f7fe ff27 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8011f06:	6823      	ldr	r3, [r4, #0]
 8011f08:	4669      	mov	r1, sp
 8011f0a:	691b      	ldr	r3, [r3, #16]
 8011f0c:	4620      	mov	r0, r4
 8011f0e:	4798      	blx	r3
 8011f10:	b004      	add	sp, #16
 8011f12:	bd10      	pop	{r4, pc}

08011f14 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011f14:	2101      	movs	r1, #1
 8011f16:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011f1a:	490b      	ldr	r1, [pc, #44]	; (8011f48 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011f1c:	6001      	str	r1, [r0, #0]
 8011f1e:	2200      	movs	r2, #0
 8011f20:	21ff      	movs	r1, #255	; 0xff
 8011f22:	8082      	strh	r2, [r0, #4]
 8011f24:	80c2      	strh	r2, [r0, #6]
 8011f26:	8102      	strh	r2, [r0, #8]
 8011f28:	8142      	strh	r2, [r0, #10]
 8011f2a:	8182      	strh	r2, [r0, #12]
 8011f2c:	81c2      	strh	r2, [r0, #14]
 8011f2e:	8202      	strh	r2, [r0, #16]
 8011f30:	8242      	strh	r2, [r0, #18]
 8011f32:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011f36:	61c2      	str	r2, [r0, #28]
 8011f38:	8402      	strh	r2, [r0, #32]
 8011f3a:	8442      	strh	r2, [r0, #34]	; 0x22
 8011f3c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011f40:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011f44:	6282      	str	r2, [r0, #40]	; 0x28
 8011f46:	4770      	bx	lr
 8011f48:	0802f3ac 	.word	0x0802f3ac

08011f4c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011f4c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011f50:	4602      	mov	r2, r0
 8011f52:	cb03      	ldmia	r3!, {r0, r1}
 8011f54:	6010      	str	r0, [r2, #0]
 8011f56:	6051      	str	r1, [r2, #4]
 8011f58:	4610      	mov	r0, r2
 8011f5a:	4770      	bx	lr

08011f5c <_ZN8touchgfx4LineD1Ev>:
 8011f5c:	4770      	bx	lr

08011f5e <_ZN8touchgfx4LineD0Ev>:
 8011f5e:	b510      	push	{r4, lr}
 8011f60:	2170      	movs	r1, #112	; 0x70
 8011f62:	4604      	mov	r4, r0
 8011f64:	f018 f8bd 	bl	802a0e2 <_ZdlPvj>
 8011f68:	4620      	mov	r0, r4
 8011f6a:	bd10      	pop	{r4, pc}

08011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011f6c:	b507      	push	{r0, r1, r2, lr}
 8011f6e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011f72:	ab01      	add	r3, sp, #4
 8011f74:	6809      	ldr	r1, [r1, #0]
 8011f76:	6800      	ldr	r0, [r0, #0]
 8011f78:	f005 fab4 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 8011f7c:	b003      	add	sp, #12
 8011f7e:	f85d fb04 	ldr.w	pc, [sp], #4

08011f82 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011f82:	6800      	ldr	r0, [r0, #0]
 8011f84:	2800      	cmp	r0, #0
 8011f86:	bfb9      	ittee	lt
 8011f88:	2320      	movlt	r3, #32
 8011f8a:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011f8e:	301f      	addge	r0, #31
 8011f90:	1140      	asrge	r0, r0, #5
 8011f92:	4770      	bx	lr

08011f94 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f98:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011f9c:	b089      	sub	sp, #36	; 0x24
 8011f9e:	4604      	mov	r4, r0
 8011fa0:	b353      	cbz	r3, 8011ff8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011fa2:	6803      	ldr	r3, [r0, #0]
 8011fa4:	4601      	mov	r1, r0
 8011fa6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011fa8:	a802      	add	r0, sp, #8
 8011faa:	4798      	blx	r3
 8011fac:	2220      	movs	r2, #32
 8011fae:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011fb2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011fb4:	fb9a f0f2 	sdiv	r0, sl, r2
 8011fb8:	fb91 f5f2 	sdiv	r5, r1, r2
 8011fbc:	1b40      	subs	r0, r0, r5
 8011fbe:	2800      	cmp	r0, #0
 8011fc0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011fc2:	fb93 f6f2 	sdiv	r6, r3, r2
 8011fc6:	bfb8      	it	lt
 8011fc8:	4240      	neglt	r0, r0
 8011fca:	0076      	lsls	r6, r6, #1
 8011fcc:	4286      	cmp	r6, r0
 8011fce:	f8d4 b000 	ldr.w	fp, [r4]
 8011fd2:	dc0c      	bgt.n	8011fee <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011fd4:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011fd6:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011fda:	fb95 f0f2 	sdiv	r0, r5, r2
 8011fde:	fb98 f7f2 	sdiv	r7, r8, r2
 8011fe2:	1bc0      	subs	r0, r0, r7
 8011fe4:	2800      	cmp	r0, #0
 8011fe6:	bfb8      	it	lt
 8011fe8:	4240      	neglt	r0, r0
 8011fea:	4286      	cmp	r6, r0
 8011fec:	dd07      	ble.n	8011ffe <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011fee:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011ff2:	a902      	add	r1, sp, #8
 8011ff4:	4620      	mov	r0, r4
 8011ff6:	4798      	blx	r3
 8011ff8:	b009      	add	sp, #36	; 0x24
 8011ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ffe:	3301      	adds	r3, #1
 8012000:	2002      	movs	r0, #2
 8012002:	f10d 0920 	add.w	r9, sp, #32
 8012006:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801200a:	4103      	asrs	r3, r0
 801200c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8012010:	eb01 060a 	add.w	r6, r1, sl
 8012014:	eb08 0705 	add.w	r7, r8, r5
 8012018:	fb96 f6f0 	sdiv	r6, r6, r0
 801201c:	fb97 f7f0 	sdiv	r7, r7, r0
 8012020:	4648      	mov	r0, r9
 8012022:	9101      	str	r1, [sp, #4]
 8012024:	b236      	sxth	r6, r6
 8012026:	b23f      	sxth	r7, r7
 8012028:	fb96 f6f2 	sdiv	r6, r6, r2
 801202c:	fb97 f7f2 	sdiv	r7, r7, r2
 8012030:	f7ff ffa7 	bl	8011f82 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012034:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012038:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801203c:	9901      	ldr	r1, [sp, #4]
 801203e:	4293      	cmp	r3, r2
 8012040:	fa1f fe87 	uxth.w	lr, r7
 8012044:	fa1f fc86 	uxth.w	ip, r6
 8012048:	eba1 0a0a 	sub.w	sl, r1, sl
 801204c:	b280      	uxth	r0, r0
 801204e:	da54      	bge.n	80120fa <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012050:	ebac 0100 	sub.w	r1, ip, r0
 8012054:	b289      	uxth	r1, r1
 8012056:	4460      	add	r0, ip
 8012058:	f1ba 0f00 	cmp.w	sl, #0
 801205c:	b20e      	sxth	r6, r1
 801205e:	b280      	uxth	r0, r0
 8012060:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012064:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012068:	da29      	bge.n	80120be <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801206a:	eba8 0505 	sub.w	r5, r8, r5
 801206e:	2d00      	cmp	r5, #0
 8012070:	da2a      	bge.n	80120c8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012072:	fa1f f88a 	uxth.w	r8, sl
 8012076:	eba0 0008 	sub.w	r0, r0, r8
 801207a:	fa1f f58c 	uxth.w	r5, ip
 801207e:	4443      	add	r3, r8
 8012080:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012084:	1a59      	subs	r1, r3, r1
 8012086:	ebae 0005 	sub.w	r0, lr, r5
 801208a:	f8ad a010 	strh.w	sl, [sp, #16]
 801208e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012092:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012096:	f8ad 6018 	strh.w	r6, [sp, #24]
 801209a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801209e:	f8ad 101c 	strh.w	r1, [sp, #28]
 80120a2:	442a      	add	r2, r5
 80120a4:	eba2 0e0e 	sub.w	lr, r2, lr
 80120a8:	f8ad e01e 	strh.w	lr, [sp, #30]
 80120ac:	f8db 3010 	ldr.w	r3, [fp, #16]
 80120b0:	a904      	add	r1, sp, #16
 80120b2:	4620      	mov	r0, r4
 80120b4:	4798      	blx	r3
 80120b6:	6823      	ldr	r3, [r4, #0]
 80120b8:	4649      	mov	r1, r9
 80120ba:	691b      	ldr	r3, [r3, #16]
 80120bc:	e79a      	b.n	8011ff4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80120be:	d003      	beq.n	80120c8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80120c0:	eba8 0505 	sub.w	r5, r8, r5
 80120c4:	2d00      	cmp	r5, #0
 80120c6:	dcd4      	bgt.n	8012072 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80120c8:	fa1f f88a 	uxth.w	r8, sl
 80120cc:	4443      	add	r3, r8
 80120ce:	fa1f f58c 	uxth.w	r5, ip
 80120d2:	1a59      	subs	r1, r3, r1
 80120d4:	eba0 0008 	sub.w	r0, r0, r8
 80120d8:	ebae 0305 	sub.w	r3, lr, r5
 80120dc:	f8ad 6010 	strh.w	r6, [sp, #16]
 80120e0:	f8ad c012 	strh.w	ip, [sp, #18]
 80120e4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80120e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80120ec:	f8ad a018 	strh.w	sl, [sp, #24]
 80120f0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80120f4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80120f8:	e7d3      	b.n	80120a2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80120fa:	ebae 0100 	sub.w	r1, lr, r0
 80120fe:	b289      	uxth	r1, r1
 8012100:	4470      	add	r0, lr
 8012102:	f1ba 0f00 	cmp.w	sl, #0
 8012106:	b20f      	sxth	r7, r1
 8012108:	b280      	uxth	r0, r0
 801210a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801210e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012112:	da20      	bge.n	8012156 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012114:	eba8 0505 	sub.w	r5, r8, r5
 8012118:	2d00      	cmp	r5, #0
 801211a:	da21      	bge.n	8012160 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801211c:	fa1f f88e 	uxth.w	r8, lr
 8012120:	fa1f f58a 	uxth.w	r5, sl
 8012124:	4443      	add	r3, r8
 8012126:	442a      	add	r2, r5
 8012128:	f8ad e010 	strh.w	lr, [sp, #16]
 801212c:	1b40      	subs	r0, r0, r5
 801212e:	ebac 0e08 	sub.w	lr, ip, r8
 8012132:	1a51      	subs	r1, r2, r1
 8012134:	eba3 0c0c 	sub.w	ip, r3, ip
 8012138:	f8ad a012 	strh.w	sl, [sp, #18]
 801213c:	f8ad e014 	strh.w	lr, [sp, #20]
 8012140:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012144:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012148:	f8ad 701a 	strh.w	r7, [sp, #26]
 801214c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012150:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012154:	e7aa      	b.n	80120ac <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012156:	d003      	beq.n	8012160 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012158:	eba8 0505 	sub.w	r5, r8, r5
 801215c:	2d00      	cmp	r5, #0
 801215e:	dcdd      	bgt.n	801211c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012160:	fa1f f58e 	uxth.w	r5, lr
 8012164:	fa1f f88a 	uxth.w	r8, sl
 8012168:	4442      	add	r2, r8
 801216a:	442b      	add	r3, r5
 801216c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012170:	1a51      	subs	r1, r2, r1
 8012172:	ebac 0705 	sub.w	r7, ip, r5
 8012176:	eba0 0008 	sub.w	r0, r0, r8
 801217a:	eba3 0c0c 	sub.w	ip, r3, ip
 801217e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012182:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012186:	f8ad 1016 	strh.w	r1, [sp, #22]
 801218a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801218e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012192:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012196:	f8ad 001e 	strh.w	r0, [sp, #30]
 801219a:	e787      	b.n	80120ac <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801219c <_ZN8touchgfx7CWRUtil4sineEi>:
 801219c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80121a0:	fb90 f2f3 	sdiv	r2, r0, r3
 80121a4:	fb02 0013 	mls	r0, r2, r3, r0
 80121a8:	2800      	cmp	r0, #0
 80121aa:	bfb8      	it	lt
 80121ac:	18c0      	addlt	r0, r0, r3
 80121ae:	285a      	cmp	r0, #90	; 0x5a
 80121b0:	4b09      	ldr	r3, [pc, #36]	; (80121d8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80121b2:	dc02      	bgt.n	80121ba <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80121b4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80121b8:	4770      	bx	lr
 80121ba:	28b4      	cmp	r0, #180	; 0xb4
 80121bc:	dc02      	bgt.n	80121c4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80121be:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80121c2:	e7f7      	b.n	80121b4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80121c4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80121c8:	bfd4      	ite	le
 80121ca:	38b4      	suble	r0, #180	; 0xb4
 80121cc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80121d0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80121d4:	4240      	negs	r0, r0
 80121d6:	4770      	bx	lr
 80121d8:	0802f478 	.word	0x0802f478

080121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80121dc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80121e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80121e2:	fb90 f2f3 	sdiv	r2, r0, r3
 80121e6:	fb02 0013 	mls	r0, r2, r3, r0
 80121ea:	2800      	cmp	r0, #0
 80121ec:	bfb8      	it	lt
 80121ee:	18c0      	addlt	r0, r0, r3
 80121f0:	1144      	asrs	r4, r0, #5
 80121f2:	f000 061f 	and.w	r6, r0, #31
 80121f6:	4620      	mov	r0, r4
 80121f8:	f7ff ffd0 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 80121fc:	4605      	mov	r5, r0
 80121fe:	b90e      	cbnz	r6, 8012204 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012200:	b002      	add	sp, #8
 8012202:	bd70      	pop	{r4, r5, r6, pc}
 8012204:	1c60      	adds	r0, r4, #1
 8012206:	f7ff ffc9 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 801220a:	ab01      	add	r3, sp, #4
 801220c:	2220      	movs	r2, #32
 801220e:	4631      	mov	r1, r6
 8012210:	1b40      	subs	r0, r0, r5
 8012212:	f005 f967 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 8012216:	4428      	add	r0, r5
 8012218:	e7f2      	b.n	8012200 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801221a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801221a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801221e:	bf2c      	ite	cs
 8012220:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012224:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012228:	2300      	movs	r3, #0
 801222a:	1899      	adds	r1, r3, r2
 801222c:	4288      	cmp	r0, r1
 801222e:	bf24      	itt	cs
 8012230:	1853      	addcs	r3, r2, r1
 8012232:	1a40      	subcs	r0, r0, r1
 8012234:	0892      	lsrs	r2, r2, #2
 8012236:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801223a:	d1f6      	bne.n	801222a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 801223c:	4618      	mov	r0, r3
 801223e:	4770      	bx	lr

08012240 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012240:	b510      	push	{r4, lr}
 8012242:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012246:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801224a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801224e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012252:	13a4      	asrs	r4, r4, #14
 8012254:	139b      	asrs	r3, r3, #14
 8012256:	429c      	cmp	r4, r3
 8012258:	bfb8      	it	lt
 801225a:	461c      	movlt	r4, r3
 801225c:	2c01      	cmp	r4, #1
 801225e:	dd07      	ble.n	8012270 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012260:	fb91 f1f4 	sdiv	r1, r1, r4
 8012264:	fb90 f0f4 	sdiv	r0, r0, r4
 8012268:	f7ff ffea 	bl	8012240 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801226c:	4360      	muls	r0, r4
 801226e:	bd10      	pop	{r4, pc}
 8012270:	4340      	muls	r0, r0
 8012272:	fb01 0001 	mla	r0, r1, r1, r0
 8012276:	f7ff ffd0 	bl	801221a <_ZN8touchgfx7CWRUtil5isqrtEm>
 801227a:	e7f8      	b.n	801226e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801227c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801227c:	2800      	cmp	r0, #0
 801227e:	b508      	push	{r3, lr}
 8012280:	da05      	bge.n	801228e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012282:	4240      	negs	r0, r0
 8012284:	f7ff fffa 	bl	801227c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012288:	4240      	negs	r0, r0
 801228a:	b240      	sxtb	r0, r0
 801228c:	bd08      	pop	{r3, pc}
 801228e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012292:	dc11      	bgt.n	80122b8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012294:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012298:	dd09      	ble.n	80122ae <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801229a:	4340      	muls	r0, r0
 801229c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80122a0:	f7ff ffbb 	bl	801221a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80122a4:	f7ff ffea 	bl	801227c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80122a8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80122ac:	e7ed      	b.n	801228a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80122ae:	3003      	adds	r0, #3
 80122b0:	10c0      	asrs	r0, r0, #3
 80122b2:	4b02      	ldr	r3, [pc, #8]	; (80122bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80122b4:	5618      	ldrsb	r0, [r3, r0]
 80122b6:	e7e9      	b.n	801228c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80122b8:	2000      	movs	r0, #0
 80122ba:	e7e7      	b.n	801228c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80122bc:	0802f41c 	.word	0x0802f41c

080122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80122c0:	4281      	cmp	r1, r0
 80122c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80122c4:	460c      	mov	r4, r1
 80122c6:	4615      	mov	r5, r2
 80122c8:	dd07      	ble.n	80122da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80122ca:	4601      	mov	r1, r0
 80122cc:	4620      	mov	r0, r4
 80122ce:	f7ff fff7 	bl	80122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80122d2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80122d6:	b003      	add	sp, #12
 80122d8:	bd30      	pop	{r4, r5, pc}
 80122da:	f7ff ffb1 	bl	8012240 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80122de:	6028      	str	r0, [r5, #0]
 80122e0:	2800      	cmp	r0, #0
 80122e2:	d0f8      	beq.n	80122d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80122e4:	4602      	mov	r2, r0
 80122e6:	ab01      	add	r3, sp, #4
 80122e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80122ec:	4620      	mov	r0, r4
 80122ee:	f005 f8f9 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 80122f2:	f7ff ffc3 	bl	801227c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80122f6:	e7ee      	b.n	80122d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080122f8 <_ZN8touchgfx4LineC1Ev>:
 80122f8:	b510      	push	{r4, lr}
 80122fa:	4604      	mov	r4, r0
 80122fc:	f7ff fe0a 	bl	8011f14 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012300:	4b0c      	ldr	r3, [pc, #48]	; (8012334 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012302:	6023      	str	r3, [r4, #0]
 8012304:	2220      	movs	r2, #32
 8012306:	2300      	movs	r3, #0
 8012308:	63e2      	str	r2, [r4, #60]	; 0x3c
 801230a:	2212      	movs	r2, #18
 801230c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012310:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012314:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012318:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 801231c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012320:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012324:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012328:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 801232c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801232e:	60a3      	str	r3, [r4, #8]
 8012330:	4620      	mov	r0, r4
 8012332:	bd10      	pop	{r4, pc}
 8012334:	0802f538 	.word	0x0802f538

08012338 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012338:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801233c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 801233e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012340:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012342:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012344:	1aff      	subs	r7, r7, r3
 8012346:	4604      	mov	r4, r0
 8012348:	eba5 0502 	sub.w	r5, r5, r2
 801234c:	d142      	bne.n	80123d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801234e:	b955      	cbnz	r5, 8012366 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012350:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012354:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012358:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 801235c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012360:	b002      	add	sp, #8
 8012362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012366:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801236a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801236e:	4629      	mov	r1, r5
 8012370:	4642      	mov	r2, r8
 8012372:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012374:	f005 f8d5 	bl	8017522 <_ZN8touchgfx6muldivElll>
 8012378:	2502      	movs	r5, #2
 801237a:	4642      	mov	r2, r8
 801237c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012380:	4639      	mov	r1, r7
 8012382:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012384:	f005 f8cd 	bl	8017522 <_ZN8touchgfx6muldivElll>
 8012388:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801238c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012390:	f1b9 0f00 	cmp.w	r9, #0
 8012394:	d067      	beq.n	8012466 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012396:	f1b9 0f02 	cmp.w	r9, #2
 801239a:	d878      	bhi.n	801248e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 801239c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801239e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80123a0:	1b93      	subs	r3, r2, r6
 80123a2:	1b5b      	subs	r3, r3, r5
 80123a4:	6463      	str	r3, [r4, #68]	; 0x44
 80123a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80123a8:	18e9      	adds	r1, r5, r3
 80123aa:	1b89      	subs	r1, r1, r6
 80123ac:	6561      	str	r1, [r4, #84]	; 0x54
 80123ae:	1b81      	subs	r1, r0, r6
 80123b0:	4429      	add	r1, r5
 80123b2:	64a1      	str	r1, [r4, #72]	; 0x48
 80123b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80123b6:	4430      	add	r0, r6
 80123b8:	186f      	adds	r7, r5, r1
 80123ba:	4432      	add	r2, r6
 80123bc:	1b49      	subs	r1, r1, r5
 80123be:	4437      	add	r7, r6
 80123c0:	4428      	add	r0, r5
 80123c2:	4431      	add	r1, r6
 80123c4:	1b52      	subs	r2, r2, r5
 80123c6:	1b5b      	subs	r3, r3, r5
 80123c8:	65a7      	str	r7, [r4, #88]	; 0x58
 80123ca:	64e0      	str	r0, [r4, #76]	; 0x4c
 80123cc:	65e1      	str	r1, [r4, #92]	; 0x5c
 80123ce:	6522      	str	r2, [r4, #80]	; 0x50
 80123d0:	1b9b      	subs	r3, r3, r6
 80123d2:	e05b      	b.n	801248c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80123d4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80123d8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80123dc:	2d00      	cmp	r5, #0
 80123de:	d0c6      	beq.n	801236e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80123e0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80123e4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80123e8:	fb93 f2f8 	sdiv	r2, r3, r8
 80123ec:	fb08 3312 	mls	r3, r8, r2, r3
 80123f0:	b353      	cbz	r3, 8012448 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80123f2:	fb98 f2f3 	sdiv	r2, r8, r3
 80123f6:	fb03 8812 	mls	r8, r3, r2, r8
 80123fa:	f1b8 0f00 	cmp.w	r8, #0
 80123fe:	d1f3      	bne.n	80123e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012400:	2b01      	cmp	r3, #1
 8012402:	bf1c      	itt	ne
 8012404:	fb95 f5f3 	sdivne	r5, r5, r3
 8012408:	fb97 f7f3 	sdivne	r7, r7, r3
 801240c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012410:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012414:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012418:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 801241c:	428b      	cmp	r3, r1
 801241e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012422:	4608      	mov	r0, r1
 8012424:	dd01      	ble.n	801242a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012426:	428a      	cmp	r2, r1
 8012428:	dc10      	bgt.n	801244c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 801242a:	fb90 f3f3 	sdiv	r3, r0, r3
 801242e:	fb90 f2f2 	sdiv	r2, r0, r2
 8012432:	4293      	cmp	r3, r2
 8012434:	bfa8      	it	ge
 8012436:	4613      	movge	r3, r2
 8012438:	435f      	muls	r7, r3
 801243a:	435d      	muls	r5, r3
 801243c:	4629      	mov	r1, r5
 801243e:	4638      	mov	r0, r7
 8012440:	f7ff fefe 	bl	8012240 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012444:	4680      	mov	r8, r0
 8012446:	e792      	b.n	801236e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012448:	4643      	mov	r3, r8
 801244a:	e7d9      	b.n	8012400 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 801244c:	fb93 f3f1 	sdiv	r3, r3, r1
 8012450:	fb92 f2f1 	sdiv	r2, r2, r1
 8012454:	4293      	cmp	r3, r2
 8012456:	bfcc      	ite	gt
 8012458:	3301      	addgt	r3, #1
 801245a:	1c53      	addle	r3, r2, #1
 801245c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012460:	fb95 f5f3 	sdiv	r5, r5, r3
 8012464:	e7ea      	b.n	801243c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012466:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012468:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801246a:	1b93      	subs	r3, r2, r6
 801246c:	6463      	str	r3, [r4, #68]	; 0x44
 801246e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012470:	18e9      	adds	r1, r5, r3
 8012472:	6561      	str	r1, [r4, #84]	; 0x54
 8012474:	1b81      	subs	r1, r0, r6
 8012476:	64a1      	str	r1, [r4, #72]	; 0x48
 8012478:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801247a:	4430      	add	r0, r6
 801247c:	186f      	adds	r7, r5, r1
 801247e:	4432      	add	r2, r6
 8012480:	1b49      	subs	r1, r1, r5
 8012482:	65a7      	str	r7, [r4, #88]	; 0x58
 8012484:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012486:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012488:	6522      	str	r2, [r4, #80]	; 0x50
 801248a:	1b5b      	subs	r3, r3, r5
 801248c:	6623      	str	r3, [r4, #96]	; 0x60
 801248e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012490:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012492:	9200      	str	r2, [sp, #0]
 8012494:	9301      	str	r3, [sp, #4]
 8012496:	f104 0148 	add.w	r1, r4, #72	; 0x48
 801249a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 801249e:	680f      	ldr	r7, [r1, #0]
 80124a0:	9800      	ldr	r0, [sp, #0]
 80124a2:	42ba      	cmp	r2, r7
 80124a4:	bfa8      	it	ge
 80124a6:	463a      	movge	r2, r7
 80124a8:	4287      	cmp	r7, r0
 80124aa:	bfc8      	it	gt
 80124ac:	9700      	strgt	r7, [sp, #0]
 80124ae:	690f      	ldr	r7, [r1, #16]
 80124b0:	9801      	ldr	r0, [sp, #4]
 80124b2:	42bb      	cmp	r3, r7
 80124b4:	bfa8      	it	ge
 80124b6:	463b      	movge	r3, r7
 80124b8:	3104      	adds	r1, #4
 80124ba:	4287      	cmp	r7, r0
 80124bc:	bfc8      	it	gt
 80124be:	9701      	strgt	r7, [sp, #4]
 80124c0:	458c      	cmp	ip, r1
 80124c2:	d1ec      	bne.n	801249e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80124c4:	4668      	mov	r0, sp
 80124c6:	2720      	movs	r7, #32
 80124c8:	fb92 f8f7 	sdiv	r8, r2, r7
 80124cc:	fb93 f7f7 	sdiv	r7, r3, r7
 80124d0:	f7ff fd57 	bl	8011f82 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80124d4:	4682      	mov	sl, r0
 80124d6:	a801      	add	r0, sp, #4
 80124d8:	f7ff fd53 	bl	8011f82 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80124dc:	ebaa 0208 	sub.w	r2, sl, r8
 80124e0:	1bc0      	subs	r0, r0, r7
 80124e2:	f1b9 0f01 	cmp.w	r9, #1
 80124e6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80124ea:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80124ee:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80124f2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80124f6:	f47f af33 	bne.w	8012360 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80124fa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80124fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80124fe:	1b83      	subs	r3, r0, r6
 8012500:	6463      	str	r3, [r4, #68]	; 0x44
 8012502:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012504:	18ea      	adds	r2, r5, r3
 8012506:	6562      	str	r2, [r4, #84]	; 0x54
 8012508:	1b8a      	subs	r2, r1, r6
 801250a:	64a2      	str	r2, [r4, #72]	; 0x48
 801250c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801250e:	4431      	add	r1, r6
 8012510:	18af      	adds	r7, r5, r2
 8012512:	4406      	add	r6, r0
 8012514:	1b52      	subs	r2, r2, r5
 8012516:	1b5d      	subs	r5, r3, r5
 8012518:	65a7      	str	r7, [r4, #88]	; 0x58
 801251a:	64e1      	str	r1, [r4, #76]	; 0x4c
 801251c:	65e2      	str	r2, [r4, #92]	; 0x5c
 801251e:	6526      	str	r6, [r4, #80]	; 0x50
 8012520:	6625      	str	r5, [r4, #96]	; 0x60
 8012522:	e71d      	b.n	8012360 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012524 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012524:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012526:	428b      	cmp	r3, r1
 8012528:	d102      	bne.n	8012530 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 801252a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801252c:	4293      	cmp	r3, r2
 801252e:	d003      	beq.n	8012538 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012530:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012534:	f7ff bf00 	b.w	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012538:	4770      	bx	lr

0801253a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 801253a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801253c:	428b      	cmp	r3, r1
 801253e:	d102      	bne.n	8012546 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012540:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012542:	4293      	cmp	r3, r2
 8012544:	d003      	beq.n	801254e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012546:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 801254a:	f7ff bef5 	b.w	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801254e:	4770      	bx	lr

08012550 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012550:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012554:	f7ff bef0 	b.w	8012338 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012558 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801255c:	b0a0      	sub	sp, #128	; 0x80
 801255e:	4604      	mov	r4, r0
 8012560:	460a      	mov	r2, r1
 8012562:	4601      	mov	r1, r0
 8012564:	a804      	add	r0, sp, #16
 8012566:	f014 fe79 	bl	802725c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801256a:	2300      	movs	r3, #0
 801256c:	9301      	str	r3, [sp, #4]
 801256e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012572:	2b01      	cmp	r3, #1
 8012574:	d17c      	bne.n	8012670 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012576:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012578:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801257a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 801257c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801257e:	1ac0      	subs	r0, r0, r3
 8012580:	eba1 0102 	sub.w	r1, r1, r2
 8012584:	d437      	bmi.n	80125f6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012586:	2900      	cmp	r1, #0
 8012588:	aa01      	add	r2, sp, #4
 801258a:	db2e      	blt.n	80125ea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 801258c:	f7ff fe98 	bl	80122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012590:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012594:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012596:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012598:	a804      	add	r0, sp, #16
 801259a:	f014 ffdf 	bl	802755c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801259e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80125a0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80125a2:	a804      	add	r0, sp, #16
 80125a4:	f015 f827 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80125a8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80125aa:	2db3      	cmp	r5, #179	; 0xb3
 80125ac:	dc33      	bgt.n	8012616 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80125ae:	eba6 0805 	sub.w	r8, r6, r5
 80125b2:	4640      	mov	r0, r8
 80125b4:	f7ff fdf2 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 80125b8:	a902      	add	r1, sp, #8
 80125ba:	9002      	str	r0, [sp, #8]
 80125bc:	a801      	add	r0, sp, #4
 80125be:	f7ff fcd5 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80125c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80125c4:	1847      	adds	r7, r0, r1
 80125c6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80125ca:	f7ff fde7 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 80125ce:	a903      	add	r1, sp, #12
 80125d0:	9003      	str	r0, [sp, #12]
 80125d2:	a801      	add	r0, sp, #4
 80125d4:	f7ff fcca 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80125d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80125da:	4639      	mov	r1, r7
 80125dc:	1a12      	subs	r2, r2, r0
 80125de:	a804      	add	r0, sp, #16
 80125e0:	f015 f809 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80125e4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80125e6:	441d      	add	r5, r3
 80125e8:	e7df      	b.n	80125aa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80125ea:	4249      	negs	r1, r1
 80125ec:	f7ff fe68 	bl	80122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80125f0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80125f4:	e7ce      	b.n	8012594 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80125f6:	2900      	cmp	r1, #0
 80125f8:	f1c0 0000 	rsb	r0, r0, #0
 80125fc:	aa01      	add	r2, sp, #4
 80125fe:	db04      	blt.n	801260a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012600:	f7ff fe5e 	bl	80122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012604:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012608:	e7c4      	b.n	8012594 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801260a:	4249      	negs	r1, r1
 801260c:	f7ff fe58 	bl	80122c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012610:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012614:	e7be      	b.n	8012594 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012616:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012618:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 801261a:	a804      	add	r0, sp, #16
 801261c:	f014 ffeb 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012620:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012622:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012624:	a804      	add	r0, sp, #16
 8012626:	f014 ffe6 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801262a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801262c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012630:	2d00      	cmp	r5, #0
 8012632:	dd31      	ble.n	8012698 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012634:	eb05 0806 	add.w	r8, r5, r6
 8012638:	4640      	mov	r0, r8
 801263a:	f7ff fdaf 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 801263e:	a902      	add	r1, sp, #8
 8012640:	9002      	str	r0, [sp, #8]
 8012642:	a801      	add	r0, sp, #4
 8012644:	f7ff fc92 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012648:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801264a:	1847      	adds	r7, r0, r1
 801264c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012650:	f7ff fda4 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 8012654:	a903      	add	r1, sp, #12
 8012656:	9003      	str	r0, [sp, #12]
 8012658:	a801      	add	r0, sp, #4
 801265a:	f7ff fc87 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801265e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012660:	4639      	mov	r1, r7
 8012662:	1a12      	subs	r2, r2, r0
 8012664:	a804      	add	r0, sp, #16
 8012666:	f014 ffc6 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801266a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801266c:	1aed      	subs	r5, r5, r3
 801266e:	e7df      	b.n	8012630 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012670:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012672:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012674:	a804      	add	r0, sp, #16
 8012676:	f014 ff71 	bl	802755c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801267a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801267c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801267e:	a804      	add	r0, sp, #16
 8012680:	f014 ffb9 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012684:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012686:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012688:	a804      	add	r0, sp, #16
 801268a:	f014 ffb4 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801268e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012690:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012692:	a804      	add	r0, sp, #16
 8012694:	f014 ffaf 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012698:	21ff      	movs	r1, #255	; 0xff
 801269a:	a804      	add	r0, sp, #16
 801269c:	f014 fe9a 	bl	80273d4 <_ZN8touchgfx6Canvas6renderEh>
 80126a0:	4b04      	ldr	r3, [pc, #16]	; (80126b4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80126a2:	9304      	str	r3, [sp, #16]
 80126a4:	4604      	mov	r4, r0
 80126a6:	a80c      	add	r0, sp, #48	; 0x30
 80126a8:	f001 f8cc 	bl	8013844 <_ZN8touchgfx7OutlineD1Ev>
 80126ac:	4620      	mov	r0, r4
 80126ae:	b020      	add	sp, #128	; 0x80
 80126b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80126b4:	0802fd60 	.word	0x0802fd60

080126b8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80126b8:	2000      	movs	r0, #0
 80126ba:	4770      	bx	lr

080126bc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80126bc:	4b07      	ldr	r3, [pc, #28]	; (80126dc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80126be:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80126c0:	881b      	ldrh	r3, [r3, #0]
 80126c2:	4293      	cmp	r3, r2
 80126c4:	bf81      	itttt	hi
 80126c6:	4b06      	ldrhi	r3, [pc, #24]	; (80126e0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80126c8:	681b      	ldrhi	r3, [r3, #0]
 80126ca:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80126ce:	7858      	ldrbhi	r0, [r3, #1]
 80126d0:	bf8c      	ite	hi
 80126d2:	f000 0003 	andhi.w	r0, r0, #3
 80126d6:	2000      	movls	r0, #0
 80126d8:	4770      	bx	lr
 80126da:	bf00      	nop
 80126dc:	200134a0 	.word	0x200134a0
 80126e0:	2001349c 	.word	0x2001349c

080126e4 <_ZN8touchgfx8TextAreaD1Ev>:
 80126e4:	4770      	bx	lr
	...

080126e8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80126e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126ec:	4b10      	ldr	r3, [pc, #64]	; (8012730 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80126ee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80126f0:	881b      	ldrh	r3, [r3, #0]
 80126f2:	428b      	cmp	r3, r1
 80126f4:	4604      	mov	r4, r0
 80126f6:	d918      	bls.n	801272a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80126f8:	6803      	ldr	r3, [r0, #0]
 80126fa:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80126fc:	4b0d      	ldr	r3, [pc, #52]	; (8012734 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80126fe:	6818      	ldr	r0, [r3, #0]
 8012700:	f7f5 ffc6 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8012704:	6823      	ldr	r3, [r4, #0]
 8012706:	4606      	mov	r6, r0
 8012708:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801270a:	4620      	mov	r0, r4
 801270c:	4798      	blx	r3
 801270e:	6823      	ldr	r3, [r4, #0]
 8012710:	4607      	mov	r7, r0
 8012712:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012716:	4620      	mov	r0, r4
 8012718:	4798      	blx	r3
 801271a:	463a      	mov	r2, r7
 801271c:	4603      	mov	r3, r0
 801271e:	4631      	mov	r1, r6
 8012720:	4620      	mov	r0, r4
 8012722:	46ac      	mov	ip, r5
 8012724:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012728:	4760      	bx	ip
 801272a:	2000      	movs	r0, #0
 801272c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012730:	200134a0 	.word	0x200134a0
 8012734:	200134a8 	.word	0x200134a8

08012738 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012738:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801273c:	4b17      	ldr	r3, [pc, #92]	; (801279c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801273e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012740:	881b      	ldrh	r3, [r3, #0]
 8012742:	428b      	cmp	r3, r1
 8012744:	4604      	mov	r4, r0
 8012746:	d926      	bls.n	8012796 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012748:	4b15      	ldr	r3, [pc, #84]	; (80127a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801274a:	681b      	ldr	r3, [r3, #0]
 801274c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012750:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012754:	4b13      	ldr	r3, [pc, #76]	; (80127a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012756:	7855      	ldrb	r5, [r2, #1]
 8012758:	681b      	ldr	r3, [r3, #0]
 801275a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801275e:	6833      	ldr	r3, [r6, #0]
 8012760:	69df      	ldr	r7, [r3, #28]
 8012762:	4b11      	ldr	r3, [pc, #68]	; (80127a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012764:	6818      	ldr	r0, [r3, #0]
 8012766:	f7f5 ff93 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 801276a:	6823      	ldr	r3, [r4, #0]
 801276c:	4680      	mov	r8, r0
 801276e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012770:	4620      	mov	r0, r4
 8012772:	4798      	blx	r3
 8012774:	6823      	ldr	r3, [r4, #0]
 8012776:	4681      	mov	r9, r0
 8012778:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801277c:	4620      	mov	r0, r4
 801277e:	4798      	blx	r3
 8012780:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012784:	9000      	str	r0, [sp, #0]
 8012786:	464b      	mov	r3, r9
 8012788:	4642      	mov	r2, r8
 801278a:	4629      	mov	r1, r5
 801278c:	4630      	mov	r0, r6
 801278e:	47b8      	blx	r7
 8012790:	b003      	add	sp, #12
 8012792:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012796:	2000      	movs	r0, #0
 8012798:	e7fa      	b.n	8012790 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801279a:	bf00      	nop
 801279c:	200134a0 	.word	0x200134a0
 80127a0:	2001349c 	.word	0x2001349c
 80127a4:	200134a4 	.word	0x200134a4
 80127a8:	200134a8 	.word	0x200134a8

080127ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80127ac:	b40e      	push	{r1, r2, r3}
 80127ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80127b2:	4b2f      	ldr	r3, [pc, #188]	; (8012870 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80127b4:	881a      	ldrh	r2, [r3, #0]
 80127b6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80127b8:	429a      	cmp	r2, r3
 80127ba:	b09d      	sub	sp, #116	; 0x74
 80127bc:	4604      	mov	r4, r0
 80127be:	d954      	bls.n	801286a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80127c0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012874 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80127c4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012878 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80127c8:	aa26      	add	r2, sp, #152	; 0x98
 80127ca:	9202      	str	r2, [sp, #8]
 80127cc:	f8d9 2000 	ldr.w	r2, [r9]
 80127d0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80127d4:	f8d8 3000 	ldr.w	r3, [r8]
 80127d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80127dc:	682b      	ldr	r3, [r5, #0]
 80127de:	4628      	mov	r0, r5
 80127e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80127e2:	4798      	blx	r3
 80127e4:	b207      	sxth	r7, r0
 80127e6:	4606      	mov	r6, r0
 80127e8:	a803      	add	r0, sp, #12
 80127ea:	f005 fa95 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 80127ee:	682b      	ldr	r3, [r5, #0]
 80127f0:	4628      	mov	r0, r5
 80127f2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80127f4:	4798      	blx	r3
 80127f6:	682b      	ldr	r3, [r5, #0]
 80127f8:	4682      	mov	sl, r0
 80127fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80127fc:	4628      	mov	r0, r5
 80127fe:	4798      	blx	r3
 8012800:	4653      	mov	r3, sl
 8012802:	9000      	str	r0, [sp, #0]
 8012804:	9a02      	ldr	r2, [sp, #8]
 8012806:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012808:	a803      	add	r0, sp, #12
 801280a:	f005 fae0 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801280e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012810:	f8d9 3000 	ldr.w	r3, [r9]
 8012814:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012818:	8925      	ldrh	r5, [r4, #8]
 801281a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801281e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012822:	eba5 050c 	sub.w	r5, r5, ip
 8012826:	784a      	ldrb	r2, [r1, #1]
 8012828:	f8d8 3000 	ldr.w	r3, [r8]
 801282c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012830:	b22d      	sxth	r5, r5
 8012832:	9500      	str	r5, [sp, #0]
 8012834:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012838:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801283c:	a803      	add	r0, sp, #12
 801283e:	f002 feed 	bl	801561c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012842:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012846:	18b9      	adds	r1, r7, r2
 8012848:	2900      	cmp	r1, #0
 801284a:	b203      	sxth	r3, r0
 801284c:	dd0b      	ble.n	8012866 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801284e:	3b01      	subs	r3, #1
 8012850:	fb13 f302 	smulbb	r3, r3, r2
 8012854:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012858:	b21f      	sxth	r7, r3
 801285a:	4638      	mov	r0, r7
 801285c:	b01d      	add	sp, #116	; 0x74
 801285e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012862:	b003      	add	sp, #12
 8012864:	4770      	bx	lr
 8012866:	2b00      	cmp	r3, #0
 8012868:	dcf7      	bgt.n	801285a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801286a:	2700      	movs	r7, #0
 801286c:	e7f5      	b.n	801285a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801286e:	bf00      	nop
 8012870:	200134a0 	.word	0x200134a0
 8012874:	2001349c 	.word	0x2001349c
 8012878:	200134a4 	.word	0x200134a4

0801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801287c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012880:	4bbc      	ldr	r3, [pc, #752]	; (8012b74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012882:	460c      	mov	r4, r1
 8012884:	881b      	ldrh	r3, [r3, #0]
 8012886:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012888:	428b      	cmp	r3, r1
 801288a:	b0a9      	sub	sp, #164	; 0xa4
 801288c:	4680      	mov	r8, r0
 801288e:	d809      	bhi.n	80128a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012890:	2300      	movs	r3, #0
 8012892:	f04f 32ff 	mov.w	r2, #4294967295
 8012896:	e9c0 3200 	strd	r3, r2, [r0]
 801289a:	6083      	str	r3, [r0, #8]
 801289c:	4640      	mov	r0, r8
 801289e:	b029      	add	sp, #164	; 0xa4
 80128a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128a4:	4eb4      	ldr	r6, [pc, #720]	; (8012b78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80128a6:	6833      	ldr	r3, [r6, #0]
 80128a8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80128ac:	4bb3      	ldr	r3, [pc, #716]	; (8012b7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80128ae:	681b      	ldr	r3, [r3, #0]
 80128b0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80128b4:	4bb2      	ldr	r3, [pc, #712]	; (8012b80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80128b6:	6818      	ldr	r0, [r3, #0]
 80128b8:	f7f5 feea 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 80128bc:	682b      	ldr	r3, [r5, #0]
 80128be:	4681      	mov	r9, r0
 80128c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80128c2:	4628      	mov	r0, r5
 80128c4:	4798      	blx	r3
 80128c6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80128c8:	b203      	sxth	r3, r0
 80128ca:	4407      	add	r7, r0
 80128cc:	9304      	str	r3, [sp, #16]
 80128ce:	b2bb      	uxth	r3, r7
 80128d0:	9303      	str	r3, [sp, #12]
 80128d2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80128d6:	4682      	mov	sl, r0
 80128d8:	a80f      	add	r0, sp, #60	; 0x3c
 80128da:	2b00      	cmp	r3, #0
 80128dc:	f040 80a6 	bne.w	8012a2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80128e0:	f005 fa1a 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 80128e4:	682b      	ldr	r3, [r5, #0]
 80128e6:	4628      	mov	r0, r5
 80128e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80128ea:	4798      	blx	r3
 80128ec:	682b      	ldr	r3, [r5, #0]
 80128ee:	4606      	mov	r6, r0
 80128f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80128f2:	4628      	mov	r0, r5
 80128f4:	4798      	blx	r3
 80128f6:	6823      	ldr	r3, [r4, #0]
 80128f8:	4607      	mov	r7, r0
 80128fa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80128fc:	4620      	mov	r0, r4
 80128fe:	4798      	blx	r3
 8012900:	6823      	ldr	r3, [r4, #0]
 8012902:	4683      	mov	fp, r0
 8012904:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012908:	4620      	mov	r0, r4
 801290a:	4798      	blx	r3
 801290c:	463b      	mov	r3, r7
 801290e:	e9cd b000 	strd	fp, r0, [sp]
 8012912:	4649      	mov	r1, r9
 8012914:	4632      	mov	r2, r6
 8012916:	a80f      	add	r0, sp, #60	; 0x3c
 8012918:	f005 fa6e 	bl	8017df8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801291c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012920:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012b78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012924:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012928:	f04f 0600 	mov.w	r6, #0
 801292c:	bf0c      	ite	eq
 801292e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012932:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012936:	4637      	mov	r7, r6
 8012938:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801293a:	f8db 3000 	ldr.w	r3, [fp]
 801293e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012942:	4629      	mov	r1, r5
 8012944:	785b      	ldrb	r3, [r3, #1]
 8012946:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801294a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801294e:	a80f      	add	r0, sp, #60	; 0x3c
 8012950:	f002 fb7f 	bl	8015052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012954:	9b03      	ldr	r3, [sp, #12]
 8012956:	4286      	cmp	r6, r0
 8012958:	bfb8      	it	lt
 801295a:	4606      	movlt	r6, r0
 801295c:	3701      	adds	r7, #1
 801295e:	eba9 0903 	sub.w	r9, r9, r3
 8012962:	a80f      	add	r0, sp, #60	; 0x3c
 8012964:	b236      	sxth	r6, r6
 8012966:	b2bf      	uxth	r7, r7
 8012968:	fa0f f989 	sxth.w	r9, r9
 801296c:	f005 f9fb 	bl	8017d66 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012970:	b918      	cbnz	r0, 801297a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012972:	7a2b      	ldrb	r3, [r5, #8]
 8012974:	444b      	add	r3, r9
 8012976:	2b00      	cmp	r3, #0
 8012978:	dcde      	bgt.n	8012938 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801297a:	9b03      	ldr	r3, [sp, #12]
 801297c:	9a04      	ldr	r2, [sp, #16]
 801297e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012982:	fb13 f707 	smulbb	r7, r3, r7
 8012986:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012988:	1aff      	subs	r7, r7, r3
 801298a:	b2bf      	uxth	r7, r7
 801298c:	b23b      	sxth	r3, r7
 801298e:	429a      	cmp	r2, r3
 8012990:	bfa8      	it	ge
 8012992:	4657      	movge	r7, sl
 8012994:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012998:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801299c:	6823      	ldr	r3, [r4, #0]
 801299e:	bf08      	it	eq
 80129a0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80129a4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80129a6:	bf18      	it	ne
 80129a8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80129ac:	4620      	mov	r0, r4
 80129ae:	4798      	blx	r3
 80129b0:	444f      	add	r7, r9
 80129b2:	fa1f f987 	uxth.w	r9, r7
 80129b6:	2801      	cmp	r0, #1
 80129b8:	fa0f f789 	sxth.w	r7, r9
 80129bc:	b2b3      	uxth	r3, r6
 80129be:	f000 80e1 	beq.w	8012b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80129c2:	2802      	cmp	r0, #2
 80129c4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80129c8:	f000 80e2 	beq.w	8012b90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80129cc:	7aea      	ldrb	r2, [r5, #11]
 80129ce:	7b2d      	ldrb	r5, [r5, #12]
 80129d0:	b236      	sxth	r6, r6
 80129d2:	1ab6      	subs	r6, r6, r2
 80129d4:	442a      	add	r2, r5
 80129d6:	4413      	add	r3, r2
 80129d8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80129dc:	fa1f fa86 	uxth.w	sl, r6
 80129e0:	b29b      	uxth	r3, r3
 80129e2:	2a02      	cmp	r2, #2
 80129e4:	fa0f fb8a 	sxth.w	fp, sl
 80129e8:	b21e      	sxth	r6, r3
 80129ea:	f000 80d5 	beq.w	8012b98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80129ee:	2a03      	cmp	r2, #3
 80129f0:	f000 80dd 	beq.w	8012bae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80129f4:	2a01      	cmp	r2, #1
 80129f6:	f040 80e5 	bne.w	8012bc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80129fa:	8925      	ldrh	r5, [r4, #8]
 80129fc:	4633      	mov	r3, r6
 80129fe:	eba5 0909 	sub.w	r9, r5, r9
 8012a02:	463e      	mov	r6, r7
 8012a04:	465d      	mov	r5, fp
 8012a06:	461f      	mov	r7, r3
 8012a08:	fa0f fb89 	sxth.w	fp, r9
 8012a0c:	4b5c      	ldr	r3, [pc, #368]	; (8012b80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012a0e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012a10:	6818      	ldr	r0, [r3, #0]
 8012a12:	f7f5 fe3d 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8012a16:	f8a8 b000 	strh.w	fp, [r8]
 8012a1a:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012a1e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012a22:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012a26:	f8c8 0008 	str.w	r0, [r8, #8]
 8012a2a:	e737      	b.n	801289c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012a2c:	f005 f974 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 8012a30:	682b      	ldr	r3, [r5, #0]
 8012a32:	4628      	mov	r0, r5
 8012a34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012a36:	4798      	blx	r3
 8012a38:	682b      	ldr	r3, [r5, #0]
 8012a3a:	4607      	mov	r7, r0
 8012a3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012a3e:	4628      	mov	r0, r5
 8012a40:	4798      	blx	r3
 8012a42:	6823      	ldr	r3, [r4, #0]
 8012a44:	4683      	mov	fp, r0
 8012a46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012a48:	4620      	mov	r0, r4
 8012a4a:	4798      	blx	r3
 8012a4c:	6822      	ldr	r2, [r4, #0]
 8012a4e:	9005      	str	r0, [sp, #20]
 8012a50:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012a54:	4620      	mov	r0, r4
 8012a56:	4790      	blx	r2
 8012a58:	9b05      	ldr	r3, [sp, #20]
 8012a5a:	9001      	str	r0, [sp, #4]
 8012a5c:	463a      	mov	r2, r7
 8012a5e:	4649      	mov	r1, r9
 8012a60:	9300      	str	r3, [sp, #0]
 8012a62:	a80f      	add	r0, sp, #60	; 0x3c
 8012a64:	465b      	mov	r3, fp
 8012a66:	f005 f9c7 	bl	8017df8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012a6a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012a6e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012a72:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012a74:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012a78:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012a7c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012a80:	bf0a      	itet	eq
 8012a82:	464a      	moveq	r2, r9
 8012a84:	461a      	movne	r2, r3
 8012a86:	4699      	moveq	r9, r3
 8012a88:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012a8c:	1ad2      	subs	r2, r2, r3
 8012a8e:	6833      	ldr	r3, [r6, #0]
 8012a90:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012a94:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012a98:	af0f      	add	r7, sp, #60	; 0x3c
 8012a9a:	7859      	ldrb	r1, [r3, #1]
 8012a9c:	9707      	str	r7, [sp, #28]
 8012a9e:	2300      	movs	r3, #0
 8012aa0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012aa4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012aa8:	f88d 1020 	strb.w	r1, [sp, #32]
 8012aac:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012ab0:	9509      	str	r5, [sp, #36]	; 0x24
 8012ab2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012ab6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012aba:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012abe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012ac2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012ac6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012aca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012ace:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012ad2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012ad6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012ada:	b350      	cbz	r0, 8012b32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012adc:	682b      	ldr	r3, [r5, #0]
 8012ade:	4628      	mov	r0, r5
 8012ae0:	695b      	ldr	r3, [r3, #20]
 8012ae2:	4798      	blx	r3
 8012ae4:	4607      	mov	r7, r0
 8012ae6:	b320      	cbz	r0, 8012b32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012ae8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012aea:	6803      	ldr	r3, [r0, #0]
 8012aec:	4639      	mov	r1, r7
 8012aee:	68db      	ldr	r3, [r3, #12]
 8012af0:	4798      	blx	r3
 8012af2:	4606      	mov	r6, r0
 8012af4:	b1e8      	cbz	r0, 8012b32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012af6:	7b43      	ldrb	r3, [r0, #13]
 8012af8:	7a82      	ldrb	r2, [r0, #10]
 8012afa:	005b      	lsls	r3, r3, #1
 8012afc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012b00:	4313      	orrs	r3, r2
 8012b02:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012b06:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012b0a:	2b06      	cmp	r3, #6
 8012b0c:	d111      	bne.n	8012b32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012b0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012b10:	6803      	ldr	r3, [r0, #0]
 8012b12:	4632      	mov	r2, r6
 8012b14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012b16:	4639      	mov	r1, r7
 8012b18:	4798      	blx	r3
 8012b1a:	7b73      	ldrb	r3, [r6, #13]
 8012b1c:	005b      	lsls	r3, r3, #1
 8012b1e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012b22:	7ab3      	ldrb	r3, [r6, #10]
 8012b24:	4313      	orrs	r3, r2
 8012b26:	4418      	add	r0, r3
 8012b28:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012b2c:	4418      	add	r0, r3
 8012b2e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012b32:	2600      	movs	r6, #0
 8012b34:	4637      	mov	r7, r6
 8012b36:	a806      	add	r0, sp, #24
 8012b38:	f002 fc6c 	bl	8015414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012b3c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012b40:	9b03      	ldr	r3, [sp, #12]
 8012b42:	4286      	cmp	r6, r0
 8012b44:	eba9 0903 	sub.w	r9, r9, r3
 8012b48:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012b4c:	bfb8      	it	lt
 8012b4e:	4606      	movlt	r6, r0
 8012b50:	3701      	adds	r7, #1
 8012b52:	b236      	sxth	r6, r6
 8012b54:	b2bf      	uxth	r7, r7
 8012b56:	fa0f f989 	sxth.w	r9, r9
 8012b5a:	2b00      	cmp	r3, #0
 8012b5c:	f43f af0d 	beq.w	801297a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012b60:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8012b64:	2b00      	cmp	r3, #0
 8012b66:	f47f af08 	bne.w	801297a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012b6a:	7a2b      	ldrb	r3, [r5, #8]
 8012b6c:	444b      	add	r3, r9
 8012b6e:	2b00      	cmp	r3, #0
 8012b70:	dce1      	bgt.n	8012b36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8012b72:	e702      	b.n	801297a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012b74:	200134a0 	.word	0x200134a0
 8012b78:	2001349c 	.word	0x2001349c
 8012b7c:	200134a4 	.word	0x200134a4
 8012b80:	200134a8 	.word	0x200134a8
 8012b84:	ebaa 0606 	sub.w	r6, sl, r6
 8012b88:	2002      	movs	r0, #2
 8012b8a:	fb96 f6f0 	sdiv	r6, r6, r0
 8012b8e:	e71d      	b.n	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012b90:	441e      	add	r6, r3
 8012b92:	ebaa 0606 	sub.w	r6, sl, r6
 8012b96:	e719      	b.n	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012b98:	8925      	ldrh	r5, [r4, #8]
 8012b9a:	1aed      	subs	r5, r5, r3
 8012b9c:	eba5 050a 	sub.w	r5, r5, sl
 8012ba0:	fa0f fb85 	sxth.w	fp, r5
 8012ba4:	8965      	ldrh	r5, [r4, #10]
 8012ba6:	eba5 0509 	sub.w	r5, r5, r9
 8012baa:	b22d      	sxth	r5, r5
 8012bac:	e72e      	b.n	8012a0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012bae:	8965      	ldrh	r5, [r4, #10]
 8012bb0:	1aed      	subs	r5, r5, r3
 8012bb2:	eba5 050a 	sub.w	r5, r5, sl
 8012bb6:	4633      	mov	r3, r6
 8012bb8:	b22d      	sxth	r5, r5
 8012bba:	463e      	mov	r6, r7
 8012bbc:	f04f 0b00 	mov.w	fp, #0
 8012bc0:	461f      	mov	r7, r3
 8012bc2:	e723      	b.n	8012a0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012bc4:	2500      	movs	r5, #0
 8012bc6:	e721      	b.n	8012a0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012bc8 <_ZN8touchgfx8TextAreaD0Ev>:
 8012bc8:	b510      	push	{r4, lr}
 8012bca:	2148      	movs	r1, #72	; 0x48
 8012bcc:	4604      	mov	r4, r0
 8012bce:	f017 fa88 	bl	802a0e2 <_ZdlPvj>
 8012bd2:	4620      	mov	r0, r4
 8012bd4:	bd10      	pop	{r4, pc}
	...

08012bd8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012bd8:	b513      	push	{r0, r1, r4, lr}
 8012bda:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012bde:	4604      	mov	r4, r0
 8012be0:	b1fb      	cbz	r3, 8012c22 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012be2:	4b16      	ldr	r3, [pc, #88]	; (8012c3c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012be4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012be6:	881b      	ldrh	r3, [r3, #0]
 8012be8:	428b      	cmp	r3, r1
 8012bea:	d91a      	bls.n	8012c22 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012bec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012bf0:	2b00      	cmp	r3, #0
 8012bf2:	dd16      	ble.n	8012c22 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012bf4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012bf8:	2b00      	cmp	r3, #0
 8012bfa:	dd12      	ble.n	8012c22 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012bfc:	4b10      	ldr	r3, [pc, #64]	; (8012c40 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012bfe:	6818      	ldr	r0, [r3, #0]
 8012c00:	f7f5 fd46 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8012c04:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012c08:	6822      	ldr	r2, [r4, #0]
 8012c0a:	2b00      	cmp	r3, #0
 8012c0c:	db06      	blt.n	8012c1c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012c0e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012c12:	2b00      	cmp	r3, #0
 8012c14:	db02      	blt.n	8012c1c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012c16:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012c18:	4298      	cmp	r0, r3
 8012c1a:	d004      	beq.n	8012c26 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012c1c:	6953      	ldr	r3, [r2, #20]
 8012c1e:	4620      	mov	r0, r4
 8012c20:	4798      	blx	r3
 8012c22:	b002      	add	sp, #8
 8012c24:	bd10      	pop	{r4, pc}
 8012c26:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012c2a:	c903      	ldmia	r1, {r0, r1}
 8012c2c:	466b      	mov	r3, sp
 8012c2e:	e883 0003 	stmia.w	r3, {r0, r1}
 8012c32:	6912      	ldr	r2, [r2, #16]
 8012c34:	4619      	mov	r1, r3
 8012c36:	4620      	mov	r0, r4
 8012c38:	4790      	blx	r2
 8012c3a:	e7f2      	b.n	8012c22 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012c3c:	200134a0 	.word	0x200134a0
 8012c40:	200134a8 	.word	0x200134a8

08012c44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c48:	4b44      	ldr	r3, [pc, #272]	; (8012d5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012c4a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012c4c:	881b      	ldrh	r3, [r3, #0]
 8012c4e:	4293      	cmp	r3, r2
 8012c50:	b08e      	sub	sp, #56	; 0x38
 8012c52:	4604      	mov	r4, r0
 8012c54:	d97e      	bls.n	8012d54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012c56:	6808      	ldr	r0, [r1, #0]
 8012c58:	4d41      	ldr	r5, [pc, #260]	; (8012d60 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012c5a:	6849      	ldr	r1, [r1, #4]
 8012c5c:	ab05      	add	r3, sp, #20
 8012c5e:	c303      	stmia	r3!, {r0, r1}
 8012c60:	4611      	mov	r1, r2
 8012c62:	6828      	ldr	r0, [r5, #0]
 8012c64:	f7f5 fd14 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8012c68:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012c6c:	2b00      	cmp	r3, #0
 8012c6e:	db11      	blt.n	8012c94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012c70:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012c74:	2b00      	cmp	r3, #0
 8012c76:	db0d      	blt.n	8012c94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012c78:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012c7a:	4298      	cmp	r0, r3
 8012c7c:	d10a      	bne.n	8012c94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012c7e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012c82:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012c86:	ab09      	add	r3, sp, #36	; 0x24
 8012c88:	e883 0003 	stmia.w	r3, {r0, r1}
 8012c8c:	4619      	mov	r1, r3
 8012c8e:	a805      	add	r0, sp, #20
 8012c90:	f7fe f860 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8012c94:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012c98:	2b00      	cmp	r3, #0
 8012c9a:	dd5b      	ble.n	8012d54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012c9c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012ca0:	2b00      	cmp	r3, #0
 8012ca2:	dd57      	ble.n	8012d54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012ca4:	4f2f      	ldr	r7, [pc, #188]	; (8012d64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012ca6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012ca8:	683b      	ldr	r3, [r7, #0]
 8012caa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012cae:	4b2e      	ldr	r3, [pc, #184]	; (8012d68 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012cb0:	681b      	ldr	r3, [r3, #0]
 8012cb2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012cb6:	2e00      	cmp	r6, #0
 8012cb8:	d04c      	beq.n	8012d54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012cba:	6823      	ldr	r3, [r4, #0]
 8012cbc:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012cc0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012cc2:	4620      	mov	r0, r4
 8012cc4:	4798      	blx	r3
 8012cc6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012cc8:	683b      	ldr	r3, [r7, #0]
 8012cca:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012cce:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012cd2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012cd6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012cd8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012cdc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012ce0:	785b      	ldrb	r3, [r3, #1]
 8012ce2:	9609      	str	r6, [sp, #36]	; 0x24
 8012ce4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012ce8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012cec:	4b1f      	ldr	r3, [pc, #124]	; (8012d6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012cee:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012cf2:	681b      	ldr	r3, [r3, #0]
 8012cf4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012cf8:	910b      	str	r1, [sp, #44]	; 0x2c
 8012cfa:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012cfe:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012d02:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012d06:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012d0a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012d0e:	b10a      	cbz	r2, 8012d14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012d10:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012d12:	b906      	cbnz	r6, 8012d16 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012d14:	689e      	ldr	r6, [r3, #8]
 8012d16:	af07      	add	r7, sp, #28
 8012d18:	4621      	mov	r1, r4
 8012d1a:	4638      	mov	r0, r7
 8012d1c:	f004 fab0 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012d20:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012d22:	6828      	ldr	r0, [r5, #0]
 8012d24:	f7f5 fcb4 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8012d28:	6823      	ldr	r3, [r4, #0]
 8012d2a:	4605      	mov	r5, r0
 8012d2c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012d2e:	4620      	mov	r0, r4
 8012d30:	4798      	blx	r3
 8012d32:	6823      	ldr	r3, [r4, #0]
 8012d34:	4680      	mov	r8, r0
 8012d36:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012d3a:	4620      	mov	r0, r4
 8012d3c:	4798      	blx	r3
 8012d3e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012d42:	ab09      	add	r3, sp, #36	; 0x24
 8012d44:	9300      	str	r3, [sp, #0]
 8012d46:	9501      	str	r5, [sp, #4]
 8012d48:	ab05      	add	r3, sp, #20
 8012d4a:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012d4e:	4630      	mov	r0, r6
 8012d50:	f7f5 fc50 	bl	80085f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012d54:	b00e      	add	sp, #56	; 0x38
 8012d56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d5a:	bf00      	nop
 8012d5c:	200134a0 	.word	0x200134a0
 8012d60:	200134a8 	.word	0x200134a8
 8012d64:	2001349c 	.word	0x2001349c
 8012d68:	200134a4 	.word	0x200134a4
 8012d6c:	20013444 	.word	0x20013444

08012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012d70:	b538      	push	{r3, r4, r5, lr}
 8012d72:	4b0e      	ldr	r3, [pc, #56]	; (8012dac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012d74:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012d76:	881b      	ldrh	r3, [r3, #0]
 8012d78:	429a      	cmp	r2, r3
 8012d7a:	4604      	mov	r4, r0
 8012d7c:	d214      	bcs.n	8012da8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012d7e:	6803      	ldr	r3, [r0, #0]
 8012d80:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012d82:	4798      	blx	r3
 8012d84:	6823      	ldr	r3, [r4, #0]
 8012d86:	4605      	mov	r5, r0
 8012d88:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012d8a:	4620      	mov	r0, r4
 8012d8c:	4798      	blx	r3
 8012d8e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012d92:	b22d      	sxth	r5, r5
 8012d94:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012d98:	4601      	mov	r1, r0
 8012d9a:	bf06      	itte	eq
 8012d9c:	4602      	moveq	r2, r0
 8012d9e:	4629      	moveq	r1, r5
 8012da0:	462a      	movne	r2, r5
 8012da2:	4620      	mov	r0, r4
 8012da4:	f7fc feca 	bl	800fb3c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012da8:	bd38      	pop	{r3, r4, r5, pc}
 8012daa:	bf00      	nop
 8012dac:	200134a0 	.word	0x200134a0

08012db0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012db0:	b530      	push	{r4, r5, lr}
 8012db2:	888b      	ldrh	r3, [r1, #4]
 8012db4:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012db6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012dba:	b085      	sub	sp, #20
 8012dbc:	4604      	mov	r4, r0
 8012dbe:	b923      	cbnz	r3, 8012dca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012dc0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012dc4:	b90b      	cbnz	r3, 8012dca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012dc6:	f7ff ffd3 	bl	8012d70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012dca:	6823      	ldr	r3, [r4, #0]
 8012dcc:	466d      	mov	r5, sp
 8012dce:	4621      	mov	r1, r4
 8012dd0:	4628      	mov	r0, r5
 8012dd2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012dd6:	4798      	blx	r3
 8012dd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012ddc:	343c      	adds	r4, #60	; 0x3c
 8012dde:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012de2:	b005      	add	sp, #20
 8012de4:	bd30      	pop	{r4, r5, pc}

08012de6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012de6:	2300      	movs	r3, #0
 8012de8:	8083      	strh	r3, [r0, #4]
 8012dea:	80c3      	strh	r3, [r0, #6]
 8012dec:	8003      	strh	r3, [r0, #0]
 8012dee:	8043      	strh	r3, [r0, #2]
 8012df0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012df4:	2bff      	cmp	r3, #255	; 0xff
 8012df6:	bf01      	itttt	eq
 8012df8:	890b      	ldrheq	r3, [r1, #8]
 8012dfa:	8083      	strheq	r3, [r0, #4]
 8012dfc:	894b      	ldrheq	r3, [r1, #10]
 8012dfe:	80c3      	strheq	r3, [r0, #6]
 8012e00:	4770      	bx	lr
	...

08012e04 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012e04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012e06:	4604      	mov	r4, r0
 8012e08:	6808      	ldr	r0, [r1, #0]
 8012e0a:	6849      	ldr	r1, [r1, #4]
 8012e0c:	466b      	mov	r3, sp
 8012e0e:	c303      	stmia	r3!, {r0, r1}
 8012e10:	6823      	ldr	r3, [r4, #0]
 8012e12:	4669      	mov	r1, sp
 8012e14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e16:	4620      	mov	r0, r4
 8012e18:	4798      	blx	r3
 8012e1a:	4b08      	ldr	r3, [pc, #32]	; (8012e3c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012e1c:	681b      	ldr	r3, [r3, #0]
 8012e1e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012e22:	b10a      	cbz	r2, 8012e28 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012e24:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012e26:	b900      	cbnz	r0, 8012e2a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012e28:	6898      	ldr	r0, [r3, #8]
 8012e2a:	6803      	ldr	r3, [r0, #0]
 8012e2c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012e2e:	6a1d      	ldr	r5, [r3, #32]
 8012e30:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012e34:	4669      	mov	r1, sp
 8012e36:	47a8      	blx	r5
 8012e38:	b003      	add	sp, #12
 8012e3a:	bd30      	pop	{r4, r5, pc}
 8012e3c:	20013444 	.word	0x20013444

08012e40 <_ZN8touchgfx3BoxD1Ev>:
 8012e40:	4770      	bx	lr

08012e42 <_ZN8touchgfx3BoxD0Ev>:
 8012e42:	b510      	push	{r4, lr}
 8012e44:	212c      	movs	r1, #44	; 0x2c
 8012e46:	4604      	mov	r4, r0
 8012e48:	f017 f94b 	bl	802a0e2 <_ZdlPvj>
 8012e4c:	4620      	mov	r0, r4
 8012e4e:	bd10      	pop	{r4, pc}

08012e50 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012e50:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012e54:	b12a      	cbz	r2, 8012e62 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012e56:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012e5a:	b112      	cbz	r2, 8012e62 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012e5c:	6803      	ldr	r3, [r0, #0]
 8012e5e:	695b      	ldr	r3, [r3, #20]
 8012e60:	4718      	bx	r3
 8012e62:	4770      	bx	lr

08012e64 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012e64:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012e68:	600b      	str	r3, [r1, #0]
 8012e6a:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012e6e:	6013      	str	r3, [r2, #0]
 8012e70:	4770      	bx	lr

08012e72 <_ZN8touchgfx5Gauge8setWidthEs>:
 8012e72:	8101      	strh	r1, [r0, #8]
 8012e74:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012e78:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012e7c:	4770      	bx	lr

08012e7e <_ZN8touchgfx5Gauge9setHeightEs>:
 8012e7e:	8141      	strh	r1, [r0, #10]
 8012e80:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012e84:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012e88:	4770      	bx	lr

08012e8a <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012e8a:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012e8e:	4770      	bx	lr

08012e90 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012e90:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012e94:	4770      	bx	lr

08012e96 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012e96:	4770      	bx	lr

08012e98 <_ZN8touchgfx5GaugeD1Ev>:
 8012e98:	4770      	bx	lr

08012e9a <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012e9a:	b538      	push	{r3, r4, r5, lr}
 8012e9c:	4604      	mov	r4, r0
 8012e9e:	460d      	mov	r5, r1
 8012ea0:	f7fc fd65 	bl	800f96e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012ea4:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012ea8:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012eac:	bd38      	pop	{r3, r4, r5, pc}

08012eae <_ZN8touchgfx5GaugeD0Ev>:
 8012eae:	b510      	push	{r4, lr}
 8012eb0:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012eb4:	4604      	mov	r4, r0
 8012eb6:	f017 f914 	bl	802a0e2 <_ZdlPvj>
 8012eba:	4620      	mov	r0, r4
 8012ebc:	bd10      	pop	{r4, pc}

08012ebe <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012ebe:	b510      	push	{r4, lr}
 8012ec0:	6803      	ldr	r3, [r0, #0]
 8012ec2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012ec6:	4604      	mov	r4, r0
 8012ec8:	4798      	blx	r3
 8012eca:	b170      	cbz	r0, 8012eea <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ecc:	6823      	ldr	r3, [r4, #0]
 8012ece:	4620      	mov	r0, r4
 8012ed0:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012ed4:	4798      	blx	r3
 8012ed6:	b140      	cbz	r0, 8012eea <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ed8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012edc:	b12b      	cbz	r3, 8012eea <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ede:	6823      	ldr	r3, [r4, #0]
 8012ee0:	4620      	mov	r0, r4
 8012ee2:	695b      	ldr	r3, [r3, #20]
 8012ee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ee8:	4718      	bx	r3
 8012eea:	bd10      	pop	{r4, pc}

08012eec <_ZN8touchgfx5GaugeC1Ev>:
 8012eec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012eee:	4604      	mov	r4, r0
 8012ef0:	4626      	mov	r6, r4
 8012ef2:	f7fc fe5d 	bl	800fbb0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012ef6:	4b18      	ldr	r3, [pc, #96]	; (8012f58 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012ef8:	f846 3bb4 	str.w	r3, [r6], #180
 8012efc:	a902      	add	r1, sp, #8
 8012efe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012f02:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012f06:	4630      	mov	r0, r6
 8012f08:	f015 f9ae 	bl	8028268 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012f0c:	2500      	movs	r5, #0
 8012f0e:	2301      	movs	r3, #1
 8012f10:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012f14:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012f18:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012f1c:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012f20:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012f24:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012f28:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012f2c:	4638      	mov	r0, r7
 8012f2e:	f014 fbdf 	bl	80276f0 <_ZN8touchgfx6CircleC1Ev>
 8012f32:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012f36:	4620      	mov	r0, r4
 8012f38:	f7fd fdc6 	bl	8010ac8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012f3c:	4639      	mov	r1, r7
 8012f3e:	4620      	mov	r0, r4
 8012f40:	f7fd fd81 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f44:	4620      	mov	r0, r4
 8012f46:	4631      	mov	r1, r6
 8012f48:	f7fd fd7d 	bl	8010a46 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f4c:	4620      	mov	r0, r4
 8012f4e:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012f52:	b003      	add	sp, #12
 8012f54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f56:	bf00      	nop
 8012f58:	0802f6a8 	.word	0x0802f6a8

08012f5c <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012f5c:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012f60:	4770      	bx	lr

08012f62 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012f62:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012f66:	4770      	bx	lr

08012f68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012f68:	b538      	push	{r3, r4, r5, lr}
 8012f6a:	8902      	ldrh	r2, [r0, #8]
 8012f6c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012f70:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012f74:	4604      	mov	r4, r0
 8012f76:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012f7a:	2200      	movs	r2, #0
 8012f7c:	4611      	mov	r1, r2
 8012f7e:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012f82:	4628      	mov	r0, r5
 8012f84:	f7ef fb6b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8012f88:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012f8c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012f90:	1a9b      	subs	r3, r3, r2
 8012f92:	ee07 3a90 	vmov	s15, r3
 8012f96:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012f9a:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012f9e:	1a9b      	subs	r3, r3, r2
 8012fa0:	ee07 3a10 	vmov	s14, r3
 8012fa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012fa8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012fac:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012fb0:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012fb4:	4628      	mov	r0, r5
 8012fb6:	f015 f9a3 	bl	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012fba:	4b16      	ldr	r3, [pc, #88]	; (8013014 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012fbc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012fc0:	4628      	mov	r0, r5
 8012fc2:	f015 f99d 	bl	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012fc6:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012fca:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012fce:	ee07 3a90 	vmov	s15, r3
 8012fd2:	ee07 2a10 	vmov	s14, r2
 8012fd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012fda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012fde:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012fe2:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012fe6:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012fea:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012fee:	4628      	mov	r0, r5
 8012ff0:	f015 f986 	bl	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012ff4:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012ff8:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012ffc:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013000:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013004:	4628      	mov	r0, r5
 8013006:	f015 f97b 	bl	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801300a:	2301      	movs	r3, #1
 801300c:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013010:	bd38      	pop	{r3, r4, r5, pc}
 8013012:	bf00      	nop
 8013014:	43960000 	.word	0x43960000

08013018 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013018:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801301a:	4604      	mov	r4, r0
 801301c:	a802      	add	r0, sp, #8
 801301e:	4616      	mov	r6, r2
 8013020:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013024:	461d      	mov	r5, r3
 8013026:	4601      	mov	r1, r0
 8013028:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 801302c:	f015 fabe 	bl	80285ac <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8013030:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013034:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013038:	4620      	mov	r0, r4
 801303a:	f7ff ff95 	bl	8012f68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801303e:	b002      	add	sp, #8
 8013040:	bd70      	pop	{r4, r5, r6, pc}

08013042 <_ZN8touchgfx5Gauge9setCenterEii>:
 8013042:	b570      	push	{r4, r5, r6, lr}
 8013044:	4606      	mov	r6, r0
 8013046:	460d      	mov	r5, r1
 8013048:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 801304c:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8013050:	4614      	mov	r4, r2
 8013052:	f7ff ff89 	bl	8012f68 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013056:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 801305a:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 801305e:	1aa4      	subs	r4, r4, r2
 8013060:	1a6d      	subs	r5, r5, r1
 8013062:	0164      	lsls	r4, r4, #5
 8013064:	016d      	lsls	r5, r5, #5
 8013066:	3410      	adds	r4, #16
 8013068:	3510      	adds	r5, #16
 801306a:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 801306e:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013072:	bd70      	pop	{r4, r5, r6, pc}

08013074 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013074:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013076:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013078:	0149      	lsls	r1, r1, #5
 801307a:	4299      	cmp	r1, r3
 801307c:	4604      	mov	r4, r0
 801307e:	9101      	str	r1, [sp, #4]
 8013080:	d00b      	beq.n	801309a <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013082:	4601      	mov	r1, r0
 8013084:	aa01      	add	r2, sp, #4
 8013086:	a802      	add	r0, sp, #8
 8013088:	f014 fd30 	bl	8027aec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 801308c:	9b01      	ldr	r3, [sp, #4]
 801308e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013090:	6823      	ldr	r3, [r4, #0]
 8013092:	a902      	add	r1, sp, #8
 8013094:	691b      	ldr	r3, [r3, #16]
 8013096:	4620      	mov	r0, r4
 8013098:	4798      	blx	r3
 801309a:	b004      	add	sp, #16
 801309c:	bd10      	pop	{r4, pc}
	...

080130a0 <_ZN8touchgfx5Gauge8setValueEi>:
 80130a0:	b570      	push	{r4, r5, r6, lr}
 80130a2:	4604      	mov	r4, r0
 80130a4:	f7fc fcb6 	bl	800fa14 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80130a8:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80130ac:	429a      	cmp	r2, r3
 80130ae:	bfac      	ite	ge
 80130b0:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80130b4:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80130b8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80130bc:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80130c0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80130c4:	1ac9      	subs	r1, r1, r3
 80130c6:	2900      	cmp	r1, #0
 80130c8:	bfb8      	it	lt
 80130ca:	4249      	neglt	r1, r1
 80130cc:	b289      	uxth	r1, r1
 80130ce:	4620      	mov	r0, r4
 80130d0:	f7fc fcc2 	bl	800fa58 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80130d4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80130d8:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80130dc:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013144 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80130e0:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013148 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80130e4:	429a      	cmp	r2, r3
 80130e6:	4605      	mov	r5, r0
 80130e8:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80130ec:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80130f0:	da15      	bge.n	801311e <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80130f2:	1b5b      	subs	r3, r3, r5
 80130f4:	ee07 3a90 	vmov	s15, r3
 80130f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130fc:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013100:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013104:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013108:	ee21 1a07 	vmul.f32	s2, s2, s14
 801310c:	f015 f867 	bl	80281de <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013110:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013114:	1b49      	subs	r1, r1, r5
 8013116:	4630      	mov	r0, r6
 8013118:	f7ff ffac 	bl	8013074 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 801311c:	bd70      	pop	{r4, r5, r6, pc}
 801311e:	442b      	add	r3, r5
 8013120:	ee07 3a90 	vmov	s15, r3
 8013124:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013128:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 801312c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013130:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013134:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013138:	f015 f851 	bl	80281de <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 801313c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013140:	4429      	add	r1, r5
 8013142:	e7e8      	b.n	8013116 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013144:	43340000 	.word	0x43340000
 8013148:	40490fdb 	.word	0x40490fdb

0801314c <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 801314c:	b510      	push	{r4, lr}
 801314e:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8013152:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013156:	0149      	lsls	r1, r1, #5
 8013158:	0152      	lsls	r2, r2, #5
 801315a:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 801315e:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013162:	4604      	mov	r4, r0
 8013164:	f7fc fc00 	bl	800f968 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013168:	4601      	mov	r1, r0
 801316a:	4620      	mov	r0, r4
 801316c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013170:	f7ff bf96 	b.w	80130a0 <_ZN8touchgfx5Gauge8setValueEi>

08013174 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013174:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013178:	4770      	bx	lr

0801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801317a:	b570      	push	{r4, r5, r6, lr}
 801317c:	880b      	ldrh	r3, [r1, #0]
 801317e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013180:	4605      	mov	r5, r0
 8013182:	8813      	ldrh	r3, [r2, #0]
 8013184:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013188:	4604      	mov	r4, r0
 801318a:	4628      	mov	r0, r5
 801318c:	f006 fb44 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013190:	4606      	mov	r6, r0
 8013192:	4628      	mov	r0, r5
 8013194:	f006 fb74 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013198:	6823      	ldr	r3, [r4, #0]
 801319a:	4605      	mov	r5, r0
 801319c:	4631      	mov	r1, r6
 801319e:	4620      	mov	r0, r4
 80131a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131a2:	4798      	blx	r3
 80131a4:	6823      	ldr	r3, [r4, #0]
 80131a6:	4629      	mov	r1, r5
 80131a8:	4620      	mov	r0, r4
 80131aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80131ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131b0:	4718      	bx	r3

080131b2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80131b2:	b510      	push	{r4, lr}
 80131b4:	4604      	mov	r4, r0
 80131b6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80131b8:	b150      	cbz	r0, 80131d0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80131ba:	6803      	ldr	r3, [r0, #0]
 80131bc:	68db      	ldr	r3, [r3, #12]
 80131be:	4798      	blx	r3
 80131c0:	b130      	cbz	r0, 80131d0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80131c2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80131c4:	6803      	ldr	r3, [r0, #0]
 80131c6:	4621      	mov	r1, r4
 80131c8:	689b      	ldr	r3, [r3, #8]
 80131ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131ce:	4718      	bx	r3
 80131d0:	bd10      	pop	{r4, pc}

080131d2 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80131d2:	b510      	push	{r4, lr}
 80131d4:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80131d8:	2bff      	cmp	r3, #255	; 0xff
 80131da:	4604      	mov	r4, r0
 80131dc:	d006      	beq.n	80131ec <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80131de:	2300      	movs	r3, #0
 80131e0:	8003      	strh	r3, [r0, #0]
 80131e2:	8043      	strh	r3, [r0, #2]
 80131e4:	8083      	strh	r3, [r0, #4]
 80131e6:	80c3      	strh	r3, [r0, #6]
 80131e8:	4620      	mov	r0, r4
 80131ea:	bd10      	pop	{r4, pc}
 80131ec:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80131f0:	b11b      	cbz	r3, 80131fa <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80131f2:	3130      	adds	r1, #48	; 0x30
 80131f4:	f006 fb78 	bl	80198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80131f8:	e7f6      	b.n	80131e8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80131fa:	312e      	adds	r1, #46	; 0x2e
 80131fc:	e7fa      	b.n	80131f4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013200 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013204:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013208:	b08a      	sub	sp, #40	; 0x28
 801320a:	4604      	mov	r4, r0
 801320c:	4688      	mov	r8, r1
 801320e:	2b00      	cmp	r3, #0
 8013210:	d066      	beq.n	80132e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013212:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013214:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013218:	a805      	add	r0, sp, #20
 801321a:	f006 fafd 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801321e:	4607      	mov	r7, r0
 8013220:	a805      	add	r0, sp, #20
 8013222:	f006 fb2d 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013226:	f9b8 6000 	ldrsh.w	r6, [r8]
 801322a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801322e:	4432      	add	r2, r6
 8013230:	b292      	uxth	r2, r2
 8013232:	2300      	movs	r3, #0
 8013234:	fa0f fc82 	sxth.w	ip, r2
 8013238:	459c      	cmp	ip, r3
 801323a:	9306      	str	r3, [sp, #24]
 801323c:	dd52      	ble.n	80132e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801323e:	42b7      	cmp	r7, r6
 8013240:	dd50      	ble.n	80132e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013242:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013246:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801324a:	442b      	add	r3, r5
 801324c:	b29b      	uxth	r3, r3
 801324e:	b219      	sxth	r1, r3
 8013250:	2900      	cmp	r1, #0
 8013252:	dd47      	ble.n	80132e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013254:	42a8      	cmp	r0, r5
 8013256:	dd45      	ble.n	80132e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013258:	4567      	cmp	r7, ip
 801325a:	bfb8      	it	lt
 801325c:	b2ba      	uxthlt	r2, r7
 801325e:	4288      	cmp	r0, r1
 8013260:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013264:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013268:	bfb8      	it	lt
 801326a:	b283      	uxthlt	r3, r0
 801326c:	1b92      	subs	r2, r2, r6
 801326e:	1b5b      	subs	r3, r3, r5
 8013270:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013274:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013278:	f8ad 6018 	strh.w	r6, [sp, #24]
 801327c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013280:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013284:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013288:	429a      	cmp	r2, r3
 801328a:	d026      	beq.n	80132da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801328c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013290:	2b00      	cmp	r3, #0
 8013292:	dd22      	ble.n	80132da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013294:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013298:	2b00      	cmp	r3, #0
 801329a:	dd1e      	ble.n	80132da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801329c:	2300      	movs	r3, #0
 801329e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80132a2:	6823      	ldr	r3, [r4, #0]
 80132a4:	a908      	add	r1, sp, #32
 80132a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132a8:	4620      	mov	r0, r4
 80132aa:	4798      	blx	r3
 80132ac:	4b0f      	ldr	r3, [pc, #60]	; (80132ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80132ae:	681b      	ldr	r3, [r3, #0]
 80132b0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80132b4:	b10a      	cbz	r2, 80132ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80132b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80132b8:	b900      	cbnz	r0, 80132bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80132ba:	6898      	ldr	r0, [r3, #8]
 80132bc:	6801      	ldr	r1, [r0, #0]
 80132be:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80132c2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80132c6:	2501      	movs	r5, #1
 80132c8:	9502      	str	r5, [sp, #8]
 80132ca:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80132ce:	9401      	str	r4, [sp, #4]
 80132d0:	ac06      	add	r4, sp, #24
 80132d2:	9400      	str	r4, [sp, #0]
 80132d4:	688c      	ldr	r4, [r1, #8]
 80132d6:	a905      	add	r1, sp, #20
 80132d8:	47a0      	blx	r4
 80132da:	b00a      	add	sp, #40	; 0x28
 80132dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132e0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80132e2:	e797      	b.n	8013214 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80132e4:	2300      	movs	r3, #0
 80132e6:	9307      	str	r3, [sp, #28]
 80132e8:	e7ca      	b.n	8013280 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80132ea:	bf00      	nop
 80132ec:	20013444 	.word	0x20013444

080132f0 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80132f0:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80132f4:	b12a      	cbz	r2, 8013302 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80132f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80132fa:	b112      	cbz	r2, 8013302 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80132fc:	6803      	ldr	r3, [r0, #0]
 80132fe:	695b      	ldr	r3, [r3, #20]
 8013300:	4718      	bx	r3
 8013302:	4770      	bx	lr

08013304 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013304:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013308:	4b2f      	ldr	r3, [pc, #188]	; (80133c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 801330a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801330c:	881b      	ldrh	r3, [r3, #0]
 801330e:	4293      	cmp	r3, r2
 8013310:	b08d      	sub	sp, #52	; 0x34
 8013312:	4604      	mov	r4, r0
 8013314:	460f      	mov	r7, r1
 8013316:	d954      	bls.n	80133c2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013318:	4b2c      	ldr	r3, [pc, #176]	; (80133cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801331a:	6819      	ldr	r1, [r3, #0]
 801331c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013320:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013324:	4a2a      	ldr	r2, [pc, #168]	; (80133d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013326:	6812      	ldr	r2, [r2, #0]
 8013328:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801332c:	2900      	cmp	r1, #0
 801332e:	d048      	beq.n	80133c2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013330:	785a      	ldrb	r2, [r3, #1]
 8013332:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013336:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801333a:	4b26      	ldr	r3, [pc, #152]	; (80133d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 801333c:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013340:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013344:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013348:	6b26      	ldr	r6, [r4, #48]	; 0x30
 801334a:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801334e:	9107      	str	r1, [sp, #28]
 8013350:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013354:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013358:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 801335c:	681a      	ldr	r2, [r3, #0]
 801335e:	f88d 8020 	strb.w	r8, [sp, #32]
 8013362:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013366:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801336a:	9609      	str	r6, [sp, #36]	; 0x24
 801336c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013370:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013374:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013378:	b10b      	cbz	r3, 801337e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801337a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801337c:	b905      	cbnz	r5, 8013380 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801337e:	6895      	ldr	r5, [r2, #8]
 8013380:	ae05      	add	r6, sp, #20
 8013382:	4621      	mov	r1, r4
 8013384:	4630      	mov	r0, r6
 8013386:	f003 ff7b 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801338a:	4b13      	ldr	r3, [pc, #76]	; (80133d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801338c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801338e:	6818      	ldr	r0, [r3, #0]
 8013390:	f7f5 f97e 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 8013394:	6823      	ldr	r3, [r4, #0]
 8013396:	4680      	mov	r8, r0
 8013398:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801339a:	4620      	mov	r0, r4
 801339c:	4798      	blx	r3
 801339e:	6823      	ldr	r3, [r4, #0]
 80133a0:	4681      	mov	r9, r0
 80133a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80133a6:	4620      	mov	r0, r4
 80133a8:	4798      	blx	r3
 80133aa:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80133ae:	ab07      	add	r3, sp, #28
 80133b0:	9300      	str	r3, [sp, #0]
 80133b2:	f8cd 8004 	str.w	r8, [sp, #4]
 80133b6:	463b      	mov	r3, r7
 80133b8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80133bc:	4628      	mov	r0, r5
 80133be:	f7f5 f919 	bl	80085f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80133c2:	b00d      	add	sp, #52	; 0x34
 80133c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80133c8:	200134a0 	.word	0x200134a0
 80133cc:	2001349c 	.word	0x2001349c
 80133d0:	200134a4 	.word	0x200134a4
 80133d4:	20013444 	.word	0x20013444
 80133d8:	200134a8 	.word	0x200134a8

080133dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80133dc:	4770      	bx	lr

080133de <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80133de:	4770      	bx	lr

080133e0 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80133e0:	b510      	push	{r4, lr}
 80133e2:	213c      	movs	r1, #60	; 0x3c
 80133e4:	4604      	mov	r4, r0
 80133e6:	f016 fe7c 	bl	802a0e2 <_ZdlPvj>
 80133ea:	4620      	mov	r0, r4
 80133ec:	bd10      	pop	{r4, pc}

080133ee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80133ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133f2:	461c      	mov	r4, r3
 80133f4:	4606      	mov	r6, r0
 80133f6:	9f06      	ldr	r7, [sp, #24]
 80133f8:	f7ff febf 	bl	801317a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80133fc:	8823      	ldrh	r3, [r4, #0]
 80133fe:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013400:	883b      	ldrh	r3, [r7, #0]
 8013402:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013404:	4638      	mov	r0, r7
 8013406:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801340a:	f006 fa05 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801340e:	f04f 0802 	mov.w	r8, #2
 8013412:	fb95 f5f8 	sdiv	r5, r5, r8
 8013416:	b2ad      	uxth	r5, r5
 8013418:	fb90 f0f8 	sdiv	r0, r0, r8
 801341c:	1a2d      	subs	r5, r5, r0
 801341e:	8735      	strh	r5, [r6, #56]	; 0x38
 8013420:	4638      	mov	r0, r7
 8013422:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013426:	fb94 f4f8 	sdiv	r4, r4, r8
 801342a:	f006 fa29 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801342e:	b2a4      	uxth	r4, r4
 8013430:	fb90 f0f8 	sdiv	r0, r0, r8
 8013434:	1a24      	subs	r4, r4, r0
 8013436:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801343c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 801343c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013440:	4604      	mov	r4, r0
 8013442:	b08c      	sub	sp, #48	; 0x30
 8013444:	460d      	mov	r5, r1
 8013446:	f7ff fedb 	bl	8013200 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801344a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801344e:	2b00      	cmp	r3, #0
 8013450:	d05d      	beq.n	801350e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8013452:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013454:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013458:	a805      	add	r0, sp, #20
 801345a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801345e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013462:	f006 f9d9 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013466:	4606      	mov	r6, r0
 8013468:	a805      	add	r0, sp, #20
 801346a:	f006 fa09 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801346e:	6869      	ldr	r1, [r5, #4]
 8013470:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013474:	6828      	ldr	r0, [r5, #0]
 8013476:	f8ad 8018 	strh.w	r8, [sp, #24]
 801347a:	ab08      	add	r3, sp, #32
 801347c:	ad08      	add	r5, sp, #32
 801347e:	c303      	stmia	r3!, {r0, r1}
 8013480:	a906      	add	r1, sp, #24
 8013482:	4628      	mov	r0, r5
 8013484:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013488:	f8ad 601c 	strh.w	r6, [sp, #28]
 801348c:	f7fd fc62 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8013490:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013494:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013498:	429a      	cmp	r2, r3
 801349a:	d035      	beq.n	8013508 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801349c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80134a0:	2b00      	cmp	r3, #0
 80134a2:	dd31      	ble.n	8013508 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80134a4:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80134a8:	2b00      	cmp	r3, #0
 80134aa:	dd2d      	ble.n	8013508 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80134ac:	2300      	movs	r3, #0
 80134ae:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80134b2:	6823      	ldr	r3, [r4, #0]
 80134b4:	a90a      	add	r1, sp, #40	; 0x28
 80134b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134b8:	4620      	mov	r0, r4
 80134ba:	4798      	blx	r3
 80134bc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80134c0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80134c2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80134c6:	1a9b      	subs	r3, r3, r2
 80134c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80134cc:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80134ce:	1ac9      	subs	r1, r1, r3
 80134d0:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80134d4:	490f      	ldr	r1, [pc, #60]	; (8013514 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80134d6:	6809      	ldr	r1, [r1, #0]
 80134d8:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80134dc:	b108      	cbz	r0, 80134e2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80134de:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80134e0:	b900      	cbnz	r0, 80134e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80134e2:	6888      	ldr	r0, [r1, #8]
 80134e4:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80134e8:	440b      	add	r3, r1
 80134ea:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80134ee:	2601      	movs	r6, #1
 80134f0:	440a      	add	r2, r1
 80134f2:	6801      	ldr	r1, [r0, #0]
 80134f4:	9602      	str	r6, [sp, #8]
 80134f6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80134fa:	e9cd 5400 	strd	r5, r4, [sp]
 80134fe:	b21b      	sxth	r3, r3
 8013500:	688c      	ldr	r4, [r1, #8]
 8013502:	b212      	sxth	r2, r2
 8013504:	a905      	add	r1, sp, #20
 8013506:	47a0      	blx	r4
 8013508:	b00c      	add	sp, #48	; 0x30
 801350a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801350e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013510:	e7a0      	b.n	8013454 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013512:	bf00      	nop
 8013514:	20013444 	.word	0x20013444

08013518 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013518:	b510      	push	{r4, lr}
 801351a:	2101      	movs	r1, #1
 801351c:	2200      	movs	r2, #0
 801351e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013522:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013526:	4c0e      	ldr	r4, [pc, #56]	; (8013560 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013528:	8082      	strh	r2, [r0, #4]
 801352a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801352e:	80c2      	strh	r2, [r0, #6]
 8013530:	8102      	strh	r2, [r0, #8]
 8013532:	8142      	strh	r2, [r0, #10]
 8013534:	8182      	strh	r2, [r0, #12]
 8013536:	81c2      	strh	r2, [r0, #14]
 8013538:	8202      	strh	r2, [r0, #16]
 801353a:	8242      	strh	r2, [r0, #18]
 801353c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013540:	61c2      	str	r2, [r0, #28]
 8013542:	8402      	strh	r2, [r0, #32]
 8013544:	8442      	strh	r2, [r0, #34]	; 0x22
 8013546:	6282      	str	r2, [r0, #40]	; 0x28
 8013548:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 801354c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801354e:	8601      	strh	r1, [r0, #48]	; 0x30
 8013550:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013554:	6004      	str	r4, [r0, #0]
 8013556:	8681      	strh	r1, [r0, #52]	; 0x34
 8013558:	86c1      	strh	r1, [r0, #54]	; 0x36
 801355a:	8702      	strh	r2, [r0, #56]	; 0x38
 801355c:	8742      	strh	r2, [r0, #58]	; 0x3a
 801355e:	bd10      	pop	{r4, pc}
 8013560:	0802f790 	.word	0x0802f790

08013564 <_ZN8touchgfx5ImageD1Ev>:
 8013564:	4770      	bx	lr

08013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013566:	b570      	push	{r4, r5, r6, lr}
 8013568:	880b      	ldrh	r3, [r1, #0]
 801356a:	84c3      	strh	r3, [r0, #38]	; 0x26
 801356c:	4604      	mov	r4, r0
 801356e:	4608      	mov	r0, r1
 8013570:	460d      	mov	r5, r1
 8013572:	f006 f951 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013576:	4606      	mov	r6, r0
 8013578:	4628      	mov	r0, r5
 801357a:	f006 f981 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801357e:	6823      	ldr	r3, [r4, #0]
 8013580:	4605      	mov	r5, r0
 8013582:	4631      	mov	r1, r6
 8013584:	4620      	mov	r0, r4
 8013586:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013588:	4798      	blx	r3
 801358a:	6823      	ldr	r3, [r4, #0]
 801358c:	4629      	mov	r1, r5
 801358e:	4620      	mov	r0, r4
 8013590:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013592:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013596:	4718      	bx	r3

08013598 <_ZN8touchgfx5ImageD0Ev>:
 8013598:	b510      	push	{r4, lr}
 801359a:	212c      	movs	r1, #44	; 0x2c
 801359c:	4604      	mov	r4, r0
 801359e:	f016 fda0 	bl	802a0e2 <_ZdlPvj>
 80135a2:	4620      	mov	r0, r4
 80135a4:	bd10      	pop	{r4, pc}

080135a6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80135a6:	b510      	push	{r4, lr}
 80135a8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80135ac:	2bff      	cmp	r3, #255	; 0xff
 80135ae:	4604      	mov	r4, r0
 80135b0:	d006      	beq.n	80135c0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80135b2:	2300      	movs	r3, #0
 80135b4:	8003      	strh	r3, [r0, #0]
 80135b6:	8043      	strh	r3, [r0, #2]
 80135b8:	8083      	strh	r3, [r0, #4]
 80135ba:	80c3      	strh	r3, [r0, #6]
 80135bc:	4620      	mov	r0, r4
 80135be:	bd10      	pop	{r4, pc}
 80135c0:	3126      	adds	r1, #38	; 0x26
 80135c2:	f006 f991 	bl	80198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80135c6:	e7f9      	b.n	80135bc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080135c8 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80135c8:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80135cc:	b12a      	cbz	r2, 80135da <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80135ce:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80135d2:	b112      	cbz	r2, 80135da <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80135d4:	6803      	ldr	r3, [r0, #0]
 80135d6:	695b      	ldr	r3, [r3, #20]
 80135d8:	4718      	bx	r3
 80135da:	4770      	bx	lr

080135dc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80135dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135e0:	4604      	mov	r4, r0
 80135e2:	b088      	sub	sp, #32
 80135e4:	f854 3b26 	ldr.w	r3, [r4], #38
 80135e8:	2500      	movs	r5, #0
 80135ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135ec:	460f      	mov	r7, r1
 80135ee:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80135f2:	a904      	add	r1, sp, #16
 80135f4:	4606      	mov	r6, r0
 80135f6:	4798      	blx	r3
 80135f8:	4620      	mov	r0, r4
 80135fa:	f006 f90d 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80135fe:	4680      	mov	r8, r0
 8013600:	4620      	mov	r0, r4
 8013602:	f006 f93d 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013606:	9506      	str	r5, [sp, #24]
 8013608:	ad06      	add	r5, sp, #24
 801360a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801360e:	4639      	mov	r1, r7
 8013610:	4628      	mov	r0, r5
 8013612:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013616:	f7fd fb9d 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801361a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801361e:	2b00      	cmp	r3, #0
 8013620:	dd19      	ble.n	8013656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013622:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013626:	2b00      	cmp	r3, #0
 8013628:	dd15      	ble.n	8013656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801362a:	4b0c      	ldr	r3, [pc, #48]	; (801365c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801362c:	681b      	ldr	r3, [r3, #0]
 801362e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013632:	b10a      	cbz	r2, 8013638 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013634:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013636:	b900      	cbnz	r0, 801363a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013638:	6898      	ldr	r0, [r3, #8]
 801363a:	6801      	ldr	r1, [r0, #0]
 801363c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013640:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013644:	2701      	movs	r7, #1
 8013646:	9702      	str	r7, [sp, #8]
 8013648:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 801364c:	e9cd 5600 	strd	r5, r6, [sp]
 8013650:	688d      	ldr	r5, [r1, #8]
 8013652:	4621      	mov	r1, r4
 8013654:	47a8      	blx	r5
 8013656:	b008      	add	sp, #32
 8013658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801365c:	20013444 	.word	0x20013444

08013660 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013660:	4770      	bx	lr

08013662 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013662:	b510      	push	{r4, lr}
 8013664:	2148      	movs	r1, #72	; 0x48
 8013666:	4604      	mov	r4, r0
 8013668:	f016 fd3b 	bl	802a0e2 <_ZdlPvj>
 801366c:	4620      	mov	r0, r4
 801366e:	bd10      	pop	{r4, pc}

08013670 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013670:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013674:	b08d      	sub	sp, #52	; 0x34
 8013676:	4604      	mov	r4, r0
 8013678:	460f      	mov	r7, r1
 801367a:	f7ff fdc1 	bl	8013200 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801367e:	4a55      	ldr	r2, [pc, #340]	; (80137d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013680:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013682:	8812      	ldrh	r2, [r2, #0]
 8013684:	429a      	cmp	r2, r3
 8013686:	f240 8082 	bls.w	801378e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801368a:	4d53      	ldr	r5, [pc, #332]	; (80137d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 801368c:	682a      	ldr	r2, [r5, #0]
 801368e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013692:	4b52      	ldr	r3, [pc, #328]	; (80137dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013694:	681b      	ldr	r3, [r3, #0]
 8013696:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801369a:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 801369e:	2200      	movs	r2, #0
 80136a0:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80136a4:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80136a8:	2a03      	cmp	r2, #3
 80136aa:	d811      	bhi.n	80136d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80136ac:	e8df f002 	tbb	[pc, r2]
 80136b0:	89727902 	.word	0x89727902
 80136b4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80136b8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80136bc:	1ad2      	subs	r2, r2, r3
 80136be:	2002      	movs	r0, #2
 80136c0:	f8ad 1010 	strh.w	r1, [sp, #16]
 80136c4:	fb92 f2f0 	sdiv	r2, r2, r0
 80136c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80136cc:	f8ad 200e 	strh.w	r2, [sp, #14]
 80136d0:	f10d 080c 	add.w	r8, sp, #12
 80136d4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80136d8:	f10d 0914 	add.w	r9, sp, #20
 80136dc:	e889 0003 	stmia.w	r9, {r0, r1}
 80136e0:	4639      	mov	r1, r7
 80136e2:	4648      	mov	r0, r9
 80136e4:	f7fd fb36 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 80136e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80136ec:	2b00      	cmp	r3, #0
 80136ee:	dd4e      	ble.n	801378e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80136f0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80136f4:	2b00      	cmp	r3, #0
 80136f6:	dd4a      	ble.n	801378e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80136f8:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80136fc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013700:	1a9b      	subs	r3, r3, r2
 8013702:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013706:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801370a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801370e:	1a9b      	subs	r3, r3, r2
 8013710:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013714:	6823      	ldr	r3, [r4, #0]
 8013716:	4641      	mov	r1, r8
 8013718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801371a:	4620      	mov	r0, r4
 801371c:	4798      	blx	r3
 801371e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013722:	2b00      	cmp	r3, #0
 8013724:	d053      	beq.n	80137ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013726:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013728:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801372a:	682b      	ldr	r3, [r5, #0]
 801372c:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013730:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013734:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013738:	785b      	ldrb	r3, [r3, #1]
 801373a:	9209      	str	r2, [sp, #36]	; 0x24
 801373c:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013740:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013744:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013748:	2300      	movs	r3, #0
 801374a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801374e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013752:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013756:	4b22      	ldr	r3, [pc, #136]	; (80137e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013758:	9607      	str	r6, [sp, #28]
 801375a:	681b      	ldr	r3, [r3, #0]
 801375c:	f88d 5020 	strb.w	r5, [sp, #32]
 8013760:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013764:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013768:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801376c:	b10a      	cbz	r2, 8013772 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801376e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013770:	b904      	cbnz	r4, 8013774 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013772:	689c      	ldr	r4, [r3, #8]
 8013774:	4b1b      	ldr	r3, [pc, #108]	; (80137e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013776:	6818      	ldr	r0, [r3, #0]
 8013778:	f7f4 ff8a 	bl	8008690 <_ZNK8touchgfx5Texts7getTextEt>
 801377c:	ab07      	add	r3, sp, #28
 801377e:	9001      	str	r0, [sp, #4]
 8013780:	9300      	str	r3, [sp, #0]
 8013782:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013786:	464b      	mov	r3, r9
 8013788:	4620      	mov	r0, r4
 801378a:	f7f4 ff33 	bl	80085f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801378e:	b00d      	add	sp, #52	; 0x34
 8013790:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013794:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013798:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801379c:	1ad2      	subs	r2, r2, r3
 801379e:	3201      	adds	r2, #1
 80137a0:	e78d      	b.n	80136be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80137a2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80137a6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80137aa:	1ad2      	subs	r2, r2, r3
 80137ac:	3201      	adds	r2, #1
 80137ae:	2002      	movs	r0, #2
 80137b0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80137b4:	fb92 f2f0 	sdiv	r2, r2, r0
 80137b8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80137bc:	f8ad 200c 	strh.w	r2, [sp, #12]
 80137c0:	e786      	b.n	80136d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80137c2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80137c6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80137ca:	1ad2      	subs	r2, r2, r3
 80137cc:	e7ef      	b.n	80137ae <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80137ce:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80137d0:	e7aa      	b.n	8013728 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80137d2:	bf00      	nop
 80137d4:	200134a0 	.word	0x200134a0
 80137d8:	2001349c 	.word	0x2001349c
 80137dc:	200134a4 	.word	0x200134a4
 80137e0:	20013444 	.word	0x20013444
 80137e4:	200134a8 	.word	0x200134a8

080137e8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80137e8:	b510      	push	{r4, lr}
 80137ea:	2101      	movs	r1, #1
 80137ec:	4c13      	ldr	r4, [pc, #76]	; (801383c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80137ee:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80137f2:	2200      	movs	r2, #0
 80137f4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80137f8:	6004      	str	r4, [r0, #0]
 80137fa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80137fe:	4c10      	ldr	r4, [pc, #64]	; (8013840 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013800:	8082      	strh	r2, [r0, #4]
 8013802:	80c2      	strh	r2, [r0, #6]
 8013804:	8102      	strh	r2, [r0, #8]
 8013806:	8142      	strh	r2, [r0, #10]
 8013808:	8182      	strh	r2, [r0, #12]
 801380a:	81c2      	strh	r2, [r0, #14]
 801380c:	8202      	strh	r2, [r0, #16]
 801380e:	8242      	strh	r2, [r0, #18]
 8013810:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013814:	61c2      	str	r2, [r0, #28]
 8013816:	8402      	strh	r2, [r0, #32]
 8013818:	8442      	strh	r2, [r0, #34]	; 0x22
 801381a:	6282      	str	r2, [r0, #40]	; 0x28
 801381c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013820:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013822:	8601      	strh	r1, [r0, #48]	; 0x30
 8013824:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013828:	6344      	str	r4, [r0, #52]	; 0x34
 801382a:	8701      	strh	r1, [r0, #56]	; 0x38
 801382c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013830:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013834:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013838:	bd10      	pop	{r4, pc}
 801383a:	bf00      	nop
 801383c:	0802f874 	.word	0x0802f874
 8013840:	0802c8cc 	.word	0x0802c8cc

08013844 <_ZN8touchgfx7OutlineD1Ev>:
 8013844:	4770      	bx	lr

08013846 <_ZN8touchgfx7OutlineD0Ev>:
 8013846:	b510      	push	{r4, lr}
 8013848:	2130      	movs	r1, #48	; 0x30
 801384a:	4604      	mov	r4, r0
 801384c:	f016 fc49 	bl	802a0e2 <_ZdlPvj>
 8013850:	4620      	mov	r0, r4
 8013852:	bd10      	pop	{r4, pc}

08013854 <_ZN8touchgfx7Outline5resetEv>:
 8013854:	b510      	push	{r4, lr}
 8013856:	4604      	mov	r4, r0
 8013858:	f000 fe96 	bl	8014588 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801385c:	60e0      	str	r0, [r4, #12]
 801385e:	f000 fe99 	bl	8014594 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013862:	68e3      	ldr	r3, [r4, #12]
 8013864:	6123      	str	r3, [r4, #16]
 8013866:	08c0      	lsrs	r0, r0, #3
 8013868:	2200      	movs	r2, #0
 801386a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801386e:	3801      	subs	r0, #1
 8013870:	6060      	str	r0, [r4, #4]
 8013872:	60a2      	str	r2, [r4, #8]
 8013874:	8019      	strh	r1, [r3, #0]
 8013876:	8059      	strh	r1, [r3, #2]
 8013878:	809a      	strh	r2, [r3, #4]
 801387a:	80da      	strh	r2, [r3, #6]
 801387c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801387e:	f023 0301 	bic.w	r3, r3, #1
 8013882:	f043 0302 	orr.w	r3, r3, #2
 8013886:	6263      	str	r3, [r4, #36]	; 0x24
 8013888:	bd10      	pop	{r4, pc}
	...

0801388c <_ZN8touchgfx7OutlineC1Ev>:
 801388c:	b510      	push	{r4, lr}
 801388e:	4b0a      	ldr	r3, [pc, #40]	; (80138b8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013890:	6003      	str	r3, [r0, #0]
 8013892:	2300      	movs	r3, #0
 8013894:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013898:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801389c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80138a0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80138a4:	6243      	str	r3, [r0, #36]	; 0x24
 80138a6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80138aa:	4604      	mov	r4, r0
 80138ac:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80138b0:	f7ff ffd0 	bl	8013854 <_ZN8touchgfx7Outline5resetEv>
 80138b4:	4620      	mov	r0, r4
 80138b6:	bd10      	pop	{r4, pc}
 80138b8:	0802f8e8 	.word	0x0802f8e8

080138bc <_ZN8touchgfx7Outline10renderLineEiiii>:
 80138bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138c0:	b093      	sub	sp, #76	; 0x4c
 80138c2:	1156      	asrs	r6, r2, #5
 80138c4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80138c6:	9305      	str	r3, [sp, #20]
 80138c8:	f004 051f 	and.w	r5, r4, #31
 80138cc:	1153      	asrs	r3, r2, #5
 80138ce:	9504      	str	r5, [sp, #16]
 80138d0:	1165      	asrs	r5, r4, #5
 80138d2:	9303      	str	r3, [sp, #12]
 80138d4:	42ae      	cmp	r6, r5
 80138d6:	ea4f 1364 	mov.w	r3, r4, asr #5
 80138da:	9306      	str	r3, [sp, #24]
 80138dc:	f002 031f 	and.w	r3, r2, #31
 80138e0:	f040 80f8 	bne.w	8013ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80138e4:	9c04      	ldr	r4, [sp, #16]
 80138e6:	9a05      	ldr	r2, [sp, #20]
 80138e8:	42a3      	cmp	r3, r4
 80138ea:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80138ee:	6902      	ldr	r2, [r0, #16]
 80138f0:	d125      	bne.n	801393e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80138f2:	f9b2 3000 	ldrsh.w	r3, [r2]
 80138f6:	459e      	cmp	lr, r3
 80138f8:	d103      	bne.n	8013902 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80138fa:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80138fe:	429e      	cmp	r6, r3
 8013900:	d035      	beq.n	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013902:	88d1      	ldrh	r1, [r2, #6]
 8013904:	8893      	ldrh	r3, [r2, #4]
 8013906:	430b      	orrs	r3, r1
 8013908:	d010      	beq.n	801392c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801390a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801390e:	2b00      	cmp	r3, #0
 8013910:	db0c      	blt.n	801392c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013912:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013914:	428b      	cmp	r3, r1
 8013916:	da09      	bge.n	801392c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013918:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801391c:	428b      	cmp	r3, r1
 801391e:	bf38      	it	cc
 8013920:	3208      	addcc	r2, #8
 8013922:	f103 0301 	add.w	r3, r3, #1
 8013926:	bf38      	it	cc
 8013928:	6102      	strcc	r2, [r0, #16]
 801392a:	6083      	str	r3, [r0, #8]
 801392c:	6903      	ldr	r3, [r0, #16]
 801392e:	9a03      	ldr	r2, [sp, #12]
 8013930:	f8a3 e000 	strh.w	lr, [r3]
 8013934:	805a      	strh	r2, [r3, #2]
 8013936:	2200      	movs	r2, #0
 8013938:	809a      	strh	r2, [r3, #4]
 801393a:	80da      	strh	r2, [r3, #6]
 801393c:	e017      	b.n	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801393e:	9c05      	ldr	r4, [sp, #20]
 8013940:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8013944:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013948:	f004 041f 	and.w	r4, r4, #31
 801394c:	114e      	asrs	r6, r1, #5
 801394e:	9402      	str	r4, [sp, #8]
 8013950:	9c04      	ldr	r4, [sp, #16]
 8013952:	4576      	cmp	r6, lr
 8013954:	f001 0c1f 	and.w	ip, r1, #31
 8013958:	eba4 0403 	sub.w	r4, r4, r3
 801395c:	d10a      	bne.n	8013974 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801395e:	9b02      	ldr	r3, [sp, #8]
 8013960:	449c      	add	ip, r3
 8013962:	44a0      	add	r8, r4
 8013964:	fb04 a40c 	mla	r4, r4, ip, sl
 8013968:	f8a2 8004 	strh.w	r8, [r2, #4]
 801396c:	80d4      	strh	r4, [r2, #6]
 801396e:	b013      	add	sp, #76	; 0x4c
 8013970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013974:	9d05      	ldr	r5, [sp, #20]
 8013976:	1a69      	subs	r1, r5, r1
 8013978:	bf5b      	ittet	pl
 801397a:	f1cc 0520 	rsbpl	r5, ip, #32
 801397e:	436c      	mulpl	r4, r5
 8013980:	2500      	movmi	r5, #0
 8013982:	2520      	movpl	r5, #32
 8013984:	bf44      	itt	mi
 8013986:	fb04 f40c 	mulmi.w	r4, r4, ip
 801398a:	4249      	negmi	r1, r1
 801398c:	9501      	str	r5, [sp, #4]
 801398e:	9f01      	ldr	r7, [sp, #4]
 8013990:	fb94 f5f1 	sdiv	r5, r4, r1
 8013994:	fb01 4415 	mls	r4, r1, r5, r4
 8013998:	bf54      	ite	pl
 801399a:	f04f 0901 	movpl.w	r9, #1
 801399e:	f04f 39ff 	movmi.w	r9, #4294967295
 80139a2:	2c00      	cmp	r4, #0
 80139a4:	bfb8      	it	lt
 80139a6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80139aa:	44bc      	add	ip, r7
 80139ac:	44a8      	add	r8, r5
 80139ae:	fb05 ac0c 	mla	ip, r5, ip, sl
 80139b2:	f8a2 8004 	strh.w	r8, [r2, #4]
 80139b6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80139ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80139be:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80139c2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80139c6:	bfb8      	it	lt
 80139c8:	1864      	addlt	r4, r4, r1
 80139ca:	ea58 0202 	orrs.w	r2, r8, r2
 80139ce:	444e      	add	r6, r9
 80139d0:	d011      	beq.n	80139f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80139d2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80139d6:	f1b8 0f00 	cmp.w	r8, #0
 80139da:	db0c      	blt.n	80139f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80139dc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80139de:	4590      	cmp	r8, r2
 80139e0:	da09      	bge.n	80139f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80139e2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80139e6:	4590      	cmp	r8, r2
 80139e8:	bf3c      	itt	cc
 80139ea:	f10c 0208 	addcc.w	r2, ip, #8
 80139ee:	6102      	strcc	r2, [r0, #16]
 80139f0:	f108 0201 	add.w	r2, r8, #1
 80139f4:	6082      	str	r2, [r0, #8]
 80139f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80139fa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80139fe:	f8ac 6000 	strh.w	r6, [ip]
 8013a02:	2700      	movs	r7, #0
 8013a04:	45b6      	cmp	lr, r6
 8013a06:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013a0a:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013a0e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013a12:	442b      	add	r3, r5
 8013a14:	d04d      	beq.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8013a16:	9f04      	ldr	r7, [sp, #16]
 8013a18:	1aff      	subs	r7, r7, r3
 8013a1a:	443d      	add	r5, r7
 8013a1c:	016d      	lsls	r5, r5, #5
 8013a1e:	fb95 f8f1 	sdiv	r8, r5, r1
 8013a22:	fb01 5518 	mls	r5, r1, r8, r5
 8013a26:	2d00      	cmp	r5, #0
 8013a28:	bfb8      	it	lt
 8013a2a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013a2e:	f108 0701 	add.w	r7, r8, #1
 8013a32:	bfb8      	it	lt
 8013a34:	186d      	addlt	r5, r5, r1
 8013a36:	1a64      	subs	r4, r4, r1
 8013a38:	9703      	str	r7, [sp, #12]
 8013a3a:	f04f 0a00 	mov.w	sl, #0
 8013a3e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013a42:	1964      	adds	r4, r4, r5
 8013a44:	bf58      	it	pl
 8013a46:	9f03      	ldrpl	r7, [sp, #12]
 8013a48:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013a4c:	bf48      	it	mi
 8013a4e:	4647      	movmi	r7, r8
 8013a50:	44bb      	add	fp, r7
 8013a52:	f8ac b004 	strh.w	fp, [ip, #4]
 8013a56:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013a5a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013a5e:	f8ac b006 	strh.w	fp, [ip, #6]
 8013a62:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013a66:	443b      	add	r3, r7
 8013a68:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013a6c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013a70:	bf58      	it	pl
 8013a72:	1a64      	subpl	r4, r4, r1
 8013a74:	ea5b 0707 	orrs.w	r7, fp, r7
 8013a78:	444e      	add	r6, r9
 8013a7a:	d011      	beq.n	8013aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013a7c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013a80:	f1bb 0f00 	cmp.w	fp, #0
 8013a84:	db0c      	blt.n	8013aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013a86:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013a88:	45bb      	cmp	fp, r7
 8013a8a:	da09      	bge.n	8013aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013a8c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013a90:	45bb      	cmp	fp, r7
 8013a92:	bf3c      	itt	cc
 8013a94:	f10c 0708 	addcc.w	r7, ip, #8
 8013a98:	6107      	strcc	r7, [r0, #16]
 8013a9a:	f10b 0701 	add.w	r7, fp, #1
 8013a9e:	6087      	str	r7, [r0, #8]
 8013aa0:	6907      	ldr	r7, [r0, #16]
 8013aa2:	45b6      	cmp	lr, r6
 8013aa4:	803e      	strh	r6, [r7, #0]
 8013aa6:	807a      	strh	r2, [r7, #2]
 8013aa8:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013aac:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013ab0:	d1c5      	bne.n	8013a3e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8013ab2:	9a04      	ldr	r2, [sp, #16]
 8013ab4:	1ad3      	subs	r3, r2, r3
 8013ab6:	6902      	ldr	r2, [r0, #16]
 8013ab8:	8891      	ldrh	r1, [r2, #4]
 8013aba:	88d6      	ldrh	r6, [r2, #6]
 8013abc:	4419      	add	r1, r3
 8013abe:	8091      	strh	r1, [r2, #4]
 8013ac0:	9902      	ldr	r1, [sp, #8]
 8013ac2:	f101 0c20 	add.w	ip, r1, #32
 8013ac6:	9901      	ldr	r1, [sp, #4]
 8013ac8:	ebac 0c01 	sub.w	ip, ip, r1
 8013acc:	fb03 630c 	mla	r3, r3, ip, r6
 8013ad0:	80d3      	strh	r3, [r2, #6]
 8013ad2:	e74c      	b.n	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013ad4:	9d05      	ldr	r5, [sp, #20]
 8013ad6:	1aa2      	subs	r2, r4, r2
 8013ad8:	eba5 0501 	sub.w	r5, r5, r1
 8013adc:	9508      	str	r5, [sp, #32]
 8013ade:	9202      	str	r2, [sp, #8]
 8013ae0:	f140 8128 	bpl.w	8013d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8013ae4:	9a03      	ldr	r2, [sp, #12]
 8013ae6:	2a00      	cmp	r2, #0
 8013ae8:	f6ff af41 	blt.w	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013aec:	9a02      	ldr	r2, [sp, #8]
 8013aee:	4252      	negs	r2, r2
 8013af0:	9202      	str	r2, [sp, #8]
 8013af2:	9a06      	ldr	r2, [sp, #24]
 8013af4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013af8:	f04f 34ff 	mov.w	r4, #4294967295
 8013afc:	9206      	str	r2, [sp, #24]
 8013afe:	462a      	mov	r2, r5
 8013b00:	940b      	str	r4, [sp, #44]	; 0x2c
 8013b02:	435a      	muls	r2, r3
 8013b04:	2400      	movs	r4, #0
 8013b06:	9d02      	ldr	r5, [sp, #8]
 8013b08:	9401      	str	r4, [sp, #4]
 8013b0a:	9c02      	ldr	r4, [sp, #8]
 8013b0c:	fb92 f4f4 	sdiv	r4, r2, r4
 8013b10:	fb05 2214 	mls	r2, r5, r4, r2
 8013b14:	2a00      	cmp	r2, #0
 8013b16:	9207      	str	r2, [sp, #28]
 8013b18:	bfbc      	itt	lt
 8013b1a:	1952      	addlt	r2, r2, r5
 8013b1c:	9207      	strlt	r2, [sp, #28]
 8013b1e:	9a01      	ldr	r2, [sp, #4]
 8013b20:	6905      	ldr	r5, [r0, #16]
 8013b22:	bfb8      	it	lt
 8013b24:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013b28:	eb04 0901 	add.w	r9, r4, r1
 8013b2c:	429a      	cmp	r2, r3
 8013b2e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8013b32:	f040 8112 	bne.w	8013d5a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8013b36:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013b3a:	429e      	cmp	r6, r3
 8013b3c:	d104      	bne.n	8013b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013b3e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013b42:	9a03      	ldr	r2, [sp, #12]
 8013b44:	429a      	cmp	r2, r3
 8013b46:	d01b      	beq.n	8013b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013b48:	88ea      	ldrh	r2, [r5, #6]
 8013b4a:	88ab      	ldrh	r3, [r5, #4]
 8013b4c:	4313      	orrs	r3, r2
 8013b4e:	d010      	beq.n	8013b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013b50:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013b54:	2a00      	cmp	r2, #0
 8013b56:	db0c      	blt.n	8013b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013b58:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013b5a:	429a      	cmp	r2, r3
 8013b5c:	da09      	bge.n	8013b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013b5e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8013b62:	429a      	cmp	r2, r3
 8013b64:	bf38      	it	cc
 8013b66:	3508      	addcc	r5, #8
 8013b68:	f102 0201 	add.w	r2, r2, #1
 8013b6c:	bf38      	it	cc
 8013b6e:	6105      	strcc	r5, [r0, #16]
 8013b70:	6082      	str	r2, [r0, #8]
 8013b72:	6903      	ldr	r3, [r0, #16]
 8013b74:	9a03      	ldr	r2, [sp, #12]
 8013b76:	805a      	strh	r2, [r3, #2]
 8013b78:	2200      	movs	r2, #0
 8013b7a:	801e      	strh	r6, [r3, #0]
 8013b7c:	809a      	strh	r2, [r3, #4]
 8013b7e:	80da      	strh	r2, [r3, #6]
 8013b80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b82:	9a03      	ldr	r2, [sp, #12]
 8013b84:	6901      	ldr	r1, [r0, #16]
 8013b86:	441a      	add	r2, r3
 8013b88:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013b8c:	42b3      	cmp	r3, r6
 8013b8e:	d103      	bne.n	8013b98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013b90:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013b94:	429a      	cmp	r2, r3
 8013b96:	d01a      	beq.n	8013bce <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013b98:	88cc      	ldrh	r4, [r1, #6]
 8013b9a:	888b      	ldrh	r3, [r1, #4]
 8013b9c:	4323      	orrs	r3, r4
 8013b9e:	d010      	beq.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013ba0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013ba4:	2c00      	cmp	r4, #0
 8013ba6:	db0c      	blt.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013ba8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013baa:	429c      	cmp	r4, r3
 8013bac:	da09      	bge.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013bae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013bb2:	429c      	cmp	r4, r3
 8013bb4:	bf38      	it	cc
 8013bb6:	3108      	addcc	r1, #8
 8013bb8:	f104 0401 	add.w	r4, r4, #1
 8013bbc:	bf38      	it	cc
 8013bbe:	6101      	strcc	r1, [r0, #16]
 8013bc0:	6084      	str	r4, [r0, #8]
 8013bc2:	6903      	ldr	r3, [r0, #16]
 8013bc4:	2100      	movs	r1, #0
 8013bc6:	801e      	strh	r6, [r3, #0]
 8013bc8:	805a      	strh	r2, [r3, #2]
 8013bca:	8099      	strh	r1, [r3, #4]
 8013bcc:	80d9      	strh	r1, [r3, #6]
 8013bce:	9b06      	ldr	r3, [sp, #24]
 8013bd0:	4293      	cmp	r3, r2
 8013bd2:	f000 8082 	beq.w	8013cda <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8013bd6:	9b08      	ldr	r3, [sp, #32]
 8013bd8:	9c02      	ldr	r4, [sp, #8]
 8013bda:	9902      	ldr	r1, [sp, #8]
 8013bdc:	015b      	lsls	r3, r3, #5
 8013bde:	fb93 f1f1 	sdiv	r1, r3, r1
 8013be2:	fb04 3311 	mls	r3, r4, r1, r3
 8013be6:	2b00      	cmp	r3, #0
 8013be8:	9103      	str	r1, [sp, #12]
 8013bea:	9308      	str	r3, [sp, #32]
 8013bec:	da04      	bge.n	8013bf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013bee:	1e4b      	subs	r3, r1, #1
 8013bf0:	9303      	str	r3, [sp, #12]
 8013bf2:	9b08      	ldr	r3, [sp, #32]
 8013bf4:	4423      	add	r3, r4
 8013bf6:	9308      	str	r3, [sp, #32]
 8013bf8:	9b07      	ldr	r3, [sp, #28]
 8013bfa:	9902      	ldr	r1, [sp, #8]
 8013bfc:	1a5b      	subs	r3, r3, r1
 8013bfe:	9307      	str	r3, [sp, #28]
 8013c00:	9b01      	ldr	r3, [sp, #4]
 8013c02:	f1c3 0320 	rsb	r3, r3, #32
 8013c06:	930e      	str	r3, [sp, #56]	; 0x38
 8013c08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013c0a:	9b01      	ldr	r3, [sp, #4]
 8013c0c:	1a5b      	subs	r3, r3, r1
 8013c0e:	464f      	mov	r7, r9
 8013c10:	930a      	str	r3, [sp, #40]	; 0x28
 8013c12:	2600      	movs	r6, #0
 8013c14:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013c18:	185b      	adds	r3, r3, r1
 8013c1a:	bf58      	it	pl
 8013c1c:	9902      	ldrpl	r1, [sp, #8]
 8013c1e:	9307      	str	r3, [sp, #28]
 8013c20:	bf5d      	ittte	pl
 8013c22:	1a5b      	subpl	r3, r3, r1
 8013c24:	9307      	strpl	r3, [sp, #28]
 8013c26:	9b03      	ldrpl	r3, [sp, #12]
 8013c28:	9903      	ldrmi	r1, [sp, #12]
 8013c2a:	bf58      	it	pl
 8013c2c:	1c59      	addpl	r1, r3, #1
 8013c2e:	4489      	add	r9, r1
 8013c30:	2a00      	cmp	r2, #0
 8013c32:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8013c36:	db2e      	blt.n	8013c96 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c38:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013c3a:	4293      	cmp	r3, r2
 8013c3c:	dd2b      	ble.n	8013c96 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c3e:	9c01      	ldr	r4, [sp, #4]
 8013c40:	6905      	ldr	r5, [r0, #16]
 8013c42:	46a0      	mov	r8, r4
 8013c44:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013c46:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013c4a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013c4e:	45a0      	cmp	r8, r4
 8013c50:	f040 814f 	bne.w	8013ef2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8013c54:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013c58:	4551      	cmp	r1, sl
 8013c5a:	d103      	bne.n	8013c64 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013c5c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013c60:	4291      	cmp	r1, r2
 8013c62:	d018      	beq.n	8013c96 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c64:	ea5c 010e 	orrs.w	r1, ip, lr
 8013c68:	d00f      	beq.n	8013c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013c6a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013c6e:	2900      	cmp	r1, #0
 8013c70:	db0b      	blt.n	8013c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013c72:	428b      	cmp	r3, r1
 8013c74:	dd09      	ble.n	8013c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013c76:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013c7a:	4299      	cmp	r1, r3
 8013c7c:	bf38      	it	cc
 8013c7e:	3508      	addcc	r5, #8
 8013c80:	f101 0101 	add.w	r1, r1, #1
 8013c84:	bf38      	it	cc
 8013c86:	6105      	strcc	r5, [r0, #16]
 8013c88:	6081      	str	r1, [r0, #8]
 8013c8a:	6903      	ldr	r3, [r0, #16]
 8013c8c:	f8a3 a000 	strh.w	sl, [r3]
 8013c90:	805a      	strh	r2, [r3, #2]
 8013c92:	809e      	strh	r6, [r3, #4]
 8013c94:	80de      	strh	r6, [r3, #6]
 8013c96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013c98:	6901      	ldr	r1, [r0, #16]
 8013c9a:	441a      	add	r2, r3
 8013c9c:	88cc      	ldrh	r4, [r1, #6]
 8013c9e:	888b      	ldrh	r3, [r1, #4]
 8013ca0:	4323      	orrs	r3, r4
 8013ca2:	d010      	beq.n	8013cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013ca4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013ca8:	2c00      	cmp	r4, #0
 8013caa:	db0c      	blt.n	8013cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013cac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013cae:	429c      	cmp	r4, r3
 8013cb0:	da09      	bge.n	8013cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013cb2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013cb6:	429c      	cmp	r4, r3
 8013cb8:	bf38      	it	cc
 8013cba:	3108      	addcc	r1, #8
 8013cbc:	f104 0401 	add.w	r4, r4, #1
 8013cc0:	bf38      	it	cc
 8013cc2:	6101      	strcc	r1, [r0, #16]
 8013cc4:	6084      	str	r4, [r0, #8]
 8013cc6:	6903      	ldr	r3, [r0, #16]
 8013cc8:	f8a3 a000 	strh.w	sl, [r3]
 8013ccc:	805a      	strh	r2, [r3, #2]
 8013cce:	809e      	strh	r6, [r3, #4]
 8013cd0:	80de      	strh	r6, [r3, #6]
 8013cd2:	9b06      	ldr	r3, [sp, #24]
 8013cd4:	4293      	cmp	r3, r2
 8013cd6:	464f      	mov	r7, r9
 8013cd8:	d19c      	bne.n	8013c14 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013cda:	9b01      	ldr	r3, [sp, #4]
 8013cdc:	6907      	ldr	r7, [r0, #16]
 8013cde:	f1c3 0620 	rsb	r6, r3, #32
 8013ce2:	9b05      	ldr	r3, [sp, #20]
 8013ce4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013ce8:	9b04      	ldr	r3, [sp, #16]
 8013cea:	429e      	cmp	r6, r3
 8013cec:	f040 81cc 	bne.w	8014088 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013cf0:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013cf4:	459e      	cmp	lr, r3
 8013cf6:	d104      	bne.n	8013d02 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013cf8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013cfc:	429a      	cmp	r2, r3
 8013cfe:	f43f ae36 	beq.w	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013d02:	88f9      	ldrh	r1, [r7, #6]
 8013d04:	88bb      	ldrh	r3, [r7, #4]
 8013d06:	430b      	orrs	r3, r1
 8013d08:	d010      	beq.n	8013d2c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013d0a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013d0e:	2b00      	cmp	r3, #0
 8013d10:	db0c      	blt.n	8013d2c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013d12:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013d14:	428b      	cmp	r3, r1
 8013d16:	da09      	bge.n	8013d2c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013d18:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013d1c:	428b      	cmp	r3, r1
 8013d1e:	bf38      	it	cc
 8013d20:	3708      	addcc	r7, #8
 8013d22:	f103 0301 	add.w	r3, r3, #1
 8013d26:	bf38      	it	cc
 8013d28:	6107      	strcc	r7, [r0, #16]
 8013d2a:	6083      	str	r3, [r0, #8]
 8013d2c:	6903      	ldr	r3, [r0, #16]
 8013d2e:	f8a3 e000 	strh.w	lr, [r3]
 8013d32:	e5ff      	b.n	8013934 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013d34:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013d36:	9c03      	ldr	r4, [sp, #12]
 8013d38:	42a2      	cmp	r2, r4
 8013d3a:	f6ff ae18 	blt.w	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013d3e:	9c06      	ldr	r4, [sp, #24]
 8013d40:	42a2      	cmp	r2, r4
 8013d42:	bfb8      	it	lt
 8013d44:	3201      	addlt	r2, #1
 8013d46:	9c08      	ldr	r4, [sp, #32]
 8013d48:	bfb8      	it	lt
 8013d4a:	9206      	strlt	r2, [sp, #24]
 8013d4c:	f1c3 0220 	rsb	r2, r3, #32
 8013d50:	4362      	muls	r2, r4
 8013d52:	2401      	movs	r4, #1
 8013d54:	940b      	str	r4, [sp, #44]	; 0x2c
 8013d56:	2420      	movs	r4, #32
 8013d58:	e6d5      	b.n	8013b06 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013d5a:	f009 021f 	and.w	r2, r9, #31
 8013d5e:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013d62:	920c      	str	r2, [sp, #48]	; 0x30
 8013d64:	9a01      	ldr	r2, [sp, #4]
 8013d66:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013d6a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013d6e:	45b0      	cmp	r8, r6
 8013d70:	f001 011f 	and.w	r1, r1, #31
 8013d74:	eba2 0203 	sub.w	r2, r2, r3
 8013d78:	d108      	bne.n	8013d8c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d7c:	4419      	add	r1, r3
 8013d7e:	4496      	add	lr, r2
 8013d80:	fb02 a101 	mla	r1, r2, r1, sl
 8013d84:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013d88:	80e9      	strh	r1, [r5, #6]
 8013d8a:	e6f9      	b.n	8013b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013d8c:	2c00      	cmp	r4, #0
 8013d8e:	f2c0 80a9 	blt.w	8013ee4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013d92:	2701      	movs	r7, #1
 8013d94:	f1c1 0c20 	rsb	ip, r1, #32
 8013d98:	970a      	str	r7, [sp, #40]	; 0x28
 8013d9a:	fb02 f20c 	mul.w	r2, r2, ip
 8013d9e:	2720      	movs	r7, #32
 8013da0:	9709      	str	r7, [sp, #36]	; 0x24
 8013da2:	fb92 fcf4 	sdiv	ip, r2, r4
 8013da6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013da8:	fb04 221c 	mls	r2, r4, ip, r2
 8013dac:	2a00      	cmp	r2, #0
 8013dae:	bfb8      	it	lt
 8013db0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013db4:	4439      	add	r1, r7
 8013db6:	fb0c a101 	mla	r1, ip, r1, sl
 8013dba:	80e9      	strh	r1, [r5, #6]
 8013dbc:	44e6      	add	lr, ip
 8013dbe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013dc0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013dc4:	eb08 0501 	add.w	r5, r8, r1
 8013dc8:	6901      	ldr	r1, [r0, #16]
 8013dca:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013dce:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013dd2:	bfb8      	it	lt
 8013dd4:	1912      	addlt	r2, r2, r4
 8013dd6:	ea58 070e 	orrs.w	r7, r8, lr
 8013dda:	d010      	beq.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013ddc:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013de0:	f1be 0f00 	cmp.w	lr, #0
 8013de4:	db0b      	blt.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013de6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013de8:	45be      	cmp	lr, r7
 8013dea:	da08      	bge.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013dec:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013df0:	45be      	cmp	lr, r7
 8013df2:	bf3c      	itt	cc
 8013df4:	3108      	addcc	r1, #8
 8013df6:	6101      	strcc	r1, [r0, #16]
 8013df8:	f10e 0101 	add.w	r1, lr, #1
 8013dfc:	6081      	str	r1, [r0, #8]
 8013dfe:	6901      	ldr	r1, [r0, #16]
 8013e00:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013e04:	800d      	strh	r5, [r1, #0]
 8013e06:	f04f 0e00 	mov.w	lr, #0
 8013e0a:	42ae      	cmp	r6, r5
 8013e0c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013e10:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013e14:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013e18:	4463      	add	r3, ip
 8013e1a:	d054      	beq.n	8013ec6 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013e1c:	9901      	ldr	r1, [sp, #4]
 8013e1e:	1ac9      	subs	r1, r1, r3
 8013e20:	4461      	add	r1, ip
 8013e22:	0149      	lsls	r1, r1, #5
 8013e24:	fb91 fef4 	sdiv	lr, r1, r4
 8013e28:	fb04 111e 	mls	r1, r4, lr, r1
 8013e2c:	2900      	cmp	r1, #0
 8013e2e:	bfb8      	it	lt
 8013e30:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013e34:	f10e 0701 	add.w	r7, lr, #1
 8013e38:	bfb8      	it	lt
 8013e3a:	1909      	addlt	r1, r1, r4
 8013e3c:	1b12      	subs	r2, r2, r4
 8013e3e:	970d      	str	r7, [sp, #52]	; 0x34
 8013e40:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013e44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013e46:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013e4a:	1852      	adds	r2, r2, r1
 8013e4c:	bf54      	ite	pl
 8013e4e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013e52:	46f4      	movmi	ip, lr
 8013e54:	44e3      	add	fp, ip
 8013e56:	f8aa b004 	strh.w	fp, [sl, #4]
 8013e5a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013e5e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013e62:	f8aa b006 	strh.w	fp, [sl, #6]
 8013e66:	4463      	add	r3, ip
 8013e68:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e6c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013e70:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013e74:	bf58      	it	pl
 8013e76:	1b12      	subpl	r2, r2, r4
 8013e78:	443d      	add	r5, r7
 8013e7a:	ea5b 070a 	orrs.w	r7, fp, sl
 8013e7e:	d014      	beq.n	8013eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013e80:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013e84:	f1ba 0f00 	cmp.w	sl, #0
 8013e88:	db0f      	blt.n	8013eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013e8a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e8c:	45ba      	cmp	sl, r7
 8013e8e:	da0c      	bge.n	8013eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013e90:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013e94:	45ba      	cmp	sl, r7
 8013e96:	bf38      	it	cc
 8013e98:	f10c 0c08 	addcc.w	ip, ip, #8
 8013e9c:	f10a 0a01 	add.w	sl, sl, #1
 8013ea0:	bf38      	it	cc
 8013ea2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013ea6:	f8c0 a008 	str.w	sl, [r0, #8]
 8013eaa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013eae:	f04f 0700 	mov.w	r7, #0
 8013eb2:	42ae      	cmp	r6, r5
 8013eb4:	f8ac 5000 	strh.w	r5, [ip]
 8013eb8:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013ebc:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013ec0:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013ec4:	d1bc      	bne.n	8013e40 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013ec6:	6904      	ldr	r4, [r0, #16]
 8013ec8:	9a01      	ldr	r2, [sp, #4]
 8013eca:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ecc:	1ad3      	subs	r3, r2, r3
 8013ece:	88a2      	ldrh	r2, [r4, #4]
 8013ed0:	441a      	add	r2, r3
 8013ed2:	80a2      	strh	r2, [r4, #4]
 8013ed4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013ed6:	3120      	adds	r1, #32
 8013ed8:	1a89      	subs	r1, r1, r2
 8013eda:	88e2      	ldrh	r2, [r4, #6]
 8013edc:	fb03 2301 	mla	r3, r3, r1, r2
 8013ee0:	80e3      	strh	r3, [r4, #6]
 8013ee2:	e64d      	b.n	8013b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013ee4:	f04f 37ff 	mov.w	r7, #4294967295
 8013ee8:	970a      	str	r7, [sp, #40]	; 0x28
 8013eea:	434a      	muls	r2, r1
 8013eec:	4264      	negs	r4, r4
 8013eee:	2700      	movs	r7, #0
 8013ef0:	e756      	b.n	8013da0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013ef2:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013ef6:	f009 031f 	and.w	r3, r9, #31
 8013efa:	45d0      	cmp	r8, sl
 8013efc:	f007 071f 	and.w	r7, r7, #31
 8013f00:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f02:	fa1f fc8c 	uxth.w	ip, ip
 8013f06:	fa1f fe8e 	uxth.w	lr, lr
 8013f0a:	d10a      	bne.n	8013f22 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013f0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f0e:	449c      	add	ip, r3
 8013f10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f12:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013f16:	441f      	add	r7, r3
 8013f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f1a:	fb03 e707 	mla	r7, r3, r7, lr
 8013f1e:	80ef      	strh	r7, [r5, #6]
 8013f20:	e6b9      	b.n	8013c96 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013f22:	2900      	cmp	r1, #0
 8013f24:	f2c0 80a8 	blt.w	8014078 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013f28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013f2a:	f1c7 0320 	rsb	r3, r7, #32
 8013f2e:	4363      	muls	r3, r4
 8013f30:	2401      	movs	r4, #1
 8013f32:	940d      	str	r4, [sp, #52]	; 0x34
 8013f34:	2420      	movs	r4, #32
 8013f36:	940c      	str	r4, [sp, #48]	; 0x30
 8013f38:	fb93 f4f1 	sdiv	r4, r3, r1
 8013f3c:	fb01 3b14 	mls	fp, r1, r4, r3
 8013f40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f42:	f1bb 0f00 	cmp.w	fp, #0
 8013f46:	bfb8      	it	lt
 8013f48:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013f4c:	441f      	add	r7, r3
 8013f4e:	fb04 e707 	mla	r7, r4, r7, lr
 8013f52:	44a4      	add	ip, r4
 8013f54:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013f58:	80ef      	strh	r7, [r5, #6]
 8013f5a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f60:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013f64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013f68:	bfb8      	it	lt
 8013f6a:	448b      	addlt	fp, r1
 8013f6c:	eb08 0503 	add.w	r5, r8, r3
 8013f70:	ea5e 0307 	orrs.w	r3, lr, r7
 8013f74:	d011      	beq.n	8013f9a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013f76:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013f7a:	f1be 0f00 	cmp.w	lr, #0
 8013f7e:	db0c      	blt.n	8013f9a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013f80:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013f82:	45be      	cmp	lr, r7
 8013f84:	da09      	bge.n	8013f9a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013f86:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013f8a:	45be      	cmp	lr, r7
 8013f8c:	bf3c      	itt	cc
 8013f8e:	f10c 0708 	addcc.w	r7, ip, #8
 8013f92:	6107      	strcc	r7, [r0, #16]
 8013f94:	f10e 0701 	add.w	r7, lr, #1
 8013f98:	6087      	str	r7, [r0, #8]
 8013f9a:	6907      	ldr	r7, [r0, #16]
 8013f9c:	b213      	sxth	r3, r2
 8013f9e:	9310      	str	r3, [sp, #64]	; 0x40
 8013fa0:	807b      	strh	r3, [r7, #2]
 8013fa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fa4:	803d      	strh	r5, [r7, #0]
 8013fa6:	4555      	cmp	r5, sl
 8013fa8:	80be      	strh	r6, [r7, #4]
 8013faa:	80fe      	strh	r6, [r7, #6]
 8013fac:	eb04 0c03 	add.w	ip, r4, r3
 8013fb0:	d051      	beq.n	8014056 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013fb2:	9b01      	ldr	r3, [sp, #4]
 8013fb4:	eba3 070c 	sub.w	r7, r3, ip
 8013fb8:	443c      	add	r4, r7
 8013fba:	0164      	lsls	r4, r4, #5
 8013fbc:	fb94 f8f1 	sdiv	r8, r4, r1
 8013fc0:	fb01 4418 	mls	r4, r1, r8, r4
 8013fc4:	2c00      	cmp	r4, #0
 8013fc6:	bfb8      	it	lt
 8013fc8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013fcc:	ebab 0301 	sub.w	r3, fp, r1
 8013fd0:	f108 0701 	add.w	r7, r8, #1
 8013fd4:	bfb8      	it	lt
 8013fd6:	1864      	addlt	r4, r4, r1
 8013fd8:	9309      	str	r3, [sp, #36]	; 0x24
 8013fda:	9711      	str	r7, [sp, #68]	; 0x44
 8013fdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fde:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013fe2:	191b      	adds	r3, r3, r4
 8013fe4:	bf58      	it	pl
 8013fe6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013fe8:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013fec:	9309      	str	r3, [sp, #36]	; 0x24
 8013fee:	bf48      	it	mi
 8013ff0:	4647      	movmi	r7, r8
 8013ff2:	44bb      	add	fp, r7
 8013ff4:	f8ae b004 	strh.w	fp, [lr, #4]
 8013ff8:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013ffc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014000:	f8ae b006 	strh.w	fp, [lr, #6]
 8014004:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014008:	44bc      	add	ip, r7
 801400a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801400c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014010:	443d      	add	r5, r7
 8014012:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014016:	bf5c      	itt	pl
 8014018:	1a5b      	subpl	r3, r3, r1
 801401a:	9309      	strpl	r3, [sp, #36]	; 0x24
 801401c:	ea5b 0307 	orrs.w	r3, fp, r7
 8014020:	d011      	beq.n	8014046 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014022:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014026:	f1bb 0f00 	cmp.w	fp, #0
 801402a:	db0c      	blt.n	8014046 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801402c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801402e:	45bb      	cmp	fp, r7
 8014030:	da09      	bge.n	8014046 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014032:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014036:	45bb      	cmp	fp, r7
 8014038:	bf3c      	itt	cc
 801403a:	f10e 0708 	addcc.w	r7, lr, #8
 801403e:	6107      	strcc	r7, [r0, #16]
 8014040:	f10b 0701 	add.w	r7, fp, #1
 8014044:	6087      	str	r7, [r0, #8]
 8014046:	6907      	ldr	r7, [r0, #16]
 8014048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801404a:	803d      	strh	r5, [r7, #0]
 801404c:	4555      	cmp	r5, sl
 801404e:	807b      	strh	r3, [r7, #2]
 8014050:	80be      	strh	r6, [r7, #4]
 8014052:	80fe      	strh	r6, [r7, #6]
 8014054:	d1c2      	bne.n	8013fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014056:	9b01      	ldr	r3, [sp, #4]
 8014058:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801405a:	eba3 0c0c 	sub.w	ip, r3, ip
 801405e:	6903      	ldr	r3, [r0, #16]
 8014060:	8899      	ldrh	r1, [r3, #4]
 8014062:	4461      	add	r1, ip
 8014064:	8099      	strh	r1, [r3, #4]
 8014066:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014068:	3720      	adds	r7, #32
 801406a:	1a7f      	subs	r7, r7, r1
 801406c:	88d9      	ldrh	r1, [r3, #6]
 801406e:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014072:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014076:	e60e      	b.n	8013c96 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014078:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801407a:	f04f 34ff 	mov.w	r4, #4294967295
 801407e:	940d      	str	r4, [sp, #52]	; 0x34
 8014080:	437b      	muls	r3, r7
 8014082:	4249      	negs	r1, r1
 8014084:	2400      	movs	r4, #0
 8014086:	e756      	b.n	8013f36 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014088:	9905      	ldr	r1, [sp, #20]
 801408a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801408e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014092:	f001 011f 	and.w	r1, r1, #31
 8014096:	ea4f 1b69 	mov.w	fp, r9, asr #5
 801409a:	9102      	str	r1, [sp, #8]
 801409c:	9904      	ldr	r1, [sp, #16]
 801409e:	45f3      	cmp	fp, lr
 80140a0:	f009 0c1f 	and.w	ip, r9, #31
 80140a4:	eba1 0406 	sub.w	r4, r1, r6
 80140a8:	d108      	bne.n	80140bc <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80140aa:	9b02      	ldr	r3, [sp, #8]
 80140ac:	449c      	add	ip, r3
 80140ae:	44a0      	add	r8, r4
 80140b0:	fb04 a40c 	mla	r4, r4, ip, sl
 80140b4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80140b8:	80fc      	strh	r4, [r7, #6]
 80140ba:	e458      	b.n	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80140bc:	9905      	ldr	r1, [sp, #20]
 80140be:	ebb1 0109 	subs.w	r1, r1, r9
 80140c2:	bf5b      	ittet	pl
 80140c4:	f1cc 0520 	rsbpl	r5, ip, #32
 80140c8:	436c      	mulpl	r4, r5
 80140ca:	2500      	movmi	r5, #0
 80140cc:	2520      	movpl	r5, #32
 80140ce:	bf44      	itt	mi
 80140d0:	fb04 f40c 	mulmi.w	r4, r4, ip
 80140d4:	4249      	negmi	r1, r1
 80140d6:	9501      	str	r5, [sp, #4]
 80140d8:	9b01      	ldr	r3, [sp, #4]
 80140da:	fb94 f5f1 	sdiv	r5, r4, r1
 80140de:	fb01 4415 	mls	r4, r1, r5, r4
 80140e2:	bf54      	ite	pl
 80140e4:	f04f 0901 	movpl.w	r9, #1
 80140e8:	f04f 39ff 	movmi.w	r9, #4294967295
 80140ec:	2c00      	cmp	r4, #0
 80140ee:	bfb8      	it	lt
 80140f0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80140f4:	449c      	add	ip, r3
 80140f6:	44a8      	add	r8, r5
 80140f8:	fb05 ac0c 	mla	ip, r5, ip, sl
 80140fc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014100:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014104:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014108:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801410c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014110:	bfb8      	it	lt
 8014112:	1864      	addlt	r4, r4, r1
 8014114:	ea58 0707 	orrs.w	r7, r8, r7
 8014118:	eb0b 0309 	add.w	r3, fp, r9
 801411c:	d011      	beq.n	8014142 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801411e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014122:	f1b8 0f00 	cmp.w	r8, #0
 8014126:	db0c      	blt.n	8014142 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014128:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801412a:	45b8      	cmp	r8, r7
 801412c:	da09      	bge.n	8014142 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801412e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014132:	45b8      	cmp	r8, r7
 8014134:	bf3c      	itt	cc
 8014136:	f10c 0708 	addcc.w	r7, ip, #8
 801413a:	6107      	strcc	r7, [r0, #16]
 801413c:	f108 0701 	add.w	r7, r8, #1
 8014140:	6087      	str	r7, [r0, #8]
 8014142:	6907      	ldr	r7, [r0, #16]
 8014144:	f04f 0c00 	mov.w	ip, #0
 8014148:	b212      	sxth	r2, r2
 801414a:	459e      	cmp	lr, r3
 801414c:	803b      	strh	r3, [r7, #0]
 801414e:	807a      	strh	r2, [r7, #2]
 8014150:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014154:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014158:	442e      	add	r6, r5
 801415a:	d04d      	beq.n	80141f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801415c:	9f04      	ldr	r7, [sp, #16]
 801415e:	1bbf      	subs	r7, r7, r6
 8014160:	443d      	add	r5, r7
 8014162:	016d      	lsls	r5, r5, #5
 8014164:	fb95 f8f1 	sdiv	r8, r5, r1
 8014168:	fb01 5518 	mls	r5, r1, r8, r5
 801416c:	4565      	cmp	r5, ip
 801416e:	bfb8      	it	lt
 8014170:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014174:	f108 0701 	add.w	r7, r8, #1
 8014178:	bfb8      	it	lt
 801417a:	186d      	addlt	r5, r5, r1
 801417c:	1a64      	subs	r4, r4, r1
 801417e:	9703      	str	r7, [sp, #12]
 8014180:	f04f 0a00 	mov.w	sl, #0
 8014184:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014188:	1964      	adds	r4, r4, r5
 801418a:	bf58      	it	pl
 801418c:	9f03      	ldrpl	r7, [sp, #12]
 801418e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014192:	bf48      	it	mi
 8014194:	4647      	movmi	r7, r8
 8014196:	44bb      	add	fp, r7
 8014198:	f8ac b004 	strh.w	fp, [ip, #4]
 801419c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80141a0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80141a4:	f8ac b006 	strh.w	fp, [ip, #6]
 80141a8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80141ac:	443e      	add	r6, r7
 80141ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80141b2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80141b6:	bf58      	it	pl
 80141b8:	1a64      	subpl	r4, r4, r1
 80141ba:	ea5b 0707 	orrs.w	r7, fp, r7
 80141be:	444b      	add	r3, r9
 80141c0:	d011      	beq.n	80141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80141c2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80141c6:	f1bb 0f00 	cmp.w	fp, #0
 80141ca:	db0c      	blt.n	80141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80141cc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80141ce:	45bb      	cmp	fp, r7
 80141d0:	da09      	bge.n	80141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80141d2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80141d6:	45bb      	cmp	fp, r7
 80141d8:	bf3c      	itt	cc
 80141da:	f10c 0708 	addcc.w	r7, ip, #8
 80141de:	6107      	strcc	r7, [r0, #16]
 80141e0:	f10b 0701 	add.w	r7, fp, #1
 80141e4:	6087      	str	r7, [r0, #8]
 80141e6:	6907      	ldr	r7, [r0, #16]
 80141e8:	459e      	cmp	lr, r3
 80141ea:	803b      	strh	r3, [r7, #0]
 80141ec:	807a      	strh	r2, [r7, #2]
 80141ee:	f8a7 a004 	strh.w	sl, [r7, #4]
 80141f2:	f8a7 a006 	strh.w	sl, [r7, #6]
 80141f6:	d1c5      	bne.n	8014184 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80141f8:	9b04      	ldr	r3, [sp, #16]
 80141fa:	1b9e      	subs	r6, r3, r6
 80141fc:	6903      	ldr	r3, [r0, #16]
 80141fe:	889a      	ldrh	r2, [r3, #4]
 8014200:	4432      	add	r2, r6
 8014202:	809a      	strh	r2, [r3, #4]
 8014204:	9a02      	ldr	r2, [sp, #8]
 8014206:	f102 0c20 	add.w	ip, r2, #32
 801420a:	9a01      	ldr	r2, [sp, #4]
 801420c:	ebac 0c02 	sub.w	ip, ip, r2
 8014210:	88da      	ldrh	r2, [r3, #6]
 8014212:	fb06 260c 	mla	r6, r6, ip, r2
 8014216:	80de      	strh	r6, [r3, #6]
 8014218:	f7ff bba9 	b.w	801396e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801421c <_ZN8touchgfx7Outline6lineToEii>:
 801421c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801421e:	079b      	lsls	r3, r3, #30
 8014220:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014222:	460e      	mov	r6, r1
 8014224:	4615      	mov	r5, r2
 8014226:	d511      	bpl.n	801424c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014228:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801422c:	ea86 0701 	eor.w	r7, r6, r1
 8014230:	ea85 0302 	eor.w	r3, r5, r2
 8014234:	433b      	orrs	r3, r7
 8014236:	d009      	beq.n	801424c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014238:	4633      	mov	r3, r6
 801423a:	9500      	str	r5, [sp, #0]
 801423c:	f7ff fb3e 	bl	80138bc <_ZN8touchgfx7Outline10renderLineEiiii>
 8014240:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014242:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014246:	f043 0301 	orr.w	r3, r3, #1
 801424a:	6243      	str	r3, [r0, #36]	; 0x24
 801424c:	b003      	add	sp, #12
 801424e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014250 <_ZN8touchgfx7Outline6moveToEii>:
 8014250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014252:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014254:	4615      	mov	r5, r2
 8014256:	079a      	lsls	r2, r3, #30
 8014258:	4604      	mov	r4, r0
 801425a:	460e      	mov	r6, r1
 801425c:	d401      	bmi.n	8014262 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801425e:	f7ff faf9 	bl	8013854 <_ZN8touchgfx7Outline5resetEv>
 8014262:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014264:	07db      	lsls	r3, r3, #31
 8014266:	d504      	bpl.n	8014272 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014268:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801426c:	4620      	mov	r0, r4
 801426e:	f7ff ffd5 	bl	801421c <_ZN8touchgfx7Outline6lineToEii>
 8014272:	6923      	ldr	r3, [r4, #16]
 8014274:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014278:	1170      	asrs	r0, r6, #5
 801427a:	4290      	cmp	r0, r2
 801427c:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014280:	d103      	bne.n	801428a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014282:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014286:	4291      	cmp	r1, r2
 8014288:	d01a      	beq.n	80142c0 <_ZN8touchgfx7Outline6moveToEii+0x70>
 801428a:	88df      	ldrh	r7, [r3, #6]
 801428c:	889a      	ldrh	r2, [r3, #4]
 801428e:	433a      	orrs	r2, r7
 8014290:	d010      	beq.n	80142b4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014292:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014296:	2a00      	cmp	r2, #0
 8014298:	db0c      	blt.n	80142b4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801429a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 801429c:	42ba      	cmp	r2, r7
 801429e:	da09      	bge.n	80142b4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80142a0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80142a4:	42ba      	cmp	r2, r7
 80142a6:	bf38      	it	cc
 80142a8:	3308      	addcc	r3, #8
 80142aa:	f102 0201 	add.w	r2, r2, #1
 80142ae:	bf38      	it	cc
 80142b0:	6123      	strcc	r3, [r4, #16]
 80142b2:	60a2      	str	r2, [r4, #8]
 80142b4:	6923      	ldr	r3, [r4, #16]
 80142b6:	2200      	movs	r2, #0
 80142b8:	8018      	strh	r0, [r3, #0]
 80142ba:	8059      	strh	r1, [r3, #2]
 80142bc:	809a      	strh	r2, [r3, #4]
 80142be:	80da      	strh	r2, [r3, #6]
 80142c0:	6166      	str	r6, [r4, #20]
 80142c2:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80142c6:	6225      	str	r5, [r4, #32]
 80142c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080142ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80142ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80142ce:	b0d0      	sub	sp, #320	; 0x140
 80142d0:	466c      	mov	r4, sp
 80142d2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80142d6:	4627      	mov	r7, r4
 80142d8:	1a0d      	subs	r5, r1, r0
 80142da:	2d48      	cmp	r5, #72	; 0x48
 80142dc:	f100 0308 	add.w	r3, r0, #8
 80142e0:	f340 80d5 	ble.w	801448e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80142e4:	112d      	asrs	r5, r5, #4
 80142e6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80142ea:	f9b0 9000 	ldrsh.w	r9, [r0]
 80142ee:	6816      	ldr	r6, [r2, #0]
 80142f0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80142f4:	6006      	str	r6, [r0, #0]
 80142f6:	6856      	ldr	r6, [r2, #4]
 80142f8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80142fc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014300:	6046      	str	r6, [r0, #4]
 8014302:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014306:	f8a2 8002 	strh.w	r8, [r2, #2]
 801430a:	f8a2 e004 	strh.w	lr, [r2, #4]
 801430e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014312:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014316:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801431a:	4565      	cmp	r5, ip
 801431c:	f1a1 0208 	sub.w	r2, r1, #8
 8014320:	db06      	blt.n	8014330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014322:	d119      	bne.n	8014358 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014324:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014328:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801432c:	42ae      	cmp	r6, r5
 801432e:	dd13      	ble.n	8014358 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014330:	460e      	mov	r6, r1
 8014332:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014336:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801433a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801433e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014342:	601d      	str	r5, [r3, #0]
 8014344:	6875      	ldr	r5, [r6, #4]
 8014346:	605d      	str	r5, [r3, #4]
 8014348:	f821 9c08 	strh.w	r9, [r1, #-8]
 801434c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014350:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014354:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014358:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801435c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014360:	42ae      	cmp	r6, r5
 8014362:	db06      	blt.n	8014372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014364:	d116      	bne.n	8014394 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014366:	f9b0 c000 	ldrsh.w	ip, [r0]
 801436a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801436e:	45ac      	cmp	ip, r5
 8014370:	da10      	bge.n	8014394 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014372:	681d      	ldr	r5, [r3, #0]
 8014374:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014378:	6005      	str	r5, [r0, #0]
 801437a:	685d      	ldr	r5, [r3, #4]
 801437c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014380:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014384:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014388:	6045      	str	r5, [r0, #4]
 801438a:	8146      	strh	r6, [r0, #10]
 801438c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014390:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014394:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014398:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801439c:	4565      	cmp	r5, ip
 801439e:	db06      	blt.n	80143ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80143a0:	d119      	bne.n	80143d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80143a2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80143a6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80143aa:	42ae      	cmp	r6, r5
 80143ac:	da13      	bge.n	80143d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80143ae:	460e      	mov	r6, r1
 80143b0:	f9b0 9000 	ldrsh.w	r9, [r0]
 80143b4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80143b8:	6005      	str	r5, [r0, #0]
 80143ba:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80143be:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80143c2:	6875      	ldr	r5, [r6, #4]
 80143c4:	6045      	str	r5, [r0, #4]
 80143c6:	f821 9c08 	strh.w	r9, [r1, #-8]
 80143ca:	f821 cc06 	strh.w	ip, [r1, #-6]
 80143ce:	f821 8c04 	strh.w	r8, [r1, #-4]
 80143d2:	f821 ec02 	strh.w	lr, [r1, #-2]
 80143d6:	3308      	adds	r3, #8
 80143d8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80143dc:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80143e0:	45e6      	cmp	lr, ip
 80143e2:	dbf8      	blt.n	80143d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80143e4:	d105      	bne.n	80143f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80143e6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80143ea:	f9b0 5000 	ldrsh.w	r5, [r0]
 80143ee:	42ae      	cmp	r6, r5
 80143f0:	dbf1      	blt.n	80143d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80143f2:	4615      	mov	r5, r2
 80143f4:	3a08      	subs	r2, #8
 80143f6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80143fa:	45b4      	cmp	ip, r6
 80143fc:	dbf9      	blt.n	80143f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80143fe:	d105      	bne.n	801440c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014400:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014404:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014408:	45b0      	cmp	r8, r6
 801440a:	dbf2      	blt.n	80143f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801440c:	4293      	cmp	r3, r2
 801440e:	f1a5 0608 	sub.w	r6, r5, #8
 8014412:	d816      	bhi.n	8014442 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014414:	f8d6 c000 	ldr.w	ip, [r6]
 8014418:	f9b3 a000 	ldrsh.w	sl, [r3]
 801441c:	f8c3 c000 	str.w	ip, [r3]
 8014420:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014424:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014428:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801442c:	f8c3 c004 	str.w	ip, [r3, #4]
 8014430:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014434:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014438:	f825 9c04 	strh.w	r9, [r5, #-4]
 801443c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014440:	e7c9      	b.n	80143d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014442:	f8d6 e000 	ldr.w	lr, [r6]
 8014446:	f9b0 a000 	ldrsh.w	sl, [r0]
 801444a:	f8c0 e000 	str.w	lr, [r0]
 801444e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014452:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014456:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801445a:	f8c0 e004 	str.w	lr, [r0, #4]
 801445e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014462:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014466:	f825 9c04 	strh.w	r9, [r5, #-4]
 801446a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801446e:	1acd      	subs	r5, r1, r3
 8014470:	1a16      	subs	r6, r2, r0
 8014472:	10ed      	asrs	r5, r5, #3
 8014474:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014478:	bfb5      	itete	lt
 801447a:	e9c4 0200 	strdlt	r0, r2, [r4]
 801447e:	e9c4 3100 	strdge	r3, r1, [r4]
 8014482:	460a      	movlt	r2, r1
 8014484:	4603      	movge	r3, r0
 8014486:	3408      	adds	r4, #8
 8014488:	4618      	mov	r0, r3
 801448a:	4611      	mov	r1, r2
 801448c:	e724      	b.n	80142d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801448e:	4299      	cmp	r1, r3
 8014490:	d928      	bls.n	80144e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014492:	f1a3 0210 	sub.w	r2, r3, #16
 8014496:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 801449a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801449e:	45ac      	cmp	ip, r5
 80144a0:	db06      	blt.n	80144b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80144a2:	d11d      	bne.n	80144e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80144a4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80144a8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80144ac:	42ae      	cmp	r6, r5
 80144ae:	da17      	bge.n	80144e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80144b0:	4615      	mov	r5, r2
 80144b2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80144b6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80144ba:	6116      	str	r6, [r2, #16]
 80144bc:	686e      	ldr	r6, [r5, #4]
 80144be:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80144c2:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80144c6:	f8a2 9008 	strh.w	r9, [r2, #8]
 80144ca:	42a8      	cmp	r0, r5
 80144cc:	6156      	str	r6, [r2, #20]
 80144ce:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80144d2:	f8a2 800c 	strh.w	r8, [r2, #12]
 80144d6:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80144da:	f1a2 0208 	sub.w	r2, r2, #8
 80144de:	d1da      	bne.n	8014496 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80144e0:	3308      	adds	r3, #8
 80144e2:	e7d4      	b.n	801448e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80144e4:	42bc      	cmp	r4, r7
 80144e6:	d903      	bls.n	80144f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80144e8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80144ec:	3c08      	subs	r4, #8
 80144ee:	e6f3      	b.n	80142d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80144f0:	b050      	add	sp, #320	; 0x140
 80144f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080144f6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80144f6:	b510      	push	{r4, lr}
 80144f8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80144fa:	07da      	lsls	r2, r3, #31
 80144fc:	4604      	mov	r4, r0
 80144fe:	d507      	bpl.n	8014510 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014500:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014504:	f7ff fe8a 	bl	801421c <_ZN8touchgfx7Outline6lineToEii>
 8014508:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801450a:	f023 0301 	bic.w	r3, r3, #1
 801450e:	6243      	str	r3, [r0, #36]	; 0x24
 8014510:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014512:	079b      	lsls	r3, r3, #30
 8014514:	d521      	bpl.n	801455a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014516:	6923      	ldr	r3, [r4, #16]
 8014518:	88d9      	ldrh	r1, [r3, #6]
 801451a:	889a      	ldrh	r2, [r3, #4]
 801451c:	430a      	orrs	r2, r1
 801451e:	d010      	beq.n	8014542 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014520:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014524:	2a00      	cmp	r2, #0
 8014526:	db0c      	blt.n	8014542 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014528:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801452a:	428a      	cmp	r2, r1
 801452c:	da09      	bge.n	8014542 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801452e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014532:	4291      	cmp	r1, r2
 8014534:	bf88      	it	hi
 8014536:	3308      	addhi	r3, #8
 8014538:	f102 0201 	add.w	r2, r2, #1
 801453c:	bf88      	it	hi
 801453e:	6123      	strhi	r3, [r4, #16]
 8014540:	60a2      	str	r2, [r4, #8]
 8014542:	68a1      	ldr	r1, [r4, #8]
 8014544:	b129      	cbz	r1, 8014552 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014546:	6863      	ldr	r3, [r4, #4]
 8014548:	4299      	cmp	r1, r3
 801454a:	d802      	bhi.n	8014552 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801454c:	68e0      	ldr	r0, [r4, #12]
 801454e:	f7ff febc 	bl	80142ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014552:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014554:	f023 0302 	bic.w	r3, r3, #2
 8014558:	6263      	str	r3, [r4, #36]	; 0x24
 801455a:	68e0      	ldr	r0, [r4, #12]
 801455c:	bd10      	pop	{r4, pc}
	...

08014560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014560:	4b02      	ldr	r3, [pc, #8]	; (801456c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014562:	6018      	str	r0, [r3, #0]
 8014564:	4b02      	ldr	r3, [pc, #8]	; (8014570 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014566:	6019      	str	r1, [r3, #0]
 8014568:	4770      	bx	lr
 801456a:	bf00      	nop
 801456c:	2001344c 	.word	0x2001344c
 8014570:	20013450 	.word	0x20013450

08014574 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014574:	4a02      	ldr	r2, [pc, #8]	; (8014580 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014576:	2300      	movs	r3, #0
 8014578:	6013      	str	r3, [r2, #0]
 801457a:	4a02      	ldr	r2, [pc, #8]	; (8014584 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 801457c:	6013      	str	r3, [r2, #0]
 801457e:	4770      	bx	lr
 8014580:	2001344c 	.word	0x2001344c
 8014584:	20013450 	.word	0x20013450

08014588 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014588:	4b01      	ldr	r3, [pc, #4]	; (8014590 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 801458a:	6818      	ldr	r0, [r3, #0]
 801458c:	4770      	bx	lr
 801458e:	bf00      	nop
 8014590:	2001344c 	.word	0x2001344c

08014594 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014594:	4b01      	ldr	r3, [pc, #4]	; (801459c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014596:	6818      	ldr	r0, [r3, #0]
 8014598:	4770      	bx	lr
 801459a:	bf00      	nop
 801459c:	20013450 	.word	0x20013450

080145a0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80145a0:	b510      	push	{r4, lr}
 80145a2:	6803      	ldr	r3, [r0, #0]
 80145a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80145a6:	460c      	mov	r4, r1
 80145a8:	4798      	blx	r3
 80145aa:	1b03      	subs	r3, r0, r4
 80145ac:	4258      	negs	r0, r3
 80145ae:	4158      	adcs	r0, r3
 80145b0:	bd10      	pop	{r4, pc}
	...

080145b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80145b4:	4b01      	ldr	r3, [pc, #4]	; (80145bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80145b6:	6019      	str	r1, [r3, #0]
 80145b8:	4770      	bx	lr
 80145ba:	bf00      	nop
 80145bc:	20013454 	.word	0x20013454

080145c0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80145c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145c4:	4696      	mov	lr, r2
 80145c6:	4605      	mov	r5, r0
 80145c8:	4614      	mov	r4, r2
 80145ca:	460e      	mov	r6, r1
 80145cc:	461f      	mov	r7, r3
 80145ce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80145d2:	b097      	sub	sp, #92	; 0x5c
 80145d4:	f10d 0c1c 	add.w	ip, sp, #28
 80145d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80145dc:	f8de 3000 	ldr.w	r3, [lr]
 80145e0:	f8cc 3000 	str.w	r3, [ip]
 80145e4:	f104 0e14 	add.w	lr, r4, #20
 80145e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80145ec:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80145f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80145f4:	f8de 3000 	ldr.w	r3, [lr]
 80145f8:	f8cc 3000 	str.w	r3, [ip]
 80145fc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014600:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014604:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014608:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801460c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014610:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014614:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014618:	f8de 3000 	ldr.w	r3, [lr]
 801461c:	f8cc 3000 	str.w	r3, [ip]
 8014620:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014622:	682b      	ldr	r3, [r5, #0]
 8014624:	9201      	str	r2, [sp, #4]
 8014626:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801462a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801462c:	9200      	str	r2, [sp, #0]
 801462e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014632:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014636:	aa07      	add	r2, sp, #28
 8014638:	463b      	mov	r3, r7
 801463a:	4631      	mov	r1, r6
 801463c:	4628      	mov	r0, r5
 801463e:	47d8      	blx	fp
 8014640:	46a6      	mov	lr, r4
 8014642:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014646:	f10d 0c1c 	add.w	ip, sp, #28
 801464a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801464e:	f8de 3000 	ldr.w	r3, [lr]
 8014652:	f8cc 3000 	str.w	r3, [ip]
 8014656:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801465a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801465e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014662:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014666:	343c      	adds	r4, #60	; 0x3c
 8014668:	f8de 3000 	ldr.w	r3, [lr]
 801466c:	f8cc 3000 	str.w	r3, [ip]
 8014670:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014672:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014676:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801467a:	6823      	ldr	r3, [r4, #0]
 801467c:	f8cc 3000 	str.w	r3, [ip]
 8014680:	682b      	ldr	r3, [r5, #0]
 8014682:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014686:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014688:	9201      	str	r2, [sp, #4]
 801468a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801468c:	9200      	str	r2, [sp, #0]
 801468e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014692:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014694:	aa07      	add	r2, sp, #28
 8014696:	463b      	mov	r3, r7
 8014698:	4631      	mov	r1, r6
 801469a:	4628      	mov	r0, r5
 801469c:	47a0      	blx	r4
 801469e:	b017      	add	sp, #92	; 0x5c
 80146a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80146a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146a8:	b08d      	sub	sp, #52	; 0x34
 80146aa:	4688      	mov	r8, r1
 80146ac:	9916      	ldr	r1, [sp, #88]	; 0x58
 80146ae:	f8d3 c000 	ldr.w	ip, [r3]
 80146b2:	680f      	ldr	r7, [r1, #0]
 80146b4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80146b8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80146bc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80146c0:	edd3 6a07 	vldr	s13, [r3, #28]
 80146c4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80146c6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80146ca:	f9b1 9000 	ldrsh.w	r9, [r1]
 80146ce:	f9ba 1000 	ldrsh.w	r1, [sl]
 80146d2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80146d6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80146da:	eba7 070c 	sub.w	r7, r7, ip
 80146de:	42bc      	cmp	r4, r7
 80146e0:	bfa8      	it	ge
 80146e2:	463c      	movge	r4, r7
 80146e4:	ee07 4a90 	vmov	s15, r4
 80146e8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80146ec:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80146f0:	ee25 4a04 	vmul.f32	s8, s10, s8
 80146f4:	ee65 4a24 	vmul.f32	s9, s10, s9
 80146f8:	ee25 5a27 	vmul.f32	s10, s10, s15
 80146fc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014700:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014704:	eb09 0e0c 	add.w	lr, r9, ip
 8014708:	4571      	cmp	r1, lr
 801470a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801470e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014712:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014716:	ee61 1a87 	vmul.f32	s3, s3, s14
 801471a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801471e:	f340 808d 	ble.w	801483c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014722:	eba1 060e 	sub.w	r6, r1, lr
 8014726:	fb96 f5f4 	sdiv	r5, r6, r4
 801472a:	ee07 5a10 	vmov	s14, r5
 801472e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014732:	2d00      	cmp	r5, #0
 8014734:	fb04 6615 	mls	r6, r4, r5, r6
 8014738:	eea7 0a04 	vfma.f32	s0, s14, s8
 801473c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014740:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014744:	dd13      	ble.n	801476e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014746:	ee70 6a44 	vsub.f32	s13, s0, s8
 801474a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801474e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014756:	bf18      	it	ne
 8014758:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801475c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014760:	bf08      	it	eq
 8014762:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014766:	ee61 1a87 	vmul.f32	s3, s3, s14
 801476a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801476e:	fb05 f204 	mul.w	r2, r5, r4
 8014772:	1abf      	subs	r7, r7, r2
 8014774:	4494      	add	ip, r2
 8014776:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801477a:	4411      	add	r1, r2
 801477c:	eb09 020c 	add.w	r2, r9, ip
 8014780:	443a      	add	r2, r7
 8014782:	b209      	sxth	r1, r1
 8014784:	428a      	cmp	r2, r1
 8014786:	bfc4      	itt	gt
 8014788:	eba1 0209 	subgt.w	r2, r1, r9
 801478c:	eba2 070c 	subgt.w	r7, r2, ip
 8014790:	2f00      	cmp	r7, #0
 8014792:	dd50      	ble.n	8014836 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014794:	fb97 f1f4 	sdiv	r1, r7, r4
 8014798:	fb04 7211 	mls	r2, r4, r1, r7
 801479c:	b90a      	cbnz	r2, 80147a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801479e:	3901      	subs	r1, #1
 80147a0:	4622      	mov	r2, r4
 80147a2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80147a6:	6840      	ldr	r0, [r0, #4]
 80147a8:	900b      	str	r0, [sp, #44]	; 0x2c
 80147aa:	f8d0 a000 	ldr.w	sl, [r0]
 80147ae:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80147b0:	9008      	str	r0, [sp, #32]
 80147b2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80147b6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80147b8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80147bc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80147c0:	695b      	ldr	r3, [r3, #20]
 80147c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80147c4:	445b      	add	r3, fp
 80147c6:	eef0 6a42 	vmov.f32	s13, s4
 80147ca:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80147ce:	ee21 3a23 	vmul.f32	s6, s2, s7
 80147d2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80147d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147da:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80147de:	9307      	str	r3, [sp, #28]
 80147e0:	ee17 7a90 	vmov	r7, s15
 80147e4:	ee73 7a42 	vsub.f32	s15, s6, s4
 80147e8:	eeb0 7a61 	vmov.f32	s14, s3
 80147ec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80147f0:	ee16 3a90 	vmov	r3, s13
 80147f4:	fb97 f7f4 	sdiv	r7, r7, r4
 80147f8:	ee17 ca90 	vmov	ip, s15
 80147fc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014800:	fb9c fcf4 	sdiv	ip, ip, r4
 8014804:	fb0c 3306 	mla	r3, ip, r6, r3
 8014808:	9302      	str	r3, [sp, #8]
 801480a:	ee17 3a10 	vmov	r3, s14
 801480e:	44b6      	add	lr, r6
 8014810:	fb04 e505 	mla	r5, r4, r5, lr
 8014814:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014818:	fb07 3706 	mla	r7, r7, r6, r3
 801481c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014820:	e9cd 4700 	strd	r4, r7, [sp]
 8014824:	2900      	cmp	r1, #0
 8014826:	bfcc      	ite	gt
 8014828:	46a1      	movgt	r9, r4
 801482a:	4691      	movle	r9, r2
 801482c:	eba9 0306 	sub.w	r3, r9, r6
 8014830:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014834:	47a0      	blx	r4
 8014836:	b00d      	add	sp, #52	; 0x34
 8014838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801483c:	2500      	movs	r5, #0
 801483e:	462e      	mov	r6, r5
 8014840:	e799      	b.n	8014776 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014848:	b0db      	sub	sp, #364	; 0x16c
 801484a:	461d      	mov	r5, r3
 801484c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014850:	930a      	str	r3, [sp, #40]	; 0x28
 8014852:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014856:	930b      	str	r3, [sp, #44]	; 0x2c
 8014858:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801485c:	9310      	str	r3, [sp, #64]	; 0x40
 801485e:	6803      	ldr	r3, [r0, #0]
 8014860:	910f      	str	r1, [sp, #60]	; 0x3c
 8014862:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014864:	9009      	str	r0, [sp, #36]	; 0x24
 8014866:	4614      	mov	r4, r2
 8014868:	4629      	mov	r1, r5
 801486a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801486e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014872:	47b8      	blx	r7
 8014874:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014876:	6058      	str	r0, [r3, #4]
 8014878:	2800      	cmp	r0, #0
 801487a:	f000 83a1 	beq.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801487e:	682b      	ldr	r3, [r5, #0]
 8014880:	9314      	str	r3, [sp, #80]	; 0x50
 8014882:	686b      	ldr	r3, [r5, #4]
 8014884:	9315      	str	r3, [sp, #84]	; 0x54
 8014886:	4bc4      	ldr	r3, [pc, #784]	; (8014b98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014888:	ed94 7a02 	vldr	s14, [r4, #8]
 801488c:	7819      	ldrb	r1, [r3, #0]
 801488e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014892:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014896:	2900      	cmp	r1, #0
 8014898:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801489c:	bf16      	itet	ne
 801489e:	4619      	movne	r1, r3
 80148a0:	4611      	moveq	r1, r2
 80148a2:	4613      	movne	r3, r2
 80148a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148a8:	9116      	str	r1, [sp, #88]	; 0x58
 80148aa:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80148ae:	f240 8387 	bls.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148b2:	ed94 7a07 	vldr	s14, [r4, #28]
 80148b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80148ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148be:	f240 837f 	bls.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148c2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80148c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80148ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148ce:	f240 8377 	bls.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148d2:	6822      	ldr	r2, [r4, #0]
 80148d4:	4bb1      	ldr	r3, [pc, #708]	; (8014b9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80148d6:	429a      	cmp	r2, r3
 80148d8:	f2c0 8372 	blt.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148dc:	49b0      	ldr	r1, [pc, #704]	; (8014ba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80148de:	6963      	ldr	r3, [r4, #20]
 80148e0:	428a      	cmp	r2, r1
 80148e2:	f300 836d 	bgt.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148e6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80148ea:	48ae      	ldr	r0, [pc, #696]	; (8014ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80148ec:	33ff      	adds	r3, #255	; 0xff
 80148ee:	4283      	cmp	r3, r0
 80148f0:	f200 8366 	bhi.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80148f4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80148f6:	4dac      	ldr	r5, [pc, #688]	; (8014ba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80148f8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80148fc:	33ff      	adds	r3, #255	; 0xff
 80148fe:	42ab      	cmp	r3, r5
 8014900:	f200 835e 	bhi.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014904:	6862      	ldr	r2, [r4, #4]
 8014906:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801490a:	33ff      	adds	r3, #255	; 0xff
 801490c:	4283      	cmp	r3, r0
 801490e:	f200 8357 	bhi.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014912:	69a1      	ldr	r1, [r4, #24]
 8014914:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014918:	33ff      	adds	r3, #255	; 0xff
 801491a:	4283      	cmp	r3, r0
 801491c:	f200 8350 	bhi.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014920:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014922:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8014926:	30ff      	adds	r0, #255	; 0xff
 8014928:	42a8      	cmp	r0, r5
 801492a:	f200 8349 	bhi.w	8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801492e:	428a      	cmp	r2, r1
 8014930:	f280 8110 	bge.w	8014b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014934:	429a      	cmp	r2, r3
 8014936:	f300 8119 	bgt.w	8014b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801493a:	4299      	cmp	r1, r3
 801493c:	f280 811d 	bge.w	8014b7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014940:	2502      	movs	r5, #2
 8014942:	2701      	movs	r7, #1
 8014944:	46a9      	mov	r9, r5
 8014946:	46b8      	mov	r8, r7
 8014948:	f04f 0a00 	mov.w	sl, #0
 801494c:	4621      	mov	r1, r4
 801494e:	a849      	add	r0, sp, #292	; 0x124
 8014950:	f003 ff2a 	bl	80187a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8014954:	4622      	mov	r2, r4
 8014956:	4653      	mov	r3, sl
 8014958:	a949      	add	r1, sp, #292	; 0x124
 801495a:	f8cd 9000 	str.w	r9, [sp]
 801495e:	a819      	add	r0, sp, #100	; 0x64
 8014960:	f004 f852 	bl	8018a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014964:	4622      	mov	r2, r4
 8014966:	4653      	mov	r3, sl
 8014968:	a949      	add	r1, sp, #292	; 0x124
 801496a:	f8cd 8000 	str.w	r8, [sp]
 801496e:	a829      	add	r0, sp, #164	; 0xa4
 8014970:	f004 f84a 	bl	8018a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014974:	4643      	mov	r3, r8
 8014976:	4622      	mov	r2, r4
 8014978:	a949      	add	r1, sp, #292	; 0x124
 801497a:	f8cd 9000 	str.w	r9, [sp]
 801497e:	a839      	add	r0, sp, #228	; 0xe4
 8014980:	f004 f842 	bl	8018a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014984:	42af      	cmp	r7, r5
 8014986:	bfb5      	itete	lt
 8014988:	2300      	movlt	r3, #0
 801498a:	2301      	movge	r3, #1
 801498c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801498e:	930e      	strge	r3, [sp, #56]	; 0x38
 8014990:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014992:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014996:	af12      	add	r7, sp, #72	; 0x48
 8014998:	bfb9      	ittee	lt
 801499a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801499c:	ac19      	addlt	r4, sp, #100	; 0x64
 801499e:	ad19      	addge	r5, sp, #100	; 0x64
 80149a0:	ac29      	addge	r4, sp, #164	; 0xa4
 80149a2:	e887 0003 	stmia.w	r7, {r0, r1}
 80149a6:	b928      	cbnz	r0, 80149b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80149a8:	4b80      	ldr	r3, [pc, #512]	; (8014bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80149aa:	6818      	ldr	r0, [r3, #0]
 80149ac:	6803      	ldr	r3, [r0, #0]
 80149ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80149b0:	4798      	blx	r3
 80149b2:	6038      	str	r0, [r7, #0]
 80149b4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80149b6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80149ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80149be:	930c      	str	r3, [sp, #48]	; 0x30
 80149c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80149c2:	6963      	ldr	r3, [r4, #20]
 80149c4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80149c6:	440b      	add	r3, r1
 80149c8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80149cc:	4408      	add	r0, r1
 80149ce:	b200      	sxth	r0, r0
 80149d0:	4283      	cmp	r3, r0
 80149d2:	900d      	str	r0, [sp, #52]	; 0x34
 80149d4:	f280 80dd 	bge.w	8014b92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80149d8:	428b      	cmp	r3, r1
 80149da:	da08      	bge.n	80149ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80149dc:	2a00      	cmp	r2, #0
 80149de:	dd06      	ble.n	80149ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80149e0:	1acb      	subs	r3, r1, r3
 80149e2:	429a      	cmp	r2, r3
 80149e4:	f2c0 80e4 	blt.w	8014bb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80149e8:	2b00      	cmp	r3, #0
 80149ea:	f300 80e2 	bgt.w	8014bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80149ee:	6967      	ldr	r7, [r4, #20]
 80149f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80149f2:	443b      	add	r3, r7
 80149f4:	461f      	mov	r7, r3
 80149f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149f8:	1bdf      	subs	r7, r3, r7
 80149fa:	4297      	cmp	r7, r2
 80149fc:	bfa8      	it	ge
 80149fe:	4617      	movge	r7, r2
 8014a00:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014a04:	2f00      	cmp	r7, #0
 8014a06:	f340 8166 	ble.w	8014cd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014a0a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014a0c:	6829      	ldr	r1, [r5, #0]
 8014a0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a12:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014a16:	6820      	ldr	r0, [r4, #0]
 8014a18:	4411      	add	r1, r2
 8014a1a:	4299      	cmp	r1, r3
 8014a1c:	dd1a      	ble.n	8014a54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014a1e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014a22:	440b      	add	r3, r1
 8014a24:	4402      	add	r2, r0
 8014a26:	b21b      	sxth	r3, r3
 8014a28:	429a      	cmp	r2, r3
 8014a2a:	dc13      	bgt.n	8014a54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014a2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a30:	681b      	ldr	r3, [r3, #0]
 8014a32:	9206      	str	r2, [sp, #24]
 8014a34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a36:	9205      	str	r2, [sp, #20]
 8014a38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014a3a:	9500      	str	r5, [sp, #0]
 8014a3c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014a40:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014a42:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014a44:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014a48:	a912      	add	r1, sp, #72	; 0x48
 8014a4a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014a4e:	aa49      	add	r2, sp, #292	; 0x124
 8014a50:	4623      	mov	r3, r4
 8014a52:	47c8      	blx	r9
 8014a54:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014a58:	441a      	add	r2, r3
 8014a5a:	6963      	ldr	r3, [r4, #20]
 8014a5c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014a60:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014a64:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014a68:	68a1      	ldr	r1, [r4, #8]
 8014a6a:	ed94 6a08 	vldr	s12, [r4, #32]
 8014a6e:	6022      	str	r2, [r4, #0]
 8014a70:	3301      	adds	r3, #1
 8014a72:	6163      	str	r3, [r4, #20]
 8014a74:	69a3      	ldr	r3, [r4, #24]
 8014a76:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014a7a:	3b01      	subs	r3, #1
 8014a7c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014a80:	61a3      	str	r3, [r4, #24]
 8014a82:	6923      	ldr	r3, [r4, #16]
 8014a84:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014a88:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014a8c:	edd4 6a07 	vldr	s13, [r4, #28]
 8014a90:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014a94:	440b      	add	r3, r1
 8014a96:	68e1      	ldr	r1, [r4, #12]
 8014a98:	6123      	str	r3, [r4, #16]
 8014a9a:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014a9e:	428b      	cmp	r3, r1
 8014aa0:	edc4 6a07 	vstr	s13, [r4, #28]
 8014aa4:	db15      	blt.n	8014ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8014aa6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014aaa:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014aae:	3201      	adds	r2, #1
 8014ab0:	edc4 6a07 	vstr	s13, [r4, #28]
 8014ab4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014ab8:	6022      	str	r2, [r4, #0]
 8014aba:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014abe:	1a5b      	subs	r3, r3, r1
 8014ac0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014ac4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014ac8:	6123      	str	r3, [r4, #16]
 8014aca:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014ace:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014ad2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014ad6:	441a      	add	r2, r3
 8014ad8:	696b      	ldr	r3, [r5, #20]
 8014ada:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014ade:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014ae2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014ae6:	68a9      	ldr	r1, [r5, #8]
 8014ae8:	ed95 6a08 	vldr	s12, [r5, #32]
 8014aec:	602a      	str	r2, [r5, #0]
 8014aee:	3301      	adds	r3, #1
 8014af0:	616b      	str	r3, [r5, #20]
 8014af2:	69ab      	ldr	r3, [r5, #24]
 8014af4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014af8:	3b01      	subs	r3, #1
 8014afa:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014afe:	61ab      	str	r3, [r5, #24]
 8014b00:	692b      	ldr	r3, [r5, #16]
 8014b02:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014b0a:	edd5 6a07 	vldr	s13, [r5, #28]
 8014b0e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b12:	440b      	add	r3, r1
 8014b14:	68e9      	ldr	r1, [r5, #12]
 8014b16:	612b      	str	r3, [r5, #16]
 8014b18:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014b1c:	428b      	cmp	r3, r1
 8014b1e:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b22:	db15      	blt.n	8014b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8014b24:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014b28:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014b2c:	3201      	adds	r2, #1
 8014b2e:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b32:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014b36:	602a      	str	r2, [r5, #0]
 8014b38:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014b3c:	1a5b      	subs	r3, r3, r1
 8014b3e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b42:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014b46:	612b      	str	r3, [r5, #16]
 8014b48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b4c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b50:	3f01      	subs	r7, #1
 8014b52:	e757      	b.n	8014a04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8014b54:	4299      	cmp	r1, r3
 8014b56:	dc13      	bgt.n	8014b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014b58:	429a      	cmp	r2, r3
 8014b5a:	da14      	bge.n	8014b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014b5c:	2502      	movs	r5, #2
 8014b5e:	2703      	movs	r7, #3
 8014b60:	46a9      	mov	r9, r5
 8014b62:	f04f 0800 	mov.w	r8, #0
 8014b66:	f04f 0a01 	mov.w	sl, #1
 8014b6a:	e6ef      	b.n	801494c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014b6c:	2501      	movs	r5, #1
 8014b6e:	2700      	movs	r7, #0
 8014b70:	46a9      	mov	r9, r5
 8014b72:	46b8      	mov	r8, r7
 8014b74:	f04f 0a02 	mov.w	sl, #2
 8014b78:	e6e8      	b.n	801494c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014b7a:	2501      	movs	r5, #1
 8014b7c:	2702      	movs	r7, #2
 8014b7e:	e6e1      	b.n	8014944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014b80:	2500      	movs	r5, #0
 8014b82:	2701      	movs	r7, #1
 8014b84:	e7f4      	b.n	8014b70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8014b86:	2702      	movs	r7, #2
 8014b88:	2503      	movs	r5, #3
 8014b8a:	f04f 0900 	mov.w	r9, #0
 8014b8e:	46b8      	mov	r8, r7
 8014b90:	e7e9      	b.n	8014b66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8014b92:	4613      	mov	r3, r2
 8014b94:	e728      	b.n	80149e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8014b96:	bf00      	nop
 8014b98:	2001343c 	.word	0x2001343c
 8014b9c:	fffd8f01 	.word	0xfffd8f01
 8014ba0:	00027100 	.word	0x00027100
 8014ba4:	0004e1ff 	.word	0x0004e1ff
 8014ba8:	0004e1fe 	.word	0x0004e1fe
 8014bac:	20013444 	.word	0x20013444
 8014bb0:	4613      	mov	r3, r2
 8014bb2:	992b      	ldr	r1, [sp, #172]	; 0xac
 8014bb4:	9111      	str	r1, [sp, #68]	; 0x44
 8014bb6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014bba:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014bbe:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014bc0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8014bc4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014bc8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014bcc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014bd0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8014bd4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014bd8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014bdc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014be0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014be4:	469e      	mov	lr, r3
 8014be6:	469c      	mov	ip, r3
 8014be8:	f04f 0900 	mov.w	r9, #0
 8014bec:	f1bc 0f00 	cmp.w	ip, #0
 8014bf0:	d147      	bne.n	8014c82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014bf2:	eb03 0c07 	add.w	ip, r3, r7
 8014bf6:	1ad7      	subs	r7, r2, r3
 8014bf8:	f1b9 0f00 	cmp.w	r9, #0
 8014bfc:	d009      	beq.n	8014c12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014bfe:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8014c02:	9029      	str	r0, [sp, #164]	; 0xa4
 8014c04:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014c08:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014c0c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014c10:	912d      	str	r1, [sp, #180]	; 0xb4
 8014c12:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014c14:	9111      	str	r1, [sp, #68]	; 0x44
 8014c16:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014c1a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014c1e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014c22:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014c26:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014c2a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014c2e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014c32:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014c36:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014c3a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014c3e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014c42:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014c46:	f04f 0800 	mov.w	r8, #0
 8014c4a:	f1be 0f00 	cmp.w	lr, #0
 8014c4e:	d031      	beq.n	8014cb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014c50:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014c52:	4431      	add	r1, r6
 8014c54:	4549      	cmp	r1, r9
 8014c56:	4450      	add	r0, sl
 8014c58:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014c5c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014c60:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014c64:	db08      	blt.n	8014c78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8014c66:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014c6a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014c6e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014c72:	3001      	adds	r0, #1
 8014c74:	eba1 0109 	sub.w	r1, r1, r9
 8014c78:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014c7c:	f04f 0801 	mov.w	r8, #1
 8014c80:	e7e3      	b.n	8014c4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014c82:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014c84:	4431      	add	r1, r6
 8014c86:	4541      	cmp	r1, r8
 8014c88:	4450      	add	r0, sl
 8014c8a:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014c8e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014c92:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014c96:	db08      	blt.n	8014caa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014c98:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014c9c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014ca0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014ca4:	3001      	adds	r0, #1
 8014ca6:	eba1 0108 	sub.w	r1, r1, r8
 8014caa:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014cae:	f04f 0901 	mov.w	r9, #1
 8014cb2:	e79b      	b.n	8014bec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014cb4:	449c      	add	ip, r3
 8014cb6:	1aff      	subs	r7, r7, r3
 8014cb8:	f1b8 0f00 	cmp.w	r8, #0
 8014cbc:	d009      	beq.n	8014cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014cbe:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014cc2:	9019      	str	r0, [sp, #100]	; 0x64
 8014cc4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014cc8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014ccc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014cd0:	911d      	str	r1, [sp, #116]	; 0x74
 8014cd2:	1ad2      	subs	r2, r2, r3
 8014cd4:	e68b      	b.n	80149ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014cd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cd8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014cda:	2b00      	cmp	r3, #0
 8014cdc:	f000 80d1 	beq.w	8014e82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014ce0:	ad19      	add	r5, sp, #100	; 0x64
 8014ce2:	ac39      	add	r4, sp, #228	; 0xe4
 8014ce4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014ce6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014cea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014cee:	930c      	str	r3, [sp, #48]	; 0x30
 8014cf0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014cf2:	6963      	ldr	r3, [r4, #20]
 8014cf4:	440b      	add	r3, r1
 8014cf6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014cfa:	4408      	add	r0, r1
 8014cfc:	b200      	sxth	r0, r0
 8014cfe:	4283      	cmp	r3, r0
 8014d00:	900d      	str	r0, [sp, #52]	; 0x34
 8014d02:	f280 80c1 	bge.w	8014e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014d06:	428b      	cmp	r3, r1
 8014d08:	da08      	bge.n	8014d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014d0a:	2a00      	cmp	r2, #0
 8014d0c:	dd06      	ble.n	8014d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014d0e:	1acb      	subs	r3, r1, r3
 8014d10:	429a      	cmp	r2, r3
 8014d12:	f2c0 80bb 	blt.w	8014e8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014d16:	2b00      	cmp	r3, #0
 8014d18:	f300 80b9 	bgt.w	8014e8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014d1c:	6967      	ldr	r7, [r4, #20]
 8014d1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014d20:	443b      	add	r3, r7
 8014d22:	461f      	mov	r7, r3
 8014d24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d26:	1bdf      	subs	r7, r3, r7
 8014d28:	4297      	cmp	r7, r2
 8014d2a:	bfa8      	it	ge
 8014d2c:	4617      	movge	r7, r2
 8014d2e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014d32:	2f00      	cmp	r7, #0
 8014d34:	f340 813c 	ble.w	8014fb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014d38:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014d3a:	6829      	ldr	r1, [r5, #0]
 8014d3c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014d40:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014d44:	6820      	ldr	r0, [r4, #0]
 8014d46:	4411      	add	r1, r2
 8014d48:	4299      	cmp	r1, r3
 8014d4a:	dd1a      	ble.n	8014d82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014d4c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014d50:	440b      	add	r3, r1
 8014d52:	4402      	add	r2, r0
 8014d54:	b21b      	sxth	r3, r3
 8014d56:	429a      	cmp	r2, r3
 8014d58:	dc13      	bgt.n	8014d82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d5c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014d5e:	681b      	ldr	r3, [r3, #0]
 8014d60:	9206      	str	r2, [sp, #24]
 8014d62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d64:	9205      	str	r2, [sp, #20]
 8014d66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d68:	9500      	str	r5, [sp, #0]
 8014d6a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014d6e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014d70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014d72:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014d76:	a912      	add	r1, sp, #72	; 0x48
 8014d78:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014d7c:	aa49      	add	r2, sp, #292	; 0x124
 8014d7e:	4623      	mov	r3, r4
 8014d80:	47c8      	blx	r9
 8014d82:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014d86:	441a      	add	r2, r3
 8014d88:	6963      	ldr	r3, [r4, #20]
 8014d8a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014d8e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014d92:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014d96:	68a1      	ldr	r1, [r4, #8]
 8014d98:	ed94 6a08 	vldr	s12, [r4, #32]
 8014d9c:	6022      	str	r2, [r4, #0]
 8014d9e:	3301      	adds	r3, #1
 8014da0:	6163      	str	r3, [r4, #20]
 8014da2:	69a3      	ldr	r3, [r4, #24]
 8014da4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014da8:	3b01      	subs	r3, #1
 8014daa:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014dae:	61a3      	str	r3, [r4, #24]
 8014db0:	6923      	ldr	r3, [r4, #16]
 8014db2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014db6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014dba:	edd4 6a07 	vldr	s13, [r4, #28]
 8014dbe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014dc2:	440b      	add	r3, r1
 8014dc4:	68e1      	ldr	r1, [r4, #12]
 8014dc6:	6123      	str	r3, [r4, #16]
 8014dc8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014dcc:	428b      	cmp	r3, r1
 8014dce:	edc4 6a07 	vstr	s13, [r4, #28]
 8014dd2:	db15      	blt.n	8014e00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014dd4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014dd8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014ddc:	3201      	adds	r2, #1
 8014dde:	edc4 6a07 	vstr	s13, [r4, #28]
 8014de2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014de6:	6022      	str	r2, [r4, #0]
 8014de8:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014dec:	1a5b      	subs	r3, r3, r1
 8014dee:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014df2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014df6:	6123      	str	r3, [r4, #16]
 8014df8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014dfc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014e00:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014e04:	441a      	add	r2, r3
 8014e06:	696b      	ldr	r3, [r5, #20]
 8014e08:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014e0c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014e10:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014e14:	68a9      	ldr	r1, [r5, #8]
 8014e16:	ed95 6a08 	vldr	s12, [r5, #32]
 8014e1a:	602a      	str	r2, [r5, #0]
 8014e1c:	3301      	adds	r3, #1
 8014e1e:	616b      	str	r3, [r5, #20]
 8014e20:	69ab      	ldr	r3, [r5, #24]
 8014e22:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014e26:	3b01      	subs	r3, #1
 8014e28:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014e2c:	61ab      	str	r3, [r5, #24]
 8014e2e:	692b      	ldr	r3, [r5, #16]
 8014e30:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014e34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014e38:	edd5 6a07 	vldr	s13, [r5, #28]
 8014e3c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014e40:	440b      	add	r3, r1
 8014e42:	68e9      	ldr	r1, [r5, #12]
 8014e44:	612b      	str	r3, [r5, #16]
 8014e46:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014e4a:	428b      	cmp	r3, r1
 8014e4c:	edc5 6a07 	vstr	s13, [r5, #28]
 8014e50:	db15      	blt.n	8014e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014e52:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014e56:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014e5a:	3201      	adds	r2, #1
 8014e5c:	edc5 6a07 	vstr	s13, [r5, #28]
 8014e60:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014e64:	602a      	str	r2, [r5, #0]
 8014e66:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014e6a:	1a5b      	subs	r3, r3, r1
 8014e6c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014e70:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014e74:	612b      	str	r3, [r5, #16]
 8014e76:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014e7a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014e7e:	3f01      	subs	r7, #1
 8014e80:	e757      	b.n	8014d32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014e82:	ad39      	add	r5, sp, #228	; 0xe4
 8014e84:	ac19      	add	r4, sp, #100	; 0x64
 8014e86:	e72d      	b.n	8014ce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014e88:	4613      	mov	r3, r2
 8014e8a:	e744      	b.n	8014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014e8c:	4613      	mov	r3, r2
 8014e8e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014e92:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014e94:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014e98:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014e9c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014ea0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014ea4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014ea8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014eac:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014eb0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014eb2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014eb6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014eba:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014ebe:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014ec2:	960e      	str	r6, [sp, #56]	; 0x38
 8014ec4:	469e      	mov	lr, r3
 8014ec6:	461f      	mov	r7, r3
 8014ec8:	f04f 0900 	mov.w	r9, #0
 8014ecc:	2f00      	cmp	r7, #0
 8014ece:	d146      	bne.n	8014f5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014ed0:	449c      	add	ip, r3
 8014ed2:	1ad7      	subs	r7, r2, r3
 8014ed4:	f1b9 0f00 	cmp.w	r9, #0
 8014ed8:	d009      	beq.n	8014eee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014eda:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014ede:	9039      	str	r0, [sp, #228]	; 0xe4
 8014ee0:	913d      	str	r1, [sp, #244]	; 0xf4
 8014ee2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014ee6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014eea:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014eee:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014ef0:	910e      	str	r1, [sp, #56]	; 0x38
 8014ef2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014ef6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014efa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014efe:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014f02:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014f06:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014f0a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014f0e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014f12:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014f16:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014f1a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014f1e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014f22:	f04f 0800 	mov.w	r8, #0
 8014f26:	f1be 0f00 	cmp.w	lr, #0
 8014f2a:	d030      	beq.n	8014f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014f2c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014f2e:	4431      	add	r1, r6
 8014f30:	4549      	cmp	r1, r9
 8014f32:	4450      	add	r0, sl
 8014f34:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014f38:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014f3c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014f40:	db08      	blt.n	8014f54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014f42:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014f46:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014f4a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014f4e:	3001      	adds	r0, #1
 8014f50:	eba1 0109 	sub.w	r1, r1, r9
 8014f54:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014f58:	f04f 0801 	mov.w	r8, #1
 8014f5c:	e7e3      	b.n	8014f26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014f5e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014f60:	4431      	add	r1, r6
 8014f62:	4541      	cmp	r1, r8
 8014f64:	4450      	add	r0, sl
 8014f66:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014f6a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014f6e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014f72:	db08      	blt.n	8014f86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014f74:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014f78:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014f7c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014f80:	3001      	adds	r0, #1
 8014f82:	eba1 0108 	sub.w	r1, r1, r8
 8014f86:	3f01      	subs	r7, #1
 8014f88:	f04f 0901 	mov.w	r9, #1
 8014f8c:	e79e      	b.n	8014ecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014f8e:	449c      	add	ip, r3
 8014f90:	1aff      	subs	r7, r7, r3
 8014f92:	f1b8 0f00 	cmp.w	r8, #0
 8014f96:	d009      	beq.n	8014fac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014f98:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014f9c:	9019      	str	r0, [sp, #100]	; 0x64
 8014f9e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014fa2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014fa6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014faa:	911d      	str	r1, [sp, #116]	; 0x74
 8014fac:	1ad2      	subs	r2, r2, r3
 8014fae:	e6b5      	b.n	8014d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014fb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014fb2:	681b      	ldr	r3, [r3, #0]
 8014fb4:	b923      	cbnz	r3, 8014fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014fb6:	4b04      	ldr	r3, [pc, #16]	; (8014fc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014fb8:	6818      	ldr	r0, [r3, #0]
 8014fba:	6803      	ldr	r3, [r0, #0]
 8014fbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014fbe:	4798      	blx	r3
 8014fc0:	b05b      	add	sp, #364	; 0x16c
 8014fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fc6:	bf00      	nop
 8014fc8:	20013444 	.word	0x20013444

08014fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014fcc:	b570      	push	{r4, r5, r6, lr}
 8014fce:	4604      	mov	r4, r0
 8014fd0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014fd4:	9805      	ldr	r0, [sp, #20]
 8014fd6:	6061      	str	r1, [r4, #4]
 8014fd8:	2500      	movs	r5, #0
 8014fda:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014fde:	8263      	strh	r3, [r4, #18]
 8014fe0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014fe4:	8025      	strh	r5, [r4, #0]
 8014fe6:	7221      	strb	r1, [r4, #8]
 8014fe8:	7266      	strb	r6, [r4, #9]
 8014fea:	60e0      	str	r0, [r4, #12]
 8014fec:	8222      	strh	r2, [r4, #16]
 8014fee:	82a3      	strh	r3, [r4, #20]
 8014ff0:	82e5      	strh	r5, [r4, #22]
 8014ff2:	8325      	strh	r5, [r4, #24]
 8014ff4:	8365      	strh	r5, [r4, #26]
 8014ff6:	83a5      	strh	r5, [r4, #28]
 8014ff8:	83e5      	strh	r5, [r4, #30]
 8014ffa:	8425      	strh	r5, [r4, #32]
 8014ffc:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015000:	b32e      	cbz	r6, 801504e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015002:	6803      	ldr	r3, [r0, #0]
 8015004:	695b      	ldr	r3, [r3, #20]
 8015006:	4798      	blx	r3
 8015008:	4606      	mov	r6, r0
 801500a:	b300      	cbz	r0, 801504e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801500c:	68e0      	ldr	r0, [r4, #12]
 801500e:	6803      	ldr	r3, [r0, #0]
 8015010:	4631      	mov	r1, r6
 8015012:	68db      	ldr	r3, [r3, #12]
 8015014:	4798      	blx	r3
 8015016:	4605      	mov	r5, r0
 8015018:	b1c8      	cbz	r0, 801504e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801501a:	7b43      	ldrb	r3, [r0, #13]
 801501c:	7a82      	ldrb	r2, [r0, #10]
 801501e:	005b      	lsls	r3, r3, #1
 8015020:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015024:	4313      	orrs	r3, r2
 8015026:	8423      	strh	r3, [r4, #32]
 8015028:	7a63      	ldrb	r3, [r4, #9]
 801502a:	2b06      	cmp	r3, #6
 801502c:	d10f      	bne.n	801504e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801502e:	68e0      	ldr	r0, [r4, #12]
 8015030:	6803      	ldr	r3, [r0, #0]
 8015032:	462a      	mov	r2, r5
 8015034:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015036:	4631      	mov	r1, r6
 8015038:	4798      	blx	r3
 801503a:	7b6b      	ldrb	r3, [r5, #13]
 801503c:	005b      	lsls	r3, r3, #1
 801503e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015042:	7aab      	ldrb	r3, [r5, #10]
 8015044:	4313      	orrs	r3, r2
 8015046:	4418      	add	r0, r3
 8015048:	8c23      	ldrh	r3, [r4, #32]
 801504a:	4418      	add	r0, r3
 801504c:	8420      	strh	r0, [r4, #32]
 801504e:	4620      	mov	r0, r4
 8015050:	bd70      	pop	{r4, r5, r6, pc}

08015052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015052:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015056:	2400      	movs	r4, #0
 8015058:	b085      	sub	sp, #20
 801505a:	4681      	mov	r9, r0
 801505c:	4688      	mov	r8, r1
 801505e:	4692      	mov	sl, r2
 8015060:	469b      	mov	fp, r3
 8015062:	4627      	mov	r7, r4
 8015064:	4625      	mov	r5, r4
 8015066:	4626      	mov	r6, r4
 8015068:	4554      	cmp	r4, sl
 801506a:	da2a      	bge.n	80150c2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801506c:	2300      	movs	r3, #0
 801506e:	9303      	str	r3, [sp, #12]
 8015070:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015074:	429d      	cmp	r5, r3
 8015076:	d004      	beq.n	8015082 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015078:	f242 030b 	movw	r3, #8203	; 0x200b
 801507c:	429d      	cmp	r5, r3
 801507e:	bf18      	it	ne
 8015080:	462f      	movne	r7, r5
 8015082:	ab03      	add	r3, sp, #12
 8015084:	4642      	mov	r2, r8
 8015086:	4659      	mov	r1, fp
 8015088:	4648      	mov	r0, r9
 801508a:	f003 f9a3 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801508e:	4605      	mov	r5, r0
 8015090:	b1b8      	cbz	r0, 80150c2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015092:	280a      	cmp	r0, #10
 8015094:	d015      	beq.n	80150c2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015096:	9a03      	ldr	r2, [sp, #12]
 8015098:	b18a      	cbz	r2, 80150be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801509a:	7b50      	ldrb	r0, [r2, #13]
 801509c:	7a93      	ldrb	r3, [r2, #10]
 801509e:	8895      	ldrh	r5, [r2, #4]
 80150a0:	0040      	lsls	r0, r0, #1
 80150a2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80150a6:	4303      	orrs	r3, r0
 80150a8:	9301      	str	r3, [sp, #4]
 80150aa:	f8d8 3000 	ldr.w	r3, [r8]
 80150ae:	4639      	mov	r1, r7
 80150b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80150b2:	4640      	mov	r0, r8
 80150b4:	4798      	blx	r3
 80150b6:	9b01      	ldr	r3, [sp, #4]
 80150b8:	4418      	add	r0, r3
 80150ba:	4406      	add	r6, r0
 80150bc:	b2b6      	uxth	r6, r6
 80150be:	3401      	adds	r4, #1
 80150c0:	e7d2      	b.n	8015068 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80150c2:	4630      	mov	r0, r6
 80150c4:	b005      	add	sp, #20
 80150c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80150ca:	2a02      	cmp	r2, #2
 80150cc:	b530      	push	{r4, r5, lr}
 80150ce:	d011      	beq.n	80150f4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80150d0:	2a03      	cmp	r2, #3
 80150d2:	d01c      	beq.n	801510e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80150d4:	2a01      	cmp	r2, #1
 80150d6:	d10c      	bne.n	80150f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80150d8:	888b      	ldrh	r3, [r1, #4]
 80150da:	8801      	ldrh	r1, [r0, #0]
 80150dc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80150e0:	8844      	ldrh	r4, [r0, #2]
 80150e2:	8004      	strh	r4, [r0, #0]
 80150e4:	1a5b      	subs	r3, r3, r1
 80150e6:	1a9b      	subs	r3, r3, r2
 80150e8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80150ec:	8043      	strh	r3, [r0, #2]
 80150ee:	8081      	strh	r1, [r0, #4]
 80150f0:	80c2      	strh	r2, [r0, #6]
 80150f2:	bd30      	pop	{r4, r5, pc}
 80150f4:	88cb      	ldrh	r3, [r1, #6]
 80150f6:	8842      	ldrh	r2, [r0, #2]
 80150f8:	1a9b      	subs	r3, r3, r2
 80150fa:	88c2      	ldrh	r2, [r0, #6]
 80150fc:	1a9b      	subs	r3, r3, r2
 80150fe:	888a      	ldrh	r2, [r1, #4]
 8015100:	8801      	ldrh	r1, [r0, #0]
 8015102:	8043      	strh	r3, [r0, #2]
 8015104:	1a52      	subs	r2, r2, r1
 8015106:	8881      	ldrh	r1, [r0, #4]
 8015108:	1a52      	subs	r2, r2, r1
 801510a:	8002      	strh	r2, [r0, #0]
 801510c:	e7f1      	b.n	80150f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801510e:	88cb      	ldrh	r3, [r1, #6]
 8015110:	8841      	ldrh	r1, [r0, #2]
 8015112:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015116:	f9b0 5000 	ldrsh.w	r5, [r0]
 801511a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801511e:	8045      	strh	r5, [r0, #2]
 8015120:	1a5b      	subs	r3, r3, r1
 8015122:	1a9b      	subs	r3, r3, r2
 8015124:	8003      	strh	r3, [r0, #0]
 8015126:	8082      	strh	r2, [r0, #4]
 8015128:	80c4      	strh	r4, [r0, #6]
 801512a:	e7e2      	b.n	80150f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801512c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801512c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015130:	b09f      	sub	sp, #124	; 0x7c
 8015132:	9116      	str	r1, [sp, #88]	; 0x58
 8015134:	9317      	str	r3, [sp, #92]	; 0x5c
 8015136:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015138:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801513a:	8809      	ldrh	r1, [r1, #0]
 801513c:	889b      	ldrh	r3, [r3, #4]
 801513e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015142:	9212      	str	r2, [sp, #72]	; 0x48
 8015144:	440b      	add	r3, r1
 8015146:	b21b      	sxth	r3, r3
 8015148:	9310      	str	r3, [sp, #64]	; 0x40
 801514a:	f8d8 3000 	ldr.w	r3, [r8]
 801514e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015152:	7b19      	ldrb	r1, [r3, #12]
 8015154:	7adb      	ldrb	r3, [r3, #11]
 8015156:	9011      	str	r0, [sp, #68]	; 0x44
 8015158:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801515c:	9114      	str	r1, [sp, #80]	; 0x50
 801515e:	9315      	str	r3, [sp, #84]	; 0x54
 8015160:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015164:	2a00      	cmp	r2, #0
 8015166:	d06a      	beq.n	801523e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015168:	f898 3010 	ldrb.w	r3, [r8, #16]
 801516c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801516e:	2b06      	cmp	r3, #6
 8015170:	bf14      	ite	ne
 8015172:	2301      	movne	r3, #1
 8015174:	2302      	moveq	r3, #2
 8015176:	4413      	add	r3, r2
 8015178:	f04f 0900 	mov.w	r9, #0
 801517c:	930f      	str	r3, [sp, #60]	; 0x3c
 801517e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015182:	464c      	mov	r4, r9
 8015184:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015188:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801518c:	4293      	cmp	r3, r2
 801518e:	f280 808f 	bge.w	80152b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015192:	2300      	movs	r3, #0
 8015194:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015198:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801519c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80151a0:	429c      	cmp	r4, r3
 80151a2:	d006      	beq.n	80151b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80151a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80151a6:	f242 020b 	movw	r2, #8203	; 0x200b
 80151aa:	4294      	cmp	r4, r2
 80151ac:	bf18      	it	ne
 80151ae:	4623      	movne	r3, r4
 80151b0:	930d      	str	r3, [sp, #52]	; 0x34
 80151b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151b4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80151b6:	f8d8 2000 	ldr.w	r2, [r8]
 80151ba:	428b      	cmp	r3, r1
 80151bc:	db41      	blt.n	8015242 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80151be:	6813      	ldr	r3, [r2, #0]
 80151c0:	4610      	mov	r0, r2
 80151c2:	695b      	ldr	r3, [r3, #20]
 80151c4:	4798      	blx	r3
 80151c6:	4604      	mov	r4, r0
 80151c8:	f8d8 0000 	ldr.w	r0, [r8]
 80151cc:	6803      	ldr	r3, [r0, #0]
 80151ce:	aa1d      	add	r2, sp, #116	; 0x74
 80151d0:	689d      	ldr	r5, [r3, #8]
 80151d2:	4621      	mov	r1, r4
 80151d4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80151d8:	47a8      	blx	r5
 80151da:	901c      	str	r0, [sp, #112]	; 0x70
 80151dc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80151e0:	429c      	cmp	r4, r3
 80151e2:	f000 80eb 	beq.w	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80151e6:	f242 030b 	movw	r3, #8203	; 0x200b
 80151ea:	429c      	cmp	r4, r3
 80151ec:	f000 80e6 	beq.w	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80151f0:	2c00      	cmp	r4, #0
 80151f2:	f000 80f8 	beq.w	80153e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80151f6:	2c0a      	cmp	r4, #10
 80151f8:	d060      	beq.n	80152bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80151fa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80151fc:	b36a      	cbz	r2, 801525a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80151fe:	8894      	ldrh	r4, [r2, #4]
 8015200:	f1bb 0f00 	cmp.w	fp, #0
 8015204:	d03b      	beq.n	801527e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015206:	f892 900d 	ldrb.w	r9, [r2, #13]
 801520a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801520e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015212:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015216:	f1bb 0f01 	cmp.w	fp, #1
 801521a:	ea49 0903 	orr.w	r9, r9, r3
 801521e:	d134      	bne.n	801528a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015222:	eba6 0609 	sub.w	r6, r6, r9
 8015226:	2b00      	cmp	r3, #0
 8015228:	d14f      	bne.n	80152ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801522a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801522c:	eb09 0306 	add.w	r3, r9, r6
 8015230:	4413      	add	r3, r2
 8015232:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015234:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015238:	4293      	cmp	r3, r2
 801523a:	da51      	bge.n	80152e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801523c:	e038      	b.n	80152b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801523e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015240:	e79a      	b.n	8015178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015242:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015246:	9301      	str	r3, [sp, #4]
 8015248:	ab1d      	add	r3, sp, #116	; 0x74
 801524a:	9300      	str	r3, [sp, #0]
 801524c:	4659      	mov	r1, fp
 801524e:	ab1c      	add	r3, sp, #112	; 0x70
 8015250:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015252:	f003 f908 	bl	8018466 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015256:	4604      	mov	r4, r0
 8015258:	e7c0      	b.n	80151dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801525a:	f8d8 0000 	ldr.w	r0, [r8]
 801525e:	6803      	ldr	r3, [r0, #0]
 8015260:	691b      	ldr	r3, [r3, #16]
 8015262:	4798      	blx	r3
 8015264:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015268:	4298      	cmp	r0, r3
 801526a:	f000 80a7 	beq.w	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801526e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015272:	4298      	cmp	r0, r3
 8015274:	f000 80a2 	beq.w	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015278:	f1bb 0f00 	cmp.w	fp, #0
 801527c:	d100      	bne.n	8015280 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801527e:	444e      	add	r6, r9
 8015280:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015282:	2a00      	cmp	r2, #0
 8015284:	d1bf      	bne.n	8015206 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015286:	4691      	mov	r9, r2
 8015288:	e098      	b.n	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801528a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801528c:	2b00      	cmp	r3, #0
 801528e:	f000 80ac 	beq.w	80153ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015292:	f1bb 0f00 	cmp.w	fp, #0
 8015296:	d118      	bne.n	80152ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015298:	f8d8 0000 	ldr.w	r0, [r8]
 801529c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801529e:	6803      	ldr	r3, [r0, #0]
 80152a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80152a2:	4798      	blx	r3
 80152a4:	4406      	add	r6, r0
 80152a6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80152a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80152aa:	1af3      	subs	r3, r6, r3
 80152ac:	4293      	cmp	r3, r2
 80152ae:	dd17      	ble.n	80152e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80152b0:	2c00      	cmp	r4, #0
 80152b2:	f000 8098 	beq.w	80153e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80152b6:	2c0a      	cmp	r4, #10
 80152b8:	f040 8086 	bne.w	80153c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80152bc:	240a      	movs	r4, #10
 80152be:	fab4 f084 	clz	r0, r4
 80152c2:	0940      	lsrs	r0, r0, #5
 80152c4:	b01f      	add	sp, #124	; 0x7c
 80152c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152ca:	f8d8 0000 	ldr.w	r0, [r8]
 80152ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 80152d0:	6803      	ldr	r3, [r0, #0]
 80152d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80152d4:	4798      	blx	r3
 80152d6:	f1bb 0f01 	cmp.w	fp, #1
 80152da:	eba6 0600 	sub.w	r6, r6, r0
 80152de:	d0a4      	beq.n	801522a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80152e0:	981c      	ldr	r0, [sp, #112]	; 0x70
 80152e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80152e4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80152e8:	f9b3 7000 	ldrsh.w	r7, [r3]
 80152ec:	7b43      	ldrb	r3, [r0, #13]
 80152ee:	015b      	lsls	r3, r3, #5
 80152f0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80152f4:	7983      	ldrb	r3, [r0, #6]
 80152f6:	4431      	add	r1, r6
 80152f8:	4313      	orrs	r3, r2
 80152fa:	440b      	add	r3, r1
 80152fc:	42bb      	cmp	r3, r7
 80152fe:	db5d      	blt.n	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015300:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015302:	4299      	cmp	r1, r3
 8015304:	da5a      	bge.n	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015306:	f8d8 0000 	ldr.w	r0, [r8]
 801530a:	6803      	ldr	r3, [r0, #0]
 801530c:	42b7      	cmp	r7, r6
 801530e:	bfc8      	it	gt
 8015310:	1bbf      	subgt	r7, r7, r6
 8015312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015314:	bfcc      	ite	gt
 8015316:	b2bf      	uxthgt	r7, r7
 8015318:	2700      	movle	r7, #0
 801531a:	4798      	blx	r3
 801531c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801531e:	7b5a      	ldrb	r2, [r3, #13]
 8015320:	00d1      	lsls	r1, r2, #3
 8015322:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8015326:	7a19      	ldrb	r1, [r3, #8]
 8015328:	4329      	orrs	r1, r5
 801532a:	0655      	lsls	r5, r2, #25
 801532c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801532e:	bf44      	itt	mi
 8015330:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015334:	b209      	sxthmi	r1, r1
 8015336:	1945      	adds	r5, r0, r5
 8015338:	1a6d      	subs	r5, r5, r1
 801533a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801533c:	b2ad      	uxth	r5, r5
 801533e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015342:	fa0f fa85 	sxth.w	sl, r5
 8015346:	4551      	cmp	r1, sl
 8015348:	dd3c      	ble.n	80153c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801534a:	0112      	lsls	r2, r2, #4
 801534c:	79d8      	ldrb	r0, [r3, #7]
 801534e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015352:	4302      	orrs	r2, r0
 8015354:	4492      	add	sl, r2
 8015356:	4551      	cmp	r1, sl
 8015358:	dc30      	bgt.n	80153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801535a:	1b4d      	subs	r5, r1, r5
 801535c:	b22d      	sxth	r5, r5
 801535e:	468a      	mov	sl, r1
 8015360:	9319      	str	r3, [sp, #100]	; 0x64
 8015362:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015364:	f8d8 0000 	ldr.w	r0, [r8]
 8015368:	681a      	ldr	r2, [r3, #0]
 801536a:	6801      	ldr	r1, [r0, #0]
 801536c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801536e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015370:	9313      	str	r3, [sp, #76]	; 0x4c
 8015372:	9218      	str	r2, [sp, #96]	; 0x60
 8015374:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015376:	4788      	blx	r1
 8015378:	f898 1006 	ldrb.w	r1, [r8, #6]
 801537c:	910b      	str	r1, [sp, #44]	; 0x2c
 801537e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015382:	910a      	str	r1, [sp, #40]	; 0x28
 8015384:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015388:	9109      	str	r1, [sp, #36]	; 0x24
 801538a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801538e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015390:	9305      	str	r3, [sp, #20]
 8015392:	b2ad      	uxth	r5, r5
 8015394:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015398:	e9cd 7502 	strd	r7, r5, [sp, #8]
 801539c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801539e:	9304      	str	r3, [sp, #16]
 80153a0:	4437      	add	r7, r6
 80153a2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80153a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80153a6:	9206      	str	r2, [sp, #24]
 80153a8:	b23f      	sxth	r7, r7
 80153aa:	f8cd a004 	str.w	sl, [sp, #4]
 80153ae:	9700      	str	r7, [sp, #0]
 80153b0:	681a      	ldr	r2, [r3, #0]
 80153b2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80153b4:	685b      	ldr	r3, [r3, #4]
 80153b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80153b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80153ba:	47a8      	blx	r5
 80153bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153be:	3301      	adds	r3, #1
 80153c0:	930e      	str	r3, [sp, #56]	; 0x38
 80153c2:	e6e1      	b.n	8015188 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80153c4:	2500      	movs	r5, #0
 80153c6:	e7cb      	b.n	8015360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80153c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80153ca:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80153cc:	3501      	adds	r5, #1
 80153ce:	429d      	cmp	r5, r3
 80153d0:	f6bf af75 	bge.w	80152be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80153d4:	4659      	mov	r1, fp
 80153d6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80153d8:	f7f3 f8c8 	bl	800856c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80153dc:	4604      	mov	r4, r0
 80153de:	b110      	cbz	r0, 80153e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80153e0:	280a      	cmp	r0, #10
 80153e2:	d1f2      	bne.n	80153ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80153e4:	e76a      	b.n	80152bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80153e6:	2400      	movs	r4, #0
 80153e8:	e769      	b.n	80152be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80153ea:	f1bb 0f00 	cmp.w	fp, #0
 80153ee:	f43f af5a 	beq.w	80152a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80153f2:	e775      	b.n	80152e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080153f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80153f4:	b530      	push	{r4, r5, lr}
 80153f6:	8ac4      	ldrh	r4, [r0, #22]
 80153f8:	8b45      	ldrh	r5, [r0, #26]
 80153fa:	8343      	strh	r3, [r0, #26]
 80153fc:	442c      	add	r4, r5
 80153fe:	1ae4      	subs	r4, r4, r3
 8015400:	82c4      	strh	r4, [r0, #22]
 8015402:	8b83      	ldrh	r3, [r0, #28]
 8015404:	8b04      	ldrh	r4, [r0, #24]
 8015406:	4422      	add	r2, r4
 8015408:	440c      	add	r4, r1
 801540a:	1a59      	subs	r1, r3, r1
 801540c:	83c2      	strh	r2, [r0, #30]
 801540e:	8304      	strh	r4, [r0, #24]
 8015410:	8381      	strh	r1, [r0, #28]
 8015412:	bd30      	pop	{r4, r5, pc}

08015414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015418:	4604      	mov	r4, r0
 801541a:	8a47      	ldrh	r7, [r0, #18]
 801541c:	68c0      	ldr	r0, [r0, #12]
 801541e:	6803      	ldr	r3, [r0, #0]
 8015420:	b085      	sub	sp, #20
 8015422:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015424:	4798      	blx	r3
 8015426:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801542a:	7a63      	ldrb	r3, [r4, #9]
 801542c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015430:	42b7      	cmp	r7, r6
 8015432:	f103 33ff 	add.w	r3, r3, #4294967295
 8015436:	bfac      	ite	ge
 8015438:	f04f 0900 	movge.w	r9, #0
 801543c:	f04f 0901 	movlt.w	r9, #1
 8015440:	2b05      	cmp	r3, #5
 8015442:	d804      	bhi.n	801544e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015444:	e8df f003 	tbb	[pc, r3]
 8015448:	470e0854 	.word	0x470e0854
 801544c:	4c4c      	.short	0x4c4c
 801544e:	2500      	movs	r5, #0
 8015450:	46a9      	mov	r9, r5
 8015452:	462e      	mov	r6, r5
 8015454:	462f      	mov	r7, r5
 8015456:	e00d      	b.n	8015474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015458:	42b7      	cmp	r7, r6
 801545a:	bfb4      	ite	lt
 801545c:	2600      	movlt	r6, #0
 801545e:	2601      	movge	r6, #1
 8015460:	2500      	movs	r5, #0
 8015462:	e7f7      	b.n	8015454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015464:	42b7      	cmp	r7, r6
 8015466:	464d      	mov	r5, r9
 8015468:	f04f 0900 	mov.w	r9, #0
 801546c:	bfb4      	ite	lt
 801546e:	2600      	movlt	r6, #0
 8015470:	2601      	movge	r6, #1
 8015472:	464f      	mov	r7, r9
 8015474:	f04f 0800 	mov.w	r8, #0
 8015478:	f8a4 8016 	strh.w	r8, [r4, #22]
 801547c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015480:	f8cd 8004 	str.w	r8, [sp, #4]
 8015484:	2300      	movs	r3, #0
 8015486:	9303      	str	r3, [sp, #12]
 8015488:	8823      	ldrh	r3, [r4, #0]
 801548a:	2b20      	cmp	r3, #32
 801548c:	d034      	beq.n	80154f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801548e:	f242 010b 	movw	r1, #8203	; 0x200b
 8015492:	1a5a      	subs	r2, r3, r1
 8015494:	f1d2 0a00 	rsbs	sl, r2, #0
 8015498:	eb4a 0a02 	adc.w	sl, sl, r2
 801549c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80154a0:	4293      	cmp	r3, r2
 80154a2:	d009      	beq.n	80154b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80154a4:	428b      	cmp	r3, r1
 80154a6:	9a01      	ldr	r2, [sp, #4]
 80154a8:	bf18      	it	ne
 80154aa:	461a      	movne	r2, r3
 80154ac:	9201      	str	r2, [sp, #4]
 80154ae:	bf0c      	ite	eq
 80154b0:	f04f 0a01 	moveq.w	sl, #1
 80154b4:	f04f 0a00 	movne.w	sl, #0
 80154b8:	ab03      	add	r3, sp, #12
 80154ba:	68e2      	ldr	r2, [r4, #12]
 80154bc:	7a21      	ldrb	r1, [r4, #8]
 80154be:	6860      	ldr	r0, [r4, #4]
 80154c0:	f002 ff88 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80154c4:	8020      	strh	r0, [r4, #0]
 80154c6:	b9d8      	cbnz	r0, 8015500 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80154c8:	8ba2      	ldrh	r2, [r4, #28]
 80154ca:	2300      	movs	r3, #0
 80154cc:	4611      	mov	r1, r2
 80154ce:	4620      	mov	r0, r4
 80154d0:	f7ff ff90 	bl	80153f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80154d4:	e06e      	b.n	80155b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80154d6:	2500      	movs	r5, #0
 80154d8:	46a9      	mov	r9, r5
 80154da:	462e      	mov	r6, r5
 80154dc:	2701      	movs	r7, #1
 80154de:	e7c9      	b.n	8015474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80154e0:	42b7      	cmp	r7, r6
 80154e2:	f04f 0500 	mov.w	r5, #0
 80154e6:	bfb4      	ite	lt
 80154e8:	2700      	movlt	r7, #0
 80154ea:	2701      	movge	r7, #1
 80154ec:	462e      	mov	r6, r5
 80154ee:	e7c1      	b.n	8015474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80154f0:	2500      	movs	r5, #0
 80154f2:	46a9      	mov	r9, r5
 80154f4:	2601      	movs	r6, #1
 80154f6:	e7ad      	b.n	8015454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80154f8:	9301      	str	r3, [sp, #4]
 80154fa:	f04f 0a01 	mov.w	sl, #1
 80154fe:	e7db      	b.n	80154b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015500:	8b63      	ldrh	r3, [r4, #26]
 8015502:	280a      	cmp	r0, #10
 8015504:	f103 0301 	add.w	r3, r3, #1
 8015508:	8363      	strh	r3, [r4, #26]
 801550a:	d0dd      	beq.n	80154c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801550c:	9a03      	ldr	r2, [sp, #12]
 801550e:	bb62      	cbnz	r2, 801556a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015510:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015514:	4298      	cmp	r0, r3
 8015516:	d003      	beq.n	8015520 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015518:	f242 030b 	movw	r3, #8203	; 0x200b
 801551c:	4298      	cmp	r0, r3
 801551e:	d1b1      	bne.n	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015520:	8823      	ldrh	r3, [r4, #0]
 8015522:	8ba1      	ldrh	r1, [r4, #28]
 8015524:	2b20      	cmp	r3, #32
 8015526:	d003      	beq.n	8015530 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015528:	f242 000b 	movw	r0, #8203	; 0x200b
 801552c:	4283      	cmp	r3, r0
 801552e:	d131      	bne.n	8015594 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015530:	f1ba 0f00 	cmp.w	sl, #0
 8015534:	bf0a      	itet	eq
 8015536:	4688      	moveq	r8, r1
 8015538:	4650      	movne	r0, sl
 801553a:	2001      	moveq	r0, #1
 801553c:	440a      	add	r2, r1
 801553e:	8b23      	ldrh	r3, [r4, #24]
 8015540:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015544:	b292      	uxth	r2, r2
 8015546:	83a2      	strh	r2, [r4, #28]
 8015548:	4413      	add	r3, r2
 801554a:	f1b9 0f00 	cmp.w	r9, #0
 801554e:	d102      	bne.n	8015556 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015550:	2d00      	cmp	r5, #0
 8015552:	d042      	beq.n	80155da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015554:	b300      	cbz	r0, 8015598 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015556:	8c21      	ldrh	r1, [r4, #32]
 8015558:	4419      	add	r1, r3
 801555a:	458c      	cmp	ip, r1
 801555c:	da37      	bge.n	80155ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801555e:	8ae1      	ldrh	r1, [r4, #22]
 8015560:	2900      	cmp	r1, #0
 8015562:	d034      	beq.n	80155ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015564:	4563      	cmp	r3, ip
 8015566:	dd8d      	ble.n	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015568:	e01d      	b.n	80155a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801556a:	8893      	ldrh	r3, [r2, #4]
 801556c:	8023      	strh	r3, [r4, #0]
 801556e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015572:	9901      	ldr	r1, [sp, #4]
 8015574:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015578:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 801557c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015580:	ea4b 0b00 	orr.w	fp, fp, r0
 8015584:	68e0      	ldr	r0, [r4, #12]
 8015586:	6803      	ldr	r3, [r0, #0]
 8015588:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801558a:	4798      	blx	r3
 801558c:	eb0b 0200 	add.w	r2, fp, r0
 8015590:	b292      	uxth	r2, r2
 8015592:	e7c5      	b.n	8015520 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015594:	2000      	movs	r0, #0
 8015596:	e7d1      	b.n	801553c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015598:	4563      	cmp	r3, ip
 801559a:	f77f af73 	ble.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801559e:	8ae3      	ldrh	r3, [r4, #22]
 80155a0:	2b00      	cmp	r3, #0
 80155a2:	f43f af6f 	beq.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80155a6:	2301      	movs	r3, #1
 80155a8:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80155ac:	8c22      	ldrh	r2, [r4, #32]
 80155ae:	8be3      	ldrh	r3, [r4, #30]
 80155b0:	4413      	add	r3, r2
 80155b2:	83e3      	strh	r3, [r4, #30]
 80155b4:	68e0      	ldr	r0, [r4, #12]
 80155b6:	6803      	ldr	r3, [r0, #0]
 80155b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80155ba:	4798      	blx	r3
 80155bc:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80155c0:	4418      	add	r0, r3
 80155c2:	8a63      	ldrh	r3, [r4, #18]
 80155c4:	1a18      	subs	r0, r3, r0
 80155c6:	8260      	strh	r0, [r4, #18]
 80155c8:	b005      	add	sp, #20
 80155ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155ce:	2300      	movs	r3, #0
 80155d0:	4611      	mov	r1, r2
 80155d2:	4620      	mov	r0, r4
 80155d4:	f7ff ff0e 	bl	80153f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80155d8:	e754      	b.n	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80155da:	4563      	cmp	r3, ip
 80155dc:	dd14      	ble.n	8015608 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80155de:	b117      	cbz	r7, 80155e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80155e0:	2301      	movs	r3, #1
 80155e2:	460a      	mov	r2, r1
 80155e4:	e772      	b.n	80154cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80155e6:	2e00      	cmp	r6, #0
 80155e8:	f43f af4c 	beq.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80155ec:	2800      	cmp	r0, #0
 80155ee:	f47f af49 	bne.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80155f2:	f1ba 0f00 	cmp.w	sl, #0
 80155f6:	d002      	beq.n	80155fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80155f8:	2301      	movs	r3, #1
 80155fa:	4642      	mov	r2, r8
 80155fc:	e767      	b.n	80154ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80155fe:	8ae3      	ldrh	r3, [r4, #22]
 8015600:	2b00      	cmp	r3, #0
 8015602:	f43f af3f 	beq.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015606:	e7d5      	b.n	80155b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015608:	2800      	cmp	r0, #0
 801560a:	f47f af3b 	bne.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801560e:	f1ba 0f00 	cmp.w	sl, #0
 8015612:	f43f af37 	beq.w	8015484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015616:	2301      	movs	r3, #1
 8015618:	4642      	mov	r2, r8
 801561a:	e7da      	b.n	80155d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801561c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801561c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801561e:	4605      	mov	r5, r0
 8015620:	b08f      	sub	sp, #60	; 0x3c
 8015622:	4617      	mov	r7, r2
 8015624:	461c      	mov	r4, r3
 8015626:	460e      	mov	r6, r1
 8015628:	b1d1      	cbz	r1, 8015660 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801562a:	681b      	ldr	r3, [r3, #0]
 801562c:	4620      	mov	r0, r4
 801562e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015630:	4798      	blx	r3
 8015632:	4240      	negs	r0, r0
 8015634:	b200      	sxth	r0, r0
 8015636:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801563a:	9603      	str	r6, [sp, #12]
 801563c:	9700      	str	r7, [sp, #0]
 801563e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015642:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015646:	4629      	mov	r1, r5
 8015648:	a805      	add	r0, sp, #20
 801564a:	f7ff fcbf 	bl	8014fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801564e:	2401      	movs	r4, #1
 8015650:	a805      	add	r0, sp, #20
 8015652:	f7ff fedf 	bl	8015414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015656:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801565a:	b163      	cbz	r3, 8015676 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801565c:	3401      	adds	r4, #1
 801565e:	e7f7      	b.n	8015650 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015660:	f002 ff86 	bl	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015664:	2401      	movs	r4, #1
 8015666:	280a      	cmp	r0, #10
 8015668:	4628      	mov	r0, r5
 801566a:	bf08      	it	eq
 801566c:	3401      	addeq	r4, #1
 801566e:	f002 ff7f 	bl	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015672:	2800      	cmp	r0, #0
 8015674:	d1f7      	bne.n	8015666 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015676:	b2a0      	uxth	r0, r4
 8015678:	b00f      	add	sp, #60	; 0x3c
 801567a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801567c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801567c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015680:	b0e3      	sub	sp, #396	; 0x18c
 8015682:	461c      	mov	r4, r3
 8015684:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015686:	4683      	mov	fp, r0
 8015688:	4688      	mov	r8, r1
 801568a:	2b00      	cmp	r3, #0
 801568c:	f000 8112 	beq.w	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015690:	6823      	ldr	r3, [r4, #0]
 8015692:	2b00      	cmp	r3, #0
 8015694:	f000 810e 	beq.w	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015698:	7ba3      	ldrb	r3, [r4, #14]
 801569a:	2b00      	cmp	r3, #0
 801569c:	f000 810a 	beq.w	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80156a0:	6810      	ldr	r0, [r2, #0]
 80156a2:	6851      	ldr	r1, [r2, #4]
 80156a4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80156a8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80156ac:	ad0a      	add	r5, sp, #40	; 0x28
 80156ae:	462b      	mov	r3, r5
 80156b0:	c303      	stmia	r3!, {r0, r1}
 80156b2:	2100      	movs	r1, #0
 80156b4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80156b8:	910c      	str	r1, [sp, #48]	; 0x30
 80156ba:	79a2      	ldrb	r2, [r4, #6]
 80156bc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80156c0:	a90c      	add	r1, sp, #48	; 0x30
 80156c2:	4628      	mov	r0, r5
 80156c4:	f7ff fd01 	bl	80150ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80156c8:	a90c      	add	r1, sp, #48	; 0x30
 80156ca:	4608      	mov	r0, r1
 80156cc:	79a2      	ldrb	r2, [r4, #6]
 80156ce:	f7ff fcfc 	bl	80150ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80156d2:	a817      	add	r0, sp, #92	; 0x5c
 80156d4:	f002 fb20 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 80156d8:	6820      	ldr	r0, [r4, #0]
 80156da:	6803      	ldr	r3, [r0, #0]
 80156dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80156de:	4798      	blx	r3
 80156e0:	4606      	mov	r6, r0
 80156e2:	6820      	ldr	r0, [r4, #0]
 80156e4:	6803      	ldr	r3, [r0, #0]
 80156e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80156e8:	4798      	blx	r3
 80156ea:	4633      	mov	r3, r6
 80156ec:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80156ee:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80156f0:	9000      	str	r0, [sp, #0]
 80156f2:	a817      	add	r0, sp, #92	; 0x5c
 80156f4:	f002 fb6b 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80156f8:	6820      	ldr	r0, [r4, #0]
 80156fa:	f894 a004 	ldrb.w	sl, [r4, #4]
 80156fe:	6803      	ldr	r3, [r0, #0]
 8015700:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015702:	4798      	blx	r3
 8015704:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015708:	6823      	ldr	r3, [r4, #0]
 801570a:	4607      	mov	r7, r0
 801570c:	4406      	add	r6, r0
 801570e:	a830      	add	r0, sp, #192	; 0xc0
 8015710:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015714:	f002 fb00 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 8015718:	7c23      	ldrb	r3, [r4, #16]
 801571a:	b17b      	cbz	r3, 801573c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801571c:	6820      	ldr	r0, [r4, #0]
 801571e:	6803      	ldr	r3, [r0, #0]
 8015720:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015722:	4798      	blx	r3
 8015724:	9009      	str	r0, [sp, #36]	; 0x24
 8015726:	6820      	ldr	r0, [r4, #0]
 8015728:	6802      	ldr	r2, [r0, #0]
 801572a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 801572c:	4790      	blx	r2
 801572e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015730:	9000      	str	r0, [sp, #0]
 8015732:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015734:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015736:	a830      	add	r0, sp, #192	; 0xc0
 8015738:	f002 fb49 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801573c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015740:	7be2      	ldrb	r2, [r4, #15]
 8015742:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015746:	1a8a      	subs	r2, r1, r2
 8015748:	7c21      	ldrb	r1, [r4, #16]
 801574a:	9103      	str	r1, [sp, #12]
 801574c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015750:	9102      	str	r1, [sp, #8]
 8015752:	6821      	ldr	r1, [r4, #0]
 8015754:	9101      	str	r1, [sp, #4]
 8015756:	7961      	ldrb	r1, [r4, #5]
 8015758:	9100      	str	r1, [sp, #0]
 801575a:	b292      	uxth	r2, r2
 801575c:	a930      	add	r1, sp, #192	; 0xc0
 801575e:	a80e      	add	r0, sp, #56	; 0x38
 8015760:	f7ff fc34 	bl	8014fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015764:	2e00      	cmp	r6, #0
 8015766:	dc5b      	bgt.n	8015820 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015768:	af17      	add	r7, sp, #92	; 0x5c
 801576a:	f04f 0900 	mov.w	r9, #0
 801576e:	7c23      	ldrb	r3, [r4, #16]
 8015770:	2b00      	cmp	r3, #0
 8015772:	f000 80b1 	beq.w	80158d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015776:	a80e      	add	r0, sp, #56	; 0x38
 8015778:	f7ff fe4c 	bl	8015414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801577c:	f1ba 0f00 	cmp.w	sl, #0
 8015780:	f000 80a5 	beq.w	80158ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015784:	7c23      	ldrb	r3, [r4, #16]
 8015786:	9309      	str	r3, [sp, #36]	; 0x24
 8015788:	2264      	movs	r2, #100	; 0x64
 801578a:	4639      	mov	r1, r7
 801578c:	a849      	add	r0, sp, #292	; 0x124
 801578e:	f015 fde6 	bl	802b35e <memcpy>
 8015792:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015794:	2b00      	cmp	r3, #0
 8015796:	f000 80a7 	beq.w	80158e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801579a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801579e:	7922      	ldrb	r2, [r4, #4]
 80157a0:	2a01      	cmp	r2, #1
 80157a2:	f040 808a 	bne.w	80158ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80157a6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80157aa:	1ac0      	subs	r0, r0, r3
 80157ac:	2302      	movs	r3, #2
 80157ae:	fb90 f0f3 	sdiv	r0, r0, r3
 80157b2:	b200      	sxth	r0, r0
 80157b4:	7c23      	ldrb	r3, [r4, #16]
 80157b6:	2b00      	cmp	r3, #0
 80157b8:	f000 808b 	beq.w	80158d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80157bc:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80157c0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80157c4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80157c8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80157cc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80157d0:	4410      	add	r0, r2
 80157d2:	b200      	sxth	r0, r0
 80157d4:	9000      	str	r0, [sp, #0]
 80157d6:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80157da:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80157de:	4642      	mov	r2, r8
 80157e0:	2100      	movs	r1, #0
 80157e2:	4658      	mov	r0, fp
 80157e4:	f7ff fca2 	bl	801512c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80157e8:	2800      	cmp	r0, #0
 80157ea:	d163      	bne.n	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80157ec:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80157f0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80157f4:	b2b2      	uxth	r2, r6
 80157f6:	4413      	add	r3, r2
 80157f8:	1a8a      	subs	r2, r1, r2
 80157fa:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80157fe:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8015802:	b21b      	sxth	r3, r3
 8015804:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015808:	2a00      	cmp	r2, #0
 801580a:	d153      	bne.n	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801580c:	6822      	ldr	r2, [r4, #0]
 801580e:	8869      	ldrh	r1, [r5, #2]
 8015810:	7a12      	ldrb	r2, [r2, #8]
 8015812:	1a9b      	subs	r3, r3, r2
 8015814:	88ea      	ldrh	r2, [r5, #6]
 8015816:	440a      	add	r2, r1
 8015818:	b212      	sxth	r2, r2
 801581a:	4293      	cmp	r3, r2
 801581c:	dda7      	ble.n	801576e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801581e:	e049      	b.n	80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015820:	7c23      	ldrb	r3, [r4, #16]
 8015822:	444f      	add	r7, r9
 8015824:	b1c3      	cbz	r3, 8015858 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015826:	f64f 79ff 	movw	r9, #65535	; 0xffff
 801582a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801582e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015832:	443b      	add	r3, r7
 8015834:	4293      	cmp	r3, r2
 8015836:	da97      	bge.n	8015768 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015838:	a80e      	add	r0, sp, #56	; 0x38
 801583a:	f7ff fdeb 	bl	8015414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801583e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8015842:	3b01      	subs	r3, #1
 8015844:	b29b      	uxth	r3, r3
 8015846:	454b      	cmp	r3, r9
 8015848:	9309      	str	r3, [sp, #36]	; 0x24
 801584a:	d021      	beq.n	8015890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801584c:	7961      	ldrb	r1, [r4, #5]
 801584e:	a817      	add	r0, sp, #92	; 0x5c
 8015850:	f7f2 fe8c 	bl	800856c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015856:	e7f4      	b.n	8015842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015858:	fa1f f986 	uxth.w	r9, r6
 801585c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015860:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015864:	443b      	add	r3, r7
 8015866:	4293      	cmp	r3, r2
 8015868:	f6bf af7e 	bge.w	8015768 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801586c:	a817      	add	r0, sp, #92	; 0x5c
 801586e:	f002 fe7f 	bl	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015872:	b1f8      	cbz	r0, 80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015874:	280a      	cmp	r0, #10
 8015876:	d1f1      	bne.n	801585c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015878:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801587c:	444b      	add	r3, r9
 801587e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015882:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015886:	eba3 0309 	sub.w	r3, r3, r9
 801588a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801588e:	e7e5      	b.n	801585c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015890:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015894:	b2b3      	uxth	r3, r6
 8015896:	441a      	add	r2, r3
 8015898:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801589c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80158a0:	1ad3      	subs	r3, r2, r3
 80158a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80158a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80158aa:	b11b      	cbz	r3, 80158b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80158ac:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80158b0:	2b00      	cmp	r3, #0
 80158b2:	d0ba      	beq.n	801582a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80158b4:	b063      	add	sp, #396	; 0x18c
 80158b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158ba:	2a02      	cmp	r2, #2
 80158bc:	d105      	bne.n	80158ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80158be:	7be2      	ldrb	r2, [r4, #15]
 80158c0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80158c4:	1a80      	subs	r0, r0, r2
 80158c6:	1ac0      	subs	r0, r0, r3
 80158c8:	e773      	b.n	80157b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80158ca:	2000      	movs	r0, #0
 80158cc:	e772      	b.n	80157b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80158ce:	7be0      	ldrb	r0, [r4, #15]
 80158d0:	e770      	b.n	80157b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80158d2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80158d6:	e773      	b.n	80157c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80158d8:	f1ba 0f00 	cmp.w	sl, #0
 80158dc:	d0f7      	beq.n	80158ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80158de:	2264      	movs	r2, #100	; 0x64
 80158e0:	4639      	mov	r1, r7
 80158e2:	a849      	add	r0, sp, #292	; 0x124
 80158e4:	f015 fd3b 	bl	802b35e <memcpy>
 80158e8:	2300      	movs	r3, #0
 80158ea:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80158ee:	6821      	ldr	r1, [r4, #0]
 80158f0:	a849      	add	r0, sp, #292	; 0x124
 80158f2:	f7ff fbae 	bl	8015052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80158f6:	b203      	sxth	r3, r0
 80158f8:	e751      	b.n	801579e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080158fa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80158fa:	2b03      	cmp	r3, #3
 80158fc:	d818      	bhi.n	8015930 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80158fe:	e8df f003 	tbb	[pc, r3]
 8015902:	0602      	.short	0x0602
 8015904:	130d      	.short	0x130d
 8015906:	f9b0 2000 	ldrsh.w	r2, [r0]
 801590a:	1850      	adds	r0, r2, r1
 801590c:	4770      	bx	lr
 801590e:	8803      	ldrh	r3, [r0, #0]
 8015910:	8880      	ldrh	r0, [r0, #4]
 8015912:	4418      	add	r0, r3
 8015914:	b200      	sxth	r0, r0
 8015916:	1a80      	subs	r0, r0, r2
 8015918:	3801      	subs	r0, #1
 801591a:	4770      	bx	lr
 801591c:	8803      	ldrh	r3, [r0, #0]
 801591e:	8880      	ldrh	r0, [r0, #4]
 8015920:	4418      	add	r0, r3
 8015922:	b200      	sxth	r0, r0
 8015924:	1a40      	subs	r0, r0, r1
 8015926:	e7f7      	b.n	8015918 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015928:	f9b0 0000 	ldrsh.w	r0, [r0]
 801592c:	4410      	add	r0, r2
 801592e:	4770      	bx	lr
 8015930:	2000      	movs	r0, #0
 8015932:	4770      	bx	lr

08015934 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015934:	2b03      	cmp	r3, #3
 8015936:	d817      	bhi.n	8015968 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015938:	e8df f003 	tbb	[pc, r3]
 801593c:	10090602 	.word	0x10090602
 8015940:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015944:	1850      	adds	r0, r2, r1
 8015946:	4770      	bx	lr
 8015948:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801594c:	e7fa      	b.n	8015944 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801594e:	8843      	ldrh	r3, [r0, #2]
 8015950:	88c0      	ldrh	r0, [r0, #6]
 8015952:	4418      	add	r0, r3
 8015954:	b200      	sxth	r0, r0
 8015956:	1a80      	subs	r0, r0, r2
 8015958:	3801      	subs	r0, #1
 801595a:	4770      	bx	lr
 801595c:	8843      	ldrh	r3, [r0, #2]
 801595e:	88c0      	ldrh	r0, [r0, #6]
 8015960:	4418      	add	r0, r3
 8015962:	b200      	sxth	r0, r0
 8015964:	1a40      	subs	r0, r0, r1
 8015966:	e7f7      	b.n	8015958 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015968:	2000      	movs	r0, #0
 801596a:	4770      	bx	lr

0801596c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801596c:	4b01      	ldr	r3, [pc, #4]	; (8015974 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801596e:	2200      	movs	r2, #0
 8015970:	601a      	str	r2, [r3, #0]
 8015972:	4770      	bx	lr
 8015974:	20013454 	.word	0x20013454

08015978 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015978:	4603      	mov	r3, r0
 801597a:	b1c8      	cbz	r0, 80159b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801597c:	0c02      	lsrs	r2, r0, #16
 801597e:	0412      	lsls	r2, r2, #16
 8015980:	b9a2      	cbnz	r2, 80159ac <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015982:	0403      	lsls	r3, r0, #16
 8015984:	2010      	movs	r0, #16
 8015986:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801598a:	bf04      	itt	eq
 801598c:	021b      	lsleq	r3, r3, #8
 801598e:	3008      	addeq	r0, #8
 8015990:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015994:	bf04      	itt	eq
 8015996:	011b      	lsleq	r3, r3, #4
 8015998:	3004      	addeq	r0, #4
 801599a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801599e:	bf04      	itt	eq
 80159a0:	009b      	lsleq	r3, r3, #2
 80159a2:	3002      	addeq	r0, #2
 80159a4:	2b00      	cmp	r3, #0
 80159a6:	db04      	blt.n	80159b2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80159a8:	3001      	adds	r0, #1
 80159aa:	4770      	bx	lr
 80159ac:	2000      	movs	r0, #0
 80159ae:	e7ea      	b.n	8015986 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80159b0:	2020      	movs	r0, #32
 80159b2:	4770      	bx	lr

080159b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80159b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159b8:	b087      	sub	sp, #28
 80159ba:	460d      	mov	r5, r1
 80159bc:	4616      	mov	r6, r2
 80159be:	4698      	mov	r8, r3
 80159c0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80159c4:	4601      	mov	r1, r0
 80159c6:	b120      	cbz	r0, 80159d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80159c8:	b11a      	cbz	r2, 80159d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80159ca:	2d1f      	cmp	r5, #31
 80159cc:	d801      	bhi.n	80159d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80159ce:	2b1f      	cmp	r3, #31
 80159d0:	d904      	bls.n	80159dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80159d2:	2000      	movs	r0, #0
 80159d4:	6038      	str	r0, [r7, #0]
 80159d6:	b007      	add	sp, #28
 80159d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159dc:	b97d      	cbnz	r5, 80159fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80159de:	b143      	cbz	r3, 80159f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80159e0:	4602      	mov	r2, r0
 80159e2:	e9cd 4700 	strd	r4, r7, [sp]
 80159e6:	462b      	mov	r3, r5
 80159e8:	4641      	mov	r1, r8
 80159ea:	4630      	mov	r0, r6
 80159ec:	f7ff ffe2 	bl	80159b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80159f0:	e7f1      	b.n	80159d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80159f2:	f04f 33ff 	mov.w	r3, #4294967295
 80159f6:	603b      	str	r3, [r7, #0]
 80159f8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80159fc:	e7eb      	b.n	80159d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80159fe:	fa32 fa05 	lsrs.w	sl, r2, r5
 8015a02:	d106      	bne.n	8015a12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8015a04:	4346      	muls	r6, r0
 8015a06:	fbb6 f0f4 	udiv	r0, r6, r4
 8015a0a:	fb04 6610 	mls	r6, r4, r0, r6
 8015a0e:	603e      	str	r6, [r7, #0]
 8015a10:	e7e1      	b.n	80159d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015a12:	2201      	movs	r2, #1
 8015a14:	40aa      	lsls	r2, r5
 8015a16:	3a01      	subs	r2, #1
 8015a18:	4016      	ands	r6, r2
 8015a1a:	fa00 fb05 	lsl.w	fp, r0, r5
 8015a1e:	4630      	mov	r0, r6
 8015a20:	fbbb f9f4 	udiv	r9, fp, r4
 8015a24:	fb0a f309 	mul.w	r3, sl, r9
 8015a28:	9303      	str	r3, [sp, #12]
 8015a2a:	f7ff ffa5 	bl	8015978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015a2e:	462b      	mov	r3, r5
 8015a30:	460a      	mov	r2, r1
 8015a32:	e9cd 4700 	strd	r4, r7, [sp]
 8015a36:	4601      	mov	r1, r0
 8015a38:	4630      	mov	r0, r6
 8015a3a:	f7ff ffbb 	bl	80159b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015a3e:	fb04 b919 	mls	r9, r4, r9, fp
 8015a42:	4606      	mov	r6, r0
 8015a44:	4648      	mov	r0, r9
 8015a46:	eb05 0108 	add.w	r1, r5, r8
 8015a4a:	f7ff ff95 	bl	8015978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015a4e:	ab05      	add	r3, sp, #20
 8015a50:	e9cd 4300 	strd	r4, r3, [sp]
 8015a54:	464a      	mov	r2, r9
 8015a56:	4603      	mov	r3, r0
 8015a58:	4650      	mov	r0, sl
 8015a5a:	f7ff ffab 	bl	80159b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015a5e:	6839      	ldr	r1, [r7, #0]
 8015a60:	9a05      	ldr	r2, [sp, #20]
 8015a62:	9b03      	ldr	r3, [sp, #12]
 8015a64:	4411      	add	r1, r2
 8015a66:	fbb1 f2f4 	udiv	r2, r1, r4
 8015a6a:	18d3      	adds	r3, r2, r3
 8015a6c:	441e      	add	r6, r3
 8015a6e:	fb04 1412 	mls	r4, r4, r2, r1
 8015a72:	4430      	add	r0, r6
 8015a74:	603c      	str	r4, [r7, #0]
 8015a76:	e7ae      	b.n	80159d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015a78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015a78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015a7c:	b085      	sub	sp, #20
 8015a7e:	f1b0 0900 	subs.w	r9, r0, #0
 8015a82:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015a84:	461d      	mov	r5, r3
 8015a86:	bfbf      	itttt	lt
 8015a88:	6823      	ldrlt	r3, [r4, #0]
 8015a8a:	425b      	neglt	r3, r3
 8015a8c:	f1c9 0900 	rsblt	r9, r9, #0
 8015a90:	6023      	strlt	r3, [r4, #0]
 8015a92:	bfb4      	ite	lt
 8015a94:	f04f 36ff 	movlt.w	r6, #4294967295
 8015a98:	2601      	movge	r6, #1
 8015a9a:	2a00      	cmp	r2, #0
 8015a9c:	4617      	mov	r7, r2
 8015a9e:	da04      	bge.n	8015aaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015aa0:	6823      	ldr	r3, [r4, #0]
 8015aa2:	425b      	negs	r3, r3
 8015aa4:	4257      	negs	r7, r2
 8015aa6:	4276      	negs	r6, r6
 8015aa8:	6023      	str	r3, [r4, #0]
 8015aaa:	2d00      	cmp	r5, #0
 8015aac:	4638      	mov	r0, r7
 8015aae:	bfba      	itte	lt
 8015ab0:	426d      	neglt	r5, r5
 8015ab2:	f04f 38ff 	movlt.w	r8, #4294967295
 8015ab6:	f04f 0801 	movge.w	r8, #1
 8015aba:	f7ff ff5d 	bl	8015978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015abe:	ab03      	add	r3, sp, #12
 8015ac0:	e9cd 5300 	strd	r5, r3, [sp]
 8015ac4:	463a      	mov	r2, r7
 8015ac6:	4603      	mov	r3, r0
 8015ac8:	4648      	mov	r0, r9
 8015aca:	f7ff ff73 	bl	80159b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015ace:	6823      	ldr	r3, [r4, #0]
 8015ad0:	9a03      	ldr	r2, [sp, #12]
 8015ad2:	4546      	cmp	r6, r8
 8015ad4:	441a      	add	r2, r3
 8015ad6:	fb92 f3f5 	sdiv	r3, r2, r5
 8015ada:	4418      	add	r0, r3
 8015adc:	bf18      	it	ne
 8015ade:	4240      	negne	r0, r0
 8015ae0:	fb05 2313 	mls	r3, r5, r3, r2
 8015ae4:	1c72      	adds	r2, r6, #1
 8015ae6:	6023      	str	r3, [r4, #0]
 8015ae8:	d105      	bne.n	8015af6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015aea:	2b00      	cmp	r3, #0
 8015aec:	f1c3 0200 	rsb	r2, r3, #0
 8015af0:	db0b      	blt.n	8015b0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015af2:	6022      	str	r2, [r4, #0]
 8015af4:	e006      	b.n	8015b04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015af6:	2e01      	cmp	r6, #1
 8015af8:	d104      	bne.n	8015b04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015afa:	2b00      	cmp	r3, #0
 8015afc:	da02      	bge.n	8015b04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015afe:	442b      	add	r3, r5
 8015b00:	3801      	subs	r0, #1
 8015b02:	6023      	str	r3, [r4, #0]
 8015b04:	b005      	add	sp, #20
 8015b06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015b0a:	3801      	subs	r0, #1
 8015b0c:	1b52      	subs	r2, r2, r5
 8015b0e:	e7f0      	b.n	8015af2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015b10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015b10:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015b14:	4c1c      	ldr	r4, [pc, #112]	; (8015b88 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8015b16:	6807      	ldr	r7, [r0, #0]
 8015b18:	69a3      	ldr	r3, [r4, #24]
 8015b1a:	4605      	mov	r5, r0
 8015b1c:	b92b      	cbnz	r3, 8015b2a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015b1e:	6840      	ldr	r0, [r0, #4]
 8015b20:	e9c5 7000 	strd	r7, r0, [r5]
 8015b24:	b004      	add	sp, #16
 8015b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015b2a:	68a2      	ldr	r2, [r4, #8]
 8015b2c:	6820      	ldr	r0, [r4, #0]
 8015b2e:	ae04      	add	r6, sp, #16
 8015b30:	f04f 0802 	mov.w	r8, #2
 8015b34:	fb93 f1f8 	sdiv	r1, r3, r8
 8015b38:	440a      	add	r2, r1
 8015b3a:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015b3e:	69e1      	ldr	r1, [r4, #28]
 8015b40:	9600      	str	r6, [sp, #0]
 8015b42:	463a      	mov	r2, r7
 8015b44:	f7ff ff98 	bl	8015a78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015b48:	69a3      	ldr	r3, [r4, #24]
 8015b4a:	686a      	ldr	r2, [r5, #4]
 8015b4c:	6a21      	ldr	r1, [r4, #32]
 8015b4e:	9600      	str	r6, [sp, #0]
 8015b50:	4607      	mov	r7, r0
 8015b52:	6860      	ldr	r0, [r4, #4]
 8015b54:	f7ff ff90 	bl	8015a78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015b58:	6962      	ldr	r2, [r4, #20]
 8015b5a:	69a3      	ldr	r3, [r4, #24]
 8015b5c:	fb93 f8f8 	sdiv	r8, r3, r8
 8015b60:	4442      	add	r2, r8
 8015b62:	9203      	str	r2, [sp, #12]
 8015b64:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8015b66:	682a      	ldr	r2, [r5, #0]
 8015b68:	9600      	str	r6, [sp, #0]
 8015b6a:	4407      	add	r7, r0
 8015b6c:	68e0      	ldr	r0, [r4, #12]
 8015b6e:	f7ff ff83 	bl	8015a78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015b72:	9600      	str	r6, [sp, #0]
 8015b74:	4680      	mov	r8, r0
 8015b76:	69a3      	ldr	r3, [r4, #24]
 8015b78:	686a      	ldr	r2, [r5, #4]
 8015b7a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015b7c:	6920      	ldr	r0, [r4, #16]
 8015b7e:	f7ff ff7b 	bl	8015a78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015b82:	4440      	add	r0, r8
 8015b84:	e7cc      	b.n	8015b20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8015b86:	bf00      	nop
 8015b88:	20013458 	.word	0x20013458

08015b8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015b8c:	4b07      	ldr	r3, [pc, #28]	; (8015bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015b8e:	781b      	ldrb	r3, [r3, #0]
 8015b90:	2b01      	cmp	r3, #1
 8015b92:	d109      	bne.n	8015ba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8015b94:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015b98:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015b9c:	8003      	strh	r3, [r0, #0]
 8015b9e:	4b04      	ldr	r3, [pc, #16]	; (8015bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015ba0:	881b      	ldrh	r3, [r3, #0]
 8015ba2:	3b01      	subs	r3, #1
 8015ba4:	1a9b      	subs	r3, r3, r2
 8015ba6:	800b      	strh	r3, [r1, #0]
 8015ba8:	4770      	bx	lr
 8015baa:	bf00      	nop
 8015bac:	2001343c 	.word	0x2001343c
 8015bb0:	20013438 	.word	0x20013438

08015bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8015bb4:	b510      	push	{r4, lr}
 8015bb6:	4b07      	ldr	r3, [pc, #28]	; (8015bd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015bb8:	781b      	ldrb	r3, [r3, #0]
 8015bba:	2b01      	cmp	r3, #1
 8015bbc:	d108      	bne.n	8015bd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015bbe:	4b06      	ldr	r3, [pc, #24]	; (8015bd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015bc0:	880c      	ldrh	r4, [r1, #0]
 8015bc2:	881b      	ldrh	r3, [r3, #0]
 8015bc4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015bc8:	3b01      	subs	r3, #1
 8015bca:	1b1b      	subs	r3, r3, r4
 8015bcc:	8003      	strh	r3, [r0, #0]
 8015bce:	800a      	strh	r2, [r1, #0]
 8015bd0:	bd10      	pop	{r4, pc}
 8015bd2:	bf00      	nop
 8015bd4:	2001343c 	.word	0x2001343c
 8015bd8:	20013438 	.word	0x20013438

08015bdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015bdc:	b510      	push	{r4, lr}
 8015bde:	4b0a      	ldr	r3, [pc, #40]	; (8015c08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015be0:	781b      	ldrb	r3, [r3, #0]
 8015be2:	2b01      	cmp	r3, #1
 8015be4:	d10e      	bne.n	8015c04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8015be6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015bea:	8843      	ldrh	r3, [r0, #2]
 8015bec:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015bf0:	8044      	strh	r4, [r0, #2]
 8015bf2:	18ca      	adds	r2, r1, r3
 8015bf4:	4b05      	ldr	r3, [pc, #20]	; (8015c0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015bf6:	881b      	ldrh	r3, [r3, #0]
 8015bf8:	1a9b      	subs	r3, r3, r2
 8015bfa:	8003      	strh	r3, [r0, #0]
 8015bfc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015c00:	80c3      	strh	r3, [r0, #6]
 8015c02:	8081      	strh	r1, [r0, #4]
 8015c04:	bd10      	pop	{r4, pc}
 8015c06:	bf00      	nop
 8015c08:	2001343c 	.word	0x2001343c
 8015c0c:	20013438 	.word	0x20013438

08015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015c10:	4b08      	ldr	r3, [pc, #32]	; (8015c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015c12:	781b      	ldrb	r3, [r3, #0]
 8015c14:	2b01      	cmp	r3, #1
 8015c16:	d10c      	bne.n	8015c32 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015c18:	8803      	ldrh	r3, [r0, #0]
 8015c1a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015c1e:	8842      	ldrh	r2, [r0, #2]
 8015c20:	8002      	strh	r2, [r0, #0]
 8015c22:	185a      	adds	r2, r3, r1
 8015c24:	4b04      	ldr	r3, [pc, #16]	; (8015c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8015c26:	881b      	ldrh	r3, [r3, #0]
 8015c28:	1a9b      	subs	r3, r3, r2
 8015c2a:	8043      	strh	r3, [r0, #2]
 8015c2c:	88c3      	ldrh	r3, [r0, #6]
 8015c2e:	8083      	strh	r3, [r0, #4]
 8015c30:	80c1      	strh	r1, [r0, #6]
 8015c32:	4770      	bx	lr
 8015c34:	2001343c 	.word	0x2001343c
 8015c38:	20013438 	.word	0x20013438

08015c3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015c3c:	b510      	push	{r4, lr}
 8015c3e:	4b07      	ldr	r3, [pc, #28]	; (8015c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015c40:	781b      	ldrb	r3, [r3, #0]
 8015c42:	2b01      	cmp	r3, #1
 8015c44:	d108      	bne.n	8015c58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8015c46:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015c4a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015c4e:	8003      	strh	r3, [r0, #0]
 8015c50:	8893      	ldrh	r3, [r2, #4]
 8015c52:	3b01      	subs	r3, #1
 8015c54:	1b1b      	subs	r3, r3, r4
 8015c56:	800b      	strh	r3, [r1, #0]
 8015c58:	bd10      	pop	{r4, pc}
 8015c5a:	bf00      	nop
 8015c5c:	2001343c 	.word	0x2001343c

08015c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015c60:	4b0b      	ldr	r3, [pc, #44]	; (8015c90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8015c62:	781b      	ldrb	r3, [r3, #0]
 8015c64:	2b01      	cmp	r3, #1
 8015c66:	d111      	bne.n	8015c8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015c68:	680b      	ldr	r3, [r1, #0]
 8015c6a:	ed90 7a00 	vldr	s14, [r0]
 8015c6e:	6003      	str	r3, [r0, #0]
 8015c70:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015c74:	eddf 6a07 	vldr	s13, [pc, #28]	; 8015c94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015c78:	ee07 3a90 	vmov	s15, r3
 8015c7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015c80:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015c84:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015c88:	edc1 7a00 	vstr	s15, [r1]
 8015c8c:	4770      	bx	lr
 8015c8e:	bf00      	nop
 8015c90:	2001343c 	.word	0x2001343c
 8015c94:	38d1b717 	.word	0x38d1b717

08015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015c98:	b510      	push	{r4, lr}
 8015c9a:	4b0a      	ldr	r3, [pc, #40]	; (8015cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015c9c:	781b      	ldrb	r3, [r3, #0]
 8015c9e:	2b01      	cmp	r3, #1
 8015ca0:	460a      	mov	r2, r1
 8015ca2:	d10d      	bne.n	8015cc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015ca4:	8881      	ldrh	r1, [r0, #4]
 8015ca6:	8803      	ldrh	r3, [r0, #0]
 8015ca8:	440b      	add	r3, r1
 8015caa:	4601      	mov	r1, r0
 8015cac:	3b01      	subs	r3, #1
 8015cae:	f821 3b02 	strh.w	r3, [r1], #2
 8015cb2:	f7ff ffc3 	bl	8015c3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015cb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015cba:	88c2      	ldrh	r2, [r0, #6]
 8015cbc:	8082      	strh	r2, [r0, #4]
 8015cbe:	80c3      	strh	r3, [r0, #6]
 8015cc0:	bd10      	pop	{r4, pc}
 8015cc2:	bf00      	nop
 8015cc4:	2001343c 	.word	0x2001343c

08015cc8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015cc8:	4b06      	ldr	r3, [pc, #24]	; (8015ce4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015cca:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015cce:	4b06      	ldr	r3, [pc, #24]	; (8015ce8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015cd0:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015cd4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015cd8:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015cdc:	2100      	movs	r1, #0
 8015cde:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015ce2:	4770      	bx	lr
 8015ce4:	20013438 	.word	0x20013438
 8015ce8:	2001343a 	.word	0x2001343a

08015cec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015cec:	4b03      	ldr	r3, [pc, #12]	; (8015cfc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015cee:	6818      	ldr	r0, [r3, #0]
 8015cf0:	b110      	cbz	r0, 8015cf8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015cf2:	6803      	ldr	r3, [r0, #0]
 8015cf4:	699b      	ldr	r3, [r3, #24]
 8015cf6:	4718      	bx	r3
 8015cf8:	4770      	bx	lr
 8015cfa:	bf00      	nop
 8015cfc:	20013488 	.word	0x20013488

08015d00 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015d00:	4770      	bx	lr
	...

08015d04 <_ZN8touchgfx11Application4drawEv>:
 8015d04:	b507      	push	{r0, r1, r2, lr}
 8015d06:	4b09      	ldr	r3, [pc, #36]	; (8015d2c <_ZN8touchgfx11Application4drawEv+0x28>)
 8015d08:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015d0c:	4b08      	ldr	r3, [pc, #32]	; (8015d30 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015d0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015d12:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d16:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015d1a:	6803      	ldr	r3, [r0, #0]
 8015d1c:	2100      	movs	r1, #0
 8015d1e:	9100      	str	r1, [sp, #0]
 8015d20:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d22:	4669      	mov	r1, sp
 8015d24:	4798      	blx	r3
 8015d26:	b003      	add	sp, #12
 8015d28:	f85d fb04 	ldr.w	pc, [sp], #4
 8015d2c:	20013438 	.word	0x20013438
 8015d30:	2001343a 	.word	0x2001343a

08015d34 <_ZN8touchgfx11Application10invalidateEv>:
 8015d34:	4b09      	ldr	r3, [pc, #36]	; (8015d5c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015d36:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015d3a:	4b09      	ldr	r3, [pc, #36]	; (8015d60 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015d3c:	b082      	sub	sp, #8
 8015d3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d42:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015d46:	2100      	movs	r1, #0
 8015d48:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015d4c:	9100      	str	r1, [sp, #0]
 8015d4e:	6803      	ldr	r3, [r0, #0]
 8015d50:	aa02      	add	r2, sp, #8
 8015d52:	e912 0006 	ldmdb	r2, {r1, r2}
 8015d56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015d58:	b002      	add	sp, #8
 8015d5a:	4718      	bx	r3
 8015d5c:	20013438 	.word	0x20013438
 8015d60:	2001343a 	.word	0x2001343a

08015d64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015d64:	4b03      	ldr	r3, [pc, #12]	; (8015d74 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015d66:	6818      	ldr	r0, [r3, #0]
 8015d68:	b110      	cbz	r0, 8015d70 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015d6a:	6803      	ldr	r3, [r0, #0]
 8015d6c:	69db      	ldr	r3, [r3, #28]
 8015d6e:	4718      	bx	r3
 8015d70:	4770      	bx	lr
 8015d72:	bf00      	nop
 8015d74:	20013488 	.word	0x20013488

08015d78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015d78:	4b03      	ldr	r3, [pc, #12]	; (8015d88 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015d7a:	6818      	ldr	r0, [r3, #0]
 8015d7c:	b110      	cbz	r0, 8015d84 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015d7e:	6803      	ldr	r3, [r0, #0]
 8015d80:	6a1b      	ldr	r3, [r3, #32]
 8015d82:	4718      	bx	r3
 8015d84:	4770      	bx	lr
 8015d86:	bf00      	nop
 8015d88:	20013488 	.word	0x20013488

08015d8c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015d8c:	2300      	movs	r3, #0
 8015d8e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015d92:	4770      	bx	lr

08015d94 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015d94:	4b03      	ldr	r3, [pc, #12]	; (8015da4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015d96:	6818      	ldr	r0, [r3, #0]
 8015d98:	b110      	cbz	r0, 8015da0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015d9a:	6803      	ldr	r3, [r0, #0]
 8015d9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d9e:	4718      	bx	r3
 8015da0:	4770      	bx	lr
 8015da2:	bf00      	nop
 8015da4:	20013488 	.word	0x20013488

08015da8 <_ZN8touchgfx11ApplicationD1Ev>:
 8015da8:	4770      	bx	lr

08015daa <_ZN8touchgfx11ApplicationD0Ev>:
 8015daa:	b510      	push	{r4, lr}
 8015dac:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015db0:	4604      	mov	r4, r0
 8015db2:	f014 f996 	bl	802a0e2 <_ZdlPvj>
 8015db6:	4620      	mov	r0, r4
 8015db8:	bd10      	pop	{r4, pc}

08015dba <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015dba:	b510      	push	{r4, lr}
 8015dbc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015dc0:	888a      	ldrh	r2, [r1, #4]
 8015dc2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015dc6:	4422      	add	r2, r4
 8015dc8:	b212      	sxth	r2, r2
 8015dca:	4293      	cmp	r3, r2
 8015dcc:	da15      	bge.n	8015dfa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015dce:	8882      	ldrh	r2, [r0, #4]
 8015dd0:	4413      	add	r3, r2
 8015dd2:	b21b      	sxth	r3, r3
 8015dd4:	429c      	cmp	r4, r3
 8015dd6:	da10      	bge.n	8015dfa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015dd8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015ddc:	88c9      	ldrh	r1, [r1, #6]
 8015dde:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015de2:	4419      	add	r1, r3
 8015de4:	b209      	sxth	r1, r1
 8015de6:	428a      	cmp	r2, r1
 8015de8:	da07      	bge.n	8015dfa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015dea:	88c0      	ldrh	r0, [r0, #6]
 8015dec:	4410      	add	r0, r2
 8015dee:	b200      	sxth	r0, r0
 8015df0:	4283      	cmp	r3, r0
 8015df2:	bfac      	ite	ge
 8015df4:	2000      	movge	r0, #0
 8015df6:	2001      	movlt	r0, #1
 8015df8:	bd10      	pop	{r4, pc}
 8015dfa:	2000      	movs	r0, #0
 8015dfc:	e7fc      	b.n	8015df8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015dfe <_ZN8touchgfx4Rect10restrictToEss>:
 8015dfe:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015e02:	2b00      	cmp	r3, #0
 8015e04:	b510      	push	{r4, lr}
 8015e06:	da04      	bge.n	8015e12 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015e08:	8884      	ldrh	r4, [r0, #4]
 8015e0a:	4423      	add	r3, r4
 8015e0c:	8083      	strh	r3, [r0, #4]
 8015e0e:	2300      	movs	r3, #0
 8015e10:	8003      	strh	r3, [r0, #0]
 8015e12:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015e16:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015e1a:	1b09      	subs	r1, r1, r4
 8015e1c:	428b      	cmp	r3, r1
 8015e1e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015e22:	bfc8      	it	gt
 8015e24:	8081      	strhgt	r1, [r0, #4]
 8015e26:	2b00      	cmp	r3, #0
 8015e28:	da04      	bge.n	8015e34 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015e2a:	88c1      	ldrh	r1, [r0, #6]
 8015e2c:	440b      	add	r3, r1
 8015e2e:	80c3      	strh	r3, [r0, #6]
 8015e30:	2300      	movs	r3, #0
 8015e32:	8043      	strh	r3, [r0, #2]
 8015e34:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015e38:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015e3c:	1a52      	subs	r2, r2, r1
 8015e3e:	4293      	cmp	r3, r2
 8015e40:	bfc8      	it	gt
 8015e42:	80c2      	strhgt	r2, [r0, #6]
 8015e44:	bd10      	pop	{r4, pc}
	...

08015e48 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015e48:	b510      	push	{r4, lr}
 8015e4a:	4b10      	ldr	r3, [pc, #64]	; (8015e8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015e4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015e50:	4b0f      	ldr	r3, [pc, #60]	; (8015e90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015e52:	460c      	mov	r4, r1
 8015e54:	4620      	mov	r0, r4
 8015e56:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015e5a:	f7ff ffd0 	bl	8015dfe <_ZN8touchgfx4Rect10restrictToEss>
 8015e5e:	4b0d      	ldr	r3, [pc, #52]	; (8015e94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015e60:	6818      	ldr	r0, [r3, #0]
 8015e62:	b190      	cbz	r0, 8015e8a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015e64:	6803      	ldr	r3, [r0, #0]
 8015e66:	4621      	mov	r1, r4
 8015e68:	689b      	ldr	r3, [r3, #8]
 8015e6a:	4798      	blx	r3
 8015e6c:	4b0a      	ldr	r3, [pc, #40]	; (8015e98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015e6e:	6818      	ldr	r0, [r3, #0]
 8015e70:	b118      	cbz	r0, 8015e7a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015e72:	6803      	ldr	r3, [r0, #0]
 8015e74:	4621      	mov	r1, r4
 8015e76:	689b      	ldr	r3, [r3, #8]
 8015e78:	4798      	blx	r3
 8015e7a:	4b08      	ldr	r3, [pc, #32]	; (8015e9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015e7c:	6818      	ldr	r0, [r3, #0]
 8015e7e:	6803      	ldr	r3, [r0, #0]
 8015e80:	4621      	mov	r1, r4
 8015e82:	69db      	ldr	r3, [r3, #28]
 8015e84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015e88:	4718      	bx	r3
 8015e8a:	bd10      	pop	{r4, pc}
 8015e8c:	2001343a 	.word	0x2001343a
 8015e90:	20013438 	.word	0x20013438
 8015e94:	20013488 	.word	0x20013488
 8015e98:	20013484 	.word	0x20013484
 8015e9c:	20013444 	.word	0x20013444

08015ea0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015ea2:	4606      	mov	r6, r0
 8015ea4:	4608      	mov	r0, r1
 8015ea6:	460f      	mov	r7, r1
 8015ea8:	f7fa ff97 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8015eac:	b9e8      	cbnz	r0, 8015eea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015eae:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015eb2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015eb6:	42a5      	cmp	r5, r4
 8015eb8:	db17      	blt.n	8015eea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015eba:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015ebe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015ec2:	429a      	cmp	r2, r3
 8015ec4:	db11      	blt.n	8015eea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ec6:	88b9      	ldrh	r1, [r7, #4]
 8015ec8:	440d      	add	r5, r1
 8015eca:	88b1      	ldrh	r1, [r6, #4]
 8015ecc:	440c      	add	r4, r1
 8015ece:	b22d      	sxth	r5, r5
 8015ed0:	b224      	sxth	r4, r4
 8015ed2:	42a5      	cmp	r5, r4
 8015ed4:	dc09      	bgt.n	8015eea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ed6:	88f8      	ldrh	r0, [r7, #6]
 8015ed8:	4410      	add	r0, r2
 8015eda:	88f2      	ldrh	r2, [r6, #6]
 8015edc:	4413      	add	r3, r2
 8015ede:	b200      	sxth	r0, r0
 8015ee0:	b21b      	sxth	r3, r3
 8015ee2:	4298      	cmp	r0, r3
 8015ee4:	bfcc      	ite	gt
 8015ee6:	2000      	movgt	r0, #0
 8015ee8:	2001      	movle	r0, #1
 8015eea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015eec <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015eee:	4604      	mov	r4, r0
 8015ef0:	4608      	mov	r0, r1
 8015ef2:	460d      	mov	r5, r1
 8015ef4:	f7fa ff71 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ef8:	b978      	cbnz	r0, 8015f1a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015efa:	4620      	mov	r0, r4
 8015efc:	f7fa ff6d 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f00:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015f04:	b150      	cbz	r0, 8015f1c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015f06:	8026      	strh	r6, [r4, #0]
 8015f08:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015f0c:	8063      	strh	r3, [r4, #2]
 8015f0e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015f12:	80a3      	strh	r3, [r4, #4]
 8015f14:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015f18:	80e3      	strh	r3, [r4, #6]
 8015f1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015f1c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015f20:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015f24:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015f28:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015f2c:	88ed      	ldrh	r5, [r5, #6]
 8015f2e:	42b1      	cmp	r1, r6
 8015f30:	460f      	mov	r7, r1
 8015f32:	bfa8      	it	ge
 8015f34:	4637      	movge	r7, r6
 8015f36:	4293      	cmp	r3, r2
 8015f38:	4618      	mov	r0, r3
 8015f3a:	4466      	add	r6, ip
 8015f3c:	bfa8      	it	ge
 8015f3e:	4610      	movge	r0, r2
 8015f40:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015f44:	8027      	strh	r7, [r4, #0]
 8015f46:	442a      	add	r2, r5
 8015f48:	88e5      	ldrh	r5, [r4, #6]
 8015f4a:	8060      	strh	r0, [r4, #2]
 8015f4c:	4461      	add	r1, ip
 8015f4e:	442b      	add	r3, r5
 8015f50:	b236      	sxth	r6, r6
 8015f52:	b209      	sxth	r1, r1
 8015f54:	b212      	sxth	r2, r2
 8015f56:	b21b      	sxth	r3, r3
 8015f58:	428e      	cmp	r6, r1
 8015f5a:	bfac      	ite	ge
 8015f5c:	ebc7 0106 	rsbge	r1, r7, r6
 8015f60:	ebc7 0101 	rsblt	r1, r7, r1
 8015f64:	429a      	cmp	r2, r3
 8015f66:	bfac      	ite	ge
 8015f68:	ebc0 0202 	rsbge	r2, r0, r2
 8015f6c:	ebc0 0203 	rsblt	r2, r0, r3
 8015f70:	80a1      	strh	r1, [r4, #4]
 8015f72:	80e2      	strh	r2, [r4, #6]
 8015f74:	e7d1      	b.n	8015f1a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015f78 <_ZN8touchgfx11Application11getInstanceEv>:
 8015f78:	4b01      	ldr	r3, [pc, #4]	; (8015f80 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015f7a:	6818      	ldr	r0, [r3, #0]
 8015f7c:	4770      	bx	lr
 8015f7e:	bf00      	nop
 8015f80:	20013498 	.word	0x20013498

08015f84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015f84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f86:	4b10      	ldr	r3, [pc, #64]	; (8015fc8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015f88:	781b      	ldrb	r3, [r3, #0]
 8015f8a:	4605      	mov	r5, r0
 8015f8c:	b1d3      	cbz	r3, 8015fc4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015f8e:	4b0f      	ldr	r3, [pc, #60]	; (8015fcc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015f90:	4f0f      	ldr	r7, [pc, #60]	; (8015fd0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015f92:	881c      	ldrh	r4, [r3, #0]
 8015f94:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015f98:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015f9c:	42a3      	cmp	r3, r4
 8015f9e:	d90e      	bls.n	8015fbe <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015fa0:	683b      	ldr	r3, [r7, #0]
 8015fa2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015fa6:	b10a      	cbz	r2, 8015fac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015fa8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015faa:	b900      	cbnz	r0, 8015fae <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015fac:	6898      	ldr	r0, [r3, #8]
 8015fae:	6803      	ldr	r3, [r0, #0]
 8015fb0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015fb4:	69db      	ldr	r3, [r3, #28]
 8015fb6:	3401      	adds	r4, #1
 8015fb8:	4798      	blx	r3
 8015fba:	b2a4      	uxth	r4, r4
 8015fbc:	e7ec      	b.n	8015f98 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015fbe:	2300      	movs	r3, #0
 8015fc0:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015fc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fc6:	bf00      	nop
 8015fc8:	20013442 	.word	0x20013442
 8015fcc:	20000088 	.word	0x20000088
 8015fd0:	20013444 	.word	0x20013444

08015fd4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015fd4:	b510      	push	{r4, lr}
 8015fd6:	2300      	movs	r3, #0
 8015fd8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015fdc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015fe0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015fe4:	4604      	mov	r4, r0
 8015fe6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015fea:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015fee:	429a      	cmp	r2, r3
 8015ff0:	d90e      	bls.n	8016010 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015ff2:	18e2      	adds	r2, r4, r3
 8015ff4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015ff8:	b122      	cbz	r2, 8016004 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015ffa:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015ffe:	6803      	ldr	r3, [r0, #0]
 8016000:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016002:	4798      	blx	r3
 8016004:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016008:	3301      	adds	r3, #1
 801600a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801600e:	e7ea      	b.n	8015fe6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016010:	bd10      	pop	{r4, pc}

08016012 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016012:	b530      	push	{r4, r5, lr}
 8016014:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016018:	2200      	movs	r2, #0
 801601a:	b293      	uxth	r3, r2
 801601c:	429d      	cmp	r5, r3
 801601e:	d90e      	bls.n	801603e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016020:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016024:	428b      	cmp	r3, r1
 8016026:	d10b      	bne.n	8016040 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016028:	1884      	adds	r4, r0, r2
 801602a:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 801602e:	b13b      	cbz	r3, 8016040 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016030:	3b01      	subs	r3, #1
 8016032:	b2db      	uxtb	r3, r3
 8016034:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016038:	b90b      	cbnz	r3, 801603e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801603a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801603e:	bd30      	pop	{r4, r5, pc}
 8016040:	3201      	adds	r2, #1
 8016042:	e7ea      	b.n	801601a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016044:	2300      	movs	r3, #0
 8016046:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801604a:	f100 0284 	add.w	r2, r0, #132	; 0x84
 801604e:	30a4      	adds	r0, #164	; 0xa4
 8016050:	f802 3b01 	strb.w	r3, [r2], #1
 8016054:	4282      	cmp	r2, r0
 8016056:	d1fb      	bne.n	8016050 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016058:	4770      	bx	lr
	...

0801605c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801605c:	b570      	push	{r4, r5, r6, lr}
 801605e:	4c0b      	ldr	r4, [pc, #44]	; (801608c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016060:	4605      	mov	r5, r0
 8016062:	6820      	ldr	r0, [r4, #0]
 8016064:	460e      	mov	r6, r1
 8016066:	b110      	cbz	r0, 801606e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016068:	6803      	ldr	r3, [r0, #0]
 801606a:	695b      	ldr	r3, [r3, #20]
 801606c:	4798      	blx	r3
 801606e:	1d28      	adds	r0, r5, #4
 8016070:	f7ff ffe8 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016074:	6026      	str	r6, [r4, #0]
 8016076:	6833      	ldr	r3, [r6, #0]
 8016078:	4630      	mov	r0, r6
 801607a:	68db      	ldr	r3, [r3, #12]
 801607c:	4798      	blx	r3
 801607e:	682b      	ldr	r3, [r5, #0]
 8016080:	4628      	mov	r0, r5
 8016082:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016088:	4718      	bx	r3
 801608a:	bf00      	nop
 801608c:	20013488 	.word	0x20013488

08016090 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016090:	2300      	movs	r3, #0
 8016092:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016096:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801609a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801609c:	461a      	mov	r2, r3
 801609e:	461c      	mov	r4, r3
 80160a0:	461d      	mov	r5, r3
 80160a2:	459c      	cmp	ip, r3
 80160a4:	dd1a      	ble.n	80160dc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80160a6:	18c6      	adds	r6, r0, r3
 80160a8:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80160ac:	b16e      	cbz	r6, 80160ca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80160ae:	429a      	cmp	r2, r3
 80160b0:	d008      	beq.n	80160c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80160b2:	fa1f fe82 	uxth.w	lr, r2
 80160b6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80160ba:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80160be:	1887      	adds	r7, r0, r2
 80160c0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80160c4:	3201      	adds	r2, #1
 80160c6:	3301      	adds	r3, #1
 80160c8:	e7eb      	b.n	80160a2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80160ca:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80160ce:	4299      	cmp	r1, r3
 80160d0:	bfa8      	it	ge
 80160d2:	3501      	addge	r5, #1
 80160d4:	429e      	cmp	r6, r3
 80160d6:	bfc8      	it	gt
 80160d8:	3401      	addgt	r4, #1
 80160da:	e7f4      	b.n	80160c6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80160dc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80160e0:	1b49      	subs	r1, r1, r5
 80160e2:	1b1b      	subs	r3, r3, r4
 80160e4:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80160e8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80160ec:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80160f0:	4293      	cmp	r3, r2
 80160f2:	dd03      	ble.n	80160fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80160f4:	3b01      	subs	r3, #1
 80160f6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80160fa:	e7f7      	b.n	80160ec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80160fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016100 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016100:	b570      	push	{r4, r5, r6, lr}
 8016102:	4d16      	ldr	r5, [pc, #88]	; (801615c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016104:	4604      	mov	r4, r0
 8016106:	6828      	ldr	r0, [r5, #0]
 8016108:	b140      	cbz	r0, 801611c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801610a:	7a03      	ldrb	r3, [r0, #8]
 801610c:	b933      	cbnz	r3, 801611c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801610e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016112:	6803      	ldr	r3, [r0, #0]
 8016114:	689b      	ldr	r3, [r3, #8]
 8016116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801611a:	4718      	bx	r3
 801611c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016120:	4e0f      	ldr	r6, [pc, #60]	; (8016160 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016122:	b973      	cbnz	r3, 8016142 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016124:	b168      	cbz	r0, 8016142 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016126:	7a03      	ldrb	r3, [r0, #8]
 8016128:	b15b      	cbz	r3, 8016142 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801612a:	6830      	ldr	r0, [r6, #0]
 801612c:	b110      	cbz	r0, 8016134 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801612e:	6803      	ldr	r3, [r0, #0]
 8016130:	691b      	ldr	r3, [r3, #16]
 8016132:	4798      	blx	r3
 8016134:	6828      	ldr	r0, [r5, #0]
 8016136:	6803      	ldr	r3, [r0, #0]
 8016138:	68db      	ldr	r3, [r3, #12]
 801613a:	4798      	blx	r3
 801613c:	2301      	movs	r3, #1
 801613e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016142:	3404      	adds	r4, #4
 8016144:	4620      	mov	r0, r4
 8016146:	f7ff ff45 	bl	8015fd4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801614a:	4620      	mov	r0, r4
 801614c:	f7ff ffa0 	bl	8016090 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016150:	6830      	ldr	r0, [r6, #0]
 8016152:	b110      	cbz	r0, 801615a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016154:	6803      	ldr	r3, [r0, #0]
 8016156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016158:	e7dd      	b.n	8016116 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801615a:	bd70      	pop	{r4, r5, r6, pc}
 801615c:	2001348c 	.word	0x2001348c
 8016160:	20013488 	.word	0x20013488

08016164 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016166:	2300      	movs	r3, #0
 8016168:	4604      	mov	r4, r0
 801616a:	460d      	mov	r5, r1
 801616c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016170:	4618      	mov	r0, r3
 8016172:	b29a      	uxth	r2, r3
 8016174:	4291      	cmp	r1, r2
 8016176:	d911      	bls.n	801619c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016178:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801617c:	18e6      	adds	r6, r4, r3
 801617e:	42af      	cmp	r7, r5
 8016180:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016184:	d105      	bne.n	8016192 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016186:	2aff      	cmp	r2, #255	; 0xff
 8016188:	d002      	beq.n	8016190 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801618a:	3201      	adds	r2, #1
 801618c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016192:	2a00      	cmp	r2, #0
 8016194:	bf08      	it	eq
 8016196:	2001      	moveq	r0, #1
 8016198:	3301      	adds	r3, #1
 801619a:	e7ea      	b.n	8016172 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 801619c:	b120      	cbz	r0, 80161a8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801619e:	2920      	cmp	r1, #32
 80161a0:	d102      	bne.n	80161a8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80161a2:	4620      	mov	r0, r4
 80161a4:	f7ff ff74 	bl	8016090 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80161a8:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80161ac:	2b1f      	cmp	r3, #31
 80161ae:	d8ef      	bhi.n	8016190 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80161b0:	18e2      	adds	r2, r4, r3
 80161b2:	2101      	movs	r1, #1
 80161b4:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80161b8:	185a      	adds	r2, r3, r1
 80161ba:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80161be:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80161c2:	e7e5      	b.n	8016190 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080161c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80161c4:	4603      	mov	r3, r0
 80161c6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80161ca:	2200      	movs	r2, #0
 80161cc:	801a      	strh	r2, [r3, #0]
 80161ce:	805a      	strh	r2, [r3, #2]
 80161d0:	809a      	strh	r2, [r3, #4]
 80161d2:	80da      	strh	r2, [r3, #6]
 80161d4:	3308      	adds	r3, #8
 80161d6:	428b      	cmp	r3, r1
 80161d8:	d1f8      	bne.n	80161cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80161da:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80161de:	4770      	bx	lr

080161e0 <_ZN8touchgfx11ApplicationC1Ev>:
 80161e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80161e2:	4606      	mov	r6, r0
 80161e4:	4b1c      	ldr	r3, [pc, #112]	; (8016258 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80161e6:	f846 3b04 	str.w	r3, [r6], #4
 80161ea:	4604      	mov	r4, r0
 80161ec:	2500      	movs	r5, #0
 80161ee:	22a8      	movs	r2, #168	; 0xa8
 80161f0:	2100      	movs	r1, #0
 80161f2:	4630      	mov	r0, r6
 80161f4:	f014 ff8d 	bl	802b112 <memset>
 80161f8:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80161fc:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016200:	f7ff ffe0 	bl	80161c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016204:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016208:	f7ff ffdc 	bl	80161c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801620c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016210:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016214:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016218:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 801621c:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016220:	490e      	ldr	r1, [pc, #56]	; (801625c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016222:	480f      	ldr	r0, [pc, #60]	; (8016260 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016224:	4f0f      	ldr	r7, [pc, #60]	; (8016264 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016226:	f010 fe27 	bl	8026e78 <CRC_Lock>
 801622a:	4b0f      	ldr	r3, [pc, #60]	; (8016268 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801622c:	b158      	cbz	r0, 8016246 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801622e:	801d      	strh	r5, [r3, #0]
 8016230:	4a0e      	ldr	r2, [pc, #56]	; (801626c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016232:	2300      	movs	r3, #0
 8016234:	6013      	str	r3, [r2, #0]
 8016236:	4a0e      	ldr	r2, [pc, #56]	; (8016270 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016238:	603b      	str	r3, [r7, #0]
 801623a:	4630      	mov	r0, r6
 801623c:	6013      	str	r3, [r2, #0]
 801623e:	f7ff ff01 	bl	8016044 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016242:	4620      	mov	r0, r4
 8016244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016246:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801624a:	2002      	movs	r0, #2
 801624c:	801a      	strh	r2, [r3, #0]
 801624e:	6038      	str	r0, [r7, #0]
 8016250:	f001 fb4a 	bl	80178e8 <_ZN8touchgfx6Screen4drawEv>
 8016254:	e7ec      	b.n	8016230 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016256:	bf00      	nop
 8016258:	0802f8f8 	.word	0x0802f8f8
 801625c:	b5e8b5cd 	.word	0xb5e8b5cd
 8016260:	f407a5c2 	.word	0xf407a5c2
 8016264:	20013488 	.word	0x20013488
 8016268:	20000088 	.word	0x20000088
 801626c:	20013498 	.word	0x20013498
 8016270:	2001348c 	.word	0x2001348c

08016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016274:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016278:	3b01      	subs	r3, #1
 801627a:	b29b      	uxth	r3, r3
 801627c:	428b      	cmp	r3, r1
 801627e:	b510      	push	{r4, lr}
 8016280:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016284:	d908      	bls.n	8016298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016286:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801628a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801628e:	681a      	ldr	r2, [r3, #0]
 8016290:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016294:	685a      	ldr	r2, [r3, #4]
 8016296:	6062      	str	r2, [r4, #4]
 8016298:	bd10      	pop	{r4, pc}
	...

0801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801629c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162a0:	4b8f      	ldr	r3, [pc, #572]	; (80164e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80162a2:	b08f      	sub	sp, #60	; 0x3c
 80162a4:	ac0a      	add	r4, sp, #40	; 0x28
 80162a6:	e884 0006 	stmia.w	r4, {r1, r2}
 80162aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80162ae:	4b8d      	ldr	r3, [pc, #564]	; (80164e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80162b0:	4683      	mov	fp, r0
 80162b2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80162b6:	4620      	mov	r0, r4
 80162b8:	f7ff fda1 	bl	8015dfe <_ZN8touchgfx4Rect10restrictToEss>
 80162bc:	4620      	mov	r0, r4
 80162be:	f7fa fd8c 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 80162c2:	2800      	cmp	r0, #0
 80162c4:	d16a      	bne.n	801639c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80162c6:	9403      	str	r4, [sp, #12]
 80162c8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80162cc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80162d0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80162d4:	35a4      	adds	r5, #164	; 0xa4
 80162d6:	9301      	str	r3, [sp, #4]
 80162d8:	b15c      	cbz	r4, 80162f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80162da:	4629      	mov	r1, r5
 80162dc:	9803      	ldr	r0, [sp, #12]
 80162de:	f7ff fddf 	bl	8015ea0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80162e2:	3c01      	subs	r4, #1
 80162e4:	b118      	cbz	r0, 80162ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80162e6:	b2a1      	uxth	r1, r4
 80162e8:	9801      	ldr	r0, [sp, #4]
 80162ea:	f7ff ffc3 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80162ee:	3d08      	subs	r5, #8
 80162f0:	e7f2      	b.n	80162d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80162f2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80162f6:	f8cd a010 	str.w	sl, [sp, #16]
 80162fa:	f10a 33ff 	add.w	r3, sl, #4294967295
 80162fe:	9302      	str	r3, [sp, #8]
 8016300:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016304:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016308:	9306      	str	r3, [sp, #24]
 801630a:	445c      	add	r4, fp
 801630c:	2500      	movs	r5, #0
 801630e:	4626      	mov	r6, r4
 8016310:	f8cd a014 	str.w	sl, [sp, #20]
 8016314:	462f      	mov	r7, r5
 8016316:	9b05      	ldr	r3, [sp, #20]
 8016318:	2b00      	cmp	r3, #0
 801631a:	d073      	beq.n	8016404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801631c:	9903      	ldr	r1, [sp, #12]
 801631e:	4630      	mov	r0, r6
 8016320:	f7ff fd4b 	bl	8015dba <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016324:	b350      	cbz	r0, 801637c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016326:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801632a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801632e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8016332:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016336:	45e6      	cmp	lr, ip
 8016338:	db33      	blt.n	80163a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801633a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801633e:	88b3      	ldrh	r3, [r6, #4]
 8016340:	4472      	add	r2, lr
 8016342:	4463      	add	r3, ip
 8016344:	b212      	sxth	r2, r2
 8016346:	b21b      	sxth	r3, r3
 8016348:	429a      	cmp	r2, r3
 801634a:	dc2a      	bgt.n	80163a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801634c:	88f3      	ldrh	r3, [r6, #6]
 801634e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016352:	fa1f f289 	uxth.w	r2, r9
 8016356:	4413      	add	r3, r2
 8016358:	b29b      	uxth	r3, r3
 801635a:	45c8      	cmp	r8, r9
 801635c:	fa1f fc88 	uxth.w	ip, r8
 8016360:	fa0f fe83 	sxth.w	lr, r3
 8016364:	db0f      	blt.n	8016386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016366:	eba3 030c 	sub.w	r3, r3, ip
 801636a:	1ac9      	subs	r1, r1, r3
 801636c:	b209      	sxth	r1, r1
 801636e:	2900      	cmp	r1, #0
 8016370:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016374:	dd12      	ble.n	801639c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016376:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801637a:	4605      	mov	r5, r0
 801637c:	9b05      	ldr	r3, [sp, #20]
 801637e:	3b01      	subs	r3, #1
 8016380:	9305      	str	r3, [sp, #20]
 8016382:	3e08      	subs	r6, #8
 8016384:	e7c7      	b.n	8016316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016386:	4461      	add	r1, ip
 8016388:	b209      	sxth	r1, r1
 801638a:	4571      	cmp	r1, lr
 801638c:	dc38      	bgt.n	8016400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801638e:	eba2 020c 	sub.w	r2, r2, ip
 8016392:	b212      	sxth	r2, r2
 8016394:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016398:	2a00      	cmp	r2, #0
 801639a:	dcee      	bgt.n	801637a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801639c:	b00f      	add	sp, #60	; 0x3c
 801639e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163a2:	45c8      	cmp	r8, r9
 80163a4:	db2c      	blt.n	8016400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80163a6:	88f3      	ldrh	r3, [r6, #6]
 80163a8:	4499      	add	r9, r3
 80163aa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80163ae:	4498      	add	r8, r3
 80163b0:	fa0f f989 	sxth.w	r9, r9
 80163b4:	fa0f f888 	sxth.w	r8, r8
 80163b8:	45c1      	cmp	r9, r8
 80163ba:	db21      	blt.n	8016400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80163bc:	88b3      	ldrh	r3, [r6, #4]
 80163be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80163c2:	fa1f f28c 	uxth.w	r2, ip
 80163c6:	4413      	add	r3, r2
 80163c8:	b29b      	uxth	r3, r3
 80163ca:	45e6      	cmp	lr, ip
 80163cc:	fa1f f88e 	uxth.w	r8, lr
 80163d0:	fa0f f983 	sxth.w	r9, r3
 80163d4:	db0a      	blt.n	80163ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80163d6:	eba3 0308 	sub.w	r3, r3, r8
 80163da:	1ac9      	subs	r1, r1, r3
 80163dc:	b209      	sxth	r1, r1
 80163de:	2900      	cmp	r1, #0
 80163e0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80163e4:	ddda      	ble.n	801639c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80163e6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80163ea:	e7c6      	b.n	801637a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80163ec:	4441      	add	r1, r8
 80163ee:	b209      	sxth	r1, r1
 80163f0:	4549      	cmp	r1, r9
 80163f2:	dc05      	bgt.n	8016400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80163f4:	eba2 0208 	sub.w	r2, r2, r8
 80163f8:	b212      	sxth	r2, r2
 80163fa:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80163fe:	e7cb      	b.n	8016398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016400:	4607      	mov	r7, r0
 8016402:	e7bb      	b.n	801637c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016404:	2d00      	cmp	r5, #0
 8016406:	d181      	bne.n	801630c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016408:	2f00      	cmp	r7, #0
 801640a:	f000 81dd 	beq.w	80167c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801640e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016412:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016416:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 801641a:	b2b3      	uxth	r3, r6
 801641c:	9305      	str	r3, [sp, #20]
 801641e:	9a05      	ldr	r2, [sp, #20]
 8016420:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016424:	4413      	add	r3, r2
 8016426:	b2ba      	uxth	r2, r7
 8016428:	4492      	add	sl, r2
 801642a:	b29b      	uxth	r3, r3
 801642c:	fa1f fa8a 	uxth.w	sl, sl
 8016430:	fa0f f883 	sxth.w	r8, r3
 8016434:	fa0f f98a 	sxth.w	r9, sl
 8016438:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801643c:	9b04      	ldr	r3, [sp, #16]
 801643e:	2b00      	cmp	r3, #0
 8016440:	d052      	beq.n	80164e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016442:	9903      	ldr	r1, [sp, #12]
 8016444:	4620      	mov	r0, r4
 8016446:	f7ff fcb8 	bl	8015dba <_ZNK8touchgfx4Rect9intersectERKS0_>
 801644a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801644e:	b1c0      	cbz	r0, 8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016450:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016454:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016458:	4576      	cmp	r6, lr
 801645a:	dc22      	bgt.n	80164a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801645c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016460:	44f4      	add	ip, lr
 8016462:	fa0f fc8c 	sxth.w	ip, ip
 8016466:	45e0      	cmp	r8, ip
 8016468:	db1b      	blt.n	80164a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801646a:	428f      	cmp	r7, r1
 801646c:	fa1f fc81 	uxth.w	ip, r1
 8016470:	88e1      	ldrh	r1, [r4, #6]
 8016472:	dc0d      	bgt.n	8016490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016474:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016478:	eba1 010c 	sub.w	r1, r1, ip
 801647c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016480:	80e1      	strh	r1, [r4, #6]
 8016482:	4628      	mov	r0, r5
 8016484:	9904      	ldr	r1, [sp, #16]
 8016486:	3901      	subs	r1, #1
 8016488:	9104      	str	r1, [sp, #16]
 801648a:	3c08      	subs	r4, #8
 801648c:	4605      	mov	r5, r0
 801648e:	e7d3      	b.n	8016438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016490:	4461      	add	r1, ip
 8016492:	b209      	sxth	r1, r1
 8016494:	4549      	cmp	r1, r9
 8016496:	dcf5      	bgt.n	8016484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016498:	eba2 0c0c 	sub.w	ip, r2, ip
 801649c:	f8a4 c006 	strh.w	ip, [r4, #6]
 80164a0:	e7ef      	b.n	8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80164a2:	428f      	cmp	r7, r1
 80164a4:	dcee      	bgt.n	8016484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80164a6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80164aa:	4461      	add	r1, ip
 80164ac:	b209      	sxth	r1, r1
 80164ae:	4589      	cmp	r9, r1
 80164b0:	dbe8      	blt.n	8016484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80164b2:	4576      	cmp	r6, lr
 80164b4:	fa1f fc8e 	uxth.w	ip, lr
 80164b8:	88a1      	ldrh	r1, [r4, #4]
 80164ba:	dc07      	bgt.n	80164cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80164bc:	eba3 0c0c 	sub.w	ip, r3, ip
 80164c0:	eba1 010c 	sub.w	r1, r1, ip
 80164c4:	f8a4 8000 	strh.w	r8, [r4]
 80164c8:	80a1      	strh	r1, [r4, #4]
 80164ca:	e7da      	b.n	8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80164cc:	4461      	add	r1, ip
 80164ce:	b209      	sxth	r1, r1
 80164d0:	4588      	cmp	r8, r1
 80164d2:	dbd7      	blt.n	8016484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80164d4:	9905      	ldr	r1, [sp, #20]
 80164d6:	eba1 0c0c 	sub.w	ip, r1, ip
 80164da:	f8a4 c004 	strh.w	ip, [r4, #4]
 80164de:	e7d0      	b.n	8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80164e0:	2001343a 	.word	0x2001343a
 80164e4:	20013438 	.word	0x20013438
 80164e8:	2d00      	cmp	r5, #0
 80164ea:	f000 816d 	beq.w	80167c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80164ee:	9b06      	ldr	r3, [sp, #24]
 80164f0:	445b      	add	r3, fp
 80164f2:	461c      	mov	r4, r3
 80164f4:	9b02      	ldr	r3, [sp, #8]
 80164f6:	3301      	adds	r3, #1
 80164f8:	f000 8166 	beq.w	80167c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80164fc:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016500:	4629      	mov	r1, r5
 8016502:	9803      	ldr	r0, [sp, #12]
 8016504:	f7ff fccc 	bl	8015ea0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016508:	b120      	cbz	r0, 8016514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801650a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801650e:	9801      	ldr	r0, [sp, #4]
 8016510:	f7ff feb0 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016514:	9903      	ldr	r1, [sp, #12]
 8016516:	4628      	mov	r0, r5
 8016518:	f7ff fc4f 	bl	8015dba <_ZNK8touchgfx4Rect9intersectERKS0_>
 801651c:	2800      	cmp	r0, #0
 801651e:	f000 809c 	beq.w	801665a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016522:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016526:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801652a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801652e:	9309      	str	r3, [sp, #36]	; 0x24
 8016530:	fa1f f189 	uxth.w	r1, r9
 8016534:	eb01 0c03 	add.w	ip, r1, r3
 8016538:	fa1f fa8c 	uxth.w	sl, ip
 801653c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016540:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016544:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016548:	b283      	uxth	r3, r0
 801654a:	eb03 050c 	add.w	r5, r3, ip
 801654e:	b2ad      	uxth	r5, r5
 8016550:	9505      	str	r5, [sp, #20]
 8016552:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016556:	9504      	str	r5, [sp, #16]
 8016558:	4548      	cmp	r0, r9
 801655a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801655e:	f340 8099 	ble.w	8016694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016562:	1a5b      	subs	r3, r3, r1
 8016564:	b29b      	uxth	r3, r3
 8016566:	4596      	cmp	lr, r2
 8016568:	fa0f f08a 	sxth.w	r0, sl
 801656c:	b21e      	sxth	r6, r3
 801656e:	dd2e      	ble.n	80165ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016570:	9f02      	ldr	r7, [sp, #8]
 8016572:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016576:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801657a:	9f04      	ldr	r7, [sp, #16]
 801657c:	1a3f      	subs	r7, r7, r0
 801657e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016582:	fa1f fe8e 	uxth.w	lr, lr
 8016586:	b292      	uxth	r2, r2
 8016588:	ebae 0102 	sub.w	r1, lr, r2
 801658c:	44a6      	add	lr, r4
 801658e:	4402      	add	r2, r0
 8016590:	b289      	uxth	r1, r1
 8016592:	fa0f fe8e 	sxth.w	lr, lr
 8016596:	b212      	sxth	r2, r2
 8016598:	b20d      	sxth	r5, r1
 801659a:	ebae 0202 	sub.w	r2, lr, r2
 801659e:	436f      	muls	r7, r5
 80165a0:	4372      	muls	r2, r6
 80165a2:	4297      	cmp	r7, r2
 80165a4:	db09      	blt.n	80165ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80165a6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80165aa:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80165ae:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80165b2:	449c      	add	ip, r3
 80165b4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80165b8:	e686      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80165ba:	4421      	add	r1, r4
 80165bc:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80165c0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80165c4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80165c8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80165cc:	e67c      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80165ce:	9f04      	ldr	r7, [sp, #16]
 80165d0:	42b8      	cmp	r0, r7
 80165d2:	da27      	bge.n	8016624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80165d4:	9902      	ldr	r1, [sp, #8]
 80165d6:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80165da:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80165de:	eb05 010e 	add.w	r1, r5, lr
 80165e2:	fa1f f881 	uxth.w	r8, r1
 80165e6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80165ea:	4411      	add	r1, r2
 80165ec:	eba1 0108 	sub.w	r1, r1, r8
 80165f0:	b289      	uxth	r1, r1
 80165f2:	fa0f f988 	sxth.w	r9, r8
 80165f6:	eba2 020e 	sub.w	r2, r2, lr
 80165fa:	fa0f f881 	sxth.w	r8, r1
 80165fe:	1a3f      	subs	r7, r7, r0
 8016600:	4372      	muls	r2, r6
 8016602:	fb08 f707 	mul.w	r7, r8, r7
 8016606:	42ba      	cmp	r2, r7
 8016608:	dc06      	bgt.n	8016618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801660a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801660e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016612:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016616:	e7ca      	b.n	80165ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016618:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801661c:	4429      	add	r1, r5
 801661e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016622:	e651      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016624:	9805      	ldr	r0, [sp, #20]
 8016626:	ebaa 0000 	sub.w	r0, sl, r0
 801662a:	b280      	uxth	r0, r0
 801662c:	2d06      	cmp	r5, #6
 801662e:	fa0f fe80 	sxth.w	lr, r0
 8016632:	d817      	bhi.n	8016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016634:	9b04      	ldr	r3, [sp, #16]
 8016636:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801663a:	1c6b      	adds	r3, r5, #1
 801663c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016640:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016644:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016648:	9b01      	ldr	r3, [sp, #4]
 801664a:	9801      	ldr	r0, [sp, #4]
 801664c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016650:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016654:	805a      	strh	r2, [r3, #2]
 8016656:	809e      	strh	r6, [r3, #4]
 8016658:	80d9      	strh	r1, [r3, #6]
 801665a:	9b02      	ldr	r3, [sp, #8]
 801665c:	3b01      	subs	r3, #1
 801665e:	9302      	str	r3, [sp, #8]
 8016660:	3c08      	subs	r4, #8
 8016662:	e747      	b.n	80164f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016664:	9a02      	ldr	r2, [sp, #8]
 8016666:	45b6      	cmp	lr, r6
 8016668:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801666c:	db0d      	blt.n	801668a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801666e:	449c      	add	ip, r3
 8016670:	fa1f fc8c 	uxth.w	ip, ip
 8016674:	445a      	add	r2, fp
 8016676:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801667a:	448c      	add	ip, r1
 801667c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016680:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016684:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016688:	e61e      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801668a:	445a      	add	r2, fp
 801668c:	4484      	add	ip, r0
 801668e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016692:	e78f      	b.n	80165b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016694:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016698:	fa1f f18e 	uxth.w	r1, lr
 801669c:	eb01 0806 	add.w	r8, r1, r6
 80166a0:	b293      	uxth	r3, r2
 80166a2:	fa1f f888 	uxth.w	r8, r8
 80166a6:	9306      	str	r3, [sp, #24]
 80166a8:	fa0f f388 	sxth.w	r3, r8
 80166ac:	9307      	str	r3, [sp, #28]
 80166ae:	9f06      	ldr	r7, [sp, #24]
 80166b0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80166b4:	443b      	add	r3, r7
 80166b6:	b29b      	uxth	r3, r3
 80166b8:	4596      	cmp	lr, r2
 80166ba:	9308      	str	r3, [sp, #32]
 80166bc:	da24      	bge.n	8016708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80166be:	9905      	ldr	r1, [sp, #20]
 80166c0:	eba3 0308 	sub.w	r3, r3, r8
 80166c4:	ebaa 0401 	sub.w	r4, sl, r1
 80166c8:	b2a4      	uxth	r4, r4
 80166ca:	b29b      	uxth	r3, r3
 80166cc:	b225      	sxth	r5, r4
 80166ce:	b219      	sxth	r1, r3
 80166d0:	eba2 020e 	sub.w	r2, r2, lr
 80166d4:	eba9 0000 	sub.w	r0, r9, r0
 80166d8:	436a      	muls	r2, r5
 80166da:	4348      	muls	r0, r1
 80166dc:	4282      	cmp	r2, r0
 80166de:	9a02      	ldr	r2, [sp, #8]
 80166e0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80166e4:	445a      	add	r2, fp
 80166e6:	dc06      	bgt.n	80166f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80166e8:	9b07      	ldr	r3, [sp, #28]
 80166ea:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80166ee:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80166f2:	44a4      	add	ip, r4
 80166f4:	e75e      	b.n	80165b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80166f6:	9904      	ldr	r1, [sp, #16]
 80166f8:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80166fc:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016700:	4433      	add	r3, r6
 8016702:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016706:	e5df      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016708:	9f06      	ldr	r7, [sp, #24]
 801670a:	9b04      	ldr	r3, [sp, #16]
 801670c:	1bc9      	subs	r1, r1, r7
 801670e:	fa0f f78a 	sxth.w	r7, sl
 8016712:	b289      	uxth	r1, r1
 8016714:	429f      	cmp	r7, r3
 8016716:	fa0f fe81 	sxth.w	lr, r1
 801671a:	dd23      	ble.n	8016764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 801671c:	9a05      	ldr	r2, [sp, #20]
 801671e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016722:	9d07      	ldr	r5, [sp, #28]
 8016724:	ebaa 0202 	sub.w	r2, sl, r2
 8016728:	b292      	uxth	r2, r2
 801672a:	eba5 0a03 	sub.w	sl, r5, r3
 801672e:	b214      	sxth	r4, r2
 8016730:	eba9 0000 	sub.w	r0, r9, r0
 8016734:	9b02      	ldr	r3, [sp, #8]
 8016736:	fb0e f000 	mul.w	r0, lr, r0
 801673a:	fb04 fa0a 	mul.w	sl, r4, sl
 801673e:	00db      	lsls	r3, r3, #3
 8016740:	4550      	cmp	r0, sl
 8016742:	445b      	add	r3, fp
 8016744:	db03      	blt.n	801674e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016746:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 801674a:	4494      	add	ip, r2
 801674c:	e732      	b.n	80165b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801674e:	9a04      	ldr	r2, [sp, #16]
 8016750:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016754:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016758:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 801675c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016760:	4431      	add	r1, r6
 8016762:	e75c      	b.n	801661e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016764:	9b08      	ldr	r3, [sp, #32]
 8016766:	eba3 0308 	sub.w	r3, r3, r8
 801676a:	b29b      	uxth	r3, r3
 801676c:	2d06      	cmp	r5, #6
 801676e:	b218      	sxth	r0, r3
 8016770:	d813      	bhi.n	801679a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016772:	9b07      	ldr	r3, [sp, #28]
 8016774:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016778:	1c6b      	adds	r3, r5, #1
 801677a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801677e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016782:	9b01      	ldr	r3, [sp, #4]
 8016784:	9901      	ldr	r1, [sp, #4]
 8016786:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801678a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801678e:	805a      	strh	r2, [r3, #2]
 8016790:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016792:	809a      	strh	r2, [r3, #4]
 8016794:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016798:	e75f      	b.n	801665a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801679a:	9c02      	ldr	r4, [sp, #8]
 801679c:	4570      	cmp	r0, lr
 801679e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80167a2:	db0d      	blt.n	80167c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80167a4:	4431      	add	r1, r6
 80167a6:	9b06      	ldr	r3, [sp, #24]
 80167a8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80167ac:	b289      	uxth	r1, r1
 80167ae:	445c      	add	r4, fp
 80167b0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80167b4:	4419      	add	r1, r3
 80167b6:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80167ba:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80167be:	e583      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80167c0:	445c      	add	r4, fp
 80167c2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80167c6:	e79b      	b.n	8016700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80167c8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80167cc:	1e65      	subs	r5, r4, #1
 80167ce:	b2ad      	uxth	r5, r5
 80167d0:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80167d4:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80167d8:	42b5      	cmp	r5, r6
 80167da:	d044      	beq.n	8016866 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80167dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80167e0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80167e4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80167e8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80167ec:	4282      	cmp	r2, r0
 80167ee:	d11f      	bne.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80167f0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80167f4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80167f8:	459c      	cmp	ip, r3
 80167fa:	d119      	bne.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80167fc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016800:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016804:	19d8      	adds	r0, r3, r7
 8016806:	b200      	sxth	r0, r0
 8016808:	4288      	cmp	r0, r1
 801680a:	d109      	bne.n	8016820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801680c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016810:	4413      	add	r3, r2
 8016812:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016816:	4629      	mov	r1, r5
 8016818:	9801      	ldr	r0, [sp, #4]
 801681a:	f7ff fd2b 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801681e:	e003      	b.n	8016828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016820:	4411      	add	r1, r2
 8016822:	b209      	sxth	r1, r1
 8016824:	42b9      	cmp	r1, r7
 8016826:	d0f3      	beq.n	8016810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016828:	3d01      	subs	r5, #1
 801682a:	b2ad      	uxth	r5, r5
 801682c:	3c08      	subs	r4, #8
 801682e:	e7d3      	b.n	80167d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016830:	42b9      	cmp	r1, r7
 8016832:	d1f9      	bne.n	8016828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016834:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016838:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801683c:	4299      	cmp	r1, r3
 801683e:	d1f3      	bne.n	8016828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016840:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016844:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016848:	181f      	adds	r7, r3, r0
 801684a:	b23f      	sxth	r7, r7
 801684c:	42ba      	cmp	r2, r7
 801684e:	d105      	bne.n	801685c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016850:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8016854:	440b      	add	r3, r1
 8016856:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801685a:	e7dc      	b.n	8016816 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 801685c:	440a      	add	r2, r1
 801685e:	b212      	sxth	r2, r2
 8016860:	4290      	cmp	r0, r2
 8016862:	d1e1      	bne.n	8016828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016864:	e7f6      	b.n	8016854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016866:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801686a:	2e07      	cmp	r6, #7
 801686c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016870:	d812      	bhi.n	8016898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016872:	1c75      	adds	r5, r6, #1
 8016874:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016878:	9d01      	ldr	r5, [sp, #4]
 801687a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801687e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016882:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016886:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801688a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801688e:	442c      	add	r4, r5
 8016890:	8061      	strh	r1, [r4, #2]
 8016892:	80a2      	strh	r2, [r4, #4]
 8016894:	80e3      	strh	r3, [r4, #6]
 8016896:	e581      	b.n	801639c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016898:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801689c:	3e01      	subs	r6, #1
 801689e:	445c      	add	r4, fp
 80168a0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80168a4:	f04f 37ff 	mov.w	r7, #4294967295
 80168a8:	2500      	movs	r5, #0
 80168aa:	9305      	str	r3, [sp, #20]
 80168ac:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80168b0:	9302      	str	r3, [sp, #8]
 80168b2:	1e72      	subs	r2, r6, #1
 80168b4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80168b8:	9304      	str	r3, [sp, #16]
 80168ba:	4691      	mov	r9, r2
 80168bc:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80168c0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80168c4:	bf14      	ite	ne
 80168c6:	9905      	ldrne	r1, [sp, #20]
 80168c8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80168cc:	6818      	ldr	r0, [r3, #0]
 80168ce:	9207      	str	r2, [sp, #28]
 80168d0:	bf18      	it	ne
 80168d2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80168d6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80168da:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80168de:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80168e2:	9306      	str	r3, [sp, #24]
 80168e4:	fb18 f801 	smulbb	r8, r8, r1
 80168e8:	6859      	ldr	r1, [r3, #4]
 80168ea:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80168ee:	4671      	mov	r1, lr
 80168f0:	a80c      	add	r0, sp, #48	; 0x30
 80168f2:	f7ff fafb 	bl	8015eec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80168f6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80168fa:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80168fe:	9b04      	ldr	r3, [sp, #16]
 8016900:	9a02      	ldr	r2, [sp, #8]
 8016902:	fb10 f001 	smulbb	r0, r0, r1
 8016906:	fb02 8803 	mla	r8, r2, r3, r8
 801690a:	eba0 0108 	sub.w	r1, r0, r8
 801690e:	f04f 0c08 	mov.w	ip, #8
 8016912:	fb90 f0fc 	sdiv	r0, r0, ip
 8016916:	4288      	cmp	r0, r1
 8016918:	dc20      	bgt.n	801695c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801691a:	4551      	cmp	r1, sl
 801691c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016920:	da03      	bge.n	801692a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8016922:	b1d9      	cbz	r1, 801695c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016924:	468a      	mov	sl, r1
 8016926:	464f      	mov	r7, r9
 8016928:	4635      	mov	r5, r6
 801692a:	f109 39ff 	add.w	r9, r9, #4294967295
 801692e:	f119 0f02 	cmn.w	r9, #2
 8016932:	d1c5      	bne.n	80168c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016934:	4616      	mov	r6, r2
 8016936:	3201      	adds	r2, #1
 8016938:	f1a4 0408 	sub.w	r4, r4, #8
 801693c:	d1b6      	bne.n	80168ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 801693e:	9b01      	ldr	r3, [sp, #4]
 8016940:	b2ac      	uxth	r4, r5
 8016942:	00ed      	lsls	r5, r5, #3
 8016944:	1958      	adds	r0, r3, r5
 8016946:	1c7b      	adds	r3, r7, #1
 8016948:	d10b      	bne.n	8016962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 801694a:	4601      	mov	r1, r0
 801694c:	9803      	ldr	r0, [sp, #12]
 801694e:	f7ff facd 	bl	8015eec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016952:	4621      	mov	r1, r4
 8016954:	9801      	ldr	r0, [sp, #4]
 8016956:	f7ff fc8d 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801695a:	e4b5      	b.n	80162c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801695c:	464f      	mov	r7, r9
 801695e:	4635      	mov	r5, r6
 8016960:	e7ed      	b.n	801693e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016962:	9b01      	ldr	r3, [sp, #4]
 8016964:	00ff      	lsls	r7, r7, #3
 8016966:	19d9      	adds	r1, r3, r7
 8016968:	f7ff fac0 	bl	8015eec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801696c:	9b03      	ldr	r3, [sp, #12]
 801696e:	cb03      	ldmia	r3!, {r0, r1}
 8016970:	445f      	add	r7, fp
 8016972:	445d      	add	r5, fp
 8016974:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016978:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801697c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016980:	9b03      	ldr	r3, [sp, #12]
 8016982:	6869      	ldr	r1, [r5, #4]
 8016984:	c303      	stmia	r3!, {r0, r1}
 8016986:	e7e4      	b.n	8016952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016988 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801698c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016990:	b09b      	sub	sp, #108	; 0x6c
 8016992:	4604      	mov	r4, r0
 8016994:	4630      	mov	r0, r6
 8016996:	f7fa fa20 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801699a:	4605      	mov	r5, r0
 801699c:	b948      	cbnz	r0, 80169b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801699e:	6823      	ldr	r3, [r4, #0]
 80169a0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80169a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80169a6:	4620      	mov	r0, r4
 80169a8:	4798      	blx	r3
 80169aa:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80169ae:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80169b2:	4bc6      	ldr	r3, [pc, #792]	; (8016ccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80169b4:	681b      	ldr	r3, [r3, #0]
 80169b6:	2b00      	cmp	r3, #0
 80169b8:	d03f      	beq.n	8016a3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80169ba:	4dc5      	ldr	r5, [pc, #788]	; (8016cd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80169bc:	4628      	mov	r0, r5
 80169be:	f7fa fa0c 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 80169c2:	4606      	mov	r6, r0
 80169c4:	2800      	cmp	r0, #0
 80169c6:	d138      	bne.n	8016a3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80169c8:	4628      	mov	r0, r5
 80169ca:	f7ff f907 	bl	8015bdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80169ce:	6823      	ldr	r3, [r4, #0]
 80169d0:	6829      	ldr	r1, [r5, #0]
 80169d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80169d4:	686a      	ldr	r2, [r5, #4]
 80169d6:	4620      	mov	r0, r4
 80169d8:	4798      	blx	r3
 80169da:	802e      	strh	r6, [r5, #0]
 80169dc:	806e      	strh	r6, [r5, #2]
 80169de:	80ae      	strh	r6, [r5, #4]
 80169e0:	80ee      	strh	r6, [r5, #6]
 80169e2:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80169e6:	4dbb      	ldr	r5, [pc, #748]	; (8016cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80169e8:	4640      	mov	r0, r8
 80169ea:	f7ff fbeb 	bl	80161c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80169ee:	882e      	ldrh	r6, [r5, #0]
 80169f0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80169f4:	4633      	mov	r3, r6
 80169f6:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80169fa:	42bb      	cmp	r3, r7
 80169fc:	d224      	bcs.n	8016a48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80169fe:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8016a02:	2907      	cmp	r1, #7
 8016a04:	d816      	bhi.n	8016a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8016a06:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016a0a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016a0e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8016a12:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016a16:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016a1a:	1c4a      	adds	r2, r1, #1
 8016a1c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016a20:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8016a24:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016a28:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016a2c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016a30:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016a34:	3301      	adds	r3, #1
 8016a36:	b29b      	uxth	r3, r3
 8016a38:	e7df      	b.n	80169fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016a3a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016a3e:	2b00      	cmp	r3, #0
 8016a40:	d1cf      	bne.n	80169e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8016a42:	b01b      	add	sp, #108	; 0x6c
 8016a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a48:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016a4c:	42b3      	cmp	r3, r6
 8016a4e:	d90c      	bls.n	8016a6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016a50:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016a54:	6822      	ldr	r2, [r4, #0]
 8016a56:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016a5a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016a5c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016a60:	4620      	mov	r0, r4
 8016a62:	3601      	adds	r6, #1
 8016a64:	47b8      	blx	r7
 8016a66:	b2b6      	uxth	r6, r6
 8016a68:	e7ee      	b.n	8016a48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016a6a:	4a9b      	ldr	r2, [pc, #620]	; (8016cd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016a6c:	6813      	ldr	r3, [r2, #0]
 8016a6e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016a72:	2b01      	cmp	r3, #1
 8016a74:	4691      	mov	r9, r2
 8016a76:	f040 80e2 	bne.w	8016c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016a7a:	8829      	ldrh	r1, [r5, #0]
 8016a7c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016a80:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8016a84:	33ae      	adds	r3, #174	; 0xae
 8016a86:	2600      	movs	r6, #0
 8016a88:	428f      	cmp	r7, r1
 8016a8a:	f103 0308 	add.w	r3, r3, #8
 8016a8e:	dd0a      	ble.n	8016aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016a90:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8016a94:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016a98:	4402      	add	r2, r0
 8016a9a:	b212      	sxth	r2, r2
 8016a9c:	4296      	cmp	r6, r2
 8016a9e:	bfb8      	it	lt
 8016aa0:	4616      	movlt	r6, r2
 8016aa2:	3101      	adds	r1, #1
 8016aa4:	e7f0      	b.n	8016a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8016aa6:	4b8d      	ldr	r3, [pc, #564]	; (8016cdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016aa8:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016cd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016aac:	881b      	ldrh	r3, [r3, #0]
 8016aae:	2b0f      	cmp	r3, #15
 8016ab0:	bf88      	it	hi
 8016ab2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8016ab6:	f04f 0300 	mov.w	r3, #0
 8016aba:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016abe:	bf98      	it	ls
 8016ac0:	f04f 0b01 	movls.w	fp, #1
 8016ac4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016ac8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016acc:	4b82      	ldr	r3, [pc, #520]	; (8016cd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016ace:	4438      	add	r0, r7
 8016ad0:	b207      	sxth	r7, r0
 8016ad2:	6818      	ldr	r0, [r3, #0]
 8016ad4:	42b7      	cmp	r7, r6
 8016ad6:	6803      	ldr	r3, [r0, #0]
 8016ad8:	f280 8083 	bge.w	8016be2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016adc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016ae0:	4798      	blx	r3
 8016ae2:	eb07 030b 	add.w	r3, r7, fp
 8016ae6:	4298      	cmp	r0, r3
 8016ae8:	da07      	bge.n	8016afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016aea:	42b0      	cmp	r0, r6
 8016aec:	da05      	bge.n	8016afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016aee:	4287      	cmp	r7, r0
 8016af0:	dd6c      	ble.n	8016bcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016af2:	2f00      	cmp	r7, #0
 8016af4:	dd6a      	ble.n	8016bcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016af6:	4630      	mov	r0, r6
 8016af8:	e004      	b.n	8016b04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016afa:	4287      	cmp	r7, r0
 8016afc:	dcfb      	bgt.n	8016af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016afe:	42b0      	cmp	r0, r6
 8016b00:	bfa8      	it	ge
 8016b02:	4630      	movge	r0, r6
 8016b04:	4b76      	ldr	r3, [pc, #472]	; (8016ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016b06:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016b0a:	1bc0      	subs	r0, r0, r7
 8016b0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016b10:	882f      	ldrh	r7, [r5, #0]
 8016b12:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016b16:	2200      	movs	r2, #0
 8016b18:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016b1c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016b20:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016b24:	42bb      	cmp	r3, r7
 8016b26:	d9cd      	bls.n	8016ac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016b28:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016b2c:	ab07      	add	r3, sp, #28
 8016b2e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016b32:	6851      	ldr	r1, [r2, #4]
 8016b34:	c303      	stmia	r3!, {r0, r1}
 8016b36:	a905      	add	r1, sp, #20
 8016b38:	a807      	add	r0, sp, #28
 8016b3a:	f7ff f93e 	bl	8015dba <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b3e:	2800      	cmp	r0, #0
 8016b40:	d04c      	beq.n	8016bdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8016b42:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8016b46:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016b4a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016b4e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8016b52:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016b56:	9302      	str	r3, [sp, #8]
 8016b58:	4686      	mov	lr, r0
 8016b5a:	4290      	cmp	r0, r2
 8016b5c:	4450      	add	r0, sl
 8016b5e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8016b62:	bfb8      	it	lt
 8016b64:	4696      	movlt	lr, r2
 8016b66:	4452      	add	r2, sl
 8016b68:	4299      	cmp	r1, r3
 8016b6a:	b280      	uxth	r0, r0
 8016b6c:	b292      	uxth	r2, r2
 8016b6e:	468c      	mov	ip, r1
 8016b70:	fa0f fa82 	sxth.w	sl, r2
 8016b74:	bfb8      	it	lt
 8016b76:	469c      	movlt	ip, r3
 8016b78:	b203      	sxth	r3, r0
 8016b7a:	4553      	cmp	r3, sl
 8016b7c:	bfb8      	it	lt
 8016b7e:	4602      	movlt	r2, r0
 8016b80:	eba2 020e 	sub.w	r2, r2, lr
 8016b84:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016b88:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016b8c:	9b02      	ldr	r3, [sp, #8]
 8016b8e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8016b92:	4411      	add	r1, r2
 8016b94:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016b98:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016b9c:	4413      	add	r3, r2
 8016b9e:	b289      	uxth	r1, r1
 8016ba0:	b29b      	uxth	r3, r3
 8016ba2:	b208      	sxth	r0, r1
 8016ba4:	b21a      	sxth	r2, r3
 8016ba6:	4290      	cmp	r0, r2
 8016ba8:	bfb8      	it	lt
 8016baa:	460b      	movlt	r3, r1
 8016bac:	eba3 030c 	sub.w	r3, r3, ip
 8016bb0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016bb4:	a807      	add	r0, sp, #28
 8016bb6:	f7fa f910 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bba:	b920      	cbnz	r0, 8016bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016bbc:	6823      	ldr	r3, [r4, #0]
 8016bbe:	a907      	add	r1, sp, #28
 8016bc0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016bc2:	4620      	mov	r0, r4
 8016bc4:	4798      	blx	r3
 8016bc6:	3701      	adds	r7, #1
 8016bc8:	b2bf      	uxth	r7, r7
 8016bca:	e7a9      	b.n	8016b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016bcc:	f8d9 0000 	ldr.w	r0, [r9]
 8016bd0:	6803      	ldr	r3, [r0, #0]
 8016bd2:	2101      	movs	r1, #1
 8016bd4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016bd8:	4798      	blx	r3
 8016bda:	e773      	b.n	8016ac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016bdc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016be0:	e7e8      	b.n	8016bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8016be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016be4:	4798      	blx	r3
 8016be6:	4b3f      	ldr	r3, [pc, #252]	; (8016ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016be8:	781b      	ldrb	r3, [r3, #0]
 8016bea:	2b00      	cmp	r3, #0
 8016bec:	f43f af29 	beq.w	8016a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016bf0:	2300      	movs	r3, #0
 8016bf2:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8016bf6:	882b      	ldrh	r3, [r5, #0]
 8016bf8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016bfc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016c00:	42ab      	cmp	r3, r5
 8016c02:	f4bf af1e 	bcs.w	8016a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016c06:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016c0a:	2907      	cmp	r1, #7
 8016c0c:	d814      	bhi.n	8016c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016c0e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016c12:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016c16:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016c1a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016c1e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016c22:	1c4a      	adds	r2, r1, #1
 8016c24:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016c28:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016c2c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016c30:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016c34:	8097      	strh	r7, [r2, #4]
 8016c36:	80d6      	strh	r6, [r2, #6]
 8016c38:	3301      	adds	r3, #1
 8016c3a:	b29b      	uxth	r3, r3
 8016c3c:	e7e0      	b.n	8016c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016c3e:	2b02      	cmp	r3, #2
 8016c40:	f040 8133 	bne.w	8016eaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8016c44:	4b28      	ldr	r3, [pc, #160]	; (8016ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8016c46:	781b      	ldrb	r3, [r3, #0]
 8016c48:	2b01      	cmp	r3, #1
 8016c4a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016c4e:	f000 8098 	beq.w	8016d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016c52:	882a      	ldrh	r2, [r5, #0]
 8016c54:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016c58:	3201      	adds	r2, #1
 8016c5a:	b292      	uxth	r2, r2
 8016c5c:	2900      	cmp	r1, #0
 8016c5e:	d0c2      	beq.n	8016be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016c60:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8016c64:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016c68:	441e      	add	r6, r3
 8016c6a:	b236      	sxth	r6, r6
 8016c6c:	4694      	mov	ip, r2
 8016c6e:	f04f 0900 	mov.w	r9, #0
 8016c72:	fa1f f38c 	uxth.w	r3, ip
 8016c76:	4299      	cmp	r1, r3
 8016c78:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016c7c:	f240 80bf 	bls.w	8016dfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016c80:	4427      	add	r7, r4
 8016c82:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016c86:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016c8a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016c8e:	4283      	cmp	r3, r0
 8016c90:	f340 80a1 	ble.w	8016dd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016c94:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016c98:	4406      	add	r6, r0
 8016c9a:	b236      	sxth	r6, r6
 8016c9c:	429e      	cmp	r6, r3
 8016c9e:	bfa8      	it	ge
 8016ca0:	461e      	movge	r6, r3
 8016ca2:	46e1      	mov	r9, ip
 8016ca4:	f10c 0c01 	add.w	ip, ip, #1
 8016ca8:	e7e3      	b.n	8016c72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016caa:	d10a      	bne.n	8016cc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016cac:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016cb0:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8016cb4:	4562      	cmp	r2, ip
 8016cb6:	bfb8      	it	lt
 8016cb8:	4662      	movlt	r2, ip
 8016cba:	4288      	cmp	r0, r1
 8016cbc:	bfb8      	it	lt
 8016cbe:	461f      	movlt	r7, r3
 8016cc0:	e087      	b.n	8016dd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016cc2:	428a      	cmp	r2, r1
 8016cc4:	bfb8      	it	lt
 8016cc6:	460a      	movlt	r2, r1
 8016cc8:	e083      	b.n	8016dd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016cca:	bf00      	nop
 8016ccc:	20013484 	.word	0x20013484
 8016cd0:	20013490 	.word	0x20013490
 8016cd4:	20000088 	.word	0x20000088
 8016cd8:	20013444 	.word	0x20013444
 8016cdc:	2001343a 	.word	0x2001343a
 8016ce0:	20013438 	.word	0x20013438
 8016ce4:	20013442 	.word	0x20013442
 8016ce8:	2001343c 	.word	0x2001343c
 8016cec:	19a1      	adds	r1, r4, r6
 8016cee:	ab07      	add	r3, sp, #28
 8016cf0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016cf4:	6849      	ldr	r1, [r1, #4]
 8016cf6:	c303      	stmia	r3!, {r0, r1}
 8016cf8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016cfc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016d00:	2b13      	cmp	r3, #19
 8016d02:	bfd8      	it	le
 8016d04:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016d08:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016d0c:	440b      	add	r3, r1
 8016d0e:	1a9b      	subs	r3, r3, r2
 8016d10:	a807      	add	r0, sp, #28
 8016d12:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016d16:	f7fe ff7b 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d1a:	a807      	add	r0, sp, #28
 8016d1c:	f7fa f85d 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d20:	bb78      	cbnz	r0, 8016d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016d22:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016d26:	f8d9 0000 	ldr.w	r0, [r9]
 8016d2a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016d2e:	f8d0 e000 	ldr.w	lr, [r0]
 8016d32:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016d36:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016d3a:	f1bc 0f14 	cmp.w	ip, #20
 8016d3e:	bfa8      	it	ge
 8016d40:	f04f 0c14 	movge.w	ip, #20
 8016d44:	fa1f fc8c 	uxth.w	ip, ip
 8016d48:	f8cd c000 	str.w	ip, [sp]
 8016d4c:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016d50:	47d8      	blx	fp
 8016d52:	4683      	mov	fp, r0
 8016d54:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016d58:	a807      	add	r0, sp, #28
 8016d5a:	f7fe ff3f 	bl	8015bdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016d5e:	6823      	ldr	r3, [r4, #0]
 8016d60:	4426      	add	r6, r4
 8016d62:	4620      	mov	r0, r4
 8016d64:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016d66:	a907      	add	r1, sp, #28
 8016d68:	4798      	blx	r3
 8016d6a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016d6e:	eba0 000b 	sub.w	r0, r0, fp
 8016d72:	b200      	sxth	r0, r0
 8016d74:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016d78:	b918      	cbnz	r0, 8016d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016d7a:	b2b9      	uxth	r1, r7
 8016d7c:	4650      	mov	r0, sl
 8016d7e:	f7ff fa79 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d82:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016d86:	f1bb 0f00 	cmp.w	fp, #0
 8016d8a:	f43f af2c 	beq.w	8016be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016d8e:	882b      	ldrh	r3, [r5, #0]
 8016d90:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016d94:	3301      	adds	r3, #1
 8016d96:	b29b      	uxth	r3, r3
 8016d98:	2700      	movs	r7, #0
 8016d9a:	b299      	uxth	r1, r3
 8016d9c:	458b      	cmp	fp, r1
 8016d9e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016da2:	d9a3      	bls.n	8016cec <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016da4:	4426      	add	r6, r4
 8016da6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016daa:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016dae:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016db2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016db6:	4408      	add	r0, r1
 8016db8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016dbc:	4461      	add	r1, ip
 8016dbe:	b200      	sxth	r0, r0
 8016dc0:	b209      	sxth	r1, r1
 8016dc2:	4288      	cmp	r0, r1
 8016dc4:	f6bf af71 	bge.w	8016caa <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016dc8:	4584      	cmp	ip, r0
 8016dca:	4662      	mov	r2, ip
 8016dcc:	461f      	mov	r7, r3
 8016dce:	bfb8      	it	lt
 8016dd0:	4602      	movlt	r2, r0
 8016dd2:	3301      	adds	r3, #1
 8016dd4:	e7e1      	b.n	8016d9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016dd6:	d10e      	bne.n	8016df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016dd8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016ddc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016de0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016de4:	4473      	add	r3, lr
 8016de6:	b21b      	sxth	r3, r3
 8016de8:	429e      	cmp	r6, r3
 8016dea:	bfa8      	it	ge
 8016dec:	461e      	movge	r6, r3
 8016dee:	4287      	cmp	r7, r0
 8016df0:	bfb8      	it	lt
 8016df2:	46e1      	movlt	r9, ip
 8016df4:	e756      	b.n	8016ca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016df6:	4286      	cmp	r6, r0
 8016df8:	bfa8      	it	ge
 8016dfa:	4606      	movge	r6, r0
 8016dfc:	e752      	b.n	8016ca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016dfe:	eb0a 0007 	add.w	r0, sl, r7
 8016e02:	4427      	add	r7, r4
 8016e04:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016e08:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016e0c:	f1bb 0f13 	cmp.w	fp, #19
 8016e10:	bfde      	ittt	le
 8016e12:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016e16:	445e      	addle	r6, fp
 8016e18:	b236      	sxthle	r6, r6
 8016e1a:	f7f9 ffde 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8016e1e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016e22:	2800      	cmp	r0, #0
 8016e24:	f47f af1a 	bne.w	8016c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016e28:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016e2c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016e30:	482a      	ldr	r0, [pc, #168]	; (8016edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016e32:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016e36:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016e3a:	6800      	ldr	r0, [r0, #0]
 8016e3c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016e40:	1ab6      	subs	r6, r6, r2
 8016e42:	2e14      	cmp	r6, #20
 8016e44:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016e48:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016e4c:	bfa8      	it	ge
 8016e4e:	2614      	movge	r6, #20
 8016e50:	f8d0 c000 	ldr.w	ip, [r0]
 8016e54:	b2b6      	uxth	r6, r6
 8016e56:	fa1f fb8b 	uxth.w	fp, fp
 8016e5a:	455e      	cmp	r6, fp
 8016e5c:	bf94      	ite	ls
 8016e5e:	9600      	strls	r6, [sp, #0]
 8016e60:	f8cd b000 	strhi.w	fp, [sp]
 8016e64:	b292      	uxth	r2, r2
 8016e66:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016e6a:	b29b      	uxth	r3, r3
 8016e6c:	b289      	uxth	r1, r1
 8016e6e:	47b0      	blx	r6
 8016e70:	6823      	ldr	r3, [r4, #0]
 8016e72:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016e76:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016e78:	a907      	add	r1, sp, #28
 8016e7a:	4620      	mov	r0, r4
 8016e7c:	4798      	blx	r3
 8016e7e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016e82:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016e86:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016e8a:	1a5b      	subs	r3, r3, r1
 8016e8c:	440a      	add	r2, r1
 8016e8e:	b21b      	sxth	r3, r3
 8016e90:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016e94:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016e98:	2b00      	cmp	r3, #0
 8016e9a:	f47f aeda 	bne.w	8016c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016e9e:	fa1f f189 	uxth.w	r1, r9
 8016ea2:	4650      	mov	r0, sl
 8016ea4:	f7ff f9e6 	bl	8016274 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016ea8:	e6d3      	b.n	8016c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016eaa:	882e      	ldrh	r6, [r5, #0]
 8016eac:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016eb0:	42b3      	cmp	r3, r6
 8016eb2:	f67f ae98 	bls.w	8016be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016eb6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016eba:	ab07      	add	r3, sp, #28
 8016ebc:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016ec0:	6851      	ldr	r1, [r2, #4]
 8016ec2:	c303      	stmia	r3!, {r0, r1}
 8016ec4:	a807      	add	r0, sp, #28
 8016ec6:	f7f9 ff88 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 8016eca:	b920      	cbnz	r0, 8016ed6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016ecc:	6823      	ldr	r3, [r4, #0]
 8016ece:	a907      	add	r1, sp, #28
 8016ed0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016ed2:	4620      	mov	r0, r4
 8016ed4:	4798      	blx	r3
 8016ed6:	3601      	adds	r6, #1
 8016ed8:	b2b6      	uxth	r6, r6
 8016eda:	e7e7      	b.n	8016eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016edc:	20013444 	.word	0x20013444

08016ee0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016ee0:	4b03      	ldr	r3, [pc, #12]	; (8016ef0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016ee2:	2200      	movs	r2, #0
 8016ee4:	801a      	strh	r2, [r3, #0]
 8016ee6:	805a      	strh	r2, [r3, #2]
 8016ee8:	809a      	strh	r2, [r3, #4]
 8016eea:	80da      	strh	r2, [r3, #6]
 8016eec:	4770      	bx	lr
 8016eee:	bf00      	nop
 8016ef0:	20013490 	.word	0x20013490

08016ef4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ef8:	4606      	mov	r6, r0
 8016efa:	b09d      	sub	sp, #116	; 0x74
 8016efc:	a803      	add	r0, sp, #12
 8016efe:	4614      	mov	r4, r2
 8016f00:	468a      	mov	sl, r1
 8016f02:	461d      	mov	r5, r3
 8016f04:	f000 ff08 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 8016f08:	6833      	ldr	r3, [r6, #0]
 8016f0a:	4630      	mov	r0, r6
 8016f0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016f0e:	4798      	blx	r3
 8016f10:	6833      	ldr	r3, [r6, #0]
 8016f12:	4607      	mov	r7, r0
 8016f14:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016f16:	4630      	mov	r0, r6
 8016f18:	4798      	blx	r3
 8016f1a:	462a      	mov	r2, r5
 8016f1c:	9000      	str	r0, [sp, #0]
 8016f1e:	4621      	mov	r1, r4
 8016f20:	463b      	mov	r3, r7
 8016f22:	a803      	add	r0, sp, #12
 8016f24:	f000 ff53 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f28:	2500      	movs	r5, #0
 8016f2a:	462c      	mov	r4, r5
 8016f2c:	46a9      	mov	r9, r5
 8016f2e:	46a8      	mov	r8, r5
 8016f30:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016f34:	2300      	movs	r3, #0
 8016f36:	9302      	str	r3, [sp, #8]
 8016f38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016f3c:	429c      	cmp	r4, r3
 8016f3e:	d002      	beq.n	8016f46 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016f40:	455c      	cmp	r4, fp
 8016f42:	bf18      	it	ne
 8016f44:	4625      	movne	r5, r4
 8016f46:	ab02      	add	r3, sp, #8
 8016f48:	4632      	mov	r2, r6
 8016f4a:	4651      	mov	r1, sl
 8016f4c:	a803      	add	r0, sp, #12
 8016f4e:	f001 fa41 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016f52:	4604      	mov	r4, r0
 8016f54:	b108      	cbz	r0, 8016f5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016f56:	280a      	cmp	r0, #10
 8016f58:	d10a      	bne.n	8016f70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016f5a:	45c1      	cmp	r9, r8
 8016f5c:	bf38      	it	cc
 8016f5e:	46c1      	movcc	r9, r8
 8016f60:	f04f 0800 	mov.w	r8, #0
 8016f64:	2c00      	cmp	r4, #0
 8016f66:	d1e5      	bne.n	8016f34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016f68:	4648      	mov	r0, r9
 8016f6a:	b01d      	add	sp, #116	; 0x74
 8016f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f70:	9a02      	ldr	r2, [sp, #8]
 8016f72:	2a00      	cmp	r2, #0
 8016f74:	d0de      	beq.n	8016f34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016f76:	7b57      	ldrb	r7, [r2, #13]
 8016f78:	6833      	ldr	r3, [r6, #0]
 8016f7a:	8894      	ldrh	r4, [r2, #4]
 8016f7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016f7e:	007f      	lsls	r7, r7, #1
 8016f80:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016f84:	7a97      	ldrb	r7, [r2, #10]
 8016f86:	4629      	mov	r1, r5
 8016f88:	4307      	orrs	r7, r0
 8016f8a:	4630      	mov	r0, r6
 8016f8c:	4798      	blx	r3
 8016f8e:	4438      	add	r0, r7
 8016f90:	4480      	add	r8, r0
 8016f92:	fa1f f888 	uxth.w	r8, r8
 8016f96:	e7e5      	b.n	8016f64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016f98 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016f98:	b508      	push	{r3, lr}
 8016f9a:	6803      	ldr	r3, [r0, #0]
 8016f9c:	68db      	ldr	r3, [r3, #12]
 8016f9e:	4798      	blx	r3
 8016fa0:	b128      	cbz	r0, 8016fae <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016fa2:	7b43      	ldrb	r3, [r0, #13]
 8016fa4:	7a80      	ldrb	r0, [r0, #10]
 8016fa6:	005b      	lsls	r3, r3, #1
 8016fa8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016fac:	4318      	orrs	r0, r3
 8016fae:	bd08      	pop	{r3, pc}

08016fb0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016fb0:	b40e      	push	{r1, r2, r3}
 8016fb2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016fb4:	b09e      	sub	sp, #120	; 0x78
 8016fb6:	ab23      	add	r3, sp, #140	; 0x8c
 8016fb8:	4605      	mov	r5, r0
 8016fba:	f853 4b04 	ldr.w	r4, [r3], #4
 8016fbe:	9303      	str	r3, [sp, #12]
 8016fc0:	a805      	add	r0, sp, #20
 8016fc2:	f000 fea9 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 8016fc6:	682b      	ldr	r3, [r5, #0]
 8016fc8:	4628      	mov	r0, r5
 8016fca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016fcc:	4798      	blx	r3
 8016fce:	682b      	ldr	r3, [r5, #0]
 8016fd0:	4606      	mov	r6, r0
 8016fd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016fd4:	4628      	mov	r0, r5
 8016fd6:	4798      	blx	r3
 8016fd8:	4633      	mov	r3, r6
 8016fda:	ae1e      	add	r6, sp, #120	; 0x78
 8016fdc:	4621      	mov	r1, r4
 8016fde:	9000      	str	r0, [sp, #0]
 8016fe0:	9a03      	ldr	r2, [sp, #12]
 8016fe2:	2400      	movs	r4, #0
 8016fe4:	a805      	add	r0, sp, #20
 8016fe6:	f000 fef2 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016fea:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016fee:	462a      	mov	r2, r5
 8016ff0:	4633      	mov	r3, r6
 8016ff2:	4621      	mov	r1, r4
 8016ff4:	a805      	add	r0, sp, #20
 8016ff6:	f001 f9ed 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ffa:	b1f0      	cbz	r0, 801703a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016ffc:	280a      	cmp	r0, #10
 8016ffe:	d018      	beq.n	8017032 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017000:	9f04      	ldr	r7, [sp, #16]
 8017002:	b1b7      	cbz	r7, 8017032 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017004:	7b78      	ldrb	r0, [r7, #13]
 8017006:	7a3b      	ldrb	r3, [r7, #8]
 8017008:	88ea      	ldrh	r2, [r5, #6]
 801700a:	00c1      	lsls	r1, r0, #3
 801700c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017010:	4319      	orrs	r1, r3
 8017012:	0643      	lsls	r3, r0, #25
 8017014:	bf44      	itt	mi
 8017016:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801701a:	b219      	sxthmi	r1, r3
 801701c:	0100      	lsls	r0, r0, #4
 801701e:	79fb      	ldrb	r3, [r7, #7]
 8017020:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017024:	4303      	orrs	r3, r0
 8017026:	4413      	add	r3, r2
 8017028:	1a5b      	subs	r3, r3, r1
 801702a:	b21b      	sxth	r3, r3
 801702c:	429c      	cmp	r4, r3
 801702e:	bfb8      	it	lt
 8017030:	461c      	movlt	r4, r3
 8017032:	4633      	mov	r3, r6
 8017034:	462a      	mov	r2, r5
 8017036:	2100      	movs	r1, #0
 8017038:	e7dc      	b.n	8016ff4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801703a:	b2a0      	uxth	r0, r4
 801703c:	b01e      	add	sp, #120	; 0x78
 801703e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017042:	b003      	add	sp, #12
 8017044:	4770      	bx	lr

08017046 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017046:	7a43      	ldrb	r3, [r0, #9]
 8017048:	8880      	ldrh	r0, [r0, #4]
 801704a:	4418      	add	r0, r3
 801704c:	b280      	uxth	r0, r0
 801704e:	4770      	bx	lr

08017050 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017050:	6803      	ldr	r3, [r0, #0]
 8017052:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017054:	4718      	bx	r3

08017056 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017056:	b40e      	push	{r1, r2, r3}
 8017058:	b570      	push	{r4, r5, r6, lr}
 801705a:	b09d      	sub	sp, #116	; 0x74
 801705c:	ab21      	add	r3, sp, #132	; 0x84
 801705e:	4604      	mov	r4, r0
 8017060:	f853 5b04 	ldr.w	r5, [r3], #4
 8017064:	9302      	str	r3, [sp, #8]
 8017066:	a803      	add	r0, sp, #12
 8017068:	f000 fe56 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 801706c:	6823      	ldr	r3, [r4, #0]
 801706e:	4620      	mov	r0, r4
 8017070:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017072:	4798      	blx	r3
 8017074:	6823      	ldr	r3, [r4, #0]
 8017076:	4606      	mov	r6, r0
 8017078:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801707a:	4620      	mov	r0, r4
 801707c:	4798      	blx	r3
 801707e:	4633      	mov	r3, r6
 8017080:	9000      	str	r0, [sp, #0]
 8017082:	9a02      	ldr	r2, [sp, #8]
 8017084:	4629      	mov	r1, r5
 8017086:	a803      	add	r0, sp, #12
 8017088:	f000 fea1 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801708c:	a803      	add	r0, sp, #12
 801708e:	f001 fa6f 	bl	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017092:	2401      	movs	r4, #1
 8017094:	b2a3      	uxth	r3, r4
 8017096:	b140      	cbz	r0, 80170aa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017098:	280a      	cmp	r0, #10
 801709a:	bf08      	it	eq
 801709c:	3301      	addeq	r3, #1
 801709e:	a803      	add	r0, sp, #12
 80170a0:	bf08      	it	eq
 80170a2:	b21c      	sxtheq	r4, r3
 80170a4:	f001 fa64 	bl	8018570 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80170a8:	e7f4      	b.n	8017094 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80170aa:	4618      	mov	r0, r3
 80170ac:	b01d      	add	sp, #116	; 0x74
 80170ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80170b2:	b003      	add	sp, #12
 80170b4:	4770      	bx	lr

080170b6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80170b6:	b40e      	push	{r1, r2, r3}
 80170b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170ba:	b09e      	sub	sp, #120	; 0x78
 80170bc:	ab23      	add	r3, sp, #140	; 0x8c
 80170be:	4604      	mov	r4, r0
 80170c0:	f853 5b04 	ldr.w	r5, [r3], #4
 80170c4:	9303      	str	r3, [sp, #12]
 80170c6:	a805      	add	r0, sp, #20
 80170c8:	f000 fe26 	bl	8017d18 <_ZN8touchgfx12TextProviderC1Ev>
 80170cc:	6823      	ldr	r3, [r4, #0]
 80170ce:	4620      	mov	r0, r4
 80170d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80170d2:	4798      	blx	r3
 80170d4:	6823      	ldr	r3, [r4, #0]
 80170d6:	4606      	mov	r6, r0
 80170d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80170da:	4620      	mov	r0, r4
 80170dc:	4798      	blx	r3
 80170de:	4633      	mov	r3, r6
 80170e0:	4629      	mov	r1, r5
 80170e2:	9000      	str	r0, [sp, #0]
 80170e4:	9a03      	ldr	r2, [sp, #12]
 80170e6:	a805      	add	r0, sp, #20
 80170e8:	ad1e      	add	r5, sp, #120	; 0x78
 80170ea:	f000 fe70 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80170ee:	2100      	movs	r1, #0
 80170f0:	f845 1d68 	str.w	r1, [r5, #-104]!
 80170f4:	4622      	mov	r2, r4
 80170f6:	462b      	mov	r3, r5
 80170f8:	a805      	add	r0, sp, #20
 80170fa:	f001 f96b 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80170fe:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017102:	b1d8      	cbz	r0, 801713c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017104:	280a      	cmp	r0, #10
 8017106:	d012      	beq.n	801712e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017108:	9804      	ldr	r0, [sp, #16]
 801710a:	b180      	cbz	r0, 801712e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801710c:	7b47      	ldrb	r7, [r0, #13]
 801710e:	88e2      	ldrh	r2, [r4, #6]
 8017110:	00fb      	lsls	r3, r7, #3
 8017112:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017116:	7a03      	ldrb	r3, [r0, #8]
 8017118:	430b      	orrs	r3, r1
 801711a:	0679      	lsls	r1, r7, #25
 801711c:	bf44      	itt	mi
 801711e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017122:	b21b      	sxthmi	r3, r3
 8017124:	1ad3      	subs	r3, r2, r3
 8017126:	b21b      	sxth	r3, r3
 8017128:	429e      	cmp	r6, r3
 801712a:	bfa8      	it	ge
 801712c:	461e      	movge	r6, r3
 801712e:	462b      	mov	r3, r5
 8017130:	4622      	mov	r2, r4
 8017132:	2100      	movs	r1, #0
 8017134:	a805      	add	r0, sp, #20
 8017136:	f001 f94d 	bl	80183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801713a:	e7e2      	b.n	8017102 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801713c:	4630      	mov	r0, r6
 801713e:	b01e      	add	sp, #120	; 0x78
 8017140:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017144:	b003      	add	sp, #12
 8017146:	4770      	bx	lr

08017148 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017148:	b513      	push	{r0, r1, r4, lr}
 801714a:	6803      	ldr	r3, [r0, #0]
 801714c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017150:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017154:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017158:	2400      	movs	r4, #0
 801715a:	9400      	str	r4, [sp, #0]
 801715c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017160:	691b      	ldr	r3, [r3, #16]
 8017162:	4669      	mov	r1, sp
 8017164:	4798      	blx	r3
 8017166:	b002      	add	sp, #8
 8017168:	bd10      	pop	{r4, pc}

0801716a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801716a:	b538      	push	{r3, r4, r5, lr}
 801716c:	680b      	ldr	r3, [r1, #0]
 801716e:	460c      	mov	r4, r1
 8017170:	68db      	ldr	r3, [r3, #12]
 8017172:	4605      	mov	r5, r0
 8017174:	4798      	blx	r3
 8017176:	6823      	ldr	r3, [r4, #0]
 8017178:	4620      	mov	r0, r4
 801717a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801717c:	4629      	mov	r1, r5
 801717e:	4798      	blx	r3
 8017180:	4628      	mov	r0, r5
 8017182:	bd38      	pop	{r3, r4, r5, pc}

08017184 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017184:	b410      	push	{r4}
 8017186:	880a      	ldrh	r2, [r1, #0]
 8017188:	8884      	ldrh	r4, [r0, #4]
 801718a:	4422      	add	r2, r4
 801718c:	800a      	strh	r2, [r1, #0]
 801718e:	88c4      	ldrh	r4, [r0, #6]
 8017190:	884a      	ldrh	r2, [r1, #2]
 8017192:	4422      	add	r2, r4
 8017194:	804a      	strh	r2, [r1, #2]
 8017196:	6940      	ldr	r0, [r0, #20]
 8017198:	b120      	cbz	r0, 80171a4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801719a:	6803      	ldr	r3, [r0, #0]
 801719c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80171a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80171a2:	4718      	bx	r3
 80171a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80171a8:	4770      	bx	lr

080171aa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80171aa:	b570      	push	{r4, r5, r6, lr}
 80171ac:	8882      	ldrh	r2, [r0, #4]
 80171ae:	880b      	ldrh	r3, [r1, #0]
 80171b0:	4413      	add	r3, r2
 80171b2:	800b      	strh	r3, [r1, #0]
 80171b4:	88c2      	ldrh	r2, [r0, #6]
 80171b6:	884b      	ldrh	r3, [r1, #2]
 80171b8:	460c      	mov	r4, r1
 80171ba:	4413      	add	r3, r2
 80171bc:	804b      	strh	r3, [r1, #2]
 80171be:	4605      	mov	r5, r0
 80171c0:	1d01      	adds	r1, r0, #4
 80171c2:	4620      	mov	r0, r4
 80171c4:	f7f9 fdc6 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 80171c8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80171cc:	2b00      	cmp	r3, #0
 80171ce:	dd0b      	ble.n	80171e8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80171d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80171d4:	2b00      	cmp	r3, #0
 80171d6:	dd07      	ble.n	80171e8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80171d8:	6968      	ldr	r0, [r5, #20]
 80171da:	b128      	cbz	r0, 80171e8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80171dc:	6803      	ldr	r3, [r0, #0]
 80171de:	4621      	mov	r1, r4
 80171e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80171e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80171e6:	4718      	bx	r3
 80171e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080171ec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80171ec:	b570      	push	{r4, r5, r6, lr}
 80171ee:	8882      	ldrh	r2, [r0, #4]
 80171f0:	880b      	ldrh	r3, [r1, #0]
 80171f2:	4413      	add	r3, r2
 80171f4:	800b      	strh	r3, [r1, #0]
 80171f6:	88c2      	ldrh	r2, [r0, #6]
 80171f8:	884b      	ldrh	r3, [r1, #2]
 80171fa:	460c      	mov	r4, r1
 80171fc:	4413      	add	r3, r2
 80171fe:	804b      	strh	r3, [r1, #2]
 8017200:	4605      	mov	r5, r0
 8017202:	1d01      	adds	r1, r0, #4
 8017204:	4620      	mov	r0, r4
 8017206:	f7f9 fda5 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801720a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801720e:	2b00      	cmp	r3, #0
 8017210:	dd19      	ble.n	8017246 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017212:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017216:	2b00      	cmp	r3, #0
 8017218:	dd15      	ble.n	8017246 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801721a:	6968      	ldr	r0, [r5, #20]
 801721c:	b128      	cbz	r0, 801722a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801721e:	6803      	ldr	r3, [r0, #0]
 8017220:	4621      	mov	r1, r4
 8017222:	691b      	ldr	r3, [r3, #16]
 8017224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017228:	4718      	bx	r3
 801722a:	4b07      	ldr	r3, [pc, #28]	; (8017248 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801722c:	681b      	ldr	r3, [r3, #0]
 801722e:	3304      	adds	r3, #4
 8017230:	429d      	cmp	r5, r3
 8017232:	d108      	bne.n	8017246 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017234:	f7fe fea0 	bl	8015f78 <_ZN8touchgfx11Application11getInstanceEv>
 8017238:	6803      	ldr	r3, [r0, #0]
 801723a:	6821      	ldr	r1, [r4, #0]
 801723c:	6862      	ldr	r2, [r4, #4]
 801723e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017240:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017244:	4718      	bx	r3
 8017246:	bd70      	pop	{r4, r5, r6, pc}
 8017248:	20013488 	.word	0x20013488

0801724c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801724c:	b570      	push	{r4, r5, r6, lr}
 801724e:	4604      	mov	r4, r0
 8017250:	4616      	mov	r6, r2
 8017252:	460d      	mov	r5, r1
 8017254:	b901      	cbnz	r1, 8017258 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017256:	b192      	cbz	r2, 801727e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017258:	6823      	ldr	r3, [r4, #0]
 801725a:	4620      	mov	r0, r4
 801725c:	699b      	ldr	r3, [r3, #24]
 801725e:	4798      	blx	r3
 8017260:	88e2      	ldrh	r2, [r4, #6]
 8017262:	88a1      	ldrh	r1, [r4, #4]
 8017264:	4432      	add	r2, r6
 8017266:	4429      	add	r1, r5
 8017268:	4620      	mov	r0, r4
 801726a:	b212      	sxth	r2, r2
 801726c:	b209      	sxth	r1, r1
 801726e:	f7eb f9f6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8017272:	6823      	ldr	r3, [r4, #0]
 8017274:	4620      	mov	r0, r4
 8017276:	699b      	ldr	r3, [r3, #24]
 8017278:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801727c:	4718      	bx	r3
 801727e:	bd70      	pop	{r4, r5, r6, pc}

08017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017280:	b510      	push	{r4, lr}
 8017282:	4604      	mov	r4, r0
 8017284:	4608      	mov	r0, r1
 8017286:	2300      	movs	r3, #0
 8017288:	8023      	strh	r3, [r4, #0]
 801728a:	8063      	strh	r3, [r4, #2]
 801728c:	6803      	ldr	r3, [r0, #0]
 801728e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017292:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017296:	80a1      	strh	r1, [r4, #4]
 8017298:	80e2      	strh	r2, [r4, #6]
 801729a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801729c:	4621      	mov	r1, r4
 801729e:	4798      	blx	r3
 80172a0:	4620      	mov	r0, r4
 80172a2:	bd10      	pop	{r4, pc}

080172a4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80172a4:	b530      	push	{r4, r5, lr}
 80172a6:	8083      	strh	r3, [r0, #4]
 80172a8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80172ac:	80c3      	strh	r3, [r0, #6]
 80172ae:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80172b2:	7203      	strb	r3, [r0, #8]
 80172b4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80172b8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80172bc:	7243      	strb	r3, [r0, #9]
 80172be:	7a83      	ldrb	r3, [r0, #10]
 80172c0:	6141      	str	r1, [r0, #20]
 80172c2:	f365 0306 	bfi	r3, r5, #0, #7
 80172c6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80172ca:	8302      	strh	r2, [r0, #24]
 80172cc:	f365 13c7 	bfi	r3, r5, #7, #1
 80172d0:	7283      	strb	r3, [r0, #10]
 80172d2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80172d6:	72c3      	strb	r3, [r0, #11]
 80172d8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80172dc:	7303      	strb	r3, [r0, #12]
 80172de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80172e2:	81c3      	strh	r3, [r0, #14]
 80172e4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80172e8:	8203      	strh	r3, [r0, #16]
 80172ea:	4b01      	ldr	r3, [pc, #4]	; (80172f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80172ec:	6003      	str	r3, [r0, #0]
 80172ee:	bd30      	pop	{r4, r5, pc}
 80172f0:	0802f9b4 	.word	0x0802f9b4

080172f4 <_ZNK8touchgfx9ConstFont4findEt>:
 80172f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80172f6:	6944      	ldr	r4, [r0, #20]
 80172f8:	b3bc      	cbz	r4, 801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80172fa:	88a3      	ldrh	r3, [r4, #4]
 80172fc:	8b02      	ldrh	r2, [r0, #24]
 80172fe:	1acb      	subs	r3, r1, r3
 8017300:	f102 32ff 	add.w	r2, r2, #4294967295
 8017304:	d431      	bmi.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017306:	4293      	cmp	r3, r2
 8017308:	dd0c      	ble.n	8017324 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801730a:	230e      	movs	r3, #14
 801730c:	fb03 4302 	mla	r3, r3, r2, r4
 8017310:	889b      	ldrh	r3, [r3, #4]
 8017312:	1a5b      	subs	r3, r3, r1
 8017314:	1ad3      	subs	r3, r2, r3
 8017316:	429a      	cmp	r2, r3
 8017318:	db27      	blt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801731a:	2b00      	cmp	r3, #0
 801731c:	bfbc      	itt	lt
 801731e:	2302      	movlt	r3, #2
 8017320:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017324:	2500      	movs	r5, #0
 8017326:	260e      	movs	r6, #14
 8017328:	4295      	cmp	r5, r2
 801732a:	dc1e      	bgt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801732c:	fb06 4003 	mla	r0, r6, r3, r4
 8017330:	8887      	ldrh	r7, [r0, #4]
 8017332:	42b9      	cmp	r1, r7
 8017334:	d01a      	beq.n	801736c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017336:	d20d      	bcs.n	8017354 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017338:	1e5a      	subs	r2, r3, #1
 801733a:	4295      	cmp	r5, r2
 801733c:	dc15      	bgt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801733e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017342:	1a5b      	subs	r3, r3, r1
 8017344:	1ad3      	subs	r3, r2, r3
 8017346:	429a      	cmp	r2, r3
 8017348:	db0f      	blt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801734a:	429d      	cmp	r5, r3
 801734c:	ddec      	ble.n	8017328 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801734e:	1953      	adds	r3, r2, r5
 8017350:	105b      	asrs	r3, r3, #1
 8017352:	e7e9      	b.n	8017328 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017354:	1c5d      	adds	r5, r3, #1
 8017356:	42aa      	cmp	r2, r5
 8017358:	db07      	blt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801735a:	8a43      	ldrh	r3, [r0, #18]
 801735c:	1acb      	subs	r3, r1, r3
 801735e:	442b      	add	r3, r5
 8017360:	429d      	cmp	r5, r3
 8017362:	dc02      	bgt.n	801736a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017364:	429a      	cmp	r2, r3
 8017366:	dadf      	bge.n	8017328 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017368:	e7f1      	b.n	801734e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801736a:	2000      	movs	r0, #0
 801736c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801736e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801736e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017370:	4604      	mov	r4, r0
 8017372:	4617      	mov	r7, r2
 8017374:	461e      	mov	r6, r3
 8017376:	b911      	cbnz	r1, 801737e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017378:	2500      	movs	r5, #0
 801737a:	4628      	mov	r0, r5
 801737c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801737e:	290a      	cmp	r1, #10
 8017380:	d0fa      	beq.n	8017378 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017382:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017386:	4291      	cmp	r1, r2
 8017388:	d0f6      	beq.n	8017378 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801738a:	f242 020b 	movw	r2, #8203	; 0x200b
 801738e:	4291      	cmp	r1, r2
 8017390:	d0f2      	beq.n	8017378 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017392:	f7ff ffaf 	bl	80172f4 <_ZNK8touchgfx9ConstFont4findEt>
 8017396:	4605      	mov	r5, r0
 8017398:	b950      	cbnz	r0, 80173b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801739a:	6823      	ldr	r3, [r4, #0]
 801739c:	4620      	mov	r0, r4
 801739e:	691b      	ldr	r3, [r3, #16]
 80173a0:	4798      	blx	r3
 80173a2:	4601      	mov	r1, r0
 80173a4:	4620      	mov	r0, r4
 80173a6:	f7ff ffa5 	bl	80172f4 <_ZNK8touchgfx9ConstFont4findEt>
 80173aa:	4605      	mov	r5, r0
 80173ac:	2800      	cmp	r0, #0
 80173ae:	d0e3      	beq.n	8017378 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80173b0:	6823      	ldr	r3, [r4, #0]
 80173b2:	4629      	mov	r1, r5
 80173b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80173b6:	4620      	mov	r0, r4
 80173b8:	4798      	blx	r3
 80173ba:	6038      	str	r0, [r7, #0]
 80173bc:	6823      	ldr	r3, [r4, #0]
 80173be:	4620      	mov	r0, r4
 80173c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80173c2:	4798      	blx	r3
 80173c4:	7030      	strb	r0, [r6, #0]
 80173c6:	e7d8      	b.n	801737a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080173c8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80173c8:	b538      	push	{r3, r4, r5, lr}
 80173ca:	4605      	mov	r5, r0
 80173cc:	f002 fb94 	bl	8019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80173d0:	4604      	mov	r4, r0
 80173d2:	4628      	mov	r0, r5
 80173d4:	f002 fad4 	bl	8019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80173d8:	2800      	cmp	r0, #0
 80173da:	bf14      	ite	ne
 80173dc:	2002      	movne	r0, #2
 80173de:	2000      	moveq	r0, #0
 80173e0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80173e4:	b280      	uxth	r0, r0
 80173e6:	bd38      	pop	{r3, r4, r5, pc}

080173e8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80173e8:	b538      	push	{r3, r4, r5, lr}
 80173ea:	4605      	mov	r5, r0
 80173ec:	f002 fb84 	bl	8019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80173f0:	4604      	mov	r4, r0
 80173f2:	4628      	mov	r0, r5
 80173f4:	f002 fac4 	bl	8019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80173f8:	2800      	cmp	r0, #0
 80173fa:	bf14      	ite	ne
 80173fc:	2002      	movne	r0, #2
 80173fe:	2000      	moveq	r0, #0
 8017400:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017404:	f040 0001 	orr.w	r0, r0, #1
 8017408:	b280      	uxth	r0, r0
 801740a:	bd38      	pop	{r3, r4, r5, pc}

0801740c <_ZN8touchgfx4clzuEm>:
 801740c:	4603      	mov	r3, r0
 801740e:	b1c8      	cbz	r0, 8017444 <_ZN8touchgfx4clzuEm+0x38>
 8017410:	0c02      	lsrs	r2, r0, #16
 8017412:	0412      	lsls	r2, r2, #16
 8017414:	b9a2      	cbnz	r2, 8017440 <_ZN8touchgfx4clzuEm+0x34>
 8017416:	0403      	lsls	r3, r0, #16
 8017418:	2010      	movs	r0, #16
 801741a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801741e:	bf04      	itt	eq
 8017420:	021b      	lsleq	r3, r3, #8
 8017422:	3008      	addeq	r0, #8
 8017424:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017428:	bf04      	itt	eq
 801742a:	011b      	lsleq	r3, r3, #4
 801742c:	3004      	addeq	r0, #4
 801742e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017432:	bf04      	itt	eq
 8017434:	009b      	lsleq	r3, r3, #2
 8017436:	3002      	addeq	r0, #2
 8017438:	2b00      	cmp	r3, #0
 801743a:	db04      	blt.n	8017446 <_ZN8touchgfx4clzuEm+0x3a>
 801743c:	3001      	adds	r0, #1
 801743e:	4770      	bx	lr
 8017440:	2000      	movs	r0, #0
 8017442:	e7ea      	b.n	801741a <_ZN8touchgfx4clzuEm+0xe>
 8017444:	2020      	movs	r0, #32
 8017446:	4770      	bx	lr

08017448 <_ZN8touchgfx7muldivuEmmmRm>:
 8017448:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801744c:	460f      	mov	r7, r1
 801744e:	4615      	mov	r5, r2
 8017450:	461e      	mov	r6, r3
 8017452:	4601      	mov	r1, r0
 8017454:	b100      	cbz	r0, 8017458 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017456:	b927      	cbnz	r7, 8017462 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017458:	2000      	movs	r0, #0
 801745a:	6030      	str	r0, [r6, #0]
 801745c:	b002      	add	sp, #8
 801745e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017462:	f7ff ffd3 	bl	801740c <_ZN8touchgfx4clzuEm>
 8017466:	b980      	cbnz	r0, 801748a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017468:	4638      	mov	r0, r7
 801746a:	f7ff ffcf 	bl	801740c <_ZN8touchgfx4clzuEm>
 801746e:	2800      	cmp	r0, #0
 8017470:	dd05      	ble.n	801747e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017472:	4633      	mov	r3, r6
 8017474:	462a      	mov	r2, r5
 8017476:	4638      	mov	r0, r7
 8017478:	f7ff ffe6 	bl	8017448 <_ZN8touchgfx7muldivuEmmmRm>
 801747c:	e7ee      	b.n	801745c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801747e:	f04f 33ff 	mov.w	r3, #4294967295
 8017482:	6033      	str	r3, [r6, #0]
 8017484:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017488:	e7e8      	b.n	801745c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801748a:	fa37 f800 	lsrs.w	r8, r7, r0
 801748e:	fb07 f301 	mul.w	r3, r7, r1
 8017492:	d105      	bne.n	80174a0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017494:	fbb3 f0f5 	udiv	r0, r3, r5
 8017498:	fb05 3510 	mls	r5, r5, r0, r3
 801749c:	6035      	str	r5, [r6, #0]
 801749e:	e7dd      	b.n	801745c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80174a0:	2301      	movs	r3, #1
 80174a2:	fa01 fa00 	lsl.w	sl, r1, r0
 80174a6:	fa03 f000 	lsl.w	r0, r3, r0
 80174aa:	3801      	subs	r0, #1
 80174ac:	462a      	mov	r2, r5
 80174ae:	4633      	mov	r3, r6
 80174b0:	4038      	ands	r0, r7
 80174b2:	f7ff ffc9 	bl	8017448 <_ZN8touchgfx7muldivuEmmmRm>
 80174b6:	fbba f9f5 	udiv	r9, sl, r5
 80174ba:	462a      	mov	r2, r5
 80174bc:	4607      	mov	r7, r0
 80174be:	ab01      	add	r3, sp, #4
 80174c0:	fb05 a119 	mls	r1, r5, r9, sl
 80174c4:	4640      	mov	r0, r8
 80174c6:	f7ff ffbf 	bl	8017448 <_ZN8touchgfx7muldivuEmmmRm>
 80174ca:	9b01      	ldr	r3, [sp, #4]
 80174cc:	6832      	ldr	r2, [r6, #0]
 80174ce:	fb08 f409 	mul.w	r4, r8, r9
 80174d2:	441a      	add	r2, r3
 80174d4:	fbb2 f3f5 	udiv	r3, r2, r5
 80174d8:	441c      	add	r4, r3
 80174da:	443c      	add	r4, r7
 80174dc:	4420      	add	r0, r4
 80174de:	fb05 2513 	mls	r5, r5, r3, r2
 80174e2:	e7db      	b.n	801749c <_ZN8touchgfx7muldivuEmmmRm+0x54>

080174e4 <_ZN8touchgfx6muldivElllRl>:
 80174e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80174e6:	2800      	cmp	r0, #0
 80174e8:	bfba      	itte	lt
 80174ea:	4240      	neglt	r0, r0
 80174ec:	f04f 34ff 	movlt.w	r4, #4294967295
 80174f0:	2401      	movge	r4, #1
 80174f2:	2900      	cmp	r1, #0
 80174f4:	bfbc      	itt	lt
 80174f6:	4249      	neglt	r1, r1
 80174f8:	4264      	neglt	r4, r4
 80174fa:	2a00      	cmp	r2, #0
 80174fc:	bfb6      	itet	lt
 80174fe:	4265      	neglt	r5, r4
 8017500:	4625      	movge	r5, r4
 8017502:	4252      	neglt	r2, r2
 8017504:	4288      	cmp	r0, r1
 8017506:	461e      	mov	r6, r3
 8017508:	bfc2      	ittt	gt
 801750a:	4603      	movgt	r3, r0
 801750c:	4608      	movgt	r0, r1
 801750e:	4619      	movgt	r1, r3
 8017510:	ab01      	add	r3, sp, #4
 8017512:	f7ff ff99 	bl	8017448 <_ZN8touchgfx7muldivuEmmmRm>
 8017516:	9b01      	ldr	r3, [sp, #4]
 8017518:	4368      	muls	r0, r5
 801751a:	435c      	muls	r4, r3
 801751c:	6034      	str	r4, [r6, #0]
 801751e:	b002      	add	sp, #8
 8017520:	bd70      	pop	{r4, r5, r6, pc}

08017522 <_ZN8touchgfx6muldivElll>:
 8017522:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017524:	4606      	mov	r6, r0
 8017526:	ab01      	add	r3, sp, #4
 8017528:	460d      	mov	r5, r1
 801752a:	4614      	mov	r4, r2
 801752c:	f7ff ffda 	bl	80174e4 <_ZN8touchgfx6muldivElllRl>
 8017530:	2e00      	cmp	r6, #0
 8017532:	db20      	blt.n	8017576 <_ZN8touchgfx6muldivElll+0x54>
 8017534:	bf14      	ite	ne
 8017536:	2301      	movne	r3, #1
 8017538:	2300      	moveq	r3, #0
 801753a:	2d00      	cmp	r5, #0
 801753c:	db1e      	blt.n	801757c <_ZN8touchgfx6muldivElll+0x5a>
 801753e:	bf14      	ite	ne
 8017540:	2201      	movne	r2, #1
 8017542:	2200      	moveq	r2, #0
 8017544:	2c00      	cmp	r4, #0
 8017546:	fb03 f202 	mul.w	r2, r3, r2
 801754a:	db1a      	blt.n	8017582 <_ZN8touchgfx6muldivElll+0x60>
 801754c:	bf14      	ite	ne
 801754e:	2301      	movne	r3, #1
 8017550:	2300      	moveq	r3, #0
 8017552:	4353      	muls	r3, r2
 8017554:	2b01      	cmp	r3, #1
 8017556:	d117      	bne.n	8017588 <_ZN8touchgfx6muldivElll+0x66>
 8017558:	9b01      	ldr	r3, [sp, #4]
 801755a:	2c00      	cmp	r4, #0
 801755c:	bfb8      	it	lt
 801755e:	4264      	neglt	r4, r4
 8017560:	2b00      	cmp	r3, #0
 8017562:	f104 0401 	add.w	r4, r4, #1
 8017566:	bfb8      	it	lt
 8017568:	425b      	neglt	r3, r3
 801756a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801756e:	db00      	blt.n	8017572 <_ZN8touchgfx6muldivElll+0x50>
 8017570:	3001      	adds	r0, #1
 8017572:	b002      	add	sp, #8
 8017574:	bd70      	pop	{r4, r5, r6, pc}
 8017576:	f04f 33ff 	mov.w	r3, #4294967295
 801757a:	e7de      	b.n	801753a <_ZN8touchgfx6muldivElll+0x18>
 801757c:	f04f 32ff 	mov.w	r2, #4294967295
 8017580:	e7e0      	b.n	8017544 <_ZN8touchgfx6muldivElll+0x22>
 8017582:	f04f 33ff 	mov.w	r3, #4294967295
 8017586:	e7e4      	b.n	8017552 <_ZN8touchgfx6muldivElll+0x30>
 8017588:	3301      	adds	r3, #1
 801758a:	d1f2      	bne.n	8017572 <_ZN8touchgfx6muldivElll+0x50>
 801758c:	9b01      	ldr	r3, [sp, #4]
 801758e:	2c00      	cmp	r4, #0
 8017590:	bfb8      	it	lt
 8017592:	4264      	neglt	r4, r4
 8017594:	2b00      	cmp	r3, #0
 8017596:	bfb8      	it	lt
 8017598:	425b      	neglt	r3, r3
 801759a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801759e:	bfc8      	it	gt
 80175a0:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80175a4:	e7e5      	b.n	8017572 <_ZN8touchgfx6muldivElll+0x50>

080175a6 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80175a6:	2000      	movs	r0, #0
 80175a8:	4770      	bx	lr

080175aa <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80175aa:	2001      	movs	r0, #1
 80175ac:	4770      	bx	lr

080175ae <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80175ae:	2002      	movs	r0, #2
 80175b0:	4770      	bx	lr

080175b2 <_ZN8touchgfx6ScreenD1Ev>:
 80175b2:	4770      	bx	lr

080175b4 <_ZN8touchgfx12GestureEventD1Ev>:
 80175b4:	4770      	bx	lr

080175b6 <_ZN8touchgfx9DragEventD1Ev>:
 80175b6:	4770      	bx	lr

080175b8 <_ZN8touchgfx10ClickEventD1Ev>:
 80175b8:	4770      	bx	lr

080175ba <_ZN8touchgfx10ClickEventD0Ev>:
 80175ba:	b510      	push	{r4, lr}
 80175bc:	210c      	movs	r1, #12
 80175be:	4604      	mov	r4, r0
 80175c0:	f012 fd8f 	bl	802a0e2 <_ZdlPvj>
 80175c4:	4620      	mov	r0, r4
 80175c6:	bd10      	pop	{r4, pc}

080175c8 <_ZN8touchgfx9DragEventD0Ev>:
 80175c8:	b510      	push	{r4, lr}
 80175ca:	2110      	movs	r1, #16
 80175cc:	4604      	mov	r4, r0
 80175ce:	f012 fd88 	bl	802a0e2 <_ZdlPvj>
 80175d2:	4620      	mov	r0, r4
 80175d4:	bd10      	pop	{r4, pc}

080175d6 <_ZN8touchgfx12GestureEventD0Ev>:
 80175d6:	b510      	push	{r4, lr}
 80175d8:	210c      	movs	r1, #12
 80175da:	4604      	mov	r4, r0
 80175dc:	f012 fd81 	bl	802a0e2 <_ZdlPvj>
 80175e0:	4620      	mov	r0, r4
 80175e2:	bd10      	pop	{r4, pc}

080175e4 <_ZN8touchgfx6ScreenD0Ev>:
 80175e4:	b510      	push	{r4, lr}
 80175e6:	213c      	movs	r1, #60	; 0x3c
 80175e8:	4604      	mov	r4, r0
 80175ea:	f012 fd7a 	bl	802a0e2 <_ZdlPvj>
 80175ee:	4620      	mov	r0, r4
 80175f0:	bd10      	pop	{r4, pc}
	...

080175f4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80175f4:	b530      	push	{r4, r5, lr}
 80175f6:	460d      	mov	r5, r1
 80175f8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80175fa:	b087      	sub	sp, #28
 80175fc:	4604      	mov	r4, r0
 80175fe:	b301      	cbz	r1, 8017642 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017600:	a801      	add	r0, sp, #4
 8017602:	f7ff fe3d 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017606:	892a      	ldrh	r2, [r5, #8]
 8017608:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801760c:	7928      	ldrb	r0, [r5, #4]
 801760e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017612:	f88d 0010 	strb.w	r0, [sp, #16]
 8017616:	1ad2      	subs	r2, r2, r3
 8017618:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801761a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801761c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017620:	441a      	add	r2, r3
 8017622:	896b      	ldrh	r3, [r5, #10]
 8017624:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017628:	f8ad 2014 	strh.w	r2, [sp, #20]
 801762c:	1b5b      	subs	r3, r3, r5
 801762e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017630:	442b      	add	r3, r5
 8017632:	4d05      	ldr	r5, [pc, #20]	; (8017648 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017634:	9503      	str	r5, [sp, #12]
 8017636:	f8ad 3016 	strh.w	r3, [sp, #22]
 801763a:	6803      	ldr	r3, [r0, #0]
 801763c:	a903      	add	r1, sp, #12
 801763e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017640:	4798      	blx	r3
 8017642:	b007      	add	sp, #28
 8017644:	bd30      	pop	{r4, r5, pc}
 8017646:	bf00      	nop
 8017648:	0802fa3c 	.word	0x0802fa3c

0801764c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801764c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017650:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017652:	b08a      	sub	sp, #40	; 0x28
 8017654:	4604      	mov	r4, r0
 8017656:	460d      	mov	r5, r1
 8017658:	b113      	cbz	r3, 8017660 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801765a:	790b      	ldrb	r3, [r1, #4]
 801765c:	2b00      	cmp	r3, #0
 801765e:	d044      	beq.n	80176ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017660:	f104 0804 	add.w	r8, r4, #4
 8017664:	4641      	mov	r1, r8
 8017666:	a803      	add	r0, sp, #12
 8017668:	f7ff fe0a 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801766c:	792b      	ldrb	r3, [r5, #4]
 801766e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017672:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017676:	b983      	cbnz	r3, 801769a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017678:	892a      	ldrh	r2, [r5, #8]
 801767a:	88e9      	ldrh	r1, [r5, #6]
 801767c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017680:	1b92      	subs	r2, r2, r6
 8017682:	1bc9      	subs	r1, r1, r7
 8017684:	9301      	str	r3, [sp, #4]
 8017686:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801768a:	9300      	str	r3, [sp, #0]
 801768c:	b212      	sxth	r2, r2
 801768e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017692:	b209      	sxth	r1, r1
 8017694:	4640      	mov	r0, r8
 8017696:	f7f9 fa79 	bl	8010b8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801769a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801769c:	b329      	cbz	r1, 80176ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801769e:	a805      	add	r0, sp, #20
 80176a0:	f7ff fdee 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80176a4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80176a8:	792b      	ldrb	r3, [r5, #4]
 80176aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80176ac:	f88d 3020 	strb.w	r3, [sp, #32]
 80176b0:	1abf      	subs	r7, r7, r2
 80176b2:	88ea      	ldrh	r2, [r5, #6]
 80176b4:	4417      	add	r7, r2
 80176b6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80176b8:	4417      	add	r7, r2
 80176ba:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80176be:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80176c2:	1ab6      	subs	r6, r6, r2
 80176c4:	892a      	ldrh	r2, [r5, #8]
 80176c6:	4416      	add	r6, r2
 80176c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80176ca:	4416      	add	r6, r2
 80176cc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80176d0:	4a07      	ldr	r2, [pc, #28]	; (80176f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80176d2:	9207      	str	r2, [sp, #28]
 80176d4:	2600      	movs	r6, #0
 80176d6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80176da:	6803      	ldr	r3, [r0, #0]
 80176dc:	a907      	add	r1, sp, #28
 80176de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80176e0:	4798      	blx	r3
 80176e2:	792b      	ldrb	r3, [r5, #4]
 80176e4:	b10b      	cbz	r3, 80176ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80176e6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80176ea:	b00a      	add	sp, #40	; 0x28
 80176ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80176f0:	0802fa14 	.word	0x0802fa14

080176f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80176f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80176f8:	460c      	mov	r4, r1
 80176fa:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80176fc:	b088      	sub	sp, #32
 80176fe:	4605      	mov	r5, r0
 8017700:	2900      	cmp	r1, #0
 8017702:	d06d      	beq.n	80177e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017704:	4668      	mov	r0, sp
 8017706:	f7ff fdbb 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801770a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801770c:	88e3      	ldrh	r3, [r4, #6]
 801770e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017712:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017716:	440b      	add	r3, r1
 8017718:	b21b      	sxth	r3, r3
 801771a:	4543      	cmp	r3, r8
 801771c:	db31      	blt.n	8017782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801771e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017722:	44c4      	add	ip, r8
 8017724:	fa0f fc8c 	sxth.w	ip, ip
 8017728:	4563      	cmp	r3, ip
 801772a:	da2a      	bge.n	8017782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801772c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801772e:	8926      	ldrh	r6, [r4, #8]
 8017730:	4416      	add	r6, r2
 8017732:	b236      	sxth	r6, r6
 8017734:	42be      	cmp	r6, r7
 8017736:	db24      	blt.n	8017782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017738:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801773c:	4438      	add	r0, r7
 801773e:	b200      	sxth	r0, r0
 8017740:	4286      	cmp	r6, r0
 8017742:	da1e      	bge.n	8017782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017744:	8963      	ldrh	r3, [r4, #10]
 8017746:	4419      	add	r1, r3
 8017748:	b209      	sxth	r1, r1
 801774a:	4541      	cmp	r1, r8
 801774c:	db08      	blt.n	8017760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801774e:	4561      	cmp	r1, ip
 8017750:	da06      	bge.n	8017760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017752:	89a3      	ldrh	r3, [r4, #12]
 8017754:	441a      	add	r2, r3
 8017756:	b212      	sxth	r2, r2
 8017758:	42ba      	cmp	r2, r7
 801775a:	db01      	blt.n	8017760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801775c:	4282      	cmp	r2, r0
 801775e:	db10      	blt.n	8017782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017760:	4b21      	ldr	r3, [pc, #132]	; (80177e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017762:	9304      	str	r3, [sp, #16]
 8017764:	2302      	movs	r3, #2
 8017766:	f88d 3014 	strb.w	r3, [sp, #20]
 801776a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801776c:	2300      	movs	r3, #0
 801776e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017772:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017776:	f8ad 301a 	strh.w	r3, [sp, #26]
 801777a:	6803      	ldr	r3, [r0, #0]
 801777c:	a904      	add	r1, sp, #16
 801777e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017780:	4798      	blx	r3
 8017782:	1d29      	adds	r1, r5, #4
 8017784:	a802      	add	r0, sp, #8
 8017786:	f7ff fd7b 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801778a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801778e:	88e0      	ldrh	r0, [r4, #6]
 8017790:	7921      	ldrb	r1, [r4, #4]
 8017792:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017796:	8922      	ldrh	r2, [r4, #8]
 8017798:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801779a:	f88d 1014 	strb.w	r1, [sp, #20]
 801779e:	eba3 0808 	sub.w	r8, r3, r8
 80177a2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80177a6:	1bdf      	subs	r7, r3, r7
 80177a8:	b2bb      	uxth	r3, r7
 80177aa:	fa1f f888 	uxth.w	r8, r8
 80177ae:	8967      	ldrh	r7, [r4, #10]
 80177b0:	89a4      	ldrh	r4, [r4, #12]
 80177b2:	4440      	add	r0, r8
 80177b4:	4460      	add	r0, ip
 80177b6:	441a      	add	r2, r3
 80177b8:	44b8      	add	r8, r7
 80177ba:	4423      	add	r3, r4
 80177bc:	f8ad 0016 	strh.w	r0, [sp, #22]
 80177c0:	4433      	add	r3, r6
 80177c2:	4432      	add	r2, r6
 80177c4:	44e0      	add	r8, ip
 80177c6:	4c09      	ldr	r4, [pc, #36]	; (80177ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80177c8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80177ca:	9404      	str	r4, [sp, #16]
 80177cc:	f8ad 2018 	strh.w	r2, [sp, #24]
 80177d0:	f8ad 801a 	strh.w	r8, [sp, #26]
 80177d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80177d8:	6803      	ldr	r3, [r0, #0]
 80177da:	a904      	add	r1, sp, #16
 80177dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80177de:	4798      	blx	r3
 80177e0:	b008      	add	sp, #32
 80177e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80177e6:	bf00      	nop
 80177e8:	0802fa14 	.word	0x0802fa14
 80177ec:	0802fa28 	.word	0x0802fa28

080177f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80177f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80177f2:	4604      	mov	r4, r0
 80177f4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80177f8:	3201      	adds	r2, #1
 80177fa:	d112      	bne.n	8017822 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80177fc:	6803      	ldr	r3, [r0, #0]
 80177fe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017802:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017806:	f8ad 1004 	strh.w	r1, [sp, #4]
 801780a:	2500      	movs	r5, #0
 801780c:	9500      	str	r5, [sp, #0]
 801780e:	466d      	mov	r5, sp
 8017810:	4629      	mov	r1, r5
 8017812:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017818:	4798      	blx	r3
 801781a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801781e:	e884 0003 	stmia.w	r4, {r0, r1}
 8017822:	4620      	mov	r0, r4
 8017824:	b003      	add	sp, #12
 8017826:	bd30      	pop	{r4, r5, pc}

08017828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017828:	b513      	push	{r0, r1, r4, lr}
 801782a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801782e:	3301      	adds	r3, #1
 8017830:	4604      	mov	r4, r0
 8017832:	d109      	bne.n	8017848 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017834:	4601      	mov	r1, r0
 8017836:	4668      	mov	r0, sp
 8017838:	f7ff fd22 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801783c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017840:	8423      	strh	r3, [r4, #32]
 8017842:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017846:	8463      	strh	r3, [r4, #34]	; 0x22
 8017848:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801784c:	b002      	add	sp, #8
 801784e:	bd10      	pop	{r4, pc}

08017850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017850:	b513      	push	{r0, r1, r4, lr}
 8017852:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017856:	3301      	adds	r3, #1
 8017858:	4604      	mov	r4, r0
 801785a:	d109      	bne.n	8017870 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801785c:	4601      	mov	r1, r0
 801785e:	4668      	mov	r0, sp
 8017860:	f7ff fd0e 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017864:	f8bd 3000 	ldrh.w	r3, [sp]
 8017868:	8423      	strh	r3, [r4, #32]
 801786a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801786e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017870:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017874:	b002      	add	sp, #8
 8017876:	bd10      	pop	{r4, pc}

08017878 <_ZN8touchgfx6ScreenC1Ev>:
 8017878:	b570      	push	{r4, r5, r6, lr}
 801787a:	4605      	mov	r5, r0
 801787c:	4b16      	ldr	r3, [pc, #88]	; (80178d8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801787e:	f845 3b04 	str.w	r3, [r5], #4
 8017882:	2300      	movs	r3, #0
 8017884:	8103      	strh	r3, [r0, #8]
 8017886:	8143      	strh	r3, [r0, #10]
 8017888:	8183      	strh	r3, [r0, #12]
 801788a:	81c3      	strh	r3, [r0, #14]
 801788c:	8203      	strh	r3, [r0, #16]
 801788e:	8243      	strh	r3, [r0, #18]
 8017890:	8283      	strh	r3, [r0, #20]
 8017892:	82c3      	strh	r3, [r0, #22]
 8017894:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017898:	6203      	str	r3, [r0, #32]
 801789a:	8483      	strh	r3, [r0, #36]	; 0x24
 801789c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801789e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80178a2:	4a0e      	ldr	r2, [pc, #56]	; (80178dc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80178a4:	6343      	str	r3, [r0, #52]	; 0x34
 80178a6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80178aa:	4b0d      	ldr	r3, [pc, #52]	; (80178e0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80178ac:	6042      	str	r2, [r0, #4]
 80178ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 80178b2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80178b4:	4a0b      	ldr	r2, [pc, #44]	; (80178e4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80178b6:	4604      	mov	r4, r0
 80178b8:	2101      	movs	r1, #1
 80178ba:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80178be:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80178c2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80178c6:	4628      	mov	r0, r5
 80178c8:	4798      	blx	r3
 80178ca:	6863      	ldr	r3, [r4, #4]
 80178cc:	4628      	mov	r0, r5
 80178ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80178d0:	4631      	mov	r1, r6
 80178d2:	4798      	blx	r3
 80178d4:	4620      	mov	r0, r4
 80178d6:	bd70      	pop	{r4, r5, r6, pc}
 80178d8:	0802fa50 	.word	0x0802fa50
 80178dc:	0802f2b4 	.word	0x0802f2b4
 80178e0:	2001343a 	.word	0x2001343a
 80178e4:	20013438 	.word	0x20013438

080178e8 <_ZN8touchgfx6Screen4drawEv>:
 80178e8:	b507      	push	{r0, r1, r2, lr}
 80178ea:	4b09      	ldr	r3, [pc, #36]	; (8017910 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80178ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 80178f0:	4b08      	ldr	r3, [pc, #32]	; (8017914 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80178f2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80178f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80178fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80178fe:	6803      	ldr	r3, [r0, #0]
 8017900:	2100      	movs	r1, #0
 8017902:	9100      	str	r1, [sp, #0]
 8017904:	689b      	ldr	r3, [r3, #8]
 8017906:	4669      	mov	r1, sp
 8017908:	4798      	blx	r3
 801790a:	b003      	add	sp, #12
 801790c:	f85d fb04 	ldr.w	pc, [sp], #4
 8017910:	20013438 	.word	0x20013438
 8017914:	2001343a 	.word	0x2001343a

08017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801791c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017920:	2b00      	cmp	r3, #0
 8017922:	b089      	sub	sp, #36	; 0x24
 8017924:	4680      	mov	r8, r0
 8017926:	460c      	mov	r4, r1
 8017928:	4615      	mov	r5, r2
 801792a:	dd0e      	ble.n	801794a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801792c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017930:	2b00      	cmp	r3, #0
 8017932:	dd0a      	ble.n	801794a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017934:	4628      	mov	r0, r5
 8017936:	f7ff ff5b 	bl	80177f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801793a:	4621      	mov	r1, r4
 801793c:	f7fe fa3d 	bl	8015dba <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017940:	69eb      	ldr	r3, [r5, #28]
 8017942:	b928      	cbnz	r0, 8017950 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017944:	461d      	mov	r5, r3
 8017946:	2b00      	cmp	r3, #0
 8017948:	d1f4      	bne.n	8017934 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801794a:	b009      	add	sp, #36	; 0x24
 801794c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017950:	ae04      	add	r6, sp, #16
 8017952:	2b00      	cmp	r3, #0
 8017954:	f000 80b5 	beq.w	8017ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017958:	682b      	ldr	r3, [r5, #0]
 801795a:	4629      	mov	r1, r5
 801795c:	68db      	ldr	r3, [r3, #12]
 801795e:	a802      	add	r0, sp, #8
 8017960:	4798      	blx	r3
 8017962:	4628      	mov	r0, r5
 8017964:	f7ff ff60 	bl	8017828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017968:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801796c:	4407      	add	r7, r0
 801796e:	4628      	mov	r0, r5
 8017970:	f7ff ff6e 	bl	8017850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017974:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017978:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801797c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017980:	4418      	add	r0, r3
 8017982:	4621      	mov	r1, r4
 8017984:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017988:	f8ad 0012 	strh.w	r0, [sp, #18]
 801798c:	b23f      	sxth	r7, r7
 801798e:	4630      	mov	r0, r6
 8017990:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017994:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017998:	f7f9 f9dc 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801799c:	4628      	mov	r0, r5
 801799e:	f7ff ff27 	bl	80177f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80179a2:	4602      	mov	r2, r0
 80179a4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80179a8:	ab06      	add	r3, sp, #24
 80179aa:	e883 0003 	stmia.w	r3, {r0, r1}
 80179ae:	4611      	mov	r1, r2
 80179b0:	4618      	mov	r0, r3
 80179b2:	f7f9 f9cf 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 80179b6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80179ba:	f9b4 1000 	ldrsh.w	r1, [r4]
 80179be:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80179c2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80179c6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80179ca:	4299      	cmp	r1, r3
 80179cc:	d10b      	bne.n	80179e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80179ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80179d2:	4552      	cmp	r2, sl
 80179d4:	d107      	bne.n	80179e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80179d6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80179da:	455a      	cmp	r2, fp
 80179dc:	d103      	bne.n	80179e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80179de:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80179e2:	454a      	cmp	r2, r9
 80179e4:	d06d      	beq.n	8017ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80179e6:	f1bb 0f00 	cmp.w	fp, #0
 80179ea:	dd65      	ble.n	8017ab8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80179ec:	f1b9 0f00 	cmp.w	r9, #0
 80179f0:	dd62      	ble.n	8017ab8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80179f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80179f6:	fa1f f08a 	uxth.w	r0, sl
 80179fa:	4552      	cmp	r2, sl
 80179fc:	9000      	str	r0, [sp, #0]
 80179fe:	da12      	bge.n	8017a26 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017a00:	9301      	str	r3, [sp, #4]
 8017a02:	9b00      	ldr	r3, [sp, #0]
 8017a04:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017a08:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017a0c:	1a9a      	subs	r2, r3, r2
 8017a0e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017a12:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017a16:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017a1a:	69ea      	ldr	r2, [r5, #28]
 8017a1c:	4631      	mov	r1, r6
 8017a1e:	4640      	mov	r0, r8
 8017a20:	f7ff ff7a 	bl	8017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017a24:	9b01      	ldr	r3, [sp, #4]
 8017a26:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017a2a:	429a      	cmp	r2, r3
 8017a2c:	b29f      	uxth	r7, r3
 8017a2e:	da0d      	bge.n	8017a4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017a30:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017a34:	1aba      	subs	r2, r7, r2
 8017a36:	f8ad a012 	strh.w	sl, [sp, #18]
 8017a3a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017a3e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017a42:	69ea      	ldr	r2, [r5, #28]
 8017a44:	4631      	mov	r1, r6
 8017a46:	4640      	mov	r0, r8
 8017a48:	f7ff ff66 	bl	8017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017a4c:	8822      	ldrh	r2, [r4, #0]
 8017a4e:	88a3      	ldrh	r3, [r4, #4]
 8017a50:	445f      	add	r7, fp
 8017a52:	4413      	add	r3, r2
 8017a54:	b29b      	uxth	r3, r3
 8017a56:	b2bf      	uxth	r7, r7
 8017a58:	b23a      	sxth	r2, r7
 8017a5a:	b219      	sxth	r1, r3
 8017a5c:	4291      	cmp	r1, r2
 8017a5e:	dd0d      	ble.n	8017a7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017a60:	1bdb      	subs	r3, r3, r7
 8017a62:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017a66:	f8ad a012 	strh.w	sl, [sp, #18]
 8017a6a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017a6e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017a72:	69ea      	ldr	r2, [r5, #28]
 8017a74:	4631      	mov	r1, r6
 8017a76:	4640      	mov	r0, r8
 8017a78:	f7ff ff4e 	bl	8017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017a7c:	88e2      	ldrh	r2, [r4, #6]
 8017a7e:	8863      	ldrh	r3, [r4, #2]
 8017a80:	4413      	add	r3, r2
 8017a82:	9a00      	ldr	r2, [sp, #0]
 8017a84:	444a      	add	r2, r9
 8017a86:	b29b      	uxth	r3, r3
 8017a88:	fa1f f982 	uxth.w	r9, r2
 8017a8c:	fa0f f289 	sxth.w	r2, r9
 8017a90:	b219      	sxth	r1, r3
 8017a92:	428a      	cmp	r2, r1
 8017a94:	da15      	bge.n	8017ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017a96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017a9a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017a9e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017aa2:	eba3 0309 	sub.w	r3, r3, r9
 8017aa6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017aaa:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017aae:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017ab2:	69ea      	ldr	r2, [r5, #28]
 8017ab4:	4631      	mov	r1, r6
 8017ab6:	e001      	b.n	8017abc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017ab8:	69ea      	ldr	r2, [r5, #28]
 8017aba:	4621      	mov	r1, r4
 8017abc:	4640      	mov	r0, r8
 8017abe:	f7ff ff2b 	bl	8017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017ac2:	4628      	mov	r0, r5
 8017ac4:	f7ff fe94 	bl	80177f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017ac8:	6861      	ldr	r1, [r4, #4]
 8017aca:	4602      	mov	r2, r0
 8017acc:	6820      	ldr	r0, [r4, #0]
 8017ace:	4633      	mov	r3, r6
 8017ad0:	c303      	stmia	r3!, {r0, r1}
 8017ad2:	4611      	mov	r1, r2
 8017ad4:	4630      	mov	r0, r6
 8017ad6:	f7f9 f93d 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8017ada:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017ade:	2b00      	cmp	r3, #0
 8017ae0:	f77f af33 	ble.w	801794a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017ae4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017ae8:	2b00      	cmp	r3, #0
 8017aea:	f77f af2e 	ble.w	801794a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017aee:	4628      	mov	r0, r5
 8017af0:	f7ff fe9a 	bl	8017828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017af4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017af8:	1a18      	subs	r0, r3, r0
 8017afa:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017afe:	4628      	mov	r0, r5
 8017b00:	f7ff fea6 	bl	8017850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017b04:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017b08:	1a18      	subs	r0, r3, r0
 8017b0a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017b0e:	682b      	ldr	r3, [r5, #0]
 8017b10:	4631      	mov	r1, r6
 8017b12:	689b      	ldr	r3, [r3, #8]
 8017b14:	4628      	mov	r0, r5
 8017b16:	4798      	blx	r3
 8017b18:	e717      	b.n	801794a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017b1a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017b1a:	b570      	push	{r4, r5, r6, lr}
 8017b1c:	460c      	mov	r4, r1
 8017b1e:	b086      	sub	sp, #24
 8017b20:	1d06      	adds	r6, r0, #4
 8017b22:	2300      	movs	r3, #0
 8017b24:	4631      	mov	r1, r6
 8017b26:	4605      	mov	r5, r0
 8017b28:	a802      	add	r0, sp, #8
 8017b2a:	9301      	str	r3, [sp, #4]
 8017b2c:	f7ff fba8 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b30:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017b34:	8822      	ldrh	r2, [r4, #0]
 8017b36:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017b3a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017b3e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017b42:	1ad2      	subs	r2, r2, r3
 8017b44:	8863      	ldrh	r3, [r4, #2]
 8017b46:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017b4a:	1a5b      	subs	r3, r3, r1
 8017b4c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017b50:	f8ad 1016 	strh.w	r1, [sp, #22]
 8017b54:	aa01      	add	r2, sp, #4
 8017b56:	a904      	add	r1, sp, #16
 8017b58:	4630      	mov	r0, r6
 8017b5a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017b5e:	f7f9 f9d1 	bl	8010f04 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017b62:	9a01      	ldr	r2, [sp, #4]
 8017b64:	b11a      	cbz	r2, 8017b6e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017b66:	4621      	mov	r1, r4
 8017b68:	4628      	mov	r0, r5
 8017b6a:	f7ff fed5 	bl	8017918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017b6e:	b006      	add	sp, #24
 8017b70:	bd70      	pop	{r4, r5, r6, pc}

08017b72 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017b72:	b530      	push	{r4, r5, lr}
 8017b74:	4602      	mov	r2, r0
 8017b76:	4604      	mov	r4, r0
 8017b78:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017b7c:	b085      	sub	sp, #20
 8017b7e:	460d      	mov	r5, r1
 8017b80:	6851      	ldr	r1, [r2, #4]
 8017b82:	466b      	mov	r3, sp
 8017b84:	c303      	stmia	r3!, {r0, r1}
 8017b86:	4629      	mov	r1, r5
 8017b88:	4668      	mov	r0, sp
 8017b8a:	f7f9 f8e3 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 8017b8e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8017b92:	b12b      	cbz	r3, 8017ba0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017b94:	4669      	mov	r1, sp
 8017b96:	4620      	mov	r0, r4
 8017b98:	f7ff ffbf 	bl	8017b1a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017b9c:	b005      	add	sp, #20
 8017b9e:	bd30      	pop	{r4, r5, pc}
 8017ba0:	3404      	adds	r4, #4
 8017ba2:	4621      	mov	r1, r4
 8017ba4:	a802      	add	r0, sp, #8
 8017ba6:	f7ff fb6b 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017baa:	f8bd 3000 	ldrh.w	r3, [sp]
 8017bae:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017bb2:	1a9b      	subs	r3, r3, r2
 8017bb4:	f8ad 3000 	strh.w	r3, [sp]
 8017bb8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017bbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017bc0:	4669      	mov	r1, sp
 8017bc2:	1a9b      	subs	r3, r3, r2
 8017bc4:	4620      	mov	r0, r4
 8017bc6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017bca:	f7f9 f962 	bl	8010e92 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017bce:	e7e5      	b.n	8017b9c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017bd0:	680a      	ldr	r2, [r1, #0]
 8017bd2:	460b      	mov	r3, r1
 8017bd4:	6992      	ldr	r2, [r2, #24]
 8017bd6:	1d01      	adds	r1, r0, #4
 8017bd8:	4618      	mov	r0, r3
 8017bda:	4710      	bx	r2

08017bdc <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8017bdc:	4298      	cmp	r0, r3
 8017bde:	d200      	bcs.n	8017be2 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8017be0:	b913      	cbnz	r3, 8017be8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8017be2:	440a      	add	r2, r1
 8017be4:	b210      	sxth	r0, r2
 8017be6:	4770      	bx	lr
 8017be8:	ee07 0a90 	vmov	s15, r0
 8017bec:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017bf0:	ee07 3a90 	vmov	s15, r3
 8017bf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017bf8:	eddf 4a15 	vldr	s9, [pc, #84]	; 8017c50 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8017bfc:	eddf 5a15 	vldr	s11, [pc, #84]	; 8017c54 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8017c00:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017c04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017c08:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017c0c:	ee07 2a90 	vmov	s15, r2
 8017c10:	eee7 5a24 	vfma.f32	s11, s14, s9
 8017c14:	ee27 5a07 	vmul.f32	s10, s14, s14
 8017c18:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017c1c:	eee5 6a25 	vfma.f32	s13, s10, s11
 8017c20:	ee07 1a90 	vmov	s15, r1
 8017c24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c28:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017c2c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017c30:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c38:	bfcc      	ite	gt
 8017c3a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017c3e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017c42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017c46:	ee17 3a90 	vmov	r3, s15
 8017c4a:	b218      	sxth	r0, r3
 8017c4c:	4770      	bx	lr
 8017c4e:	bf00      	nop
 8017c50:	402ce6b0 	.word	0x402ce6b0
 8017c54:	3fd9cd60 	.word	0x3fd9cd60

08017c58 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017c58:	4298      	cmp	r0, r3
 8017c5a:	d200      	bcs.n	8017c5e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017c5c:	b913      	cbnz	r3, 8017c64 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8017c5e:	440a      	add	r2, r1
 8017c60:	b210      	sxth	r0, r2
 8017c62:	4770      	bx	lr
 8017c64:	ee07 0a90 	vmov	s15, r0
 8017c68:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017c6c:	ee07 3a90 	vmov	s15, r3
 8017c70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c74:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017c78:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017c7c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017c80:	ee07 2a90 	vmov	s15, r2
 8017c84:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017c88:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017c8c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017c90:	ee07 1a90 	vmov	s15, r1
 8017c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c98:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017c9c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017ca0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017ca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ca8:	bfcc      	ite	gt
 8017caa:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017cae:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017cb2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017cb6:	ee17 3a90 	vmov	r3, s15
 8017cba:	b218      	sxth	r0, r3
 8017cbc:	4770      	bx	lr

08017cbe <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017cbe:	4298      	cmp	r0, r3
 8017cc0:	d200      	bcs.n	8017cc4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017cc2:	b913      	cbnz	r3, 8017cca <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017cc4:	440a      	add	r2, r1
 8017cc6:	b210      	sxth	r0, r2
 8017cc8:	4770      	bx	lr
 8017cca:	ee07 2a90 	vmov	s15, r2
 8017cce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017cd2:	ee07 0a90 	vmov	s15, r0
 8017cd6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017cda:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017cde:	ee07 3a10 	vmov	s14, r3
 8017ce2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017ce6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017cea:	ee07 1a90 	vmov	s15, r1
 8017cee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017cf2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017cf6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017cfa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d02:	bfcc      	ite	gt
 8017d04:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017d08:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017d0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017d10:	ee17 3a90 	vmov	r3, s15
 8017d14:	b218      	sxth	r0, r3
 8017d16:	4770      	bx	lr

08017d18 <_ZN8touchgfx12TextProviderC1Ev>:
 8017d18:	b538      	push	{r3, r4, r5, lr}
 8017d1a:	2500      	movs	r5, #0
 8017d1c:	2302      	movs	r3, #2
 8017d1e:	4604      	mov	r4, r0
 8017d20:	e9c0 5500 	strd	r5, r5, [r0]
 8017d24:	7403      	strb	r3, [r0, #16]
 8017d26:	6145      	str	r5, [r0, #20]
 8017d28:	7605      	strb	r5, [r0, #24]
 8017d2a:	83c5      	strh	r5, [r0, #30]
 8017d2c:	8405      	strh	r5, [r0, #32]
 8017d2e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017d30:	8705      	strh	r5, [r0, #56]	; 0x38
 8017d32:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017d34:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017d38:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017d3c:	220e      	movs	r2, #14
 8017d3e:	4629      	mov	r1, r5
 8017d40:	304c      	adds	r0, #76	; 0x4c
 8017d42:	f013 f9e6 	bl	802b112 <memset>
 8017d46:	2301      	movs	r3, #1
 8017d48:	4620      	mov	r0, r4
 8017d4a:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017d4e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017d52:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017d56:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017d5a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017d5e:	f7f0 fc47 	bl	80085f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017d62:	4620      	mov	r0, r4
 8017d64:	bd38      	pop	{r3, r4, r5, pc}

08017d66 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017d66:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017d68:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d6c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017d6e:	fab0 f080 	clz	r0, r0
 8017d72:	0940      	lsrs	r0, r0, #5
 8017d74:	4770      	bx	lr

08017d76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017d76:	b530      	push	{r4, r5, lr}
 8017d78:	2500      	movs	r5, #0
 8017d7a:	2401      	movs	r4, #1
 8017d7c:	6843      	ldr	r3, [r0, #4]
 8017d7e:	b913      	cbnz	r3, 8017d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017d80:	6803      	ldr	r3, [r0, #0]
 8017d82:	b313      	cbz	r3, 8017dca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017d84:	6043      	str	r3, [r0, #4]
 8017d86:	7e03      	ldrb	r3, [r0, #24]
 8017d88:	b143      	cbz	r3, 8017d9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017d8a:	6943      	ldr	r3, [r0, #20]
 8017d8c:	b12b      	cbz	r3, 8017d9a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017d8e:	881a      	ldrh	r2, [r3, #0]
 8017d90:	b11a      	cbz	r2, 8017d9a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017d92:	1c9a      	adds	r2, r3, #2
 8017d94:	6142      	str	r2, [r0, #20]
 8017d96:	8818      	ldrh	r0, [r3, #0]
 8017d98:	bd30      	pop	{r4, r5, pc}
 8017d9a:	7605      	strb	r5, [r0, #24]
 8017d9c:	6843      	ldr	r3, [r0, #4]
 8017d9e:	8819      	ldrh	r1, [r3, #0]
 8017da0:	b199      	cbz	r1, 8017dca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017da2:	1c9a      	adds	r2, r3, #2
 8017da4:	2902      	cmp	r1, #2
 8017da6:	6042      	str	r2, [r0, #4]
 8017da8:	d1f5      	bne.n	8017d96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017daa:	7c03      	ldrb	r3, [r0, #16]
 8017dac:	2b01      	cmp	r3, #1
 8017dae:	d8e5      	bhi.n	8017d7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017db0:	1c5a      	adds	r2, r3, #1
 8017db2:	3302      	adds	r3, #2
 8017db4:	7402      	strb	r2, [r0, #16]
 8017db6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017dba:	6143      	str	r3, [r0, #20]
 8017dbc:	2b00      	cmp	r3, #0
 8017dbe:	d0dd      	beq.n	8017d7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017dc0:	881b      	ldrh	r3, [r3, #0]
 8017dc2:	2b00      	cmp	r3, #0
 8017dc4:	d0da      	beq.n	8017d7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017dc6:	7604      	strb	r4, [r0, #24]
 8017dc8:	e7d8      	b.n	8017d7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017dca:	2000      	movs	r0, #0
 8017dcc:	e7e4      	b.n	8017d98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017dce:	b430      	push	{r4, r5}
 8017dd0:	6001      	str	r1, [r0, #0]
 8017dd2:	2100      	movs	r1, #0
 8017dd4:	6041      	str	r1, [r0, #4]
 8017dd6:	6815      	ldr	r5, [r2, #0]
 8017dd8:	6085      	str	r5, [r0, #8]
 8017dda:	6852      	ldr	r2, [r2, #4]
 8017ddc:	6443      	str	r3, [r0, #68]	; 0x44
 8017dde:	9b02      	ldr	r3, [sp, #8]
 8017de0:	60c2      	str	r2, [r0, #12]
 8017de2:	7401      	strb	r1, [r0, #16]
 8017de4:	6141      	str	r1, [r0, #20]
 8017de6:	7601      	strb	r1, [r0, #24]
 8017de8:	8701      	strh	r1, [r0, #56]	; 0x38
 8017dea:	8401      	strh	r1, [r0, #32]
 8017dec:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017df0:	6483      	str	r3, [r0, #72]	; 0x48
 8017df2:	bc30      	pop	{r4, r5}
 8017df4:	f7f0 bbfc 	b.w	80085f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017df8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017df8:	b408      	push	{r3}
 8017dfa:	b510      	push	{r4, lr}
 8017dfc:	b085      	sub	sp, #20
 8017dfe:	ac07      	add	r4, sp, #28
 8017e00:	f854 3b04 	ldr.w	r3, [r4], #4
 8017e04:	9300      	str	r3, [sp, #0]
 8017e06:	4613      	mov	r3, r2
 8017e08:	4622      	mov	r2, r4
 8017e0a:	9403      	str	r4, [sp, #12]
 8017e0c:	f7ff ffdf 	bl	8017dce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017e10:	b005      	add	sp, #20
 8017e12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017e16:	b001      	add	sp, #4
 8017e18:	4770      	bx	lr

08017e1a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017e1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e1c:	4605      	mov	r5, r0
 8017e1e:	4608      	mov	r0, r1
 8017e20:	b1e9      	cbz	r1, 8017e5e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017e22:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017e26:	460b      	mov	r3, r1
 8017e28:	f101 0708 	add.w	r7, r1, #8
 8017e2c:	4622      	mov	r2, r4
 8017e2e:	6818      	ldr	r0, [r3, #0]
 8017e30:	6859      	ldr	r1, [r3, #4]
 8017e32:	4626      	mov	r6, r4
 8017e34:	c603      	stmia	r6!, {r0, r1}
 8017e36:	3308      	adds	r3, #8
 8017e38:	42bb      	cmp	r3, r7
 8017e3a:	4634      	mov	r4, r6
 8017e3c:	d1f7      	bne.n	8017e2e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017e3e:	6818      	ldr	r0, [r3, #0]
 8017e40:	6030      	str	r0, [r6, #0]
 8017e42:	889b      	ldrh	r3, [r3, #4]
 8017e44:	80b3      	strh	r3, [r6, #4]
 8017e46:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017e4a:	015b      	lsls	r3, r3, #5
 8017e4c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017e50:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017e54:	430b      	orrs	r3, r1
 8017e56:	425b      	negs	r3, r3
 8017e58:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017e5c:	4610      	mov	r0, r2
 8017e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017e60 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017e60:	b538      	push	{r3, r4, r5, lr}
 8017e62:	460c      	mov	r4, r1
 8017e64:	6811      	ldr	r1, [r2, #0]
 8017e66:	4610      	mov	r0, r2
 8017e68:	68cd      	ldr	r5, [r1, #12]
 8017e6a:	4619      	mov	r1, r3
 8017e6c:	47a8      	blx	r5
 8017e6e:	2800      	cmp	r0, #0
 8017e70:	bf08      	it	eq
 8017e72:	4620      	moveq	r0, r4
 8017e74:	bd38      	pop	{r3, r4, r5, pc}
	...

08017e78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017e7a:	4604      	mov	r4, r0
 8017e7c:	4615      	mov	r5, r2
 8017e7e:	4608      	mov	r0, r1
 8017e80:	b93a      	cbnz	r2, 8017e92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017e82:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017e86:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017e8a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017e8e:	4628      	mov	r0, r5
 8017e90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017e92:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017e96:	8893      	ldrh	r3, [r2, #4]
 8017e98:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017e9c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017ea0:	79ee      	ldrb	r6, [r5, #7]
 8017ea2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017ea6:	4316      	orrs	r6, r2
 8017ea8:	19da      	adds	r2, r3, r7
 8017eaa:	b291      	uxth	r1, r2
 8017eac:	291d      	cmp	r1, #29
 8017eae:	b2b7      	uxth	r7, r6
 8017eb0:	d87a      	bhi.n	8017fa8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017eb2:	2201      	movs	r2, #1
 8017eb4:	408a      	lsls	r2, r1
 8017eb6:	4975      	ldr	r1, [pc, #468]	; (801808c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017eb8:	420a      	tst	r2, r1
 8017eba:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017ebe:	d12d      	bne.n	8017f1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017ec0:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017ec4:	d070      	beq.n	8017fa8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017ec6:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017eca:	462b      	mov	r3, r5
 8017ecc:	f105 0e08 	add.w	lr, r5, #8
 8017ed0:	4615      	mov	r5, r2
 8017ed2:	6818      	ldr	r0, [r3, #0]
 8017ed4:	6859      	ldr	r1, [r3, #4]
 8017ed6:	4694      	mov	ip, r2
 8017ed8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017edc:	3308      	adds	r3, #8
 8017ede:	4573      	cmp	r3, lr
 8017ee0:	4662      	mov	r2, ip
 8017ee2:	d1f6      	bne.n	8017ed2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017ee4:	6818      	ldr	r0, [r3, #0]
 8017ee6:	f8cc 0000 	str.w	r0, [ip]
 8017eea:	889b      	ldrh	r3, [r3, #4]
 8017eec:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017ef0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017ef4:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017ef8:	b2b3      	uxth	r3, r6
 8017efa:	1aca      	subs	r2, r1, r3
 8017efc:	b292      	uxth	r2, r2
 8017efe:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017f02:	10d2      	asrs	r2, r2, #3
 8017f04:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017f08:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017f0c:	4302      	orrs	r2, r0
 8017f0e:	1bcf      	subs	r7, r1, r7
 8017f10:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017f14:	1afb      	subs	r3, r7, r3
 8017f16:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017f1a:	e7b8      	b.n	8017e8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017f1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017f1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017f22:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017f24:	f640 6333 	movw	r3, #3635	; 0xe33
 8017f28:	4299      	cmp	r1, r3
 8017f2a:	d110      	bne.n	8017f4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017f2c:	6803      	ldr	r3, [r0, #0]
 8017f2e:	68db      	ldr	r3, [r3, #12]
 8017f30:	4798      	blx	r3
 8017f32:	7b41      	ldrb	r1, [r0, #13]
 8017f34:	00cb      	lsls	r3, r1, #3
 8017f36:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017f3a:	7a03      	ldrb	r3, [r0, #8]
 8017f3c:	0648      	lsls	r0, r1, #25
 8017f3e:	ea43 0302 	orr.w	r3, r3, r2
 8017f42:	bf44      	itt	mi
 8017f44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f48:	b21b      	sxthmi	r3, r3
 8017f4a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017f4e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017f52:	443b      	add	r3, r7
 8017f54:	4433      	add	r3, r6
 8017f56:	b29b      	uxth	r3, r3
 8017f58:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017f5c:	462a      	mov	r2, r5
 8017f5e:	f105 0c08 	add.w	ip, r5, #8
 8017f62:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017f66:	4635      	mov	r5, r6
 8017f68:	6810      	ldr	r0, [r2, #0]
 8017f6a:	6851      	ldr	r1, [r2, #4]
 8017f6c:	4637      	mov	r7, r6
 8017f6e:	c703      	stmia	r7!, {r0, r1}
 8017f70:	3208      	adds	r2, #8
 8017f72:	4562      	cmp	r2, ip
 8017f74:	463e      	mov	r6, r7
 8017f76:	d1f7      	bne.n	8017f68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017f78:	6810      	ldr	r0, [r2, #0]
 8017f7a:	6038      	str	r0, [r7, #0]
 8017f7c:	8892      	ldrh	r2, [r2, #4]
 8017f7e:	80ba      	strh	r2, [r7, #4]
 8017f80:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017f84:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017f88:	10db      	asrs	r3, r3, #3
 8017f8a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017f8e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017f92:	4313      	orrs	r3, r2
 8017f94:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017f98:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017f9c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017fa0:	1a9b      	subs	r3, r3, r2
 8017fa2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017fa6:	e772      	b.n	8017e8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017fa8:	f023 0204 	bic.w	r2, r3, #4
 8017fac:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017fb0:	428a      	cmp	r2, r1
 8017fb2:	d003      	beq.n	8017fbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017fb4:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017fb8:	4293      	cmp	r3, r2
 8017fba:	d120      	bne.n	8017ffe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017fbc:	3b01      	subs	r3, #1
 8017fbe:	4602      	mov	r2, r0
 8017fc0:	b29b      	uxth	r3, r3
 8017fc2:	4629      	mov	r1, r5
 8017fc4:	4620      	mov	r0, r4
 8017fc6:	f7ff ff4b 	bl	8017e60 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017fca:	7b41      	ldrb	r1, [r0, #13]
 8017fcc:	00cb      	lsls	r3, r1, #3
 8017fce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017fd2:	7a03      	ldrb	r3, [r0, #8]
 8017fd4:	0649      	lsls	r1, r1, #25
 8017fd6:	ea43 0302 	orr.w	r3, r3, r2
 8017fda:	bf44      	itt	mi
 8017fdc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017fe0:	b21b      	sxthmi	r3, r3
 8017fe2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017fe6:	7b6b      	ldrb	r3, [r5, #13]
 8017fe8:	7aaa      	ldrb	r2, [r5, #10]
 8017fea:	005b      	lsls	r3, r3, #1
 8017fec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017ff0:	4313      	orrs	r3, r2
 8017ff2:	115a      	asrs	r2, r3, #5
 8017ff4:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017ff8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017ffc:	e036      	b.n	801806c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017ffe:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018002:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018006:	7a2a      	ldrb	r2, [r5, #8]
 8018008:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801800c:	ea42 0201 	orr.w	r2, r2, r1
 8018010:	bf1c      	itt	ne
 8018012:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018016:	b212      	sxthne	r2, r2
 8018018:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801801c:	f640 6109 	movw	r1, #3593	; 0xe09
 8018020:	f023 0210 	bic.w	r2, r3, #16
 8018024:	428a      	cmp	r2, r1
 8018026:	d003      	beq.n	8018030 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018028:	f640 6213 	movw	r2, #3603	; 0xe13
 801802c:	4293      	cmp	r3, r2
 801802e:	d12a      	bne.n	8018086 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018030:	7b6e      	ldrb	r6, [r5, #13]
 8018032:	0076      	lsls	r6, r6, #1
 8018034:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018038:	7aae      	ldrb	r6, [r5, #10]
 801803a:	4316      	orrs	r6, r2
 801803c:	f640 6213 	movw	r2, #3603	; 0xe13
 8018040:	4293      	cmp	r3, r2
 8018042:	bf18      	it	ne
 8018044:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018048:	4602      	mov	r2, r0
 801804a:	bf14      	ite	ne
 801804c:	b29b      	uxthne	r3, r3
 801804e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018052:	4629      	mov	r1, r5
 8018054:	4620      	mov	r0, r4
 8018056:	f7ff ff03 	bl	8017e60 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801805a:	7b43      	ldrb	r3, [r0, #13]
 801805c:	7a82      	ldrb	r2, [r0, #10]
 801805e:	005b      	lsls	r3, r3, #1
 8018060:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018064:	4313      	orrs	r3, r2
 8018066:	1af6      	subs	r6, r6, r3
 8018068:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801806c:	7b69      	ldrb	r1, [r5, #13]
 801806e:	00cb      	lsls	r3, r1, #3
 8018070:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018074:	7a2b      	ldrb	r3, [r5, #8]
 8018076:	4313      	orrs	r3, r2
 8018078:	064a      	lsls	r2, r1, #25
 801807a:	bf44      	itt	mi
 801807c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018080:	b21b      	sxthmi	r3, r3
 8018082:	1bdb      	subs	r3, r3, r7
 8018084:	e747      	b.n	8017f16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018086:	2300      	movs	r3, #0
 8018088:	e7b6      	b.n	8017ff8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801808a:	bf00      	nop
 801808c:	3fc00079 	.word	0x3fc00079

08018090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018090:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018094:	4604      	mov	r4, r0
 8018096:	b942      	cbnz	r2, 80180aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018098:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801809c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80180a0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80180a4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80180a8:	e047      	b.n	801813a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80180aa:	7b51      	ldrb	r1, [r2, #13]
 80180ac:	8893      	ldrh	r3, [r2, #4]
 80180ae:	010d      	lsls	r5, r1, #4
 80180b0:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80180b4:	79d5      	ldrb	r5, [r2, #7]
 80180b6:	4305      	orrs	r5, r0
 80180b8:	2d04      	cmp	r5, #4
 80180ba:	bfcc      	ite	gt
 80180bc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80180c0:	f04f 0e01 	movle.w	lr, #1
 80180c4:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80180c8:	f200 80ab 	bhi.w	8018222 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80180cc:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80180d0:	4283      	cmp	r3, r0
 80180d2:	d216      	bcs.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180d4:	f240 605b 	movw	r0, #1627	; 0x65b
 80180d8:	4283      	cmp	r3, r0
 80180da:	d859      	bhi.n	8018190 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80180dc:	f240 6057 	movw	r0, #1623	; 0x657
 80180e0:	4283      	cmp	r3, r0
 80180e2:	d20e      	bcs.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180e4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80180e8:	d24a      	bcs.n	8018180 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80180ea:	f240 604e 	movw	r0, #1614	; 0x64e
 80180ee:	4283      	cmp	r3, r0
 80180f0:	d207      	bcs.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180f2:	f240 601a 	movw	r0, #1562	; 0x61a
 80180f6:	4283      	cmp	r3, r0
 80180f8:	d02a      	beq.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80180fa:	d821      	bhi.n	8018140 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80180fc:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018100:	d35b      	bcc.n	80181ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018102:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018106:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801810a:	f040 80d0 	bne.w	80182ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801810e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018112:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018116:	f040 80ca 	bne.w	80182ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801811a:	00cb      	lsls	r3, r1, #3
 801811c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018120:	7a13      	ldrb	r3, [r2, #8]
 8018122:	0649      	lsls	r1, r1, #25
 8018124:	ea43 0300 	orr.w	r3, r3, r0
 8018128:	bf44      	itt	mi
 801812a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801812e:	b21b      	sxthmi	r3, r3
 8018130:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018134:	1b5d      	subs	r5, r3, r5
 8018136:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801813a:	4610      	mov	r0, r2
 801813c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018140:	f240 604b 	movw	r0, #1611	; 0x64b
 8018144:	4283      	cmp	r3, r0
 8018146:	d338      	bcc.n	80181ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018148:	f240 604c 	movw	r0, #1612	; 0x64c
 801814c:	4283      	cmp	r3, r0
 801814e:	d9d8      	bls.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018150:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018154:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018158:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801815c:	f040 80f2 	bne.w	8018344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018160:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018164:	f040 80ee 	bne.w	8018344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018168:	00cb      	lsls	r3, r1, #3
 801816a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801816e:	7a13      	ldrb	r3, [r2, #8]
 8018170:	064e      	lsls	r6, r1, #25
 8018172:	ea43 0300 	orr.w	r3, r3, r0
 8018176:	bf44      	itt	mi
 8018178:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801817c:	b21b      	sxthmi	r3, r3
 801817e:	e7d9      	b.n	8018134 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018180:	f240 6054 	movw	r0, #1620	; 0x654
 8018184:	4283      	cmp	r3, r0
 8018186:	d8e3      	bhi.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018188:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801818c:	d9e0      	bls.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801818e:	e7b8      	b.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018190:	f240 6074 	movw	r0, #1652	; 0x674
 8018194:	4283      	cmp	r3, r0
 8018196:	d0b4      	beq.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018198:	d82d      	bhi.n	80181f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801819a:	f240 605e 	movw	r0, #1630	; 0x65e
 801819e:	4283      	cmp	r3, r0
 80181a0:	d804      	bhi.n	80181ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80181a2:	f240 605d 	movw	r0, #1629	; 0x65d
 80181a6:	4283      	cmp	r3, r0
 80181a8:	d3d2      	bcc.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80181aa:	e7aa      	b.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80181ac:	f240 605f 	movw	r0, #1631	; 0x65f
 80181b0:	4283      	cmp	r3, r0
 80181b2:	d0cd      	beq.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80181b4:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80181b8:	d0a3      	beq.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80181ba:	00cb      	lsls	r3, r1, #3
 80181bc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80181c0:	7a13      	ldrb	r3, [r2, #8]
 80181c2:	0649      	lsls	r1, r1, #25
 80181c4:	ea43 0300 	orr.w	r3, r3, r0
 80181c8:	bf44      	itt	mi
 80181ca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80181ce:	b21b      	sxthmi	r3, r3
 80181d0:	1b5d      	subs	r5, r3, r5
 80181d2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80181d6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80181da:	7b53      	ldrb	r3, [r2, #13]
 80181dc:	015b      	lsls	r3, r3, #5
 80181de:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80181e2:	7993      	ldrb	r3, [r2, #6]
 80181e4:	430b      	orrs	r3, r1
 80181e6:	005b      	lsls	r3, r3, #1
 80181e8:	2105      	movs	r1, #5
 80181ea:	fb93 f3f1 	sdiv	r3, r3, r1
 80181ee:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80181f2:	440b      	add	r3, r1
 80181f4:	e756      	b.n	80180a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80181f6:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80181fa:	4283      	cmp	r3, r0
 80181fc:	d809      	bhi.n	8018212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80181fe:	f240 60df 	movw	r0, #1759	; 0x6df
 8018202:	4283      	cmp	r3, r0
 8018204:	f4bf af7d 	bcs.w	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018208:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801820c:	2b05      	cmp	r3, #5
 801820e:	d8d4      	bhi.n	80181ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018210:	e777      	b.n	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018212:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018216:	4283      	cmp	r3, r0
 8018218:	d09a      	beq.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801821a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801821e:	4283      	cmp	r3, r0
 8018220:	e7ca      	b.n	80181b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018222:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018226:	d22b      	bcs.n	8018280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018228:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801822c:	4283      	cmp	r3, r0
 801822e:	d28f      	bcs.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018230:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018234:	4283      	cmp	r3, r0
 8018236:	d816      	bhi.n	8018266 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018238:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801823c:	4283      	cmp	r3, r0
 801823e:	f4bf af60 	bcs.w	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018242:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018246:	4283      	cmp	r3, r0
 8018248:	d80a      	bhi.n	8018260 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801824a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801824e:	4283      	cmp	r3, r0
 8018250:	f4bf af57 	bcs.w	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018254:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018258:	4283      	cmp	r3, r0
 801825a:	f43f af79 	beq.w	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801825e:	e7ac      	b.n	80181ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018260:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018264:	e7f8      	b.n	8018258 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018266:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801826a:	4283      	cmp	r3, r0
 801826c:	d802      	bhi.n	8018274 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801826e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018272:	e798      	b.n	80181a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018274:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018278:	4283      	cmp	r3, r0
 801827a:	f47f af42 	bne.w	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801827e:	e767      	b.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018280:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018284:	4283      	cmp	r3, r0
 8018286:	f43f af63 	beq.w	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801828a:	d802      	bhi.n	8018292 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801828c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018290:	e7f2      	b.n	8018278 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018292:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018296:	4283      	cmp	r3, r0
 8018298:	d805      	bhi.n	80182a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801829a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801829e:	4283      	cmp	r3, r0
 80182a0:	f4ff af2f 	bcc.w	8018102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80182a4:	e754      	b.n	8018150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80182a6:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80182aa:	4283      	cmp	r3, r0
 80182ac:	e7af      	b.n	801820e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80182ae:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80182b2:	4617      	mov	r7, r2
 80182b4:	f102 0808 	add.w	r8, r2, #8
 80182b8:	4666      	mov	r6, ip
 80182ba:	6838      	ldr	r0, [r7, #0]
 80182bc:	6879      	ldr	r1, [r7, #4]
 80182be:	46e6      	mov	lr, ip
 80182c0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80182c4:	3708      	adds	r7, #8
 80182c6:	4547      	cmp	r7, r8
 80182c8:	46f4      	mov	ip, lr
 80182ca:	d1f6      	bne.n	80182ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80182cc:	6838      	ldr	r0, [r7, #0]
 80182ce:	f8ce 0000 	str.w	r0, [lr]
 80182d2:	88b9      	ldrh	r1, [r7, #4]
 80182d4:	f8ae 1004 	strh.w	r1, [lr, #4]
 80182d8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80182dc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80182e0:	d009      	beq.n	80182f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80182e2:	7b51      	ldrb	r1, [r2, #13]
 80182e4:	7992      	ldrb	r2, [r2, #6]
 80182e6:	0149      	lsls	r1, r1, #5
 80182e8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80182ec:	4311      	orrs	r1, r2
 80182ee:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80182f2:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80182f6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80182fa:	b2ad      	uxth	r5, r5
 80182fc:	d00d      	beq.n	801831a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80182fe:	442b      	add	r3, r5
 8018300:	b29b      	uxth	r3, r3
 8018302:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018306:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801830a:	10db      	asrs	r3, r3, #3
 801830c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018310:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018314:	4313      	orrs	r3, r2
 8018316:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801831a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801831e:	00cb      	lsls	r3, r1, #3
 8018320:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018324:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018328:	064f      	lsls	r7, r1, #25
 801832a:	ea43 0302 	orr.w	r3, r3, r2
 801832e:	bf44      	itt	mi
 8018330:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018334:	b21b      	sxthmi	r3, r3
 8018336:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801833a:	1b5b      	subs	r3, r3, r5
 801833c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018340:	4632      	mov	r2, r6
 8018342:	e6fa      	b.n	801813a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018344:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018348:	4617      	mov	r7, r2
 801834a:	f102 0908 	add.w	r9, r2, #8
 801834e:	4666      	mov	r6, ip
 8018350:	6838      	ldr	r0, [r7, #0]
 8018352:	6879      	ldr	r1, [r7, #4]
 8018354:	46e0      	mov	r8, ip
 8018356:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801835a:	3708      	adds	r7, #8
 801835c:	454f      	cmp	r7, r9
 801835e:	46c4      	mov	ip, r8
 8018360:	d1f6      	bne.n	8018350 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018362:	6838      	ldr	r0, [r7, #0]
 8018364:	f8c8 0000 	str.w	r0, [r8]
 8018368:	88b9      	ldrh	r1, [r7, #4]
 801836a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801836e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018372:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018376:	d009      	beq.n	801838c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018378:	7b51      	ldrb	r1, [r2, #13]
 801837a:	7992      	ldrb	r2, [r2, #6]
 801837c:	0149      	lsls	r1, r1, #5
 801837e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018382:	4311      	orrs	r1, r2
 8018384:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018388:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801838c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018390:	d00e      	beq.n	80183b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018392:	eba3 030e 	sub.w	r3, r3, lr
 8018396:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801839a:	b29b      	uxth	r3, r3
 801839c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80183a0:	10db      	asrs	r3, r3, #3
 80183a2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80183a6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80183aa:	4313      	orrs	r3, r2
 80183ac:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80183b0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80183b4:	00cb      	lsls	r3, r1, #3
 80183b6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80183ba:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80183be:	0648      	lsls	r0, r1, #25
 80183c0:	ea43 0302 	orr.w	r3, r3, r2
 80183c4:	bf44      	itt	mi
 80183c6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80183ca:	b21b      	sxthmi	r3, r3
 80183cc:	1b5d      	subs	r5, r3, r5
 80183ce:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80183d2:	e7b5      	b.n	8018340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080183d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80183d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80183d8:	461e      	mov	r6, r3
 80183da:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80183dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80183e0:	4604      	mov	r4, r0
 80183e2:	4617      	mov	r7, r2
 80183e4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80183e8:	f7f0 f8c0 	bl	800856c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80183ec:	4605      	mov	r5, r0
 80183ee:	b918      	cbnz	r0, 80183f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80183f0:	6030      	str	r0, [r6, #0]
 80183f2:	4628      	mov	r0, r5
 80183f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80183f8:	683b      	ldr	r3, [r7, #0]
 80183fa:	4601      	mov	r1, r0
 80183fc:	68db      	ldr	r3, [r3, #12]
 80183fe:	4638      	mov	r0, r7
 8018400:	4798      	blx	r3
 8018402:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018406:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801840a:	4602      	mov	r2, r0
 801840c:	6030      	str	r0, [r6, #0]
 801840e:	d213      	bcs.n	8018438 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018410:	4643      	mov	r3, r8
 8018412:	4639      	mov	r1, r7
 8018414:	4620      	mov	r0, r4
 8018416:	f7ff fe3b 	bl	8018090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801841a:	6030      	str	r0, [r6, #0]
 801841c:	6833      	ldr	r3, [r6, #0]
 801841e:	b143      	cbz	r3, 8018432 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018420:	7b5a      	ldrb	r2, [r3, #13]
 8018422:	7a9b      	ldrb	r3, [r3, #10]
 8018424:	0052      	lsls	r2, r2, #1
 8018426:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801842a:	4313      	orrs	r3, r2
 801842c:	bf0c      	ite	eq
 801842e:	2301      	moveq	r3, #1
 8018430:	2300      	movne	r3, #0
 8018432:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018436:	e7dc      	b.n	80183f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018438:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801843c:	b29b      	uxth	r3, r3
 801843e:	2b7f      	cmp	r3, #127	; 0x7f
 8018440:	d804      	bhi.n	801844c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018442:	4639      	mov	r1, r7
 8018444:	4620      	mov	r0, r4
 8018446:	f7ff fd17 	bl	8017e78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801844a:	e7e6      	b.n	801841a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801844c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018450:	2b00      	cmp	r3, #0
 8018452:	d0e3      	beq.n	801841c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018454:	f640 1302 	movw	r3, #2306	; 0x902
 8018458:	429d      	cmp	r5, r3
 801845a:	d1df      	bne.n	801841c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801845c:	4601      	mov	r1, r0
 801845e:	4620      	mov	r0, r4
 8018460:	f7ff fcdb 	bl	8017e1a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018464:	e7d9      	b.n	801841a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018466 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018466:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801846a:	461e      	mov	r6, r3
 801846c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801846e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018472:	4604      	mov	r4, r0
 8018474:	4617      	mov	r7, r2
 8018476:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801847a:	f7f0 f877 	bl	800856c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801847e:	4605      	mov	r5, r0
 8018480:	b918      	cbnz	r0, 801848a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018482:	6030      	str	r0, [r6, #0]
 8018484:	4628      	mov	r0, r5
 8018486:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801848a:	683b      	ldr	r3, [r7, #0]
 801848c:	4601      	mov	r1, r0
 801848e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018492:	4638      	mov	r0, r7
 8018494:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018498:	47c8      	blx	r9
 801849a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801849e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80184a2:	4602      	mov	r2, r0
 80184a4:	6030      	str	r0, [r6, #0]
 80184a6:	d213      	bcs.n	80184d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80184a8:	4643      	mov	r3, r8
 80184aa:	4639      	mov	r1, r7
 80184ac:	4620      	mov	r0, r4
 80184ae:	f7ff fdef 	bl	8018090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80184b2:	6030      	str	r0, [r6, #0]
 80184b4:	6833      	ldr	r3, [r6, #0]
 80184b6:	b143      	cbz	r3, 80184ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80184b8:	7b5a      	ldrb	r2, [r3, #13]
 80184ba:	7a9b      	ldrb	r3, [r3, #10]
 80184bc:	0052      	lsls	r2, r2, #1
 80184be:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80184c2:	4313      	orrs	r3, r2
 80184c4:	bf0c      	ite	eq
 80184c6:	2301      	moveq	r3, #1
 80184c8:	2300      	movne	r3, #0
 80184ca:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80184ce:	e7d9      	b.n	8018484 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80184d0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80184d4:	b29b      	uxth	r3, r3
 80184d6:	2b7f      	cmp	r3, #127	; 0x7f
 80184d8:	d804      	bhi.n	80184e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80184da:	4639      	mov	r1, r7
 80184dc:	4620      	mov	r0, r4
 80184de:	f7ff fccb 	bl	8017e78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80184e2:	e7e6      	b.n	80184b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80184e4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80184e8:	2b00      	cmp	r3, #0
 80184ea:	d0e3      	beq.n	80184b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80184ec:	f640 1302 	movw	r3, #2306	; 0x902
 80184f0:	429d      	cmp	r5, r3
 80184f2:	d1df      	bne.n	80184b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80184f4:	4601      	mov	r1, r0
 80184f6:	4620      	mov	r0, r4
 80184f8:	f7ff fc8f 	bl	8017e1a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80184fc:	e7d9      	b.n	80184b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080184fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80184fe:	b510      	push	{r4, lr}
 8018500:	4604      	mov	r4, r0
 8018502:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018506:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018508:	b1f1      	cbz	r1, 8018548 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801850a:	2b0a      	cmp	r3, #10
 801850c:	d02f      	beq.n	801856e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801850e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018510:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018514:	3901      	subs	r1, #1
 8018516:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018518:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801851c:	1c51      	adds	r1, r2, #1
 801851e:	b289      	uxth	r1, r1
 8018520:	2901      	cmp	r1, #1
 8018522:	bf84      	itt	hi
 8018524:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018528:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801852a:	f103 0201 	add.w	r2, r3, #1
 801852e:	8722      	strh	r2, [r4, #56]	; 0x38
 8018530:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018532:	bf98      	it	ls
 8018534:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018536:	4413      	add	r3, r2
 8018538:	b29b      	uxth	r3, r3
 801853a:	2b09      	cmp	r3, #9
 801853c:	bf88      	it	hi
 801853e:	3b0a      	subhi	r3, #10
 8018540:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018544:	8458      	strh	r0, [r3, #34]	; 0x22
 8018546:	e7dc      	b.n	8018502 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018548:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801854a:	2b0a      	cmp	r3, #10
 801854c:	d00f      	beq.n	801856e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801854e:	4620      	mov	r0, r4
 8018550:	f7ff fc11 	bl	8017d76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018554:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018556:	1c5a      	adds	r2, r3, #1
 8018558:	8722      	strh	r2, [r4, #56]	; 0x38
 801855a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801855c:	4413      	add	r3, r2
 801855e:	b29b      	uxth	r3, r3
 8018560:	2b09      	cmp	r3, #9
 8018562:	bf88      	it	hi
 8018564:	3b0a      	subhi	r3, #10
 8018566:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801856a:	8458      	strh	r0, [r3, #34]	; 0x22
 801856c:	e7ec      	b.n	8018548 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801856e:	bd10      	pop	{r4, pc}

08018570 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018570:	b538      	push	{r3, r4, r5, lr}
 8018572:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018574:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018578:	4604      	mov	r4, r0
 801857a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801857c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801857e:	3a01      	subs	r2, #1
 8018580:	8702      	strh	r2, [r0, #56]	; 0x38
 8018582:	1c5a      	adds	r2, r3, #1
 8018584:	b292      	uxth	r2, r2
 8018586:	2a09      	cmp	r2, #9
 8018588:	bf86      	itte	hi
 801858a:	3b09      	subhi	r3, #9
 801858c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801858e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018590:	f7ff ffb5 	bl	80184fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018594:	8c23      	ldrh	r3, [r4, #32]
 8018596:	2b01      	cmp	r3, #1
 8018598:	bf9c      	itt	ls
 801859a:	3301      	addls	r3, #1
 801859c:	8423      	strhls	r3, [r4, #32]
 801859e:	8be3      	ldrh	r3, [r4, #30]
 80185a0:	b90b      	cbnz	r3, 80185a6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80185a2:	2302      	movs	r3, #2
 80185a4:	83e3      	strh	r3, [r4, #30]
 80185a6:	8be3      	ldrh	r3, [r4, #30]
 80185a8:	3b01      	subs	r3, #1
 80185aa:	b29b      	uxth	r3, r3
 80185ac:	83e3      	strh	r3, [r4, #30]
 80185ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185b2:	4628      	mov	r0, r5
 80185b4:	8365      	strh	r5, [r4, #26]
 80185b6:	bd38      	pop	{r3, r4, r5, pc}

080185b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80185b8:	428a      	cmp	r2, r1
 80185ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80185be:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80185c0:	d931      	bls.n	8018626 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80185c2:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80185c4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80185c8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80185cc:	19ee      	adds	r6, r5, r7
 80185ce:	1a54      	subs	r4, r2, r1
 80185d0:	3e01      	subs	r6, #1
 80185d2:	fa1f fe84 	uxth.w	lr, r4
 80185d6:	b2b4      	uxth	r4, r6
 80185d8:	eba4 090e 	sub.w	r9, r4, lr
 80185dc:	fa1f f989 	uxth.w	r9, r9
 80185e0:	2c09      	cmp	r4, #9
 80185e2:	4626      	mov	r6, r4
 80185e4:	bf88      	it	hi
 80185e6:	f1a4 060a 	subhi.w	r6, r4, #10
 80185ea:	f1bc 0f00 	cmp.w	ip, #0
 80185ee:	bf08      	it	eq
 80185f0:	f04f 0c02 	moveq.w	ip, #2
 80185f4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80185f8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80185fc:	fa1f fc8c 	uxth.w	ip, ip
 8018600:	3c01      	subs	r4, #1
 8018602:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018606:	b2a4      	uxth	r4, r4
 8018608:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801860c:	454c      	cmp	r4, r9
 801860e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018612:	d1e5      	bne.n	80185e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018614:	eba5 050e 	sub.w	r5, r5, lr
 8018618:	eb0e 0408 	add.w	r4, lr, r8
 801861c:	8705      	strh	r5, [r0, #56]	; 0x38
 801861e:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018622:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018626:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018628:	1a64      	subs	r4, r4, r1
 801862a:	4439      	add	r1, r7
 801862c:	b289      	uxth	r1, r1
 801862e:	2909      	cmp	r1, #9
 8018630:	bf88      	it	hi
 8018632:	390a      	subhi	r1, #10
 8018634:	8704      	strh	r4, [r0, #56]	; 0x38
 8018636:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018638:	250a      	movs	r5, #10
 801863a:	b18a      	cbz	r2, 8018660 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801863c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801863e:	3a01      	subs	r2, #1
 8018640:	b292      	uxth	r2, r2
 8018642:	3101      	adds	r1, #1
 8018644:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018648:	8701      	strh	r1, [r0, #56]	; 0x38
 801864a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801864c:	b901      	cbnz	r1, 8018650 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801864e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018650:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018652:	3901      	subs	r1, #1
 8018654:	b289      	uxth	r1, r1
 8018656:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018658:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801865c:	844c      	strh	r4, [r1, #34]	; 0x22
 801865e:	e7ec      	b.n	801863a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018660:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018664:	f7ff bf4b 	b.w	80184fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018668 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018668:	b570      	push	{r4, r5, r6, lr}
 801866a:	2500      	movs	r5, #0
 801866c:	4295      	cmp	r5, r2
 801866e:	d011      	beq.n	8018694 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018670:	8bc4      	ldrh	r4, [r0, #30]
 8018672:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018676:	4414      	add	r4, r2
 8018678:	3c01      	subs	r4, #1
 801867a:	1b64      	subs	r4, r4, r5
 801867c:	b2a4      	uxth	r4, r4
 801867e:	2c01      	cmp	r4, #1
 8018680:	bf88      	it	hi
 8018682:	3c02      	subhi	r4, #2
 8018684:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018688:	8b64      	ldrh	r4, [r4, #26]
 801868a:	42b4      	cmp	r4, r6
 801868c:	d117      	bne.n	80186be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801868e:	3501      	adds	r5, #1
 8018690:	b2ad      	uxth	r5, r5
 8018692:	e7eb      	b.n	801866c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018694:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018698:	2400      	movs	r4, #0
 801869a:	4413      	add	r3, r2
 801869c:	b2a2      	uxth	r2, r4
 801869e:	429a      	cmp	r2, r3
 80186a0:	da0f      	bge.n	80186c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80186a2:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80186a4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80186a8:	4432      	add	r2, r6
 80186aa:	b292      	uxth	r2, r2
 80186ac:	2a09      	cmp	r2, #9
 80186ae:	bf88      	it	hi
 80186b0:	3a0a      	subhi	r2, #10
 80186b2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80186b6:	3401      	adds	r4, #1
 80186b8:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80186ba:	42aa      	cmp	r2, r5
 80186bc:	d0ee      	beq.n	801869c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80186be:	2000      	movs	r0, #0
 80186c0:	bd70      	pop	{r4, r5, r6, pc}
 80186c2:	2001      	movs	r0, #1
 80186c4:	e7fc      	b.n	80186c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080186c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80186c6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186ca:	4605      	mov	r5, r0
 80186cc:	4616      	mov	r6, r2
 80186ce:	1c8c      	adds	r4, r1, #2
 80186d0:	8809      	ldrh	r1, [r1, #0]
 80186d2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80186d6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80186da:	42b3      	cmp	r3, r6
 80186dc:	d124      	bne.n	8018728 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80186de:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80186e2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80186e6:	f001 070f 	and.w	r7, r1, #15
 80186ea:	f8cd 8000 	str.w	r8, [sp]
 80186ee:	464b      	mov	r3, r9
 80186f0:	4652      	mov	r2, sl
 80186f2:	4621      	mov	r1, r4
 80186f4:	4628      	mov	r0, r5
 80186f6:	f7ff ffb7 	bl	8018668 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80186fa:	4683      	mov	fp, r0
 80186fc:	b168      	cbz	r0, 801871a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80186fe:	eb0a 0109 	add.w	r1, sl, r9
 8018702:	4441      	add	r1, r8
 8018704:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018708:	463a      	mov	r2, r7
 801870a:	4649      	mov	r1, r9
 801870c:	4628      	mov	r0, r5
 801870e:	f7ff ff53 	bl	80185b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018712:	4658      	mov	r0, fp
 8018714:	b003      	add	sp, #12
 8018716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801871a:	eb07 010a 	add.w	r1, r7, sl
 801871e:	4449      	add	r1, r9
 8018720:	4441      	add	r1, r8
 8018722:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018726:	e7d2      	b.n	80186ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018728:	f04f 0b00 	mov.w	fp, #0
 801872c:	e7f1      	b.n	8018712 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801872e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801872e:	b570      	push	{r4, r5, r6, lr}
 8018730:	8810      	ldrh	r0, [r2, #0]
 8018732:	4298      	cmp	r0, r3
 8018734:	d817      	bhi.n	8018766 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018736:	1e48      	subs	r0, r1, #1
 8018738:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801873c:	4298      	cmp	r0, r3
 801873e:	d312      	bcc.n	8018766 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018740:	2400      	movs	r4, #0
 8018742:	428c      	cmp	r4, r1
 8018744:	d20f      	bcs.n	8018766 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018746:	1860      	adds	r0, r4, r1
 8018748:	1040      	asrs	r0, r0, #1
 801874a:	0085      	lsls	r5, r0, #2
 801874c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018750:	42b3      	cmp	r3, r6
 8018752:	d902      	bls.n	801875a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018754:	3001      	adds	r0, #1
 8018756:	b284      	uxth	r4, r0
 8018758:	e7f3      	b.n	8018742 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801875a:	d201      	bcs.n	8018760 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801875c:	b281      	uxth	r1, r0
 801875e:	e7f0      	b.n	8018742 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018760:	442a      	add	r2, r5
 8018762:	8850      	ldrh	r0, [r2, #2]
 8018764:	bd70      	pop	{r4, r5, r6, pc}
 8018766:	2000      	movs	r0, #0
 8018768:	e7fc      	b.n	8018764 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801876a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801876a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801876e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018770:	886f      	ldrh	r7, [r5, #2]
 8018772:	4604      	mov	r4, r0
 8018774:	087f      	lsrs	r7, r7, #1
 8018776:	260b      	movs	r6, #11
 8018778:	3e01      	subs	r6, #1
 801877a:	d013      	beq.n	80187a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801877c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801877e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018782:	462a      	mov	r2, r5
 8018784:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018788:	4639      	mov	r1, r7
 801878a:	4643      	mov	r3, r8
 801878c:	4620      	mov	r0, r4
 801878e:	f7ff ffce 	bl	801872e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018792:	b138      	cbz	r0, 80187a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018794:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018798:	4642      	mov	r2, r8
 801879a:	4620      	mov	r0, r4
 801879c:	f7ff ff93 	bl	80186c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80187a0:	2800      	cmp	r0, #0
 80187a2:	d1e9      	bne.n	8018778 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80187a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080187a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80187a8:	b570      	push	{r4, r5, r6, lr}
 80187aa:	694a      	ldr	r2, [r1, #20]
 80187ac:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80187ae:	684b      	ldr	r3, [r1, #4]
 80187b0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80187b2:	1b54      	subs	r4, r2, r5
 80187b4:	f000 8106 	beq.w	80189c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80187b8:	1b9b      	subs	r3, r3, r6
 80187ba:	d003      	beq.n	80187c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80187bc:	4363      	muls	r3, r4
 80187be:	2210      	movs	r2, #16
 80187c0:	fb93 f3f2 	sdiv	r3, r3, r2
 80187c4:	680c      	ldr	r4, [r1, #0]
 80187c6:	698a      	ldr	r2, [r1, #24]
 80187c8:	1b65      	subs	r5, r4, r5
 80187ca:	f000 80fd 	beq.w	80189c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80187ce:	1b92      	subs	r2, r2, r6
 80187d0:	d003      	beq.n	80187da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80187d2:	436a      	muls	r2, r5
 80187d4:	2410      	movs	r4, #16
 80187d6:	fb92 f2f4 	sdiv	r2, r2, r4
 80187da:	1a9b      	subs	r3, r3, r2
 80187dc:	ee07 3a90 	vmov	s15, r3
 80187e0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018a04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80187e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80187e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80187ec:	ee67 7a84 	vmul.f32	s15, s15, s8
 80187f0:	460a      	mov	r2, r1
 80187f2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80187f6:	4603      	mov	r3, r0
 80187f8:	f100 040c 	add.w	r4, r0, #12
 80187fc:	eeb1 6a43 	vneg.f32	s12, s6
 8018800:	edd2 7a02 	vldr	s15, [r2, #8]
 8018804:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018808:	3214      	adds	r2, #20
 801880a:	ece3 6a01 	vstmia	r3!, {s13}
 801880e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018812:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018816:	429c      	cmp	r4, r3
 8018818:	edc3 7a02 	vstr	s15, [r3, #8]
 801881c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018820:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018824:	edc3 7a05 	vstr	s15, [r3, #20]
 8018828:	d1ea      	bne.n	8018800 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801882a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801882c:	698b      	ldr	r3, [r1, #24]
 801882e:	edd0 4a02 	vldr	s9, [r0, #8]
 8018832:	edd0 3a00 	vldr	s7, [r0]
 8018836:	edd0 6a01 	vldr	s13, [r0, #4]
 801883a:	ed90 5a05 	vldr	s10, [r0, #20]
 801883e:	ed90 2a03 	vldr	s4, [r0, #12]
 8018842:	edd0 5a04 	vldr	s11, [r0, #16]
 8018846:	ed90 1a07 	vldr	s2, [r0, #28]
 801884a:	edd0 2a06 	vldr	s5, [r0, #24]
 801884e:	1a9b      	subs	r3, r3, r2
 8018850:	ee07 3a90 	vmov	s15, r3
 8018854:	684b      	ldr	r3, [r1, #4]
 8018856:	1a9b      	subs	r3, r3, r2
 8018858:	ee07 3a10 	vmov	s14, r3
 801885c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018860:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018864:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018868:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801886c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018870:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018874:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018878:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801887c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018880:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018884:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018888:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801888c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801888e:	694a      	ldr	r2, [r1, #20]
 8018890:	1b13      	subs	r3, r2, r4
 8018892:	ee07 3a10 	vmov	s14, r3
 8018896:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801889a:	680b      	ldr	r3, [r1, #0]
 801889c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80188a0:	1b1b      	subs	r3, r3, r4
 80188a2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80188a6:	ee07 3a10 	vmov	s14, r3
 80188aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80188ae:	ee27 7a04 	vmul.f32	s14, s14, s8
 80188b2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80188b6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80188ba:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80188be:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80188c0:	698b      	ldr	r3, [r1, #24]
 80188c2:	1a9b      	subs	r3, r3, r2
 80188c4:	ee06 3a90 	vmov	s13, r3
 80188c8:	684b      	ldr	r3, [r1, #4]
 80188ca:	1a9b      	subs	r3, r3, r2
 80188cc:	ee07 3a10 	vmov	s14, r3
 80188d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80188d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80188d8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80188dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80188e0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80188e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80188e8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80188ec:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80188f0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80188f2:	694a      	ldr	r2, [r1, #20]
 80188f4:	1b13      	subs	r3, r2, r4
 80188f6:	ee07 3a10 	vmov	s14, r3
 80188fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80188fe:	680b      	ldr	r3, [r1, #0]
 8018900:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018904:	1b1b      	subs	r3, r3, r4
 8018906:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801890a:	ee07 3a10 	vmov	s14, r3
 801890e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018912:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018916:	eea5 5a87 	vfma.f32	s10, s11, s14
 801891a:	edd0 5a08 	vldr	s11, [r0, #32]
 801891e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018922:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018926:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801892a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801892c:	698b      	ldr	r3, [r1, #24]
 801892e:	1a9b      	subs	r3, r3, r2
 8018930:	ee07 3a10 	vmov	s14, r3
 8018934:	684b      	ldr	r3, [r1, #4]
 8018936:	1a9b      	subs	r3, r3, r2
 8018938:	ee01 3a90 	vmov	s3, r3
 801893c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018940:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018944:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018948:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801894c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018950:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018954:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018958:	ee27 7a03 	vmul.f32	s14, s14, s6
 801895c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018960:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018962:	694a      	ldr	r2, [r1, #20]
 8018964:	1b13      	subs	r3, r2, r4
 8018966:	ee03 3a10 	vmov	s6, r3
 801896a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801896e:	680b      	ldr	r3, [r1, #0]
 8018970:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018974:	1b1b      	subs	r3, r3, r4
 8018976:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801897a:	ee03 3a10 	vmov	s6, r3
 801897e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018982:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018986:	eee1 5a04 	vfma.f32	s11, s2, s8
 801898a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801898e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018992:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018996:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801899a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801899e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189a2:	dd13      	ble.n	80189cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80189a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80189a8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80189ac:	63c3      	str	r3, [r0, #60]	; 0x3c
 80189ae:	eee3 7a87 	vfma.f32	s15, s7, s14
 80189b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189ba:	dd15      	ble.n	80189e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80189bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80189c0:	6403      	str	r3, [r0, #64]	; 0x40
 80189c2:	bd70      	pop	{r4, r5, r6, pc}
 80189c4:	4623      	mov	r3, r4
 80189c6:	e6fd      	b.n	80187c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80189c8:	462a      	mov	r2, r5
 80189ca:	e706      	b.n	80187da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80189cc:	d502      	bpl.n	80189d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80189ce:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80189d2:	e7e9      	b.n	80189a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80189d4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80189d8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80189dc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80189e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189e4:	dade      	bge.n	80189a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80189e6:	e7f2      	b.n	80189ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80189e8:	d502      	bpl.n	80189f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80189ea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80189ee:	e7e7      	b.n	80189c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80189f0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80189f4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80189f8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80189fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a00:	dadc      	bge.n	80189bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018a02:	e7f2      	b.n	80189ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018a04:	3d800000 	.word	0x3d800000

08018a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018a08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018a0c:	2714      	movs	r7, #20
 8018a0e:	435f      	muls	r7, r3
 8018a10:	eb02 0c07 	add.w	ip, r2, r7
 8018a14:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018a18:	f115 0e0f 	adds.w	lr, r5, #15
 8018a1c:	f100 80a2 	bmi.w	8018b64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018a20:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018a24:	9c08      	ldr	r4, [sp, #32]
 8018a26:	f8c0 e014 	str.w	lr, [r0, #20]
 8018a2a:	2614      	movs	r6, #20
 8018a2c:	4366      	muls	r6, r4
 8018a2e:	eb02 0806 	add.w	r8, r2, r6
 8018a32:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018a36:	f115 040f 	adds.w	r4, r5, #15
 8018a3a:	f100 809f 	bmi.w	8018b7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018a3e:	1124      	asrs	r4, r4, #4
 8018a40:	eba4 040e 	sub.w	r4, r4, lr
 8018a44:	6184      	str	r4, [r0, #24]
 8018a46:	2c00      	cmp	r4, #0
 8018a48:	f000 808a 	beq.w	8018b60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018a4c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018a50:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018a54:	5995      	ldr	r5, [r2, r6]
 8018a56:	eba4 0809 	sub.w	r8, r4, r9
 8018a5a:	59d4      	ldr	r4, [r2, r7]
 8018a5c:	eba5 0a04 	sub.w	sl, r5, r4
 8018a60:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018a64:	fb0e fe05 	mul.w	lr, lr, r5
 8018a68:	fb0a ee19 	mls	lr, sl, r9, lr
 8018a6c:	fb08 e404 	mla	r4, r8, r4, lr
 8018a70:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018a74:	3c01      	subs	r4, #1
 8018a76:	19a4      	adds	r4, r4, r6
 8018a78:	f100 808c 	bmi.w	8018b94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018a7c:	fb94 fef6 	sdiv	lr, r4, r6
 8018a80:	f8c0 e000 	str.w	lr, [r0]
 8018a84:	fb06 441e 	mls	r4, r6, lr, r4
 8018a88:	6104      	str	r4, [r0, #16]
 8018a8a:	2d00      	cmp	r5, #0
 8018a8c:	f2c0 8095 	blt.w	8018bba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018a90:	fb95 f4f6 	sdiv	r4, r5, r6
 8018a94:	6044      	str	r4, [r0, #4]
 8018a96:	fb06 5514 	mls	r5, r6, r4, r5
 8018a9a:	6085      	str	r5, [r0, #8]
 8018a9c:	60c6      	str	r6, [r0, #12]
 8018a9e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018aa2:	6945      	ldr	r5, [r0, #20]
 8018aa4:	59d2      	ldr	r2, [r2, r7]
 8018aa6:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018bdc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018aaa:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018aae:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018ab2:	ee07 4a10 	vmov	s14, r4
 8018ab6:	6804      	ldr	r4, [r0, #0]
 8018ab8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018abc:	ee07 2a90 	vmov	s15, r2
 8018ac0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ac4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018ac8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018acc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018ad0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018ad4:	edd3 6a00 	vldr	s13, [r3]
 8018ad8:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018adc:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018ae0:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018ae4:	edc0 6a07 	vstr	s13, [r0, #28]
 8018ae8:	edd0 6a01 	vldr	s13, [r0, #4]
 8018aec:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018af0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018af4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018af8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018afc:	ed80 6a08 	vstr	s12, [r0, #32]
 8018b00:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8018b02:	6242      	str	r2, [r0, #36]	; 0x24
 8018b04:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018b08:	ed93 6a03 	vldr	s12, [r3, #12]
 8018b0c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018b10:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018b14:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018b18:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018b1c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018b20:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018b24:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018b28:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018b2c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018b2e:	6302      	str	r2, [r0, #48]	; 0x30
 8018b30:	ed93 6a06 	vldr	s12, [r3, #24]
 8018b34:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018b38:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018b3c:	eeb0 7a46 	vmov.f32	s14, s12
 8018b40:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018b44:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018b48:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018b4c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8018b50:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018b54:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018b58:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018b5c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8018b5e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018b60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018b64:	f1c5 0501 	rsb	r5, r5, #1
 8018b68:	f015 050f 	ands.w	r5, r5, #15
 8018b6c:	bf18      	it	ne
 8018b6e:	2501      	movne	r5, #1
 8018b70:	2410      	movs	r4, #16
 8018b72:	fb9e fef4 	sdiv	lr, lr, r4
 8018b76:	ebae 0e05 	sub.w	lr, lr, r5
 8018b7a:	e753      	b.n	8018a24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018b7c:	f1c5 0501 	rsb	r5, r5, #1
 8018b80:	f015 050f 	ands.w	r5, r5, #15
 8018b84:	bf18      	it	ne
 8018b86:	2501      	movne	r5, #1
 8018b88:	f04f 0910 	mov.w	r9, #16
 8018b8c:	fb94 f4f9 	sdiv	r4, r4, r9
 8018b90:	1b64      	subs	r4, r4, r5
 8018b92:	e755      	b.n	8018a40 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018b94:	4264      	negs	r4, r4
 8018b96:	fb94 fef6 	sdiv	lr, r4, r6
 8018b9a:	f1ce 0800 	rsb	r8, lr, #0
 8018b9e:	fb06 441e 	mls	r4, r6, lr, r4
 8018ba2:	f8c0 8000 	str.w	r8, [r0]
 8018ba6:	6104      	str	r4, [r0, #16]
 8018ba8:	2c00      	cmp	r4, #0
 8018baa:	f43f af6e 	beq.w	8018a8a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018bae:	ea6f 0e0e 	mvn.w	lr, lr
 8018bb2:	f8c0 e000 	str.w	lr, [r0]
 8018bb6:	1b34      	subs	r4, r6, r4
 8018bb8:	e766      	b.n	8018a88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018bba:	426d      	negs	r5, r5
 8018bbc:	fb95 f4f6 	sdiv	r4, r5, r6
 8018bc0:	f1c4 0e00 	rsb	lr, r4, #0
 8018bc4:	fb06 5514 	mls	r5, r6, r4, r5
 8018bc8:	f8c0 e004 	str.w	lr, [r0, #4]
 8018bcc:	6085      	str	r5, [r0, #8]
 8018bce:	2d00      	cmp	r5, #0
 8018bd0:	f43f af64 	beq.w	8018a9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018bd4:	43e4      	mvns	r4, r4
 8018bd6:	6044      	str	r4, [r0, #4]
 8018bd8:	1b75      	subs	r5, r6, r5
 8018bda:	e75e      	b.n	8018a9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018bdc:	3d800000 	.word	0x3d800000

08018be0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018be0:	4602      	mov	r2, r0
 8018be2:	b148      	cbz	r0, 8018bf8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018be4:	2300      	movs	r3, #0
 8018be6:	b298      	uxth	r0, r3
 8018be8:	3301      	adds	r3, #1
 8018bea:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018bee:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8018bf2:	2900      	cmp	r1, #0
 8018bf4:	d1f7      	bne.n	8018be6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018bf6:	4770      	bx	lr
 8018bf8:	4770      	bx	lr

08018bfa <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018bfa:	b530      	push	{r4, r5, lr}
 8018bfc:	4604      	mov	r4, r0
 8018bfe:	b159      	cbz	r1, 8018c18 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018c00:	b148      	cbz	r0, 8018c16 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018c02:	2300      	movs	r3, #0
 8018c04:	b298      	uxth	r0, r3
 8018c06:	4282      	cmp	r2, r0
 8018c08:	d905      	bls.n	8018c16 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018c0a:	5ccd      	ldrb	r5, [r1, r3]
 8018c0c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018c10:	3301      	adds	r3, #1
 8018c12:	2d00      	cmp	r5, #0
 8018c14:	d1f6      	bne.n	8018c04 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018c16:	bd30      	pop	{r4, r5, pc}
 8018c18:	4608      	mov	r0, r1
 8018c1a:	e7fc      	b.n	8018c16 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018c1c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018c1e:	b08b      	sub	sp, #44	; 0x2c
 8018c20:	468c      	mov	ip, r1
 8018c22:	2100      	movs	r1, #0
 8018c24:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018c28:	4604      	mov	r4, r0
 8018c2a:	261f      	movs	r6, #31
 8018c2c:	af01      	add	r7, sp, #4
 8018c2e:	fb94 fef3 	sdiv	lr, r4, r3
 8018c32:	fb03 441e 	mls	r4, r3, lr, r4
 8018c36:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018c3a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018c3e:	b2ec      	uxtb	r4, r5
 8018c40:	2d09      	cmp	r5, #9
 8018c42:	bfd4      	ite	le
 8018c44:	3430      	addle	r4, #48	; 0x30
 8018c46:	3457      	addgt	r4, #87	; 0x57
 8018c48:	b2e4      	uxtb	r4, r4
 8018c4a:	55bc      	strb	r4, [r7, r6]
 8018c4c:	4674      	mov	r4, lr
 8018c4e:	1e71      	subs	r1, r6, #1
 8018c50:	b974      	cbnz	r4, 8018c70 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8018c52:	2800      	cmp	r0, #0
 8018c54:	da05      	bge.n	8018c62 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018c56:	ab0a      	add	r3, sp, #40	; 0x28
 8018c58:	4419      	add	r1, r3
 8018c5a:	232d      	movs	r3, #45	; 0x2d
 8018c5c:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018c60:	1eb1      	subs	r1, r6, #2
 8018c62:	3101      	adds	r1, #1
 8018c64:	4439      	add	r1, r7
 8018c66:	4660      	mov	r0, ip
 8018c68:	f7ff ffc7 	bl	8018bfa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018c6c:	b00b      	add	sp, #44	; 0x2c
 8018c6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018c70:	460e      	mov	r6, r1
 8018c72:	e7dc      	b.n	8018c2e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018c74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018c76:	b08b      	sub	sp, #44	; 0x2c
 8018c78:	468c      	mov	ip, r1
 8018c7a:	2100      	movs	r1, #0
 8018c7c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018c80:	ae01      	add	r6, sp, #4
 8018c82:	211f      	movs	r1, #31
 8018c84:	fbb0 f7f3 	udiv	r7, r0, r3
 8018c88:	fb03 0517 	mls	r5, r3, r7, r0
 8018c8c:	b2ec      	uxtb	r4, r5
 8018c8e:	2d09      	cmp	r5, #9
 8018c90:	bfd4      	ite	le
 8018c92:	3430      	addle	r4, #48	; 0x30
 8018c94:	3457      	addgt	r4, #87	; 0x57
 8018c96:	b2e4      	uxtb	r4, r4
 8018c98:	558c      	strb	r4, [r1, r6]
 8018c9a:	4638      	mov	r0, r7
 8018c9c:	1e4c      	subs	r4, r1, #1
 8018c9e:	b92f      	cbnz	r7, 8018cac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8018ca0:	4431      	add	r1, r6
 8018ca2:	4660      	mov	r0, ip
 8018ca4:	f7ff ffa9 	bl	8018bfa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018ca8:	b00b      	add	sp, #44	; 0x2c
 8018caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018cac:	4621      	mov	r1, r4
 8018cae:	e7e9      	b.n	8018c84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08018cb0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018cb0:	b410      	push	{r4}
 8018cb2:	b131      	cbz	r1, 8018cc2 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018cb4:	1e9c      	subs	r4, r3, #2
 8018cb6:	2c22      	cmp	r4, #34	; 0x22
 8018cb8:	d803      	bhi.n	8018cc2 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018cba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018cbe:	f7ff bfad 	b.w	8018c1c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018cc2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018cc6:	4770      	bx	lr

08018cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ccc:	4691      	mov	r9, r2
 8018cce:	b085      	sub	sp, #20
 8018cd0:	6802      	ldr	r2, [r0, #0]
 8018cd2:	9201      	str	r2, [sp, #4]
 8018cd4:	4688      	mov	r8, r1
 8018cd6:	4683      	mov	fp, r0
 8018cd8:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018cdc:	9103      	str	r1, [sp, #12]
 8018cde:	4610      	mov	r0, r2
 8018ce0:	461c      	mov	r4, r3
 8018ce2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018ce6:	9302      	str	r3, [sp, #8]
 8018ce8:	f7ff ff7a 	bl	8018be0 <_ZN8touchgfx7Unicode6strlenEPKt>
 8018cec:	f1b8 0f00 	cmp.w	r8, #0
 8018cf0:	bf0c      	ite	eq
 8018cf2:	4684      	moveq	ip, r0
 8018cf4:	f100 0c01 	addne.w	ip, r0, #1
 8018cf8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018cfc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018d00:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018d02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018d04:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018d08:	9903      	ldr	r1, [sp, #12]
 8018d0a:	fa1f fc8c 	uxth.w	ip, ip
 8018d0e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018d12:	d041      	beq.n	8018d98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018d14:	d834      	bhi.n	8018d80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018d16:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018d1a:	d059      	beq.n	8018dd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018d1c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018d20:	d03a      	beq.n	8018d98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018d22:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018d26:	d034      	beq.n	8018d92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018d28:	2400      	movs	r4, #0
 8018d2a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018d2e:	3a01      	subs	r2, #1
 8018d30:	b169      	cbz	r1, 8018d4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018d32:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018d34:	458c      	cmp	ip, r1
 8018d36:	da09      	bge.n	8018d4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018d38:	eba1 010c 	sub.w	r1, r1, ip
 8018d3c:	b289      	uxth	r1, r1
 8018d3e:	b933      	cbnz	r3, 8018d4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018d40:	2e00      	cmp	r6, #0
 8018d42:	d051      	beq.n	8018de8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018d44:	2800      	cmp	r0, #0
 8018d46:	d04f      	beq.n	8018de8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018d48:	440c      	add	r4, r1
 8018d4a:	b2a4      	uxth	r4, r4
 8018d4c:	2100      	movs	r1, #0
 8018d4e:	682b      	ldr	r3, [r5, #0]
 8018d50:	4293      	cmp	r3, r2
 8018d52:	da07      	bge.n	8018d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018d54:	f1b8 0f00 	cmp.w	r8, #0
 8018d58:	d004      	beq.n	8018d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018d5a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018d5e:	682b      	ldr	r3, [r5, #0]
 8018d60:	3301      	adds	r3, #1
 8018d62:	602b      	str	r3, [r5, #0]
 8018d64:	2730      	movs	r7, #48	; 0x30
 8018d66:	2c00      	cmp	r4, #0
 8018d68:	d04e      	beq.n	8018e08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018d6a:	682e      	ldr	r6, [r5, #0]
 8018d6c:	3c01      	subs	r4, #1
 8018d6e:	42b2      	cmp	r2, r6
 8018d70:	b2a4      	uxth	r4, r4
 8018d72:	dd49      	ble.n	8018e08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018d74:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018d78:	682b      	ldr	r3, [r5, #0]
 8018d7a:	3301      	adds	r3, #1
 8018d7c:	602b      	str	r3, [r5, #0]
 8018d7e:	e7f2      	b.n	8018d66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018d80:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018d84:	d01d      	beq.n	8018dc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018d86:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018d8a:	d002      	beq.n	8018d92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018d8c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018d90:	e7c9      	b.n	8018d26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018d92:	4684      	mov	ip, r0
 8018d94:	f04f 0800 	mov.w	r8, #0
 8018d98:	2c00      	cmp	r4, #0
 8018d9a:	d0c6      	beq.n	8018d2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018d9c:	b947      	cbnz	r7, 8018db0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018d9e:	2801      	cmp	r0, #1
 8018da0:	d106      	bne.n	8018db0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018da2:	8814      	ldrh	r4, [r2, #0]
 8018da4:	2c30      	cmp	r4, #48	; 0x30
 8018da6:	bf02      	ittt	eq
 8018da8:	3202      	addeq	r2, #2
 8018daa:	f8cb 2000 	streq.w	r2, [fp]
 8018dae:	4638      	moveq	r0, r7
 8018db0:	45bc      	cmp	ip, r7
 8018db2:	da14      	bge.n	8018dde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018db4:	b2bf      	uxth	r7, r7
 8018db6:	eba7 040c 	sub.w	r4, r7, ip
 8018dba:	b2a4      	uxth	r4, r4
 8018dbc:	46bc      	mov	ip, r7
 8018dbe:	2600      	movs	r6, #0
 8018dc0:	e7b3      	b.n	8018d2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018dc2:	4684      	mov	ip, r0
 8018dc4:	b16c      	cbz	r4, 8018de2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018dc6:	42b8      	cmp	r0, r7
 8018dc8:	dd00      	ble.n	8018dcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018dca:	b2b8      	uxth	r0, r7
 8018dcc:	2400      	movs	r4, #0
 8018dce:	e003      	b.n	8018dd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018dd0:	f04f 0c01 	mov.w	ip, #1
 8018dd4:	2400      	movs	r4, #0
 8018dd6:	4660      	mov	r0, ip
 8018dd8:	4626      	mov	r6, r4
 8018dda:	46a0      	mov	r8, r4
 8018ddc:	e7a5      	b.n	8018d2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018dde:	2400      	movs	r4, #0
 8018de0:	e7ed      	b.n	8018dbe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018de2:	4626      	mov	r6, r4
 8018de4:	46a0      	mov	r8, r4
 8018de6:	e7a0      	b.n	8018d2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018de8:	2900      	cmp	r1, #0
 8018dea:	d0b0      	beq.n	8018d4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018dec:	2720      	movs	r7, #32
 8018dee:	682e      	ldr	r6, [r5, #0]
 8018df0:	2900      	cmp	r1, #0
 8018df2:	d0ac      	beq.n	8018d4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018df4:	3901      	subs	r1, #1
 8018df6:	4296      	cmp	r6, r2
 8018df8:	b289      	uxth	r1, r1
 8018dfa:	daa7      	bge.n	8018d4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018dfc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018e00:	682b      	ldr	r3, [r5, #0]
 8018e02:	3301      	adds	r3, #1
 8018e04:	602b      	str	r3, [r5, #0]
 8018e06:	e7f2      	b.n	8018dee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018e08:	b188      	cbz	r0, 8018e2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018e0a:	682b      	ldr	r3, [r5, #0]
 8018e0c:	3801      	subs	r0, #1
 8018e0e:	429a      	cmp	r2, r3
 8018e10:	b280      	uxth	r0, r0
 8018e12:	dd0c      	ble.n	8018e2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018e14:	f8db 3000 	ldr.w	r3, [fp]
 8018e18:	1c9c      	adds	r4, r3, #2
 8018e1a:	f8cb 4000 	str.w	r4, [fp]
 8018e1e:	881c      	ldrh	r4, [r3, #0]
 8018e20:	682b      	ldr	r3, [r5, #0]
 8018e22:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018e26:	682b      	ldr	r3, [r5, #0]
 8018e28:	3301      	adds	r3, #1
 8018e2a:	602b      	str	r3, [r5, #0]
 8018e2c:	e7ec      	b.n	8018e08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018e2e:	2620      	movs	r6, #32
 8018e30:	b151      	cbz	r1, 8018e48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018e32:	6828      	ldr	r0, [r5, #0]
 8018e34:	3901      	subs	r1, #1
 8018e36:	4282      	cmp	r2, r0
 8018e38:	b289      	uxth	r1, r1
 8018e3a:	dd05      	ble.n	8018e48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018e3c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018e40:	682b      	ldr	r3, [r5, #0]
 8018e42:	3301      	adds	r3, #1
 8018e44:	602b      	str	r3, [r5, #0]
 8018e46:	e7f3      	b.n	8018e30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018e48:	b005      	add	sp, #20
 8018e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018e4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018e52:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018e56:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018e5a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018e5e:	2400      	movs	r4, #0
 8018e60:	8014      	strh	r4, [r2, #0]
 8018e62:	701c      	strb	r4, [r3, #0]
 8018e64:	f888 4000 	strb.w	r4, [r8]
 8018e68:	f88c 4000 	strb.w	r4, [ip]
 8018e6c:	f88e 4000 	strb.w	r4, [lr]
 8018e70:	703c      	strb	r4, [r7, #0]
 8018e72:	6804      	ldr	r4, [r0, #0]
 8018e74:	b1a4      	cbz	r4, 8018ea0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018e76:	8824      	ldrh	r4, [r4, #0]
 8018e78:	f04f 0901 	mov.w	r9, #1
 8018e7c:	b314      	cbz	r4, 8018ec4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018e7e:	2c2b      	cmp	r4, #43	; 0x2b
 8018e80:	d001      	beq.n	8018e86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018e82:	2c20      	cmp	r4, #32
 8018e84:	d110      	bne.n	8018ea8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018e86:	8014      	strh	r4, [r2, #0]
 8018e88:	6804      	ldr	r4, [r0, #0]
 8018e8a:	b10c      	cbz	r4, 8018e90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018e8c:	3402      	adds	r4, #2
 8018e8e:	6004      	str	r4, [r0, #0]
 8018e90:	680c      	ldr	r4, [r1, #0]
 8018e92:	b10c      	cbz	r4, 8018e98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018e94:	3401      	adds	r4, #1
 8018e96:	600c      	str	r4, [r1, #0]
 8018e98:	6804      	ldr	r4, [r0, #0]
 8018e9a:	b17c      	cbz	r4, 8018ebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018e9c:	8824      	ldrh	r4, [r4, #0]
 8018e9e:	e7ed      	b.n	8018e7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018ea0:	680c      	ldr	r4, [r1, #0]
 8018ea2:	b17c      	cbz	r4, 8018ec4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018ea4:	7824      	ldrb	r4, [r4, #0]
 8018ea6:	e7e7      	b.n	8018e78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018ea8:	2c2d      	cmp	r4, #45	; 0x2d
 8018eaa:	d102      	bne.n	8018eb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018eac:	f883 9000 	strb.w	r9, [r3]
 8018eb0:	e7ea      	b.n	8018e88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018eb2:	2c23      	cmp	r4, #35	; 0x23
 8018eb4:	d107      	bne.n	8018ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018eb6:	f888 9000 	strb.w	r9, [r8]
 8018eba:	e7e5      	b.n	8018e88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018ebc:	680c      	ldr	r4, [r1, #0]
 8018ebe:	b10c      	cbz	r4, 8018ec4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018ec0:	7824      	ldrb	r4, [r4, #0]
 8018ec2:	e7db      	b.n	8018e7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018ec4:	2400      	movs	r4, #0
 8018ec6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018eca:	2b09      	cmp	r3, #9
 8018ecc:	d901      	bls.n	8018ed2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018ece:	2c2a      	cmp	r4, #42	; 0x2a
 8018ed0:	d122      	bne.n	8018f18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018ed2:	2301      	movs	r3, #1
 8018ed4:	2c30      	cmp	r4, #48	; 0x30
 8018ed6:	f88e 3000 	strb.w	r3, [lr]
 8018eda:	d10d      	bne.n	8018ef8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018edc:	f88c 3000 	strb.w	r3, [ip]
 8018ee0:	6803      	ldr	r3, [r0, #0]
 8018ee2:	b10b      	cbz	r3, 8018ee8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018ee4:	3302      	adds	r3, #2
 8018ee6:	6003      	str	r3, [r0, #0]
 8018ee8:	680b      	ldr	r3, [r1, #0]
 8018eea:	b10b      	cbz	r3, 8018ef0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018eec:	3301      	adds	r3, #1
 8018eee:	600b      	str	r3, [r1, #0]
 8018ef0:	6803      	ldr	r3, [r0, #0]
 8018ef2:	2b00      	cmp	r3, #0
 8018ef4:	d02f      	beq.n	8018f56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018ef6:	881c      	ldrh	r4, [r3, #0]
 8018ef8:	2c2a      	cmp	r4, #42	; 0x2a
 8018efa:	d135      	bne.n	8018f68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018efc:	f04f 33ff 	mov.w	r3, #4294967295
 8018f00:	6033      	str	r3, [r6, #0]
 8018f02:	6803      	ldr	r3, [r0, #0]
 8018f04:	b10b      	cbz	r3, 8018f0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018f06:	3302      	adds	r3, #2
 8018f08:	6003      	str	r3, [r0, #0]
 8018f0a:	680b      	ldr	r3, [r1, #0]
 8018f0c:	b10b      	cbz	r3, 8018f12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018f0e:	3301      	adds	r3, #1
 8018f10:	600b      	str	r3, [r1, #0]
 8018f12:	6803      	ldr	r3, [r0, #0]
 8018f14:	b31b      	cbz	r3, 8018f5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018f16:	881c      	ldrh	r4, [r3, #0]
 8018f18:	2c2e      	cmp	r4, #46	; 0x2e
 8018f1a:	d11a      	bne.n	8018f52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018f1c:	2301      	movs	r3, #1
 8018f1e:	703b      	strb	r3, [r7, #0]
 8018f20:	6803      	ldr	r3, [r0, #0]
 8018f22:	b10b      	cbz	r3, 8018f28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018f24:	3302      	adds	r3, #2
 8018f26:	6003      	str	r3, [r0, #0]
 8018f28:	680b      	ldr	r3, [r1, #0]
 8018f2a:	b10b      	cbz	r3, 8018f30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018f2c:	3301      	adds	r3, #1
 8018f2e:	600b      	str	r3, [r1, #0]
 8018f30:	6803      	ldr	r3, [r0, #0]
 8018f32:	2b00      	cmp	r3, #0
 8018f34:	d036      	beq.n	8018fa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018f36:	881b      	ldrh	r3, [r3, #0]
 8018f38:	2b2a      	cmp	r3, #42	; 0x2a
 8018f3a:	d137      	bne.n	8018fac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018f3c:	f04f 33ff 	mov.w	r3, #4294967295
 8018f40:	602b      	str	r3, [r5, #0]
 8018f42:	6803      	ldr	r3, [r0, #0]
 8018f44:	b10b      	cbz	r3, 8018f4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018f46:	3302      	adds	r3, #2
 8018f48:	6003      	str	r3, [r0, #0]
 8018f4a:	680b      	ldr	r3, [r1, #0]
 8018f4c:	b10b      	cbz	r3, 8018f52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018f4e:	3301      	adds	r3, #1
 8018f50:	600b      	str	r3, [r1, #0]
 8018f52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018f56:	680c      	ldr	r4, [r1, #0]
 8018f58:	b134      	cbz	r4, 8018f68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018f5a:	7824      	ldrb	r4, [r4, #0]
 8018f5c:	e7cc      	b.n	8018ef8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018f5e:	680b      	ldr	r3, [r1, #0]
 8018f60:	2b00      	cmp	r3, #0
 8018f62:	d0f6      	beq.n	8018f52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018f64:	781c      	ldrb	r4, [r3, #0]
 8018f66:	e7d7      	b.n	8018f18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018f68:	2300      	movs	r3, #0
 8018f6a:	6033      	str	r3, [r6, #0]
 8018f6c:	220a      	movs	r2, #10
 8018f6e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018f72:	fa1f f38c 	uxth.w	r3, ip
 8018f76:	2b09      	cmp	r3, #9
 8018f78:	d8ce      	bhi.n	8018f18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018f7a:	6833      	ldr	r3, [r6, #0]
 8018f7c:	fb02 c303 	mla	r3, r2, r3, ip
 8018f80:	6033      	str	r3, [r6, #0]
 8018f82:	6803      	ldr	r3, [r0, #0]
 8018f84:	b10b      	cbz	r3, 8018f8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018f86:	3302      	adds	r3, #2
 8018f88:	6003      	str	r3, [r0, #0]
 8018f8a:	680b      	ldr	r3, [r1, #0]
 8018f8c:	b10b      	cbz	r3, 8018f92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018f8e:	3301      	adds	r3, #1
 8018f90:	600b      	str	r3, [r1, #0]
 8018f92:	6803      	ldr	r3, [r0, #0]
 8018f94:	b10b      	cbz	r3, 8018f9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018f96:	881c      	ldrh	r4, [r3, #0]
 8018f98:	e7e9      	b.n	8018f6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018f9a:	680c      	ldr	r4, [r1, #0]
 8018f9c:	2c00      	cmp	r4, #0
 8018f9e:	d0e6      	beq.n	8018f6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018fa0:	7824      	ldrb	r4, [r4, #0]
 8018fa2:	e7e4      	b.n	8018f6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018fa4:	680b      	ldr	r3, [r1, #0]
 8018fa6:	b10b      	cbz	r3, 8018fac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018fa8:	781b      	ldrb	r3, [r3, #0]
 8018faa:	e7c5      	b.n	8018f38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018fac:	2200      	movs	r2, #0
 8018fae:	602a      	str	r2, [r5, #0]
 8018fb0:	240a      	movs	r4, #10
 8018fb2:	3b30      	subs	r3, #48	; 0x30
 8018fb4:	b29e      	uxth	r6, r3
 8018fb6:	2e09      	cmp	r6, #9
 8018fb8:	682a      	ldr	r2, [r5, #0]
 8018fba:	d813      	bhi.n	8018fe4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018fbc:	fb04 3302 	mla	r3, r4, r2, r3
 8018fc0:	602b      	str	r3, [r5, #0]
 8018fc2:	6803      	ldr	r3, [r0, #0]
 8018fc4:	b10b      	cbz	r3, 8018fca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018fc6:	3302      	adds	r3, #2
 8018fc8:	6003      	str	r3, [r0, #0]
 8018fca:	680b      	ldr	r3, [r1, #0]
 8018fcc:	b10b      	cbz	r3, 8018fd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018fce:	3301      	adds	r3, #1
 8018fd0:	600b      	str	r3, [r1, #0]
 8018fd2:	6803      	ldr	r3, [r0, #0]
 8018fd4:	b10b      	cbz	r3, 8018fda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018fd6:	881b      	ldrh	r3, [r3, #0]
 8018fd8:	e7eb      	b.n	8018fb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018fda:	680b      	ldr	r3, [r1, #0]
 8018fdc:	2b00      	cmp	r3, #0
 8018fde:	d0e8      	beq.n	8018fb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018fe0:	781b      	ldrb	r3, [r3, #0]
 8018fe2:	e7e6      	b.n	8018fb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018fe4:	2a06      	cmp	r2, #6
 8018fe6:	bfa8      	it	ge
 8018fe8:	2206      	movge	r2, #6
 8018fea:	602a      	str	r2, [r5, #0]
 8018fec:	e7b1      	b.n	8018f52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018fee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ff2:	b0a3      	sub	sp, #140	; 0x8c
 8018ff4:	2600      	movs	r6, #0
 8018ff6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018ffa:	4607      	mov	r7, r0
 8018ffc:	4688      	mov	r8, r1
 8018ffe:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019002:	4631      	mov	r1, r6
 8019004:	2242      	movs	r2, #66	; 0x42
 8019006:	4648      	mov	r0, r9
 8019008:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801900a:	960d      	str	r6, [sp, #52]	; 0x34
 801900c:	f012 f881 	bl	802b112 <memset>
 8019010:	b15f      	cbz	r7, 801902a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019012:	f108 3aff 	add.w	sl, r8, #4294967295
 8019016:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801901a:	b152      	cbz	r2, 8019032 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801901c:	8812      	ldrh	r2, [r2, #0]
 801901e:	b10a      	cbz	r2, 8019024 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019020:	459a      	cmp	sl, r3
 8019022:	dc2e      	bgt.n	8019082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019024:	2200      	movs	r2, #0
 8019026:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801902a:	4638      	mov	r0, r7
 801902c:	b023      	add	sp, #140	; 0x8c
 801902e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019032:	9a08      	ldr	r2, [sp, #32]
 8019034:	2a00      	cmp	r2, #0
 8019036:	d0f5      	beq.n	8019024 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019038:	7812      	ldrb	r2, [r2, #0]
 801903a:	e7f0      	b.n	801901e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801903c:	2d00      	cmp	r5, #0
 801903e:	d0ea      	beq.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019040:	782a      	ldrb	r2, [r5, #0]
 8019042:	b142      	cbz	r2, 8019056 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019044:	2a25      	cmp	r2, #37	; 0x25
 8019046:	d001      	beq.n	801904c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019048:	459a      	cmp	sl, r3
 801904a:	dc08      	bgt.n	801905e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801904c:	f1bb 0f00 	cmp.w	fp, #0
 8019050:	d121      	bne.n	8019096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019052:	2d00      	cmp	r5, #0
 8019054:	d0df      	beq.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019056:	782a      	ldrb	r2, [r5, #0]
 8019058:	f04f 0b00 	mov.w	fp, #0
 801905c:	e01d      	b.n	801909a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801905e:	f1bb 0f00 	cmp.w	fp, #0
 8019062:	d078      	beq.n	8019156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019064:	f8bb 2000 	ldrh.w	r2, [fp]
 8019068:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801906c:	f1bb 0f00 	cmp.w	fp, #0
 8019070:	d002      	beq.n	8019078 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019072:	f10b 0202 	add.w	r2, fp, #2
 8019076:	9209      	str	r2, [sp, #36]	; 0x24
 8019078:	b10d      	cbz	r5, 801907e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801907a:	3501      	adds	r5, #1
 801907c:	9508      	str	r5, [sp, #32]
 801907e:	3301      	adds	r3, #1
 8019080:	930d      	str	r3, [sp, #52]	; 0x34
 8019082:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019086:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019088:	f1bb 0f00 	cmp.w	fp, #0
 801908c:	d0d6      	beq.n	801903c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801908e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019092:	2a00      	cmp	r2, #0
 8019094:	d1d6      	bne.n	8019044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019096:	f8bb 2000 	ldrh.w	r2, [fp]
 801909a:	2a00      	cmp	r2, #0
 801909c:	d0bb      	beq.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801909e:	459a      	cmp	sl, r3
 80190a0:	ddb9      	ble.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80190a2:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80190a6:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80190aa:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80190ae:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80190b2:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80190b6:	960e      	str	r6, [sp, #56]	; 0x38
 80190b8:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80190bc:	960f      	str	r6, [sp, #60]	; 0x3c
 80190be:	f1bb 0f00 	cmp.w	fp, #0
 80190c2:	d002      	beq.n	80190ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80190c4:	f10b 0302 	add.w	r3, fp, #2
 80190c8:	9309      	str	r3, [sp, #36]	; 0x24
 80190ca:	b10d      	cbz	r5, 80190d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80190cc:	1c6b      	adds	r3, r5, #1
 80190ce:	9308      	str	r3, [sp, #32]
 80190d0:	ab0f      	add	r3, sp, #60	; 0x3c
 80190d2:	9305      	str	r3, [sp, #20]
 80190d4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80190d8:	9304      	str	r3, [sp, #16]
 80190da:	ab0e      	add	r3, sp, #56	; 0x38
 80190dc:	9303      	str	r3, [sp, #12]
 80190de:	ab0c      	add	r3, sp, #48	; 0x30
 80190e0:	9302      	str	r3, [sp, #8]
 80190e2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80190e6:	9301      	str	r3, [sp, #4]
 80190e8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80190ec:	9300      	str	r3, [sp, #0]
 80190ee:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80190f2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80190f6:	a908      	add	r1, sp, #32
 80190f8:	a809      	add	r0, sp, #36	; 0x24
 80190fa:	f7ff fea8 	bl	8018e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80190fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019100:	2b00      	cmp	r3, #0
 8019102:	bfbe      	ittt	lt
 8019104:	6823      	ldrlt	r3, [r4, #0]
 8019106:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801910a:	930e      	strlt	r3, [sp, #56]	; 0x38
 801910c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801910e:	bfb8      	it	lt
 8019110:	3404      	addlt	r4, #4
 8019112:	2b00      	cmp	r3, #0
 8019114:	bfb8      	it	lt
 8019116:	6823      	ldrlt	r3, [r4, #0]
 8019118:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801911c:	bfbe      	ittt	lt
 801911e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019122:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019124:	3404      	addlt	r4, #4
 8019126:	b1d9      	cbz	r1, 8019160 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019128:	880b      	ldrh	r3, [r1, #0]
 801912a:	2b69      	cmp	r3, #105	; 0x69
 801912c:	d01f      	beq.n	801916e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801912e:	d82f      	bhi.n	8019190 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019130:	2b58      	cmp	r3, #88	; 0x58
 8019132:	d01c      	beq.n	801916e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019134:	d818      	bhi.n	8019168 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019136:	2b25      	cmp	r3, #37	; 0x25
 8019138:	d034      	beq.n	80191a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801913a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801913e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019140:	f1bb 0f00 	cmp.w	fp, #0
 8019144:	f000 80b8 	beq.w	80192b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019148:	f8bb 5000 	ldrh.w	r5, [fp]
 801914c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019150:	3301      	adds	r3, #1
 8019152:	930d      	str	r3, [sp, #52]	; 0x34
 8019154:	e029      	b.n	80191aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019156:	b10d      	cbz	r5, 801915c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019158:	782a      	ldrb	r2, [r5, #0]
 801915a:	e785      	b.n	8019068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801915c:	462a      	mov	r2, r5
 801915e:	e783      	b.n	8019068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019160:	2a00      	cmp	r2, #0
 8019162:	d0ea      	beq.n	801913a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019164:	7813      	ldrb	r3, [r2, #0]
 8019166:	e7e0      	b.n	801912a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019168:	3b63      	subs	r3, #99	; 0x63
 801916a:	2b01      	cmp	r3, #1
 801916c:	d8e5      	bhi.n	801913a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801916e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019172:	b329      	cbz	r1, 80191c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019174:	880b      	ldrh	r3, [r1, #0]
 8019176:	2b69      	cmp	r3, #105	; 0x69
 8019178:	d063      	beq.n	8019242 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801917a:	d825      	bhi.n	80191c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801917c:	2b63      	cmp	r3, #99	; 0x63
 801917e:	d038      	beq.n	80191f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019180:	2b64      	cmp	r3, #100	; 0x64
 8019182:	d05e      	beq.n	8019242 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019184:	2b58      	cmp	r3, #88	; 0x58
 8019186:	d07b      	beq.n	8019280 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019188:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801918c:	4625      	mov	r5, r4
 801918e:	e036      	b.n	80191fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019190:	2b73      	cmp	r3, #115	; 0x73
 8019192:	d0ec      	beq.n	801916e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019194:	d802      	bhi.n	801919c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019196:	2b6f      	cmp	r3, #111	; 0x6f
 8019198:	d1cf      	bne.n	801913a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801919a:	e7e8      	b.n	801916e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801919c:	2b75      	cmp	r3, #117	; 0x75
 801919e:	d0e6      	beq.n	801916e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80191a0:	2b78      	cmp	r3, #120	; 0x78
 80191a2:	e7f9      	b.n	8019198 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80191a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80191a6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80191aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191ac:	b10b      	cbz	r3, 80191b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80191ae:	3302      	adds	r3, #2
 80191b0:	9309      	str	r3, [sp, #36]	; 0x24
 80191b2:	9b08      	ldr	r3, [sp, #32]
 80191b4:	2b00      	cmp	r3, #0
 80191b6:	f43f af2e 	beq.w	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80191ba:	3301      	adds	r3, #1
 80191bc:	9308      	str	r3, [sp, #32]
 80191be:	e72a      	b.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80191c0:	2a00      	cmp	r2, #0
 80191c2:	d0e1      	beq.n	8019188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80191c4:	7813      	ldrb	r3, [r2, #0]
 80191c6:	e7d6      	b.n	8019176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80191c8:	2b73      	cmp	r3, #115	; 0x73
 80191ca:	d036      	beq.n	801923a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80191cc:	d807      	bhi.n	80191de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80191ce:	2b6f      	cmp	r3, #111	; 0x6f
 80191d0:	d1da      	bne.n	8019188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80191d2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80191d4:	1d25      	adds	r5, r4, #4
 80191d6:	eba8 0202 	sub.w	r2, r8, r2
 80191da:	2308      	movs	r3, #8
 80191dc:	e04a      	b.n	8019274 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80191de:	2b75      	cmp	r3, #117	; 0x75
 80191e0:	d043      	beq.n	801926a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80191e2:	2b78      	cmp	r3, #120	; 0x78
 80191e4:	d1d0      	bne.n	8019188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80191e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80191e8:	1d25      	adds	r5, r4, #4
 80191ea:	eba8 0202 	sub.w	r2, r8, r2
 80191ee:	2310      	movs	r3, #16
 80191f0:	e040      	b.n	8019274 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80191f2:	6823      	ldr	r3, [r4, #0]
 80191f4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80191f8:	1d25      	adds	r5, r4, #4
 80191fa:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80191fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019200:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019204:	2b00      	cmp	r3, #0
 8019206:	d052      	beq.n	80192ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019208:	881a      	ldrh	r2, [r3, #0]
 801920a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801920e:	a80d      	add	r0, sp, #52	; 0x34
 8019210:	9005      	str	r0, [sp, #20]
 8019212:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019216:	9004      	str	r0, [sp, #16]
 8019218:	980e      	ldr	r0, [sp, #56]	; 0x38
 801921a:	9003      	str	r0, [sp, #12]
 801921c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019220:	9002      	str	r0, [sp, #8]
 8019222:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019224:	9001      	str	r0, [sp, #4]
 8019226:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801922a:	9000      	str	r0, [sp, #0]
 801922c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019230:	a810      	add	r0, sp, #64	; 0x40
 8019232:	f7ff fd49 	bl	8018cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019236:	462c      	mov	r4, r5
 8019238:	e7b7      	b.n	80191aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801923a:	6823      	ldr	r3, [r4, #0]
 801923c:	1d25      	adds	r5, r4, #4
 801923e:	9310      	str	r3, [sp, #64]	; 0x40
 8019240:	e7dd      	b.n	80191fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019242:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019244:	6820      	ldr	r0, [r4, #0]
 8019246:	eba8 0202 	sub.w	r2, r8, r2
 801924a:	230a      	movs	r3, #10
 801924c:	b292      	uxth	r2, r2
 801924e:	4649      	mov	r1, r9
 8019250:	f7ff fce4 	bl	8018c1c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019254:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019258:	2b2d      	cmp	r3, #45	; 0x2d
 801925a:	f104 0504 	add.w	r5, r4, #4
 801925e:	d1ce      	bne.n	80191fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019260:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019264:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019266:	3302      	adds	r3, #2
 8019268:	e7e9      	b.n	801923e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801926a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801926c:	1d25      	adds	r5, r4, #4
 801926e:	eba8 0202 	sub.w	r2, r8, r2
 8019272:	230a      	movs	r3, #10
 8019274:	b292      	uxth	r2, r2
 8019276:	4649      	mov	r1, r9
 8019278:	6820      	ldr	r0, [r4, #0]
 801927a:	f7ff fcfb 	bl	8018c74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801927e:	e7be      	b.n	80191fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019280:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019282:	6820      	ldr	r0, [r4, #0]
 8019284:	eba8 0202 	sub.w	r2, r8, r2
 8019288:	b292      	uxth	r2, r2
 801928a:	2310      	movs	r3, #16
 801928c:	4649      	mov	r1, r9
 801928e:	f7ff fcf1 	bl	8018c74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019292:	1d25      	adds	r5, r4, #4
 8019294:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019298:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801929c:	2b00      	cmp	r3, #0
 801929e:	d0ae      	beq.n	80191fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80192a0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80192a4:	2919      	cmp	r1, #25
 80192a6:	d8f7      	bhi.n	8019298 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80192a8:	3b20      	subs	r3, #32
 80192aa:	8013      	strh	r3, [r2, #0]
 80192ac:	e7f4      	b.n	8019298 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80192ae:	9a08      	ldr	r2, [sp, #32]
 80192b0:	2a00      	cmp	r2, #0
 80192b2:	d0aa      	beq.n	801920a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80192b4:	7812      	ldrb	r2, [r2, #0]
 80192b6:	e7a8      	b.n	801920a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80192b8:	2d00      	cmp	r5, #0
 80192ba:	f43f af47 	beq.w	801914c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80192be:	782d      	ldrb	r5, [r5, #0]
 80192c0:	e744      	b.n	801914c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080192c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80192c2:	b507      	push	{r0, r1, r2, lr}
 80192c4:	9300      	str	r3, [sp, #0]
 80192c6:	4613      	mov	r3, r2
 80192c8:	2200      	movs	r2, #0
 80192ca:	f7ff fe90 	bl	8018fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80192ce:	b003      	add	sp, #12
 80192d0:	f85d fb04 	ldr.w	pc, [sp], #4

080192d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80192d4:	b40c      	push	{r2, r3}
 80192d6:	b507      	push	{r0, r1, r2, lr}
 80192d8:	ab04      	add	r3, sp, #16
 80192da:	f853 2b04 	ldr.w	r2, [r3], #4
 80192de:	9301      	str	r3, [sp, #4]
 80192e0:	f7ff ffef 	bl	80192c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80192e4:	b003      	add	sp, #12
 80192e6:	f85d eb04 	ldr.w	lr, [sp], #4
 80192ea:	b002      	add	sp, #8
 80192ec:	4770      	bx	lr
	...

080192f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80192f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192f4:	b0c5      	sub	sp, #276	; 0x114
 80192f6:	2400      	movs	r4, #0
 80192f8:	af11      	add	r7, sp, #68	; 0x44
 80192fa:	4606      	mov	r6, r0
 80192fc:	468a      	mov	sl, r1
 80192fe:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019302:	4621      	mov	r1, r4
 8019304:	22c8      	movs	r2, #200	; 0xc8
 8019306:	4638      	mov	r0, r7
 8019308:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801930c:	940d      	str	r4, [sp, #52]	; 0x34
 801930e:	f011 ff00 	bl	802b112 <memset>
 8019312:	b16e      	cbz	r6, 8019330 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8019314:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80195b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019318:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801931a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801931c:	b162      	cbz	r2, 8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801931e:	8812      	ldrh	r2, [r2, #0]
 8019320:	b11a      	cbz	r2, 801932a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019322:	f10a 31ff 	add.w	r1, sl, #4294967295
 8019326:	4299      	cmp	r1, r3
 8019328:	dc2e      	bgt.n	8019388 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801932a:	2200      	movs	r2, #0
 801932c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019330:	4630      	mov	r0, r6
 8019332:	b045      	add	sp, #276	; 0x114
 8019334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019338:	9a08      	ldr	r2, [sp, #32]
 801933a:	2a00      	cmp	r2, #0
 801933c:	d0f5      	beq.n	801932a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801933e:	7812      	ldrb	r2, [r2, #0]
 8019340:	e7ee      	b.n	8019320 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8019342:	2d00      	cmp	r5, #0
 8019344:	d0e8      	beq.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019346:	782a      	ldrb	r2, [r5, #0]
 8019348:	b142      	cbz	r2, 801935c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801934a:	2a25      	cmp	r2, #37	; 0x25
 801934c:	d001      	beq.n	8019352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801934e:	4299      	cmp	r1, r3
 8019350:	dc08      	bgt.n	8019364 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8019352:	f1b8 0f00 	cmp.w	r8, #0
 8019356:	d121      	bne.n	801939c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019358:	2d00      	cmp	r5, #0
 801935a:	d0dd      	beq.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801935c:	782a      	ldrb	r2, [r5, #0]
 801935e:	f04f 0800 	mov.w	r8, #0
 8019362:	e01d      	b.n	80193a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019364:	f1b8 0f00 	cmp.w	r8, #0
 8019368:	d07f      	beq.n	801946a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801936a:	f8b8 2000 	ldrh.w	r2, [r8]
 801936e:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019372:	f1b8 0f00 	cmp.w	r8, #0
 8019376:	d002      	beq.n	801937e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019378:	f108 0202 	add.w	r2, r8, #2
 801937c:	9209      	str	r2, [sp, #36]	; 0x24
 801937e:	b10d      	cbz	r5, 8019384 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019380:	3501      	adds	r5, #1
 8019382:	9508      	str	r5, [sp, #32]
 8019384:	3301      	adds	r3, #1
 8019386:	930d      	str	r3, [sp, #52]	; 0x34
 8019388:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801938c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801938e:	f1b8 0f00 	cmp.w	r8, #0
 8019392:	d0d6      	beq.n	8019342 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019394:	f8b8 2000 	ldrh.w	r2, [r8]
 8019398:	2a00      	cmp	r2, #0
 801939a:	d1d6      	bne.n	801934a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801939c:	f8b8 2000 	ldrh.w	r2, [r8]
 80193a0:	2a00      	cmp	r2, #0
 80193a2:	d0b9      	beq.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80193a4:	4299      	cmp	r1, r3
 80193a6:	ddb7      	ble.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80193a8:	2300      	movs	r3, #0
 80193aa:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80193ae:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80193b2:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 80193b6:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 80193ba:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 80193be:	930e      	str	r3, [sp, #56]	; 0x38
 80193c0:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80193c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80193c6:	f1b8 0f00 	cmp.w	r8, #0
 80193ca:	d002      	beq.n	80193d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80193cc:	f108 0302 	add.w	r3, r8, #2
 80193d0:	9309      	str	r3, [sp, #36]	; 0x24
 80193d2:	b10d      	cbz	r5, 80193d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80193d4:	1c6b      	adds	r3, r5, #1
 80193d6:	9308      	str	r3, [sp, #32]
 80193d8:	ab0f      	add	r3, sp, #60	; 0x3c
 80193da:	9305      	str	r3, [sp, #20]
 80193dc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80193e0:	9304      	str	r3, [sp, #16]
 80193e2:	ab0e      	add	r3, sp, #56	; 0x38
 80193e4:	9303      	str	r3, [sp, #12]
 80193e6:	ab0c      	add	r3, sp, #48	; 0x30
 80193e8:	9302      	str	r3, [sp, #8]
 80193ea:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80193ee:	9301      	str	r3, [sp, #4]
 80193f0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80193f4:	9300      	str	r3, [sp, #0]
 80193f6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80193fa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80193fe:	a908      	add	r1, sp, #32
 8019400:	a809      	add	r0, sp, #36	; 0x24
 8019402:	f7ff fd24 	bl	8018e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019406:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019408:	2b00      	cmp	r3, #0
 801940a:	da0b      	bge.n	8019424 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801940c:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019410:	edd3 7a00 	vldr	s15, [r3]
 8019414:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019418:	3401      	adds	r4, #1
 801941a:	ee17 3a90 	vmov	r3, s15
 801941e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019422:	930e      	str	r3, [sp, #56]	; 0x38
 8019424:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019426:	2b00      	cmp	r3, #0
 8019428:	da0b      	bge.n	8019442 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801942a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801942e:	edd3 7a00 	vldr	s15, [r3]
 8019432:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019436:	3401      	adds	r4, #1
 8019438:	ee17 3a90 	vmov	r3, s15
 801943c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019440:	930f      	str	r3, [sp, #60]	; 0x3c
 8019442:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019444:	b1b3      	cbz	r3, 8019474 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019446:	881a      	ldrh	r2, [r3, #0]
 8019448:	2a25      	cmp	r2, #37	; 0x25
 801944a:	d018      	beq.n	801947e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801944c:	2a66      	cmp	r2, #102	; 0x66
 801944e:	d01c      	beq.n	801948a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019450:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019454:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019456:	f1b8 0f00 	cmp.w	r8, #0
 801945a:	f000 8121 	beq.w	80196a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801945e:	f8b8 5000 	ldrh.w	r5, [r8]
 8019462:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019466:	3301      	adds	r3, #1
 8019468:	e00d      	b.n	8019486 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801946a:	b10d      	cbz	r5, 8019470 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801946c:	782a      	ldrb	r2, [r5, #0]
 801946e:	e77e      	b.n	801936e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019470:	462a      	mov	r2, r5
 8019472:	e77c      	b.n	801936e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019474:	9b08      	ldr	r3, [sp, #32]
 8019476:	2b00      	cmp	r3, #0
 8019478:	d0ea      	beq.n	8019450 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801947a:	781a      	ldrb	r2, [r3, #0]
 801947c:	e7e4      	b.n	8019448 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801947e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019480:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019484:	3302      	adds	r3, #2
 8019486:	930d      	str	r3, [sp, #52]	; 0x34
 8019488:	e041      	b.n	801950e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801948a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801948e:	edd3 7a00 	vldr	s15, [r3]
 8019492:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019496:	9710      	str	r7, [sp, #64]	; 0x40
 8019498:	3401      	adds	r4, #1
 801949a:	b923      	cbnz	r3, 80194a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801949c:	2301      	movs	r3, #1
 801949e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80194a2:	2306      	movs	r3, #6
 80194a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80194a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80194aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194ae:	bf48      	it	mi
 80194b0:	eef1 7a67 	vnegmi.f32	s15, s15
 80194b4:	eeb0 7ae7 	vabs.f32	s14, s15
 80194b8:	bf48      	it	mi
 80194ba:	232d      	movmi	r3, #45	; 0x2d
 80194bc:	eeb4 7a45 	vcmp.f32	s14, s10
 80194c0:	bf48      	it	mi
 80194c2:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80194c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194ca:	dd2b      	ble.n	8019524 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80194cc:	4b3b      	ldr	r3, [pc, #236]	; (80195bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80194ce:	9311      	str	r3, [sp, #68]	; 0x44
 80194d0:	2366      	movs	r3, #102	; 0x66
 80194d2:	9312      	str	r3, [sp, #72]	; 0x48
 80194d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194d6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80194da:	2b00      	cmp	r3, #0
 80194dc:	f000 80da 	beq.w	8019694 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80194e0:	881a      	ldrh	r2, [r3, #0]
 80194e2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80194e6:	a80d      	add	r0, sp, #52	; 0x34
 80194e8:	9005      	str	r0, [sp, #20]
 80194ea:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80194ee:	9004      	str	r0, [sp, #16]
 80194f0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80194f2:	9003      	str	r0, [sp, #12]
 80194f4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80194f8:	9002      	str	r0, [sp, #8]
 80194fa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80194fc:	9001      	str	r0, [sp, #4]
 80194fe:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019502:	9000      	str	r0, [sp, #0]
 8019504:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019508:	a810      	add	r0, sp, #64	; 0x40
 801950a:	f7ff fbdd 	bl	8018cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801950e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019510:	b10b      	cbz	r3, 8019516 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8019512:	3302      	adds	r3, #2
 8019514:	9309      	str	r3, [sp, #36]	; 0x24
 8019516:	9b08      	ldr	r3, [sp, #32]
 8019518:	2b00      	cmp	r3, #0
 801951a:	f43f aefd 	beq.w	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801951e:	3301      	adds	r3, #1
 8019520:	9308      	str	r3, [sp, #32]
 8019522:	e6f9      	b.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019524:	eef4 7a67 	vcmp.f32	s15, s15
 8019528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801952c:	d63a      	bvs.n	80195a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801952e:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019532:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019536:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801953a:	eeb0 6a67 	vmov.f32	s12, s15
 801953e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019542:	eef0 5a47 	vmov.f32	s11, s14
 8019546:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801954a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801954e:	da2d      	bge.n	80195ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019550:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019552:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019556:	2100      	movs	r1, #0
 8019558:	eef0 4a46 	vmov.f32	s9, s12
 801955c:	ebaa 0202 	sub.w	r2, sl, r2
 8019560:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019568:	b28d      	uxth	r5, r1
 801956a:	db2c      	blt.n	80195c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801956c:	1a53      	subs	r3, r2, r1
 801956e:	2b00      	cmp	r3, #0
 8019570:	dd29      	ble.n	80195c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019572:	3101      	adds	r1, #1
 8019574:	2964      	cmp	r1, #100	; 0x64
 8019576:	d025      	beq.n	80195c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019578:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801957c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019580:	ee17 3a10 	vmov	r3, s14
 8019584:	2b09      	cmp	r3, #9
 8019586:	bfa8      	it	ge
 8019588:	2309      	movge	r3, #9
 801958a:	ee07 3a10 	vmov	s14, r3
 801958e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019592:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019596:	eee7 7a66 	vfms.f32	s15, s14, s13
 801959a:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801959e:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80195a2:	e7dd      	b.n	8019560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80195a4:	4b06      	ldr	r3, [pc, #24]	; (80195c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80195a6:	9311      	str	r3, [sp, #68]	; 0x44
 80195a8:	236e      	movs	r3, #110	; 0x6e
 80195aa:	e792      	b.n	80194d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80195ac:	ee66 6a87 	vmul.f32	s13, s13, s14
 80195b0:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80195b4:	e7c7      	b.n	8019546 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80195b6:	bf00      	nop
 80195b8:	7f7fffff 	.word	0x7f7fffff
 80195bc:	006e0069 	.word	0x006e0069
 80195c0:	0061006e 	.word	0x0061006e
 80195c4:	2563      	movs	r5, #99	; 0x63
 80195c6:	2a63      	cmp	r2, #99	; 0x63
 80195c8:	bfd4      	ite	le
 80195ca:	ebc5 0202 	rsble	r2, r5, r2
 80195ce:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80195d2:	2a00      	cmp	r2, #0
 80195d4:	dd43      	ble.n	801965e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80195d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195d8:	2b00      	cmp	r3, #0
 80195da:	dd40      	ble.n	801965e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80195dc:	f04f 0901 	mov.w	r9, #1
 80195e0:	210a      	movs	r1, #10
 80195e2:	f113 33ff 	adds.w	r3, r3, #4294967295
 80195e6:	d30c      	bcc.n	8019602 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 80195e8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80195ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80195f0:	ee17 0a10 	vmov	r0, s14
 80195f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195f8:	fb01 0909 	mla	r9, r1, r9, r0
 80195fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019600:	e7ef      	b.n	80195e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019602:	3501      	adds	r5, #1
 8019604:	930f      	str	r3, [sp, #60]	; 0x3c
 8019606:	b292      	uxth	r2, r2
 8019608:	230a      	movs	r3, #10
 801960a:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801960e:	4648      	mov	r0, r9
 8019610:	f7ff fb4e 	bl	8018cb0 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019614:	f1b9 0f01 	cmp.w	r9, #1
 8019618:	dc1f      	bgt.n	801965a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801961a:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801961e:	2b00      	cmp	r3, #0
 8019620:	bf0c      	ite	eq
 8019622:	2300      	moveq	r3, #0
 8019624:	232e      	movne	r3, #46	; 0x2e
 8019626:	aa44      	add	r2, sp, #272	; 0x110
 8019628:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801962c:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019634:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019638:	f6ff af4c 	blt.w	80194d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801963c:	2300      	movs	r3, #0
 801963e:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019642:	1c59      	adds	r1, r3, #1
 8019644:	b98a      	cbnz	r2, 801966a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019646:	b29b      	uxth	r3, r3
 8019648:	2130      	movs	r1, #48	; 0x30
 801964a:	b983      	cbnz	r3, 801966e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801964c:	2331      	movs	r3, #49	; 0x31
 801964e:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019652:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019654:	3b02      	subs	r3, #2
 8019656:	9310      	str	r3, [sp, #64]	; 0x40
 8019658:	e73c      	b.n	80194d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801965a:	232e      	movs	r3, #46	; 0x2e
 801965c:	e7e3      	b.n	8019626 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801965e:	ab44      	add	r3, sp, #272	; 0x110
 8019660:	3501      	adds	r5, #1
 8019662:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019666:	2300      	movs	r3, #0
 8019668:	e7e0      	b.n	801962c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801966a:	460b      	mov	r3, r1
 801966c:	e7e7      	b.n	801963e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801966e:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019672:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019676:	2808      	cmp	r0, #8
 8019678:	d806      	bhi.n	8019688 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801967a:	a944      	add	r1, sp, #272	; 0x110
 801967c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019680:	3201      	adds	r2, #1
 8019682:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019686:	e725      	b.n	80194d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019688:	2a39      	cmp	r2, #57	; 0x39
 801968a:	bf08      	it	eq
 801968c:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019690:	3b01      	subs	r3, #1
 8019692:	e7da      	b.n	801964a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019694:	9a08      	ldr	r2, [sp, #32]
 8019696:	2a00      	cmp	r2, #0
 8019698:	f43f af23 	beq.w	80194e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801969c:	7812      	ldrb	r2, [r2, #0]
 801969e:	e720      	b.n	80194e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80196a0:	2d00      	cmp	r5, #0
 80196a2:	f43f aede 	beq.w	8019462 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80196a6:	782d      	ldrb	r5, [r5, #0]
 80196a8:	e6db      	b.n	8019462 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80196aa:	bf00      	nop

080196ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80196ac:	b507      	push	{r0, r1, r2, lr}
 80196ae:	9300      	str	r3, [sp, #0]
 80196b0:	4613      	mov	r3, r2
 80196b2:	2200      	movs	r2, #0
 80196b4:	f7ff fe1c 	bl	80192f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80196b8:	b003      	add	sp, #12
 80196ba:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080196c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80196c0:	4b01      	ldr	r3, [pc, #4]	; (80196c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80196c2:	6018      	str	r0, [r3, #0]
 80196c4:	4770      	bx	lr
 80196c6:	bf00      	nop
 80196c8:	200134ac 	.word	0x200134ac

080196cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80196cc:	4b06      	ldr	r3, [pc, #24]	; (80196e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80196ce:	881a      	ldrh	r2, [r3, #0]
 80196d0:	4282      	cmp	r2, r0
 80196d2:	d807      	bhi.n	80196e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80196d4:	4b05      	ldr	r3, [pc, #20]	; (80196ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80196d6:	881b      	ldrh	r3, [r3, #0]
 80196d8:	4413      	add	r3, r2
 80196da:	4298      	cmp	r0, r3
 80196dc:	bfac      	ite	ge
 80196de:	2000      	movge	r0, #0
 80196e0:	2001      	movlt	r0, #1
 80196e2:	4770      	bx	lr
 80196e4:	2000      	movs	r0, #0
 80196e6:	4770      	bx	lr
 80196e8:	200134cc 	.word	0x200134cc
 80196ec:	200134d0 	.word	0x200134d0

080196f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80196f0:	b508      	push	{r3, lr}
 80196f2:	4601      	mov	r1, r0
 80196f4:	f7ff ffea 	bl	80196cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80196f8:	b118      	cbz	r0, 8019702 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80196fa:	4b02      	ldr	r3, [pc, #8]	; (8019704 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80196fc:	681b      	ldr	r3, [r3, #0]
 80196fe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019702:	bd08      	pop	{r3, pc}
 8019704:	200134b0 	.word	0x200134b0

08019708 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019708:	b5f0      	push	{r4, r5, r6, r7, lr}
 801970a:	4c24      	ldr	r4, [pc, #144]	; (801979c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801970c:	6823      	ldr	r3, [r4, #0]
 801970e:	2b00      	cmp	r3, #0
 8019710:	d042      	beq.n	8019798 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019712:	4a23      	ldr	r2, [pc, #140]	; (80197a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019714:	4d23      	ldr	r5, [pc, #140]	; (80197a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019716:	8811      	ldrh	r1, [r2, #0]
 8019718:	f8b5 c000 	ldrh.w	ip, [r5]
 801971c:	4822      	ldr	r0, [pc, #136]	; (80197a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801971e:	4461      	add	r1, ip
 8019720:	1c4a      	adds	r2, r1, #1
 8019722:	f022 0201 	bic.w	r2, r2, #1
 8019726:	008f      	lsls	r7, r1, #2
 8019728:	0412      	lsls	r2, r2, #16
 801972a:	19de      	adds	r6, r3, r7
 801972c:	0c12      	lsrs	r2, r2, #16
 801972e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019732:	6006      	str	r6, [r0, #0]
 8019734:	4e1d      	ldr	r6, [pc, #116]	; (80197ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019736:	19da      	adds	r2, r3, r7
 8019738:	6032      	str	r2, [r6, #0]
 801973a:	220e      	movs	r2, #14
 801973c:	fb02 f20c 	mul.w	r2, r2, ip
 8019740:	3203      	adds	r2, #3
 8019742:	f022 0203 	bic.w	r2, r2, #3
 8019746:	443a      	add	r2, r7
 8019748:	4f19      	ldr	r7, [pc, #100]	; (80197b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801974a:	4413      	add	r3, r2
 801974c:	603b      	str	r3, [r7, #0]
 801974e:	4f19      	ldr	r7, [pc, #100]	; (80197b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019750:	2300      	movs	r3, #0
 8019752:	803b      	strh	r3, [r7, #0]
 8019754:	4f18      	ldr	r7, [pc, #96]	; (80197b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019756:	683f      	ldr	r7, [r7, #0]
 8019758:	1aba      	subs	r2, r7, r2
 801975a:	4f18      	ldr	r7, [pc, #96]	; (80197bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801975c:	603a      	str	r2, [r7, #0]
 801975e:	4a18      	ldr	r2, [pc, #96]	; (80197c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019760:	469c      	mov	ip, r3
 8019762:	8013      	strh	r3, [r2, #0]
 8019764:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019768:	428b      	cmp	r3, r1
 801976a:	d10d      	bne.n	8019788 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801976c:	882d      	ldrh	r5, [r5, #0]
 801976e:	6830      	ldr	r0, [r6, #0]
 8019770:	2300      	movs	r3, #0
 8019772:	240e      	movs	r4, #14
 8019774:	429d      	cmp	r5, r3
 8019776:	d90f      	bls.n	8019798 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019778:	fb04 0203 	mla	r2, r4, r3, r0
 801977c:	3301      	adds	r3, #1
 801977e:	7b11      	ldrb	r1, [r2, #12]
 8019780:	f36f 1145 	bfc	r1, #5, #1
 8019784:	7311      	strb	r1, [r2, #12]
 8019786:	e7f5      	b.n	8019774 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019788:	6822      	ldr	r2, [r4, #0]
 801978a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801978e:	6802      	ldr	r2, [r0, #0]
 8019790:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019794:	3301      	adds	r3, #1
 8019796:	e7e7      	b.n	8019768 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019798:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801979a:	bf00      	nop
 801979c:	200134b0 	.word	0x200134b0
 80197a0:	200134cc 	.word	0x200134cc
 80197a4:	200134d0 	.word	0x200134d0
 80197a8:	200134c4 	.word	0x200134c4
 80197ac:	200134b4 	.word	0x200134b4
 80197b0:	200134bc 	.word	0x200134bc
 80197b4:	200134ce 	.word	0x200134ce
 80197b8:	200134b8 	.word	0x200134b8
 80197bc:	200134c8 	.word	0x200134c8
 80197c0:	200134c0 	.word	0x200134c0

080197c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80197c4:	4b06      	ldr	r3, [pc, #24]	; (80197e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80197c6:	681b      	ldr	r3, [r3, #0]
 80197c8:	b943      	cbnz	r3, 80197dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80197ca:	b139      	cbz	r1, 80197dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80197cc:	4b05      	ldr	r3, [pc, #20]	; (80197e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80197ce:	801a      	strh	r2, [r3, #0]
 80197d0:	4b05      	ldr	r3, [pc, #20]	; (80197e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80197d2:	6019      	str	r1, [r3, #0]
 80197d4:	4b05      	ldr	r3, [pc, #20]	; (80197ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80197d6:	6018      	str	r0, [r3, #0]
 80197d8:	f7ff bf96 	b.w	8019708 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80197dc:	4770      	bx	lr
 80197de:	bf00      	nop
 80197e0:	200134bc 	.word	0x200134bc
 80197e4:	200134d0 	.word	0x200134d0
 80197e8:	200134b8 	.word	0x200134b8
 80197ec:	200134b0 	.word	0x200134b0

080197f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80197f0:	b470      	push	{r4, r5, r6}
 80197f2:	4c07      	ldr	r4, [pc, #28]	; (8019810 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80197f4:	6826      	ldr	r6, [r4, #0]
 80197f6:	4605      	mov	r5, r0
 80197f8:	4610      	mov	r0, r2
 80197fa:	9a03      	ldr	r2, [sp, #12]
 80197fc:	b936      	cbnz	r6, 801980c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80197fe:	6025      	str	r5, [r4, #0]
 8019800:	4c04      	ldr	r4, [pc, #16]	; (8019814 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019802:	8021      	strh	r1, [r4, #0]
 8019804:	bc70      	pop	{r4, r5, r6}
 8019806:	4619      	mov	r1, r3
 8019808:	f7ff bfdc 	b.w	80197c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801980c:	bc70      	pop	{r4, r5, r6}
 801980e:	4770      	bx	lr
 8019810:	200134d4 	.word	0x200134d4
 8019814:	200134cc 	.word	0x200134cc

08019818 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019818:	4a12      	ldr	r2, [pc, #72]	; (8019864 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801981a:	8803      	ldrh	r3, [r0, #0]
 801981c:	8812      	ldrh	r2, [r2, #0]
 801981e:	4293      	cmp	r3, r2
 8019820:	d207      	bcs.n	8019832 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019822:	4a11      	ldr	r2, [pc, #68]	; (8019868 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019824:	6812      	ldr	r2, [r2, #0]
 8019826:	2114      	movs	r1, #20
 8019828:	fb01 2303 	mla	r3, r1, r3, r2
 801982c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019830:	4770      	bx	lr
 8019832:	490e      	ldr	r1, [pc, #56]	; (801986c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019834:	8809      	ldrh	r1, [r1, #0]
 8019836:	4411      	add	r1, r2
 8019838:	428b      	cmp	r3, r1
 801983a:	da04      	bge.n	8019846 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801983c:	1a9b      	subs	r3, r3, r2
 801983e:	4a0c      	ldr	r2, [pc, #48]	; (8019870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019840:	210e      	movs	r1, #14
 8019842:	6812      	ldr	r2, [r2, #0]
 8019844:	e7f0      	b.n	8019828 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019846:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801984a:	4293      	cmp	r3, r2
 801984c:	d108      	bne.n	8019860 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801984e:	4b09      	ldr	r3, [pc, #36]	; (8019874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019850:	781b      	ldrb	r3, [r3, #0]
 8019852:	b91b      	cbnz	r3, 801985c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019854:	4b08      	ldr	r3, [pc, #32]	; (8019878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019856:	f9b3 0000 	ldrsh.w	r0, [r3]
 801985a:	4770      	bx	lr
 801985c:	4b07      	ldr	r3, [pc, #28]	; (801987c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801985e:	e7fa      	b.n	8019856 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019860:	2000      	movs	r0, #0
 8019862:	4770      	bx	lr
 8019864:	200134cc 	.word	0x200134cc
 8019868:	200134d4 	.word	0x200134d4
 801986c:	200134d0 	.word	0x200134d0
 8019870:	200134b4 	.word	0x200134b4
 8019874:	2001343c 	.word	0x2001343c
 8019878:	2001343e 	.word	0x2001343e
 801987c:	20013440 	.word	0x20013440

08019880 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019880:	4a12      	ldr	r2, [pc, #72]	; (80198cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019882:	8803      	ldrh	r3, [r0, #0]
 8019884:	8812      	ldrh	r2, [r2, #0]
 8019886:	4293      	cmp	r3, r2
 8019888:	d207      	bcs.n	801989a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801988a:	4a11      	ldr	r2, [pc, #68]	; (80198d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801988c:	6812      	ldr	r2, [r2, #0]
 801988e:	2114      	movs	r1, #20
 8019890:	fb01 2303 	mla	r3, r1, r3, r2
 8019894:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019898:	4770      	bx	lr
 801989a:	490e      	ldr	r1, [pc, #56]	; (80198d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801989c:	8809      	ldrh	r1, [r1, #0]
 801989e:	4411      	add	r1, r2
 80198a0:	428b      	cmp	r3, r1
 80198a2:	da04      	bge.n	80198ae <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80198a4:	1a9b      	subs	r3, r3, r2
 80198a6:	4a0c      	ldr	r2, [pc, #48]	; (80198d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80198a8:	210e      	movs	r1, #14
 80198aa:	6812      	ldr	r2, [r2, #0]
 80198ac:	e7f0      	b.n	8019890 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80198ae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198b2:	4293      	cmp	r3, r2
 80198b4:	d108      	bne.n	80198c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80198b6:	4b09      	ldr	r3, [pc, #36]	; (80198dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80198b8:	781b      	ldrb	r3, [r3, #0]
 80198ba:	b91b      	cbnz	r3, 80198c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80198bc:	4b08      	ldr	r3, [pc, #32]	; (80198e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80198be:	f9b3 0000 	ldrsh.w	r0, [r3]
 80198c2:	4770      	bx	lr
 80198c4:	4b07      	ldr	r3, [pc, #28]	; (80198e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80198c6:	e7fa      	b.n	80198be <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80198c8:	2000      	movs	r0, #0
 80198ca:	4770      	bx	lr
 80198cc:	200134cc 	.word	0x200134cc
 80198d0:	200134d4 	.word	0x200134d4
 80198d4:	200134d0 	.word	0x200134d0
 80198d8:	200134b4 	.word	0x200134b4
 80198dc:	2001343c 	.word	0x2001343c
 80198e0:	20013440 	.word	0x20013440
 80198e4:	2001343e 	.word	0x2001343e

080198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80198e8:	b510      	push	{r4, lr}
 80198ea:	4a1f      	ldr	r2, [pc, #124]	; (8019968 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80198ec:	880b      	ldrh	r3, [r1, #0]
 80198ee:	8812      	ldrh	r2, [r2, #0]
 80198f0:	4293      	cmp	r3, r2
 80198f2:	d213      	bcs.n	801991c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80198f4:	4a1d      	ldr	r2, [pc, #116]	; (801996c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80198f6:	6812      	ldr	r2, [r2, #0]
 80198f8:	2114      	movs	r1, #20
 80198fa:	fb01 2303 	mla	r3, r1, r3, r2
 80198fe:	8a1a      	ldrh	r2, [r3, #16]
 8019900:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019904:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019908:	8a5b      	ldrh	r3, [r3, #18]
 801990a:	8004      	strh	r4, [r0, #0]
 801990c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019910:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019914:	8041      	strh	r1, [r0, #2]
 8019916:	8082      	strh	r2, [r0, #4]
 8019918:	80c3      	strh	r3, [r0, #6]
 801991a:	e00e      	b.n	801993a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801991c:	4914      	ldr	r1, [pc, #80]	; (8019970 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801991e:	8809      	ldrh	r1, [r1, #0]
 8019920:	4411      	add	r1, r2
 8019922:	428b      	cmp	r3, r1
 8019924:	da0a      	bge.n	801993c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019926:	1a9b      	subs	r3, r3, r2
 8019928:	4a12      	ldr	r2, [pc, #72]	; (8019974 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801992a:	6812      	ldr	r2, [r2, #0]
 801992c:	210e      	movs	r1, #14
 801992e:	fb01 2303 	mla	r3, r1, r3, r2
 8019932:	681a      	ldr	r2, [r3, #0]
 8019934:	6002      	str	r2, [r0, #0]
 8019936:	685a      	ldr	r2, [r3, #4]
 8019938:	6042      	str	r2, [r0, #4]
 801993a:	bd10      	pop	{r4, pc}
 801993c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019940:	4293      	cmp	r3, r2
 8019942:	d10b      	bne.n	801995c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019944:	4b0c      	ldr	r3, [pc, #48]	; (8019978 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019946:	f9b3 1000 	ldrsh.w	r1, [r3]
 801994a:	4b0c      	ldr	r3, [pc, #48]	; (801997c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801994c:	8081      	strh	r1, [r0, #4]
 801994e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019952:	80c2      	strh	r2, [r0, #6]
 8019954:	2300      	movs	r3, #0
 8019956:	8003      	strh	r3, [r0, #0]
 8019958:	8043      	strh	r3, [r0, #2]
 801995a:	e7ee      	b.n	801993a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801995c:	2300      	movs	r3, #0
 801995e:	8003      	strh	r3, [r0, #0]
 8019960:	8043      	strh	r3, [r0, #2]
 8019962:	8083      	strh	r3, [r0, #4]
 8019964:	e7d8      	b.n	8019918 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019966:	bf00      	nop
 8019968:	200134cc 	.word	0x200134cc
 801996c:	200134d4 	.word	0x200134d4
 8019970:	200134d0 	.word	0x200134d0
 8019974:	200134b4 	.word	0x200134b4
 8019978:	20013438 	.word	0x20013438
 801997c:	2001343a 	.word	0x2001343a

08019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019980:	4a17      	ldr	r2, [pc, #92]	; (80199e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019982:	8803      	ldrh	r3, [r0, #0]
 8019984:	8812      	ldrh	r2, [r2, #0]
 8019986:	4293      	cmp	r3, r2
 8019988:	d213      	bcs.n	80199b2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801998a:	4a16      	ldr	r2, [pc, #88]	; (80199e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801998c:	6812      	ldr	r2, [r2, #0]
 801998e:	2114      	movs	r1, #20
 8019990:	fb01 2303 	mla	r3, r1, r3, r2
 8019994:	8a1a      	ldrh	r2, [r3, #16]
 8019996:	8919      	ldrh	r1, [r3, #8]
 8019998:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801999c:	428a      	cmp	r2, r1
 801999e:	db1d      	blt.n	80199dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80199a0:	8a58      	ldrh	r0, [r3, #18]
 80199a2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80199a6:	895b      	ldrh	r3, [r3, #10]
 80199a8:	4298      	cmp	r0, r3
 80199aa:	bfac      	ite	ge
 80199ac:	2000      	movge	r0, #0
 80199ae:	2001      	movlt	r0, #1
 80199b0:	4770      	bx	lr
 80199b2:	490d      	ldr	r1, [pc, #52]	; (80199e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80199b4:	8809      	ldrh	r1, [r1, #0]
 80199b6:	4411      	add	r1, r2
 80199b8:	428b      	cmp	r3, r1
 80199ba:	da0d      	bge.n	80199d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80199bc:	1a9b      	subs	r3, r3, r2
 80199be:	4a0b      	ldr	r2, [pc, #44]	; (80199ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80199c0:	6812      	ldr	r2, [r2, #0]
 80199c2:	210e      	movs	r1, #14
 80199c4:	fb01 2303 	mla	r3, r1, r3, r2
 80199c8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80199cc:	891a      	ldrh	r2, [r3, #8]
 80199ce:	4291      	cmp	r1, r2
 80199d0:	db04      	blt.n	80199dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80199d2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80199d6:	e7e6      	b.n	80199a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80199d8:	2000      	movs	r0, #0
 80199da:	4770      	bx	lr
 80199dc:	2001      	movs	r0, #1
 80199de:	4770      	bx	lr
 80199e0:	200134cc 	.word	0x200134cc
 80199e4:	200134d4 	.word	0x200134d4
 80199e8:	200134d0 	.word	0x200134d0
 80199ec:	200134b4 	.word	0x200134b4

080199f0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80199f0:	4a12      	ldr	r2, [pc, #72]	; (8019a3c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80199f2:	8803      	ldrh	r3, [r0, #0]
 80199f4:	8811      	ldrh	r1, [r2, #0]
 80199f6:	428b      	cmp	r3, r1
 80199f8:	d20b      	bcs.n	8019a12 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80199fa:	4a11      	ldr	r2, [pc, #68]	; (8019a40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80199fc:	6812      	ldr	r2, [r2, #0]
 80199fe:	b112      	cbz	r2, 8019a06 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019a00:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019a04:	b9c0      	cbnz	r0, 8019a38 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019a06:	4a0f      	ldr	r2, [pc, #60]	; (8019a44 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019a08:	6811      	ldr	r1, [r2, #0]
 8019a0a:	2214      	movs	r2, #20
 8019a0c:	4353      	muls	r3, r2
 8019a0e:	58c8      	ldr	r0, [r1, r3]
 8019a10:	4770      	bx	lr
 8019a12:	4a0d      	ldr	r2, [pc, #52]	; (8019a48 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019a14:	8812      	ldrh	r2, [r2, #0]
 8019a16:	440a      	add	r2, r1
 8019a18:	4293      	cmp	r3, r2
 8019a1a:	da04      	bge.n	8019a26 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019a1c:	4a08      	ldr	r2, [pc, #32]	; (8019a40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019a1e:	6812      	ldr	r2, [r2, #0]
 8019a20:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019a24:	4770      	bx	lr
 8019a26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019a2a:	4293      	cmp	r3, r2
 8019a2c:	d103      	bne.n	8019a36 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8019a2e:	4b07      	ldr	r3, [pc, #28]	; (8019a4c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019a30:	681b      	ldr	r3, [r3, #0]
 8019a32:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019a34:	4770      	bx	lr
 8019a36:	2000      	movs	r0, #0
 8019a38:	4770      	bx	lr
 8019a3a:	bf00      	nop
 8019a3c:	200134cc 	.word	0x200134cc
 8019a40:	200134b0 	.word	0x200134b0
 8019a44:	200134d4 	.word	0x200134d4
 8019a48:	200134d0 	.word	0x200134d0
 8019a4c:	20013444 	.word	0x20013444

08019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019a50:	4b24      	ldr	r3, [pc, #144]	; (8019ae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8019a52:	8802      	ldrh	r2, [r0, #0]
 8019a54:	8818      	ldrh	r0, [r3, #0]
 8019a56:	4282      	cmp	r2, r0
 8019a58:	d221      	bcs.n	8019a9e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019a5a:	4b23      	ldr	r3, [pc, #140]	; (8019ae8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019a5c:	6819      	ldr	r1, [r3, #0]
 8019a5e:	2314      	movs	r3, #20
 8019a60:	fb03 1302 	mla	r3, r3, r2, r1
 8019a64:	6858      	ldr	r0, [r3, #4]
 8019a66:	2800      	cmp	r0, #0
 8019a68:	d03a      	beq.n	8019ae0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a6a:	4920      	ldr	r1, [pc, #128]	; (8019aec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019a6c:	6809      	ldr	r1, [r1, #0]
 8019a6e:	2900      	cmp	r1, #0
 8019a70:	d036      	beq.n	8019ae0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a72:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019a76:	2900      	cmp	r1, #0
 8019a78:	d032      	beq.n	8019ae0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a7a:	891a      	ldrh	r2, [r3, #8]
 8019a7c:	8958      	ldrh	r0, [r3, #10]
 8019a7e:	4350      	muls	r0, r2
 8019a80:	7c5a      	ldrb	r2, [r3, #17]
 8019a82:	7cdb      	ldrb	r3, [r3, #19]
 8019a84:	0952      	lsrs	r2, r2, #5
 8019a86:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019a8a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019a8e:	2b0b      	cmp	r3, #11
 8019a90:	bf18      	it	ne
 8019a92:	0040      	lslne	r0, r0, #1
 8019a94:	3003      	adds	r0, #3
 8019a96:	f020 0003 	bic.w	r0, r0, #3
 8019a9a:	4408      	add	r0, r1
 8019a9c:	4770      	bx	lr
 8019a9e:	4b14      	ldr	r3, [pc, #80]	; (8019af0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019aa0:	881b      	ldrh	r3, [r3, #0]
 8019aa2:	4403      	add	r3, r0
 8019aa4:	429a      	cmp	r2, r3
 8019aa6:	da1a      	bge.n	8019ade <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019aa8:	4b12      	ldr	r3, [pc, #72]	; (8019af4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019aaa:	681b      	ldr	r3, [r3, #0]
 8019aac:	1a10      	subs	r0, r2, r0
 8019aae:	210e      	movs	r1, #14
 8019ab0:	fb01 3000 	mla	r0, r1, r0, r3
 8019ab4:	7b03      	ldrb	r3, [r0, #12]
 8019ab6:	f003 031f 	and.w	r3, r3, #31
 8019aba:	2b0b      	cmp	r3, #11
 8019abc:	d10b      	bne.n	8019ad6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019abe:	8903      	ldrh	r3, [r0, #8]
 8019ac0:	8940      	ldrh	r0, [r0, #10]
 8019ac2:	4358      	muls	r0, r3
 8019ac4:	4b09      	ldr	r3, [pc, #36]	; (8019aec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019ac6:	6819      	ldr	r1, [r3, #0]
 8019ac8:	3003      	adds	r0, #3
 8019aca:	f020 0303 	bic.w	r3, r0, #3
 8019ace:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019ad2:	4418      	add	r0, r3
 8019ad4:	4770      	bx	lr
 8019ad6:	2b0d      	cmp	r3, #13
 8019ad8:	d101      	bne.n	8019ade <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019ada:	300d      	adds	r0, #13
 8019adc:	4770      	bx	lr
 8019ade:	2000      	movs	r0, #0
 8019ae0:	4770      	bx	lr
 8019ae2:	bf00      	nop
 8019ae4:	200134cc 	.word	0x200134cc
 8019ae8:	200134d4 	.word	0x200134d4
 8019aec:	200134b0 	.word	0x200134b0
 8019af0:	200134d0 	.word	0x200134d0
 8019af4:	200134b4 	.word	0x200134b4

08019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019af8:	b510      	push	{r4, lr}
 8019afa:	4a17      	ldr	r2, [pc, #92]	; (8019b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019afc:	8803      	ldrh	r3, [r0, #0]
 8019afe:	8812      	ldrh	r2, [r2, #0]
 8019b00:	4293      	cmp	r3, r2
 8019b02:	d20c      	bcs.n	8019b1e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019b04:	4a15      	ldr	r2, [pc, #84]	; (8019b5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019b06:	6812      	ldr	r2, [r2, #0]
 8019b08:	2114      	movs	r1, #20
 8019b0a:	fb01 2303 	mla	r3, r1, r3, r2
 8019b0e:	7c58      	ldrb	r0, [r3, #17]
 8019b10:	0942      	lsrs	r2, r0, #5
 8019b12:	7cd8      	ldrb	r0, [r3, #19]
 8019b14:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019b18:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019b1c:	bd10      	pop	{r4, pc}
 8019b1e:	4910      	ldr	r1, [pc, #64]	; (8019b60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8019b20:	8809      	ldrh	r1, [r1, #0]
 8019b22:	4411      	add	r1, r2
 8019b24:	428b      	cmp	r3, r1
 8019b26:	da09      	bge.n	8019b3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019b28:	1a9b      	subs	r3, r3, r2
 8019b2a:	4a0e      	ldr	r2, [pc, #56]	; (8019b64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019b2c:	6812      	ldr	r2, [r2, #0]
 8019b2e:	210e      	movs	r1, #14
 8019b30:	fb01 2303 	mla	r3, r1, r3, r2
 8019b34:	7b18      	ldrb	r0, [r3, #12]
 8019b36:	f000 001f 	and.w	r0, r0, #31
 8019b3a:	e7ef      	b.n	8019b1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019b3c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019b40:	4293      	cmp	r3, r2
 8019b42:	d106      	bne.n	8019b52 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019b44:	f7ea fb04 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8019b48:	6803      	ldr	r3, [r0, #0]
 8019b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b50:	4718      	bx	r3
 8019b52:	2000      	movs	r0, #0
 8019b54:	e7e2      	b.n	8019b1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019b56:	bf00      	nop
 8019b58:	200134cc 	.word	0x200134cc
 8019b5c:	200134d4 	.word	0x200134d4
 8019b60:	200134d0 	.word	0x200134d0
 8019b64:	200134b4 	.word	0x200134b4

08019b68 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019b68:	2010      	movs	r0, #16
 8019b6a:	4770      	bx	lr

08019b6c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019b6c:	2000      	movs	r0, #0
 8019b6e:	4770      	bx	lr

08019b70 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019b70:	4b02      	ldr	r3, [pc, #8]	; (8019b7c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8019b72:	8818      	ldrh	r0, [r3, #0]
 8019b74:	0040      	lsls	r0, r0, #1
 8019b76:	b280      	uxth	r0, r0
 8019b78:	4770      	bx	lr
 8019b7a:	bf00      	nop
 8019b7c:	2001343e 	.word	0x2001343e

08019b80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019b80:	2bff      	cmp	r3, #255	; 0xff
 8019b82:	d050      	beq.n	8019c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019b84:	2a0b      	cmp	r2, #11
 8019b86:	d04a      	beq.n	8019c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019b88:	d80e      	bhi.n	8019ba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019b8a:	2a03      	cmp	r2, #3
 8019b8c:	d03f      	beq.n	8019c0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019b8e:	d804      	bhi.n	8019b9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019b90:	2a01      	cmp	r2, #1
 8019b92:	d03e      	beq.n	8019c12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019b94:	d93f      	bls.n	8019c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019b96:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019b98:	4770      	bx	lr
 8019b9a:	2a09      	cmp	r2, #9
 8019b9c:	d03f      	beq.n	8019c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019b9e:	d83c      	bhi.n	8019c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019ba0:	2a08      	cmp	r2, #8
 8019ba2:	d03a      	beq.n	8019c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019ba4:	2000      	movs	r0, #0
 8019ba6:	4770      	bx	lr
 8019ba8:	2a2f      	cmp	r2, #47	; 0x2f
 8019baa:	d024      	beq.n	8019bf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019bac:	d80d      	bhi.n	8019bca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019bae:	2a2d      	cmp	r2, #45	; 0x2d
 8019bb0:	d014      	beq.n	8019bdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019bb2:	d826      	bhi.n	8019c02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019bb4:	2a2c      	cmp	r2, #44	; 0x2c
 8019bb6:	d1f5      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bb8:	684b      	ldr	r3, [r1, #4]
 8019bba:	781b      	ldrb	r3, [r3, #0]
 8019bbc:	2b01      	cmp	r3, #1
 8019bbe:	d018      	beq.n	8019bf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019bc0:	d323      	bcc.n	8019c0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019bc2:	2b02      	cmp	r3, #2
 8019bc4:	d1ee      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bc6:	6880      	ldr	r0, [r0, #8]
 8019bc8:	4770      	bx	lr
 8019bca:	2a31      	cmp	r2, #49	; 0x31
 8019bcc:	d004      	beq.n	8019bd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019bce:	d328      	bcc.n	8019c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019bd0:	2a32      	cmp	r2, #50	; 0x32
 8019bd2:	d026      	beq.n	8019c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019bd4:	2a33      	cmp	r2, #51	; 0x33
 8019bd6:	d1e5      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bd8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019bda:	4770      	bx	lr
 8019bdc:	684b      	ldr	r3, [r1, #4]
 8019bde:	781b      	ldrb	r3, [r3, #0]
 8019be0:	2b01      	cmp	r3, #1
 8019be2:	d004      	beq.n	8019bee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019be4:	d30b      	bcc.n	8019bfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019be6:	2b02      	cmp	r3, #2
 8019be8:	d1dc      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bea:	6900      	ldr	r0, [r0, #16]
 8019bec:	4770      	bx	lr
 8019bee:	6a00      	ldr	r0, [r0, #32]
 8019bf0:	4770      	bx	lr
 8019bf2:	6980      	ldr	r0, [r0, #24]
 8019bf4:	4770      	bx	lr
 8019bf6:	684b      	ldr	r3, [r1, #4]
 8019bf8:	781b      	ldrb	r3, [r3, #0]
 8019bfa:	2b00      	cmp	r3, #0
 8019bfc:	d1d2      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bfe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019c00:	4770      	bx	lr
 8019c02:	684b      	ldr	r3, [r1, #4]
 8019c04:	781b      	ldrb	r3, [r3, #0]
 8019c06:	2b00      	cmp	r3, #0
 8019c08:	d1cc      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c0a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019c0c:	4770      	bx	lr
 8019c0e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019c10:	4770      	bx	lr
 8019c12:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019c14:	4770      	bx	lr
 8019c16:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019c18:	4770      	bx	lr
 8019c1a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019c1c:	4770      	bx	lr
 8019c1e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019c20:	4770      	bx	lr
 8019c22:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019c24:	4770      	bx	lr
 8019c26:	2a0b      	cmp	r2, #11
 8019c28:	d049      	beq.n	8019cbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019c2a:	d80e      	bhi.n	8019c4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019c2c:	2a03      	cmp	r2, #3
 8019c2e:	d040      	beq.n	8019cb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019c30:	d804      	bhi.n	8019c3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019c32:	2a01      	cmp	r2, #1
 8019c34:	d03f      	beq.n	8019cb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019c36:	d940      	bls.n	8019cba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019c38:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019c3a:	4770      	bx	lr
 8019c3c:	2a09      	cmp	r2, #9
 8019c3e:	d03e      	beq.n	8019cbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019c40:	d801      	bhi.n	8019c46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019c42:	2a08      	cmp	r2, #8
 8019c44:	d1ae      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c46:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019c48:	4770      	bx	lr
 8019c4a:	2a2f      	cmp	r2, #47	; 0x2f
 8019c4c:	d024      	beq.n	8019c98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019c4e:	d80d      	bhi.n	8019c6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019c50:	2a2d      	cmp	r2, #45	; 0x2d
 8019c52:	d014      	beq.n	8019c7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019c54:	d826      	bhi.n	8019ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019c56:	2a2c      	cmp	r2, #44	; 0x2c
 8019c58:	d1a4      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c5a:	684b      	ldr	r3, [r1, #4]
 8019c5c:	781b      	ldrb	r3, [r3, #0]
 8019c5e:	2b01      	cmp	r3, #1
 8019c60:	d018      	beq.n	8019c94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019c62:	d324      	bcc.n	8019cae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019c64:	2b02      	cmp	r3, #2
 8019c66:	d19d      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c68:	68c0      	ldr	r0, [r0, #12]
 8019c6a:	4770      	bx	lr
 8019c6c:	2a31      	cmp	r2, #49	; 0x31
 8019c6e:	d004      	beq.n	8019c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019c70:	d327      	bcc.n	8019cc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019c72:	2a32      	cmp	r2, #50	; 0x32
 8019c74:	d025      	beq.n	8019cc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019c76:	2a33      	cmp	r2, #51	; 0x33
 8019c78:	d194      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c7a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019c7c:	4770      	bx	lr
 8019c7e:	684b      	ldr	r3, [r1, #4]
 8019c80:	781b      	ldrb	r3, [r3, #0]
 8019c82:	2b01      	cmp	r3, #1
 8019c84:	d004      	beq.n	8019c90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019c86:	d30b      	bcc.n	8019ca0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019c88:	2b02      	cmp	r3, #2
 8019c8a:	d18b      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c8c:	6940      	ldr	r0, [r0, #20]
 8019c8e:	4770      	bx	lr
 8019c90:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019c92:	4770      	bx	lr
 8019c94:	69c0      	ldr	r0, [r0, #28]
 8019c96:	4770      	bx	lr
 8019c98:	684b      	ldr	r3, [r1, #4]
 8019c9a:	781b      	ldrb	r3, [r3, #0]
 8019c9c:	2b00      	cmp	r3, #0
 8019c9e:	d181      	bne.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ca0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019ca2:	4770      	bx	lr
 8019ca4:	684b      	ldr	r3, [r1, #4]
 8019ca6:	781b      	ldrb	r3, [r3, #0]
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	f47f af7b 	bne.w	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019cae:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019cb0:	4770      	bx	lr
 8019cb2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019cb4:	4770      	bx	lr
 8019cb6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019cb8:	4770      	bx	lr
 8019cba:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019cbc:	4770      	bx	lr
 8019cbe:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019cc0:	4770      	bx	lr
 8019cc2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019cc4:	4770      	bx	lr

08019cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019cc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cca:	b087      	sub	sp, #28
 8019ccc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019cce:	9205      	str	r2, [sp, #20]
 8019cd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019cd4:	9202      	str	r2, [sp, #8]
 8019cd6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019cda:	9101      	str	r1, [sp, #4]
 8019cdc:	6841      	ldr	r1, [r0, #4]
 8019cde:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019ce2:	fb01 2404 	mla	r4, r1, r4, r2
 8019ce6:	6802      	ldr	r2, [r0, #0]
 8019ce8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019cec:	f8de 2000 	ldr.w	r2, [lr]
 8019cf0:	9203      	str	r2, [sp, #12]
 8019cf2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019cf6:	3204      	adds	r2, #4
 8019cf8:	9204      	str	r2, [sp, #16]
 8019cfa:	9a02      	ldr	r2, [sp, #8]
 8019cfc:	43d6      	mvns	r6, r2
 8019cfe:	b2f6      	uxtb	r6, r6
 8019d00:	9a01      	ldr	r2, [sp, #4]
 8019d02:	2a00      	cmp	r2, #0
 8019d04:	dc03      	bgt.n	8019d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019d06:	9a05      	ldr	r2, [sp, #20]
 8019d08:	2a00      	cmp	r2, #0
 8019d0a:	f340 8129 	ble.w	8019f60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019d0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019d10:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019d14:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019d18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019d1e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d22:	2b00      	cmp	r3, #0
 8019d24:	dd0e      	ble.n	8019d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019d26:	1408      	asrs	r0, r1, #16
 8019d28:	d405      	bmi.n	8019d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019d2a:	4560      	cmp	r0, ip
 8019d2c:	da03      	bge.n	8019d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019d2e:	1410      	asrs	r0, r2, #16
 8019d30:	d401      	bmi.n	8019d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019d32:	42b8      	cmp	r0, r7
 8019d34:	db07      	blt.n	8019d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019d36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d38:	4401      	add	r1, r0
 8019d3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019d3c:	3b01      	subs	r3, #1
 8019d3e:	4402      	add	r2, r0
 8019d40:	3402      	adds	r4, #2
 8019d42:	e7ee      	b.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019d44:	d071      	beq.n	8019e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019d46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019d48:	1e58      	subs	r0, r3, #1
 8019d4a:	fb05 1500 	mla	r5, r5, r0, r1
 8019d4e:	142d      	asrs	r5, r5, #16
 8019d50:	d45f      	bmi.n	8019e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d52:	4565      	cmp	r5, ip
 8019d54:	da5d      	bge.n	8019e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019d58:	fb05 2000 	mla	r0, r5, r0, r2
 8019d5c:	1400      	asrs	r0, r0, #16
 8019d5e:	d458      	bmi.n	8019e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d60:	42b8      	cmp	r0, r7
 8019d62:	da56      	bge.n	8019e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d64:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019d68:	4699      	mov	r9, r3
 8019d6a:	46a2      	mov	sl, r4
 8019d6c:	f1b9 0f00 	cmp.w	r9, #0
 8019d70:	dd57      	ble.n	8019e22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019d72:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019d76:	9803      	ldr	r0, [sp, #12]
 8019d78:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019d7c:	140d      	asrs	r5, r1, #16
 8019d7e:	fb07 000c 	mla	r0, r7, ip, r0
 8019d82:	f109 39ff 	add.w	r9, r9, #4294967295
 8019d86:	5d40      	ldrb	r0, [r0, r5]
 8019d88:	9d04      	ldr	r5, [sp, #16]
 8019d8a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d8e:	f8ba 5000 	ldrh.w	r5, [sl]
 8019d92:	122f      	asrs	r7, r5, #8
 8019d94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d98:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d9c:	fb17 f706 	smulbb	r7, r7, r6
 8019da0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019da4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019da8:	00ed      	lsls	r5, r5, #3
 8019daa:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019dae:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019db2:	10c7      	asrs	r7, r0, #3
 8019db4:	b2ed      	uxtb	r5, r5
 8019db6:	00c0      	lsls	r0, r0, #3
 8019db8:	fb18 f806 	smulbb	r8, r8, r6
 8019dbc:	fb15 f506 	smulbb	r5, r5, r6
 8019dc0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dc4:	b2c0      	uxtb	r0, r0
 8019dc6:	fa1f fc8c 	uxth.w	ip, ip
 8019dca:	fb07 870b 	mla	r7, r7, fp, r8
 8019dce:	fb00 500b 	mla	r0, r0, fp, r5
 8019dd2:	b280      	uxth	r0, r0
 8019dd4:	b2bf      	uxth	r7, r7
 8019dd6:	f10c 0501 	add.w	r5, ip, #1
 8019dda:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019dde:	f107 0801 	add.w	r8, r7, #1
 8019de2:	1c45      	adds	r5, r0, #1
 8019de4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019de8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019dec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019dee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019df2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019df6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019dfa:	ea45 0c0c 	orr.w	ip, r5, ip
 8019dfe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019e02:	4401      	add	r1, r0
 8019e04:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019e06:	ea4c 0c08 	orr.w	ip, ip, r8
 8019e0a:	f82a cb02 	strh.w	ip, [sl], #2
 8019e0e:	4402      	add	r2, r0
 8019e10:	e7ac      	b.n	8019d6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019e12:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019e16:	f04f 0800 	mov.w	r8, #0
 8019e1a:	eb03 0008 	add.w	r0, r3, r8
 8019e1e:	2800      	cmp	r0, #0
 8019e20:	dc41      	bgt.n	8019ea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019e22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e2a:	9b01      	ldr	r3, [sp, #4]
 8019e2c:	2b00      	cmp	r3, #0
 8019e2e:	f340 8097 	ble.w	8019f60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019e32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e4c:	eef0 6a62 	vmov.f32	s13, s5
 8019e50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e5c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019e60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e64:	eef0 6a43 	vmov.f32	s13, s6
 8019e68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e6c:	ee12 2a90 	vmov	r2, s5
 8019e70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e74:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e78:	ee13 2a10 	vmov	r2, s6
 8019e7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019e7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e80:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e84:	9314      	str	r3, [sp, #80]	; 0x50
 8019e86:	9b01      	ldr	r3, [sp, #4]
 8019e88:	9a05      	ldr	r2, [sp, #20]
 8019e8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e8e:	3b01      	subs	r3, #1
 8019e90:	9301      	str	r3, [sp, #4]
 8019e92:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019e96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e98:	eeb0 3a67 	vmov.f32	s6, s15
 8019e9c:	bf08      	it	eq
 8019e9e:	4613      	moveq	r3, r2
 8019ea0:	eef0 2a47 	vmov.f32	s5, s14
 8019ea4:	e72c      	b.n	8019d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019ea6:	140f      	asrs	r7, r1, #16
 8019ea8:	d453      	bmi.n	8019f52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019eaa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019eae:	42bd      	cmp	r5, r7
 8019eb0:	dd4f      	ble.n	8019f52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019eb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019eb6:	d44c      	bmi.n	8019f52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019eb8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ebc:	4560      	cmp	r0, ip
 8019ebe:	dd48      	ble.n	8019f52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019ec0:	9803      	ldr	r0, [sp, #12]
 8019ec2:	b22d      	sxth	r5, r5
 8019ec4:	fb0c 0505 	mla	r5, ip, r5, r0
 8019ec8:	5de8      	ldrb	r0, [r5, r7]
 8019eca:	9d04      	ldr	r5, [sp, #16]
 8019ecc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019ed0:	f06f 0501 	mvn.w	r5, #1
 8019ed4:	fb05 fb08 	mul.w	fp, r5, r8
 8019ed8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019edc:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019ee0:	122f      	asrs	r7, r5, #8
 8019ee2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ee6:	fb17 f706 	smulbb	r7, r7, r6
 8019eea:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019eee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ef2:	00ed      	lsls	r5, r5, #3
 8019ef4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019ef8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019efc:	10c7      	asrs	r7, r0, #3
 8019efe:	b2ed      	uxtb	r5, r5
 8019f00:	00c0      	lsls	r0, r0, #3
 8019f02:	fb19 f906 	smulbb	r9, r9, r6
 8019f06:	fb15 f506 	smulbb	r5, r5, r6
 8019f0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f0e:	b2c0      	uxtb	r0, r0
 8019f10:	fa1f fc8c 	uxth.w	ip, ip
 8019f14:	fb07 970a 	mla	r7, r7, sl, r9
 8019f18:	fb00 500a 	mla	r0, r0, sl, r5
 8019f1c:	b2bf      	uxth	r7, r7
 8019f1e:	b280      	uxth	r0, r0
 8019f20:	f10c 0501 	add.w	r5, ip, #1
 8019f24:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019f28:	f107 0901 	add.w	r9, r7, #1
 8019f2c:	1c45      	adds	r5, r0, #1
 8019f2e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019f32:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019f36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f3e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019f42:	ea45 0c0c 	orr.w	ip, r5, ip
 8019f46:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019f4a:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f4e:	f824 c00b 	strh.w	ip, [r4, fp]
 8019f52:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f54:	4401      	add	r1, r0
 8019f56:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f58:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f5c:	4402      	add	r2, r0
 8019f5e:	e75c      	b.n	8019e1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019f60:	b007      	add	sp, #28
 8019f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f6a:	b085      	sub	sp, #20
 8019f6c:	4693      	mov	fp, r2
 8019f6e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f70:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f72:	6870      	ldr	r0, [r6, #4]
 8019f74:	9100      	str	r1, [sp, #0]
 8019f76:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f7a:	fb00 2404 	mla	r4, r0, r4, r2
 8019f7e:	6832      	ldr	r2, [r6, #0]
 8019f80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f84:	682a      	ldr	r2, [r5, #0]
 8019f86:	9201      	str	r2, [sp, #4]
 8019f88:	686a      	ldr	r2, [r5, #4]
 8019f8a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019f8e:	3204      	adds	r2, #4
 8019f90:	9202      	str	r2, [sp, #8]
 8019f92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f96:	9a00      	ldr	r2, [sp, #0]
 8019f98:	2a00      	cmp	r2, #0
 8019f9a:	dc03      	bgt.n	8019fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019f9c:	f1bb 0f00 	cmp.w	fp, #0
 8019fa0:	f340 80a0 	ble.w	801a0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019fa4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fa6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019faa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019fae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019fb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fb8:	2b00      	cmp	r3, #0
 8019fba:	dd0c      	ble.n	8019fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019fbc:	1406      	asrs	r6, r0, #16
 8019fbe:	d405      	bmi.n	8019fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fc0:	454e      	cmp	r6, r9
 8019fc2:	da03      	bge.n	8019fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fc4:	1416      	asrs	r6, r2, #16
 8019fc6:	d401      	bmi.n	8019fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fc8:	4546      	cmp	r6, r8
 8019fca:	db05      	blt.n	8019fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019fcc:	4470      	add	r0, lr
 8019fce:	4462      	add	r2, ip
 8019fd0:	3b01      	subs	r3, #1
 8019fd2:	3402      	adds	r4, #2
 8019fd4:	e7f0      	b.n	8019fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019fd6:	d00f      	beq.n	8019ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fd8:	1e5e      	subs	r6, r3, #1
 8019fda:	fb0e 0706 	mla	r7, lr, r6, r0
 8019fde:	143f      	asrs	r7, r7, #16
 8019fe0:	d541      	bpl.n	801a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019fe2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019fe6:	4698      	mov	r8, r3
 8019fe8:	9603      	str	r6, [sp, #12]
 8019fea:	f1b8 0f00 	cmp.w	r8, #0
 8019fee:	dc59      	bgt.n	801a0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ff4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ff8:	9b00      	ldr	r3, [sp, #0]
 8019ffa:	2b00      	cmp	r3, #0
 8019ffc:	dd72      	ble.n	801a0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019ffe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a002:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a006:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a00a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a00c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a010:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a014:	eeb0 6a62 	vmov.f32	s12, s5
 801a018:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a01c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a020:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a024:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a028:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a02c:	eeb0 6a43 	vmov.f32	s12, s6
 801a030:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a034:	ee12 2a90 	vmov	r2, s5
 801a038:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a03c:	fb92 fef3 	sdiv	lr, r2, r3
 801a040:	ee13 2a10 	vmov	r2, s6
 801a044:	fb92 fcf3 	sdiv	ip, r2, r3
 801a048:	9b00      	ldr	r3, [sp, #0]
 801a04a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a04e:	3b01      	subs	r3, #1
 801a050:	9300      	str	r3, [sp, #0]
 801a052:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a056:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a058:	eeb0 3a67 	vmov.f32	s6, s15
 801a05c:	bf08      	it	eq
 801a05e:	465b      	moveq	r3, fp
 801a060:	eef0 2a47 	vmov.f32	s5, s14
 801a064:	e797      	b.n	8019f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a066:	454f      	cmp	r7, r9
 801a068:	dabb      	bge.n	8019fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a06a:	fb0c 2606 	mla	r6, ip, r6, r2
 801a06e:	1436      	asrs	r6, r6, #16
 801a070:	d4b7      	bmi.n	8019fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a072:	4546      	cmp	r6, r8
 801a074:	dab5      	bge.n	8019fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a076:	461e      	mov	r6, r3
 801a078:	46a0      	mov	r8, r4
 801a07a:	2e00      	cmp	r6, #0
 801a07c:	ddb8      	ble.n	8019ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a07e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a082:	9901      	ldr	r1, [sp, #4]
 801a084:	1417      	asrs	r7, r2, #16
 801a086:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a08a:	fb0a 1707 	mla	r7, sl, r7, r1
 801a08e:	9902      	ldr	r1, [sp, #8]
 801a090:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a094:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a098:	f828 7b02 	strh.w	r7, [r8], #2
 801a09c:	4470      	add	r0, lr
 801a09e:	4462      	add	r2, ip
 801a0a0:	3e01      	subs	r6, #1
 801a0a2:	e7ea      	b.n	801a07a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a0a4:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a0a8:	d417      	bmi.n	801a0da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a0aa:	68ae      	ldr	r6, [r5, #8]
 801a0ac:	454e      	cmp	r6, r9
 801a0ae:	dd14      	ble.n	801a0da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a0b0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a0b4:	d411      	bmi.n	801a0da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a0b6:	68ef      	ldr	r7, [r5, #12]
 801a0b8:	4557      	cmp	r7, sl
 801a0ba:	dd0e      	ble.n	801a0da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a0bc:	9f01      	ldr	r7, [sp, #4]
 801a0be:	b236      	sxth	r6, r6
 801a0c0:	fb0a 7606 	mla	r6, sl, r6, r7
 801a0c4:	9f02      	ldr	r7, [sp, #8]
 801a0c6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a0ca:	f06f 0101 	mvn.w	r1, #1
 801a0ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a0d2:	fb01 f608 	mul.w	r6, r1, r8
 801a0d6:	9903      	ldr	r1, [sp, #12]
 801a0d8:	538f      	strh	r7, [r1, r6]
 801a0da:	4470      	add	r0, lr
 801a0dc:	4462      	add	r2, ip
 801a0de:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0e2:	e782      	b.n	8019fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a0e4:	b005      	add	sp, #20
 801a0e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0ee:	b087      	sub	sp, #28
 801a0f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a0f2:	9205      	str	r2, [sp, #20]
 801a0f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a0f8:	9203      	str	r2, [sp, #12]
 801a0fa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a0fe:	9102      	str	r1, [sp, #8]
 801a100:	6861      	ldr	r1, [r4, #4]
 801a102:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a106:	fb01 2000 	mla	r0, r1, r0, r2
 801a10a:	6822      	ldr	r2, [r4, #0]
 801a10c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a110:	9200      	str	r2, [sp, #0]
 801a112:	f8dc 2000 	ldr.w	r2, [ip]
 801a116:	9204      	str	r2, [sp, #16]
 801a118:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a11c:	3204      	adds	r2, #4
 801a11e:	9201      	str	r2, [sp, #4]
 801a120:	9a03      	ldr	r2, [sp, #12]
 801a122:	43d5      	mvns	r5, r2
 801a124:	b2ed      	uxtb	r5, r5
 801a126:	9a02      	ldr	r2, [sp, #8]
 801a128:	2a00      	cmp	r2, #0
 801a12a:	dc03      	bgt.n	801a134 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a12c:	9a05      	ldr	r2, [sp, #20]
 801a12e:	2a00      	cmp	r2, #0
 801a130:	f340 812c 	ble.w	801a38c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a134:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a136:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a13a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a13e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a142:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a144:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a148:	2b00      	cmp	r3, #0
 801a14a:	dd10      	ble.n	801a16e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a14c:	140c      	asrs	r4, r1, #16
 801a14e:	d405      	bmi.n	801a15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a150:	4574      	cmp	r4, lr
 801a152:	da03      	bge.n	801a15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a154:	1414      	asrs	r4, r2, #16
 801a156:	d401      	bmi.n	801a15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a158:	42bc      	cmp	r4, r7
 801a15a:	db09      	blt.n	801a170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a15c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a15e:	9800      	ldr	r0, [sp, #0]
 801a160:	4421      	add	r1, r4
 801a162:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a164:	3002      	adds	r0, #2
 801a166:	4422      	add	r2, r4
 801a168:	3b01      	subs	r3, #1
 801a16a:	9000      	str	r0, [sp, #0]
 801a16c:	e7ec      	b.n	801a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a16e:	d071      	beq.n	801a254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a170:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a172:	1e5c      	subs	r4, r3, #1
 801a174:	fb06 1604 	mla	r6, r6, r4, r1
 801a178:	1436      	asrs	r6, r6, #16
 801a17a:	d45d      	bmi.n	801a238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a17c:	4576      	cmp	r6, lr
 801a17e:	da5b      	bge.n	801a238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a180:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a182:	fb06 2404 	mla	r4, r6, r4, r2
 801a186:	1424      	asrs	r4, r4, #16
 801a188:	d456      	bmi.n	801a238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a18a:	42bc      	cmp	r4, r7
 801a18c:	da54      	bge.n	801a238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a18e:	f8dd 9000 	ldr.w	r9, [sp]
 801a192:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a196:	4698      	mov	r8, r3
 801a198:	f1b8 0f00 	cmp.w	r8, #0
 801a19c:	dd54      	ble.n	801a248 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a19e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a1a2:	9804      	ldr	r0, [sp, #16]
 801a1a4:	1414      	asrs	r4, r2, #16
 801a1a6:	fb07 0404 	mla	r4, r7, r4, r0
 801a1aa:	140e      	asrs	r6, r1, #16
 801a1ac:	9801      	ldr	r0, [sp, #4]
 801a1ae:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a1b2:	f8b9 4000 	ldrh.w	r4, [r9]
 801a1b6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a1ba:	eb00 0b0e 	add.w	fp, r0, lr
 801a1be:	1227      	asrs	r7, r4, #8
 801a1c0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a1c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a1c8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a1cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a1ce:	fb16 f60a 	smulbb	r6, r6, sl
 801a1d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a1d6:	fb07 6705 	mla	r7, r7, r5, r6
 801a1da:	10e6      	asrs	r6, r4, #3
 801a1dc:	00e4      	lsls	r4, r4, #3
 801a1de:	b2e4      	uxtb	r4, r4
 801a1e0:	fb1b fb0a 	smulbb	fp, fp, sl
 801a1e4:	fb14 f405 	smulbb	r4, r4, r5
 801a1e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a1ec:	b2bf      	uxth	r7, r7
 801a1ee:	fb06 b605 	mla	r6, r6, r5, fp
 801a1f2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a1f6:	b2b6      	uxth	r6, r6
 801a1f8:	fa1f fe8e 	uxth.w	lr, lr
 801a1fc:	1c7c      	adds	r4, r7, #1
 801a1fe:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a202:	f106 0b01 	add.w	fp, r6, #1
 801a206:	f10e 0401 	add.w	r4, lr, #1
 801a20a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a20e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a212:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a216:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a21a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a21e:	4327      	orrs	r7, r4
 801a220:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a224:	4401      	add	r1, r0
 801a226:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a228:	ea47 070b 	orr.w	r7, r7, fp
 801a22c:	f829 7b02 	strh.w	r7, [r9], #2
 801a230:	4402      	add	r2, r0
 801a232:	f108 38ff 	add.w	r8, r8, #4294967295
 801a236:	e7af      	b.n	801a198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a238:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a23c:	f04f 0e00 	mov.w	lr, #0
 801a240:	eb03 040e 	add.w	r4, r3, lr
 801a244:	2c00      	cmp	r4, #0
 801a246:	dc43      	bgt.n	801a2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a248:	9a00      	ldr	r2, [sp, #0]
 801a24a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a24e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a252:	9300      	str	r3, [sp, #0]
 801a254:	9b02      	ldr	r3, [sp, #8]
 801a256:	2b00      	cmp	r3, #0
 801a258:	f340 8098 	ble.w	801a38c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a25c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a260:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a264:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a268:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a26a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a26e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a272:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a276:	eef0 6a62 	vmov.f32	s13, s5
 801a27a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a27e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a282:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a286:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a28a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a28e:	eef0 6a43 	vmov.f32	s13, s6
 801a292:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a296:	ee12 2a90 	vmov	r2, s5
 801a29a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a29e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2a2:	ee13 2a10 	vmov	r2, s6
 801a2a6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a2a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2ae:	9314      	str	r3, [sp, #80]	; 0x50
 801a2b0:	9b02      	ldr	r3, [sp, #8]
 801a2b2:	9a05      	ldr	r2, [sp, #20]
 801a2b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2b8:	3b01      	subs	r3, #1
 801a2ba:	9302      	str	r3, [sp, #8]
 801a2bc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a2c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2c2:	eeb0 3a67 	vmov.f32	s6, s15
 801a2c6:	bf08      	it	eq
 801a2c8:	4613      	moveq	r3, r2
 801a2ca:	eef0 2a47 	vmov.f32	s5, s14
 801a2ce:	e72a      	b.n	801a126 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a2d0:	140f      	asrs	r7, r1, #16
 801a2d2:	d454      	bmi.n	801a37e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a2d4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a2d8:	42be      	cmp	r6, r7
 801a2da:	dd50      	ble.n	801a37e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a2dc:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a2e0:	d44d      	bmi.n	801a37e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a2e2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a2e6:	4544      	cmp	r4, r8
 801a2e8:	dd49      	ble.n	801a37e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a2ea:	9c04      	ldr	r4, [sp, #16]
 801a2ec:	b236      	sxth	r6, r6
 801a2ee:	fb08 4606 	mla	r6, r8, r6, r4
 801a2f2:	f06f 0001 	mvn.w	r0, #1
 801a2f6:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a2fa:	9c01      	ldr	r4, [sp, #4]
 801a2fc:	fb00 fa0e 	mul.w	sl, r0, lr
 801a300:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a304:	9800      	ldr	r0, [sp, #0]
 801a306:	eb04 0b08 	add.w	fp, r4, r8
 801a30a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a30e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a312:	9801      	ldr	r0, [sp, #4]
 801a314:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a318:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a31c:	9800      	ldr	r0, [sp, #0]
 801a31e:	1227      	asrs	r7, r4, #8
 801a320:	fb16 f609 	smulbb	r6, r6, r9
 801a324:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a328:	fb07 6705 	mla	r7, r7, r5, r6
 801a32c:	10e6      	asrs	r6, r4, #3
 801a32e:	00e4      	lsls	r4, r4, #3
 801a330:	b2e4      	uxtb	r4, r4
 801a332:	fb1b fb09 	smulbb	fp, fp, r9
 801a336:	fb14 f405 	smulbb	r4, r4, r5
 801a33a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a33e:	b2bf      	uxth	r7, r7
 801a340:	fb06 b605 	mla	r6, r6, r5, fp
 801a344:	fb08 4809 	mla	r8, r8, r9, r4
 801a348:	b2b6      	uxth	r6, r6
 801a34a:	fa1f f888 	uxth.w	r8, r8
 801a34e:	1c7c      	adds	r4, r7, #1
 801a350:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a354:	f106 0b01 	add.w	fp, r6, #1
 801a358:	f108 0401 	add.w	r4, r8, #1
 801a35c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a360:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a364:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a368:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a36c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a370:	4327      	orrs	r7, r4
 801a372:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a376:	ea47 070b 	orr.w	r7, r7, fp
 801a37a:	f820 700a 	strh.w	r7, [r0, sl]
 801a37e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a380:	4401      	add	r1, r0
 801a382:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a384:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a388:	4402      	add	r2, r0
 801a38a:	e759      	b.n	801a240 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a38c:	b007      	add	sp, #28
 801a38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a398:	b085      	sub	sp, #20
 801a39a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a39e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a3a0:	9203      	str	r2, [sp, #12]
 801a3a2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a3a6:	6870      	ldr	r0, [r6, #4]
 801a3a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a3aa:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a3ae:	686f      	ldr	r7, [r5, #4]
 801a3b0:	9101      	str	r1, [sp, #4]
 801a3b2:	fb00 2404 	mla	r4, r0, r4, r2
 801a3b6:	6832      	ldr	r2, [r6, #0]
 801a3b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a3bc:	682a      	ldr	r2, [r5, #0]
 801a3be:	9202      	str	r2, [sp, #8]
 801a3c0:	3704      	adds	r7, #4
 801a3c2:	9a01      	ldr	r2, [sp, #4]
 801a3c4:	2a00      	cmp	r2, #0
 801a3c6:	dc03      	bgt.n	801a3d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a3c8:	9a03      	ldr	r2, [sp, #12]
 801a3ca:	2a00      	cmp	r2, #0
 801a3cc:	f340 80cc 	ble.w	801a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a3d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a3d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a3d6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a3da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a3de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a3e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a3e4:	2b00      	cmp	r3, #0
 801a3e6:	dd0d      	ble.n	801a404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a3e8:	1406      	asrs	r6, r0, #16
 801a3ea:	d405      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a3ec:	454e      	cmp	r6, r9
 801a3ee:	da03      	bge.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a3f0:	1416      	asrs	r6, r2, #16
 801a3f2:	d401      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a3f4:	4546      	cmp	r6, r8
 801a3f6:	db06      	blt.n	801a406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a3f8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a3fa:	4460      	add	r0, ip
 801a3fc:	4432      	add	r2, r6
 801a3fe:	3b01      	subs	r3, #1
 801a400:	3402      	adds	r4, #2
 801a402:	e7ef      	b.n	801a3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a404:	d00f      	beq.n	801a426 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a406:	1e5e      	subs	r6, r3, #1
 801a408:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a40c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a410:	d543      	bpl.n	801a49a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a412:	4698      	mov	r8, r3
 801a414:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a418:	f1b8 0f00 	cmp.w	r8, #0
 801a41c:	dc71      	bgt.n	801a502 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a41e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a422:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a426:	9b01      	ldr	r3, [sp, #4]
 801a428:	2b00      	cmp	r3, #0
 801a42a:	f340 809d 	ble.w	801a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a42e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a432:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a436:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a43a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a43c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a440:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a444:	eeb0 6a62 	vmov.f32	s12, s5
 801a448:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a44c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a450:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a454:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a458:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a45c:	eeb0 6a43 	vmov.f32	s12, s6
 801a460:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a464:	ee12 2a90 	vmov	r2, s5
 801a468:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a46c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a470:	ee13 2a10 	vmov	r2, s6
 801a474:	fb92 f3f3 	sdiv	r3, r2, r3
 801a478:	9312      	str	r3, [sp, #72]	; 0x48
 801a47a:	9b01      	ldr	r3, [sp, #4]
 801a47c:	9a03      	ldr	r2, [sp, #12]
 801a47e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a482:	3b01      	subs	r3, #1
 801a484:	9301      	str	r3, [sp, #4]
 801a486:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a48a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a48c:	eeb0 3a67 	vmov.f32	s6, s15
 801a490:	bf08      	it	eq
 801a492:	4613      	moveq	r3, r2
 801a494:	eef0 2a47 	vmov.f32	s5, s14
 801a498:	e793      	b.n	801a3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a49a:	45ce      	cmp	lr, r9
 801a49c:	dab9      	bge.n	801a412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a49e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a4a0:	fb01 2606 	mla	r6, r1, r6, r2
 801a4a4:	1436      	asrs	r6, r6, #16
 801a4a6:	d4b4      	bmi.n	801a412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4a8:	4546      	cmp	r6, r8
 801a4aa:	dab2      	bge.n	801a412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4ac:	4698      	mov	r8, r3
 801a4ae:	46a2      	mov	sl, r4
 801a4b0:	f1b8 0f00 	cmp.w	r8, #0
 801a4b4:	ddb3      	ble.n	801a41e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a4b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a4ba:	9902      	ldr	r1, [sp, #8]
 801a4bc:	1416      	asrs	r6, r2, #16
 801a4be:	fb09 1606 	mla	r6, r9, r6, r1
 801a4c2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a4c6:	492a      	ldr	r1, [pc, #168]	; (801a570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a4c8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a4cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a4d0:	eb07 0b0e 	add.w	fp, r7, lr
 801a4d4:	4460      	add	r0, ip
 801a4d6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a4da:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a4de:	00f6      	lsls	r6, r6, #3
 801a4e0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a4e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a4e8:	ea49 0606 	orr.w	r6, r9, r6
 801a4ec:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a4f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a4f2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a4f6:	f82a 6b02 	strh.w	r6, [sl], #2
 801a4fa:	440a      	add	r2, r1
 801a4fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801a500:	e7d6      	b.n	801a4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a502:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a506:	d429      	bmi.n	801a55c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a508:	68ae      	ldr	r6, [r5, #8]
 801a50a:	454e      	cmp	r6, r9
 801a50c:	dd26      	ble.n	801a55c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a50e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a512:	d423      	bmi.n	801a55c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a514:	68e9      	ldr	r1, [r5, #12]
 801a516:	4559      	cmp	r1, fp
 801a518:	dd20      	ble.n	801a55c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a51a:	9902      	ldr	r1, [sp, #8]
 801a51c:	fa0f fe86 	sxth.w	lr, r6
 801a520:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a524:	f06f 0101 	mvn.w	r1, #1
 801a528:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a52c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a530:	eb07 060e 	add.w	r6, r7, lr
 801a534:	fb01 f908 	mul.w	r9, r1, r8
 801a538:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a53c:	7876      	ldrb	r6, [r6, #1]
 801a53e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a542:	00f6      	lsls	r6, r6, #3
 801a544:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a548:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a54c:	ea4b 0606 	orr.w	r6, fp, r6
 801a550:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a554:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a558:	f82a 6009 	strh.w	r6, [sl, r9]
 801a55c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a55e:	4460      	add	r0, ip
 801a560:	440a      	add	r2, r1
 801a562:	f108 38ff 	add.w	r8, r8, #4294967295
 801a566:	e757      	b.n	801a418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a568:	b005      	add	sp, #20
 801a56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a56e:	bf00      	nop
 801a570:	fffff800 	.word	0xfffff800

0801a574 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a578:	b087      	sub	sp, #28
 801a57a:	468b      	mov	fp, r1
 801a57c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a57e:	9204      	str	r2, [sp, #16]
 801a580:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a584:	9205      	str	r2, [sp, #20]
 801a586:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a58a:	6841      	ldr	r1, [r0, #4]
 801a58c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a590:	fb01 2404 	mla	r4, r1, r4, r2
 801a594:	6802      	ldr	r2, [r0, #0]
 801a596:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a59a:	f8dc 2000 	ldr.w	r2, [ip]
 801a59e:	9201      	str	r2, [sp, #4]
 801a5a0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a5a4:	3204      	adds	r2, #4
 801a5a6:	9202      	str	r2, [sp, #8]
 801a5a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a5ac:	f1bb 0f00 	cmp.w	fp, #0
 801a5b0:	dc03      	bgt.n	801a5ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a5b2:	9a04      	ldr	r2, [sp, #16]
 801a5b4:	2a00      	cmp	r2, #0
 801a5b6:	f340 8138 	ble.w	801a82a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a5ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a5bc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a5c0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a5c4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a5c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a5ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a5ce:	2b00      	cmp	r3, #0
 801a5d0:	dd0e      	ble.n	801a5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a5d2:	1402      	asrs	r2, r0, #16
 801a5d4:	d405      	bmi.n	801a5e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5d6:	42ba      	cmp	r2, r7
 801a5d8:	da03      	bge.n	801a5e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5da:	140a      	asrs	r2, r1, #16
 801a5dc:	d401      	bmi.n	801a5e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5de:	42b2      	cmp	r2, r6
 801a5e0:	db07      	blt.n	801a5f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a5e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5e4:	4410      	add	r0, r2
 801a5e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5e8:	3b01      	subs	r3, #1
 801a5ea:	4411      	add	r1, r2
 801a5ec:	3402      	adds	r4, #2
 801a5ee:	e7ee      	b.n	801a5ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a5f0:	d019      	beq.n	801a626 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a5f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a5f4:	1e5a      	subs	r2, r3, #1
 801a5f6:	fb05 0502 	mla	r5, r5, r2, r0
 801a5fa:	142d      	asrs	r5, r5, #16
 801a5fc:	d409      	bmi.n	801a612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a5fe:	42bd      	cmp	r5, r7
 801a600:	da07      	bge.n	801a612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a602:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a604:	fb05 1202 	mla	r2, r5, r2, r1
 801a608:	1412      	asrs	r2, r2, #16
 801a60a:	d402      	bmi.n	801a612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a60c:	42b2      	cmp	r2, r6
 801a60e:	f2c0 80ac 	blt.w	801a76a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a612:	f04f 0e00 	mov.w	lr, #0
 801a616:	eb03 020e 	add.w	r2, r3, lr
 801a61a:	2a00      	cmp	r2, #0
 801a61c:	dc3e      	bgt.n	801a69c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a61e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a622:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a626:	f1bb 0f00 	cmp.w	fp, #0
 801a62a:	f340 80fe 	ble.w	801a82a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a62e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a632:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a636:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a63a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a63c:	f1bb 0b01 	subs.w	fp, fp, #1
 801a640:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a644:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a648:	eeb0 6a62 	vmov.f32	s12, s5
 801a64c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a650:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a654:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a658:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a65c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a660:	eeb0 6a43 	vmov.f32	s12, s6
 801a664:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a668:	ee12 2a90 	vmov	r2, s5
 801a66c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a670:	fb92 f3f3 	sdiv	r3, r2, r3
 801a674:	ee13 2a10 	vmov	r2, s6
 801a678:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a67c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a67e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a680:	fb92 f3f3 	sdiv	r3, r2, r3
 801a684:	9a04      	ldr	r2, [sp, #16]
 801a686:	9314      	str	r3, [sp, #80]	; 0x50
 801a688:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a68c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a68e:	eeb0 3a67 	vmov.f32	s6, s15
 801a692:	bf08      	it	eq
 801a694:	4613      	moveq	r3, r2
 801a696:	eef0 2a47 	vmov.f32	s5, s14
 801a69a:	e787      	b.n	801a5ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a69c:	1406      	asrs	r6, r0, #16
 801a69e:	d45d      	bmi.n	801a75c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a6a0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a6a4:	42b5      	cmp	r5, r6
 801a6a6:	dd59      	ble.n	801a75c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a6a8:	140f      	asrs	r7, r1, #16
 801a6aa:	d457      	bmi.n	801a75c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a6ac:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a6b0:	42ba      	cmp	r2, r7
 801a6b2:	dd53      	ble.n	801a75c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a6b4:	9a01      	ldr	r2, [sp, #4]
 801a6b6:	b22d      	sxth	r5, r5
 801a6b8:	fb07 2505 	mla	r5, r7, r5, r2
 801a6bc:	5daa      	ldrb	r2, [r5, r6]
 801a6be:	9d02      	ldr	r5, [sp, #8]
 801a6c0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a6c4:	0e2e      	lsrs	r6, r5, #24
 801a6c6:	d049      	beq.n	801a75c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a6c8:	f06f 0201 	mvn.w	r2, #1
 801a6cc:	fb02 f20e 	mul.w	r2, r2, lr
 801a6d0:	9203      	str	r2, [sp, #12]
 801a6d2:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a6d6:	9a05      	ldr	r2, [sp, #20]
 801a6d8:	4356      	muls	r6, r2
 801a6da:	1c72      	adds	r2, r6, #1
 801a6dc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a6e0:	1212      	asrs	r2, r2, #8
 801a6e2:	fa1f f982 	uxth.w	r9, r2
 801a6e6:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a6ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a6ee:	43d2      	mvns	r2, r2
 801a6f0:	b2d2      	uxtb	r2, r2
 801a6f2:	fb16 f609 	smulbb	r6, r6, r9
 801a6f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6fa:	fb07 6702 	mla	r7, r7, r2, r6
 801a6fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a702:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a706:	b2ed      	uxtb	r5, r5
 801a708:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a70c:	fa5f f888 	uxtb.w	r8, r8
 801a710:	fb15 f509 	smulbb	r5, r5, r9
 801a714:	fb08 5502 	mla	r5, r8, r2, r5
 801a718:	b2bf      	uxth	r7, r7
 801a71a:	fb1a fa09 	smulbb	sl, sl, r9
 801a71e:	b2ad      	uxth	r5, r5
 801a720:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a724:	fb06 a602 	mla	r6, r6, r2, sl
 801a728:	1c7a      	adds	r2, r7, #1
 801a72a:	f105 0a01 	add.w	sl, r5, #1
 801a72e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a732:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a736:	b2b6      	uxth	r6, r6
 801a738:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a73c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a740:	ea4a 0707 	orr.w	r7, sl, r7
 801a744:	f106 0a01 	add.w	sl, r6, #1
 801a748:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a74c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a750:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a754:	9a03      	ldr	r2, [sp, #12]
 801a756:	ea47 070a 	orr.w	r7, r7, sl
 801a75a:	52a7      	strh	r7, [r4, r2]
 801a75c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a75e:	4410      	add	r0, r2
 801a760:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a762:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a766:	4411      	add	r1, r2
 801a768:	e755      	b.n	801a616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a76a:	f04f 0800 	mov.w	r8, #0
 801a76e:	eba3 0208 	sub.w	r2, r3, r8
 801a772:	2a00      	cmp	r2, #0
 801a774:	f77f af53 	ble.w	801a61e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a778:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a77c:	9f01      	ldr	r7, [sp, #4]
 801a77e:	140a      	asrs	r2, r1, #16
 801a780:	1405      	asrs	r5, r0, #16
 801a782:	fb06 7202 	mla	r2, r6, r2, r7
 801a786:	5d52      	ldrb	r2, [r2, r5]
 801a788:	9d02      	ldr	r5, [sp, #8]
 801a78a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a78e:	0e2e      	lsrs	r6, r5, #24
 801a790:	d044      	beq.n	801a81c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a792:	9a05      	ldr	r2, [sp, #20]
 801a794:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a798:	4356      	muls	r6, r2
 801a79a:	1c72      	adds	r2, r6, #1
 801a79c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a7a0:	1212      	asrs	r2, r2, #8
 801a7a2:	fa1f f982 	uxth.w	r9, r2
 801a7a6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a7aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a7ae:	43d2      	mvns	r2, r2
 801a7b0:	b2d2      	uxtb	r2, r2
 801a7b2:	fb16 f609 	smulbb	r6, r6, r9
 801a7b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a7ba:	fb07 6702 	mla	r7, r7, r2, r6
 801a7be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a7c2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a7c6:	b2ed      	uxtb	r5, r5
 801a7c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a7cc:	fa5f fe8e 	uxtb.w	lr, lr
 801a7d0:	fb15 f509 	smulbb	r5, r5, r9
 801a7d4:	fb0e 5502 	mla	r5, lr, r2, r5
 801a7d8:	b2bf      	uxth	r7, r7
 801a7da:	fb1a fa09 	smulbb	sl, sl, r9
 801a7de:	b2ad      	uxth	r5, r5
 801a7e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a7e4:	fb06 a602 	mla	r6, r6, r2, sl
 801a7e8:	1c7a      	adds	r2, r7, #1
 801a7ea:	f105 0a01 	add.w	sl, r5, #1
 801a7ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a7f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a7f6:	b2b6      	uxth	r6, r6
 801a7f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a800:	ea4a 0707 	orr.w	r7, sl, r7
 801a804:	f106 0a01 	add.w	sl, r6, #1
 801a808:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a80c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a810:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a814:	ea47 070a 	orr.w	r7, r7, sl
 801a818:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a81c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a81e:	4410      	add	r0, r2
 801a820:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a822:	f108 0801 	add.w	r8, r8, #1
 801a826:	4411      	add	r1, r2
 801a828:	e7a1      	b.n	801a76e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a82a:	b007      	add	sp, #28
 801a82c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a830 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a834:	b085      	sub	sp, #20
 801a836:	468b      	mov	fp, r1
 801a838:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a83a:	9203      	str	r2, [sp, #12]
 801a83c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a840:	6841      	ldr	r1, [r0, #4]
 801a842:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a846:	fb01 2404 	mla	r4, r1, r4, r2
 801a84a:	6802      	ldr	r2, [r0, #0]
 801a84c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a850:	f8de 2000 	ldr.w	r2, [lr]
 801a854:	9200      	str	r2, [sp, #0]
 801a856:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a85a:	3204      	adds	r2, #4
 801a85c:	9201      	str	r2, [sp, #4]
 801a85e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a862:	f1bb 0f00 	cmp.w	fp, #0
 801a866:	dc03      	bgt.n	801a870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a868:	9a03      	ldr	r2, [sp, #12]
 801a86a:	2a00      	cmp	r2, #0
 801a86c:	f340 8153 	ble.w	801ab16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a870:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a872:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a876:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a87a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a87e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a880:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a884:	2b00      	cmp	r3, #0
 801a886:	dd0e      	ble.n	801a8a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a888:	1408      	asrs	r0, r1, #16
 801a88a:	d405      	bmi.n	801a898 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a88c:	42b8      	cmp	r0, r7
 801a88e:	da03      	bge.n	801a898 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a890:	1410      	asrs	r0, r2, #16
 801a892:	d401      	bmi.n	801a898 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a894:	42b0      	cmp	r0, r6
 801a896:	db07      	blt.n	801a8a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a898:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a89a:	4401      	add	r1, r0
 801a89c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a89e:	3b01      	subs	r3, #1
 801a8a0:	4402      	add	r2, r0
 801a8a2:	3402      	adds	r4, #2
 801a8a4:	e7ee      	b.n	801a884 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a8a6:	d017      	beq.n	801a8d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a8a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a8aa:	1e58      	subs	r0, r3, #1
 801a8ac:	fb05 1500 	mla	r5, r5, r0, r1
 801a8b0:	142d      	asrs	r5, r5, #16
 801a8b2:	d409      	bmi.n	801a8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8b4:	42bd      	cmp	r5, r7
 801a8b6:	da07      	bge.n	801a8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a8ba:	fb05 2000 	mla	r0, r5, r0, r2
 801a8be:	1400      	asrs	r0, r0, #16
 801a8c0:	d402      	bmi.n	801a8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8c2:	42b0      	cmp	r0, r6
 801a8c4:	f2c0 80bc 	blt.w	801aa40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a8c8:	2600      	movs	r6, #0
 801a8ca:	1998      	adds	r0, r3, r6
 801a8cc:	2800      	cmp	r0, #0
 801a8ce:	dc3e      	bgt.n	801a94e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a8d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a8d8:	f1bb 0f00 	cmp.w	fp, #0
 801a8dc:	f340 811b 	ble.w	801ab16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a8e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a8ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8ee:	f1bb 0b01 	subs.w	fp, fp, #1
 801a8f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8fa:	eeb0 6a62 	vmov.f32	s12, s5
 801a8fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a902:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a906:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a90a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a90e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a912:	eeb0 6a43 	vmov.f32	s12, s6
 801a916:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a91a:	ee12 2a90 	vmov	r2, s5
 801a91e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a922:	fb92 f3f3 	sdiv	r3, r2, r3
 801a926:	ee13 2a10 	vmov	r2, s6
 801a92a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a92e:	9311      	str	r3, [sp, #68]	; 0x44
 801a930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a932:	fb92 f3f3 	sdiv	r3, r2, r3
 801a936:	9a03      	ldr	r2, [sp, #12]
 801a938:	9312      	str	r3, [sp, #72]	; 0x48
 801a93a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a93e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a940:	eeb0 3a67 	vmov.f32	s6, s15
 801a944:	bf08      	it	eq
 801a946:	4613      	moveq	r3, r2
 801a948:	eef0 2a47 	vmov.f32	s5, s14
 801a94c:	e789      	b.n	801a862 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a94e:	140f      	asrs	r7, r1, #16
 801a950:	d426      	bmi.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a952:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a956:	42bd      	cmp	r5, r7
 801a958:	dd22      	ble.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a95a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a95e:	d41f      	bmi.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a960:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a964:	4560      	cmp	r0, ip
 801a966:	dd1b      	ble.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a968:	9800      	ldr	r0, [sp, #0]
 801a96a:	b22d      	sxth	r5, r5
 801a96c:	fb0c 0505 	mla	r5, ip, r5, r0
 801a970:	5de8      	ldrb	r0, [r5, r7]
 801a972:	9d01      	ldr	r5, [sp, #4]
 801a974:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a978:	0e07      	lsrs	r7, r0, #24
 801a97a:	2fff      	cmp	r7, #255	; 0xff
 801a97c:	d116      	bne.n	801a9ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a97e:	f06f 0501 	mvn.w	r5, #1
 801a982:	fb05 f706 	mul.w	r7, r5, r6
 801a986:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a98a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a98e:	0945      	lsrs	r5, r0, #5
 801a990:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a994:	ea4c 0505 	orr.w	r5, ip, r5
 801a998:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a99c:	4305      	orrs	r5, r0
 801a99e:	53e5      	strh	r5, [r4, r7]
 801a9a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a9a2:	4401      	add	r1, r0
 801a9a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a9a6:	3e01      	subs	r6, #1
 801a9a8:	4402      	add	r2, r0
 801a9aa:	e78e      	b.n	801a8ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a9ac:	b2fd      	uxtb	r5, r7
 801a9ae:	2f00      	cmp	r7, #0
 801a9b0:	d0f6      	beq.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a9b2:	f06f 0701 	mvn.w	r7, #1
 801a9b6:	4377      	muls	r7, r6
 801a9b8:	fa1f f985 	uxth.w	r9, r5
 801a9bc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a9c0:	9702      	str	r7, [sp, #8]
 801a9c2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a9c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a9ca:	43ed      	mvns	r5, r5
 801a9cc:	b2ed      	uxtb	r5, r5
 801a9ce:	fb17 f709 	smulbb	r7, r7, r9
 801a9d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9d6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a9da:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a9de:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a9e2:	b2c0      	uxtb	r0, r0
 801a9e4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a9e8:	fa5f f888 	uxtb.w	r8, r8
 801a9ec:	fb10 f009 	smulbb	r0, r0, r9
 801a9f0:	fb08 0005 	mla	r0, r8, r5, r0
 801a9f4:	b280      	uxth	r0, r0
 801a9f6:	fa1f fc8c 	uxth.w	ip, ip
 801a9fa:	fb1a fa09 	smulbb	sl, sl, r9
 801a9fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aa02:	fb07 a705 	mla	r7, r7, r5, sl
 801aa06:	f100 0a01 	add.w	sl, r0, #1
 801aa0a:	f10c 0501 	add.w	r5, ip, #1
 801aa0e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801aa12:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aa16:	b2bf      	uxth	r7, r7
 801aa18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aa20:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aa24:	f107 0a01 	add.w	sl, r7, #1
 801aa28:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801aa2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa34:	9802      	ldr	r0, [sp, #8]
 801aa36:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aa3a:	f824 c000 	strh.w	ip, [r4, r0]
 801aa3e:	e7af      	b.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801aa40:	f04f 0800 	mov.w	r8, #0
 801aa44:	eba3 0008 	sub.w	r0, r3, r8
 801aa48:	2800      	cmp	r0, #0
 801aa4a:	f77f af41 	ble.w	801a8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa4e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801aa52:	9f00      	ldr	r7, [sp, #0]
 801aa54:	1410      	asrs	r0, r2, #16
 801aa56:	140d      	asrs	r5, r1, #16
 801aa58:	fb06 7000 	mla	r0, r6, r0, r7
 801aa5c:	5d40      	ldrb	r0, [r0, r5]
 801aa5e:	9d01      	ldr	r5, [sp, #4]
 801aa60:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801aa64:	0e2e      	lsrs	r6, r5, #24
 801aa66:	2eff      	cmp	r6, #255	; 0xff
 801aa68:	d112      	bne.n	801aa90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801aa6a:	482c      	ldr	r0, [pc, #176]	; (801ab1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801aa6c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801aa70:	0968      	lsrs	r0, r5, #5
 801aa72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aa76:	4330      	orrs	r0, r6
 801aa78:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aa7c:	4328      	orrs	r0, r5
 801aa7e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801aa82:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aa84:	4401      	add	r1, r0
 801aa86:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aa88:	f108 0801 	add.w	r8, r8, #1
 801aa8c:	4402      	add	r2, r0
 801aa8e:	e7d9      	b.n	801aa44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa90:	b2f0      	uxtb	r0, r6
 801aa92:	2e00      	cmp	r6, #0
 801aa94:	d0f5      	beq.n	801aa82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aa96:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801aa9a:	fa1f f980 	uxth.w	r9, r0
 801aa9e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801aaa2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801aaa6:	43c0      	mvns	r0, r0
 801aaa8:	b2c0      	uxtb	r0, r0
 801aaaa:	fb16 f609 	smulbb	r6, r6, r9
 801aaae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aab2:	fb07 6700 	mla	r7, r7, r0, r6
 801aab6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801aaba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801aabe:	b2ed      	uxtb	r5, r5
 801aac0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aac4:	fa5f fc8c 	uxtb.w	ip, ip
 801aac8:	fb15 f509 	smulbb	r5, r5, r9
 801aacc:	fb0c 5500 	mla	r5, ip, r0, r5
 801aad0:	b2bf      	uxth	r7, r7
 801aad2:	fb1a fa09 	smulbb	sl, sl, r9
 801aad6:	b2ad      	uxth	r5, r5
 801aad8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aadc:	fb06 a600 	mla	r6, r6, r0, sl
 801aae0:	1c78      	adds	r0, r7, #1
 801aae2:	f105 0a01 	add.w	sl, r5, #1
 801aae6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801aaea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aaee:	b2b6      	uxth	r6, r6
 801aaf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aaf4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aaf8:	ea4a 0707 	orr.w	r7, sl, r7
 801aafc:	f106 0a01 	add.w	sl, r6, #1
 801ab00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab0c:	ea47 070a 	orr.w	r7, r7, sl
 801ab10:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801ab14:	e7b5      	b.n	801aa82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ab16:	b005      	add	sp, #20
 801ab18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab1c:	fffff800 	.word	0xfffff800

0801ab20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab24:	b087      	sub	sp, #28
 801ab26:	468b      	mov	fp, r1
 801ab28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ab2a:	9204      	str	r2, [sp, #16]
 801ab2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ab30:	9205      	str	r2, [sp, #20]
 801ab32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801ab36:	6861      	ldr	r1, [r4, #4]
 801ab38:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801ab3c:	fb01 2000 	mla	r0, r1, r0, r2
 801ab40:	6822      	ldr	r2, [r4, #0]
 801ab42:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ab46:	f8de 2000 	ldr.w	r2, [lr]
 801ab4a:	9201      	str	r2, [sp, #4]
 801ab4c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ab50:	9202      	str	r2, [sp, #8]
 801ab52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab56:	f1bb 0f00 	cmp.w	fp, #0
 801ab5a:	dc03      	bgt.n	801ab64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801ab5c:	9a04      	ldr	r2, [sp, #16]
 801ab5e:	2a00      	cmp	r2, #0
 801ab60:	f340 8142 	ble.w	801ade8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ab64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ab66:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ab6a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ab6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ab74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab78:	2b00      	cmp	r3, #0
 801ab7a:	dd0e      	ble.n	801ab9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ab7c:	140c      	asrs	r4, r1, #16
 801ab7e:	d405      	bmi.n	801ab8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab80:	42bc      	cmp	r4, r7
 801ab82:	da03      	bge.n	801ab8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab84:	1414      	asrs	r4, r2, #16
 801ab86:	d401      	bmi.n	801ab8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab88:	42b4      	cmp	r4, r6
 801ab8a:	db07      	blt.n	801ab9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab8e:	4421      	add	r1, r4
 801ab90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ab92:	3b01      	subs	r3, #1
 801ab94:	4422      	add	r2, r4
 801ab96:	3002      	adds	r0, #2
 801ab98:	e7ee      	b.n	801ab78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ab9a:	d019      	beq.n	801abd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ab9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ab9e:	1e5c      	subs	r4, r3, #1
 801aba0:	fb05 1504 	mla	r5, r5, r4, r1
 801aba4:	142d      	asrs	r5, r5, #16
 801aba6:	d409      	bmi.n	801abbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aba8:	42bd      	cmp	r5, r7
 801abaa:	da07      	bge.n	801abbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801abae:	fb05 2404 	mla	r4, r5, r4, r2
 801abb2:	1424      	asrs	r4, r4, #16
 801abb4:	d402      	bmi.n	801abbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abb6:	42b4      	cmp	r4, r6
 801abb8:	f2c0 80b1 	blt.w	801ad1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801abbc:	f04f 0800 	mov.w	r8, #0
 801abc0:	eb03 0408 	add.w	r4, r3, r8
 801abc4:	2c00      	cmp	r4, #0
 801abc6:	dc3e      	bgt.n	801ac46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801abc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801abcc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801abd0:	f1bb 0f00 	cmp.w	fp, #0
 801abd4:	f340 8108 	ble.w	801ade8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801abd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abe0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801abe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abe6:	f1bb 0b01 	subs.w	fp, fp, #1
 801abea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abf2:	eeb0 6a62 	vmov.f32	s12, s5
 801abf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac02:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ac06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac0a:	eeb0 6a43 	vmov.f32	s12, s6
 801ac0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac12:	ee12 2a90 	vmov	r2, s5
 801ac16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac1e:	ee13 2a10 	vmov	r2, s6
 801ac22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac26:	9313      	str	r3, [sp, #76]	; 0x4c
 801ac28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac2e:	9a04      	ldr	r2, [sp, #16]
 801ac30:	9314      	str	r3, [sp, #80]	; 0x50
 801ac32:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ac36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac38:	eeb0 3a67 	vmov.f32	s6, s15
 801ac3c:	bf08      	it	eq
 801ac3e:	4613      	moveq	r3, r2
 801ac40:	eef0 2a47 	vmov.f32	s5, s14
 801ac44:	e787      	b.n	801ab56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ac46:	140e      	asrs	r6, r1, #16
 801ac48:	d462      	bmi.n	801ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ac4e:	42b5      	cmp	r5, r6
 801ac50:	dd5e      	ble.n	801ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac52:	1417      	asrs	r7, r2, #16
 801ac54:	d45c      	bmi.n	801ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac56:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ac5a:	42bc      	cmp	r4, r7
 801ac5c:	dd58      	ble.n	801ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac5e:	b22d      	sxth	r5, r5
 801ac60:	fb07 6505 	mla	r5, r7, r5, r6
 801ac64:	9c02      	ldr	r4, [sp, #8]
 801ac66:	5d66      	ldrb	r6, [r4, r5]
 801ac68:	2e00      	cmp	r6, #0
 801ac6a:	d051      	beq.n	801ad10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac6c:	9c01      	ldr	r4, [sp, #4]
 801ac6e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ac72:	f06f 0401 	mvn.w	r4, #1
 801ac76:	fb04 f408 	mul.w	r4, r4, r8
 801ac7a:	9403      	str	r4, [sp, #12]
 801ac7c:	5b05      	ldrh	r5, [r0, r4]
 801ac7e:	9c05      	ldr	r4, [sp, #20]
 801ac80:	4366      	muls	r6, r4
 801ac82:	1c74      	adds	r4, r6, #1
 801ac84:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ac88:	1224      	asrs	r4, r4, #8
 801ac8a:	b2a7      	uxth	r7, r4
 801ac8c:	122e      	asrs	r6, r5, #8
 801ac8e:	43e4      	mvns	r4, r4
 801ac90:	b2e4      	uxtb	r4, r4
 801ac92:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801ac96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac9a:	fb16 f604 	smulbb	r6, r6, r4
 801ac9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aca2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aca6:	00ed      	lsls	r5, r5, #3
 801aca8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801acac:	b2ed      	uxtb	r5, r5
 801acae:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801acb2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801acb6:	fb15 f504 	smulbb	r5, r5, r4
 801acba:	fa5f f989 	uxtb.w	r9, r9
 801acbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801acc2:	fb09 5507 	mla	r5, r9, r7, r5
 801acc6:	fb1a fa04 	smulbb	sl, sl, r4
 801acca:	fa1f fc8c 	uxth.w	ip, ip
 801acce:	b2ad      	uxth	r5, r5
 801acd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801acd4:	fb06 a607 	mla	r6, r6, r7, sl
 801acd8:	f10c 0401 	add.w	r4, ip, #1
 801acdc:	f105 0a01 	add.w	sl, r5, #1
 801ace0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ace4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ace8:	b2b6      	uxth	r6, r6
 801acea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801acf2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801acf6:	f106 0a01 	add.w	sl, r6, #1
 801acfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801acfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad06:	9c03      	ldr	r4, [sp, #12]
 801ad08:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ad0c:	f820 c004 	strh.w	ip, [r0, r4]
 801ad10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad12:	4421      	add	r1, r4
 801ad14:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad16:	f108 38ff 	add.w	r8, r8, #4294967295
 801ad1a:	4422      	add	r2, r4
 801ad1c:	e750      	b.n	801abc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ad1e:	f04f 0900 	mov.w	r9, #0
 801ad22:	eba3 0409 	sub.w	r4, r3, r9
 801ad26:	2c00      	cmp	r4, #0
 801ad28:	f77f af4e 	ble.w	801abc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ad2c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ad30:	140d      	asrs	r5, r1, #16
 801ad32:	1414      	asrs	r4, r2, #16
 801ad34:	fb06 5404 	mla	r4, r6, r4, r5
 801ad38:	9d02      	ldr	r5, [sp, #8]
 801ad3a:	5d2e      	ldrb	r6, [r5, r4]
 801ad3c:	2e00      	cmp	r6, #0
 801ad3e:	d04c      	beq.n	801adda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ad40:	9d01      	ldr	r5, [sp, #4]
 801ad42:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ad46:	9c05      	ldr	r4, [sp, #20]
 801ad48:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ad4c:	4366      	muls	r6, r4
 801ad4e:	1c74      	adds	r4, r6, #1
 801ad50:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ad54:	1224      	asrs	r4, r4, #8
 801ad56:	b2a7      	uxth	r7, r4
 801ad58:	122e      	asrs	r6, r5, #8
 801ad5a:	43e4      	mvns	r4, r4
 801ad5c:	b2e4      	uxtb	r4, r4
 801ad5e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ad62:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ad66:	fb16 f604 	smulbb	r6, r6, r4
 801ad6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad72:	00ed      	lsls	r5, r5, #3
 801ad74:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ad78:	b2ed      	uxtb	r5, r5
 801ad7a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ad7e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ad82:	fb15 f504 	smulbb	r5, r5, r4
 801ad86:	fa5f f888 	uxtb.w	r8, r8
 801ad8a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad8e:	fb08 5507 	mla	r5, r8, r7, r5
 801ad92:	fb1a fa04 	smulbb	sl, sl, r4
 801ad96:	fa1f fc8c 	uxth.w	ip, ip
 801ad9a:	b2ad      	uxth	r5, r5
 801ad9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ada0:	fb06 a607 	mla	r6, r6, r7, sl
 801ada4:	f10c 0401 	add.w	r4, ip, #1
 801ada8:	f105 0a01 	add.w	sl, r5, #1
 801adac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801adb0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801adb4:	b2b6      	uxth	r6, r6
 801adb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801adba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801adbe:	ea4a 0c0c 	orr.w	ip, sl, ip
 801adc2:	f106 0a01 	add.w	sl, r6, #1
 801adc6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801adca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801adce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801add2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801add6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801adda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801addc:	4421      	add	r1, r4
 801adde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ade0:	f109 0901 	add.w	r9, r9, #1
 801ade4:	4422      	add	r2, r4
 801ade6:	e79c      	b.n	801ad22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ade8:	b007      	add	sp, #28
 801adea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801adee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801adee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adf2:	b085      	sub	sp, #20
 801adf4:	468b      	mov	fp, r1
 801adf6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adf8:	9203      	str	r2, [sp, #12]
 801adfa:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801adfe:	6861      	ldr	r1, [r4, #4]
 801ae00:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ae04:	fb01 2000 	mla	r0, r1, r0, r2
 801ae08:	6822      	ldr	r2, [r4, #0]
 801ae0a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ae0e:	f8d8 2000 	ldr.w	r2, [r8]
 801ae12:	9200      	str	r2, [sp, #0]
 801ae14:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ae18:	9201      	str	r2, [sp, #4]
 801ae1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae1e:	f1bb 0f00 	cmp.w	fp, #0
 801ae22:	dc03      	bgt.n	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ae24:	9a03      	ldr	r2, [sp, #12]
 801ae26:	2a00      	cmp	r2, #0
 801ae28:	f340 8146 	ble.w	801b0b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ae2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae2e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ae32:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ae36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ae3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae40:	2b00      	cmp	r3, #0
 801ae42:	dd0e      	ble.n	801ae62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ae44:	140c      	asrs	r4, r1, #16
 801ae46:	d405      	bmi.n	801ae54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae48:	42bc      	cmp	r4, r7
 801ae4a:	da03      	bge.n	801ae54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae4c:	1414      	asrs	r4, r2, #16
 801ae4e:	d401      	bmi.n	801ae54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae50:	42b4      	cmp	r4, r6
 801ae52:	db07      	blt.n	801ae64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ae54:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae56:	4421      	add	r1, r4
 801ae58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae5a:	3b01      	subs	r3, #1
 801ae5c:	4422      	add	r2, r4
 801ae5e:	3002      	adds	r0, #2
 801ae60:	e7ee      	b.n	801ae40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ae62:	d017      	beq.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ae64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae66:	1e5c      	subs	r4, r3, #1
 801ae68:	fb05 1504 	mla	r5, r5, r4, r1
 801ae6c:	142d      	asrs	r5, r5, #16
 801ae6e:	d409      	bmi.n	801ae84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae70:	42bd      	cmp	r5, r7
 801ae72:	da07      	bge.n	801ae84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ae76:	fb05 2404 	mla	r4, r5, r4, r2
 801ae7a:	1424      	asrs	r4, r4, #16
 801ae7c:	d402      	bmi.n	801ae84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae7e:	42b4      	cmp	r4, r6
 801ae80:	f2c0 80b3 	blt.w	801afea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ae84:	2600      	movs	r6, #0
 801ae86:	199c      	adds	r4, r3, r6
 801ae88:	2c00      	cmp	r4, #0
 801ae8a:	dc3e      	bgt.n	801af0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ae8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ae94:	f1bb 0f00 	cmp.w	fp, #0
 801ae98:	f340 810e 	ble.w	801b0b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ae9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aea0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aea4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aea8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aeaa:	f1bb 0b01 	subs.w	fp, fp, #1
 801aeae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aeb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aeb6:	eeb0 6a62 	vmov.f32	s12, s5
 801aeba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aebe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aec2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aec6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aeca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aece:	eeb0 6a43 	vmov.f32	s12, s6
 801aed2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aed6:	ee12 2a90 	vmov	r2, s5
 801aeda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aede:	fb92 f3f3 	sdiv	r3, r2, r3
 801aee2:	ee13 2a10 	vmov	r2, s6
 801aee6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aeea:	9311      	str	r3, [sp, #68]	; 0x44
 801aeec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aeee:	fb92 f3f3 	sdiv	r3, r2, r3
 801aef2:	9a03      	ldr	r2, [sp, #12]
 801aef4:	9312      	str	r3, [sp, #72]	; 0x48
 801aef6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aefa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aefc:	eeb0 3a67 	vmov.f32	s6, s15
 801af00:	bf08      	it	eq
 801af02:	4613      	moveq	r3, r2
 801af04:	eef0 2a47 	vmov.f32	s5, s14
 801af08:	e789      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801af0a:	140f      	asrs	r7, r1, #16
 801af0c:	d418      	bmi.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af0e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801af12:	42bd      	cmp	r5, r7
 801af14:	dd14      	ble.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af16:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801af1a:	d411      	bmi.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af1c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801af20:	4564      	cmp	r4, ip
 801af22:	dd0d      	ble.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af24:	b22d      	sxth	r5, r5
 801af26:	fb0c 7505 	mla	r5, ip, r5, r7
 801af2a:	9c01      	ldr	r4, [sp, #4]
 801af2c:	5d64      	ldrb	r4, [r4, r5]
 801af2e:	2cff      	cmp	r4, #255	; 0xff
 801af30:	d10c      	bne.n	801af4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801af32:	9c00      	ldr	r4, [sp, #0]
 801af34:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801af38:	f06f 0401 	mvn.w	r4, #1
 801af3c:	4374      	muls	r4, r6
 801af3e:	5305      	strh	r5, [r0, r4]
 801af40:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801af42:	4421      	add	r1, r4
 801af44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801af46:	3e01      	subs	r6, #1
 801af48:	4422      	add	r2, r4
 801af4a:	e79c      	b.n	801ae86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801af4c:	2c00      	cmp	r4, #0
 801af4e:	d0f7      	beq.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af50:	9f00      	ldr	r7, [sp, #0]
 801af52:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801af56:	f06f 0501 	mvn.w	r5, #1
 801af5a:	4375      	muls	r5, r6
 801af5c:	9502      	str	r5, [sp, #8]
 801af5e:	5b45      	ldrh	r5, [r0, r5]
 801af60:	fa1f fc84 	uxth.w	ip, r4
 801af64:	122f      	asrs	r7, r5, #8
 801af66:	43e4      	mvns	r4, r4
 801af68:	b2e4      	uxtb	r4, r4
 801af6a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801af6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af72:	fb17 f704 	smulbb	r7, r7, r4
 801af76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801af7a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801af7e:	00ed      	lsls	r5, r5, #3
 801af80:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801af84:	b2ed      	uxtb	r5, r5
 801af86:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801af8a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801af8e:	fb15 f504 	smulbb	r5, r5, r4
 801af92:	fa5f f989 	uxtb.w	r9, r9
 801af96:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801af9a:	fb09 550c 	mla	r5, r9, ip, r5
 801af9e:	fb1a fa04 	smulbb	sl, sl, r4
 801afa2:	fa1f fe8e 	uxth.w	lr, lr
 801afa6:	b2ad      	uxth	r5, r5
 801afa8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801afac:	fb07 a70c 	mla	r7, r7, ip, sl
 801afb0:	f10e 0401 	add.w	r4, lr, #1
 801afb4:	f105 0a01 	add.w	sl, r5, #1
 801afb8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801afbc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801afc0:	b2bf      	uxth	r7, r7
 801afc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801afc6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801afca:	ea4a 0e0e 	orr.w	lr, sl, lr
 801afce:	f107 0a01 	add.w	sl, r7, #1
 801afd2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801afd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801afda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801afde:	9c02      	ldr	r4, [sp, #8]
 801afe0:	ea4e 0e0a 	orr.w	lr, lr, sl
 801afe4:	f820 e004 	strh.w	lr, [r0, r4]
 801afe8:	e7aa      	b.n	801af40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801afea:	f04f 0900 	mov.w	r9, #0
 801afee:	eba3 0409 	sub.w	r4, r3, r9
 801aff2:	2c00      	cmp	r4, #0
 801aff4:	f77f af4a 	ble.w	801ae8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aff8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801affc:	1414      	asrs	r4, r2, #16
 801affe:	140d      	asrs	r5, r1, #16
 801b000:	fb06 5504 	mla	r5, r6, r4, r5
 801b004:	9c01      	ldr	r4, [sp, #4]
 801b006:	5d64      	ldrb	r4, [r4, r5]
 801b008:	2cff      	cmp	r4, #255	; 0xff
 801b00a:	d10b      	bne.n	801b024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b00c:	9c00      	ldr	r4, [sp, #0]
 801b00e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b012:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b016:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b018:	4421      	add	r1, r4
 801b01a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b01c:	f109 0901 	add.w	r9, r9, #1
 801b020:	4422      	add	r2, r4
 801b022:	e7e4      	b.n	801afee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b024:	2c00      	cmp	r4, #0
 801b026:	d0f6      	beq.n	801b016 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b028:	9e00      	ldr	r6, [sp, #0]
 801b02a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b02e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b032:	b2a7      	uxth	r7, r4
 801b034:	122e      	asrs	r6, r5, #8
 801b036:	43e4      	mvns	r4, r4
 801b038:	b2e4      	uxtb	r4, r4
 801b03a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b03e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b042:	fb16 f604 	smulbb	r6, r6, r4
 801b046:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b04a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b04e:	00ed      	lsls	r5, r5, #3
 801b050:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b054:	b2ed      	uxtb	r5, r5
 801b056:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b05a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b05e:	fb15 f504 	smulbb	r5, r5, r4
 801b062:	fa5f fe8e 	uxtb.w	lr, lr
 801b066:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b06a:	fb0e 5507 	mla	r5, lr, r7, r5
 801b06e:	fb1a fa04 	smulbb	sl, sl, r4
 801b072:	fa1f fc8c 	uxth.w	ip, ip
 801b076:	b2ad      	uxth	r5, r5
 801b078:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b07c:	fb06 a607 	mla	r6, r6, r7, sl
 801b080:	f10c 0401 	add.w	r4, ip, #1
 801b084:	f105 0a01 	add.w	sl, r5, #1
 801b088:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b08c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b090:	b2b6      	uxth	r6, r6
 801b092:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b096:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b09a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b09e:	f106 0a01 	add.w	sl, r6, #1
 801b0a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b0a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b0aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b0ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b0b2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b0b6:	e7ae      	b.n	801b016 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b0b8:	b005      	add	sp, #20
 801b0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0c2:	b085      	sub	sp, #20
 801b0c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0c6:	9203      	str	r2, [sp, #12]
 801b0c8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b0cc:	9201      	str	r2, [sp, #4]
 801b0ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b0d2:	9100      	str	r1, [sp, #0]
 801b0d4:	6841      	ldr	r1, [r0, #4]
 801b0d6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b0da:	fb01 2404 	mla	r4, r1, r4, r2
 801b0de:	6802      	ldr	r2, [r0, #0]
 801b0e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b0e4:	f8de 2000 	ldr.w	r2, [lr]
 801b0e8:	9202      	str	r2, [sp, #8]
 801b0ea:	9a01      	ldr	r2, [sp, #4]
 801b0ec:	43d6      	mvns	r6, r2
 801b0ee:	b2f6      	uxtb	r6, r6
 801b0f0:	9a00      	ldr	r2, [sp, #0]
 801b0f2:	2a00      	cmp	r2, #0
 801b0f4:	dc03      	bgt.n	801b0fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b0f6:	9a03      	ldr	r2, [sp, #12]
 801b0f8:	2a00      	cmp	r2, #0
 801b0fa:	f340 8124 	ble.w	801b346 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b0fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b100:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b104:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b108:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b10c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b10e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b112:	2b00      	cmp	r3, #0
 801b114:	dd0e      	ble.n	801b134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b116:	1408      	asrs	r0, r1, #16
 801b118:	d405      	bmi.n	801b126 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b11a:	4560      	cmp	r0, ip
 801b11c:	da03      	bge.n	801b126 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b11e:	1410      	asrs	r0, r2, #16
 801b120:	d401      	bmi.n	801b126 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b122:	42b8      	cmp	r0, r7
 801b124:	db07      	blt.n	801b136 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b126:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b128:	4401      	add	r1, r0
 801b12a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b12c:	3b01      	subs	r3, #1
 801b12e:	4402      	add	r2, r0
 801b130:	3402      	adds	r4, #2
 801b132:	e7ee      	b.n	801b112 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b134:	d06e      	beq.n	801b214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b136:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b138:	1e58      	subs	r0, r3, #1
 801b13a:	fb05 1500 	mla	r5, r5, r0, r1
 801b13e:	142d      	asrs	r5, r5, #16
 801b140:	d45c      	bmi.n	801b1fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b142:	4565      	cmp	r5, ip
 801b144:	da5a      	bge.n	801b1fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b146:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b148:	fb05 2000 	mla	r0, r5, r0, r2
 801b14c:	1400      	asrs	r0, r0, #16
 801b14e:	d455      	bmi.n	801b1fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b150:	42b8      	cmp	r0, r7
 801b152:	da53      	bge.n	801b1fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b154:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b158:	4699      	mov	r9, r3
 801b15a:	46a2      	mov	sl, r4
 801b15c:	f1b9 0f00 	cmp.w	r9, #0
 801b160:	dd54      	ble.n	801b20c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b162:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b166:	140d      	asrs	r5, r1, #16
 801b168:	1410      	asrs	r0, r2, #16
 801b16a:	fb07 5000 	mla	r0, r7, r0, r5
 801b16e:	9d02      	ldr	r5, [sp, #8]
 801b170:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b174:	f8ba 5000 	ldrh.w	r5, [sl]
 801b178:	122f      	asrs	r7, r5, #8
 801b17a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b17e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b182:	fb17 f706 	smulbb	r7, r7, r6
 801b186:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b18a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b18e:	00ed      	lsls	r5, r5, #3
 801b190:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b194:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b198:	10c7      	asrs	r7, r0, #3
 801b19a:	b2ed      	uxtb	r5, r5
 801b19c:	00c0      	lsls	r0, r0, #3
 801b19e:	fb18 f806 	smulbb	r8, r8, r6
 801b1a2:	fb15 f506 	smulbb	r5, r5, r6
 801b1a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b1aa:	b2c0      	uxtb	r0, r0
 801b1ac:	fa1f fc8c 	uxth.w	ip, ip
 801b1b0:	fb07 870b 	mla	r7, r7, fp, r8
 801b1b4:	fb00 500b 	mla	r0, r0, fp, r5
 801b1b8:	b280      	uxth	r0, r0
 801b1ba:	b2bf      	uxth	r7, r7
 801b1bc:	f10c 0501 	add.w	r5, ip, #1
 801b1c0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b1c4:	f107 0801 	add.w	r8, r7, #1
 801b1c8:	1c45      	adds	r5, r0, #1
 801b1ca:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b1ce:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b1d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b1d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b1d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b1dc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b1e0:	ea45 0c0c 	orr.w	ip, r5, ip
 801b1e4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b1e8:	4401      	add	r1, r0
 801b1ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b1ec:	ea4c 0c08 	orr.w	ip, ip, r8
 801b1f0:	f82a cb02 	strh.w	ip, [sl], #2
 801b1f4:	4402      	add	r2, r0
 801b1f6:	f109 39ff 	add.w	r9, r9, #4294967295
 801b1fa:	e7af      	b.n	801b15c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b1fc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b200:	f04f 0800 	mov.w	r8, #0
 801b204:	eb03 0008 	add.w	r0, r3, r8
 801b208:	2800      	cmp	r0, #0
 801b20a:	dc41      	bgt.n	801b290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b20c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b210:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b214:	9b00      	ldr	r3, [sp, #0]
 801b216:	2b00      	cmp	r3, #0
 801b218:	f340 8095 	ble.w	801b346 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b21c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b220:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b224:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b22a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b22e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b232:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b236:	eef0 6a62 	vmov.f32	s13, s5
 801b23a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b23e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b242:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b246:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b24a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b24e:	eef0 6a43 	vmov.f32	s13, s6
 801b252:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b256:	ee12 2a90 	vmov	r2, s5
 801b25a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b25e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b262:	ee13 2a10 	vmov	r2, s6
 801b266:	9311      	str	r3, [sp, #68]	; 0x44
 801b268:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b26a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b26e:	9312      	str	r3, [sp, #72]	; 0x48
 801b270:	9b00      	ldr	r3, [sp, #0]
 801b272:	9a03      	ldr	r2, [sp, #12]
 801b274:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b278:	3b01      	subs	r3, #1
 801b27a:	9300      	str	r3, [sp, #0]
 801b27c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b282:	eeb0 3a67 	vmov.f32	s6, s15
 801b286:	bf08      	it	eq
 801b288:	4613      	moveq	r3, r2
 801b28a:	eef0 2a47 	vmov.f32	s5, s14
 801b28e:	e72f      	b.n	801b0f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b290:	140f      	asrs	r7, r1, #16
 801b292:	d451      	bmi.n	801b338 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b294:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b298:	42bd      	cmp	r5, r7
 801b29a:	dd4d      	ble.n	801b338 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b29c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b2a0:	d44a      	bmi.n	801b338 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b2a2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b2a6:	4560      	cmp	r0, ip
 801b2a8:	dd46      	ble.n	801b338 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b2aa:	b22d      	sxth	r5, r5
 801b2ac:	fb0c 7505 	mla	r5, ip, r5, r7
 801b2b0:	9802      	ldr	r0, [sp, #8]
 801b2b2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b2b6:	f06f 0501 	mvn.w	r5, #1
 801b2ba:	fb05 fb08 	mul.w	fp, r5, r8
 801b2be:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b2c2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b2c6:	122f      	asrs	r7, r5, #8
 801b2c8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b2cc:	fb17 f706 	smulbb	r7, r7, r6
 801b2d0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b2d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b2d8:	00ed      	lsls	r5, r5, #3
 801b2da:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b2de:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b2e2:	10c7      	asrs	r7, r0, #3
 801b2e4:	b2ed      	uxtb	r5, r5
 801b2e6:	00c0      	lsls	r0, r0, #3
 801b2e8:	fb19 f906 	smulbb	r9, r9, r6
 801b2ec:	fb15 f506 	smulbb	r5, r5, r6
 801b2f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b2f4:	b2c0      	uxtb	r0, r0
 801b2f6:	fa1f fc8c 	uxth.w	ip, ip
 801b2fa:	fb07 970a 	mla	r7, r7, sl, r9
 801b2fe:	fb00 500a 	mla	r0, r0, sl, r5
 801b302:	b2bf      	uxth	r7, r7
 801b304:	b280      	uxth	r0, r0
 801b306:	f10c 0501 	add.w	r5, ip, #1
 801b30a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b30e:	f107 0901 	add.w	r9, r7, #1
 801b312:	1c45      	adds	r5, r0, #1
 801b314:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b318:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b31c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b320:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b324:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b328:	ea45 0c0c 	orr.w	ip, r5, ip
 801b32c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b330:	ea4c 0c09 	orr.w	ip, ip, r9
 801b334:	f824 c00b 	strh.w	ip, [r4, fp]
 801b338:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b33a:	4401      	add	r1, r0
 801b33c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b33e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b342:	4402      	add	r2, r0
 801b344:	e75e      	b.n	801b204 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b346:	b005      	add	sp, #20
 801b348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b34c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b34c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b350:	b085      	sub	sp, #20
 801b352:	4693      	mov	fp, r2
 801b354:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b356:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b358:	6870      	ldr	r0, [r6, #4]
 801b35a:	9101      	str	r1, [sp, #4]
 801b35c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b360:	fb00 2404 	mla	r4, r0, r4, r2
 801b364:	6832      	ldr	r2, [r6, #0]
 801b366:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b36a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b36e:	682a      	ldr	r2, [r5, #0]
 801b370:	9202      	str	r2, [sp, #8]
 801b372:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b376:	9a01      	ldr	r2, [sp, #4]
 801b378:	2a00      	cmp	r2, #0
 801b37a:	dc03      	bgt.n	801b384 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b37c:	f1bb 0f00 	cmp.w	fp, #0
 801b380:	f340 809a 	ble.w	801b4b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b384:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b386:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b38a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b38e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b392:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b394:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b398:	2b00      	cmp	r3, #0
 801b39a:	dd0c      	ble.n	801b3b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b39c:	1406      	asrs	r6, r0, #16
 801b39e:	d405      	bmi.n	801b3ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b3a0:	454e      	cmp	r6, r9
 801b3a2:	da03      	bge.n	801b3ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b3a4:	1416      	asrs	r6, r2, #16
 801b3a6:	d401      	bmi.n	801b3ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b3a8:	4546      	cmp	r6, r8
 801b3aa:	db05      	blt.n	801b3b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b3ac:	4470      	add	r0, lr
 801b3ae:	4462      	add	r2, ip
 801b3b0:	3b01      	subs	r3, #1
 801b3b2:	3402      	adds	r4, #2
 801b3b4:	e7f0      	b.n	801b398 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b3b6:	d00f      	beq.n	801b3d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b3b8:	1e5e      	subs	r6, r3, #1
 801b3ba:	fb0e 0706 	mla	r7, lr, r6, r0
 801b3be:	143f      	asrs	r7, r7, #16
 801b3c0:	d541      	bpl.n	801b446 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b3c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b3c6:	4698      	mov	r8, r3
 801b3c8:	9603      	str	r6, [sp, #12]
 801b3ca:	f1b8 0f00 	cmp.w	r8, #0
 801b3ce:	dc56      	bgt.n	801b47e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b3d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b3d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b3d8:	9b01      	ldr	r3, [sp, #4]
 801b3da:	2b00      	cmp	r3, #0
 801b3dc:	dd6c      	ble.n	801b4b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b3de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b3e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b3e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b3ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b3f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b3f4:	eeb0 6a62 	vmov.f32	s12, s5
 801b3f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b400:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b404:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b408:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b40c:	eeb0 6a43 	vmov.f32	s12, s6
 801b410:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b414:	ee12 2a90 	vmov	r2, s5
 801b418:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b41c:	fb92 fef3 	sdiv	lr, r2, r3
 801b420:	ee13 2a10 	vmov	r2, s6
 801b424:	fb92 fcf3 	sdiv	ip, r2, r3
 801b428:	9b01      	ldr	r3, [sp, #4]
 801b42a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b42e:	3b01      	subs	r3, #1
 801b430:	9301      	str	r3, [sp, #4]
 801b432:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b438:	eeb0 3a67 	vmov.f32	s6, s15
 801b43c:	bf08      	it	eq
 801b43e:	465b      	moveq	r3, fp
 801b440:	eef0 2a47 	vmov.f32	s5, s14
 801b444:	e797      	b.n	801b376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b446:	454f      	cmp	r7, r9
 801b448:	dabb      	bge.n	801b3c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b44a:	fb0c 2606 	mla	r6, ip, r6, r2
 801b44e:	1436      	asrs	r6, r6, #16
 801b450:	d4b7      	bmi.n	801b3c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b452:	4546      	cmp	r6, r8
 801b454:	dab5      	bge.n	801b3c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b456:	461e      	mov	r6, r3
 801b458:	46a0      	mov	r8, r4
 801b45a:	2e00      	cmp	r6, #0
 801b45c:	ddb8      	ble.n	801b3d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b45e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b462:	9902      	ldr	r1, [sp, #8]
 801b464:	1417      	asrs	r7, r2, #16
 801b466:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b46a:	fb0a 9707 	mla	r7, sl, r7, r9
 801b46e:	4470      	add	r0, lr
 801b470:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b474:	f828 7b02 	strh.w	r7, [r8], #2
 801b478:	4462      	add	r2, ip
 801b47a:	3e01      	subs	r6, #1
 801b47c:	e7ed      	b.n	801b45a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b47e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b482:	d414      	bmi.n	801b4ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b484:	68ae      	ldr	r6, [r5, #8]
 801b486:	454e      	cmp	r6, r9
 801b488:	dd11      	ble.n	801b4ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b48a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b48e:	d40e      	bmi.n	801b4ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b490:	68ef      	ldr	r7, [r5, #12]
 801b492:	4557      	cmp	r7, sl
 801b494:	dd0b      	ble.n	801b4ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b496:	b236      	sxth	r6, r6
 801b498:	fb0a 9606 	mla	r6, sl, r6, r9
 801b49c:	9f02      	ldr	r7, [sp, #8]
 801b49e:	f06f 0101 	mvn.w	r1, #1
 801b4a2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b4a6:	fb01 f608 	mul.w	r6, r1, r8
 801b4aa:	9903      	ldr	r1, [sp, #12]
 801b4ac:	538f      	strh	r7, [r1, r6]
 801b4ae:	4470      	add	r0, lr
 801b4b0:	4462      	add	r2, ip
 801b4b2:	f108 38ff 	add.w	r8, r8, #4294967295
 801b4b6:	e788      	b.n	801b3ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b4b8:	b005      	add	sp, #20
 801b4ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4c2:	b087      	sub	sp, #28
 801b4c4:	468b      	mov	fp, r1
 801b4c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b4c8:	9203      	str	r2, [sp, #12]
 801b4ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b4ce:	9204      	str	r2, [sp, #16]
 801b4d0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b4d4:	6841      	ldr	r1, [r0, #4]
 801b4d6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b4da:	fb01 2505 	mla	r5, r1, r5, r2
 801b4de:	6802      	ldr	r2, [r0, #0]
 801b4e0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b4e4:	f8d9 2000 	ldr.w	r2, [r9]
 801b4e8:	9201      	str	r2, [sp, #4]
 801b4ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b4ee:	f1bb 0f00 	cmp.w	fp, #0
 801b4f2:	dc03      	bgt.n	801b4fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b4f4:	9a03      	ldr	r2, [sp, #12]
 801b4f6:	2a00      	cmp	r2, #0
 801b4f8:	f340 8159 	ble.w	801b7ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b4fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b4fe:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b502:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b506:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b50a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b50c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b510:	2b00      	cmp	r3, #0
 801b512:	dd0e      	ble.n	801b532 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b514:	1402      	asrs	r2, r0, #16
 801b516:	d405      	bmi.n	801b524 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b518:	42ba      	cmp	r2, r7
 801b51a:	da03      	bge.n	801b524 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b51c:	140a      	asrs	r2, r1, #16
 801b51e:	d401      	bmi.n	801b524 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b520:	42b2      	cmp	r2, r6
 801b522:	db07      	blt.n	801b534 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b524:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b526:	4410      	add	r0, r2
 801b528:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b52a:	3b01      	subs	r3, #1
 801b52c:	4411      	add	r1, r2
 801b52e:	3502      	adds	r5, #2
 801b530:	e7ee      	b.n	801b510 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b532:	d017      	beq.n	801b564 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b534:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b536:	1e5a      	subs	r2, r3, #1
 801b538:	fb04 0402 	mla	r4, r4, r2, r0
 801b53c:	1424      	asrs	r4, r4, #16
 801b53e:	d409      	bmi.n	801b554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b540:	42bc      	cmp	r4, r7
 801b542:	da07      	bge.n	801b554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b544:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b546:	fb04 1202 	mla	r2, r4, r2, r1
 801b54a:	1412      	asrs	r2, r2, #16
 801b54c:	d402      	bmi.n	801b554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b54e:	42b2      	cmp	r2, r6
 801b550:	f2c0 80bf 	blt.w	801b6d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b554:	2700      	movs	r7, #0
 801b556:	19da      	adds	r2, r3, r7
 801b558:	2a00      	cmp	r2, #0
 801b55a:	dc3e      	bgt.n	801b5da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b55c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b560:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b564:	f1bb 0f00 	cmp.w	fp, #0
 801b568:	f340 8121 	ble.w	801b7ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b56c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b570:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b574:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b578:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b57a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b57e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b582:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b586:	eeb0 6a62 	vmov.f32	s12, s5
 801b58a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b58e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b592:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b596:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b59a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b59e:	eeb0 6a43 	vmov.f32	s12, s6
 801b5a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b5a6:	ee12 2a90 	vmov	r2, s5
 801b5aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b5ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5b2:	ee13 2a10 	vmov	r2, s6
 801b5b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b5ba:	9313      	str	r3, [sp, #76]	; 0x4c
 801b5bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b5be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5c2:	9a03      	ldr	r2, [sp, #12]
 801b5c4:	9314      	str	r3, [sp, #80]	; 0x50
 801b5c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b5ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b5cc:	eeb0 3a67 	vmov.f32	s6, s15
 801b5d0:	bf08      	it	eq
 801b5d2:	4613      	moveq	r3, r2
 801b5d4:	eef0 2a47 	vmov.f32	s5, s14
 801b5d8:	e789      	b.n	801b4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b5da:	1406      	asrs	r6, r0, #16
 801b5dc:	d42d      	bmi.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5de:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b5e2:	42b4      	cmp	r4, r6
 801b5e4:	dd29      	ble.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5e6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b5ea:	d426      	bmi.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b5f0:	4562      	cmp	r2, ip
 801b5f2:	dd22      	ble.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5f4:	b224      	sxth	r4, r4
 801b5f6:	9a01      	ldr	r2, [sp, #4]
 801b5f8:	fb0c 6404 	mla	r4, ip, r4, r6
 801b5fc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b600:	0e22      	lsrs	r2, r4, #24
 801b602:	d01a      	beq.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b604:	9e04      	ldr	r6, [sp, #16]
 801b606:	4372      	muls	r2, r6
 801b608:	1c56      	adds	r6, r2, #1
 801b60a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b60e:	1212      	asrs	r2, r2, #8
 801b610:	0a26      	lsrs	r6, r4, #8
 801b612:	2aff      	cmp	r2, #255	; 0xff
 801b614:	9605      	str	r6, [sp, #20]
 801b616:	d116      	bne.n	801b646 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b618:	f06f 0201 	mvn.w	r2, #1
 801b61c:	fb02 fc07 	mul.w	ip, r2, r7
 801b620:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b624:	0962      	lsrs	r2, r4, #5
 801b626:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b62a:	f026 0607 	bic.w	r6, r6, #7
 801b62e:	4316      	orrs	r6, r2
 801b630:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b634:	4326      	orrs	r6, r4
 801b636:	f825 600c 	strh.w	r6, [r5, ip]
 801b63a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b63c:	4410      	add	r0, r2
 801b63e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b640:	3f01      	subs	r7, #1
 801b642:	4411      	add	r1, r2
 801b644:	e787      	b.n	801b556 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b646:	f06f 0601 	mvn.w	r6, #1
 801b64a:	437e      	muls	r6, r7
 801b64c:	fa1f fa82 	uxth.w	sl, r2
 801b650:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b654:	9602      	str	r6, [sp, #8]
 801b656:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b65a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b65e:	43d2      	mvns	r2, r2
 801b660:	b2d2      	uxtb	r2, r2
 801b662:	fb1c fc0a 	smulbb	ip, ip, sl
 801b666:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b66a:	fb0e ce02 	mla	lr, lr, r2, ip
 801b66e:	b2e4      	uxtb	r4, r4
 801b670:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b674:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b678:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b67c:	fa5f f888 	uxtb.w	r8, r8
 801b680:	fb14 f40a 	smulbb	r4, r4, sl
 801b684:	fb08 4402 	mla	r4, r8, r2, r4
 801b688:	fa1f fe8e 	uxth.w	lr, lr
 801b68c:	fb16 f60a 	smulbb	r6, r6, sl
 801b690:	b2a4      	uxth	r4, r4
 801b692:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b696:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b69a:	f10e 0201 	add.w	r2, lr, #1
 801b69e:	1c66      	adds	r6, r4, #1
 801b6a0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b6a4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b6a8:	fa1f fc8c 	uxth.w	ip, ip
 801b6ac:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b6b0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b6b4:	ea46 0e0e 	orr.w	lr, r6, lr
 801b6b8:	f10c 0601 	add.w	r6, ip, #1
 801b6bc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b6c0:	0976      	lsrs	r6, r6, #5
 801b6c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b6c6:	9a02      	ldr	r2, [sp, #8]
 801b6c8:	ea4e 0e06 	orr.w	lr, lr, r6
 801b6cc:	f825 e002 	strh.w	lr, [r5, r2]
 801b6d0:	e7b3      	b.n	801b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b6d2:	f04f 0800 	mov.w	r8, #0
 801b6d6:	eba3 0208 	sub.w	r2, r3, r8
 801b6da:	2a00      	cmp	r2, #0
 801b6dc:	f77f af3e 	ble.w	801b55c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b6e0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b6e4:	1404      	asrs	r4, r0, #16
 801b6e6:	140a      	asrs	r2, r1, #16
 801b6e8:	fb06 4202 	mla	r2, r6, r2, r4
 801b6ec:	9c01      	ldr	r4, [sp, #4]
 801b6ee:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b6f2:	0e22      	lsrs	r2, r4, #24
 801b6f4:	d016      	beq.n	801b724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b6f6:	9e04      	ldr	r6, [sp, #16]
 801b6f8:	4372      	muls	r2, r6
 801b6fa:	1c56      	adds	r6, r2, #1
 801b6fc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b700:	1212      	asrs	r2, r2, #8
 801b702:	2aff      	cmp	r2, #255	; 0xff
 801b704:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b708:	d113      	bne.n	801b732 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b70a:	0962      	lsrs	r2, r4, #5
 801b70c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b714:	f026 0607 	bic.w	r6, r6, #7
 801b718:	4316      	orrs	r6, r2
 801b71a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b71e:	4326      	orrs	r6, r4
 801b720:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b724:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b726:	4410      	add	r0, r2
 801b728:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b72a:	f108 0801 	add.w	r8, r8, #1
 801b72e:	4411      	add	r1, r2
 801b730:	e7d1      	b.n	801b6d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b732:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b736:	fa1f fa82 	uxth.w	sl, r2
 801b73a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b73e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b742:	43d2      	mvns	r2, r2
 801b744:	b2d2      	uxtb	r2, r2
 801b746:	fb17 f70a 	smulbb	r7, r7, sl
 801b74a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b74e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b752:	b2e4      	uxtb	r4, r4
 801b754:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b758:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b75c:	fa5f fe8e 	uxtb.w	lr, lr
 801b760:	fb14 f40a 	smulbb	r4, r4, sl
 801b764:	fb0e 4402 	mla	r4, lr, r2, r4
 801b768:	b2f6      	uxtb	r6, r6
 801b76a:	fa1f fc8c 	uxth.w	ip, ip
 801b76e:	fb16 f60a 	smulbb	r6, r6, sl
 801b772:	b2a4      	uxth	r4, r4
 801b774:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b778:	fb07 6702 	mla	r7, r7, r2, r6
 801b77c:	f10c 0201 	add.w	r2, ip, #1
 801b780:	1c66      	adds	r6, r4, #1
 801b782:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b786:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b78a:	b2bf      	uxth	r7, r7
 801b78c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b790:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b794:	ea46 0c0c 	orr.w	ip, r6, ip
 801b798:	1c7e      	adds	r6, r7, #1
 801b79a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b79e:	0976      	lsrs	r6, r6, #5
 801b7a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b7a4:	ea4c 0c06 	orr.w	ip, ip, r6
 801b7a8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b7ac:	e7ba      	b.n	801b724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b7ae:	b007      	add	sp, #28
 801b7b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b7b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7b8:	b085      	sub	sp, #20
 801b7ba:	468b      	mov	fp, r1
 801b7bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b7be:	9203      	str	r2, [sp, #12]
 801b7c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b7c4:	6841      	ldr	r1, [r0, #4]
 801b7c6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b7ca:	fb01 2404 	mla	r4, r1, r4, r2
 801b7ce:	6802      	ldr	r2, [r0, #0]
 801b7d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b7d4:	f8d8 2000 	ldr.w	r2, [r8]
 801b7d8:	9201      	str	r2, [sp, #4]
 801b7da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b7de:	f1bb 0f00 	cmp.w	fp, #0
 801b7e2:	dc03      	bgt.n	801b7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b7e4:	9a03      	ldr	r2, [sp, #12]
 801b7e6:	2a00      	cmp	r2, #0
 801b7e8:	f340 814f 	ble.w	801ba8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b7ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b7ee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b7f2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b7f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b7fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b7fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b800:	2b00      	cmp	r3, #0
 801b802:	dd0e      	ble.n	801b822 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b804:	1408      	asrs	r0, r1, #16
 801b806:	d405      	bmi.n	801b814 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b808:	42b8      	cmp	r0, r7
 801b80a:	da03      	bge.n	801b814 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b80c:	1410      	asrs	r0, r2, #16
 801b80e:	d401      	bmi.n	801b814 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b810:	42b0      	cmp	r0, r6
 801b812:	db07      	blt.n	801b824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b814:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b816:	4401      	add	r1, r0
 801b818:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b81a:	3b01      	subs	r3, #1
 801b81c:	4402      	add	r2, r0
 801b81e:	3402      	adds	r4, #2
 801b820:	e7ee      	b.n	801b800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b822:	d017      	beq.n	801b854 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b824:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b826:	1e58      	subs	r0, r3, #1
 801b828:	fb05 1500 	mla	r5, r5, r0, r1
 801b82c:	142d      	asrs	r5, r5, #16
 801b82e:	d409      	bmi.n	801b844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b830:	42bd      	cmp	r5, r7
 801b832:	da07      	bge.n	801b844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b834:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b836:	fb05 2000 	mla	r0, r5, r0, r2
 801b83a:	1400      	asrs	r0, r0, #16
 801b83c:	d402      	bmi.n	801b844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b83e:	42b0      	cmp	r0, r6
 801b840:	f2c0 80ba 	blt.w	801b9b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b844:	2600      	movs	r6, #0
 801b846:	1998      	adds	r0, r3, r6
 801b848:	2800      	cmp	r0, #0
 801b84a:	dc3e      	bgt.n	801b8ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b84c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b850:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b854:	f1bb 0f00 	cmp.w	fp, #0
 801b858:	f340 8117 	ble.w	801ba8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b85c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b860:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b864:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b868:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b86a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b86e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b872:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b876:	eeb0 6a62 	vmov.f32	s12, s5
 801b87a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b87e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b882:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b886:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b88a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b88e:	eeb0 6a43 	vmov.f32	s12, s6
 801b892:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b896:	ee12 2a90 	vmov	r2, s5
 801b89a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b89e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8a2:	ee13 2a10 	vmov	r2, s6
 801b8a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b8aa:	9311      	str	r3, [sp, #68]	; 0x44
 801b8ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8b2:	9a03      	ldr	r2, [sp, #12]
 801b8b4:	9312      	str	r3, [sp, #72]	; 0x48
 801b8b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b8ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8bc:	eeb0 3a67 	vmov.f32	s6, s15
 801b8c0:	bf08      	it	eq
 801b8c2:	4613      	moveq	r3, r2
 801b8c4:	eef0 2a47 	vmov.f32	s5, s14
 801b8c8:	e789      	b.n	801b7de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b8ca:	140f      	asrs	r7, r1, #16
 801b8cc:	d424      	bmi.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8ce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b8d2:	42bd      	cmp	r5, r7
 801b8d4:	dd20      	ble.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b8da:	d41d      	bmi.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8dc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b8e0:	4560      	cmp	r0, ip
 801b8e2:	dd19      	ble.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8e4:	b22d      	sxth	r5, r5
 801b8e6:	fb0c 7505 	mla	r5, ip, r5, r7
 801b8ea:	9801      	ldr	r0, [sp, #4]
 801b8ec:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b8f0:	0e07      	lsrs	r7, r0, #24
 801b8f2:	2fff      	cmp	r7, #255	; 0xff
 801b8f4:	d116      	bne.n	801b924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b8f6:	f06f 0501 	mvn.w	r5, #1
 801b8fa:	fb05 f706 	mul.w	r7, r5, r6
 801b8fe:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b902:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b906:	0945      	lsrs	r5, r0, #5
 801b908:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b90c:	ea4c 0505 	orr.w	r5, ip, r5
 801b910:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b914:	4305      	orrs	r5, r0
 801b916:	53e5      	strh	r5, [r4, r7]
 801b918:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b91a:	4401      	add	r1, r0
 801b91c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b91e:	3e01      	subs	r6, #1
 801b920:	4402      	add	r2, r0
 801b922:	e790      	b.n	801b846 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b924:	b2fd      	uxtb	r5, r7
 801b926:	2f00      	cmp	r7, #0
 801b928:	d0f6      	beq.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b92a:	f06f 0701 	mvn.w	r7, #1
 801b92e:	4377      	muls	r7, r6
 801b930:	fa1f f985 	uxth.w	r9, r5
 801b934:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b938:	9702      	str	r7, [sp, #8]
 801b93a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b93e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b942:	43ed      	mvns	r5, r5
 801b944:	b2ed      	uxtb	r5, r5
 801b946:	fb17 f709 	smulbb	r7, r7, r9
 801b94a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b94e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b952:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b956:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b95a:	b2c0      	uxtb	r0, r0
 801b95c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b960:	fa5f fe8e 	uxtb.w	lr, lr
 801b964:	fb10 f009 	smulbb	r0, r0, r9
 801b968:	fb0e 0005 	mla	r0, lr, r5, r0
 801b96c:	b280      	uxth	r0, r0
 801b96e:	fa1f fc8c 	uxth.w	ip, ip
 801b972:	fb1a fa09 	smulbb	sl, sl, r9
 801b976:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b97a:	fb07 a705 	mla	r7, r7, r5, sl
 801b97e:	f100 0a01 	add.w	sl, r0, #1
 801b982:	f10c 0501 	add.w	r5, ip, #1
 801b986:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b98a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b98e:	b2bf      	uxth	r7, r7
 801b990:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b994:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b998:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b99c:	f107 0a01 	add.w	sl, r7, #1
 801b9a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b9a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b9a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b9ac:	9802      	ldr	r0, [sp, #8]
 801b9ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b9b2:	f824 c000 	strh.w	ip, [r4, r0]
 801b9b6:	e7af      	b.n	801b918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b9b8:	f04f 0e00 	mov.w	lr, #0
 801b9bc:	eba3 000e 	sub.w	r0, r3, lr
 801b9c0:	2800      	cmp	r0, #0
 801b9c2:	f77f af43 	ble.w	801b84c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b9c6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b9ca:	140d      	asrs	r5, r1, #16
 801b9cc:	1410      	asrs	r0, r2, #16
 801b9ce:	fb06 5000 	mla	r0, r6, r0, r5
 801b9d2:	9d01      	ldr	r5, [sp, #4]
 801b9d4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b9d8:	0e2e      	lsrs	r6, r5, #24
 801b9da:	2eff      	cmp	r6, #255	; 0xff
 801b9dc:	d112      	bne.n	801ba04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b9de:	482c      	ldr	r0, [pc, #176]	; (801ba90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b9e0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b9e4:	0968      	lsrs	r0, r5, #5
 801b9e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b9ea:	4330      	orrs	r0, r6
 801b9ec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b9f0:	4328      	orrs	r0, r5
 801b9f2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b9f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b9f8:	4401      	add	r1, r0
 801b9fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b9fc:	f10e 0e01 	add.w	lr, lr, #1
 801ba00:	4402      	add	r2, r0
 801ba02:	e7db      	b.n	801b9bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ba04:	b2f0      	uxtb	r0, r6
 801ba06:	2e00      	cmp	r6, #0
 801ba08:	d0f5      	beq.n	801b9f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ba0a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ba0e:	fa1f f980 	uxth.w	r9, r0
 801ba12:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ba16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ba1a:	43c0      	mvns	r0, r0
 801ba1c:	b2c0      	uxtb	r0, r0
 801ba1e:	fb16 f609 	smulbb	r6, r6, r9
 801ba22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ba26:	fb07 6700 	mla	r7, r7, r0, r6
 801ba2a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ba2e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ba32:	b2ed      	uxtb	r5, r5
 801ba34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ba38:	fa5f fc8c 	uxtb.w	ip, ip
 801ba3c:	fb15 f509 	smulbb	r5, r5, r9
 801ba40:	fb0c 5500 	mla	r5, ip, r0, r5
 801ba44:	b2bf      	uxth	r7, r7
 801ba46:	fb1a fa09 	smulbb	sl, sl, r9
 801ba4a:	b2ad      	uxth	r5, r5
 801ba4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ba50:	fb06 a600 	mla	r6, r6, r0, sl
 801ba54:	1c78      	adds	r0, r7, #1
 801ba56:	f105 0a01 	add.w	sl, r5, #1
 801ba5a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ba5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba62:	b2b6      	uxth	r6, r6
 801ba64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ba6c:	ea4a 0707 	orr.w	r7, sl, r7
 801ba70:	f106 0a01 	add.w	sl, r6, #1
 801ba74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ba78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba80:	ea47 070a 	orr.w	r7, r7, sl
 801ba84:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801ba88:	e7b5      	b.n	801b9f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ba8a:	b005      	add	sp, #20
 801ba8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba90:	fffff800 	.word	0xfffff800

0801ba94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba98:	b087      	sub	sp, #28
 801ba9a:	468b      	mov	fp, r1
 801ba9c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ba9e:	9203      	str	r2, [sp, #12]
 801baa0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801baa4:	9204      	str	r2, [sp, #16]
 801baa6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801baaa:	6841      	ldr	r1, [r0, #4]
 801baac:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bab0:	fb01 2404 	mla	r4, r1, r4, r2
 801bab4:	6802      	ldr	r2, [r0, #0]
 801bab6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801baba:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801babe:	3201      	adds	r2, #1
 801bac0:	f022 0201 	bic.w	r2, r2, #1
 801bac4:	9200      	str	r2, [sp, #0]
 801bac6:	f8d9 2000 	ldr.w	r2, [r9]
 801baca:	9201      	str	r2, [sp, #4]
 801bacc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bad0:	f1bb 0f00 	cmp.w	fp, #0
 801bad4:	dc03      	bgt.n	801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bad6:	9a03      	ldr	r2, [sp, #12]
 801bad8:	2a00      	cmp	r2, #0
 801bada:	f340 8169 	ble.w	801bdb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bade:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bae0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bae4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bae8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801baec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801baee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801baf2:	2b00      	cmp	r3, #0
 801baf4:	dd0e      	ble.n	801bb14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801baf6:	1402      	asrs	r2, r0, #16
 801baf8:	d405      	bmi.n	801bb06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bafa:	42ba      	cmp	r2, r7
 801bafc:	da03      	bge.n	801bb06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bafe:	140a      	asrs	r2, r1, #16
 801bb00:	d401      	bmi.n	801bb06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bb02:	42b2      	cmp	r2, r6
 801bb04:	db07      	blt.n	801bb16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bb06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb08:	4410      	add	r0, r2
 801bb0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb0c:	3b01      	subs	r3, #1
 801bb0e:	4411      	add	r1, r2
 801bb10:	3402      	adds	r4, #2
 801bb12:	e7ee      	b.n	801baf2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bb14:	d017      	beq.n	801bb46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb18:	1e5a      	subs	r2, r3, #1
 801bb1a:	fb05 0502 	mla	r5, r5, r2, r0
 801bb1e:	142d      	asrs	r5, r5, #16
 801bb20:	d409      	bmi.n	801bb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bb22:	42bd      	cmp	r5, r7
 801bb24:	da07      	bge.n	801bb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bb26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bb28:	fb05 1202 	mla	r2, r5, r2, r1
 801bb2c:	1412      	asrs	r2, r2, #16
 801bb2e:	d402      	bmi.n	801bb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bb30:	42b2      	cmp	r2, r6
 801bb32:	f2c0 80c7 	blt.w	801bcc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801bb36:	2700      	movs	r7, #0
 801bb38:	19da      	adds	r2, r3, r7
 801bb3a:	2a00      	cmp	r2, #0
 801bb3c:	dc3e      	bgt.n	801bbbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bb3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb46:	f1bb 0f00 	cmp.w	fp, #0
 801bb4a:	f340 8131 	ble.w	801bdb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bb4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb56:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb5c:	f1bb 0b01 	subs.w	fp, fp, #1
 801bb60:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb68:	eeb0 6a62 	vmov.f32	s12, s5
 801bb6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb74:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb78:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bb7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb80:	eeb0 6a43 	vmov.f32	s12, s6
 801bb84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb88:	ee12 2a90 	vmov	r2, s5
 801bb8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb90:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb94:	ee13 2a10 	vmov	r2, s6
 801bb98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb9c:	9313      	str	r3, [sp, #76]	; 0x4c
 801bb9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bba0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bba4:	9a03      	ldr	r2, [sp, #12]
 801bba6:	9314      	str	r3, [sp, #80]	; 0x50
 801bba8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bbac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbae:	eeb0 3a67 	vmov.f32	s6, s15
 801bbb2:	bf08      	it	eq
 801bbb4:	4613      	moveq	r3, r2
 801bbb6:	eef0 2a47 	vmov.f32	s5, s14
 801bbba:	e789      	b.n	801bad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bbbc:	1405      	asrs	r5, r0, #16
 801bbbe:	d435      	bmi.n	801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbc0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bbc4:	42aa      	cmp	r2, r5
 801bbc6:	dd31      	ble.n	801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbc8:	140e      	asrs	r6, r1, #16
 801bbca:	d42f      	bmi.n	801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbcc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bbd0:	42b2      	cmp	r2, r6
 801bbd2:	dd2b      	ble.n	801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbd4:	9a00      	ldr	r2, [sp, #0]
 801bbd6:	fb06 5502 	mla	r5, r6, r2, r5
 801bbda:	086a      	lsrs	r2, r5, #1
 801bbdc:	9e01      	ldr	r6, [sp, #4]
 801bbde:	5cb2      	ldrb	r2, [r6, r2]
 801bbe0:	07ee      	lsls	r6, r5, #31
 801bbe2:	bf54      	ite	pl
 801bbe4:	f002 020f 	andpl.w	r2, r2, #15
 801bbe8:	1112      	asrmi	r2, r2, #4
 801bbea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bbee:	b2d2      	uxtb	r2, r2
 801bbf0:	b1e2      	cbz	r2, 801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbf2:	9d04      	ldr	r5, [sp, #16]
 801bbf4:	436a      	muls	r2, r5
 801bbf6:	1c55      	adds	r5, r2, #1
 801bbf8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bbfc:	4d6e      	ldr	r5, [pc, #440]	; (801bdb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bbfe:	682d      	ldr	r5, [r5, #0]
 801bc00:	1212      	asrs	r2, r2, #8
 801bc02:	0a2e      	lsrs	r6, r5, #8
 801bc04:	2aff      	cmp	r2, #255	; 0xff
 801bc06:	9605      	str	r6, [sp, #20]
 801bc08:	d116      	bne.n	801bc38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bc0a:	f06f 0201 	mvn.w	r2, #1
 801bc0e:	fb02 fc07 	mul.w	ip, r2, r7
 801bc12:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bc16:	096a      	lsrs	r2, r5, #5
 801bc18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc1c:	f026 0607 	bic.w	r6, r6, #7
 801bc20:	4316      	orrs	r6, r2
 801bc22:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bc26:	432e      	orrs	r6, r5
 801bc28:	f824 600c 	strh.w	r6, [r4, ip]
 801bc2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc2e:	4410      	add	r0, r2
 801bc30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc32:	3f01      	subs	r7, #1
 801bc34:	4411      	add	r1, r2
 801bc36:	e77f      	b.n	801bb38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801bc38:	f06f 0601 	mvn.w	r6, #1
 801bc3c:	437e      	muls	r6, r7
 801bc3e:	fa1f fa82 	uxth.w	sl, r2
 801bc42:	f834 8006 	ldrh.w	r8, [r4, r6]
 801bc46:	9602      	str	r6, [sp, #8]
 801bc48:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bc4c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801bc50:	43d2      	mvns	r2, r2
 801bc52:	b2d2      	uxtb	r2, r2
 801bc54:	fb1c fc0a 	smulbb	ip, ip, sl
 801bc58:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bc5c:	fb0e ce02 	mla	lr, lr, r2, ip
 801bc60:	b2ed      	uxtb	r5, r5
 801bc62:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bc66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bc6a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bc6e:	fa5f f888 	uxtb.w	r8, r8
 801bc72:	fb15 f50a 	smulbb	r5, r5, sl
 801bc76:	fb08 5502 	mla	r5, r8, r2, r5
 801bc7a:	fa1f fe8e 	uxth.w	lr, lr
 801bc7e:	fb16 f60a 	smulbb	r6, r6, sl
 801bc82:	b2ad      	uxth	r5, r5
 801bc84:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bc88:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bc8c:	f10e 0201 	add.w	r2, lr, #1
 801bc90:	1c6e      	adds	r6, r5, #1
 801bc92:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bc96:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bc9a:	fa1f fc8c 	uxth.w	ip, ip
 801bc9e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bca2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bca6:	ea46 0e0e 	orr.w	lr, r6, lr
 801bcaa:	f10c 0601 	add.w	r6, ip, #1
 801bcae:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bcb2:	0976      	lsrs	r6, r6, #5
 801bcb4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bcb8:	9a02      	ldr	r2, [sp, #8]
 801bcba:	ea4e 0e06 	orr.w	lr, lr, r6
 801bcbe:	f824 e002 	strh.w	lr, [r4, r2]
 801bcc2:	e7b3      	b.n	801bc2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bcc4:	f04f 0800 	mov.w	r8, #0
 801bcc8:	eba3 0208 	sub.w	r2, r3, r8
 801bccc:	2a00      	cmp	r2, #0
 801bcce:	f77f af36 	ble.w	801bb3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bcd2:	9e00      	ldr	r6, [sp, #0]
 801bcd4:	1402      	asrs	r2, r0, #16
 801bcd6:	140d      	asrs	r5, r1, #16
 801bcd8:	fb06 2505 	mla	r5, r6, r5, r2
 801bcdc:	086a      	lsrs	r2, r5, #1
 801bcde:	9e01      	ldr	r6, [sp, #4]
 801bce0:	5cb2      	ldrb	r2, [r6, r2]
 801bce2:	07ed      	lsls	r5, r5, #31
 801bce4:	bf54      	ite	pl
 801bce6:	f002 020f 	andpl.w	r2, r2, #15
 801bcea:	1112      	asrmi	r2, r2, #4
 801bcec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bcf0:	b2d2      	uxtb	r2, r2
 801bcf2:	b1c2      	cbz	r2, 801bd26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bcf4:	9d04      	ldr	r5, [sp, #16]
 801bcf6:	436a      	muls	r2, r5
 801bcf8:	1c55      	adds	r5, r2, #1
 801bcfa:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bcfe:	4d2e      	ldr	r5, [pc, #184]	; (801bdb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bd00:	1212      	asrs	r2, r2, #8
 801bd02:	682e      	ldr	r6, [r5, #0]
 801bd04:	2aff      	cmp	r2, #255	; 0xff
 801bd06:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bd0a:	d113      	bne.n	801bd34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bd0c:	0972      	lsrs	r2, r6, #5
 801bd0e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bd12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd16:	f025 0507 	bic.w	r5, r5, #7
 801bd1a:	4315      	orrs	r5, r2
 801bd1c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bd20:	4335      	orrs	r5, r6
 801bd22:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bd26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd28:	4410      	add	r0, r2
 801bd2a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd2c:	f108 0801 	add.w	r8, r8, #1
 801bd30:	4411      	add	r1, r2
 801bd32:	e7c9      	b.n	801bcc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bd34:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bd38:	fa1f fa82 	uxth.w	sl, r2
 801bd3c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd40:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bd44:	43d2      	mvns	r2, r2
 801bd46:	b2d2      	uxtb	r2, r2
 801bd48:	fb17 f70a 	smulbb	r7, r7, sl
 801bd4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd50:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bd54:	b2f6      	uxtb	r6, r6
 801bd56:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bd5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd5e:	fa5f fe8e 	uxtb.w	lr, lr
 801bd62:	fb16 f60a 	smulbb	r6, r6, sl
 801bd66:	fb0e 6602 	mla	r6, lr, r2, r6
 801bd6a:	b2ed      	uxtb	r5, r5
 801bd6c:	fa1f fc8c 	uxth.w	ip, ip
 801bd70:	fb15 f50a 	smulbb	r5, r5, sl
 801bd74:	b2b6      	uxth	r6, r6
 801bd76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd7a:	fb07 5702 	mla	r7, r7, r2, r5
 801bd7e:	f10c 0201 	add.w	r2, ip, #1
 801bd82:	1c75      	adds	r5, r6, #1
 801bd84:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bd88:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bd8c:	b2bf      	uxth	r7, r7
 801bd8e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bd92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bd96:	ea45 0c0c 	orr.w	ip, r5, ip
 801bd9a:	1c7d      	adds	r5, r7, #1
 801bd9c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bda0:	096d      	lsrs	r5, r5, #5
 801bda2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bda6:	ea4c 0c05 	orr.w	ip, ip, r5
 801bdaa:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bdae:	e7ba      	b.n	801bd26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bdb0:	b007      	add	sp, #28
 801bdb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdb6:	bf00      	nop
 801bdb8:	20013454 	.word	0x20013454

0801bdbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdc0:	b087      	sub	sp, #28
 801bdc2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c0d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bdc6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bdc8:	9205      	str	r2, [sp, #20]
 801bdca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bdce:	9101      	str	r1, [sp, #4]
 801bdd0:	6841      	ldr	r1, [r0, #4]
 801bdd2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bdd6:	fb01 2404 	mla	r4, r1, r4, r2
 801bdda:	6802      	ldr	r2, [r0, #0]
 801bddc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bde0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bde4:	3201      	adds	r2, #1
 801bde6:	f022 0201 	bic.w	r2, r2, #1
 801bdea:	9202      	str	r2, [sp, #8]
 801bdec:	f8db 2000 	ldr.w	r2, [fp]
 801bdf0:	9203      	str	r2, [sp, #12]
 801bdf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bdf6:	9a01      	ldr	r2, [sp, #4]
 801bdf8:	2a00      	cmp	r2, #0
 801bdfa:	dc03      	bgt.n	801be04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bdfc:	9a05      	ldr	r2, [sp, #20]
 801bdfe:	2a00      	cmp	r2, #0
 801be00:	f340 8162 	ble.w	801c0c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801be04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801be06:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801be0a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801be0e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801be12:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801be14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be18:	2b00      	cmp	r3, #0
 801be1a:	dd0e      	ble.n	801be3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801be1c:	1402      	asrs	r2, r0, #16
 801be1e:	d405      	bmi.n	801be2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be20:	42ba      	cmp	r2, r7
 801be22:	da03      	bge.n	801be2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be24:	140a      	asrs	r2, r1, #16
 801be26:	d401      	bmi.n	801be2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be28:	42b2      	cmp	r2, r6
 801be2a:	db07      	blt.n	801be3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801be2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be2e:	4410      	add	r0, r2
 801be30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be32:	3b01      	subs	r3, #1
 801be34:	4411      	add	r1, r2
 801be36:	3402      	adds	r4, #2
 801be38:	e7ee      	b.n	801be18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801be3a:	d017      	beq.n	801be6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801be3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801be3e:	1e5a      	subs	r2, r3, #1
 801be40:	fb05 0502 	mla	r5, r5, r2, r0
 801be44:	142d      	asrs	r5, r5, #16
 801be46:	d409      	bmi.n	801be5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801be48:	42bd      	cmp	r5, r7
 801be4a:	da07      	bge.n	801be5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801be4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801be4e:	fb05 1202 	mla	r2, r5, r2, r1
 801be52:	1412      	asrs	r2, r2, #16
 801be54:	d402      	bmi.n	801be5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801be56:	42b2      	cmp	r2, r6
 801be58:	f2c0 80c3 	blt.w	801bfe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801be5c:	2500      	movs	r5, #0
 801be5e:	195a      	adds	r2, r3, r5
 801be60:	2a00      	cmp	r2, #0
 801be62:	dc3f      	bgt.n	801bee4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801be64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801be6c:	9b01      	ldr	r3, [sp, #4]
 801be6e:	2b00      	cmp	r3, #0
 801be70:	f340 812a 	ble.w	801c0c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801be74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801be80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be82:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be8a:	eeb0 6a62 	vmov.f32	s12, s5
 801be8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be96:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be9a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801be9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bea2:	eeb0 6a43 	vmov.f32	s12, s6
 801bea6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801beaa:	ee12 2a90 	vmov	r2, s5
 801beae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801beb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801beb6:	ee13 2a10 	vmov	r2, s6
 801beba:	9313      	str	r3, [sp, #76]	; 0x4c
 801bebc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bebe:	fb92 f3f3 	sdiv	r3, r2, r3
 801bec2:	9314      	str	r3, [sp, #80]	; 0x50
 801bec4:	9b01      	ldr	r3, [sp, #4]
 801bec6:	9a05      	ldr	r2, [sp, #20]
 801bec8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801becc:	3b01      	subs	r3, #1
 801bece:	9301      	str	r3, [sp, #4]
 801bed0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bed4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bed6:	eeb0 3a67 	vmov.f32	s6, s15
 801beda:	bf08      	it	eq
 801bedc:	4613      	moveq	r3, r2
 801bede:	eef0 2a47 	vmov.f32	s5, s14
 801bee2:	e788      	b.n	801bdf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bee4:	1406      	asrs	r6, r0, #16
 801bee6:	d42c      	bmi.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bee8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801beec:	42b2      	cmp	r2, r6
 801beee:	dd28      	ble.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bef0:	140f      	asrs	r7, r1, #16
 801bef2:	d426      	bmi.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bef4:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bef8:	42ba      	cmp	r2, r7
 801befa:	dd22      	ble.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801befc:	9a02      	ldr	r2, [sp, #8]
 801befe:	fb07 6602 	mla	r6, r7, r2, r6
 801bf02:	0872      	lsrs	r2, r6, #1
 801bf04:	9f03      	ldr	r7, [sp, #12]
 801bf06:	5cba      	ldrb	r2, [r7, r2]
 801bf08:	07f6      	lsls	r6, r6, #31
 801bf0a:	bf54      	ite	pl
 801bf0c:	f002 020f 	andpl.w	r2, r2, #15
 801bf10:	1112      	asrmi	r2, r2, #4
 801bf12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bf16:	b2d2      	uxtb	r2, r2
 801bf18:	2aff      	cmp	r2, #255	; 0xff
 801bf1a:	d118      	bne.n	801bf4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bf1c:	f8d8 2000 	ldr.w	r2, [r8]
 801bf20:	f06f 0601 	mvn.w	r6, #1
 801bf24:	fb06 f705 	mul.w	r7, r6, r5
 801bf28:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bf2c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bf30:	0956      	lsrs	r6, r2, #5
 801bf32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bf36:	ea4c 0606 	orr.w	r6, ip, r6
 801bf3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bf3e:	4316      	orrs	r6, r2
 801bf40:	53e6      	strh	r6, [r4, r7]
 801bf42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bf44:	4410      	add	r0, r2
 801bf46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf48:	3d01      	subs	r5, #1
 801bf4a:	4411      	add	r1, r2
 801bf4c:	e787      	b.n	801be5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bf4e:	2a00      	cmp	r2, #0
 801bf50:	d0f7      	beq.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bf52:	f06f 0601 	mvn.w	r6, #1
 801bf56:	436e      	muls	r6, r5
 801bf58:	f8d8 c000 	ldr.w	ip, [r8]
 801bf5c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bf60:	9604      	str	r6, [sp, #16]
 801bf62:	fa1f f982 	uxth.w	r9, r2
 801bf66:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bf6a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bf6e:	43d2      	mvns	r2, r2
 801bf70:	b2d2      	uxtb	r2, r2
 801bf72:	fb16 f609 	smulbb	r6, r6, r9
 801bf76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf7a:	fb07 6702 	mla	r7, r7, r2, r6
 801bf7e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bf82:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bf86:	fa5f fc8c 	uxtb.w	ip, ip
 801bf8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bf8e:	fa5f fe8e 	uxtb.w	lr, lr
 801bf92:	fb1c fc09 	smulbb	ip, ip, r9
 801bf96:	fb0e cc02 	mla	ip, lr, r2, ip
 801bf9a:	b2bf      	uxth	r7, r7
 801bf9c:	fb1a fa09 	smulbb	sl, sl, r9
 801bfa0:	fa1f fc8c 	uxth.w	ip, ip
 801bfa4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bfa8:	fb06 a602 	mla	r6, r6, r2, sl
 801bfac:	1c7a      	adds	r2, r7, #1
 801bfae:	f10c 0a01 	add.w	sl, ip, #1
 801bfb2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bfb6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bfba:	b2b6      	uxth	r6, r6
 801bfbc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bfc0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bfc4:	ea4a 0707 	orr.w	r7, sl, r7
 801bfc8:	f106 0a01 	add.w	sl, r6, #1
 801bfcc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bfd0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bfd4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bfd8:	9a04      	ldr	r2, [sp, #16]
 801bfda:	ea47 070a 	orr.w	r7, r7, sl
 801bfde:	52a7      	strh	r7, [r4, r2]
 801bfe0:	e7af      	b.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bfe2:	f04f 0e00 	mov.w	lr, #0
 801bfe6:	eba3 020e 	sub.w	r2, r3, lr
 801bfea:	2a00      	cmp	r2, #0
 801bfec:	f77f af3a 	ble.w	801be64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bff0:	9e02      	ldr	r6, [sp, #8]
 801bff2:	1402      	asrs	r2, r0, #16
 801bff4:	140d      	asrs	r5, r1, #16
 801bff6:	fb06 2505 	mla	r5, r6, r5, r2
 801bffa:	086a      	lsrs	r2, r5, #1
 801bffc:	9e03      	ldr	r6, [sp, #12]
 801bffe:	5cb2      	ldrb	r2, [r6, r2]
 801c000:	07ed      	lsls	r5, r5, #31
 801c002:	bf54      	ite	pl
 801c004:	f002 020f 	andpl.w	r2, r2, #15
 801c008:	1112      	asrmi	r2, r2, #4
 801c00a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c00e:	b2d2      	uxtb	r2, r2
 801c010:	2aff      	cmp	r2, #255	; 0xff
 801c012:	d115      	bne.n	801c040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c014:	f8d8 5000 	ldr.w	r5, [r8]
 801c018:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c01c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c020:	096a      	lsrs	r2, r5, #5
 801c022:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c026:	4332      	orrs	r2, r6
 801c028:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c02c:	432a      	orrs	r2, r5
 801c02e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c032:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c034:	4410      	add	r0, r2
 801c036:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c038:	f10e 0e01 	add.w	lr, lr, #1
 801c03c:	4411      	add	r1, r2
 801c03e:	e7d2      	b.n	801bfe6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c040:	2a00      	cmp	r2, #0
 801c042:	d0f6      	beq.n	801c032 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c044:	f8d8 7000 	ldr.w	r7, [r8]
 801c048:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c04c:	fa1f f982 	uxth.w	r9, r2
 801c050:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c054:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c058:	43d2      	mvns	r2, r2
 801c05a:	b2d2      	uxtb	r2, r2
 801c05c:	fb15 f509 	smulbb	r5, r5, r9
 801c060:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c064:	fb06 5602 	mla	r6, r6, r2, r5
 801c068:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c06c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c070:	b2ff      	uxtb	r7, r7
 801c072:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c076:	fa5f fc8c 	uxtb.w	ip, ip
 801c07a:	fb17 f709 	smulbb	r7, r7, r9
 801c07e:	fb0c 7702 	mla	r7, ip, r2, r7
 801c082:	b2b6      	uxth	r6, r6
 801c084:	fb1a fa09 	smulbb	sl, sl, r9
 801c088:	b2bf      	uxth	r7, r7
 801c08a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c08e:	fb05 a502 	mla	r5, r5, r2, sl
 801c092:	1c72      	adds	r2, r6, #1
 801c094:	f107 0a01 	add.w	sl, r7, #1
 801c098:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c09c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c0a0:	b2ad      	uxth	r5, r5
 801c0a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c0a6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c0aa:	ea4a 0606 	orr.w	r6, sl, r6
 801c0ae:	f105 0a01 	add.w	sl, r5, #1
 801c0b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c0b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c0ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c0be:	ea46 060a 	orr.w	r6, r6, sl
 801c0c2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c0c6:	e7b4      	b.n	801c032 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c0c8:	b007      	add	sp, #28
 801c0ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0ce:	bf00      	nop
 801c0d0:	20013454 	.word	0x20013454

0801c0d4 <_ZN8touchgfx8LCD16bppD1Ev>:
 801c0d4:	4770      	bx	lr

0801c0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c0d6:	4770      	bx	lr

0801c0d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c0d8:	4770      	bx	lr

0801c0da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c0da:	4770      	bx	lr

0801c0dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c0dc:	4770      	bx	lr

0801c0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c0de:	4770      	bx	lr

0801c0e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c0e0:	4770      	bx	lr

0801c0e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c0e2:	4770      	bx	lr

0801c0e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c0e4:	4770      	bx	lr

0801c0e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c0e6:	4770      	bx	lr

0801c0e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c0e8:	4770      	bx	lr

0801c0ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c0ea:	4770      	bx	lr

0801c0ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c0ec:	4770      	bx	lr

0801c0ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c0ee:	4770      	bx	lr

0801c0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c0f0:	4770      	bx	lr

0801c0f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c0f2:	4770      	bx	lr

0801c0f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c0f4:	4770      	bx	lr

0801c0f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c0f6:	4770      	bx	lr

0801c0f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c0f8:	4770      	bx	lr

0801c0fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c0fa:	4770      	bx	lr

0801c0fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c0fc:	4770      	bx	lr

0801c0fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c0fe:	4770      	bx	lr

0801c100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c100:	4770      	bx	lr

0801c102 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c102:	4770      	bx	lr

0801c104 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c104:	4770      	bx	lr

0801c106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c106:	4770      	bx	lr

0801c108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c108:	4770      	bx	lr

0801c10a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c10a:	4770      	bx	lr

0801c10c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c10c:	4770      	bx	lr

0801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c10e:	4770      	bx	lr

0801c110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c110:	4770      	bx	lr

0801c112 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c112:	4770      	bx	lr

0801c114 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c114:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c118:	b088      	sub	sp, #32
 801c11a:	ac08      	add	r4, sp, #32
 801c11c:	4606      	mov	r6, r0
 801c11e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c122:	4620      	mov	r0, r4
 801c124:	4688      	mov	r8, r1
 801c126:	4691      	mov	r9, r2
 801c128:	f7fd fc62 	bl	80199f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c12c:	6833      	ldr	r3, [r6, #0]
 801c12e:	4605      	mov	r5, r0
 801c130:	4620      	mov	r0, r4
 801c132:	699f      	ldr	r7, [r3, #24]
 801c134:	f7fd fb70 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c138:	4682      	mov	sl, r0
 801c13a:	4620      	mov	r0, r4
 801c13c:	f7fd fba0 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c140:	9500      	str	r5, [sp, #0]
 801c142:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c146:	464b      	mov	r3, r9
 801c148:	a806      	add	r0, sp, #24
 801c14a:	4642      	mov	r2, r8
 801c14c:	4631      	mov	r1, r6
 801c14e:	47b8      	blx	r7
 801c150:	4628      	mov	r0, r5
 801c152:	b008      	add	sp, #32
 801c154:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c158 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c158:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c15c:	2300      	movs	r3, #0
 801c15e:	9300      	str	r3, [sp, #0]
 801c160:	4b3d      	ldr	r3, [pc, #244]	; (801c258 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c162:	781b      	ldrb	r3, [r3, #0]
 801c164:	2b00      	cmp	r3, #0
 801c166:	d137      	bne.n	801c1d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c168:	4a3c      	ldr	r2, [pc, #240]	; (801c25c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c16a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c16e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c172:	2b00      	cmp	r3, #0
 801c174:	d132      	bne.n	801c1dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c176:	4b3a      	ldr	r3, [pc, #232]	; (801c260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c178:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c17c:	6808      	ldr	r0, [r1, #0]
 801c17e:	6849      	ldr	r1, [r1, #4]
 801c180:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c184:	ac02      	add	r4, sp, #8
 801c186:	ab02      	add	r3, sp, #8
 801c188:	c303      	stmia	r3!, {r0, r1}
 801c18a:	4669      	mov	r1, sp
 801c18c:	4620      	mov	r0, r4
 801c18e:	f7f9 fd83 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c192:	4668      	mov	r0, sp
 801c194:	f7f9 fd3c 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c198:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c19c:	f8bd 2000 	ldrh.w	r2, [sp]
 801c1a0:	4d30      	ldr	r5, [pc, #192]	; (801c264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c1a2:	4413      	add	r3, r2
 801c1a4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c1a8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c1ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c1b0:	6828      	ldr	r0, [r5, #0]
 801c1b2:	4413      	add	r3, r2
 801c1b4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c1b8:	6803      	ldr	r3, [r0, #0]
 801c1ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c1bc:	4798      	blx	r3
 801c1be:	f010 0f01 	tst.w	r0, #1
 801c1c2:	462f      	mov	r7, r5
 801c1c4:	d00c      	beq.n	801c1e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c1c6:	6828      	ldr	r0, [r5, #0]
 801c1c8:	6803      	ldr	r3, [r0, #0]
 801c1ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c1ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c1d0:	4798      	blx	r3
 801c1d2:	b004      	add	sp, #16
 801c1d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c1d8:	4a21      	ldr	r2, [pc, #132]	; (801c260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c1da:	e7c6      	b.n	801c16a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c1dc:	4b1f      	ldr	r3, [pc, #124]	; (801c25c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c1de:	e7cb      	b.n	801c178 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c1e0:	6838      	ldr	r0, [r7, #0]
 801c1e2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c1e6:	6803      	ldr	r3, [r0, #0]
 801c1e8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c1ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c1ee:	4798      	blx	r3
 801c1f0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c1f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c1f8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c1fc:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c200:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c204:	6838      	ldr	r0, [r7, #0]
 801c206:	6803      	ldr	r3, [r0, #0]
 801c208:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c20a:	4798      	blx	r3
 801c20c:	4a13      	ldr	r2, [pc, #76]	; (801c25c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c20e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c212:	8813      	ldrh	r3, [r2, #0]
 801c214:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c218:	fb03 1404 	mla	r4, r3, r4, r1
 801c21c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c220:	435d      	muls	r5, r3
 801c222:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c226:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c22a:	4691      	mov	r9, r2
 801c22c:	6838      	ldr	r0, [r7, #0]
 801c22e:	42ac      	cmp	r4, r5
 801c230:	6803      	ldr	r3, [r0, #0]
 801c232:	d20e      	bcs.n	801c252 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c234:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c238:	4632      	mov	r2, r6
 801c23a:	4643      	mov	r3, r8
 801c23c:	4621      	mov	r1, r4
 801c23e:	47d0      	blx	sl
 801c240:	f8b9 3000 	ldrh.w	r3, [r9]
 801c244:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c248:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c24c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c250:	e7ec      	b.n	801c22c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c254:	4798      	blx	r3
 801c256:	e7bc      	b.n	801c1d2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c258:	2001343c 	.word	0x2001343c
 801c25c:	2001343e 	.word	0x2001343e
 801c260:	20013440 	.word	0x20013440
 801c264:	20013444 	.word	0x20013444

0801c268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c26c:	b08b      	sub	sp, #44	; 0x2c
 801c26e:	460f      	mov	r7, r1
 801c270:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c274:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c278:	4616      	mov	r6, r2
 801c27a:	f1bb 0f00 	cmp.w	fp, #0
 801c27e:	d04a      	beq.n	801c316 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c280:	6810      	ldr	r0, [r2, #0]
 801c282:	6851      	ldr	r1, [r2, #4]
 801c284:	ad06      	add	r5, sp, #24
 801c286:	c503      	stmia	r5!, {r0, r1}
 801c288:	6818      	ldr	r0, [r3, #0]
 801c28a:	6859      	ldr	r1, [r3, #4]
 801c28c:	ad08      	add	r5, sp, #32
 801c28e:	c503      	stmia	r5!, {r0, r1}
 801c290:	a806      	add	r0, sp, #24
 801c292:	f7f9 fcbd 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c296:	4631      	mov	r1, r6
 801c298:	a808      	add	r0, sp, #32
 801c29a:	f7f9 fcfd 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c29e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c2a2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c2a6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c2aa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c2ae:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c2b2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c2b6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c2ba:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c2be:	4f5f      	ldr	r7, [pc, #380]	; (801c43c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c2c0:	440a      	add	r2, r1
 801c2c2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c2c6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c2ca:	6838      	ldr	r0, [r7, #0]
 801c2cc:	4413      	add	r3, r2
 801c2ce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c2d2:	6803      	ldr	r3, [r0, #0]
 801c2d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c2d6:	4798      	blx	r3
 801c2d8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c2dc:	46b9      	mov	r9, r7
 801c2de:	d11d      	bne.n	801c31c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c2e0:	b9fc      	cbnz	r4, 801c322 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c2e2:	f010 0f01 	tst.w	r0, #1
 801c2e6:	d01c      	beq.n	801c322 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c2e8:	f8d9 0000 	ldr.w	r0, [r9]
 801c2ec:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c2f0:	6801      	ldr	r1, [r0, #0]
 801c2f2:	f8cd b00c 	str.w	fp, [sp, #12]
 801c2f6:	2700      	movs	r7, #0
 801c2f8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c2fc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c300:	9402      	str	r4, [sp, #8]
 801c302:	b2ad      	uxth	r5, r5
 801c304:	fa1f f488 	uxth.w	r4, r8
 801c308:	9501      	str	r5, [sp, #4]
 801c30a:	9400      	str	r4, [sp, #0]
 801c30c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c30e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c312:	4631      	mov	r1, r6
 801c314:	47a0      	blx	r4
 801c316:	b00b      	add	sp, #44	; 0x2c
 801c318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c31c:	f010 0f04 	tst.w	r0, #4
 801c320:	e7e1      	b.n	801c2e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c322:	f8d9 0000 	ldr.w	r0, [r9]
 801c326:	6803      	ldr	r3, [r0, #0]
 801c328:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c32a:	4798      	blx	r3
 801c32c:	4b44      	ldr	r3, [pc, #272]	; (801c440 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c32e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c332:	881a      	ldrh	r2, [r3, #0]
 801c334:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c338:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c33c:	fb02 1404 	mla	r4, r2, r4, r1
 801c340:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c344:	469a      	mov	sl, r3
 801c346:	fb05 f502 	mul.w	r5, r5, r2
 801c34a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c34e:	d059      	beq.n	801c404 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c350:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c354:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c358:	fa1f f28b 	uxth.w	r2, fp
 801c35c:	fa1f f989 	uxth.w	r9, r9
 801c360:	469e      	mov	lr, r3
 801c362:	42ac      	cmp	r4, r5
 801c364:	d264      	bcs.n	801c430 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c366:	eb04 0a07 	add.w	sl, r4, r7
 801c36a:	4554      	cmp	r4, sl
 801c36c:	d23d      	bcs.n	801c3ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c36e:	8821      	ldrh	r1, [r4, #0]
 801c370:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c374:	1208      	asrs	r0, r1, #8
 801c376:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c37a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c37e:	fb10 f009 	smulbb	r0, r0, r9
 801c382:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c386:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c38a:	00c9      	lsls	r1, r1, #3
 801c38c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c390:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c394:	10d8      	asrs	r0, r3, #3
 801c396:	b2c9      	uxtb	r1, r1
 801c398:	00db      	lsls	r3, r3, #3
 801c39a:	fa1f fc8c 	uxth.w	ip, ip
 801c39e:	fb1b fb09 	smulbb	fp, fp, r9
 801c3a2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c3a6:	b2db      	uxtb	r3, r3
 801c3a8:	fb11 f109 	smulbb	r1, r1, r9
 801c3ac:	fb00 b002 	mla	r0, r0, r2, fp
 801c3b0:	fb03 1302 	mla	r3, r3, r2, r1
 801c3b4:	f10c 0b01 	add.w	fp, ip, #1
 801c3b8:	b29b      	uxth	r3, r3
 801c3ba:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c3be:	b280      	uxth	r0, r0
 801c3c0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c3c4:	f103 0c01 	add.w	ip, r3, #1
 801c3c8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c3cc:	1c43      	adds	r3, r0, #1
 801c3ce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c3d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c3d6:	0940      	lsrs	r0, r0, #5
 801c3d8:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c3dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3e0:	ea4c 0c00 	orr.w	ip, ip, r0
 801c3e4:	f824 cb02 	strh.w	ip, [r4], #2
 801c3e8:	e7bf      	b.n	801c36a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c3ea:	f8be 3000 	ldrh.w	r3, [lr]
 801c3ee:	eba3 0308 	sub.w	r3, r3, r8
 801c3f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c3f6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c3fa:	eba3 0308 	sub.w	r3, r3, r8
 801c3fe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c402:	e7ae      	b.n	801c362 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c404:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c408:	f8d9 0000 	ldr.w	r0, [r9]
 801c40c:	42ac      	cmp	r4, r5
 801c40e:	6803      	ldr	r3, [r0, #0]
 801c410:	d20e      	bcs.n	801c430 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c412:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c416:	4632      	mov	r2, r6
 801c418:	463b      	mov	r3, r7
 801c41a:	4621      	mov	r1, r4
 801c41c:	47c0      	blx	r8
 801c41e:	f8ba 3000 	ldrh.w	r3, [sl]
 801c422:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c426:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c42a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c42e:	e7eb      	b.n	801c408 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c430:	4b02      	ldr	r3, [pc, #8]	; (801c43c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c432:	6818      	ldr	r0, [r3, #0]
 801c434:	6803      	ldr	r3, [r0, #0]
 801c436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c438:	4798      	blx	r3
 801c43a:	e76c      	b.n	801c316 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c43c:	20013444 	.word	0x20013444
 801c440:	2001343e 	.word	0x2001343e

0801c444 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c444:	b510      	push	{r4, lr}
 801c446:	2184      	movs	r1, #132	; 0x84
 801c448:	4604      	mov	r4, r0
 801c44a:	f00d fe4a 	bl	802a0e2 <_ZdlPvj>
 801c44e:	4620      	mov	r0, r4
 801c450:	bd10      	pop	{r4, pc}

0801c452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c452:	b510      	push	{r4, lr}
 801c454:	2104      	movs	r1, #4
 801c456:	4604      	mov	r4, r0
 801c458:	f00d fe43 	bl	802a0e2 <_ZdlPvj>
 801c45c:	4620      	mov	r0, r4
 801c45e:	bd10      	pop	{r4, pc}

0801c460 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c460:	b510      	push	{r4, lr}
 801c462:	2104      	movs	r1, #4
 801c464:	4604      	mov	r4, r0
 801c466:	f00d fe3c 	bl	802a0e2 <_ZdlPvj>
 801c46a:	4620      	mov	r0, r4
 801c46c:	bd10      	pop	{r4, pc}

0801c46e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c46e:	b510      	push	{r4, lr}
 801c470:	f640 0144 	movw	r1, #2116	; 0x844
 801c474:	4604      	mov	r4, r0
 801c476:	f00d fe34 	bl	802a0e2 <_ZdlPvj>
 801c47a:	4620      	mov	r0, r4
 801c47c:	bd10      	pop	{r4, pc}

0801c47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c47e:	b510      	push	{r4, lr}
 801c480:	2104      	movs	r1, #4
 801c482:	4604      	mov	r4, r0
 801c484:	f00d fe2d 	bl	802a0e2 <_ZdlPvj>
 801c488:	4620      	mov	r0, r4
 801c48a:	bd10      	pop	{r4, pc}

0801c48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c48c:	b510      	push	{r4, lr}
 801c48e:	2104      	movs	r1, #4
 801c490:	4604      	mov	r4, r0
 801c492:	f00d fe26 	bl	802a0e2 <_ZdlPvj>
 801c496:	4620      	mov	r0, r4
 801c498:	bd10      	pop	{r4, pc}

0801c49a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c49a:	b510      	push	{r4, lr}
 801c49c:	2104      	movs	r1, #4
 801c49e:	4604      	mov	r4, r0
 801c4a0:	f00d fe1f 	bl	802a0e2 <_ZdlPvj>
 801c4a4:	4620      	mov	r0, r4
 801c4a6:	bd10      	pop	{r4, pc}

0801c4a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c4a8:	b510      	push	{r4, lr}
 801c4aa:	2104      	movs	r1, #4
 801c4ac:	4604      	mov	r4, r0
 801c4ae:	f00d fe18 	bl	802a0e2 <_ZdlPvj>
 801c4b2:	4620      	mov	r0, r4
 801c4b4:	bd10      	pop	{r4, pc}

0801c4b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c4b6:	b510      	push	{r4, lr}
 801c4b8:	2104      	movs	r1, #4
 801c4ba:	4604      	mov	r4, r0
 801c4bc:	f00d fe11 	bl	802a0e2 <_ZdlPvj>
 801c4c0:	4620      	mov	r0, r4
 801c4c2:	bd10      	pop	{r4, pc}

0801c4c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c4c4:	b510      	push	{r4, lr}
 801c4c6:	2104      	movs	r1, #4
 801c4c8:	4604      	mov	r4, r0
 801c4ca:	f00d fe0a 	bl	802a0e2 <_ZdlPvj>
 801c4ce:	4620      	mov	r0, r4
 801c4d0:	bd10      	pop	{r4, pc}

0801c4d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c4d2:	b510      	push	{r4, lr}
 801c4d4:	2104      	movs	r1, #4
 801c4d6:	4604      	mov	r4, r0
 801c4d8:	f00d fe03 	bl	802a0e2 <_ZdlPvj>
 801c4dc:	4620      	mov	r0, r4
 801c4de:	bd10      	pop	{r4, pc}

0801c4e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c4e0:	b510      	push	{r4, lr}
 801c4e2:	2104      	movs	r1, #4
 801c4e4:	4604      	mov	r4, r0
 801c4e6:	f00d fdfc 	bl	802a0e2 <_ZdlPvj>
 801c4ea:	4620      	mov	r0, r4
 801c4ec:	bd10      	pop	{r4, pc}

0801c4ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c4ee:	b510      	push	{r4, lr}
 801c4f0:	2104      	movs	r1, #4
 801c4f2:	4604      	mov	r4, r0
 801c4f4:	f00d fdf5 	bl	802a0e2 <_ZdlPvj>
 801c4f8:	4620      	mov	r0, r4
 801c4fa:	bd10      	pop	{r4, pc}

0801c4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c4fc:	b510      	push	{r4, lr}
 801c4fe:	2104      	movs	r1, #4
 801c500:	4604      	mov	r4, r0
 801c502:	f00d fdee 	bl	802a0e2 <_ZdlPvj>
 801c506:	4620      	mov	r0, r4
 801c508:	bd10      	pop	{r4, pc}

0801c50a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c50a:	b510      	push	{r4, lr}
 801c50c:	2104      	movs	r1, #4
 801c50e:	4604      	mov	r4, r0
 801c510:	f00d fde7 	bl	802a0e2 <_ZdlPvj>
 801c514:	4620      	mov	r0, r4
 801c516:	bd10      	pop	{r4, pc}

0801c518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c518:	b510      	push	{r4, lr}
 801c51a:	2104      	movs	r1, #4
 801c51c:	4604      	mov	r4, r0
 801c51e:	f00d fde0 	bl	802a0e2 <_ZdlPvj>
 801c522:	4620      	mov	r0, r4
 801c524:	bd10      	pop	{r4, pc}

0801c526 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c526:	b510      	push	{r4, lr}
 801c528:	2104      	movs	r1, #4
 801c52a:	4604      	mov	r4, r0
 801c52c:	f00d fdd9 	bl	802a0e2 <_ZdlPvj>
 801c530:	4620      	mov	r0, r4
 801c532:	bd10      	pop	{r4, pc}

0801c534 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c534:	b510      	push	{r4, lr}
 801c536:	2104      	movs	r1, #4
 801c538:	4604      	mov	r4, r0
 801c53a:	f00d fdd2 	bl	802a0e2 <_ZdlPvj>
 801c53e:	4620      	mov	r0, r4
 801c540:	bd10      	pop	{r4, pc}

0801c542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c542:	b510      	push	{r4, lr}
 801c544:	2104      	movs	r1, #4
 801c546:	4604      	mov	r4, r0
 801c548:	f00d fdcb 	bl	802a0e2 <_ZdlPvj>
 801c54c:	4620      	mov	r0, r4
 801c54e:	bd10      	pop	{r4, pc}

0801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c550:	b510      	push	{r4, lr}
 801c552:	2104      	movs	r1, #4
 801c554:	4604      	mov	r4, r0
 801c556:	f00d fdc4 	bl	802a0e2 <_ZdlPvj>
 801c55a:	4620      	mov	r0, r4
 801c55c:	bd10      	pop	{r4, pc}

0801c55e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c55e:	b510      	push	{r4, lr}
 801c560:	2104      	movs	r1, #4
 801c562:	4604      	mov	r4, r0
 801c564:	f00d fdbd 	bl	802a0e2 <_ZdlPvj>
 801c568:	4620      	mov	r0, r4
 801c56a:	bd10      	pop	{r4, pc}

0801c56c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c56c:	b510      	push	{r4, lr}
 801c56e:	2104      	movs	r1, #4
 801c570:	4604      	mov	r4, r0
 801c572:	f00d fdb6 	bl	802a0e2 <_ZdlPvj>
 801c576:	4620      	mov	r0, r4
 801c578:	bd10      	pop	{r4, pc}

0801c57a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c57a:	b510      	push	{r4, lr}
 801c57c:	2104      	movs	r1, #4
 801c57e:	4604      	mov	r4, r0
 801c580:	f00d fdaf 	bl	802a0e2 <_ZdlPvj>
 801c584:	4620      	mov	r0, r4
 801c586:	bd10      	pop	{r4, pc}

0801c588 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c588:	b510      	push	{r4, lr}
 801c58a:	2104      	movs	r1, #4
 801c58c:	4604      	mov	r4, r0
 801c58e:	f00d fda8 	bl	802a0e2 <_ZdlPvj>
 801c592:	4620      	mov	r0, r4
 801c594:	bd10      	pop	{r4, pc}

0801c596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c596:	b510      	push	{r4, lr}
 801c598:	2104      	movs	r1, #4
 801c59a:	4604      	mov	r4, r0
 801c59c:	f00d fda1 	bl	802a0e2 <_ZdlPvj>
 801c5a0:	4620      	mov	r0, r4
 801c5a2:	bd10      	pop	{r4, pc}

0801c5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c5a4:	b510      	push	{r4, lr}
 801c5a6:	2104      	movs	r1, #4
 801c5a8:	4604      	mov	r4, r0
 801c5aa:	f00d fd9a 	bl	802a0e2 <_ZdlPvj>
 801c5ae:	4620      	mov	r0, r4
 801c5b0:	bd10      	pop	{r4, pc}

0801c5b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c5b2:	b510      	push	{r4, lr}
 801c5b4:	2104      	movs	r1, #4
 801c5b6:	4604      	mov	r4, r0
 801c5b8:	f00d fd93 	bl	802a0e2 <_ZdlPvj>
 801c5bc:	4620      	mov	r0, r4
 801c5be:	bd10      	pop	{r4, pc}

0801c5c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c5c0:	b510      	push	{r4, lr}
 801c5c2:	2104      	movs	r1, #4
 801c5c4:	4604      	mov	r4, r0
 801c5c6:	f00d fd8c 	bl	802a0e2 <_ZdlPvj>
 801c5ca:	4620      	mov	r0, r4
 801c5cc:	bd10      	pop	{r4, pc}

0801c5ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c5ce:	b510      	push	{r4, lr}
 801c5d0:	2104      	movs	r1, #4
 801c5d2:	4604      	mov	r4, r0
 801c5d4:	f00d fd85 	bl	802a0e2 <_ZdlPvj>
 801c5d8:	4620      	mov	r0, r4
 801c5da:	bd10      	pop	{r4, pc}

0801c5dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c5dc:	b510      	push	{r4, lr}
 801c5de:	2104      	movs	r1, #4
 801c5e0:	4604      	mov	r4, r0
 801c5e2:	f00d fd7e 	bl	802a0e2 <_ZdlPvj>
 801c5e6:	4620      	mov	r0, r4
 801c5e8:	bd10      	pop	{r4, pc}

0801c5ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c5ea:	b510      	push	{r4, lr}
 801c5ec:	2104      	movs	r1, #4
 801c5ee:	4604      	mov	r4, r0
 801c5f0:	f00d fd77 	bl	802a0e2 <_ZdlPvj>
 801c5f4:	4620      	mov	r0, r4
 801c5f6:	bd10      	pop	{r4, pc}

0801c5f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c5f8:	b510      	push	{r4, lr}
 801c5fa:	2104      	movs	r1, #4
 801c5fc:	4604      	mov	r4, r0
 801c5fe:	f00d fd70 	bl	802a0e2 <_ZdlPvj>
 801c602:	4620      	mov	r0, r4
 801c604:	bd10      	pop	{r4, pc}
	...

0801c608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c60c:	b08f      	sub	sp, #60	; 0x3c
 801c60e:	461c      	mov	r4, r3
 801c610:	9205      	str	r2, [sp, #20]
 801c612:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c616:	9100      	str	r1, [sp, #0]
 801c618:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c61a:	9201      	str	r2, [sp, #4]
 801c61c:	2a00      	cmp	r2, #0
 801c61e:	f000 8115 	beq.w	801c84c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c622:	6820      	ldr	r0, [r4, #0]
 801c624:	6861      	ldr	r1, [r4, #4]
 801c626:	aa0a      	add	r2, sp, #40	; 0x28
 801c628:	c203      	stmia	r2!, {r0, r1}
 801c62a:	6818      	ldr	r0, [r3, #0]
 801c62c:	6859      	ldr	r1, [r3, #4]
 801c62e:	aa0c      	add	r2, sp, #48	; 0x30
 801c630:	c203      	stmia	r2!, {r0, r1}
 801c632:	a80a      	add	r0, sp, #40	; 0x28
 801c634:	f7f9 faec 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c638:	4621      	mov	r1, r4
 801c63a:	a80c      	add	r0, sp, #48	; 0x30
 801c63c:	f7f9 fb2c 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c640:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c644:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c648:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c64c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c650:	bfde      	ittt	le
 801c652:	b2b3      	uxthle	r3, r6
 801c654:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c658:	fb92 f3f3 	sdivle	r3, r2, r3
 801c65c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c660:	bfc8      	it	gt
 801c662:	2301      	movgt	r3, #1
 801c664:	fb92 f1f3 	sdiv	r1, r2, r3
 801c668:	fa1f fc81 	uxth.w	ip, r1
 801c66c:	fb0c 2413 	mls	r4, ip, r3, r2
 801c670:	fb14 f406 	smulbb	r4, r4, r6
 801c674:	441d      	add	r5, r3
 801c676:	4404      	add	r4, r0
 801c678:	4661      	mov	r1, ip
 801c67a:	3d01      	subs	r5, #1
 801c67c:	b2a4      	uxth	r4, r4
 801c67e:	fb95 f5f3 	sdiv	r5, r5, r3
 801c682:	b131      	cbz	r1, 801c692 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c684:	9b05      	ldr	r3, [sp, #20]
 801c686:	9900      	ldr	r1, [sp, #0]
 801c688:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c68c:	ba1b      	rev	r3, r3
 801c68e:	4419      	add	r1, r3
 801c690:	9100      	str	r1, [sp, #0]
 801c692:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c696:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c69a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c69e:	4418      	add	r0, r3
 801c6a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c6a4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c6a8:	441a      	add	r2, r3
 801c6aa:	4b6a      	ldr	r3, [pc, #424]	; (801c854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c6ac:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c6b0:	6818      	ldr	r0, [r3, #0]
 801c6b2:	6803      	ldr	r3, [r0, #0]
 801c6b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6b6:	4798      	blx	r3
 801c6b8:	4967      	ldr	r1, [pc, #412]	; (801c858 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c6ba:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c6be:	880b      	ldrh	r3, [r1, #0]
 801c6c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c6c4:	9109      	str	r1, [sp, #36]	; 0x24
 801c6c6:	fb03 c202 	mla	r2, r3, r2, ip
 801c6ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c6ce:	4373      	muls	r3, r6
 801c6d0:	b2ad      	uxth	r5, r5
 801c6d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c6d6:	00ad      	lsls	r5, r5, #2
 801c6d8:	9306      	str	r3, [sp, #24]
 801c6da:	1d2b      	adds	r3, r5, #4
 801c6dc:	9307      	str	r3, [sp, #28]
 801c6de:	9b01      	ldr	r3, [sp, #4]
 801c6e0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c6e4:	9103      	str	r1, [sp, #12]
 801c6e6:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c6ea:	2c00      	cmp	r4, #0
 801c6ec:	bf0c      	ite	eq
 801c6ee:	46c6      	moveq	lr, r8
 801c6f0:	f04f 0e00 	movne.w	lr, #0
 801c6f4:	2300      	movs	r3, #0
 801c6f6:	b292      	uxth	r2, r2
 801c6f8:	fa1f fe8e 	uxth.w	lr, lr
 801c6fc:	9302      	str	r3, [sp, #8]
 801c6fe:	9204      	str	r2, [sp, #16]
 801c700:	9a06      	ldr	r2, [sp, #24]
 801c702:	4282      	cmp	r2, r0
 801c704:	f240 809d 	bls.w	801c842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c708:	b963      	cbnz	r3, 801c724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c70a:	9b00      	ldr	r3, [sp, #0]
 801c70c:	781a      	ldrb	r2, [r3, #0]
 801c70e:	0993      	lsrs	r3, r2, #6
 801c710:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c714:	9202      	str	r2, [sp, #8]
 801c716:	1e5a      	subs	r2, r3, #1
 801c718:	2a02      	cmp	r2, #2
 801c71a:	d815      	bhi.n	801c748 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c71c:	9a00      	ldr	r2, [sp, #0]
 801c71e:	3201      	adds	r2, #1
 801c720:	9200      	str	r2, [sp, #0]
 801c722:	b29b      	uxth	r3, r3
 801c724:	b1b4      	cbz	r4, 801c754 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c726:	429c      	cmp	r4, r3
 801c728:	bf95      	itete	ls
 801c72a:	1b1c      	subls	r4, r3, r4
 801c72c:	1ae4      	subhi	r4, r4, r3
 801c72e:	fa1f fa84 	uxthls.w	sl, r4
 801c732:	b2a4      	uxthhi	r4, r4
 801c734:	bf87      	ittee	hi
 801c736:	4671      	movhi	r1, lr
 801c738:	f04f 0a00 	movhi.w	sl, #0
 801c73c:	fa1f f188 	uxthls.w	r1, r8
 801c740:	2400      	movls	r4, #0
 801c742:	4653      	mov	r3, sl
 801c744:	468e      	mov	lr, r1
 801c746:	e7db      	b.n	801c700 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c748:	9a00      	ldr	r2, [sp, #0]
 801c74a:	9b00      	ldr	r3, [sp, #0]
 801c74c:	3202      	adds	r2, #2
 801c74e:	785b      	ldrb	r3, [r3, #1]
 801c750:	9200      	str	r2, [sp, #0]
 801c752:	e7e7      	b.n	801c724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c754:	2202      	movs	r2, #2
 801c756:	4615      	mov	r5, r2
 801c758:	9907      	ldr	r1, [sp, #28]
 801c75a:	9a02      	ldr	r2, [sp, #8]
 801c75c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c760:	9905      	ldr	r1, [sp, #20]
 801c762:	4573      	cmp	r3, lr
 801c764:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c768:	9a01      	ldr	r2, [sp, #4]
 801c76a:	bf2b      	itete	cs
 801c76c:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c770:	ebae 0103 	subcc.w	r1, lr, r3
 801c774:	46f1      	movcs	r9, lr
 801c776:	4699      	movcc	r9, r3
 801c778:	bf27      	ittee	cs
 801c77a:	fa1f fa8a 	uxthcs.w	sl, sl
 801c77e:	4621      	movcs	r1, r4
 801c780:	b289      	uxthcc	r1, r1
 801c782:	46a2      	movcc	sl, r4
 801c784:	2aff      	cmp	r2, #255	; 0xff
 801c786:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c78a:	d105      	bne.n	801c798 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c78c:	4481      	add	r9, r0
 801c78e:	4581      	cmp	r9, r0
 801c790:	d045      	beq.n	801c81e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c792:	f820 cb02 	strh.w	ip, [r0], #2
 801c796:	e7fa      	b.n	801c78e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c798:	9d03      	ldr	r5, [sp, #12]
 801c79a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c79e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c7a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c7a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7aa:	436a      	muls	r2, r5
 801c7ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c7b0:	fa5f fc8c 	uxtb.w	ip, ip
 801c7b4:	9208      	str	r2, [sp, #32]
 801c7b6:	fb0b fb05 	mul.w	fp, fp, r5
 801c7ba:	fb0c fc05 	mul.w	ip, ip, r5
 801c7be:	4481      	add	r9, r0
 801c7c0:	4581      	cmp	r9, r0
 801c7c2:	d02c      	beq.n	801c81e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c7c4:	8802      	ldrh	r2, [r0, #0]
 801c7c6:	9d04      	ldr	r5, [sp, #16]
 801c7c8:	9f04      	ldr	r7, [sp, #16]
 801c7ca:	1216      	asrs	r6, r2, #8
 801c7cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c7d0:	fb16 f605 	smulbb	r6, r6, r5
 801c7d4:	9d08      	ldr	r5, [sp, #32]
 801c7d6:	442e      	add	r6, r5
 801c7d8:	10d5      	asrs	r5, r2, #3
 801c7da:	00d2      	lsls	r2, r2, #3
 801c7dc:	b2d2      	uxtb	r2, r2
 801c7de:	fb12 f207 	smulbb	r2, r2, r7
 801c7e2:	b2b6      	uxth	r6, r6
 801c7e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c7e8:	4462      	add	r2, ip
 801c7ea:	fb15 f507 	smulbb	r5, r5, r7
 801c7ee:	b292      	uxth	r2, r2
 801c7f0:	1c77      	adds	r7, r6, #1
 801c7f2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c7f6:	1c57      	adds	r7, r2, #1
 801c7f8:	445d      	add	r5, fp
 801c7fa:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c7fe:	b2ad      	uxth	r5, r5
 801c800:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c804:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c808:	4316      	orrs	r6, r2
 801c80a:	1c6a      	adds	r2, r5, #1
 801c80c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c810:	096d      	lsrs	r5, r5, #5
 801c812:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c816:	432e      	orrs	r6, r5
 801c818:	f820 6b02 	strh.w	r6, [r0], #2
 801c81c:	e7d0      	b.n	801c7c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c81e:	4573      	cmp	r3, lr
 801c820:	d38f      	bcc.n	801c742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c822:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c826:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c828:	fa1f f188 	uxth.w	r1, r8
 801c82c:	1a64      	subs	r4, r4, r1
 801c82e:	881b      	ldrh	r3, [r3, #0]
 801c830:	b2a4      	uxth	r4, r4
 801c832:	2c00      	cmp	r4, #0
 801c834:	eba3 0308 	sub.w	r3, r3, r8
 801c838:	bf18      	it	ne
 801c83a:	2100      	movne	r1, #0
 801c83c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c840:	e77f      	b.n	801c742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c842:	4b04      	ldr	r3, [pc, #16]	; (801c854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c844:	6818      	ldr	r0, [r3, #0]
 801c846:	6803      	ldr	r3, [r0, #0]
 801c848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c84a:	4798      	blx	r3
 801c84c:	b00f      	add	sp, #60	; 0x3c
 801c84e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c852:	bf00      	nop
 801c854:	20013444 	.word	0x20013444
 801c858:	2001343e 	.word	0x2001343e

0801c85c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c860:	b09f      	sub	sp, #124	; 0x7c
 801c862:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c866:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c86a:	9209      	str	r2, [sp, #36]	; 0x24
 801c86c:	461d      	mov	r5, r3
 801c86e:	4604      	mov	r4, r0
 801c870:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c872:	2a00      	cmp	r2, #0
 801c874:	f000 81eb 	beq.w	801cc4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c878:	6828      	ldr	r0, [r5, #0]
 801c87a:	6869      	ldr	r1, [r5, #4]
 801c87c:	aa1a      	add	r2, sp, #104	; 0x68
 801c87e:	c203      	stmia	r2!, {r0, r1}
 801c880:	6818      	ldr	r0, [r3, #0]
 801c882:	6859      	ldr	r1, [r3, #4]
 801c884:	aa1c      	add	r2, sp, #112	; 0x70
 801c886:	c203      	stmia	r2!, {r0, r1}
 801c888:	a81a      	add	r0, sp, #104	; 0x68
 801c88a:	f7f9 f9c1 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c88e:	4629      	mov	r1, r5
 801c890:	a81c      	add	r0, sp, #112	; 0x70
 801c892:	f7f9 fa01 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c896:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c89a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c89e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c8a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c8a6:	bfd7      	itett	le
 801c8a8:	b29a      	uxthle	r2, r3
 801c8aa:	2201      	movgt	r2, #1
 801c8ac:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c8b0:	fb91 f2f2 	sdivle	r2, r1, r2
 801c8b4:	9202      	str	r2, [sp, #8]
 801c8b6:	9802      	ldr	r0, [sp, #8]
 801c8b8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c8bc:	fb92 f0f0 	sdiv	r0, r2, r0
 801c8c0:	b280      	uxth	r0, r0
 801c8c2:	9010      	str	r0, [sp, #64]	; 0x40
 801c8c4:	9902      	ldr	r1, [sp, #8]
 801c8c6:	9802      	ldr	r0, [sp, #8]
 801c8c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c8ca:	4488      	add	r8, r1
 801c8cc:	fb05 2510 	mls	r5, r5, r0, r2
 801c8d0:	fb15 f503 	smulbb	r5, r5, r3
 801c8d4:	f108 38ff 	add.w	r8, r8, #4294967295
 801c8d8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c8dc:	fb98 f8f1 	sdiv	r8, r8, r1
 801c8e0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c8e4:	440d      	add	r5, r1
 801c8e6:	4419      	add	r1, r3
 801c8e8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c8ec:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c8f0:	441a      	add	r2, r3
 801c8f2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c8f6:	9304      	str	r3, [sp, #16]
 801c8f8:	4b95      	ldr	r3, [pc, #596]	; (801cb50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c8fa:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c8fe:	6818      	ldr	r0, [r3, #0]
 801c900:	6803      	ldr	r3, [r0, #0]
 801c902:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c904:	4798      	blx	r3
 801c906:	4b93      	ldr	r3, [pc, #588]	; (801cb54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c908:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c90c:	881a      	ldrh	r2, [r3, #0]
 801c90e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c912:	9318      	str	r3, [sp, #96]	; 0x60
 801c914:	fb02 7101 	mla	r1, r2, r1, r7
 801c918:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c91c:	4356      	muls	r6, r2
 801c91e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c922:	f108 0801 	add.w	r8, r8, #1
 801c926:	920a      	str	r2, [sp, #40]	; 0x28
 801c928:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c92a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c92e:	930f      	str	r3, [sp, #60]	; 0x3c
 801c930:	fa1f f888 	uxth.w	r8, r8
 801c934:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c938:	f108 0204 	add.w	r2, r8, #4
 801c93c:	9211      	str	r2, [sp, #68]	; 0x44
 801c93e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c940:	4b85      	ldr	r3, [pc, #532]	; (801cb58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c942:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c946:	b2ad      	uxth	r5, r5
 801c948:	9215      	str	r2, [sp, #84]	; 0x54
 801c94a:	2d00      	cmp	r5, #0
 801c94c:	9a04      	ldr	r2, [sp, #16]
 801c94e:	f04f 0100 	mov.w	r1, #0
 801c952:	bf18      	it	ne
 801c954:	2200      	movne	r2, #0
 801c956:	1b1b      	subs	r3, r3, r4
 801c958:	b292      	uxth	r2, r2
 801c95a:	910d      	str	r1, [sp, #52]	; 0x34
 801c95c:	9319      	str	r3, [sp, #100]	; 0x64
 801c95e:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c960:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c962:	fa11 f383 	uxtah	r3, r1, r3
 801c966:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c968:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c96c:	3304      	adds	r3, #4
 801c96e:	9306      	str	r3, [sp, #24]
 801c970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c972:	4283      	cmp	r3, r0
 801c974:	f240 8166 	bls.w	801cc44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c978:	9902      	ldr	r1, [sp, #8]
 801c97a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c97e:	fbb5 f3f3 	udiv	r3, r5, r3
 801c982:	1acb      	subs	r3, r1, r3
 801c984:	b29b      	uxth	r3, r3
 801c986:	9316      	str	r3, [sp, #88]	; 0x58
 801c988:	9b06      	ldr	r3, [sp, #24]
 801c98a:	9e06      	ldr	r6, [sp, #24]
 801c98c:	7859      	ldrb	r1, [r3, #1]
 801c98e:	789b      	ldrb	r3, [r3, #2]
 801c990:	7836      	ldrb	r6, [r6, #0]
 801c992:	9612      	str	r6, [sp, #72]	; 0x48
 801c994:	021b      	lsls	r3, r3, #8
 801c996:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c99a:	9906      	ldr	r1, [sp, #24]
 801c99c:	78c9      	ldrb	r1, [r1, #3]
 801c99e:	430b      	orrs	r3, r1
 801c9a0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c9a2:	3601      	adds	r6, #1
 801c9a4:	4419      	add	r1, r3
 801c9a6:	9605      	str	r6, [sp, #20]
 801c9a8:	1c4e      	adds	r6, r1, #1
 801c9aa:	9603      	str	r6, [sp, #12]
 801c9ac:	7849      	ldrb	r1, [r1, #1]
 801c9ae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c9b0:	0209      	lsls	r1, r1, #8
 801c9b2:	5cf3      	ldrb	r3, [r6, r3]
 801c9b4:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c9b8:	4319      	orrs	r1, r3
 801c9ba:	b28b      	uxth	r3, r1
 801c9bc:	930c      	str	r3, [sp, #48]	; 0x30
 801c9be:	2300      	movs	r3, #0
 801c9c0:	f04f 0a01 	mov.w	sl, #1
 801c9c4:	9307      	str	r3, [sp, #28]
 801c9c6:	469c      	mov	ip, r3
 801c9c8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c9cc:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c9d0:	46d3      	mov	fp, sl
 801c9d2:	4657      	mov	r7, sl
 801c9d4:	930e      	str	r3, [sp, #56]	; 0x38
 801c9d6:	2d00      	cmp	r5, #0
 801c9d8:	d07e      	beq.n	801cad8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c9da:	42af      	cmp	r7, r5
 801c9dc:	d26e      	bcs.n	801cabc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c9de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9e0:	9201      	str	r2, [sp, #4]
 801c9e2:	1bed      	subs	r5, r5, r7
 801c9e4:	4283      	cmp	r3, r0
 801c9e6:	b2ad      	uxth	r5, r5
 801c9e8:	d802      	bhi.n	801c9f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c9ea:	e073      	b.n	801cad4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c9ec:	2b00      	cmp	r3, #0
 801c9ee:	d15f      	bne.n	801cab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c9f0:	9b03      	ldr	r3, [sp, #12]
 801c9f2:	785b      	ldrb	r3, [r3, #1]
 801c9f4:	f1cb 0207 	rsb	r2, fp, #7
 801c9f8:	4093      	lsls	r3, r2
 801c9fa:	005b      	lsls	r3, r3, #1
 801c9fc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ca00:	9b03      	ldr	r3, [sp, #12]
 801ca02:	781b      	ldrb	r3, [r3, #0]
 801ca04:	fa43 f30b 	asr.w	r3, r3, fp
 801ca08:	b2db      	uxtb	r3, r3
 801ca0a:	4313      	orrs	r3, r2
 801ca0c:	f10b 0201 	add.w	r2, fp, #1
 801ca10:	fa5f fb82 	uxtb.w	fp, r2
 801ca14:	9a03      	ldr	r2, [sp, #12]
 801ca16:	f1bb 0f08 	cmp.w	fp, #8
 801ca1a:	bf15      	itete	ne
 801ca1c:	3201      	addne	r2, #1
 801ca1e:	3202      	addeq	r2, #2
 801ca20:	9203      	strne	r2, [sp, #12]
 801ca22:	9203      	streq	r2, [sp, #12]
 801ca24:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ca26:	b29f      	uxth	r7, r3
 801ca28:	bf08      	it	eq
 801ca2a:	f04f 0b00 	moveq.w	fp, #0
 801ca2e:	42ba      	cmp	r2, r7
 801ca30:	d309      	bcc.n	801ca46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ca32:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801ca36:	2301      	movs	r3, #1
 801ca38:	9a05      	ldr	r2, [sp, #20]
 801ca3a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801ca3e:	d30e      	bcc.n	801ca5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801ca40:	469a      	mov	sl, r3
 801ca42:	2600      	movs	r6, #0
 801ca44:	e035      	b.n	801cab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801ca46:	9b05      	ldr	r3, [sp, #20]
 801ca48:	429f      	cmp	r7, r3
 801ca4a:	d318      	bcc.n	801ca7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801ca4c:	eb04 030a 	add.w	r3, r4, sl
 801ca50:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801ca54:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801ca58:	f10a 0301 	add.w	r3, sl, #1
 801ca5c:	b29b      	uxth	r3, r3
 801ca5e:	9a05      	ldr	r2, [sp, #20]
 801ca60:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801ca64:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ca66:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ca6a:	7116      	strb	r6, [r2, #4]
 801ca6c:	f10a 0601 	add.w	r6, sl, #1
 801ca70:	80d1      	strh	r1, [r2, #6]
 801ca72:	7156      	strb	r6, [r2, #5]
 801ca74:	9a05      	ldr	r2, [sp, #20]
 801ca76:	3201      	adds	r2, #1
 801ca78:	b292      	uxth	r2, r2
 801ca7a:	9205      	str	r2, [sp, #20]
 801ca7c:	e7e0      	b.n	801ca40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801ca7e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801ca82:	463a      	mov	r2, r7
 801ca84:	795b      	ldrb	r3, [r3, #5]
 801ca86:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801ca8a:	4426      	add	r6, r4
 801ca8c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801ca8e:	eb01 0c06 	add.w	ip, r1, r6
 801ca92:	f1bc 0f00 	cmp.w	ip, #0
 801ca96:	dd07      	ble.n	801caa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801ca98:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ca9c:	f892 c004 	ldrb.w	ip, [r2, #4]
 801caa0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801caa4:	88d2      	ldrh	r2, [r2, #6]
 801caa6:	e7f1      	b.n	801ca8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801caa8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801caac:	b29b      	uxth	r3, r3
 801caae:	e7c3      	b.n	801ca38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801cab0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cab2:	970c      	str	r7, [sp, #48]	; 0x30
 801cab4:	9a01      	ldr	r2, [sp, #4]
 801cab6:	46b4      	mov	ip, r6
 801cab8:	461f      	mov	r7, r3
 801caba:	e78c      	b.n	801c9d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801cabc:	1b7b      	subs	r3, r7, r5
 801cabe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cac2:	9201      	str	r2, [sp, #4]
 801cac4:	eb0c 0605 	add.w	r6, ip, r5
 801cac8:	b29b      	uxth	r3, r3
 801caca:	b2b6      	uxth	r6, r6
 801cacc:	2500      	movs	r5, #0
 801cace:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cad0:	4282      	cmp	r2, r0
 801cad2:	d88b      	bhi.n	801c9ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cad4:	9a01      	ldr	r2, [sp, #4]
 801cad6:	e74b      	b.n	801c970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801cad8:	4297      	cmp	r7, r2
 801cada:	d332      	bcc.n	801cb42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801cadc:	1abb      	subs	r3, r7, r2
 801cade:	b29b      	uxth	r3, r3
 801cae0:	9208      	str	r2, [sp, #32]
 801cae2:	9501      	str	r5, [sp, #4]
 801cae4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cae6:	29ff      	cmp	r1, #255	; 0xff
 801cae8:	9908      	ldr	r1, [sp, #32]
 801caea:	eb0c 0601 	add.w	r6, ip, r1
 801caee:	d135      	bne.n	801cb5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801caf0:	f1a0 0e02 	sub.w	lr, r0, #2
 801caf4:	b2b6      	uxth	r6, r6
 801caf6:	45b4      	cmp	ip, r6
 801caf8:	f040 808c 	bne.w	801cc14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801cafc:	9908      	ldr	r1, [sp, #32]
 801cafe:	4297      	cmp	r7, r2
 801cb00:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cb04:	d3e2      	bcc.n	801cacc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801cb06:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cb08:	9904      	ldr	r1, [sp, #16]
 801cb0a:	8812      	ldrh	r2, [r2, #0]
 801cb0c:	1a52      	subs	r2, r2, r1
 801cb0e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cb12:	9a07      	ldr	r2, [sp, #28]
 801cb14:	9916      	ldr	r1, [sp, #88]	; 0x58
 801cb16:	3201      	adds	r2, #1
 801cb18:	428a      	cmp	r2, r1
 801cb1a:	9207      	str	r2, [sp, #28]
 801cb1c:	f040 8087 	bne.w	801cc2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cb20:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801cb24:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801cb28:	9b04      	ldr	r3, [sp, #16]
 801cb2a:	1bed      	subs	r5, r5, r7
 801cb2c:	b2ad      	uxth	r5, r5
 801cb2e:	2d00      	cmp	r5, #0
 801cb30:	bf08      	it	eq
 801cb32:	461a      	moveq	r2, r3
 801cb34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb36:	bf18      	it	ne
 801cb38:	2200      	movne	r2, #0
 801cb3a:	3301      	adds	r3, #1
 801cb3c:	930d      	str	r3, [sp, #52]	; 0x34
 801cb3e:	b292      	uxth	r2, r2
 801cb40:	e70d      	b.n	801c95e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801cb42:	1bd1      	subs	r1, r2, r7
 801cb44:	b28b      	uxth	r3, r1
 801cb46:	9301      	str	r3, [sp, #4]
 801cb48:	9708      	str	r7, [sp, #32]
 801cb4a:	462b      	mov	r3, r5
 801cb4c:	e7ca      	b.n	801cae4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801cb4e:	bf00      	nop
 801cb50:	20013444 	.word	0x20013444
 801cb54:	2001343e 	.word	0x2001343e
 801cb58:	fffff7fb 	.word	0xfffff7fb
 801cb5c:	b2b6      	uxth	r6, r6
 801cb5e:	900b      	str	r0, [sp, #44]	; 0x2c
 801cb60:	45b4      	cmp	ip, r6
 801cb62:	d0cb      	beq.n	801cafc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801cb64:	f10c 0101 	add.w	r1, ip, #1
 801cb68:	44a4      	add	ip, r4
 801cb6a:	9117      	str	r1, [sp, #92]	; 0x5c
 801cb6c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801cb70:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cb72:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801cb76:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cb78:	f8b1 c000 	ldrh.w	ip, [r1]
 801cb7c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb7e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801cb82:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801cb86:	fb1e fe01 	smulbb	lr, lr, r1
 801cb8a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801cb8e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cb90:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cb94:	fb08 e801 	mla	r8, r8, r1, lr
 801cb98:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801cb9c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb9e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cba2:	fb19 f901 	smulbb	r9, r9, r1
 801cba6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801cbaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cbac:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801cbb0:	fb0e 9e01 	mla	lr, lr, r1, r9
 801cbb4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cbb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cbba:	fa5f fc8c 	uxtb.w	ip, ip
 801cbbe:	fb1c fc01 	smulbb	ip, ip, r1
 801cbc2:	00ed      	lsls	r5, r5, #3
 801cbc4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cbc6:	b2ed      	uxtb	r5, r5
 801cbc8:	fb05 c501 	mla	r5, r5, r1, ip
 801cbcc:	fa1f f888 	uxth.w	r8, r8
 801cbd0:	fa1f fe8e 	uxth.w	lr, lr
 801cbd4:	b2ad      	uxth	r5, r5
 801cbd6:	f108 0c01 	add.w	ip, r8, #1
 801cbda:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801cbde:	f10e 0901 	add.w	r9, lr, #1
 801cbe2:	f105 0c01 	add.w	ip, r5, #1
 801cbe6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801cbea:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801cbee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cbf2:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cbf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cbfa:	ea4c 0808 	orr.w	r8, ip, r8
 801cbfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cc00:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801cc04:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc08:	ea48 0809 	orr.w	r8, r8, r9
 801cc0c:	f821 8b02 	strh.w	r8, [r1], #2
 801cc10:	910b      	str	r1, [sp, #44]	; 0x2c
 801cc12:	e7a5      	b.n	801cb60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801cc14:	f10c 0801 	add.w	r8, ip, #1
 801cc18:	44a4      	add	ip, r4
 801cc1a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cc1c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801cc20:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801cc24:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801cc28:	fa1f fc88 	uxth.w	ip, r8
 801cc2c:	e763      	b.n	801caf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801cc2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cc32:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cc36:	1aad      	subs	r5, r5, r2
 801cc38:	b2ad      	uxth	r5, r5
 801cc3a:	2d00      	cmp	r5, #0
 801cc3c:	bf18      	it	ne
 801cc3e:	2200      	movne	r2, #0
 801cc40:	9201      	str	r2, [sp, #4]
 801cc42:	e744      	b.n	801cace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801cc44:	4b03      	ldr	r3, [pc, #12]	; (801cc54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801cc46:	6818      	ldr	r0, [r3, #0]
 801cc48:	6803      	ldr	r3, [r0, #0]
 801cc4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc4c:	4798      	blx	r3
 801cc4e:	b01f      	add	sp, #124	; 0x7c
 801cc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc54:	20013444 	.word	0x20013444

0801cc58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc5c:	b08f      	sub	sp, #60	; 0x3c
 801cc5e:	461c      	mov	r4, r3
 801cc60:	9203      	str	r2, [sp, #12]
 801cc62:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cc66:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cc68:	9202      	str	r2, [sp, #8]
 801cc6a:	460f      	mov	r7, r1
 801cc6c:	2a00      	cmp	r2, #0
 801cc6e:	f000 8128 	beq.w	801cec2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801cc72:	6820      	ldr	r0, [r4, #0]
 801cc74:	6861      	ldr	r1, [r4, #4]
 801cc76:	aa0a      	add	r2, sp, #40	; 0x28
 801cc78:	c203      	stmia	r2!, {r0, r1}
 801cc7a:	6818      	ldr	r0, [r3, #0]
 801cc7c:	6859      	ldr	r1, [r3, #4]
 801cc7e:	aa0c      	add	r2, sp, #48	; 0x30
 801cc80:	c203      	stmia	r2!, {r0, r1}
 801cc82:	a80a      	add	r0, sp, #40	; 0x28
 801cc84:	f7f8 ffc4 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc88:	4621      	mov	r1, r4
 801cc8a:	a80c      	add	r0, sp, #48	; 0x30
 801cc8c:	f7f9 f804 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc90:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cc94:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cc98:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cc9c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cca0:	bfde      	ittt	le
 801cca2:	b2b3      	uxthle	r3, r6
 801cca4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cca8:	fb92 f3f3 	sdivle	r3, r2, r3
 801ccac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ccb0:	bfc8      	it	gt
 801ccb2:	2301      	movgt	r3, #1
 801ccb4:	fb92 f1f3 	sdiv	r1, r2, r3
 801ccb8:	fa1f fc81 	uxth.w	ip, r1
 801ccbc:	fb0c 2413 	mls	r4, ip, r3, r2
 801ccc0:	fb14 f406 	smulbb	r4, r4, r6
 801ccc4:	441d      	add	r5, r3
 801ccc6:	4404      	add	r4, r0
 801ccc8:	4661      	mov	r1, ip
 801ccca:	3d01      	subs	r5, #1
 801cccc:	b2a4      	uxth	r4, r4
 801ccce:	fb95 f5f3 	sdiv	r5, r5, r3
 801ccd2:	b121      	cbz	r1, 801ccde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801ccd4:	9b03      	ldr	r3, [sp, #12]
 801ccd6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ccda:	ba1b      	rev	r3, r3
 801ccdc:	441f      	add	r7, r3
 801ccde:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cce2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801cce6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ccea:	4418      	add	r0, r3
 801ccec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ccf0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ccf4:	441a      	add	r2, r3
 801ccf6:	4b74      	ldr	r3, [pc, #464]	; (801cec8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ccf8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ccfc:	6818      	ldr	r0, [r3, #0]
 801ccfe:	6803      	ldr	r3, [r0, #0]
 801cd00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd02:	4798      	blx	r3
 801cd04:	4a71      	ldr	r2, [pc, #452]	; (801cecc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801cd06:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cd0a:	8813      	ldrh	r3, [r2, #0]
 801cd0c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cd10:	9209      	str	r2, [sp, #36]	; 0x24
 801cd12:	fb03 c101 	mla	r1, r3, r1, ip
 801cd16:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cd1a:	4373      	muls	r3, r6
 801cd1c:	b2ad      	uxth	r5, r5
 801cd1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd22:	00ad      	lsls	r5, r5, #2
 801cd24:	2c00      	cmp	r4, #0
 801cd26:	9304      	str	r3, [sp, #16]
 801cd28:	f105 0304 	add.w	r3, r5, #4
 801cd2c:	9305      	str	r3, [sp, #20]
 801cd2e:	bf0c      	ite	eq
 801cd30:	46c8      	moveq	r8, r9
 801cd32:	f04f 0800 	movne.w	r8, #0
 801cd36:	2300      	movs	r3, #0
 801cd38:	fa1f f888 	uxth.w	r8, r8
 801cd3c:	9301      	str	r3, [sp, #4]
 801cd3e:	9a04      	ldr	r2, [sp, #16]
 801cd40:	4282      	cmp	r2, r0
 801cd42:	f240 80b9 	bls.w	801ceb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801cd46:	b95b      	cbnz	r3, 801cd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801cd48:	783a      	ldrb	r2, [r7, #0]
 801cd4a:	0993      	lsrs	r3, r2, #6
 801cd4c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cd50:	9201      	str	r2, [sp, #4]
 801cd52:	1e5a      	subs	r2, r3, #1
 801cd54:	2a02      	cmp	r2, #2
 801cd56:	bf8d      	iteet	hi
 801cd58:	787b      	ldrbhi	r3, [r7, #1]
 801cd5a:	3701      	addls	r7, #1
 801cd5c:	b29b      	uxthls	r3, r3
 801cd5e:	3702      	addhi	r7, #2
 801cd60:	b184      	cbz	r4, 801cd84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801cd62:	429c      	cmp	r4, r3
 801cd64:	bf95      	itete	ls
 801cd66:	1b1c      	subls	r4, r3, r4
 801cd68:	1ae4      	subhi	r4, r4, r3
 801cd6a:	fa1f fa84 	uxthls.w	sl, r4
 801cd6e:	b2a4      	uxthhi	r4, r4
 801cd70:	bf87      	ittee	hi
 801cd72:	46c4      	movhi	ip, r8
 801cd74:	f04f 0a00 	movhi.w	sl, #0
 801cd78:	fa1f fc89 	uxthls.w	ip, r9
 801cd7c:	2400      	movls	r4, #0
 801cd7e:	4653      	mov	r3, sl
 801cd80:	46e0      	mov	r8, ip
 801cd82:	e7dc      	b.n	801cd3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801cd84:	2204      	movs	r2, #4
 801cd86:	4615      	mov	r5, r2
 801cd88:	9905      	ldr	r1, [sp, #20]
 801cd8a:	9a01      	ldr	r2, [sp, #4]
 801cd8c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cd90:	9903      	ldr	r1, [sp, #12]
 801cd92:	588a      	ldr	r2, [r1, r2]
 801cd94:	4543      	cmp	r3, r8
 801cd96:	bf27      	ittee	cs
 801cd98:	eba3 0a08 	subcs.w	sl, r3, r8
 801cd9c:	46c6      	movcs	lr, r8
 801cd9e:	eba8 0c03 	subcc.w	ip, r8, r3
 801cda2:	469e      	movcc	lr, r3
 801cda4:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cda8:	bf27      	ittee	cs
 801cdaa:	fa1f fa8a 	uxthcs.w	sl, sl
 801cdae:	46a4      	movcs	ip, r4
 801cdb0:	fa1f fc8c 	uxthcc.w	ip, ip
 801cdb4:	46a2      	movcc	sl, r4
 801cdb6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cdba:	2900      	cmp	r1, #0
 801cdbc:	d066      	beq.n	801ce8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cdbe:	29ff      	cmp	r1, #255	; 0xff
 801cdc0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cdc4:	d114      	bne.n	801cdf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cdc6:	9d02      	ldr	r5, [sp, #8]
 801cdc8:	2dff      	cmp	r5, #255	; 0xff
 801cdca:	d111      	bne.n	801cdf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cdcc:	0951      	lsrs	r1, r2, #5
 801cdce:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cdd2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cdd6:	f026 0607 	bic.w	r6, r6, #7
 801cdda:	430e      	orrs	r6, r1
 801cddc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cde0:	4316      	orrs	r6, r2
 801cde2:	b2b6      	uxth	r6, r6
 801cde4:	4486      	add	lr, r0
 801cde6:	4586      	cmp	lr, r0
 801cde8:	d051      	beq.n	801ce8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cdea:	f820 6b02 	strh.w	r6, [r0], #2
 801cdee:	e7fa      	b.n	801cde6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cdf0:	9d02      	ldr	r5, [sp, #8]
 801cdf2:	4369      	muls	r1, r5
 801cdf4:	1c4d      	adds	r5, r1, #1
 801cdf6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cdfa:	122d      	asrs	r5, r5, #8
 801cdfc:	ea6f 0b05 	mvn.w	fp, r5
 801ce00:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ce04:	b2ad      	uxth	r5, r5
 801ce06:	b2f6      	uxtb	r6, r6
 801ce08:	b2d2      	uxtb	r2, r2
 801ce0a:	fb11 f105 	smulbb	r1, r1, r5
 801ce0e:	fb16 f605 	smulbb	r6, r6, r5
 801ce12:	fb12 f205 	smulbb	r2, r2, r5
 801ce16:	b289      	uxth	r1, r1
 801ce18:	b2b6      	uxth	r6, r6
 801ce1a:	b292      	uxth	r2, r2
 801ce1c:	9106      	str	r1, [sp, #24]
 801ce1e:	9607      	str	r6, [sp, #28]
 801ce20:	9208      	str	r2, [sp, #32]
 801ce22:	4486      	add	lr, r0
 801ce24:	fa5f fb8b 	uxtb.w	fp, fp
 801ce28:	4586      	cmp	lr, r0
 801ce2a:	d030      	beq.n	801ce8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ce2c:	8802      	ldrh	r2, [r0, #0]
 801ce2e:	9906      	ldr	r1, [sp, #24]
 801ce30:	1216      	asrs	r6, r2, #8
 801ce32:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ce36:	10d5      	asrs	r5, r2, #3
 801ce38:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ce3c:	fb06 160b 	mla	r6, r6, fp, r1
 801ce40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce44:	9907      	ldr	r1, [sp, #28]
 801ce46:	00d2      	lsls	r2, r2, #3
 801ce48:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ce4c:	fb05 150b 	mla	r5, r5, fp, r1
 801ce50:	b2d2      	uxtb	r2, r2
 801ce52:	9908      	ldr	r1, [sp, #32]
 801ce54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce58:	b2b6      	uxth	r6, r6
 801ce5a:	fb02 120b 	mla	r2, r2, fp, r1
 801ce5e:	b292      	uxth	r2, r2
 801ce60:	1c71      	adds	r1, r6, #1
 801ce62:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ce66:	1c51      	adds	r1, r2, #1
 801ce68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ce6c:	b2ad      	uxth	r5, r5
 801ce6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce72:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ce76:	4316      	orrs	r6, r2
 801ce78:	1c6a      	adds	r2, r5, #1
 801ce7a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ce7e:	096d      	lsrs	r5, r5, #5
 801ce80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce84:	432e      	orrs	r6, r5
 801ce86:	f820 6b02 	strh.w	r6, [r0], #2
 801ce8a:	e7cd      	b.n	801ce28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ce8c:	4470      	add	r0, lr
 801ce8e:	4543      	cmp	r3, r8
 801ce90:	f4ff af75 	bcc.w	801cd7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ce94:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ce98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ce9a:	fa1f fc89 	uxth.w	ip, r9
 801ce9e:	eba4 040c 	sub.w	r4, r4, ip
 801cea2:	881b      	ldrh	r3, [r3, #0]
 801cea4:	b2a4      	uxth	r4, r4
 801cea6:	2c00      	cmp	r4, #0
 801cea8:	eba3 0309 	sub.w	r3, r3, r9
 801ceac:	bf18      	it	ne
 801ceae:	f04f 0c00 	movne.w	ip, #0
 801ceb2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ceb6:	e762      	b.n	801cd7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ceb8:	4b03      	ldr	r3, [pc, #12]	; (801cec8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ceba:	6818      	ldr	r0, [r3, #0]
 801cebc:	6803      	ldr	r3, [r0, #0]
 801cebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cec0:	4798      	blx	r3
 801cec2:	b00f      	add	sp, #60	; 0x3c
 801cec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cec8:	20013444 	.word	0x20013444
 801cecc:	2001343e 	.word	0x2001343e

0801ced0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ced0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ced4:	b093      	sub	sp, #76	; 0x4c
 801ced6:	461c      	mov	r4, r3
 801ced8:	9205      	str	r2, [sp, #20]
 801ceda:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cede:	9101      	str	r1, [sp, #4]
 801cee0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cee2:	9202      	str	r2, [sp, #8]
 801cee4:	2a00      	cmp	r2, #0
 801cee6:	f000 812c 	beq.w	801d142 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ceea:	6820      	ldr	r0, [r4, #0]
 801ceec:	6861      	ldr	r1, [r4, #4]
 801ceee:	aa0e      	add	r2, sp, #56	; 0x38
 801cef0:	c203      	stmia	r2!, {r0, r1}
 801cef2:	6818      	ldr	r0, [r3, #0]
 801cef4:	6859      	ldr	r1, [r3, #4]
 801cef6:	aa10      	add	r2, sp, #64	; 0x40
 801cef8:	c203      	stmia	r2!, {r0, r1}
 801cefa:	a80e      	add	r0, sp, #56	; 0x38
 801cefc:	f7f8 fe88 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf00:	4621      	mov	r1, r4
 801cf02:	a810      	add	r0, sp, #64	; 0x40
 801cf04:	f7f8 fec8 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf08:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cf0c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cf10:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cf14:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cf18:	bfde      	ittt	le
 801cf1a:	b2b3      	uxthle	r3, r6
 801cf1c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cf20:	fb92 f3f3 	sdivle	r3, r2, r3
 801cf24:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cf28:	bfc8      	it	gt
 801cf2a:	2301      	movgt	r3, #1
 801cf2c:	fb92 f1f3 	sdiv	r1, r2, r3
 801cf30:	fa1f fc81 	uxth.w	ip, r1
 801cf34:	fb0c 2413 	mls	r4, ip, r3, r2
 801cf38:	fb14 f406 	smulbb	r4, r4, r6
 801cf3c:	441d      	add	r5, r3
 801cf3e:	4404      	add	r4, r0
 801cf40:	4661      	mov	r1, ip
 801cf42:	3d01      	subs	r5, #1
 801cf44:	b2a4      	uxth	r4, r4
 801cf46:	fb95 f5f3 	sdiv	r5, r5, r3
 801cf4a:	b131      	cbz	r1, 801cf5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cf4c:	9b05      	ldr	r3, [sp, #20]
 801cf4e:	9901      	ldr	r1, [sp, #4]
 801cf50:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cf54:	ba1b      	rev	r3, r3
 801cf56:	4419      	add	r1, r3
 801cf58:	9101      	str	r1, [sp, #4]
 801cf5a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cf5e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cf62:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cf66:	4418      	add	r0, r3
 801cf68:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cf6c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cf70:	441a      	add	r2, r3
 801cf72:	4b75      	ldr	r3, [pc, #468]	; (801d148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cf74:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cf78:	6818      	ldr	r0, [r3, #0]
 801cf7a:	6803      	ldr	r3, [r0, #0]
 801cf7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf7e:	4798      	blx	r3
 801cf80:	4972      	ldr	r1, [pc, #456]	; (801d14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cf82:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cf86:	880b      	ldrh	r3, [r1, #0]
 801cf88:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cf8c:	910d      	str	r1, [sp, #52]	; 0x34
 801cf8e:	fb03 c202 	mla	r2, r3, r2, ip
 801cf92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf96:	4373      	muls	r3, r6
 801cf98:	b2ad      	uxth	r5, r5
 801cf9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cf9e:	00ad      	lsls	r5, r5, #2
 801cfa0:	9308      	str	r3, [sp, #32]
 801cfa2:	1d2b      	adds	r3, r5, #4
 801cfa4:	9309      	str	r3, [sp, #36]	; 0x24
 801cfa6:	9b02      	ldr	r3, [sp, #8]
 801cfa8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cfac:	9106      	str	r1, [sp, #24]
 801cfae:	43da      	mvns	r2, r3
 801cfb0:	2c00      	cmp	r4, #0
 801cfb2:	bf0c      	ite	eq
 801cfb4:	46dc      	moveq	ip, fp
 801cfb6:	f04f 0c00 	movne.w	ip, #0
 801cfba:	2300      	movs	r3, #0
 801cfbc:	b2d2      	uxtb	r2, r2
 801cfbe:	fa1f fc8c 	uxth.w	ip, ip
 801cfc2:	9303      	str	r3, [sp, #12]
 801cfc4:	9207      	str	r2, [sp, #28]
 801cfc6:	9a08      	ldr	r2, [sp, #32]
 801cfc8:	4282      	cmp	r2, r0
 801cfca:	f240 80b5 	bls.w	801d138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cfce:	b963      	cbnz	r3, 801cfea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cfd0:	9b01      	ldr	r3, [sp, #4]
 801cfd2:	781a      	ldrb	r2, [r3, #0]
 801cfd4:	0993      	lsrs	r3, r2, #6
 801cfd6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cfda:	9203      	str	r2, [sp, #12]
 801cfdc:	1e5a      	subs	r2, r3, #1
 801cfde:	2a02      	cmp	r2, #2
 801cfe0:	d815      	bhi.n	801d00e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cfe2:	9a01      	ldr	r2, [sp, #4]
 801cfe4:	3201      	adds	r2, #1
 801cfe6:	9201      	str	r2, [sp, #4]
 801cfe8:	b29b      	uxth	r3, r3
 801cfea:	b1b4      	cbz	r4, 801d01a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cfec:	429c      	cmp	r4, r3
 801cfee:	bf95      	itete	ls
 801cff0:	1b1c      	subls	r4, r3, r4
 801cff2:	1ae4      	subhi	r4, r4, r3
 801cff4:	fa1f f884 	uxthls.w	r8, r4
 801cff8:	b2a4      	uxthhi	r4, r4
 801cffa:	bf87      	ittee	hi
 801cffc:	4666      	movhi	r6, ip
 801cffe:	f04f 0800 	movhi.w	r8, #0
 801d002:	fa1f f68b 	uxthls.w	r6, fp
 801d006:	2400      	movls	r4, #0
 801d008:	4643      	mov	r3, r8
 801d00a:	46b4      	mov	ip, r6
 801d00c:	e7db      	b.n	801cfc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d00e:	9a01      	ldr	r2, [sp, #4]
 801d010:	9b01      	ldr	r3, [sp, #4]
 801d012:	3202      	adds	r2, #2
 801d014:	785b      	ldrb	r3, [r3, #1]
 801d016:	9201      	str	r2, [sp, #4]
 801d018:	e7e7      	b.n	801cfea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d01a:	2203      	movs	r2, #3
 801d01c:	4615      	mov	r5, r2
 801d01e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d020:	9a03      	ldr	r2, [sp, #12]
 801d022:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d026:	9905      	ldr	r1, [sp, #20]
 801d028:	4563      	cmp	r3, ip
 801d02a:	eb01 0502 	add.w	r5, r1, r2
 801d02e:	9902      	ldr	r1, [sp, #8]
 801d030:	bf29      	itett	cs
 801d032:	eba3 080c 	subcs.w	r8, r3, ip
 801d036:	ebac 0603 	subcc.w	r6, ip, r3
 801d03a:	fa1f f888 	uxthcs.w	r8, r8
 801d03e:	46e1      	movcs	r9, ip
 801d040:	bf2f      	iteee	cs
 801d042:	4626      	movcs	r6, r4
 801d044:	b2b6      	uxthcc	r6, r6
 801d046:	4699      	movcc	r9, r3
 801d048:	46a0      	movcc	r8, r4
 801d04a:	29ff      	cmp	r1, #255	; 0xff
 801d04c:	d04a      	beq.n	801d0e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d04e:	9f06      	ldr	r7, [sp, #24]
 801d050:	78a9      	ldrb	r1, [r5, #2]
 801d052:	9004      	str	r0, [sp, #16]
 801d054:	4379      	muls	r1, r7
 801d056:	910a      	str	r1, [sp, #40]	; 0x28
 801d058:	7869      	ldrb	r1, [r5, #1]
 801d05a:	4379      	muls	r1, r7
 801d05c:	910b      	str	r1, [sp, #44]	; 0x2c
 801d05e:	9905      	ldr	r1, [sp, #20]
 801d060:	5c8a      	ldrb	r2, [r1, r2]
 801d062:	437a      	muls	r2, r7
 801d064:	920c      	str	r2, [sp, #48]	; 0x30
 801d066:	46ca      	mov	sl, r9
 801d068:	f1ba 0f00 	cmp.w	sl, #0
 801d06c:	d03d      	beq.n	801d0ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d06e:	9a04      	ldr	r2, [sp, #16]
 801d070:	9f07      	ldr	r7, [sp, #28]
 801d072:	8812      	ldrh	r2, [r2, #0]
 801d074:	1215      	asrs	r5, r2, #8
 801d076:	46be      	mov	lr, r7
 801d078:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d07c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d07e:	10d1      	asrs	r1, r2, #3
 801d080:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d084:	fb05 750e 	mla	r5, r5, lr, r7
 801d088:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d08c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d08e:	00d2      	lsls	r2, r2, #3
 801d090:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d094:	fb01 710e 	mla	r1, r1, lr, r7
 801d098:	b2d2      	uxtb	r2, r2
 801d09a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d09c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d0a0:	b2ad      	uxth	r5, r5
 801d0a2:	fb02 720e 	mla	r2, r2, lr, r7
 801d0a6:	b292      	uxth	r2, r2
 801d0a8:	f105 0e01 	add.w	lr, r5, #1
 801d0ac:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d0b0:	f102 0e01 	add.w	lr, r2, #1
 801d0b4:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d0b8:	b289      	uxth	r1, r1
 801d0ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d0be:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d0c2:	4315      	orrs	r5, r2
 801d0c4:	1c4a      	adds	r2, r1, #1
 801d0c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d0ca:	0949      	lsrs	r1, r1, #5
 801d0cc:	9a04      	ldr	r2, [sp, #16]
 801d0ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0d2:	430d      	orrs	r5, r1
 801d0d4:	f822 5b02 	strh.w	r5, [r2], #2
 801d0d8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d0dc:	9204      	str	r2, [sp, #16]
 801d0de:	fa1f fa8a 	uxth.w	sl, sl
 801d0e2:	e7c1      	b.n	801d068 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d0e4:	4649      	mov	r1, r9
 801d0e6:	4686      	mov	lr, r0
 801d0e8:	b999      	cbnz	r1, 801d112 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d0ea:	4563      	cmp	r3, ip
 801d0ec:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d0f0:	d38a      	bcc.n	801d008 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d0f2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d0f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d0f8:	fa1f f68b 	uxth.w	r6, fp
 801d0fc:	1ba4      	subs	r4, r4, r6
 801d0fe:	881b      	ldrh	r3, [r3, #0]
 801d100:	b2a4      	uxth	r4, r4
 801d102:	2c00      	cmp	r4, #0
 801d104:	eba3 030b 	sub.w	r3, r3, fp
 801d108:	bf18      	it	ne
 801d10a:	2600      	movne	r6, #0
 801d10c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d110:	e77a      	b.n	801d008 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d112:	78aa      	ldrb	r2, [r5, #2]
 801d114:	4f0e      	ldr	r7, [pc, #56]	; (801d150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d116:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d11a:	786a      	ldrb	r2, [r5, #1]
 801d11c:	00d2      	lsls	r2, r2, #3
 801d11e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d122:	ea4a 0202 	orr.w	r2, sl, r2
 801d126:	f895 a000 	ldrb.w	sl, [r5]
 801d12a:	3901      	subs	r1, #1
 801d12c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d130:	f82e 2b02 	strh.w	r2, [lr], #2
 801d134:	b289      	uxth	r1, r1
 801d136:	e7d7      	b.n	801d0e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d138:	4b03      	ldr	r3, [pc, #12]	; (801d148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d13a:	6818      	ldr	r0, [r3, #0]
 801d13c:	6803      	ldr	r3, [r0, #0]
 801d13e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d140:	4798      	blx	r3
 801d142:	b013      	add	sp, #76	; 0x4c
 801d144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d148:	20013444 	.word	0x20013444
 801d14c:	2001343e 	.word	0x2001343e
 801d150:	fffff800 	.word	0xfffff800

0801d154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d158:	b09d      	sub	sp, #116	; 0x74
 801d15a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d15e:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d162:	920e      	str	r2, [sp, #56]	; 0x38
 801d164:	461c      	mov	r4, r3
 801d166:	4683      	mov	fp, r0
 801d168:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d16a:	2a00      	cmp	r2, #0
 801d16c:	f000 81e0 	beq.w	801d530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d170:	6820      	ldr	r0, [r4, #0]
 801d172:	6861      	ldr	r1, [r4, #4]
 801d174:	aa18      	add	r2, sp, #96	; 0x60
 801d176:	c203      	stmia	r2!, {r0, r1}
 801d178:	6818      	ldr	r0, [r3, #0]
 801d17a:	6859      	ldr	r1, [r3, #4]
 801d17c:	aa1a      	add	r2, sp, #104	; 0x68
 801d17e:	c203      	stmia	r2!, {r0, r1}
 801d180:	a818      	add	r0, sp, #96	; 0x60
 801d182:	f7f8 fd45 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d186:	4621      	mov	r1, r4
 801d188:	a81a      	add	r0, sp, #104	; 0x68
 801d18a:	f7f8 fd85 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d18e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d192:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d196:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d19a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d19e:	bfd7      	itett	le
 801d1a0:	b29a      	uxthle	r2, r3
 801d1a2:	2201      	movgt	r2, #1
 801d1a4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d1a8:	fb91 f2f2 	sdivle	r2, r1, r2
 801d1ac:	9202      	str	r2, [sp, #8]
 801d1ae:	9802      	ldr	r0, [sp, #8]
 801d1b0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d1b4:	fb92 f0f0 	sdiv	r0, r2, r0
 801d1b8:	b280      	uxth	r0, r0
 801d1ba:	900f      	str	r0, [sp, #60]	; 0x3c
 801d1bc:	9902      	ldr	r1, [sp, #8]
 801d1be:	9802      	ldr	r0, [sp, #8]
 801d1c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d1c2:	440c      	add	r4, r1
 801d1c4:	fb05 2510 	mls	r5, r5, r0, r2
 801d1c8:	fb15 f503 	smulbb	r5, r5, r3
 801d1cc:	3c01      	subs	r4, #1
 801d1ce:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d1d2:	fb94 f4f1 	sdiv	r4, r4, r1
 801d1d6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d1da:	440d      	add	r5, r1
 801d1dc:	4419      	add	r1, r3
 801d1de:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d1e2:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d1e6:	441a      	add	r2, r3
 801d1e8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d1ec:	9306      	str	r3, [sp, #24]
 801d1ee:	4bb3      	ldr	r3, [pc, #716]	; (801d4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d1f0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d1f4:	6818      	ldr	r0, [r3, #0]
 801d1f6:	6803      	ldr	r3, [r0, #0]
 801d1f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1fa:	4798      	blx	r3
 801d1fc:	4bb0      	ldr	r3, [pc, #704]	; (801d4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d1fe:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d202:	881a      	ldrh	r2, [r3, #0]
 801d204:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d208:	9316      	str	r3, [sp, #88]	; 0x58
 801d20a:	fb02 7101 	mla	r1, r2, r1, r7
 801d20e:	3401      	adds	r4, #1
 801d210:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d214:	b2a4      	uxth	r4, r4
 801d216:	4356      	muls	r6, r2
 801d218:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d21c:	00a4      	lsls	r4, r4, #2
 801d21e:	920a      	str	r2, [sp, #40]	; 0x28
 801d220:	1d22      	adds	r2, r4, #4
 801d222:	b2ad      	uxth	r5, r5
 801d224:	9213      	str	r2, [sp, #76]	; 0x4c
 801d226:	4ba7      	ldr	r3, [pc, #668]	; (801d4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d228:	9a06      	ldr	r2, [sp, #24]
 801d22a:	2d00      	cmp	r5, #0
 801d22c:	bf0c      	ite	eq
 801d22e:	4611      	moveq	r1, r2
 801d230:	2100      	movne	r1, #0
 801d232:	2200      	movs	r2, #0
 801d234:	eba3 030b 	sub.w	r3, r3, fp
 801d238:	b289      	uxth	r1, r1
 801d23a:	920d      	str	r2, [sp, #52]	; 0x34
 801d23c:	9317      	str	r3, [sp, #92]	; 0x5c
 801d23e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d240:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d242:	fa12 f383 	uxtah	r3, r2, r3
 801d246:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d248:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d24c:	3304      	adds	r3, #4
 801d24e:	9308      	str	r3, [sp, #32]
 801d250:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d252:	4543      	cmp	r3, r8
 801d254:	f240 8167 	bls.w	801d526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d258:	9a02      	ldr	r2, [sp, #8]
 801d25a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d25e:	fbb5 f3f3 	udiv	r3, r5, r3
 801d262:	1ad3      	subs	r3, r2, r3
 801d264:	b29b      	uxth	r3, r3
 801d266:	9314      	str	r3, [sp, #80]	; 0x50
 801d268:	9b08      	ldr	r3, [sp, #32]
 801d26a:	9808      	ldr	r0, [sp, #32]
 801d26c:	785a      	ldrb	r2, [r3, #1]
 801d26e:	789b      	ldrb	r3, [r3, #2]
 801d270:	7800      	ldrb	r0, [r0, #0]
 801d272:	9010      	str	r0, [sp, #64]	; 0x40
 801d274:	021b      	lsls	r3, r3, #8
 801d276:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d27a:	9a08      	ldr	r2, [sp, #32]
 801d27c:	78d2      	ldrb	r2, [r2, #3]
 801d27e:	4313      	orrs	r3, r2
 801d280:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d282:	3001      	adds	r0, #1
 801d284:	441a      	add	r2, r3
 801d286:	9007      	str	r0, [sp, #28]
 801d288:	1c50      	adds	r0, r2, #1
 801d28a:	9005      	str	r0, [sp, #20]
 801d28c:	7852      	ldrb	r2, [r2, #1]
 801d28e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d290:	0212      	lsls	r2, r2, #8
 801d292:	5cc3      	ldrb	r3, [r0, r3]
 801d294:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d298:	431a      	orrs	r2, r3
 801d29a:	b293      	uxth	r3, r2
 801d29c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d29e:	2300      	movs	r3, #0
 801d2a0:	9309      	str	r3, [sp, #36]	; 0x24
 801d2a2:	2301      	movs	r3, #1
 801d2a4:	9301      	str	r3, [sp, #4]
 801d2a6:	9304      	str	r3, [sp, #16]
 801d2a8:	2300      	movs	r3, #0
 801d2aa:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d2ae:	9303      	str	r3, [sp, #12]
 801d2b0:	f04f 0e01 	mov.w	lr, #1
 801d2b4:	2d00      	cmp	r5, #0
 801d2b6:	d07c      	beq.n	801d3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d2b8:	45ae      	cmp	lr, r5
 801d2ba:	d26b      	bcs.n	801d394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d2bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2be:	eba5 050e 	sub.w	r5, r5, lr
 801d2c2:	4543      	cmp	r3, r8
 801d2c4:	b2ad      	uxth	r5, r5
 801d2c6:	460c      	mov	r4, r1
 801d2c8:	d802      	bhi.n	801d2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d2ca:	e070      	b.n	801d3ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d2cc:	2b00      	cmp	r3, #0
 801d2ce:	d15c      	bne.n	801d38a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d2d0:	9b05      	ldr	r3, [sp, #20]
 801d2d2:	9a04      	ldr	r2, [sp, #16]
 801d2d4:	785b      	ldrb	r3, [r3, #1]
 801d2d6:	9904      	ldr	r1, [sp, #16]
 801d2d8:	f1c2 0207 	rsb	r2, r2, #7
 801d2dc:	4093      	lsls	r3, r2
 801d2de:	005b      	lsls	r3, r3, #1
 801d2e0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d2e4:	9b05      	ldr	r3, [sp, #20]
 801d2e6:	781b      	ldrb	r3, [r3, #0]
 801d2e8:	410b      	asrs	r3, r1
 801d2ea:	3101      	adds	r1, #1
 801d2ec:	b2c9      	uxtb	r1, r1
 801d2ee:	2908      	cmp	r1, #8
 801d2f0:	9104      	str	r1, [sp, #16]
 801d2f2:	9905      	ldr	r1, [sp, #20]
 801d2f4:	bf0a      	itet	eq
 801d2f6:	3102      	addeq	r1, #2
 801d2f8:	3101      	addne	r1, #1
 801d2fa:	9105      	streq	r1, [sp, #20]
 801d2fc:	b2db      	uxtb	r3, r3
 801d2fe:	bf0a      	itet	eq
 801d300:	2100      	moveq	r1, #0
 801d302:	9105      	strne	r1, [sp, #20]
 801d304:	9104      	streq	r1, [sp, #16]
 801d306:	4313      	orrs	r3, r2
 801d308:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d30a:	b29a      	uxth	r2, r3
 801d30c:	4291      	cmp	r1, r2
 801d30e:	d30a      	bcc.n	801d326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d310:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d314:	2301      	movs	r3, #1
 801d316:	9907      	ldr	r1, [sp, #28]
 801d318:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d31c:	d30f      	bcc.n	801d33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d31e:	2100      	movs	r1, #0
 801d320:	9301      	str	r3, [sp, #4]
 801d322:	9103      	str	r1, [sp, #12]
 801d324:	e032      	b.n	801d38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d326:	9b07      	ldr	r3, [sp, #28]
 801d328:	429a      	cmp	r2, r3
 801d32a:	d318      	bcc.n	801d35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d32c:	9b01      	ldr	r3, [sp, #4]
 801d32e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d332:	445b      	add	r3, fp
 801d334:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d338:	9b01      	ldr	r3, [sp, #4]
 801d33a:	3301      	adds	r3, #1
 801d33c:	b29b      	uxth	r3, r3
 801d33e:	9907      	ldr	r1, [sp, #28]
 801d340:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d344:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d348:	7108      	strb	r0, [r1, #4]
 801d34a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d34c:	80c8      	strh	r0, [r1, #6]
 801d34e:	9801      	ldr	r0, [sp, #4]
 801d350:	3001      	adds	r0, #1
 801d352:	7148      	strb	r0, [r1, #5]
 801d354:	9907      	ldr	r1, [sp, #28]
 801d356:	3101      	adds	r1, #1
 801d358:	b289      	uxth	r1, r1
 801d35a:	9107      	str	r1, [sp, #28]
 801d35c:	e7df      	b.n	801d31e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d35e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d362:	4611      	mov	r1, r2
 801d364:	795b      	ldrb	r3, [r3, #5]
 801d366:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d36a:	4458      	add	r0, fp
 801d36c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d36e:	4406      	add	r6, r0
 801d370:	2e00      	cmp	r6, #0
 801d372:	dd06      	ble.n	801d382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d374:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d378:	790e      	ldrb	r6, [r1, #4]
 801d37a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d37e:	88c9      	ldrh	r1, [r1, #6]
 801d380:	e7f4      	b.n	801d36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d382:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d386:	b29b      	uxth	r3, r3
 801d388:	e7c5      	b.n	801d316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d38a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d38c:	920b      	str	r2, [sp, #44]	; 0x2c
 801d38e:	4621      	mov	r1, r4
 801d390:	469e      	mov	lr, r3
 801d392:	e78f      	b.n	801d2b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d394:	9a03      	ldr	r2, [sp, #12]
 801d396:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d39a:	442a      	add	r2, r5
 801d39c:	ebae 0305 	sub.w	r3, lr, r5
 801d3a0:	b292      	uxth	r2, r2
 801d3a2:	b29b      	uxth	r3, r3
 801d3a4:	9203      	str	r2, [sp, #12]
 801d3a6:	2500      	movs	r5, #0
 801d3a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d3aa:	4542      	cmp	r2, r8
 801d3ac:	d88e      	bhi.n	801d2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d3ae:	4621      	mov	r1, r4
 801d3b0:	e74e      	b.n	801d250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d3b2:	458e      	cmp	lr, r1
 801d3b4:	bf29      	itett	cs
 801d3b6:	ebae 0301 	subcs.w	r3, lr, r1
 801d3ba:	eba1 040e 	subcc.w	r4, r1, lr
 801d3be:	b29b      	uxthcs	r3, r3
 801d3c0:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d3c2:	bf2f      	iteee	cs
 801d3c4:	462c      	movcs	r4, r5
 801d3c6:	b2a4      	uxthcc	r4, r4
 801d3c8:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d3cc:	462b      	movcc	r3, r5
 801d3ce:	f04f 0900 	mov.w	r9, #0
 801d3d2:	9a03      	ldr	r2, [sp, #12]
 801d3d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d3d6:	444a      	add	r2, r9
 801d3d8:	4548      	cmp	r0, r9
 801d3da:	b292      	uxth	r2, r2
 801d3dc:	d074      	beq.n	801d4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d3de:	445a      	add	r2, fp
 801d3e0:	2004      	movs	r0, #4
 801d3e2:	4605      	mov	r5, r0
 801d3e4:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d3e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d3ea:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d3ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3f0:	5880      	ldr	r0, [r0, r2]
 801d3f2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d3f6:	d014      	beq.n	801d422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d3f8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d3fc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d400:	d112      	bne.n	801d428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d402:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d404:	2aff      	cmp	r2, #255	; 0xff
 801d406:	d10f      	bne.n	801d428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d408:	0942      	lsrs	r2, r0, #5
 801d40a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d40e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d412:	f025 0507 	bic.w	r5, r5, #7
 801d416:	4315      	orrs	r5, r2
 801d418:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d41c:	4305      	orrs	r5, r0
 801d41e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d422:	f109 0901 	add.w	r9, r9, #1
 801d426:	e7d4      	b.n	801d3d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d428:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d42c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d430:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d434:	9215      	str	r2, [sp, #84]	; 0x54
 801d436:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d438:	fb02 fa0a 	mul.w	sl, r2, sl
 801d43c:	f10a 0201 	add.w	r2, sl, #1
 801d440:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d444:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d448:	1212      	asrs	r2, r2, #8
 801d44a:	fa1f fa82 	uxth.w	sl, r2
 801d44e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d452:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d456:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d45a:	43d2      	mvns	r2, r2
 801d45c:	b2d2      	uxtb	r2, r2
 801d45e:	fb16 f60a 	smulbb	r6, r6, sl
 801d462:	fa5f fc8c 	uxtb.w	ip, ip
 801d466:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d46a:	b2c0      	uxtb	r0, r0
 801d46c:	fb07 6702 	mla	r7, r7, r2, r6
 801d470:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d474:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d476:	fb10 f00a 	smulbb	r0, r0, sl
 801d47a:	fb0c 0002 	mla	r0, ip, r2, r0
 801d47e:	b2ed      	uxtb	r5, r5
 801d480:	b2bf      	uxth	r7, r7
 801d482:	fb15 f50a 	smulbb	r5, r5, sl
 801d486:	b280      	uxth	r0, r0
 801d488:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d48c:	fb06 5602 	mla	r6, r6, r2, r5
 801d490:	1c7a      	adds	r2, r7, #1
 801d492:	1c45      	adds	r5, r0, #1
 801d494:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d498:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d49c:	b2b6      	uxth	r6, r6
 801d49e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d4a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d4a6:	432f      	orrs	r7, r5
 801d4a8:	1c75      	adds	r5, r6, #1
 801d4aa:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d4ae:	096d      	lsrs	r5, r5, #5
 801d4b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d4b4:	432f      	orrs	r7, r5
 801d4b6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d4ba:	e7b2      	b.n	801d422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d4bc:	20013444 	.word	0x20013444
 801d4c0:	2001343e 	.word	0x2001343e
 801d4c4:	fffff7fb 	.word	0xfffff7fb
 801d4c8:	9203      	str	r2, [sp, #12]
 801d4ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d4cc:	458e      	cmp	lr, r1
 801d4ce:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d4d2:	f4ff af68 	bcc.w	801d3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d4d6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d4d8:	9906      	ldr	r1, [sp, #24]
 801d4da:	8812      	ldrh	r2, [r2, #0]
 801d4dc:	1a52      	subs	r2, r2, r1
 801d4de:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d4e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d4e4:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d4e6:	3201      	adds	r2, #1
 801d4e8:	428a      	cmp	r2, r1
 801d4ea:	9209      	str	r2, [sp, #36]	; 0x24
 801d4ec:	d111      	bne.n	801d512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d4ee:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d4f2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d4f6:	9b06      	ldr	r3, [sp, #24]
 801d4f8:	eba5 0509 	sub.w	r5, r5, r9
 801d4fc:	b2ad      	uxth	r5, r5
 801d4fe:	2d00      	cmp	r5, #0
 801d500:	bf08      	it	eq
 801d502:	4619      	moveq	r1, r3
 801d504:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d506:	bf18      	it	ne
 801d508:	2100      	movne	r1, #0
 801d50a:	3301      	adds	r3, #1
 801d50c:	930d      	str	r3, [sp, #52]	; 0x34
 801d50e:	b289      	uxth	r1, r1
 801d510:	e695      	b.n	801d23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d512:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d516:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d51a:	1b2d      	subs	r5, r5, r4
 801d51c:	b2ad      	uxth	r5, r5
 801d51e:	2d00      	cmp	r5, #0
 801d520:	bf18      	it	ne
 801d522:	2400      	movne	r4, #0
 801d524:	e740      	b.n	801d3a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d526:	4b04      	ldr	r3, [pc, #16]	; (801d538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d528:	6818      	ldr	r0, [r3, #0]
 801d52a:	6803      	ldr	r3, [r0, #0]
 801d52c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d52e:	4798      	blx	r3
 801d530:	b01d      	add	sp, #116	; 0x74
 801d532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d536:	bf00      	nop
 801d538:	20013444 	.word	0x20013444

0801d53c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d540:	b09f      	sub	sp, #124	; 0x7c
 801d542:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d546:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d54a:	920a      	str	r2, [sp, #40]	; 0x28
 801d54c:	461d      	mov	r5, r3
 801d54e:	4604      	mov	r4, r0
 801d550:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d552:	2a00      	cmp	r2, #0
 801d554:	f000 81fa 	beq.w	801d94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d558:	6828      	ldr	r0, [r5, #0]
 801d55a:	6869      	ldr	r1, [r5, #4]
 801d55c:	aa1a      	add	r2, sp, #104	; 0x68
 801d55e:	c203      	stmia	r2!, {r0, r1}
 801d560:	6818      	ldr	r0, [r3, #0]
 801d562:	6859      	ldr	r1, [r3, #4]
 801d564:	aa1c      	add	r2, sp, #112	; 0x70
 801d566:	c203      	stmia	r2!, {r0, r1}
 801d568:	a81a      	add	r0, sp, #104	; 0x68
 801d56a:	f7f8 fb51 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d56e:	4629      	mov	r1, r5
 801d570:	a81c      	add	r0, sp, #112	; 0x70
 801d572:	f7f8 fb91 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d576:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d57a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d57e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d582:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d586:	bfd7      	itett	le
 801d588:	b29a      	uxthle	r2, r3
 801d58a:	2201      	movgt	r2, #1
 801d58c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d590:	fb91 f2f2 	sdivle	r2, r1, r2
 801d594:	9201      	str	r2, [sp, #4]
 801d596:	9801      	ldr	r0, [sp, #4]
 801d598:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d59c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d5a0:	b280      	uxth	r0, r0
 801d5a2:	9010      	str	r0, [sp, #64]	; 0x40
 801d5a4:	9901      	ldr	r1, [sp, #4]
 801d5a6:	9801      	ldr	r0, [sp, #4]
 801d5a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d5aa:	440e      	add	r6, r1
 801d5ac:	fb05 2510 	mls	r5, r5, r0, r2
 801d5b0:	fb15 f503 	smulbb	r5, r5, r3
 801d5b4:	3e01      	subs	r6, #1
 801d5b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d5ba:	fb96 f6f1 	sdiv	r6, r6, r1
 801d5be:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d5c2:	440d      	add	r5, r1
 801d5c4:	4419      	add	r1, r3
 801d5c6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d5ca:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d5ce:	441a      	add	r2, r3
 801d5d0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d5d4:	9304      	str	r3, [sp, #16]
 801d5d6:	4b96      	ldr	r3, [pc, #600]	; (801d830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d5d8:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d5dc:	6818      	ldr	r0, [r3, #0]
 801d5de:	6803      	ldr	r3, [r0, #0]
 801d5e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d5e2:	4798      	blx	r3
 801d5e4:	4b93      	ldr	r3, [pc, #588]	; (801d834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d5e6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d5ea:	881a      	ldrh	r2, [r3, #0]
 801d5ec:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d5f0:	9318      	str	r3, [sp, #96]	; 0x60
 801d5f2:	fb02 c101 	mla	r1, r2, r1, ip
 801d5f6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d5fa:	4357      	muls	r7, r2
 801d5fc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d600:	3601      	adds	r6, #1
 801d602:	920b      	str	r2, [sp, #44]	; 0x2c
 801d604:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d606:	4b8c      	ldr	r3, [pc, #560]	; (801d838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d608:	b2b6      	uxth	r6, r6
 801d60a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d60e:	1d32      	adds	r2, r6, #4
 801d610:	9206      	str	r2, [sp, #24]
 801d612:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d614:	43d2      	mvns	r2, r2
 801d616:	b2d2      	uxtb	r2, r2
 801d618:	b2ad      	uxth	r5, r5
 801d61a:	9215      	str	r2, [sp, #84]	; 0x54
 801d61c:	9a04      	ldr	r2, [sp, #16]
 801d61e:	2d00      	cmp	r5, #0
 801d620:	bf0c      	ite	eq
 801d622:	4611      	moveq	r1, r2
 801d624:	2100      	movne	r1, #0
 801d626:	2200      	movs	r2, #0
 801d628:	1b1b      	subs	r3, r3, r4
 801d62a:	b289      	uxth	r1, r1
 801d62c:	920d      	str	r2, [sp, #52]	; 0x34
 801d62e:	9319      	str	r3, [sp, #100]	; 0x64
 801d630:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d632:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d634:	fa12 f383 	uxtah	r3, r2, r3
 801d638:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d63a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d63e:	3304      	adds	r3, #4
 801d640:	9307      	str	r3, [sp, #28]
 801d642:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d644:	455b      	cmp	r3, fp
 801d646:	f240 817c 	bls.w	801d942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d64a:	9a01      	ldr	r2, [sp, #4]
 801d64c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d650:	fbb5 f3f3 	udiv	r3, r5, r3
 801d654:	1ad3      	subs	r3, r2, r3
 801d656:	b29b      	uxth	r3, r3
 801d658:	9316      	str	r3, [sp, #88]	; 0x58
 801d65a:	9b07      	ldr	r3, [sp, #28]
 801d65c:	9807      	ldr	r0, [sp, #28]
 801d65e:	785a      	ldrb	r2, [r3, #1]
 801d660:	789b      	ldrb	r3, [r3, #2]
 801d662:	7800      	ldrb	r0, [r0, #0]
 801d664:	9011      	str	r0, [sp, #68]	; 0x44
 801d666:	021b      	lsls	r3, r3, #8
 801d668:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d66c:	9a07      	ldr	r2, [sp, #28]
 801d66e:	78d2      	ldrb	r2, [r2, #3]
 801d670:	4313      	orrs	r3, r2
 801d672:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d674:	3001      	adds	r0, #1
 801d676:	441a      	add	r2, r3
 801d678:	9005      	str	r0, [sp, #20]
 801d67a:	1c50      	adds	r0, r2, #1
 801d67c:	9003      	str	r0, [sp, #12]
 801d67e:	7852      	ldrb	r2, [r2, #1]
 801d680:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d682:	0212      	lsls	r2, r2, #8
 801d684:	5cc3      	ldrb	r3, [r0, r3]
 801d686:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d68a:	431a      	orrs	r2, r3
 801d68c:	b293      	uxth	r3, r2
 801d68e:	930c      	str	r3, [sp, #48]	; 0x30
 801d690:	2300      	movs	r3, #0
 801d692:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d696:	9308      	str	r3, [sp, #32]
 801d698:	461a      	mov	r2, r3
 801d69a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d69e:	930e      	str	r3, [sp, #56]	; 0x38
 801d6a0:	f04f 0801 	mov.w	r8, #1
 801d6a4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d6a8:	f8cd 8008 	str.w	r8, [sp, #8]
 801d6ac:	46c4      	mov	ip, r8
 801d6ae:	930f      	str	r3, [sp, #60]	; 0x3c
 801d6b0:	2d00      	cmp	r5, #0
 801d6b2:	d07c      	beq.n	801d7ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d6b4:	45ac      	cmp	ip, r5
 801d6b6:	d26c      	bcs.n	801d792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d6b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d6ba:	eba5 050c 	sub.w	r5, r5, ip
 801d6be:	455b      	cmp	r3, fp
 801d6c0:	b2ad      	uxth	r5, r5
 801d6c2:	4608      	mov	r0, r1
 801d6c4:	d802      	bhi.n	801d6cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d6c6:	e070      	b.n	801d7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d6c8:	2b00      	cmp	r3, #0
 801d6ca:	d15c      	bne.n	801d786 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d6cc:	9b03      	ldr	r3, [sp, #12]
 801d6ce:	9a02      	ldr	r2, [sp, #8]
 801d6d0:	785b      	ldrb	r3, [r3, #1]
 801d6d2:	9902      	ldr	r1, [sp, #8]
 801d6d4:	f1c2 0207 	rsb	r2, r2, #7
 801d6d8:	4093      	lsls	r3, r2
 801d6da:	005b      	lsls	r3, r3, #1
 801d6dc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d6e0:	9b03      	ldr	r3, [sp, #12]
 801d6e2:	781b      	ldrb	r3, [r3, #0]
 801d6e4:	410b      	asrs	r3, r1
 801d6e6:	3101      	adds	r1, #1
 801d6e8:	b2c9      	uxtb	r1, r1
 801d6ea:	2908      	cmp	r1, #8
 801d6ec:	9102      	str	r1, [sp, #8]
 801d6ee:	9903      	ldr	r1, [sp, #12]
 801d6f0:	bf0a      	itet	eq
 801d6f2:	3102      	addeq	r1, #2
 801d6f4:	3101      	addne	r1, #1
 801d6f6:	9103      	streq	r1, [sp, #12]
 801d6f8:	b2db      	uxtb	r3, r3
 801d6fa:	bf0a      	itet	eq
 801d6fc:	2100      	moveq	r1, #0
 801d6fe:	9103      	strne	r1, [sp, #12]
 801d700:	9102      	streq	r1, [sp, #8]
 801d702:	4313      	orrs	r3, r2
 801d704:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d706:	b29a      	uxth	r2, r3
 801d708:	4291      	cmp	r1, r2
 801d70a:	d30a      	bcc.n	801d722 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d70c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d710:	2301      	movs	r3, #1
 801d712:	9905      	ldr	r1, [sp, #20]
 801d714:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d718:	d30f      	bcc.n	801d73a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d71a:	2100      	movs	r1, #0
 801d71c:	4698      	mov	r8, r3
 801d71e:	9100      	str	r1, [sp, #0]
 801d720:	e032      	b.n	801d788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d722:	9b05      	ldr	r3, [sp, #20]
 801d724:	429a      	cmp	r2, r3
 801d726:	d318      	bcc.n	801d75a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d728:	eb04 0308 	add.w	r3, r4, r8
 801d72c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d730:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d734:	f108 0301 	add.w	r3, r8, #1
 801d738:	b29b      	uxth	r3, r3
 801d73a:	9905      	ldr	r1, [sp, #20]
 801d73c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d740:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d744:	710e      	strb	r6, [r1, #4]
 801d746:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d748:	80ce      	strh	r6, [r1, #6]
 801d74a:	f108 0601 	add.w	r6, r8, #1
 801d74e:	714e      	strb	r6, [r1, #5]
 801d750:	9905      	ldr	r1, [sp, #20]
 801d752:	3101      	adds	r1, #1
 801d754:	b289      	uxth	r1, r1
 801d756:	9105      	str	r1, [sp, #20]
 801d758:	e7df      	b.n	801d71a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d75a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d75e:	4611      	mov	r1, r2
 801d760:	795b      	ldrb	r3, [r3, #5]
 801d762:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d766:	4426      	add	r6, r4
 801d768:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d76a:	4437      	add	r7, r6
 801d76c:	2f00      	cmp	r7, #0
 801d76e:	dd06      	ble.n	801d77e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d770:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d774:	790f      	ldrb	r7, [r1, #4]
 801d776:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d77a:	88c9      	ldrh	r1, [r1, #6]
 801d77c:	e7f4      	b.n	801d768 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d77e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d782:	b29b      	uxth	r3, r3
 801d784:	e7c5      	b.n	801d712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d786:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d788:	920c      	str	r2, [sp, #48]	; 0x30
 801d78a:	4601      	mov	r1, r0
 801d78c:	9a00      	ldr	r2, [sp, #0]
 801d78e:	469c      	mov	ip, r3
 801d790:	e78e      	b.n	801d6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d792:	1957      	adds	r7, r2, r5
 801d794:	ebac 0305 	sub.w	r3, ip, r5
 801d798:	b2ba      	uxth	r2, r7
 801d79a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d79e:	9200      	str	r2, [sp, #0]
 801d7a0:	b29b      	uxth	r3, r3
 801d7a2:	2500      	movs	r5, #0
 801d7a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d7a6:	455a      	cmp	r2, fp
 801d7a8:	d88e      	bhi.n	801d6c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d7aa:	4601      	mov	r1, r0
 801d7ac:	e749      	b.n	801d642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d7ae:	458c      	cmp	ip, r1
 801d7b0:	bf2c      	ite	cs
 801d7b2:	4628      	movcs	r0, r5
 801d7b4:	462b      	movcc	r3, r5
 801d7b6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d7b8:	bf27      	ittee	cs
 801d7ba:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d7bc:	ebac 0301 	subcs.w	r3, ip, r1
 801d7c0:	eba1 000c 	subcc.w	r0, r1, ip
 801d7c4:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d7c8:	bf2c      	ite	cs
 801d7ca:	b29b      	uxthcs	r3, r3
 801d7cc:	b280      	uxthcc	r0, r0
 801d7ce:	2dff      	cmp	r5, #255	; 0xff
 801d7d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d7d2:	eb02 0705 	add.w	r7, r2, r5
 801d7d6:	b2bd      	uxth	r5, r7
 801d7d8:	9500      	str	r5, [sp, #0]
 801d7da:	d12f      	bne.n	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d7dc:	465e      	mov	r6, fp
 801d7de:	9d00      	ldr	r5, [sp, #0]
 801d7e0:	42aa      	cmp	r2, r5
 801d7e2:	f040 8084 	bne.w	801d8ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d7e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d7e8:	458c      	cmp	ip, r1
 801d7ea:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d7ee:	d3d8      	bcc.n	801d7a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d7f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d7f2:	9904      	ldr	r1, [sp, #16]
 801d7f4:	8812      	ldrh	r2, [r2, #0]
 801d7f6:	1a52      	subs	r2, r2, r1
 801d7f8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d7fc:	9a08      	ldr	r2, [sp, #32]
 801d7fe:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d800:	3201      	adds	r2, #1
 801d802:	428a      	cmp	r2, r1
 801d804:	9208      	str	r2, [sp, #32]
 801d806:	f040 8092 	bne.w	801d92e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d80a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d80e:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d812:	9b04      	ldr	r3, [sp, #16]
 801d814:	eba5 050c 	sub.w	r5, r5, ip
 801d818:	b2ad      	uxth	r5, r5
 801d81a:	2d00      	cmp	r5, #0
 801d81c:	bf08      	it	eq
 801d81e:	4619      	moveq	r1, r3
 801d820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d822:	bf18      	it	ne
 801d824:	2100      	movne	r1, #0
 801d826:	3301      	adds	r3, #1
 801d828:	930d      	str	r3, [sp, #52]	; 0x34
 801d82a:	b289      	uxth	r1, r1
 801d82c:	e700      	b.n	801d630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d82e:	bf00      	nop
 801d830:	20013444 	.word	0x20013444
 801d834:	2001343e 	.word	0x2001343e
 801d838:	fffff7fb 	.word	0xfffff7fb
 801d83c:	46d9      	mov	r9, fp
 801d83e:	9d00      	ldr	r5, [sp, #0]
 801d840:	42aa      	cmp	r2, r5
 801d842:	d0d0      	beq.n	801d7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d844:	1c55      	adds	r5, r2, #1
 801d846:	4422      	add	r2, r4
 801d848:	9517      	str	r5, [sp, #92]	; 0x5c
 801d84a:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d84e:	9a06      	ldr	r2, [sp, #24]
 801d850:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d854:	4472      	add	r2, lr
 801d856:	9212      	str	r2, [sp, #72]	; 0x48
 801d858:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d85a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d85e:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d862:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d864:	1216      	asrs	r6, r2, #8
 801d866:	fb1a fa07 	smulbb	sl, sl, r7
 801d86a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d86e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d870:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d874:	fb06 a607 	mla	r6, r6, r7, sl
 801d878:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d87a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d87e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d880:	10d5      	asrs	r5, r2, #3
 801d882:	fb1a fa07 	smulbb	sl, sl, r7
 801d886:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d88a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d88c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d890:	fb05 a507 	mla	r5, r5, r7, sl
 801d894:	9f06      	ldr	r7, [sp, #24]
 801d896:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d89a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d89c:	00d2      	lsls	r2, r2, #3
 801d89e:	fb1e fe07 	smulbb	lr, lr, r7
 801d8a2:	b2d2      	uxtb	r2, r2
 801d8a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d8a6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d8aa:	b2b6      	uxth	r6, r6
 801d8ac:	fb02 e207 	mla	r2, r2, r7, lr
 801d8b0:	b292      	uxth	r2, r2
 801d8b2:	b2ad      	uxth	r5, r5
 801d8b4:	f106 0a01 	add.w	sl, r6, #1
 801d8b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d8bc:	f102 0e01 	add.w	lr, r2, #1
 801d8c0:	f105 0a01 	add.w	sl, r5, #1
 801d8c4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d8c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d8cc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d8d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d8d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d8d8:	ea4e 0606 	orr.w	r6, lr, r6
 801d8dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d8e0:	ea46 060a 	orr.w	r6, r6, sl
 801d8e4:	f829 6b02 	strh.w	r6, [r9], #2
 801d8e8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d8ec:	e7a7      	b.n	801d83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d8ee:	f102 0e01 	add.w	lr, r2, #1
 801d8f2:	4422      	add	r2, r4
 801d8f4:	9f06      	ldr	r7, [sp, #24]
 801d8f6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d8fa:	9a06      	ldr	r2, [sp, #24]
 801d8fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d900:	eb02 0a05 	add.w	sl, r2, r5
 801d904:	4a13      	ldr	r2, [pc, #76]	; (801d954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d906:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d90a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d90e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d912:	00d2      	lsls	r2, r2, #3
 801d914:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d918:	ea49 0202 	orr.w	r2, r9, r2
 801d91c:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d920:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d924:	f826 2b02 	strh.w	r2, [r6], #2
 801d928:	fa1f f28e 	uxth.w	r2, lr
 801d92c:	e757      	b.n	801d7de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d92e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d932:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d936:	1a2d      	subs	r5, r5, r0
 801d938:	b2ad      	uxth	r5, r5
 801d93a:	2d00      	cmp	r5, #0
 801d93c:	bf18      	it	ne
 801d93e:	2000      	movne	r0, #0
 801d940:	e730      	b.n	801d7a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d942:	4b05      	ldr	r3, [pc, #20]	; (801d958 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d944:	6818      	ldr	r0, [r3, #0]
 801d946:	6803      	ldr	r3, [r0, #0]
 801d948:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d94a:	4798      	blx	r3
 801d94c:	b01f      	add	sp, #124	; 0x7c
 801d94e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d952:	bf00      	nop
 801d954:	fffff800 	.word	0xfffff800
 801d958:	20013444 	.word	0x20013444

0801d95c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d960:	b091      	sub	sp, #68	; 0x44
 801d962:	469b      	mov	fp, r3
 801d964:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d968:	4616      	mov	r6, r2
 801d96a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d96e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d972:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d976:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d97a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d97e:	4604      	mov	r4, r0
 801d980:	460d      	mov	r5, r1
 801d982:	4640      	mov	r0, r8
 801d984:	4659      	mov	r1, fp
 801d986:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d98a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d98e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d992:	f7f3 f9df 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801d996:	4631      	mov	r1, r6
 801d998:	4640      	mov	r0, r8
 801d99a:	f7f3 f9db 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801d99e:	4b74      	ldr	r3, [pc, #464]	; (801db70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d9a0:	8818      	ldrh	r0, [r3, #0]
 801d9a2:	4b74      	ldr	r3, [pc, #464]	; (801db74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d9a4:	8819      	ldrh	r1, [r3, #0]
 801d9a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d9aa:	2b00      	cmp	r3, #0
 801d9ac:	b202      	sxth	r2, r0
 801d9ae:	b20e      	sxth	r6, r1
 801d9b0:	da07      	bge.n	801d9c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d9b2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d9b6:	4463      	add	r3, ip
 801d9b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d9bc:	2300      	movs	r3, #0
 801d9be:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d9c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d9c6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d9ca:	1ad2      	subs	r2, r2, r3
 801d9cc:	4594      	cmp	ip, r2
 801d9ce:	bfc4      	itt	gt
 801d9d0:	1ac2      	subgt	r2, r0, r3
 801d9d2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d9d6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d9da:	2a00      	cmp	r2, #0
 801d9dc:	da07      	bge.n	801d9ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d9de:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d9e2:	4462      	add	r2, ip
 801d9e4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d9e8:	2200      	movs	r2, #0
 801d9ea:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d9ee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d9f2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d9f6:	eba6 060a 	sub.w	r6, r6, sl
 801d9fa:	42b2      	cmp	r2, r6
 801d9fc:	bfc4      	itt	gt
 801d9fe:	eba1 020a 	subgt.w	r2, r1, sl
 801da02:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801da06:	4a5c      	ldr	r2, [pc, #368]	; (801db78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801da08:	7812      	ldrb	r2, [r2, #0]
 801da0a:	b9a2      	cbnz	r2, 801da36 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801da0c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801da10:	4286      	cmp	r6, r0
 801da12:	4640      	mov	r0, r8
 801da14:	9303      	str	r3, [sp, #12]
 801da16:	bf14      	ite	ne
 801da18:	2600      	movne	r6, #0
 801da1a:	2601      	moveq	r6, #1
 801da1c:	f7f3 f9dd 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801da20:	9b03      	ldr	r3, [sp, #12]
 801da22:	b160      	cbz	r0, 801da3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801da24:	2300      	movs	r3, #0
 801da26:	8023      	strh	r3, [r4, #0]
 801da28:	8063      	strh	r3, [r4, #2]
 801da2a:	80a3      	strh	r3, [r4, #4]
 801da2c:	4620      	mov	r0, r4
 801da2e:	80e3      	strh	r3, [r4, #6]
 801da30:	b011      	add	sp, #68	; 0x44
 801da32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da36:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801da3a:	428e      	cmp	r6, r1
 801da3c:	e7e9      	b.n	801da12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801da3e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801da42:	9205      	str	r2, [sp, #20]
 801da44:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801da48:	9206      	str	r2, [sp, #24]
 801da4a:	f8bb 2000 	ldrh.w	r2, [fp]
 801da4e:	900e      	str	r0, [sp, #56]	; 0x38
 801da50:	1a9b      	subs	r3, r3, r2
 801da52:	b21b      	sxth	r3, r3
 801da54:	9303      	str	r3, [sp, #12]
 801da56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801da5a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801da5e:	ebaa 0a03 	sub.w	sl, sl, r3
 801da62:	fa0f f38a 	sxth.w	r3, sl
 801da66:	9304      	str	r3, [sp, #16]
 801da68:	9b03      	ldr	r3, [sp, #12]
 801da6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801da6e:	9b04      	ldr	r3, [sp, #16]
 801da70:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801da74:	9b05      	ldr	r3, [sp, #20]
 801da76:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801da7a:	a90e      	add	r1, sp, #56	; 0x38
 801da7c:	9b06      	ldr	r3, [sp, #24]
 801da7e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801da82:	a80c      	add	r0, sp, #48	; 0x30
 801da84:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801da88:	f7f8 f906 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da8c:	4640      	mov	r0, r8
 801da8e:	f7f8 f8bf 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da92:	a80e      	add	r0, sp, #56	; 0x38
 801da94:	f7f8 f8bc 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da98:	4b38      	ldr	r3, [pc, #224]	; (801db7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801da9a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801da9e:	881b      	ldrh	r3, [r3, #0]
 801daa0:	9307      	str	r3, [sp, #28]
 801daa2:	682b      	ldr	r3, [r5, #0]
 801daa4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801db80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801daa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801daaa:	4628      	mov	r0, r5
 801daac:	4798      	blx	r3
 801daae:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801dab2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801dab6:	4681      	mov	r9, r0
 801dab8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801dabc:	f8db 0000 	ldr.w	r0, [fp]
 801dac0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801dac2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801dac6:	6803      	ldr	r3, [r0, #0]
 801dac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801daca:	4798      	blx	r3
 801dacc:	4607      	mov	r7, r0
 801dace:	f8db 0000 	ldr.w	r0, [fp]
 801dad2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801dad6:	6803      	ldr	r3, [r0, #0]
 801dad8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dadc:	9109      	str	r1, [sp, #36]	; 0x24
 801dade:	9208      	str	r2, [sp, #32]
 801dae0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dae2:	4798      	blx	r3
 801dae4:	f010 0f01 	tst.w	r0, #1
 801dae8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801daec:	d012      	beq.n	801db14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801daee:	f8db 0000 	ldr.w	r0, [fp]
 801daf2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801daf6:	6803      	ldr	r3, [r0, #0]
 801daf8:	9200      	str	r2, [sp, #0]
 801dafa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801dafc:	e898 0006 	ldmia.w	r8, {r1, r2}
 801db00:	462b      	mov	r3, r5
 801db02:	47b0      	blx	r6
 801db04:	9b03      	ldr	r3, [sp, #12]
 801db06:	8023      	strh	r3, [r4, #0]
 801db08:	9b04      	ldr	r3, [sp, #16]
 801db0a:	8063      	strh	r3, [r4, #2]
 801db0c:	9b05      	ldr	r3, [sp, #20]
 801db0e:	80a3      	strh	r3, [r4, #4]
 801db10:	9b06      	ldr	r3, [sp, #24]
 801db12:	e78b      	b.n	801da2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801db14:	fb09 f202 	mul.w	r2, r9, r2
 801db18:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801db1c:	440f      	add	r7, r1
 801db1e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801db22:	b166      	cbz	r6, 801db3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801db24:	9a07      	ldr	r2, [sp, #28]
 801db26:	4592      	cmp	sl, r2
 801db28:	d109      	bne.n	801db3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801db2a:	f8db 0000 	ldr.w	r0, [fp]
 801db2e:	6802      	ldr	r2, [r0, #0]
 801db30:	fb09 f303 	mul.w	r3, r9, r3
 801db34:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801db36:	4629      	mov	r1, r5
 801db38:	463a      	mov	r2, r7
 801db3a:	47b0      	blx	r6
 801db3c:	e7e2      	b.n	801db04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801db3e:	fb0a f303 	mul.w	r3, sl, r3
 801db42:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801db80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801db46:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801db4a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801db4e:	4545      	cmp	r5, r8
 801db50:	d2d8      	bcs.n	801db04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801db52:	f8db 0000 	ldr.w	r0, [fp]
 801db56:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801db5a:	6802      	ldr	r2, [r0, #0]
 801db5c:	4629      	mov	r1, r5
 801db5e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801db62:	005b      	lsls	r3, r3, #1
 801db64:	463a      	mov	r2, r7
 801db66:	47d0      	blx	sl
 801db68:	444f      	add	r7, r9
 801db6a:	4435      	add	r5, r6
 801db6c:	e7ef      	b.n	801db4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801db6e:	bf00      	nop
 801db70:	20013438 	.word	0x20013438
 801db74:	2001343a 	.word	0x2001343a
 801db78:	2001343c 	.word	0x2001343c
 801db7c:	2001343e 	.word	0x2001343e
 801db80:	20013444 	.word	0x20013444

0801db84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801db84:	b5f0      	push	{r4, r5, r6, r7, lr}
 801db86:	4606      	mov	r6, r0
 801db88:	b087      	sub	sp, #28
 801db8a:	460c      	mov	r4, r1
 801db8c:	4617      	mov	r7, r2
 801db8e:	461d      	mov	r5, r3
 801db90:	b333      	cbz	r3, 801dbe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801db92:	4608      	mov	r0, r1
 801db94:	f7f3 f921 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801db98:	bb10      	cbnz	r0, 801dbe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801db9a:	6820      	ldr	r0, [r4, #0]
 801db9c:	6861      	ldr	r1, [r4, #4]
 801db9e:	4c1c      	ldr	r4, [pc, #112]	; (801dc10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801dba0:	ab04      	add	r3, sp, #16
 801dba2:	c303      	stmia	r3!, {r0, r1}
 801dba4:	a804      	add	r0, sp, #16
 801dba6:	f7f8 f833 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dbaa:	6820      	ldr	r0, [r4, #0]
 801dbac:	6803      	ldr	r3, [r0, #0]
 801dbae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dbb0:	4798      	blx	r3
 801dbb2:	2dff      	cmp	r5, #255	; 0xff
 801dbb4:	d016      	beq.n	801dbe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801dbb6:	f010 0f08 	tst.w	r0, #8
 801dbba:	6820      	ldr	r0, [r4, #0]
 801dbbc:	d015      	beq.n	801dbea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801dbbe:	2400      	movs	r4, #0
 801dbc0:	6801      	ldr	r1, [r0, #0]
 801dbc2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801dbc6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dbca:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801dbce:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801dbd2:	9401      	str	r4, [sp, #4]
 801dbd4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801dbd8:	9400      	str	r4, [sp, #0]
 801dbda:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801dbdc:	4639      	mov	r1, r7
 801dbde:	47a0      	blx	r4
 801dbe0:	b007      	add	sp, #28
 801dbe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dbe4:	f010 0f02 	tst.w	r0, #2
 801dbe8:	e7e7      	b.n	801dbba <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801dbea:	6803      	ldr	r3, [r0, #0]
 801dbec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dbee:	4798      	blx	r3
 801dbf0:	4b08      	ldr	r3, [pc, #32]	; (801dc14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801dbf2:	881a      	ldrh	r2, [r3, #0]
 801dbf4:	6833      	ldr	r3, [r6, #0]
 801dbf6:	e9cd 7500 	strd	r7, r5, [sp]
 801dbfa:	4601      	mov	r1, r0
 801dbfc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801dbfe:	4630      	mov	r0, r6
 801dc00:	ab04      	add	r3, sp, #16
 801dc02:	47a8      	blx	r5
 801dc04:	6820      	ldr	r0, [r4, #0]
 801dc06:	6803      	ldr	r3, [r0, #0]
 801dc08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc0a:	4798      	blx	r3
 801dc0c:	e7e8      	b.n	801dbe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801dc0e:	bf00      	nop
 801dc10:	20013444 	.word	0x20013444
 801dc14:	2001343e 	.word	0x2001343e

0801dc18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801dc18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dc1c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801dc20:	9e08      	ldr	r6, [sp, #32]
 801dc22:	4688      	mov	r8, r1
 801dc24:	4614      	mov	r4, r2
 801dc26:	461d      	mov	r5, r3
 801dc28:	2f00      	cmp	r7, #0
 801dc2a:	f000 80a9 	beq.w	801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc2e:	4618      	mov	r0, r3
 801dc30:	f7f3 f8d3 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801dc34:	2800      	cmp	r0, #0
 801dc36:	f040 80a3 	bne.w	801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc3a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801dc3e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801dc42:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801dc46:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801dc4a:	fb04 1303 	mla	r3, r4, r3, r1
 801dc4e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801dc52:	4365      	muls	r5, r4
 801dc54:	2fff      	cmp	r7, #255	; 0xff
 801dc56:	eba4 0200 	sub.w	r2, r4, r0
 801dc5a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dc5e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801dc62:	d04a      	beq.n	801dcfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801dc64:	b2bc      	uxth	r4, r7
 801dc66:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801dc6a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801dc6e:	fa5f f788 	uxtb.w	r7, r8
 801dc72:	b2f3      	uxtb	r3, r6
 801dc74:	0040      	lsls	r0, r0, #1
 801dc76:	fb0e fe04 	mul.w	lr, lr, r4
 801dc7a:	4367      	muls	r7, r4
 801dc7c:	4363      	muls	r3, r4
 801dc7e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801dc82:	fa1f fc8c 	uxth.w	ip, ip
 801dc86:	42a9      	cmp	r1, r5
 801dc88:	d27a      	bcs.n	801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc8a:	eb01 0900 	add.w	r9, r1, r0
 801dc8e:	4549      	cmp	r1, r9
 801dc90:	d231      	bcs.n	801dcf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801dc92:	880a      	ldrh	r2, [r1, #0]
 801dc94:	1214      	asrs	r4, r2, #8
 801dc96:	10d6      	asrs	r6, r2, #3
 801dc98:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801dc9c:	00d2      	lsls	r2, r2, #3
 801dc9e:	b2d2      	uxtb	r2, r2
 801dca0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dca4:	fb14 f40c 	smulbb	r4, r4, ip
 801dca8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dcac:	4474      	add	r4, lr
 801dcae:	fb12 f20c 	smulbb	r2, r2, ip
 801dcb2:	b2a4      	uxth	r4, r4
 801dcb4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dcb8:	441a      	add	r2, r3
 801dcba:	b292      	uxth	r2, r2
 801dcbc:	f104 0a01 	add.w	sl, r4, #1
 801dcc0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dcc4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801dcc8:	fb16 f60c 	smulbb	r6, r6, ip
 801dccc:	f102 0a01 	add.w	sl, r2, #1
 801dcd0:	443e      	add	r6, r7
 801dcd2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801dcd6:	b2b6      	uxth	r6, r6
 801dcd8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801dcdc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dce0:	4322      	orrs	r2, r4
 801dce2:	1c74      	adds	r4, r6, #1
 801dce4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801dce8:	0976      	lsrs	r6, r6, #5
 801dcea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801dcee:	4332      	orrs	r2, r6
 801dcf0:	f821 2b02 	strh.w	r2, [r1], #2
 801dcf4:	e7cb      	b.n	801dc8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801dcf6:	4441      	add	r1, r8
 801dcf8:	e7c5      	b.n	801dc86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801dcfa:	4f22      	ldr	r7, [pc, #136]	; (801dd84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801dcfc:	0973      	lsrs	r3, r6, #5
 801dcfe:	ea08 0707 	and.w	r7, r8, r7
 801dd02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd06:	433b      	orrs	r3, r7
 801dd08:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dd0c:	4333      	orrs	r3, r6
 801dd0e:	07e7      	lsls	r7, r4, #31
 801dd10:	b29b      	uxth	r3, r3
 801dd12:	d50b      	bpl.n	801dd2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801dd14:	0040      	lsls	r0, r0, #1
 801dd16:	0052      	lsls	r2, r2, #1
 801dd18:	42a9      	cmp	r1, r5
 801dd1a:	d231      	bcs.n	801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dd1c:	180c      	adds	r4, r1, r0
 801dd1e:	42a1      	cmp	r1, r4
 801dd20:	d202      	bcs.n	801dd28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801dd22:	f821 3b02 	strh.w	r3, [r1], #2
 801dd26:	e7fa      	b.n	801dd1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801dd28:	4411      	add	r1, r2
 801dd2a:	e7f5      	b.n	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801dd2c:	078e      	lsls	r6, r1, #30
 801dd2e:	d008      	beq.n	801dd42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801dd30:	0066      	lsls	r6, r4, #1
 801dd32:	460a      	mov	r2, r1
 801dd34:	42aa      	cmp	r2, r5
 801dd36:	d202      	bcs.n	801dd3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801dd38:	8013      	strh	r3, [r2, #0]
 801dd3a:	4432      	add	r2, r6
 801dd3c:	e7fa      	b.n	801dd34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801dd3e:	3102      	adds	r1, #2
 801dd40:	3801      	subs	r0, #1
 801dd42:	07c2      	lsls	r2, r0, #31
 801dd44:	d50b      	bpl.n	801dd5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801dd46:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801dd4a:	3a01      	subs	r2, #1
 801dd4c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801dd50:	0066      	lsls	r6, r4, #1
 801dd52:	42aa      	cmp	r2, r5
 801dd54:	d202      	bcs.n	801dd5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801dd56:	8013      	strh	r3, [r2, #0]
 801dd58:	4432      	add	r2, r6
 801dd5a:	e7fa      	b.n	801dd52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801dd5c:	3801      	subs	r0, #1
 801dd5e:	b178      	cbz	r0, 801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dd60:	1040      	asrs	r0, r0, #1
 801dd62:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801dd66:	0080      	lsls	r0, r0, #2
 801dd68:	0064      	lsls	r4, r4, #1
 801dd6a:	42a9      	cmp	r1, r5
 801dd6c:	d208      	bcs.n	801dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dd6e:	180e      	adds	r6, r1, r0
 801dd70:	460a      	mov	r2, r1
 801dd72:	42b2      	cmp	r2, r6
 801dd74:	d202      	bcs.n	801dd7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801dd76:	f842 3b04 	str.w	r3, [r2], #4
 801dd7a:	e7fa      	b.n	801dd72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801dd7c:	4421      	add	r1, r4
 801dd7e:	e7f4      	b.n	801dd6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801dd80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd84:	00fff800 	.word	0x00fff800

0801dd88 <_ZN8touchgfx8LCD16bppC1Ev>:
 801dd88:	2200      	movs	r2, #0
 801dd8a:	4912      	ldr	r1, [pc, #72]	; (801ddd4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801dd8c:	6042      	str	r2, [r0, #4]
 801dd8e:	6001      	str	r1, [r0, #0]
 801dd90:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801dd94:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801dd98:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801dd9c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801dda0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801dda4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801dda8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801ddac:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801ddb0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801ddb4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801ddb8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801ddbc:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801ddc0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801ddc4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801ddc8:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801ddcc:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801ddd0:	4770      	bx	lr
 801ddd2:	bf00      	nop
 801ddd4:	0802fd08 	.word	0x0802fd08

0801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801ddd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dddc:	460d      	mov	r5, r1
 801ddde:	b08d      	sub	sp, #52	; 0x34
 801dde0:	4604      	mov	r4, r0
 801dde2:	6808      	ldr	r0, [r1, #0]
 801dde4:	6849      	ldr	r1, [r1, #4]
 801dde6:	4699      	mov	r9, r3
 801dde8:	ab08      	add	r3, sp, #32
 801ddea:	c303      	stmia	r3!, {r0, r1}
 801ddec:	6810      	ldr	r0, [r2, #0]
 801ddee:	6851      	ldr	r1, [r2, #4]
 801ddf0:	ab0a      	add	r3, sp, #40	; 0x28
 801ddf2:	c303      	stmia	r3!, {r0, r1}
 801ddf4:	a808      	add	r0, sp, #32
 801ddf6:	f7f7 ff0b 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddfa:	4629      	mov	r1, r5
 801ddfc:	a80a      	add	r0, sp, #40	; 0x28
 801ddfe:	f7f7 ff4b 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de02:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801de06:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801de0a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801de0e:	4d63      	ldr	r5, [pc, #396]	; (801df9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801de10:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801de14:	6828      	ldr	r0, [r5, #0]
 801de16:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801de1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de1e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801de22:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801de26:	440a      	add	r2, r1
 801de28:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801de2c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801de30:	4413      	add	r3, r2
 801de32:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801de36:	6803      	ldr	r3, [r0, #0]
 801de38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de3a:	4798      	blx	r3
 801de3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801de40:	d119      	bne.n	801de76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801de42:	f010 0f20 	tst.w	r0, #32
 801de46:	6828      	ldr	r0, [r5, #0]
 801de48:	d018      	beq.n	801de7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801de4a:	2500      	movs	r5, #0
 801de4c:	6801      	ldr	r1, [r0, #0]
 801de4e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801de52:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801de56:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801de5a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801de5e:	9502      	str	r5, [sp, #8]
 801de60:	b2b6      	uxth	r6, r6
 801de62:	fa1f f588 	uxth.w	r5, r8
 801de66:	9601      	str	r6, [sp, #4]
 801de68:	9500      	str	r5, [sp, #0]
 801de6a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801de6c:	4621      	mov	r1, r4
 801de6e:	47a8      	blx	r5
 801de70:	b00d      	add	sp, #52	; 0x34
 801de72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de76:	f010 0f40 	tst.w	r0, #64	; 0x40
 801de7a:	e7e4      	b.n	801de46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801de7c:	6803      	ldr	r3, [r0, #0]
 801de7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de80:	4798      	blx	r3
 801de82:	4947      	ldr	r1, [pc, #284]	; (801dfa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801de84:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801de88:	880b      	ldrh	r3, [r1, #0]
 801de8a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801de8e:	fb03 5202 	mla	r2, r3, r2, r5
 801de92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de96:	4373      	muls	r3, r6
 801de98:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801de9c:	9307      	str	r3, [sp, #28]
 801de9e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dea2:	9306      	str	r3, [sp, #24]
 801dea4:	468a      	mov	sl, r1
 801dea6:	9b07      	ldr	r3, [sp, #28]
 801dea8:	4298      	cmp	r0, r3
 801deaa:	d270      	bcs.n	801df8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801deac:	9b06      	ldr	r3, [sp, #24]
 801deae:	4621      	mov	r1, r4
 801deb0:	eb00 0b03 	add.w	fp, r0, r3
 801deb4:	4558      	cmp	r0, fp
 801deb6:	d25d      	bcs.n	801df74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801deb8:	f851 4b04 	ldr.w	r4, [r1], #4
 801debc:	0e23      	lsrs	r3, r4, #24
 801debe:	d014      	beq.n	801deea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dec0:	2bff      	cmp	r3, #255	; 0xff
 801dec2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dec6:	d112      	bne.n	801deee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dec8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801decc:	d10f      	bne.n	801deee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dece:	0963      	lsrs	r3, r4, #5
 801ded0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ded4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ded8:	f02c 0c07 	bic.w	ip, ip, #7
 801dedc:	ea43 0c0c 	orr.w	ip, r3, ip
 801dee0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dee4:	ea4c 0404 	orr.w	r4, ip, r4
 801dee8:	8004      	strh	r4, [r0, #0]
 801deea:	3002      	adds	r0, #2
 801deec:	e7e2      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801deee:	fb09 f303 	mul.w	r3, r9, r3
 801def2:	8807      	ldrh	r7, [r0, #0]
 801def4:	1c5a      	adds	r2, r3, #1
 801def6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801defa:	1212      	asrs	r2, r2, #8
 801defc:	123e      	asrs	r6, r7, #8
 801defe:	b293      	uxth	r3, r2
 801df00:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801df04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801df08:	43d2      	mvns	r2, r2
 801df0a:	b2d2      	uxtb	r2, r2
 801df0c:	10fd      	asrs	r5, r7, #3
 801df0e:	fb1e fe03 	smulbb	lr, lr, r3
 801df12:	00ff      	lsls	r7, r7, #3
 801df14:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801df18:	fb06 e602 	mla	r6, r6, r2, lr
 801df1c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801df20:	b2ff      	uxtb	r7, r7
 801df22:	fa5f fc8c 	uxtb.w	ip, ip
 801df26:	b2e4      	uxtb	r4, r4
 801df28:	b2b6      	uxth	r6, r6
 801df2a:	fb1c fc03 	smulbb	ip, ip, r3
 801df2e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801df32:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801df36:	fb14 f403 	smulbb	r4, r4, r3
 801df3a:	fb05 c502 	mla	r5, r5, r2, ip
 801df3e:	f106 0e01 	add.w	lr, r6, #1
 801df42:	fb07 4702 	mla	r7, r7, r2, r4
 801df46:	b2ad      	uxth	r5, r5
 801df48:	b2bf      	uxth	r7, r7
 801df4a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801df4e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801df52:	f105 0c01 	add.w	ip, r5, #1
 801df56:	1c7e      	adds	r6, r7, #1
 801df58:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801df5c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801df60:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801df64:	096d      	lsrs	r5, r5, #5
 801df66:	ea46 060e 	orr.w	r6, r6, lr
 801df6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801df6e:	432e      	orrs	r6, r5
 801df70:	8006      	strh	r6, [r0, #0]
 801df72:	e7ba      	b.n	801deea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801df74:	f8ba 3000 	ldrh.w	r3, [sl]
 801df78:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801df7c:	eba3 0308 	sub.w	r3, r3, r8
 801df80:	eba4 0408 	sub.w	r4, r4, r8
 801df84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801df88:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801df8c:	e78b      	b.n	801dea6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801df8e:	4b03      	ldr	r3, [pc, #12]	; (801df9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801df90:	6818      	ldr	r0, [r3, #0]
 801df92:	6803      	ldr	r3, [r0, #0]
 801df94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df96:	4798      	blx	r3
 801df98:	e76a      	b.n	801de70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801df9a:	bf00      	nop
 801df9c:	20013444 	.word	0x20013444
 801dfa0:	2001343e 	.word	0x2001343e

0801dfa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dfa4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dfa8:	460c      	mov	r4, r1
 801dfaa:	b085      	sub	sp, #20
 801dfac:	6810      	ldr	r0, [r2, #0]
 801dfae:	6851      	ldr	r1, [r2, #4]
 801dfb0:	466d      	mov	r5, sp
 801dfb2:	c503      	stmia	r5!, {r0, r1}
 801dfb4:	6818      	ldr	r0, [r3, #0]
 801dfb6:	6859      	ldr	r1, [r3, #4]
 801dfb8:	4616      	mov	r6, r2
 801dfba:	c503      	stmia	r5!, {r0, r1}
 801dfbc:	4668      	mov	r0, sp
 801dfbe:	f7f7 fe27 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dfc2:	4631      	mov	r1, r6
 801dfc4:	a802      	add	r0, sp, #8
 801dfc6:	f7f7 fe67 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dfca:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dfce:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dfd2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dfd6:	4d28      	ldr	r5, [pc, #160]	; (801e078 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dfd8:	4e28      	ldr	r6, [pc, #160]	; (801e07c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dfda:	6828      	ldr	r0, [r5, #0]
 801dfdc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dfe0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dfe4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dfe8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dfec:	f8bd 1000 	ldrh.w	r1, [sp]
 801dff0:	440a      	add	r2, r1
 801dff2:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dff6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dffa:	4413      	add	r3, r2
 801dffc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e000:	6803      	ldr	r3, [r0, #0]
 801e002:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e004:	4798      	blx	r3
 801e006:	8833      	ldrh	r3, [r6, #0]
 801e008:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e00c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e010:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e080 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e014:	fb03 1202 	mla	r2, r3, r2, r1
 801e018:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e01c:	fb08 f303 	mul.w	r3, r8, r3
 801e020:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e024:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e028:	4298      	cmp	r0, r3
 801e02a:	d21d      	bcs.n	801e068 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e02c:	eb00 080c 	add.w	r8, r0, ip
 801e030:	4540      	cmp	r0, r8
 801e032:	d20f      	bcs.n	801e054 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e034:	f854 1b04 	ldr.w	r1, [r4], #4
 801e038:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e03c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e040:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e044:	ea42 0209 	orr.w	r2, r2, r9
 801e048:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e04c:	430a      	orrs	r2, r1
 801e04e:	f820 2b02 	strh.w	r2, [r0], #2
 801e052:	e7ed      	b.n	801e030 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e054:	8832      	ldrh	r2, [r6, #0]
 801e056:	1bd2      	subs	r2, r2, r7
 801e058:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e05c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e060:	1bd2      	subs	r2, r2, r7
 801e062:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e066:	e7df      	b.n	801e028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e068:	6828      	ldr	r0, [r5, #0]
 801e06a:	6803      	ldr	r3, [r0, #0]
 801e06c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e06e:	4798      	blx	r3
 801e070:	b005      	add	sp, #20
 801e072:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e076:	bf00      	nop
 801e078:	20013444 	.word	0x20013444
 801e07c:	2001343e 	.word	0x2001343e
 801e080:	fffff800 	.word	0xfffff800

0801e084 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e084:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e088:	460e      	mov	r6, r1
 801e08a:	b08e      	sub	sp, #56	; 0x38
 801e08c:	4604      	mov	r4, r0
 801e08e:	6808      	ldr	r0, [r1, #0]
 801e090:	6849      	ldr	r1, [r1, #4]
 801e092:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e26c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e096:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e270 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e09a:	461d      	mov	r5, r3
 801e09c:	ab0a      	add	r3, sp, #40	; 0x28
 801e09e:	c303      	stmia	r3!, {r0, r1}
 801e0a0:	6810      	ldr	r0, [r2, #0]
 801e0a2:	6851      	ldr	r1, [r2, #4]
 801e0a4:	ab0c      	add	r3, sp, #48	; 0x30
 801e0a6:	c303      	stmia	r3!, {r0, r1}
 801e0a8:	a80a      	add	r0, sp, #40	; 0x28
 801e0aa:	f7f7 fdb1 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0ae:	4631      	mov	r1, r6
 801e0b0:	a80c      	add	r0, sp, #48	; 0x30
 801e0b2:	f7f7 fdf1 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0b6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e0ba:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e0be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e0c2:	f8d8 0000 	ldr.w	r0, [r8]
 801e0c6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e0ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e0ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e0d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e0d6:	440c      	add	r4, r1
 801e0d8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e0dc:	440a      	add	r2, r1
 801e0de:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e0e2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e0e6:	4413      	add	r3, r2
 801e0e8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e0ec:	6803      	ldr	r3, [r0, #0]
 801e0ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0f0:	4798      	blx	r3
 801e0f2:	2dff      	cmp	r5, #255	; 0xff
 801e0f4:	d124      	bne.n	801e140 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e0f6:	f010 0f01 	tst.w	r0, #1
 801e0fa:	f8d8 0000 	ldr.w	r0, [r8]
 801e0fe:	d022      	beq.n	801e146 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e100:	2100      	movs	r1, #0
 801e102:	f8d0 c000 	ldr.w	ip, [r0]
 801e106:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e10a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e10e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e112:	f04f 0e01 	mov.w	lr, #1
 801e116:	f8cd e018 	str.w	lr, [sp, #24]
 801e11a:	f8b9 e000 	ldrh.w	lr, [r9]
 801e11e:	9503      	str	r5, [sp, #12]
 801e120:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e124:	b2b6      	uxth	r6, r6
 801e126:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e12a:	9102      	str	r1, [sp, #8]
 801e12c:	b2bf      	uxth	r7, r7
 801e12e:	9601      	str	r6, [sp, #4]
 801e130:	9700      	str	r7, [sp, #0]
 801e132:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e136:	4621      	mov	r1, r4
 801e138:	47a8      	blx	r5
 801e13a:	b00e      	add	sp, #56	; 0x38
 801e13c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e140:	f010 0f04 	tst.w	r0, #4
 801e144:	e7d9      	b.n	801e0fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e146:	6803      	ldr	r3, [r0, #0]
 801e148:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e14a:	4798      	blx	r3
 801e14c:	f8b9 3000 	ldrh.w	r3, [r9]
 801e150:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e154:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e158:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e15c:	fb03 1202 	mla	r2, r3, r2, r1
 801e160:	ebac 0c07 	sub.w	ip, ip, r7
 801e164:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e168:	435e      	muls	r6, r3
 801e16a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e16e:	2dff      	cmp	r5, #255	; 0xff
 801e170:	eba3 0707 	sub.w	r7, r3, r7
 801e174:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e178:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e17c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e180:	d049      	beq.n	801e216 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e182:	43eb      	mvns	r3, r5
 801e184:	fa1f f985 	uxth.w	r9, r5
 801e188:	b2db      	uxtb	r3, r3
 801e18a:	42b0      	cmp	r0, r6
 801e18c:	d266      	bcs.n	801e25c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e18e:	eb00 0a0e 	add.w	sl, r0, lr
 801e192:	4550      	cmp	r0, sl
 801e194:	4621      	mov	r1, r4
 801e196:	f104 0403 	add.w	r4, r4, #3
 801e19a:	d25b      	bcs.n	801e254 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e19c:	8802      	ldrh	r2, [r0, #0]
 801e19e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e1a2:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e1a6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e1aa:	fb11 f109 	smulbb	r1, r1, r9
 801e1ae:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e1b2:	10d5      	asrs	r5, r2, #3
 801e1b4:	fb08 1803 	mla	r8, r8, r3, r1
 801e1b8:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e1bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e1c0:	fb11 f109 	smulbb	r1, r1, r9
 801e1c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e1c8:	fb05 1503 	mla	r5, r5, r3, r1
 801e1cc:	00d2      	lsls	r2, r2, #3
 801e1ce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e1d2:	b2d2      	uxtb	r2, r2
 801e1d4:	fb11 f109 	smulbb	r1, r1, r9
 801e1d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e1dc:	fa1f f888 	uxth.w	r8, r8
 801e1e0:	fb02 1203 	mla	r2, r2, r3, r1
 801e1e4:	b292      	uxth	r2, r2
 801e1e6:	f108 0101 	add.w	r1, r8, #1
 801e1ea:	b2ad      	uxth	r5, r5
 801e1ec:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e1f0:	1c51      	adds	r1, r2, #1
 801e1f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e1f6:	1c69      	adds	r1, r5, #1
 801e1f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e1fc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e200:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e204:	096d      	lsrs	r5, r5, #5
 801e206:	ea42 0208 	orr.w	r2, r2, r8
 801e20a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e20e:	432a      	orrs	r2, r5
 801e210:	f820 2b02 	strh.w	r2, [r0], #2
 801e214:	e7bd      	b.n	801e192 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e216:	4a14      	ldr	r2, [pc, #80]	; (801e268 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e218:	42b0      	cmp	r0, r6
 801e21a:	d21f      	bcs.n	801e25c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e21c:	eb00 050e 	add.w	r5, r0, lr
 801e220:	42a8      	cmp	r0, r5
 801e222:	4621      	mov	r1, r4
 801e224:	f104 0403 	add.w	r4, r4, #3
 801e228:	d210      	bcs.n	801e24c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e22a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e22e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e232:	00db      	lsls	r3, r3, #3
 801e234:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e238:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e23c:	430b      	orrs	r3, r1
 801e23e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e242:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e246:	f820 3b02 	strh.w	r3, [r0], #2
 801e24a:	e7e9      	b.n	801e220 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e24c:	4438      	add	r0, r7
 801e24e:	eb01 040c 	add.w	r4, r1, ip
 801e252:	e7e1      	b.n	801e218 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e254:	4438      	add	r0, r7
 801e256:	eb01 040c 	add.w	r4, r1, ip
 801e25a:	e796      	b.n	801e18a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e25c:	4b03      	ldr	r3, [pc, #12]	; (801e26c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e25e:	6818      	ldr	r0, [r3, #0]
 801e260:	6803      	ldr	r3, [r0, #0]
 801e262:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e264:	4798      	blx	r3
 801e266:	e768      	b.n	801e13a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e268:	fffff800 	.word	0xfffff800
 801e26c:	20013444 	.word	0x20013444
 801e270:	2001343e 	.word	0x2001343e

0801e274 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e274:	b4f0      	push	{r4, r5, r6, r7}
 801e276:	4616      	mov	r6, r2
 801e278:	2e01      	cmp	r6, #1
 801e27a:	461c      	mov	r4, r3
 801e27c:	460d      	mov	r5, r1
 801e27e:	9a04      	ldr	r2, [sp, #16]
 801e280:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e284:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e288:	d012      	beq.n	801e2b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e28a:	d303      	bcc.n	801e294 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e28c:	2e02      	cmp	r6, #2
 801e28e:	d00a      	beq.n	801e2a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e290:	bcf0      	pop	{r4, r5, r6, r7}
 801e292:	4770      	bx	lr
 801e294:	6805      	ldr	r5, [r0, #0]
 801e296:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e29a:	68ed      	ldr	r5, [r5, #12]
 801e29c:	4613      	mov	r3, r2
 801e29e:	46ac      	mov	ip, r5
 801e2a0:	4622      	mov	r2, r4
 801e2a2:	bcf0      	pop	{r4, r5, r6, r7}
 801e2a4:	4760      	bx	ip
 801e2a6:	4621      	mov	r1, r4
 801e2a8:	4628      	mov	r0, r5
 801e2aa:	bcf0      	pop	{r4, r5, r6, r7}
 801e2ac:	f7ff bd94 	b.w	801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e2b0:	4621      	mov	r1, r4
 801e2b2:	4628      	mov	r0, r5
 801e2b4:	bcf0      	pop	{r4, r5, r6, r7}
 801e2b6:	f7ff bee5 	b.w	801e084 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e2bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e2bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2c0:	4681      	mov	r9, r0
 801e2c2:	b093      	sub	sp, #76	; 0x4c
 801e2c4:	6810      	ldr	r0, [r2, #0]
 801e2c6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e2ca:	4f6d      	ldr	r7, [pc, #436]	; (801e480 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e2cc:	4688      	mov	r8, r1
 801e2ce:	6851      	ldr	r1, [r2, #4]
 801e2d0:	ac0e      	add	r4, sp, #56	; 0x38
 801e2d2:	c403      	stmia	r4!, {r0, r1}
 801e2d4:	6818      	ldr	r0, [r3, #0]
 801e2d6:	6859      	ldr	r1, [r3, #4]
 801e2d8:	ac10      	add	r4, sp, #64	; 0x40
 801e2da:	4616      	mov	r6, r2
 801e2dc:	c403      	stmia	r4!, {r0, r1}
 801e2de:	a80e      	add	r0, sp, #56	; 0x38
 801e2e0:	f7f7 fc96 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2e4:	4631      	mov	r1, r6
 801e2e6:	a810      	add	r0, sp, #64	; 0x40
 801e2e8:	f7f7 fcd6 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2ec:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e2f0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e2f4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e2f8:	4e62      	ldr	r6, [pc, #392]	; (801e484 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e2fa:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e2fe:	6830      	ldr	r0, [r6, #0]
 801e300:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e304:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e308:	4489      	add	r9, r1
 801e30a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e30e:	440a      	add	r2, r1
 801e310:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e314:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e318:	4413      	add	r3, r2
 801e31a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e31e:	6803      	ldr	r3, [r0, #0]
 801e320:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e322:	4798      	blx	r3
 801e324:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e328:	6830      	ldr	r0, [r6, #0]
 801e32a:	d01d      	beq.n	801e368 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e32c:	2200      	movs	r2, #0
 801e32e:	6801      	ldr	r1, [r0, #0]
 801e330:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e334:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e338:	220b      	movs	r2, #11
 801e33a:	9207      	str	r2, [sp, #28]
 801e33c:	883a      	ldrh	r2, [r7, #0]
 801e33e:	9206      	str	r2, [sp, #24]
 801e340:	2201      	movs	r2, #1
 801e342:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e346:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e34a:	9203      	str	r2, [sp, #12]
 801e34c:	b2a4      	uxth	r4, r4
 801e34e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e352:	9200      	str	r2, [sp, #0]
 801e354:	b2ad      	uxth	r5, r5
 801e356:	9502      	str	r5, [sp, #8]
 801e358:	9401      	str	r4, [sp, #4]
 801e35a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e35c:	4642      	mov	r2, r8
 801e35e:	4649      	mov	r1, r9
 801e360:	47a0      	blx	r4
 801e362:	b013      	add	sp, #76	; 0x4c
 801e364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e368:	6803      	ldr	r3, [r0, #0]
 801e36a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e36c:	4798      	blx	r3
 801e36e:	883b      	ldrh	r3, [r7, #0]
 801e370:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e374:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e378:	fb03 1202 	mla	r2, r3, r2, r1
 801e37c:	435d      	muls	r5, r3
 801e37e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e382:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e386:	920c      	str	r2, [sp, #48]	; 0x30
 801e388:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e38c:	1b12      	subs	r2, r2, r4
 801e38e:	920d      	str	r2, [sp, #52]	; 0x34
 801e390:	0062      	lsls	r2, r4, #1
 801e392:	1b1c      	subs	r4, r3, r4
 801e394:	0063      	lsls	r3, r4, #1
 801e396:	920a      	str	r2, [sp, #40]	; 0x28
 801e398:	930b      	str	r3, [sp, #44]	; 0x2c
 801e39a:	f04f 0e04 	mov.w	lr, #4
 801e39e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e3a0:	4298      	cmp	r0, r3
 801e3a2:	d266      	bcs.n	801e472 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e3a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e3a6:	eb00 0b03 	add.w	fp, r0, r3
 801e3aa:	4558      	cmp	r0, fp
 801e3ac:	d25c      	bcs.n	801e468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e3ae:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e3b2:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e3b6:	f858 2003 	ldr.w	r2, [r8, r3]
 801e3ba:	0e11      	lsrs	r1, r2, #24
 801e3bc:	d012      	beq.n	801e3e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e3be:	29ff      	cmp	r1, #255	; 0xff
 801e3c0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e3c4:	d110      	bne.n	801e3e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e3c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e3ca:	d10d      	bne.n	801e3e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e3cc:	0953      	lsrs	r3, r2, #5
 801e3ce:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e3d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e3d6:	f027 0707 	bic.w	r7, r7, #7
 801e3da:	431f      	orrs	r7, r3
 801e3dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e3e0:	433a      	orrs	r2, r7
 801e3e2:	8002      	strh	r2, [r0, #0]
 801e3e4:	3002      	adds	r0, #2
 801e3e6:	e7e0      	b.n	801e3aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e3e8:	fb0a f101 	mul.w	r1, sl, r1
 801e3ec:	8806      	ldrh	r6, [r0, #0]
 801e3ee:	1c4b      	adds	r3, r1, #1
 801e3f0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e3f4:	1235      	asrs	r5, r6, #8
 801e3f6:	10f4      	asrs	r4, r6, #3
 801e3f8:	121b      	asrs	r3, r3, #8
 801e3fa:	00f6      	lsls	r6, r6, #3
 801e3fc:	b299      	uxth	r1, r3
 801e3fe:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e402:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e406:	b2f6      	uxtb	r6, r6
 801e408:	43db      	mvns	r3, r3
 801e40a:	b2d2      	uxtb	r2, r2
 801e40c:	b2db      	uxtb	r3, r3
 801e40e:	fb1c fc01 	smulbb	ip, ip, r1
 801e412:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e416:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e41a:	fb12 f201 	smulbb	r2, r2, r1
 801e41e:	fb05 c503 	mla	r5, r5, r3, ip
 801e422:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e426:	b2ff      	uxtb	r7, r7
 801e428:	fb06 2203 	mla	r2, r6, r3, r2
 801e42c:	b2ad      	uxth	r5, r5
 801e42e:	fb17 f701 	smulbb	r7, r7, r1
 801e432:	b292      	uxth	r2, r2
 801e434:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e438:	fb04 7403 	mla	r4, r4, r3, r7
 801e43c:	f105 0c01 	add.w	ip, r5, #1
 801e440:	1c57      	adds	r7, r2, #1
 801e442:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e446:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e44a:	b2a4      	uxth	r4, r4
 801e44c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e450:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e454:	433d      	orrs	r5, r7
 801e456:	1c67      	adds	r7, r4, #1
 801e458:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e45c:	0964      	lsrs	r4, r4, #5
 801e45e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e462:	4325      	orrs	r5, r4
 801e464:	8005      	strh	r5, [r0, #0]
 801e466:	e7bd      	b.n	801e3e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e468:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e46a:	4418      	add	r0, r3
 801e46c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e46e:	4499      	add	r9, r3
 801e470:	e795      	b.n	801e39e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e472:	4b04      	ldr	r3, [pc, #16]	; (801e484 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e474:	6818      	ldr	r0, [r3, #0]
 801e476:	6803      	ldr	r3, [r0, #0]
 801e478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e47a:	4798      	blx	r3
 801e47c:	e771      	b.n	801e362 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e47e:	bf00      	nop
 801e480:	2001343e 	.word	0x2001343e
 801e484:	20013444 	.word	0x20013444

0801e488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e48c:	b087      	sub	sp, #28
 801e48e:	4680      	mov	r8, r0
 801e490:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e494:	460d      	mov	r5, r1
 801e496:	4614      	mov	r4, r2
 801e498:	2e00      	cmp	r6, #0
 801e49a:	f000 80b9 	beq.w	801e610 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e49e:	6810      	ldr	r0, [r2, #0]
 801e4a0:	6851      	ldr	r1, [r2, #4]
 801e4a2:	af02      	add	r7, sp, #8
 801e4a4:	c703      	stmia	r7!, {r0, r1}
 801e4a6:	6818      	ldr	r0, [r3, #0]
 801e4a8:	6859      	ldr	r1, [r3, #4]
 801e4aa:	af04      	add	r7, sp, #16
 801e4ac:	c703      	stmia	r7!, {r0, r1}
 801e4ae:	a802      	add	r0, sp, #8
 801e4b0:	f7f7 fbae 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4b4:	4621      	mov	r1, r4
 801e4b6:	a804      	add	r0, sp, #16
 801e4b8:	f7f7 fbee 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4bc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e4c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e4c4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e4c8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e4cc:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e4d0:	eb08 0401 	add.w	r4, r8, r1
 801e4d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e4d8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e4dc:	440a      	add	r2, r1
 801e4de:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e4e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e4e6:	4413      	add	r3, r2
 801e4e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e4ec:	4b4a      	ldr	r3, [pc, #296]	; (801e618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e4ee:	6818      	ldr	r0, [r3, #0]
 801e4f0:	6803      	ldr	r3, [r0, #0]
 801e4f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4f4:	4798      	blx	r3
 801e4f6:	4b49      	ldr	r3, [pc, #292]	; (801e61c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e4f8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e4fc:	881a      	ldrh	r2, [r3, #0]
 801e4fe:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e502:	2eff      	cmp	r6, #255	; 0xff
 801e504:	fb02 c101 	mla	r1, r2, r1, ip
 801e508:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e50c:	fb02 f207 	mul.w	r2, r2, r7
 801e510:	f105 0104 	add.w	r1, r5, #4
 801e514:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e518:	461d      	mov	r5, r3
 801e51a:	d05a      	beq.n	801e5d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e51c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e520:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e524:	b2b6      	uxth	r6, r6
 801e526:	fa1f fe8e 	uxth.w	lr, lr
 801e52a:	9301      	str	r3, [sp, #4]
 801e52c:	4282      	cmp	r2, r0
 801e52e:	d96a      	bls.n	801e606 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e530:	eb00 0b0a 	add.w	fp, r0, sl
 801e534:	4583      	cmp	fp, r0
 801e536:	d940      	bls.n	801e5ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e538:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e53c:	8805      	ldrh	r5, [r0, #0]
 801e53e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e542:	122f      	asrs	r7, r5, #8
 801e544:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e548:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e54c:	fb17 f70e 	smulbb	r7, r7, lr
 801e550:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e554:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e558:	00ed      	lsls	r5, r5, #3
 801e55a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e55e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e562:	10df      	asrs	r7, r3, #3
 801e564:	b2ed      	uxtb	r5, r5
 801e566:	00db      	lsls	r3, r3, #3
 801e568:	fa1f fc8c 	uxth.w	ip, ip
 801e56c:	fb19 f90e 	smulbb	r9, r9, lr
 801e570:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e574:	b2db      	uxtb	r3, r3
 801e576:	fb15 f50e 	smulbb	r5, r5, lr
 801e57a:	fb07 9706 	mla	r7, r7, r6, r9
 801e57e:	fb03 5306 	mla	r3, r3, r6, r5
 801e582:	f10c 0901 	add.w	r9, ip, #1
 801e586:	b29b      	uxth	r3, r3
 801e588:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e58c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e590:	f103 0c01 	add.w	ip, r3, #1
 801e594:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e598:	b2bf      	uxth	r7, r7
 801e59a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e59e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e5a2:	f107 0901 	add.w	r9, r7, #1
 801e5a6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e5aa:	097f      	lsrs	r7, r7, #5
 801e5ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e5b0:	ea4c 0c07 	orr.w	ip, ip, r7
 801e5b4:	f820 cb02 	strh.w	ip, [r0], #2
 801e5b8:	e7bc      	b.n	801e534 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e5ba:	9b01      	ldr	r3, [sp, #4]
 801e5bc:	881b      	ldrh	r3, [r3, #0]
 801e5be:	eba3 0308 	sub.w	r3, r3, r8
 801e5c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e5ca:	eba3 0308 	sub.w	r3, r3, r8
 801e5ce:	441c      	add	r4, r3
 801e5d0:	e7ac      	b.n	801e52c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e5d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e5d6:	4282      	cmp	r2, r0
 801e5d8:	d915      	bls.n	801e606 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e5da:	eb00 060a 	add.w	r6, r0, sl
 801e5de:	4286      	cmp	r6, r0
 801e5e0:	d906      	bls.n	801e5f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e5e2:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e5e6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e5ea:	f820 3b02 	strh.w	r3, [r0], #2
 801e5ee:	e7f6      	b.n	801e5de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e5f0:	882b      	ldrh	r3, [r5, #0]
 801e5f2:	eba3 0308 	sub.w	r3, r3, r8
 801e5f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e5fe:	eba3 0308 	sub.w	r3, r3, r8
 801e602:	441c      	add	r4, r3
 801e604:	e7e7      	b.n	801e5d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e606:	4b04      	ldr	r3, [pc, #16]	; (801e618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e608:	6818      	ldr	r0, [r3, #0]
 801e60a:	6803      	ldr	r3, [r0, #0]
 801e60c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e60e:	4798      	blx	r3
 801e610:	b007      	add	sp, #28
 801e612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e616:	bf00      	nop
 801e618:	20013444 	.word	0x20013444
 801e61c:	2001343e 	.word	0x2001343e

0801e620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e624:	b091      	sub	sp, #68	; 0x44
 801e626:	4680      	mov	r8, r0
 801e628:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e62c:	460f      	mov	r7, r1
 801e62e:	4614      	mov	r4, r2
 801e630:	2d00      	cmp	r5, #0
 801e632:	d051      	beq.n	801e6d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e634:	6810      	ldr	r0, [r2, #0]
 801e636:	6851      	ldr	r1, [r2, #4]
 801e638:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e83c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e63c:	ae0c      	add	r6, sp, #48	; 0x30
 801e63e:	c603      	stmia	r6!, {r0, r1}
 801e640:	6818      	ldr	r0, [r3, #0]
 801e642:	6859      	ldr	r1, [r3, #4]
 801e644:	ae0e      	add	r6, sp, #56	; 0x38
 801e646:	c603      	stmia	r6!, {r0, r1}
 801e648:	a80c      	add	r0, sp, #48	; 0x30
 801e64a:	f7f7 fae1 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e64e:	4621      	mov	r1, r4
 801e650:	a80e      	add	r0, sp, #56	; 0x38
 801e652:	f7f7 fb21 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e656:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e65a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e65e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e662:	f8d9 0000 	ldr.w	r0, [r9]
 801e666:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e66a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e66e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e672:	eb08 0401 	add.w	r4, r8, r1
 801e676:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e67a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e67e:	440a      	add	r2, r1
 801e680:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e684:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e688:	4413      	add	r3, r2
 801e68a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e68e:	6803      	ldr	r3, [r0, #0]
 801e690:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e692:	4798      	blx	r3
 801e694:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e698:	f8d9 0000 	ldr.w	r0, [r9]
 801e69c:	d01f      	beq.n	801e6de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e69e:	2200      	movs	r2, #0
 801e6a0:	6801      	ldr	r1, [r0, #0]
 801e6a2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e6a6:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e6aa:	220b      	movs	r2, #11
 801e6ac:	9207      	str	r2, [sp, #28]
 801e6ae:	f8b8 2000 	ldrh.w	r2, [r8]
 801e6b2:	9206      	str	r2, [sp, #24]
 801e6b4:	2201      	movs	r2, #1
 801e6b6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e6ba:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e6be:	9203      	str	r2, [sp, #12]
 801e6c0:	fa1f f28a 	uxth.w	r2, sl
 801e6c4:	9202      	str	r2, [sp, #8]
 801e6c6:	b2b6      	uxth	r6, r6
 801e6c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e6cc:	9200      	str	r2, [sp, #0]
 801e6ce:	9601      	str	r6, [sp, #4]
 801e6d0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e6d2:	463a      	mov	r2, r7
 801e6d4:	4621      	mov	r1, r4
 801e6d6:	47a8      	blx	r5
 801e6d8:	b011      	add	sp, #68	; 0x44
 801e6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6de:	6803      	ldr	r3, [r0, #0]
 801e6e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e6e2:	4798      	blx	r3
 801e6e4:	f8b8 2000 	ldrh.w	r2, [r8]
 801e6e8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e6ec:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e6f0:	2dff      	cmp	r5, #255	; 0xff
 801e6f2:	fb02 1303 	mla	r3, r2, r3, r1
 801e6f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e6fa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e6fe:	fb0a fa02 	mul.w	sl, sl, r2
 801e702:	d062      	beq.n	801e7ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e704:	ea6f 0c05 	mvn.w	ip, r5
 801e708:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e70c:	930a      	str	r3, [sp, #40]	; 0x28
 801e70e:	b2ad      	uxth	r5, r5
 801e710:	fa5f fc8c 	uxtb.w	ip, ip
 801e714:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e71a:	4298      	cmp	r0, r3
 801e71c:	f080 8085 	bcs.w	801e82a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e720:	eb00 0b09 	add.w	fp, r0, r9
 801e724:	4558      	cmp	r0, fp
 801e726:	d246      	bcs.n	801e7b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e728:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e72c:	2303      	movs	r3, #3
 801e72e:	2204      	movs	r2, #4
 801e730:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e734:	eb07 0a0e 	add.w	sl, r7, lr
 801e738:	8803      	ldrh	r3, [r0, #0]
 801e73a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e73e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e742:	1219      	asrs	r1, r3, #8
 801e744:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e748:	fb18 f805 	smulbb	r8, r8, r5
 801e74c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e750:	10da      	asrs	r2, r3, #3
 801e752:	fb01 810c 	mla	r1, r1, ip, r8
 801e756:	00db      	lsls	r3, r3, #3
 801e758:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e75c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e760:	b2db      	uxtb	r3, r3
 801e762:	fb18 f805 	smulbb	r8, r8, r5
 801e766:	fb1e fe05 	smulbb	lr, lr, r5
 801e76a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e76e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e772:	b289      	uxth	r1, r1
 801e774:	fb02 820c 	mla	r2, r2, ip, r8
 801e778:	fb03 e30c 	mla	r3, r3, ip, lr
 801e77c:	b292      	uxth	r2, r2
 801e77e:	b29b      	uxth	r3, r3
 801e780:	f101 0801 	add.w	r8, r1, #1
 801e784:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e788:	f103 0e01 	add.w	lr, r3, #1
 801e78c:	f102 0801 	add.w	r8, r2, #1
 801e790:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e794:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e798:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e79c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e7a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e7a4:	ea4e 0101 	orr.w	r1, lr, r1
 801e7a8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e7ac:	ea41 0108 	orr.w	r1, r1, r8
 801e7b0:	f820 1b02 	strh.w	r1, [r0], #2
 801e7b4:	e7b6      	b.n	801e724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e7b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e7b8:	881b      	ldrh	r3, [r3, #0]
 801e7ba:	1b9b      	subs	r3, r3, r6
 801e7bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e7c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e7c4:	1b9b      	subs	r3, r3, r6
 801e7c6:	441c      	add	r4, r3
 801e7c8:	e7a6      	b.n	801e718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e7ca:	491b      	ldr	r1, [pc, #108]	; (801e838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e7cc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e7d0:	2203      	movs	r2, #3
 801e7d2:	2504      	movs	r5, #4
 801e7d4:	4550      	cmp	r0, sl
 801e7d6:	d228      	bcs.n	801e82a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e7d8:	eb00 0c09 	add.w	ip, r0, r9
 801e7dc:	4560      	cmp	r0, ip
 801e7de:	4623      	mov	r3, r4
 801e7e0:	d219      	bcs.n	801e816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e7e2:	f893 e000 	ldrb.w	lr, [r3]
 801e7e6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e7ea:	eb07 0b0e 	add.w	fp, r7, lr
 801e7ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e7f2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e7f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e7fa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e7fe:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e802:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e806:	ea43 030b 	orr.w	r3, r3, fp
 801e80a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e80e:	3401      	adds	r4, #1
 801e810:	f820 3b02 	strh.w	r3, [r0], #2
 801e814:	e7e2      	b.n	801e7dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e816:	f8b8 3000 	ldrh.w	r3, [r8]
 801e81a:	1b9b      	subs	r3, r3, r6
 801e81c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e820:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e824:	1b9b      	subs	r3, r3, r6
 801e826:	441c      	add	r4, r3
 801e828:	e7d4      	b.n	801e7d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e82a:	4b04      	ldr	r3, [pc, #16]	; (801e83c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e82c:	6818      	ldr	r0, [r3, #0]
 801e82e:	6803      	ldr	r3, [r0, #0]
 801e830:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e832:	4798      	blx	r3
 801e834:	e750      	b.n	801e6d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e836:	bf00      	nop
 801e838:	fffff800 	.word	0xfffff800
 801e83c:	20013444 	.word	0x20013444
 801e840:	2001343e 	.word	0x2001343e

0801e844 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e844:	b4f0      	push	{r4, r5, r6, r7}
 801e846:	460c      	mov	r4, r1
 801e848:	4611      	mov	r1, r2
 801e84a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e84e:	780f      	ldrb	r7, [r1, #0]
 801e850:	784e      	ldrb	r6, [r1, #1]
 801e852:	2f01      	cmp	r7, #1
 801e854:	461a      	mov	r2, r3
 801e856:	9b04      	ldr	r3, [sp, #16]
 801e858:	d036      	beq.n	801e8c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e85a:	d31e      	bcc.n	801e89a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e85c:	2f02      	cmp	r7, #2
 801e85e:	d14a      	bne.n	801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e860:	2e03      	cmp	r6, #3
 801e862:	d848      	bhi.n	801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e864:	e8df f006 	tbb	[pc, r6]
 801e868:	16140702 	.word	0x16140702
 801e86c:	9504      	str	r5, [sp, #16]
 801e86e:	4620      	mov	r0, r4
 801e870:	bcf0      	pop	{r4, r5, r6, r7}
 801e872:	f7ff be09 	b.w	801e488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e876:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e878:	2800      	cmp	r0, #0
 801e87a:	d03c      	beq.n	801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e87c:	6806      	ldr	r6, [r0, #0]
 801e87e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e882:	68b5      	ldr	r5, [r6, #8]
 801e884:	4613      	mov	r3, r2
 801e886:	46ac      	mov	ip, r5
 801e888:	460a      	mov	r2, r1
 801e88a:	4621      	mov	r1, r4
 801e88c:	bcf0      	pop	{r4, r5, r6, r7}
 801e88e:	4760      	bx	ip
 801e890:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e892:	e7f1      	b.n	801e878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e894:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e898:	e7ee      	b.n	801e878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e89a:	2e03      	cmp	r6, #3
 801e89c:	d82b      	bhi.n	801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e89e:	e8df f006 	tbb	[pc, r6]
 801e8a2:	0702      	.short	0x0702
 801e8a4:	100e      	.short	0x100e
 801e8a6:	9504      	str	r5, [sp, #16]
 801e8a8:	4620      	mov	r0, r4
 801e8aa:	bcf0      	pop	{r4, r5, r6, r7}
 801e8ac:	f7ff bd06 	b.w	801e2bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e8b0:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e8b2:	b300      	cbz	r0, 801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e8b4:	6806      	ldr	r6, [r0, #0]
 801e8b6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e8ba:	68f5      	ldr	r5, [r6, #12]
 801e8bc:	e7e2      	b.n	801e884 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e8be:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e8c0:	e7f7      	b.n	801e8b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e8c2:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e8c6:	e7f4      	b.n	801e8b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e8c8:	2e03      	cmp	r6, #3
 801e8ca:	d814      	bhi.n	801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e8cc:	e8df f006 	tbb	[pc, r6]
 801e8d0:	100e0702 	.word	0x100e0702
 801e8d4:	9504      	str	r5, [sp, #16]
 801e8d6:	4620      	mov	r0, r4
 801e8d8:	bcf0      	pop	{r4, r5, r6, r7}
 801e8da:	f7ff bea1 	b.w	801e620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e8de:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e8e0:	b148      	cbz	r0, 801e8f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e8e2:	6806      	ldr	r6, [r0, #0]
 801e8e4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e8e8:	6935      	ldr	r5, [r6, #16]
 801e8ea:	e7cb      	b.n	801e884 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e8ec:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e8ee:	e7f7      	b.n	801e8e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e8f0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e8f4:	e7f4      	b.n	801e8e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e8f6:	bcf0      	pop	{r4, r5, r6, r7}
 801e8f8:	4770      	bx	lr
	...

0801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e900:	4604      	mov	r4, r0
 801e902:	b087      	sub	sp, #28
 801e904:	6810      	ldr	r0, [r2, #0]
 801e906:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e90a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801eb44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e90e:	460e      	mov	r6, r1
 801e910:	6851      	ldr	r1, [r2, #4]
 801e912:	ad02      	add	r5, sp, #8
 801e914:	c503      	stmia	r5!, {r0, r1}
 801e916:	6818      	ldr	r0, [r3, #0]
 801e918:	6859      	ldr	r1, [r3, #4]
 801e91a:	ad04      	add	r5, sp, #16
 801e91c:	4617      	mov	r7, r2
 801e91e:	c503      	stmia	r5!, {r0, r1}
 801e920:	a802      	add	r0, sp, #8
 801e922:	f7f7 f975 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e926:	4639      	mov	r1, r7
 801e928:	a804      	add	r0, sp, #16
 801e92a:	f7f7 f9b5 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e92e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e932:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e936:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e93a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e93e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e942:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e946:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e94a:	440e      	add	r6, r1
 801e94c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e950:	440a      	add	r2, r1
 801e952:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e956:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e95a:	4413      	add	r3, r2
 801e95c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e960:	4b77      	ldr	r3, [pc, #476]	; (801eb40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e962:	6818      	ldr	r0, [r3, #0]
 801e964:	6803      	ldr	r3, [r0, #0]
 801e966:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e968:	4798      	blx	r3
 801e96a:	f8b9 b000 	ldrh.w	fp, [r9]
 801e96e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e972:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e976:	fb0b 2303 	mla	r3, fp, r3, r2
 801e97a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e97e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e982:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e986:	fb05 f50b 	mul.w	r5, r5, fp
 801e98a:	9300      	str	r3, [sp, #0]
 801e98c:	d069      	beq.n	801ea62 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e98e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e992:	4558      	cmp	r0, fp
 801e994:	f080 80cc 	bcs.w	801eb30 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e998:	9b00      	ldr	r3, [sp, #0]
 801e99a:	18c3      	adds	r3, r0, r3
 801e99c:	9301      	str	r3, [sp, #4]
 801e99e:	4631      	mov	r1, r6
 801e9a0:	9b01      	ldr	r3, [sp, #4]
 801e9a2:	4298      	cmp	r0, r3
 801e9a4:	d24f      	bcs.n	801ea46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e9a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e9aa:	2a00      	cmp	r2, #0
 801e9ac:	d048      	beq.n	801ea40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e9ae:	fb0a f202 	mul.w	r2, sl, r2
 801e9b2:	1c53      	adds	r3, r2, #1
 801e9b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9b8:	121b      	asrs	r3, r3, #8
 801e9ba:	d041      	beq.n	801ea40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e9bc:	8802      	ldrh	r2, [r0, #0]
 801e9be:	f8b4 c000 	ldrh.w	ip, [r4]
 801e9c2:	b29e      	uxth	r6, r3
 801e9c4:	1215      	asrs	r5, r2, #8
 801e9c6:	43db      	mvns	r3, r3
 801e9c8:	b2db      	uxtb	r3, r3
 801e9ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e9ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e9d2:	fb15 f503 	smulbb	r5, r5, r3
 801e9d6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e9da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e9de:	00d2      	lsls	r2, r2, #3
 801e9e0:	fb07 5706 	mla	r7, r7, r6, r5
 801e9e4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e9e8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e9ec:	b2d2      	uxtb	r2, r2
 801e9ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e9f2:	b2bf      	uxth	r7, r7
 801e9f4:	fb1e fe03 	smulbb	lr, lr, r3
 801e9f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e9fc:	fa5f fc8c 	uxtb.w	ip, ip
 801ea00:	fb12 f203 	smulbb	r2, r2, r3
 801ea04:	fb05 e506 	mla	r5, r5, r6, lr
 801ea08:	fb0c 2c06 	mla	ip, ip, r6, r2
 801ea0c:	f107 0e01 	add.w	lr, r7, #1
 801ea10:	fa1f fc8c 	uxth.w	ip, ip
 801ea14:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801ea18:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801ea1c:	f10c 0701 	add.w	r7, ip, #1
 801ea20:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ea24:	b2ad      	uxth	r5, r5
 801ea26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ea2a:	ea47 070e 	orr.w	r7, r7, lr
 801ea2e:	f105 0e01 	add.w	lr, r5, #1
 801ea32:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ea36:	096d      	lsrs	r5, r5, #5
 801ea38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ea3c:	432f      	orrs	r7, r5
 801ea3e:	8007      	strh	r7, [r0, #0]
 801ea40:	3002      	adds	r0, #2
 801ea42:	3402      	adds	r4, #2
 801ea44:	e7ac      	b.n	801e9a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ea46:	f8b9 3000 	ldrh.w	r3, [r9]
 801ea4a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ea4e:	eba3 0308 	sub.w	r3, r3, r8
 801ea52:	eba6 0608 	sub.w	r6, r6, r8
 801ea56:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ea5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ea5e:	440e      	add	r6, r1
 801ea60:	e797      	b.n	801e992 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801ea62:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801ea66:	42a8      	cmp	r0, r5
 801ea68:	d262      	bcs.n	801eb30 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ea6a:	9b00      	ldr	r3, [sp, #0]
 801ea6c:	4631      	mov	r1, r6
 801ea6e:	eb00 0b03 	add.w	fp, r0, r3
 801ea72:	4558      	cmp	r0, fp
 801ea74:	d24e      	bcs.n	801eb14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ea76:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ea7a:	b12b      	cbz	r3, 801ea88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ea7c:	2bff      	cmp	r3, #255	; 0xff
 801ea7e:	f8b4 e000 	ldrh.w	lr, [r4]
 801ea82:	d104      	bne.n	801ea8e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801ea84:	f8a0 e000 	strh.w	lr, [r0]
 801ea88:	3002      	adds	r0, #2
 801ea8a:	3402      	adds	r4, #2
 801ea8c:	e7f1      	b.n	801ea72 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801ea8e:	8802      	ldrh	r2, [r0, #0]
 801ea90:	b29f      	uxth	r7, r3
 801ea92:	1216      	asrs	r6, r2, #8
 801ea94:	43db      	mvns	r3, r3
 801ea96:	b2db      	uxtb	r3, r3
 801ea98:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ea9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801eaa0:	fb16 f603 	smulbb	r6, r6, r3
 801eaa4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801eaa8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eaac:	00d2      	lsls	r2, r2, #3
 801eaae:	fb0c 6c07 	mla	ip, ip, r7, r6
 801eab2:	b2d2      	uxtb	r2, r2
 801eab4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801eab8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801eabc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eac0:	fb1a fa03 	smulbb	sl, sl, r3
 801eac4:	fa1f fc8c 	uxth.w	ip, ip
 801eac8:	fb12 f303 	smulbb	r3, r2, r3
 801eacc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ead0:	fa5f fe8e 	uxtb.w	lr, lr
 801ead4:	fb06 a607 	mla	r6, r6, r7, sl
 801ead8:	f10c 0201 	add.w	r2, ip, #1
 801eadc:	fb0e 3307 	mla	r3, lr, r7, r3
 801eae0:	b2b6      	uxth	r6, r6
 801eae2:	b29b      	uxth	r3, r3
 801eae4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801eae8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801eaec:	f106 0a01 	add.w	sl, r6, #1
 801eaf0:	f103 0c01 	add.w	ip, r3, #1
 801eaf4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eaf8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801eafc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801eb00:	0976      	lsrs	r6, r6, #5
 801eb02:	ea4c 0c02 	orr.w	ip, ip, r2
 801eb06:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801eb0a:	ea4c 0c06 	orr.w	ip, ip, r6
 801eb0e:	f8a0 c000 	strh.w	ip, [r0]
 801eb12:	e7b9      	b.n	801ea88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801eb14:	f8b9 3000 	ldrh.w	r3, [r9]
 801eb18:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801eb1c:	eba3 0308 	sub.w	r3, r3, r8
 801eb20:	eba6 0608 	sub.w	r6, r6, r8
 801eb24:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801eb28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eb2c:	440e      	add	r6, r1
 801eb2e:	e79a      	b.n	801ea66 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801eb30:	4b03      	ldr	r3, [pc, #12]	; (801eb40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801eb32:	6818      	ldr	r0, [r3, #0]
 801eb34:	6803      	ldr	r3, [r0, #0]
 801eb36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eb38:	4798      	blx	r3
 801eb3a:	b007      	add	sp, #28
 801eb3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb40:	20013444 	.word	0x20013444
 801eb44:	2001343e 	.word	0x2001343e

0801eb48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801eb48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb4c:	b089      	sub	sp, #36	; 0x24
 801eb4e:	4682      	mov	sl, r0
 801eb50:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801eb54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801eb56:	460f      	mov	r7, r1
 801eb58:	4691      	mov	r9, r2
 801eb5a:	4698      	mov	r8, r3
 801eb5c:	2e00      	cmp	r6, #0
 801eb5e:	d03d      	beq.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb60:	4608      	mov	r0, r1
 801eb62:	f7fa fe59 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eb66:	4605      	mov	r5, r0
 801eb68:	4638      	mov	r0, r7
 801eb6a:	f7fa fe89 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb6e:	f8ad 000e 	strh.w	r0, [sp, #14]
 801eb72:	4638      	mov	r0, r7
 801eb74:	f8ad 9008 	strh.w	r9, [sp, #8]
 801eb78:	f8ad 500c 	strh.w	r5, [sp, #12]
 801eb7c:	f8ad 800a 	strh.w	r8, [sp, #10]
 801eb80:	f7fa ff36 	bl	80199f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb84:	4605      	mov	r5, r0
 801eb86:	4638      	mov	r0, r7
 801eb88:	f7fa ff62 	bl	8019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801eb8c:	4681      	mov	r9, r0
 801eb8e:	4638      	mov	r0, r7
 801eb90:	f7fa ffb2 	bl	8019af8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801eb94:	280b      	cmp	r0, #11
 801eb96:	d821      	bhi.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb98:	e8df f000 	tbb	[pc, r0]
 801eb9c:	2006aebe 	.word	0x2006aebe
 801eba0:	20202020 	.word	0x20202020
 801eba4:	b5202020 	.word	0xb5202020
 801eba8:	4bb0      	ldr	r3, [pc, #704]	; (801ee6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801ebaa:	6818      	ldr	r0, [r3, #0]
 801ebac:	6803      	ldr	r3, [r0, #0]
 801ebae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ebb0:	4798      	blx	r3
 801ebb2:	2eff      	cmp	r6, #255	; 0xff
 801ebb4:	d101      	bne.n	801ebba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801ebb6:	0683      	lsls	r3, r0, #26
 801ebb8:	d506      	bpl.n	801ebc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801ebba:	4633      	mov	r3, r6
 801ebbc:	4622      	mov	r2, r4
 801ebbe:	a902      	add	r1, sp, #8
 801ebc0:	4628      	mov	r0, r5
 801ebc2:	f7ff f909 	bl	801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ebc6:	e009      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ebc8:	4638      	mov	r0, r7
 801ebca:	f7fa fed9 	bl	8019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ebce:	b940      	cbnz	r0, 801ebe2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801ebd0:	4623      	mov	r3, r4
 801ebd2:	aa02      	add	r2, sp, #8
 801ebd4:	4629      	mov	r1, r5
 801ebd6:	4650      	mov	r0, sl
 801ebd8:	f7ff f9e4 	bl	801dfa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ebdc:	b009      	add	sp, #36	; 0x24
 801ebde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebe2:	f10d 0818 	add.w	r8, sp, #24
 801ebe6:	4639      	mov	r1, r7
 801ebe8:	4640      	mov	r0, r8
 801ebea:	f7fa fe7d 	bl	80198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ebee:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ebf2:	af04      	add	r7, sp, #16
 801ebf4:	e887 0003 	stmia.w	r7, {r0, r1}
 801ebf8:	4638      	mov	r0, r7
 801ebfa:	4621      	mov	r1, r4
 801ebfc:	f7f2 f8aa 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801ec00:	4638      	mov	r0, r7
 801ec02:	f7f2 f8ea 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801ec06:	2800      	cmp	r0, #0
 801ec08:	d1d7      	bne.n	801ebba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801ec0a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ec0e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ec12:	4293      	cmp	r3, r2
 801ec14:	dd12      	ble.n	801ec3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801ec16:	1a9b      	subs	r3, r3, r2
 801ec18:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ec1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ec20:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ec24:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ec28:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ec2c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ec30:	4642      	mov	r2, r8
 801ec32:	4633      	mov	r3, r6
 801ec34:	a902      	add	r1, sp, #8
 801ec36:	4628      	mov	r0, r5
 801ec38:	f7ff f8ce 	bl	801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ec3c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ec40:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ec44:	4293      	cmp	r3, r2
 801ec46:	dd12      	ble.n	801ec6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801ec48:	1a9b      	subs	r3, r3, r2
 801ec4a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ec4e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ec52:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ec56:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ec5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ec5e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ec62:	23ff      	movs	r3, #255	; 0xff
 801ec64:	4642      	mov	r2, r8
 801ec66:	a902      	add	r1, sp, #8
 801ec68:	4628      	mov	r0, r5
 801ec6a:	f7ff f8b5 	bl	801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ec6e:	463b      	mov	r3, r7
 801ec70:	aa02      	add	r2, sp, #8
 801ec72:	4629      	mov	r1, r5
 801ec74:	4650      	mov	r0, sl
 801ec76:	f7ff f995 	bl	801dfa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ec7a:	88a2      	ldrh	r2, [r4, #4]
 801ec7c:	8823      	ldrh	r3, [r4, #0]
 801ec7e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ec82:	4413      	add	r3, r2
 801ec84:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ec88:	440a      	add	r2, r1
 801ec8a:	b29b      	uxth	r3, r3
 801ec8c:	b292      	uxth	r2, r2
 801ec8e:	b211      	sxth	r1, r2
 801ec90:	b218      	sxth	r0, r3
 801ec92:	4288      	cmp	r0, r1
 801ec94:	dd12      	ble.n	801ecbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ec96:	1a9b      	subs	r3, r3, r2
 801ec98:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ec9c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801eca0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801eca4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eca8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ecac:	23ff      	movs	r3, #255	; 0xff
 801ecae:	4642      	mov	r2, r8
 801ecb0:	a902      	add	r1, sp, #8
 801ecb2:	4628      	mov	r0, r5
 801ecb4:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ecb8:	f7ff f88e 	bl	801ddd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ecbc:	88e2      	ldrh	r2, [r4, #6]
 801ecbe:	8863      	ldrh	r3, [r4, #2]
 801ecc0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ecc4:	4413      	add	r3, r2
 801ecc6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ecca:	440a      	add	r2, r1
 801eccc:	b29b      	uxth	r3, r3
 801ecce:	b292      	uxth	r2, r2
 801ecd0:	b211      	sxth	r1, r2
 801ecd2:	b218      	sxth	r0, r3
 801ecd4:	4288      	cmp	r0, r1
 801ecd6:	dd81      	ble.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ecd8:	1a9b      	subs	r3, r3, r2
 801ecda:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ecde:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ece2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ece6:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ecea:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ecee:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ecf2:	23ff      	movs	r3, #255	; 0xff
 801ecf4:	4642      	mov	r2, r8
 801ecf6:	e762      	b.n	801ebbe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ecf8:	4633      	mov	r3, r6
 801ecfa:	4622      	mov	r2, r4
 801ecfc:	a902      	add	r1, sp, #8
 801ecfe:	4628      	mov	r0, r5
 801ed00:	f7ff f9c0 	bl	801e084 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ed04:	e76a      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ed06:	e9cd 4600 	strd	r4, r6, [sp]
 801ed0a:	ab02      	add	r3, sp, #8
 801ed0c:	464a      	mov	r2, r9
 801ed0e:	4629      	mov	r1, r5
 801ed10:	4650      	mov	r0, sl
 801ed12:	f7ff fd97 	bl	801e844 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ed16:	e761      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ed18:	4638      	mov	r0, r7
 801ed1a:	f7fa fe31 	bl	8019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ed1e:	b950      	cbnz	r0, 801ed36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ed20:	e9cd 6000 	strd	r6, r0, [sp]
 801ed24:	f8da 3000 	ldr.w	r3, [sl]
 801ed28:	aa02      	add	r2, sp, #8
 801ed2a:	68de      	ldr	r6, [r3, #12]
 801ed2c:	4629      	mov	r1, r5
 801ed2e:	4623      	mov	r3, r4
 801ed30:	4650      	mov	r0, sl
 801ed32:	47b0      	blx	r6
 801ed34:	e752      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ed36:	f10d 0818 	add.w	r8, sp, #24
 801ed3a:	4639      	mov	r1, r7
 801ed3c:	4640      	mov	r0, r8
 801ed3e:	f7fa fdd3 	bl	80198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ed42:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ed46:	af04      	add	r7, sp, #16
 801ed48:	e887 0003 	stmia.w	r7, {r0, r1}
 801ed4c:	4638      	mov	r0, r7
 801ed4e:	4621      	mov	r1, r4
 801ed50:	f7f2 f800 	bl	8010d54 <_ZN8touchgfx4RectaNERKS0_>
 801ed54:	4638      	mov	r0, r7
 801ed56:	f7f2 f840 	bl	8010dda <_ZNK8touchgfx4Rect7isEmptyEv>
 801ed5a:	b138      	cbz	r0, 801ed6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ed5c:	9600      	str	r6, [sp, #0]
 801ed5e:	4623      	mov	r3, r4
 801ed60:	aa02      	add	r2, sp, #8
 801ed62:	4649      	mov	r1, r9
 801ed64:	4628      	mov	r0, r5
 801ed66:	f7ff fdc9 	bl	801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ed6a:	e737      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ed6c:	e9cd 6000 	strd	r6, r0, [sp]
 801ed70:	f8da 3000 	ldr.w	r3, [sl]
 801ed74:	aa02      	add	r2, sp, #8
 801ed76:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ed7a:	4629      	mov	r1, r5
 801ed7c:	463b      	mov	r3, r7
 801ed7e:	4650      	mov	r0, sl
 801ed80:	47d8      	blx	fp
 801ed82:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ed86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ed8a:	4293      	cmp	r3, r2
 801ed8c:	dd13      	ble.n	801edb6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801ed8e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ed92:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ed96:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ed9a:	1a9b      	subs	r3, r3, r2
 801ed9c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eda0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eda4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eda8:	9600      	str	r6, [sp, #0]
 801edaa:	4643      	mov	r3, r8
 801edac:	aa02      	add	r2, sp, #8
 801edae:	4649      	mov	r1, r9
 801edb0:	4628      	mov	r0, r5
 801edb2:	f7ff fda3 	bl	801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801edb6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801edba:	f9b4 2000 	ldrsh.w	r2, [r4]
 801edbe:	4293      	cmp	r3, r2
 801edc0:	dd13      	ble.n	801edea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801edc2:	1a9b      	subs	r3, r3, r2
 801edc4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801edc8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801edcc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801edd0:	f8ad 001a 	strh.w	r0, [sp, #26]
 801edd4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801edd8:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eddc:	9600      	str	r6, [sp, #0]
 801edde:	4643      	mov	r3, r8
 801ede0:	aa02      	add	r2, sp, #8
 801ede2:	4649      	mov	r1, r9
 801ede4:	4628      	mov	r0, r5
 801ede6:	f7ff fd89 	bl	801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801edea:	88a2      	ldrh	r2, [r4, #4]
 801edec:	8823      	ldrh	r3, [r4, #0]
 801edee:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801edf2:	4413      	add	r3, r2
 801edf4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801edf8:	440a      	add	r2, r1
 801edfa:	b29b      	uxth	r3, r3
 801edfc:	b292      	uxth	r2, r2
 801edfe:	b211      	sxth	r1, r2
 801ee00:	b218      	sxth	r0, r3
 801ee02:	4288      	cmp	r0, r1
 801ee04:	dd13      	ble.n	801ee2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ee06:	1a9b      	subs	r3, r3, r2
 801ee08:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ee0c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ee10:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ee14:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ee18:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ee1c:	9600      	str	r6, [sp, #0]
 801ee1e:	4643      	mov	r3, r8
 801ee20:	aa02      	add	r2, sp, #8
 801ee22:	4649      	mov	r1, r9
 801ee24:	4628      	mov	r0, r5
 801ee26:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ee2a:	f7ff fd67 	bl	801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ee2e:	88e2      	ldrh	r2, [r4, #6]
 801ee30:	8863      	ldrh	r3, [r4, #2]
 801ee32:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ee36:	4413      	add	r3, r2
 801ee38:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ee3c:	440a      	add	r2, r1
 801ee3e:	b29b      	uxth	r3, r3
 801ee40:	b292      	uxth	r2, r2
 801ee42:	b211      	sxth	r1, r2
 801ee44:	b218      	sxth	r0, r3
 801ee46:	4288      	cmp	r0, r1
 801ee48:	f77f aec8 	ble.w	801ebdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ee4c:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ee50:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ee54:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ee58:	1a9b      	subs	r3, r3, r2
 801ee5a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ee5e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ee62:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ee66:	9600      	str	r6, [sp, #0]
 801ee68:	4643      	mov	r3, r8
 801ee6a:	e779      	b.n	801ed60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ee6c:	20013444 	.word	0x20013444

0801ee70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ee70:	b180      	cbz	r0, 801ee94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ee72:	2903      	cmp	r1, #3
 801ee74:	d81c      	bhi.n	801eeb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ee76:	e8df f001 	tbb	[pc, r1]
 801ee7a:	1d02      	.short	0x1d02
 801ee7c:	1f08      	.short	0x1f08
 801ee7e:	4b10      	ldr	r3, [pc, #64]	; (801eec0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ee80:	8818      	ldrh	r0, [r3, #0]
 801ee82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee86:	4240      	negs	r0, r0
 801ee88:	4770      	bx	lr
 801ee8a:	4b0d      	ldr	r3, [pc, #52]	; (801eec0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ee8c:	8818      	ldrh	r0, [r3, #0]
 801ee8e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee92:	4770      	bx	lr
 801ee94:	2903      	cmp	r1, #3
 801ee96:	d80b      	bhi.n	801eeb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ee98:	a301      	add	r3, pc, #4	; (adr r3, 801eea0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ee9a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ee9e:	bf00      	nop
 801eea0:	0801eeb5 	.word	0x0801eeb5
 801eea4:	0801ee8b 	.word	0x0801ee8b
 801eea8:	0801eeb9 	.word	0x0801eeb9
 801eeac:	0801ee7f 	.word	0x0801ee7f
 801eeb0:	2000      	movs	r0, #0
 801eeb2:	4770      	bx	lr
 801eeb4:	2001      	movs	r0, #1
 801eeb6:	4770      	bx	lr
 801eeb8:	f04f 30ff 	mov.w	r0, #4294967295
 801eebc:	4770      	bx	lr
 801eebe:	bf00      	nop
 801eec0:	2001343e 	.word	0x2001343e

0801eec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801eec4:	b180      	cbz	r0, 801eee8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801eec6:	2903      	cmp	r1, #3
 801eec8:	d81c      	bhi.n	801ef04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eeca:	e8df f001 	tbb	[pc, r1]
 801eece:	021d      	.short	0x021d
 801eed0:	071f      	.short	0x071f
 801eed2:	4b10      	ldr	r3, [pc, #64]	; (801ef14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801eed4:	8818      	ldrh	r0, [r3, #0]
 801eed6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eeda:	4770      	bx	lr
 801eedc:	4b0d      	ldr	r3, [pc, #52]	; (801ef14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801eede:	8818      	ldrh	r0, [r3, #0]
 801eee0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eee4:	4240      	negs	r0, r0
 801eee6:	4770      	bx	lr
 801eee8:	2903      	cmp	r1, #3
 801eeea:	d80b      	bhi.n	801ef04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eeec:	a301      	add	r3, pc, #4	; (adr r3, 801eef4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801eeee:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801eef2:	bf00      	nop
 801eef4:	0801eed3 	.word	0x0801eed3
 801eef8:	0801ef0d 	.word	0x0801ef0d
 801eefc:	0801eedd 	.word	0x0801eedd
 801ef00:	0801ef09 	.word	0x0801ef09
 801ef04:	2000      	movs	r0, #0
 801ef06:	4770      	bx	lr
 801ef08:	2001      	movs	r0, #1
 801ef0a:	4770      	bx	lr
 801ef0c:	f04f 30ff 	mov.w	r0, #4294967295
 801ef10:	4770      	bx	lr
 801ef12:	bf00      	nop
 801ef14:	2001343e 	.word	0x2001343e

0801ef18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ef18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef1c:	b099      	sub	sp, #100	; 0x64
 801ef1e:	910b      	str	r1, [sp, #44]	; 0x2c
 801ef20:	a914      	add	r1, sp, #80	; 0x50
 801ef22:	e881 000c 	stmia.w	r1, {r2, r3}
 801ef26:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ef2a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ef2e:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ef32:	9309      	str	r3, [sp, #36]	; 0x24
 801ef34:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ef38:	9310      	str	r3, [sp, #64]	; 0x40
 801ef3a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ef3e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ef42:	930c      	str	r3, [sp, #48]	; 0x30
 801ef44:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ef48:	798f      	ldrb	r7, [r1, #6]
 801ef4a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ef4e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ef52:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ef56:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ef5a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ef5e:	431f      	orrs	r7, r3
 801ef60:	f000 8195 	beq.w	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef64:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ef68:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ef6c:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ef70:	ea59 0903 	orrs.w	r9, r9, r3
 801ef74:	f000 818b 	beq.w	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef78:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ef7c:	b29b      	uxth	r3, r3
 801ef7e:	2d00      	cmp	r5, #0
 801ef80:	f000 812e 	beq.w	801f1e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ef84:	1aed      	subs	r5, r5, r3
 801ef86:	b2ad      	uxth	r5, r5
 801ef88:	042b      	lsls	r3, r5, #16
 801ef8a:	d502      	bpl.n	801ef92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ef8c:	1b64      	subs	r4, r4, r5
 801ef8e:	b224      	sxth	r4, r4
 801ef90:	2500      	movs	r5, #0
 801ef92:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ef96:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ef9a:	428c      	cmp	r4, r1
 801ef9c:	b28b      	uxth	r3, r1
 801ef9e:	bfbf      	itttt	lt
 801efa0:	18ed      	addlt	r5, r5, r3
 801efa2:	1b2c      	sublt	r4, r5, r4
 801efa4:	b2a5      	uxthlt	r5, r4
 801efa6:	460c      	movlt	r4, r1
 801efa8:	8891      	ldrh	r1, [r2, #4]
 801efaa:	440b      	add	r3, r1
 801efac:	b21b      	sxth	r3, r3
 801efae:	930f      	str	r3, [sp, #60]	; 0x3c
 801efb0:	88d3      	ldrh	r3, [r2, #6]
 801efb2:	8852      	ldrh	r2, [r2, #2]
 801efb4:	4413      	add	r3, r2
 801efb6:	b21b      	sxth	r3, r3
 801efb8:	930d      	str	r3, [sp, #52]	; 0x34
 801efba:	4bbe      	ldr	r3, [pc, #760]	; (801f2b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801efbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801efbe:	f893 b000 	ldrb.w	fp, [r3]
 801efc2:	f10b 3cff 	add.w	ip, fp, #4294967295
 801efc6:	f1dc 0300 	rsbs	r3, ip, #0
 801efca:	eb43 030c 	adc.w	r3, r3, ip
 801efce:	930e      	str	r3, [sp, #56]	; 0x38
 801efd0:	4621      	mov	r1, r4
 801efd2:	4653      	mov	r3, sl
 801efd4:	a814      	add	r0, sp, #80	; 0x50
 801efd6:	f7f6 fc90 	bl	80158fa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801efda:	4621      	mov	r1, r4
 801efdc:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801efe0:	4653      	mov	r3, sl
 801efe2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801efe4:	a814      	add	r0, sp, #80	; 0x50
 801efe6:	f7f6 fca5 	bl	8015934 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801efea:	a918      	add	r1, sp, #96	; 0x60
 801efec:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801eff0:	a817      	add	r0, sp, #92	; 0x5c
 801eff2:	f7f6 fdcb 	bl	8015b8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801eff6:	f1ba 0f00 	cmp.w	sl, #0
 801effa:	f040 80f4 	bne.w	801f1e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801effe:	f1bb 0f01 	cmp.w	fp, #1
 801f002:	f040 80f8 	bne.w	801f1f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f006:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f008:	2b00      	cmp	r3, #0
 801f00a:	f040 8145 	bne.w	801f298 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f00e:	b2ba      	uxth	r2, r7
 801f010:	b905      	cbnz	r5, 801f014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f012:	b16e      	cbz	r6, 801f030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f014:	fb06 5302 	mla	r3, r6, r2, r5
 801f018:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f01a:	fb08 f303 	mul.w	r3, r8, r3
 801f01e:	4631      	mov	r1, r6
 801f020:	f003 0607 	and.w	r6, r3, #7
 801f024:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f028:	9328      	str	r3, [sp, #160]	; 0xa0
 801f02a:	eba9 0301 	sub.w	r3, r9, r1
 801f02e:	930a      	str	r3, [sp, #40]	; 0x28
 801f030:	4651      	mov	r1, sl
 801f032:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f034:	f7ff ff1c 	bl	801ee70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f038:	4681      	mov	r9, r0
 801f03a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f03c:	f7ff ff42 	bl	801eec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f040:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f042:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f044:	eba3 0a01 	sub.w	sl, r3, r1
 801f048:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f04a:	459a      	cmp	sl, r3
 801f04c:	bfa8      	it	ge
 801f04e:	469a      	movge	sl, r3
 801f050:	f1ba 0f00 	cmp.w	sl, #0
 801f054:	4683      	mov	fp, r0
 801f056:	f340 811a 	ble.w	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f05a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f05c:	1b64      	subs	r4, r4, r5
 801f05e:	1b1c      	subs	r4, r3, r4
 801f060:	42bc      	cmp	r4, r7
 801f062:	bfd4      	ite	le
 801f064:	ebc5 0504 	rsble	r5, r5, r4
 801f068:	ebc5 0507 	rsbgt	r5, r5, r7
 801f06c:	2d00      	cmp	r5, #0
 801f06e:	f340 810e 	ble.w	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f072:	1b52      	subs	r2, r2, r5
 801f074:	fb08 f302 	mul.w	r3, r8, r2
 801f078:	930f      	str	r3, [sp, #60]	; 0x3c
 801f07a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f07c:	2b00      	cmp	r3, #0
 801f07e:	f040 8116 	bne.w	801f2ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f082:	4b8d      	ldr	r3, [pc, #564]	; (801f2b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f084:	6818      	ldr	r0, [r3, #0]
 801f086:	6803      	ldr	r3, [r0, #0]
 801f088:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f08a:	4798      	blx	r3
 801f08c:	2301      	movs	r3, #1
 801f08e:	fa03 f308 	lsl.w	r3, r3, r8
 801f092:	4a8a      	ldr	r2, [pc, #552]	; (801f2bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f094:	3b01      	subs	r3, #1
 801f096:	b2db      	uxtb	r3, r3
 801f098:	8811      	ldrh	r1, [r2, #0]
 801f09a:	930e      	str	r3, [sp, #56]	; 0x38
 801f09c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f0a0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f0a4:	fb01 2303 	mla	r3, r1, r3, r2
 801f0a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f0ac:	930a      	str	r3, [sp, #40]	; 0x28
 801f0ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f0b0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f0b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801f0b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f0b8:	0a19      	lsrs	r1, r3, #8
 801f0ba:	b2cb      	uxtb	r3, r1
 801f0bc:	9312      	str	r3, [sp, #72]	; 0x48
 801f0be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f0c0:	b2db      	uxtb	r3, r3
 801f0c2:	9311      	str	r3, [sp, #68]	; 0x44
 801f0c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f0c6:	095a      	lsrs	r2, r3, #5
 801f0c8:	4b7d      	ldr	r3, [pc, #500]	; (801f2c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f0ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0ce:	400b      	ands	r3, r1
 801f0d0:	4313      	orrs	r3, r2
 801f0d2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f0d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f0d8:	4313      	orrs	r3, r2
 801f0da:	b29b      	uxth	r3, r3
 801f0dc:	9310      	str	r3, [sp, #64]	; 0x40
 801f0de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0e0:	781a      	ldrb	r2, [r3, #0]
 801f0e2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f0e6:	4132      	asrs	r2, r6
 801f0e8:	fb05 b919 	mls	r9, r5, r9, fp
 801f0ec:	fb03 fb05 	mul.w	fp, r3, r5
 801f0f0:	b2d2      	uxtb	r2, r2
 801f0f2:	930d      	str	r3, [sp, #52]	; 0x34
 801f0f4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f0f8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f0fc:	f0c0 80f5 	bcc.w	801f2ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f100:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f104:	46ae      	mov	lr, r5
 801f106:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f10a:	f0c0 80dd 	bcc.w	801f2c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f10e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f110:	4013      	ands	r3, r2
 801f112:	d055      	beq.n	801f1c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f114:	20ff      	movs	r0, #255	; 0xff
 801f116:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f118:	fb90 f1f1 	sdiv	r1, r0, r1
 801f11c:	434b      	muls	r3, r1
 801f11e:	2bfe      	cmp	r3, #254	; 0xfe
 801f120:	dd03      	ble.n	801f12a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f122:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f124:	4281      	cmp	r1, r0
 801f126:	f000 80cd 	beq.w	801f2c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f12a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f12c:	f8bc 4000 	ldrh.w	r4, [ip]
 801f130:	fb11 f303 	smulbb	r3, r1, r3
 801f134:	b29b      	uxth	r3, r3
 801f136:	1c59      	adds	r1, r3, #1
 801f138:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f13c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f140:	b29f      	uxth	r7, r3
 801f142:	43db      	mvns	r3, r3
 801f144:	b2db      	uxtb	r3, r3
 801f146:	9309      	str	r3, [sp, #36]	; 0x24
 801f148:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f14a:	1220      	asrs	r0, r4, #8
 801f14c:	fb13 f907 	smulbb	r9, r3, r7
 801f150:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f156:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f15a:	fb00 9003 	mla	r0, r0, r3, r9
 801f15e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f160:	10e1      	asrs	r1, r4, #3
 801f162:	fb13 f907 	smulbb	r9, r3, r7
 801f166:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f16a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f16c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f170:	fb01 9103 	mla	r1, r1, r3, r9
 801f174:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f176:	00e4      	lsls	r4, r4, #3
 801f178:	fb13 f707 	smulbb	r7, r3, r7
 801f17c:	b2e4      	uxtb	r4, r4
 801f17e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f180:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f184:	fb04 7403 	mla	r4, r4, r3, r7
 801f188:	b280      	uxth	r0, r0
 801f18a:	b2a4      	uxth	r4, r4
 801f18c:	1c43      	adds	r3, r0, #1
 801f18e:	f104 0901 	add.w	r9, r4, #1
 801f192:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f196:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f19a:	b289      	uxth	r1, r1
 801f19c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f1a0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f1a4:	ea49 0000 	orr.w	r0, r9, r0
 801f1a8:	f101 0901 	add.w	r9, r1, #1
 801f1ac:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f1b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f1b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f1b8:	ea40 0009 	orr.w	r0, r0, r9
 801f1bc:	f8ac 0000 	strh.w	r0, [ip]
 801f1c0:	4446      	add	r6, r8
 801f1c2:	b2b6      	uxth	r6, r6
 801f1c4:	2e07      	cmp	r6, #7
 801f1c6:	bf81      	itttt	hi
 801f1c8:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f1ca:	785a      	ldrbhi	r2, [r3, #1]
 801f1cc:	3301      	addhi	r3, #1
 801f1ce:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f1d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f1d2:	bf9a      	itte	ls
 801f1d4:	fa42 f208 	asrls.w	r2, r2, r8
 801f1d8:	b2d2      	uxtbls	r2, r2
 801f1da:	2600      	movhi	r6, #0
 801f1dc:	449c      	add	ip, r3
 801f1de:	e792      	b.n	801f106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f1e0:	441c      	add	r4, r3
 801f1e2:	b224      	sxth	r4, r4
 801f1e4:	e6d5      	b.n	801ef92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f1e6:	f1ba 0f01 	cmp.w	sl, #1
 801f1ea:	f47f af0c 	bne.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1ee:	f1bb 0f01 	cmp.w	fp, #1
 801f1f2:	f47f af08 	bne.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1f6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f2b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f1fa:	f8db 0000 	ldr.w	r0, [fp]
 801f1fe:	6803      	ldr	r3, [r0, #0]
 801f200:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f202:	4798      	blx	r3
 801f204:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f208:	465a      	mov	r2, fp
 801f20a:	d006      	beq.n	801f21a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f20c:	f1b8 0f04 	cmp.w	r8, #4
 801f210:	d140      	bne.n	801f294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f212:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f214:	3300      	adds	r3, #0
 801f216:	bf18      	it	ne
 801f218:	2301      	movne	r3, #1
 801f21a:	0580      	lsls	r0, r0, #22
 801f21c:	d56e      	bpl.n	801f2fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f21e:	f1b8 0f08 	cmp.w	r8, #8
 801f222:	d16b      	bne.n	801f2fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f224:	2b00      	cmp	r3, #0
 801f226:	bf0c      	ite	eq
 801f228:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f22c:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f230:	2d00      	cmp	r5, #0
 801f232:	f47f aee8 	bne.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f236:	2e00      	cmp	r6, #0
 801f238:	f47f aee5 	bne.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f23c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f23e:	19e3      	adds	r3, r4, r7
 801f240:	4283      	cmp	r3, r0
 801f242:	f73f aee0 	bgt.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f248:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f24a:	444b      	add	r3, r9
 801f24c:	4283      	cmp	r3, r0
 801f24e:	f73f aeda 	bgt.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f252:	6810      	ldr	r0, [r2, #0]
 801f254:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f258:	6804      	ldr	r4, [r0, #0]
 801f25a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f25e:	b2bf      	uxth	r7, r7
 801f260:	f1b8 0f08 	cmp.w	r8, #8
 801f264:	f04f 0500 	mov.w	r5, #0
 801f268:	bf18      	it	ne
 801f26a:	3701      	addne	r7, #1
 801f26c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f270:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f272:	9104      	str	r1, [sp, #16]
 801f274:	bf18      	it	ne
 801f276:	f027 0701 	bicne.w	r7, r7, #1
 801f27a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f27c:	bf18      	it	ne
 801f27e:	b2bf      	uxthne	r7, r7
 801f280:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f284:	e9cd 7900 	strd	r7, r9, [sp]
 801f288:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f28a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f28c:	47a0      	blx	r4
 801f28e:	b019      	add	sp, #100	; 0x64
 801f290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f294:	2300      	movs	r3, #0
 801f296:	e7c0      	b.n	801f21a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f298:	2208      	movs	r2, #8
 801f29a:	fb92 f3f8 	sdiv	r3, r2, r8
 801f29e:	1e5a      	subs	r2, r3, #1
 801f2a0:	443a      	add	r2, r7
 801f2a2:	fb92 f2f3 	sdiv	r2, r2, r3
 801f2a6:	fb12 f203 	smulbb	r2, r2, r3
 801f2aa:	b292      	uxth	r2, r2
 801f2ac:	e6b0      	b.n	801f010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f2ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f2b0:	e6ec      	b.n	801f08c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f2b2:	bf00      	nop
 801f2b4:	2001343c 	.word	0x2001343c
 801f2b8:	20013444 	.word	0x20013444
 801f2bc:	2001343e 	.word	0x2001343e
 801f2c0:	00fff800 	.word	0x00fff800
 801f2c4:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f2c6:	e779      	b.n	801f1bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f2c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f2ca:	b153      	cbz	r3, 801f2e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f2cc:	441e      	add	r6, r3
 801f2ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2d0:	b2b6      	uxth	r6, r6
 801f2d2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f2d6:	f006 0607 	and.w	r6, r6, #7
 801f2da:	781a      	ldrb	r2, [r3, #0]
 801f2dc:	9328      	str	r3, [sp, #160]	; 0xa0
 801f2de:	4132      	asrs	r2, r6
 801f2e0:	b2d2      	uxtb	r2, r2
 801f2e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f2e4:	445b      	add	r3, fp
 801f2e6:	930a      	str	r3, [sp, #40]	; 0x28
 801f2e8:	e706      	b.n	801f0f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f2ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2ec:	2b00      	cmp	r3, #0
 801f2ee:	d1ce      	bne.n	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f2f0:	4b05      	ldr	r3, [pc, #20]	; (801f308 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f2f2:	6818      	ldr	r0, [r3, #0]
 801f2f4:	6803      	ldr	r3, [r0, #0]
 801f2f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f2f8:	4798      	blx	r3
 801f2fa:	e7c8      	b.n	801f28e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f2fc:	2b00      	cmp	r3, #0
 801f2fe:	f43f ae82 	beq.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f302:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f306:	e793      	b.n	801f230 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f308:	20013444 	.word	0x20013444

0801f30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f30c:	b538      	push	{r3, r4, r5, lr}
 801f30e:	4c15      	ldr	r4, [pc, #84]	; (801f364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f310:	7823      	ldrb	r3, [r4, #0]
 801f312:	f3bf 8f5b 	dmb	ish
 801f316:	07da      	lsls	r2, r3, #31
 801f318:	4605      	mov	r5, r0
 801f31a:	d40b      	bmi.n	801f334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f31c:	4620      	mov	r0, r4
 801f31e:	f00a fee2 	bl	802a0e6 <__cxa_guard_acquire>
 801f322:	b138      	cbz	r0, 801f334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f324:	4620      	mov	r0, r4
 801f326:	f00a feea 	bl	802a0fe <__cxa_guard_release>
 801f32a:	4a0f      	ldr	r2, [pc, #60]	; (801f368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f32c:	490f      	ldr	r1, [pc, #60]	; (801f36c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f32e:	4810      	ldr	r0, [pc, #64]	; (801f370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f330:	f00a fed2 	bl	802a0d8 <__aeabi_atexit>
 801f334:	4c0f      	ldr	r4, [pc, #60]	; (801f374 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f336:	7823      	ldrb	r3, [r4, #0]
 801f338:	f3bf 8f5b 	dmb	ish
 801f33c:	07db      	lsls	r3, r3, #31
 801f33e:	d40b      	bmi.n	801f358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f340:	4620      	mov	r0, r4
 801f342:	f00a fed0 	bl	802a0e6 <__cxa_guard_acquire>
 801f346:	b138      	cbz	r0, 801f358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f348:	4620      	mov	r0, r4
 801f34a:	f00a fed8 	bl	802a0fe <__cxa_guard_release>
 801f34e:	4a06      	ldr	r2, [pc, #24]	; (801f368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f350:	4909      	ldr	r1, [pc, #36]	; (801f378 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f352:	480a      	ldr	r0, [pc, #40]	; (801f37c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f354:	f00a fec0 	bl	802a0d8 <__aeabi_atexit>
 801f358:	4b05      	ldr	r3, [pc, #20]	; (801f370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f35a:	612b      	str	r3, [r5, #16]
 801f35c:	4b07      	ldr	r3, [pc, #28]	; (801f37c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f35e:	616b      	str	r3, [r5, #20]
 801f360:	bd38      	pop	{r3, r4, r5, pc}
 801f362:	bf00      	nop
 801f364:	20013524 	.word	0x20013524
 801f368:	20000000 	.word	0x20000000
 801f36c:	0801c10f 	.word	0x0801c10f
 801f370:	200000d4 	.word	0x200000d4
 801f374:	20013528 	.word	0x20013528
 801f378:	0801c10d 	.word	0x0801c10d
 801f37c:	200000d8 	.word	0x200000d8

0801f380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f380:	b538      	push	{r3, r4, r5, lr}
 801f382:	4c15      	ldr	r4, [pc, #84]	; (801f3d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f384:	7823      	ldrb	r3, [r4, #0]
 801f386:	f3bf 8f5b 	dmb	ish
 801f38a:	07da      	lsls	r2, r3, #31
 801f38c:	4605      	mov	r5, r0
 801f38e:	d40b      	bmi.n	801f3a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f390:	4620      	mov	r0, r4
 801f392:	f00a fea8 	bl	802a0e6 <__cxa_guard_acquire>
 801f396:	b138      	cbz	r0, 801f3a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f398:	4620      	mov	r0, r4
 801f39a:	f00a feb0 	bl	802a0fe <__cxa_guard_release>
 801f39e:	4a0f      	ldr	r2, [pc, #60]	; (801f3dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f3a0:	490f      	ldr	r1, [pc, #60]	; (801f3e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f3a2:	4810      	ldr	r0, [pc, #64]	; (801f3e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f3a4:	f00a fe98 	bl	802a0d8 <__aeabi_atexit>
 801f3a8:	4c0f      	ldr	r4, [pc, #60]	; (801f3e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f3aa:	7823      	ldrb	r3, [r4, #0]
 801f3ac:	f3bf 8f5b 	dmb	ish
 801f3b0:	07db      	lsls	r3, r3, #31
 801f3b2:	d40b      	bmi.n	801f3cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f3b4:	4620      	mov	r0, r4
 801f3b6:	f00a fe96 	bl	802a0e6 <__cxa_guard_acquire>
 801f3ba:	b138      	cbz	r0, 801f3cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f3bc:	4620      	mov	r0, r4
 801f3be:	f00a fe9e 	bl	802a0fe <__cxa_guard_release>
 801f3c2:	4a06      	ldr	r2, [pc, #24]	; (801f3dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f3c4:	4909      	ldr	r1, [pc, #36]	; (801f3ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f3c6:	480a      	ldr	r0, [pc, #40]	; (801f3f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f3c8:	f00a fe86 	bl	802a0d8 <__aeabi_atexit>
 801f3cc:	4b05      	ldr	r3, [pc, #20]	; (801f3e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f3ce:	60ab      	str	r3, [r5, #8]
 801f3d0:	4b07      	ldr	r3, [pc, #28]	; (801f3f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f3d2:	60eb      	str	r3, [r5, #12]
 801f3d4:	bd38      	pop	{r3, r4, r5, pc}
 801f3d6:	bf00      	nop
 801f3d8:	200134fc 	.word	0x200134fc
 801f3dc:	20000000 	.word	0x20000000
 801f3e0:	0801c113 	.word	0x0801c113
 801f3e4:	200000ac 	.word	0x200000ac
 801f3e8:	20013500 	.word	0x20013500
 801f3ec:	0801c111 	.word	0x0801c111
 801f3f0:	200000b0 	.word	0x200000b0

0801f3f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f3f4:	b510      	push	{r4, lr}
 801f3f6:	4604      	mov	r4, r0
 801f3f8:	f7ff ff88 	bl	801f30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f3fc:	4620      	mov	r0, r4
 801f3fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f402:	f7ff bfbd 	b.w	801f380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f408:	b538      	push	{r3, r4, r5, lr}
 801f40a:	4c15      	ldr	r4, [pc, #84]	; (801f460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f40c:	7823      	ldrb	r3, [r4, #0]
 801f40e:	f3bf 8f5b 	dmb	ish
 801f412:	07da      	lsls	r2, r3, #31
 801f414:	4605      	mov	r5, r0
 801f416:	d40b      	bmi.n	801f430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f418:	4620      	mov	r0, r4
 801f41a:	f00a fe64 	bl	802a0e6 <__cxa_guard_acquire>
 801f41e:	b138      	cbz	r0, 801f430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f420:	4620      	mov	r0, r4
 801f422:	f00a fe6c 	bl	802a0fe <__cxa_guard_release>
 801f426:	4a0f      	ldr	r2, [pc, #60]	; (801f464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f428:	490f      	ldr	r1, [pc, #60]	; (801f468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f42a:	4810      	ldr	r0, [pc, #64]	; (801f46c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f42c:	f00a fe54 	bl	802a0d8 <__aeabi_atexit>
 801f430:	4c0f      	ldr	r4, [pc, #60]	; (801f470 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f432:	7823      	ldrb	r3, [r4, #0]
 801f434:	f3bf 8f5b 	dmb	ish
 801f438:	07db      	lsls	r3, r3, #31
 801f43a:	d40b      	bmi.n	801f454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f43c:	4620      	mov	r0, r4
 801f43e:	f00a fe52 	bl	802a0e6 <__cxa_guard_acquire>
 801f442:	b138      	cbz	r0, 801f454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f444:	4620      	mov	r0, r4
 801f446:	f00a fe5a 	bl	802a0fe <__cxa_guard_release>
 801f44a:	4a06      	ldr	r2, [pc, #24]	; (801f464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f44c:	4909      	ldr	r1, [pc, #36]	; (801f474 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f44e:	480a      	ldr	r0, [pc, #40]	; (801f478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f450:	f00a fe42 	bl	802a0d8 <__aeabi_atexit>
 801f454:	4b05      	ldr	r3, [pc, #20]	; (801f46c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f456:	622b      	str	r3, [r5, #32]
 801f458:	4b07      	ldr	r3, [pc, #28]	; (801f478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f45a:	626b      	str	r3, [r5, #36]	; 0x24
 801f45c:	bd38      	pop	{r3, r4, r5, pc}
 801f45e:	bf00      	nop
 801f460:	2001352c 	.word	0x2001352c
 801f464:	20000000 	.word	0x20000000
 801f468:	0801c107 	.word	0x0801c107
 801f46c:	200000dc 	.word	0x200000dc
 801f470:	20013530 	.word	0x20013530
 801f474:	0801c105 	.word	0x0801c105
 801f478:	200000e0 	.word	0x200000e0

0801f47c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f47c:	b538      	push	{r3, r4, r5, lr}
 801f47e:	4c15      	ldr	r4, [pc, #84]	; (801f4d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f480:	7823      	ldrb	r3, [r4, #0]
 801f482:	f3bf 8f5b 	dmb	ish
 801f486:	07da      	lsls	r2, r3, #31
 801f488:	4605      	mov	r5, r0
 801f48a:	d40b      	bmi.n	801f4a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f48c:	4620      	mov	r0, r4
 801f48e:	f00a fe2a 	bl	802a0e6 <__cxa_guard_acquire>
 801f492:	b138      	cbz	r0, 801f4a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f494:	4620      	mov	r0, r4
 801f496:	f00a fe32 	bl	802a0fe <__cxa_guard_release>
 801f49a:	4a0f      	ldr	r2, [pc, #60]	; (801f4d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f49c:	490f      	ldr	r1, [pc, #60]	; (801f4dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f49e:	4810      	ldr	r0, [pc, #64]	; (801f4e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f4a0:	f00a fe1a 	bl	802a0d8 <__aeabi_atexit>
 801f4a4:	4c0f      	ldr	r4, [pc, #60]	; (801f4e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f4a6:	7823      	ldrb	r3, [r4, #0]
 801f4a8:	f3bf 8f5b 	dmb	ish
 801f4ac:	07db      	lsls	r3, r3, #31
 801f4ae:	d40b      	bmi.n	801f4c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f4b0:	4620      	mov	r0, r4
 801f4b2:	f00a fe18 	bl	802a0e6 <__cxa_guard_acquire>
 801f4b6:	b138      	cbz	r0, 801f4c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f4b8:	4620      	mov	r0, r4
 801f4ba:	f00a fe20 	bl	802a0fe <__cxa_guard_release>
 801f4be:	4a06      	ldr	r2, [pc, #24]	; (801f4d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f4c0:	4909      	ldr	r1, [pc, #36]	; (801f4e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f4c2:	480a      	ldr	r0, [pc, #40]	; (801f4ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f4c4:	f00a fe08 	bl	802a0d8 <__aeabi_atexit>
 801f4c8:	4b05      	ldr	r3, [pc, #20]	; (801f4e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f4ca:	61ab      	str	r3, [r5, #24]
 801f4cc:	4b07      	ldr	r3, [pc, #28]	; (801f4ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f4ce:	61eb      	str	r3, [r5, #28]
 801f4d0:	bd38      	pop	{r3, r4, r5, pc}
 801f4d2:	bf00      	nop
 801f4d4:	20013504 	.word	0x20013504
 801f4d8:	20000000 	.word	0x20000000
 801f4dc:	0801c10b 	.word	0x0801c10b
 801f4e0:	200000b4 	.word	0x200000b4
 801f4e4:	20013508 	.word	0x20013508
 801f4e8:	0801c109 	.word	0x0801c109
 801f4ec:	200000b8 	.word	0x200000b8

0801f4f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f4f0:	b510      	push	{r4, lr}
 801f4f2:	4604      	mov	r4, r0
 801f4f4:	f7ff ff88 	bl	801f408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f4f8:	4620      	mov	r0, r4
 801f4fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f4fe:	f7ff bfbd 	b.w	801f47c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f504:	b538      	push	{r3, r4, r5, lr}
 801f506:	4c15      	ldr	r4, [pc, #84]	; (801f55c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f508:	7823      	ldrb	r3, [r4, #0]
 801f50a:	f3bf 8f5b 	dmb	ish
 801f50e:	07da      	lsls	r2, r3, #31
 801f510:	4605      	mov	r5, r0
 801f512:	d40b      	bmi.n	801f52c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f514:	4620      	mov	r0, r4
 801f516:	f00a fde6 	bl	802a0e6 <__cxa_guard_acquire>
 801f51a:	b138      	cbz	r0, 801f52c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f51c:	4620      	mov	r0, r4
 801f51e:	f00a fdee 	bl	802a0fe <__cxa_guard_release>
 801f522:	4a0f      	ldr	r2, [pc, #60]	; (801f560 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f524:	490f      	ldr	r1, [pc, #60]	; (801f564 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f526:	4810      	ldr	r0, [pc, #64]	; (801f568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f528:	f00a fdd6 	bl	802a0d8 <__aeabi_atexit>
 801f52c:	4c0f      	ldr	r4, [pc, #60]	; (801f56c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f52e:	7823      	ldrb	r3, [r4, #0]
 801f530:	f3bf 8f5b 	dmb	ish
 801f534:	07db      	lsls	r3, r3, #31
 801f536:	d40b      	bmi.n	801f550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f538:	4620      	mov	r0, r4
 801f53a:	f00a fdd4 	bl	802a0e6 <__cxa_guard_acquire>
 801f53e:	b138      	cbz	r0, 801f550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f540:	4620      	mov	r0, r4
 801f542:	f00a fddc 	bl	802a0fe <__cxa_guard_release>
 801f546:	4a06      	ldr	r2, [pc, #24]	; (801f560 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f548:	4909      	ldr	r1, [pc, #36]	; (801f570 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f54a:	480a      	ldr	r0, [pc, #40]	; (801f574 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f54c:	f00a fdc4 	bl	802a0d8 <__aeabi_atexit>
 801f550:	4b05      	ldr	r3, [pc, #20]	; (801f568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f552:	632b      	str	r3, [r5, #48]	; 0x30
 801f554:	4b07      	ldr	r3, [pc, #28]	; (801f574 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f556:	636b      	str	r3, [r5, #52]	; 0x34
 801f558:	bd38      	pop	{r3, r4, r5, pc}
 801f55a:	bf00      	nop
 801f55c:	2001353c 	.word	0x2001353c
 801f560:	20000000 	.word	0x20000000
 801f564:	0801c0ff 	.word	0x0801c0ff
 801f568:	200000ec 	.word	0x200000ec
 801f56c:	20013540 	.word	0x20013540
 801f570:	0801c0fd 	.word	0x0801c0fd
 801f574:	200000f0 	.word	0x200000f0

0801f578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f578:	b538      	push	{r3, r4, r5, lr}
 801f57a:	4c15      	ldr	r4, [pc, #84]	; (801f5d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f57c:	7823      	ldrb	r3, [r4, #0]
 801f57e:	f3bf 8f5b 	dmb	ish
 801f582:	07da      	lsls	r2, r3, #31
 801f584:	4605      	mov	r5, r0
 801f586:	d40b      	bmi.n	801f5a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f588:	4620      	mov	r0, r4
 801f58a:	f00a fdac 	bl	802a0e6 <__cxa_guard_acquire>
 801f58e:	b138      	cbz	r0, 801f5a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f590:	4620      	mov	r0, r4
 801f592:	f00a fdb4 	bl	802a0fe <__cxa_guard_release>
 801f596:	4a0f      	ldr	r2, [pc, #60]	; (801f5d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f598:	490f      	ldr	r1, [pc, #60]	; (801f5d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f59a:	4810      	ldr	r0, [pc, #64]	; (801f5dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f59c:	f00a fd9c 	bl	802a0d8 <__aeabi_atexit>
 801f5a0:	4c0f      	ldr	r4, [pc, #60]	; (801f5e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f5a2:	7823      	ldrb	r3, [r4, #0]
 801f5a4:	f3bf 8f5b 	dmb	ish
 801f5a8:	07db      	lsls	r3, r3, #31
 801f5aa:	d40b      	bmi.n	801f5c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f5ac:	4620      	mov	r0, r4
 801f5ae:	f00a fd9a 	bl	802a0e6 <__cxa_guard_acquire>
 801f5b2:	b138      	cbz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	f00a fda2 	bl	802a0fe <__cxa_guard_release>
 801f5ba:	4a06      	ldr	r2, [pc, #24]	; (801f5d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f5bc:	4909      	ldr	r1, [pc, #36]	; (801f5e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f5be:	480a      	ldr	r0, [pc, #40]	; (801f5e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f5c0:	f00a fd8a 	bl	802a0d8 <__aeabi_atexit>
 801f5c4:	4b05      	ldr	r3, [pc, #20]	; (801f5dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f5c6:	62ab      	str	r3, [r5, #40]	; 0x28
 801f5c8:	4b07      	ldr	r3, [pc, #28]	; (801f5e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f5ca:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f5cc:	bd38      	pop	{r3, r4, r5, pc}
 801f5ce:	bf00      	nop
 801f5d0:	2001350c 	.word	0x2001350c
 801f5d4:	20000000 	.word	0x20000000
 801f5d8:	0801c103 	.word	0x0801c103
 801f5dc:	200000bc 	.word	0x200000bc
 801f5e0:	20013510 	.word	0x20013510
 801f5e4:	0801c101 	.word	0x0801c101
 801f5e8:	200000c0 	.word	0x200000c0

0801f5ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f5ec:	b510      	push	{r4, lr}
 801f5ee:	4604      	mov	r4, r0
 801f5f0:	f7ff ff88 	bl	801f504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f5f4:	4620      	mov	r0, r4
 801f5f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f5fa:	f7ff bfbd 	b.w	801f578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f600:	b538      	push	{r3, r4, r5, lr}
 801f602:	4c15      	ldr	r4, [pc, #84]	; (801f658 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f604:	7823      	ldrb	r3, [r4, #0]
 801f606:	f3bf 8f5b 	dmb	ish
 801f60a:	07da      	lsls	r2, r3, #31
 801f60c:	4605      	mov	r5, r0
 801f60e:	d40b      	bmi.n	801f628 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f610:	4620      	mov	r0, r4
 801f612:	f00a fd68 	bl	802a0e6 <__cxa_guard_acquire>
 801f616:	b138      	cbz	r0, 801f628 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f618:	4620      	mov	r0, r4
 801f61a:	f00a fd70 	bl	802a0fe <__cxa_guard_release>
 801f61e:	4a0f      	ldr	r2, [pc, #60]	; (801f65c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f620:	490f      	ldr	r1, [pc, #60]	; (801f660 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f622:	4810      	ldr	r0, [pc, #64]	; (801f664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f624:	f00a fd58 	bl	802a0d8 <__aeabi_atexit>
 801f628:	4c0f      	ldr	r4, [pc, #60]	; (801f668 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f62a:	7823      	ldrb	r3, [r4, #0]
 801f62c:	f3bf 8f5b 	dmb	ish
 801f630:	07db      	lsls	r3, r3, #31
 801f632:	d40b      	bmi.n	801f64c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f634:	4620      	mov	r0, r4
 801f636:	f00a fd56 	bl	802a0e6 <__cxa_guard_acquire>
 801f63a:	b138      	cbz	r0, 801f64c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f63c:	4620      	mov	r0, r4
 801f63e:	f00a fd5e 	bl	802a0fe <__cxa_guard_release>
 801f642:	4a06      	ldr	r2, [pc, #24]	; (801f65c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f644:	4909      	ldr	r1, [pc, #36]	; (801f66c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f646:	480a      	ldr	r0, [pc, #40]	; (801f670 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f648:	f00a fd46 	bl	802a0d8 <__aeabi_atexit>
 801f64c:	4b05      	ldr	r3, [pc, #20]	; (801f664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f64e:	652b      	str	r3, [r5, #80]	; 0x50
 801f650:	4b07      	ldr	r3, [pc, #28]	; (801f670 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f652:	656b      	str	r3, [r5, #84]	; 0x54
 801f654:	bd38      	pop	{r3, r4, r5, pc}
 801f656:	bf00      	nop
 801f658:	20013544 	.word	0x20013544
 801f65c:	20000000 	.word	0x20000000
 801f660:	0801c0ef 	.word	0x0801c0ef
 801f664:	200000f4 	.word	0x200000f4
 801f668:	20013548 	.word	0x20013548
 801f66c:	0801c0ed 	.word	0x0801c0ed
 801f670:	200000f8 	.word	0x200000f8

0801f674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f674:	b538      	push	{r3, r4, r5, lr}
 801f676:	4c15      	ldr	r4, [pc, #84]	; (801f6cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f678:	7823      	ldrb	r3, [r4, #0]
 801f67a:	f3bf 8f5b 	dmb	ish
 801f67e:	07da      	lsls	r2, r3, #31
 801f680:	4605      	mov	r5, r0
 801f682:	d40b      	bmi.n	801f69c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f684:	4620      	mov	r0, r4
 801f686:	f00a fd2e 	bl	802a0e6 <__cxa_guard_acquire>
 801f68a:	b138      	cbz	r0, 801f69c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f68c:	4620      	mov	r0, r4
 801f68e:	f00a fd36 	bl	802a0fe <__cxa_guard_release>
 801f692:	4a0f      	ldr	r2, [pc, #60]	; (801f6d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f694:	490f      	ldr	r1, [pc, #60]	; (801f6d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f696:	4810      	ldr	r0, [pc, #64]	; (801f6d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f698:	f00a fd1e 	bl	802a0d8 <__aeabi_atexit>
 801f69c:	4c0f      	ldr	r4, [pc, #60]	; (801f6dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f69e:	7823      	ldrb	r3, [r4, #0]
 801f6a0:	f3bf 8f5b 	dmb	ish
 801f6a4:	07db      	lsls	r3, r3, #31
 801f6a6:	d40b      	bmi.n	801f6c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f6a8:	4620      	mov	r0, r4
 801f6aa:	f00a fd1c 	bl	802a0e6 <__cxa_guard_acquire>
 801f6ae:	b138      	cbz	r0, 801f6c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f6b0:	4620      	mov	r0, r4
 801f6b2:	f00a fd24 	bl	802a0fe <__cxa_guard_release>
 801f6b6:	4a06      	ldr	r2, [pc, #24]	; (801f6d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f6b8:	4909      	ldr	r1, [pc, #36]	; (801f6e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f6ba:	480a      	ldr	r0, [pc, #40]	; (801f6e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f6bc:	f00a fd0c 	bl	802a0d8 <__aeabi_atexit>
 801f6c0:	4b05      	ldr	r3, [pc, #20]	; (801f6d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f6c2:	64ab      	str	r3, [r5, #72]	; 0x48
 801f6c4:	4b07      	ldr	r3, [pc, #28]	; (801f6e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f6c6:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f6c8:	bd38      	pop	{r3, r4, r5, pc}
 801f6ca:	bf00      	nop
 801f6cc:	2001354c 	.word	0x2001354c
 801f6d0:	20000000 	.word	0x20000000
 801f6d4:	0801c0f3 	.word	0x0801c0f3
 801f6d8:	200000fc 	.word	0x200000fc
 801f6dc:	20013550 	.word	0x20013550
 801f6e0:	0801c0f1 	.word	0x0801c0f1
 801f6e4:	20000100 	.word	0x20000100

0801f6e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f6e8:	b538      	push	{r3, r4, r5, lr}
 801f6ea:	4c15      	ldr	r4, [pc, #84]	; (801f740 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f6ec:	7823      	ldrb	r3, [r4, #0]
 801f6ee:	f3bf 8f5b 	dmb	ish
 801f6f2:	07da      	lsls	r2, r3, #31
 801f6f4:	4605      	mov	r5, r0
 801f6f6:	d40b      	bmi.n	801f710 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f6f8:	4620      	mov	r0, r4
 801f6fa:	f00a fcf4 	bl	802a0e6 <__cxa_guard_acquire>
 801f6fe:	b138      	cbz	r0, 801f710 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f700:	4620      	mov	r0, r4
 801f702:	f00a fcfc 	bl	802a0fe <__cxa_guard_release>
 801f706:	4a0f      	ldr	r2, [pc, #60]	; (801f744 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f708:	490f      	ldr	r1, [pc, #60]	; (801f748 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f70a:	4810      	ldr	r0, [pc, #64]	; (801f74c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f70c:	f00a fce4 	bl	802a0d8 <__aeabi_atexit>
 801f710:	4c0f      	ldr	r4, [pc, #60]	; (801f750 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f712:	7823      	ldrb	r3, [r4, #0]
 801f714:	f3bf 8f5b 	dmb	ish
 801f718:	07db      	lsls	r3, r3, #31
 801f71a:	d40b      	bmi.n	801f734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f71c:	4620      	mov	r0, r4
 801f71e:	f00a fce2 	bl	802a0e6 <__cxa_guard_acquire>
 801f722:	b138      	cbz	r0, 801f734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f724:	4620      	mov	r0, r4
 801f726:	f00a fcea 	bl	802a0fe <__cxa_guard_release>
 801f72a:	4a06      	ldr	r2, [pc, #24]	; (801f744 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f72c:	4909      	ldr	r1, [pc, #36]	; (801f754 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f72e:	480a      	ldr	r0, [pc, #40]	; (801f758 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f730:	f00a fcd2 	bl	802a0d8 <__aeabi_atexit>
 801f734:	4b05      	ldr	r3, [pc, #20]	; (801f74c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f736:	642b      	str	r3, [r5, #64]	; 0x40
 801f738:	4b07      	ldr	r3, [pc, #28]	; (801f758 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f73a:	646b      	str	r3, [r5, #68]	; 0x44
 801f73c:	bd38      	pop	{r3, r4, r5, pc}
 801f73e:	bf00      	nop
 801f740:	20013514 	.word	0x20013514
 801f744:	20000000 	.word	0x20000000
 801f748:	0801c0f7 	.word	0x0801c0f7
 801f74c:	200000c4 	.word	0x200000c4
 801f750:	20013518 	.word	0x20013518
 801f754:	0801c0f5 	.word	0x0801c0f5
 801f758:	200000c8 	.word	0x200000c8

0801f75c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f75c:	b538      	push	{r3, r4, r5, lr}
 801f75e:	4c15      	ldr	r4, [pc, #84]	; (801f7b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f760:	7823      	ldrb	r3, [r4, #0]
 801f762:	f3bf 8f5b 	dmb	ish
 801f766:	07da      	lsls	r2, r3, #31
 801f768:	4605      	mov	r5, r0
 801f76a:	d40b      	bmi.n	801f784 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f76c:	4620      	mov	r0, r4
 801f76e:	f00a fcba 	bl	802a0e6 <__cxa_guard_acquire>
 801f772:	b138      	cbz	r0, 801f784 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f774:	4620      	mov	r0, r4
 801f776:	f00a fcc2 	bl	802a0fe <__cxa_guard_release>
 801f77a:	4a0f      	ldr	r2, [pc, #60]	; (801f7b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f77c:	490f      	ldr	r1, [pc, #60]	; (801f7bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f77e:	4810      	ldr	r0, [pc, #64]	; (801f7c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f780:	f00a fcaa 	bl	802a0d8 <__aeabi_atexit>
 801f784:	4c0f      	ldr	r4, [pc, #60]	; (801f7c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f786:	7823      	ldrb	r3, [r4, #0]
 801f788:	f3bf 8f5b 	dmb	ish
 801f78c:	07db      	lsls	r3, r3, #31
 801f78e:	d40b      	bmi.n	801f7a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f790:	4620      	mov	r0, r4
 801f792:	f00a fca8 	bl	802a0e6 <__cxa_guard_acquire>
 801f796:	b138      	cbz	r0, 801f7a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f798:	4620      	mov	r0, r4
 801f79a:	f00a fcb0 	bl	802a0fe <__cxa_guard_release>
 801f79e:	4a06      	ldr	r2, [pc, #24]	; (801f7b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f7a0:	4909      	ldr	r1, [pc, #36]	; (801f7c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f7a2:	480a      	ldr	r0, [pc, #40]	; (801f7cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f7a4:	f00a fc98 	bl	802a0d8 <__aeabi_atexit>
 801f7a8:	4b05      	ldr	r3, [pc, #20]	; (801f7c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f7aa:	63ab      	str	r3, [r5, #56]	; 0x38
 801f7ac:	4b07      	ldr	r3, [pc, #28]	; (801f7cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f7ae:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f7b0:	bd38      	pop	{r3, r4, r5, pc}
 801f7b2:	bf00      	nop
 801f7b4:	20013534 	.word	0x20013534
 801f7b8:	20000000 	.word	0x20000000
 801f7bc:	0801c0fb 	.word	0x0801c0fb
 801f7c0:	200000e4 	.word	0x200000e4
 801f7c4:	20013538 	.word	0x20013538
 801f7c8:	0801c0f9 	.word	0x0801c0f9
 801f7cc:	200000e8 	.word	0x200000e8

0801f7d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f7d0:	b510      	push	{r4, lr}
 801f7d2:	4604      	mov	r4, r0
 801f7d4:	f7ff ff14 	bl	801f600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f7d8:	4620      	mov	r0, r4
 801f7da:	f7ff ff85 	bl	801f6e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f7de:	4620      	mov	r0, r4
 801f7e0:	f7ff ff48 	bl	801f674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f7e4:	4620      	mov	r0, r4
 801f7e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f7ea:	f7ff bfb7 	b.w	801f75c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f7f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f7f0:	b538      	push	{r3, r4, r5, lr}
 801f7f2:	4c15      	ldr	r4, [pc, #84]	; (801f848 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f7f4:	7823      	ldrb	r3, [r4, #0]
 801f7f6:	f3bf 8f5b 	dmb	ish
 801f7fa:	07da      	lsls	r2, r3, #31
 801f7fc:	4605      	mov	r5, r0
 801f7fe:	d40b      	bmi.n	801f818 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f800:	4620      	mov	r0, r4
 801f802:	f00a fc70 	bl	802a0e6 <__cxa_guard_acquire>
 801f806:	b138      	cbz	r0, 801f818 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f808:	4620      	mov	r0, r4
 801f80a:	f00a fc78 	bl	802a0fe <__cxa_guard_release>
 801f80e:	4a0f      	ldr	r2, [pc, #60]	; (801f84c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f810:	490f      	ldr	r1, [pc, #60]	; (801f850 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f812:	4810      	ldr	r0, [pc, #64]	; (801f854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f814:	f00a fc60 	bl	802a0d8 <__aeabi_atexit>
 801f818:	4c0f      	ldr	r4, [pc, #60]	; (801f858 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f81a:	7823      	ldrb	r3, [r4, #0]
 801f81c:	f3bf 8f5b 	dmb	ish
 801f820:	07db      	lsls	r3, r3, #31
 801f822:	d40b      	bmi.n	801f83c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f824:	4620      	mov	r0, r4
 801f826:	f00a fc5e 	bl	802a0e6 <__cxa_guard_acquire>
 801f82a:	b138      	cbz	r0, 801f83c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f82c:	4620      	mov	r0, r4
 801f82e:	f00a fc66 	bl	802a0fe <__cxa_guard_release>
 801f832:	4a06      	ldr	r2, [pc, #24]	; (801f84c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f834:	4909      	ldr	r1, [pc, #36]	; (801f85c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f836:	480a      	ldr	r0, [pc, #40]	; (801f860 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f838:	f00a fc4e 	bl	802a0d8 <__aeabi_atexit>
 801f83c:	4b05      	ldr	r3, [pc, #20]	; (801f854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f83e:	662b      	str	r3, [r5, #96]	; 0x60
 801f840:	4b07      	ldr	r3, [pc, #28]	; (801f860 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f842:	666b      	str	r3, [r5, #100]	; 0x64
 801f844:	bd38      	pop	{r3, r4, r5, pc}
 801f846:	bf00      	nop
 801f848:	2001351c 	.word	0x2001351c
 801f84c:	20000000 	.word	0x20000000
 801f850:	0801c0e7 	.word	0x0801c0e7
 801f854:	200000cc 	.word	0x200000cc
 801f858:	20013520 	.word	0x20013520
 801f85c:	0801c0e5 	.word	0x0801c0e5
 801f860:	200000d0 	.word	0x200000d0

0801f864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f864:	b538      	push	{r3, r4, r5, lr}
 801f866:	4c15      	ldr	r4, [pc, #84]	; (801f8bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f868:	7823      	ldrb	r3, [r4, #0]
 801f86a:	f3bf 8f5b 	dmb	ish
 801f86e:	07da      	lsls	r2, r3, #31
 801f870:	4605      	mov	r5, r0
 801f872:	d40b      	bmi.n	801f88c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f874:	4620      	mov	r0, r4
 801f876:	f00a fc36 	bl	802a0e6 <__cxa_guard_acquire>
 801f87a:	b138      	cbz	r0, 801f88c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f87c:	4620      	mov	r0, r4
 801f87e:	f00a fc3e 	bl	802a0fe <__cxa_guard_release>
 801f882:	4a0f      	ldr	r2, [pc, #60]	; (801f8c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f884:	490f      	ldr	r1, [pc, #60]	; (801f8c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f886:	4810      	ldr	r0, [pc, #64]	; (801f8c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f888:	f00a fc26 	bl	802a0d8 <__aeabi_atexit>
 801f88c:	4c0f      	ldr	r4, [pc, #60]	; (801f8cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f88e:	7823      	ldrb	r3, [r4, #0]
 801f890:	f3bf 8f5b 	dmb	ish
 801f894:	07db      	lsls	r3, r3, #31
 801f896:	d40b      	bmi.n	801f8b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f898:	4620      	mov	r0, r4
 801f89a:	f00a fc24 	bl	802a0e6 <__cxa_guard_acquire>
 801f89e:	b138      	cbz	r0, 801f8b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f8a0:	4620      	mov	r0, r4
 801f8a2:	f00a fc2c 	bl	802a0fe <__cxa_guard_release>
 801f8a6:	4a06      	ldr	r2, [pc, #24]	; (801f8c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f8a8:	4909      	ldr	r1, [pc, #36]	; (801f8d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f8aa:	480a      	ldr	r0, [pc, #40]	; (801f8d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f8ac:	f00a fc14 	bl	802a0d8 <__aeabi_atexit>
 801f8b0:	4b05      	ldr	r3, [pc, #20]	; (801f8c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f8b2:	65ab      	str	r3, [r5, #88]	; 0x58
 801f8b4:	4b07      	ldr	r3, [pc, #28]	; (801f8d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f8b6:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f8b8:	bd38      	pop	{r3, r4, r5, pc}
 801f8ba:	bf00      	nop
 801f8bc:	200134f4 	.word	0x200134f4
 801f8c0:	20000000 	.word	0x20000000
 801f8c4:	0801c0eb 	.word	0x0801c0eb
 801f8c8:	200000a4 	.word	0x200000a4
 801f8cc:	200134f8 	.word	0x200134f8
 801f8d0:	0801c0e9 	.word	0x0801c0e9
 801f8d4:	200000a8 	.word	0x200000a8

0801f8d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f8d8:	b510      	push	{r4, lr}
 801f8da:	4604      	mov	r4, r0
 801f8dc:	f7ff ff88 	bl	801f7f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f8e0:	4620      	mov	r0, r4
 801f8e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f8e6:	f7ff bfbd 	b.w	801f864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f8ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f8ec:	b538      	push	{r3, r4, r5, lr}
 801f8ee:	4c15      	ldr	r4, [pc, #84]	; (801f944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f8f0:	7823      	ldrb	r3, [r4, #0]
 801f8f2:	f3bf 8f5b 	dmb	ish
 801f8f6:	07da      	lsls	r2, r3, #31
 801f8f8:	4605      	mov	r5, r0
 801f8fa:	d40b      	bmi.n	801f914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f8fc:	4620      	mov	r0, r4
 801f8fe:	f00a fbf2 	bl	802a0e6 <__cxa_guard_acquire>
 801f902:	b138      	cbz	r0, 801f914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f904:	4620      	mov	r0, r4
 801f906:	f00a fbfa 	bl	802a0fe <__cxa_guard_release>
 801f90a:	4a0f      	ldr	r2, [pc, #60]	; (801f948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f90c:	490f      	ldr	r1, [pc, #60]	; (801f94c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f90e:	4810      	ldr	r0, [pc, #64]	; (801f950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f910:	f00a fbe2 	bl	802a0d8 <__aeabi_atexit>
 801f914:	4c0f      	ldr	r4, [pc, #60]	; (801f954 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f916:	7823      	ldrb	r3, [r4, #0]
 801f918:	f3bf 8f5b 	dmb	ish
 801f91c:	07db      	lsls	r3, r3, #31
 801f91e:	d40b      	bmi.n	801f938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f920:	4620      	mov	r0, r4
 801f922:	f00a fbe0 	bl	802a0e6 <__cxa_guard_acquire>
 801f926:	b138      	cbz	r0, 801f938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f928:	4620      	mov	r0, r4
 801f92a:	f00a fbe8 	bl	802a0fe <__cxa_guard_release>
 801f92e:	4a06      	ldr	r2, [pc, #24]	; (801f948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f930:	4909      	ldr	r1, [pc, #36]	; (801f958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f932:	480a      	ldr	r0, [pc, #40]	; (801f95c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f934:	f00a fbd0 	bl	802a0d8 <__aeabi_atexit>
 801f938:	4b05      	ldr	r3, [pc, #20]	; (801f950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f93a:	672b      	str	r3, [r5, #112]	; 0x70
 801f93c:	4b07      	ldr	r3, [pc, #28]	; (801f95c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f93e:	676b      	str	r3, [r5, #116]	; 0x74
 801f940:	bd38      	pop	{r3, r4, r5, pc}
 801f942:	bf00      	nop
 801f944:	200134ec 	.word	0x200134ec
 801f948:	20000000 	.word	0x20000000
 801f94c:	0801c0df 	.word	0x0801c0df
 801f950:	2000009c 	.word	0x2000009c
 801f954:	200134f0 	.word	0x200134f0
 801f958:	0801c0dd 	.word	0x0801c0dd
 801f95c:	200000a0 	.word	0x200000a0

0801f960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f960:	b538      	push	{r3, r4, r5, lr}
 801f962:	4c15      	ldr	r4, [pc, #84]	; (801f9b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f964:	7823      	ldrb	r3, [r4, #0]
 801f966:	f3bf 8f5b 	dmb	ish
 801f96a:	07da      	lsls	r2, r3, #31
 801f96c:	4605      	mov	r5, r0
 801f96e:	d40b      	bmi.n	801f988 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f970:	4620      	mov	r0, r4
 801f972:	f00a fbb8 	bl	802a0e6 <__cxa_guard_acquire>
 801f976:	b138      	cbz	r0, 801f988 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f978:	4620      	mov	r0, r4
 801f97a:	f00a fbc0 	bl	802a0fe <__cxa_guard_release>
 801f97e:	4a0f      	ldr	r2, [pc, #60]	; (801f9bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f980:	490f      	ldr	r1, [pc, #60]	; (801f9c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f982:	4810      	ldr	r0, [pc, #64]	; (801f9c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f984:	f00a fba8 	bl	802a0d8 <__aeabi_atexit>
 801f988:	4c0f      	ldr	r4, [pc, #60]	; (801f9c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f98a:	7823      	ldrb	r3, [r4, #0]
 801f98c:	f3bf 8f5b 	dmb	ish
 801f990:	07db      	lsls	r3, r3, #31
 801f992:	d40b      	bmi.n	801f9ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f994:	4620      	mov	r0, r4
 801f996:	f00a fba6 	bl	802a0e6 <__cxa_guard_acquire>
 801f99a:	b138      	cbz	r0, 801f9ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f99c:	4620      	mov	r0, r4
 801f99e:	f00a fbae 	bl	802a0fe <__cxa_guard_release>
 801f9a2:	4a06      	ldr	r2, [pc, #24]	; (801f9bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f9a4:	4909      	ldr	r1, [pc, #36]	; (801f9cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f9a6:	480a      	ldr	r0, [pc, #40]	; (801f9d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f9a8:	f00a fb96 	bl	802a0d8 <__aeabi_atexit>
 801f9ac:	4b05      	ldr	r3, [pc, #20]	; (801f9c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f9ae:	66ab      	str	r3, [r5, #104]	; 0x68
 801f9b0:	4b07      	ldr	r3, [pc, #28]	; (801f9d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f9b2:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f9b4:	bd38      	pop	{r3, r4, r5, pc}
 801f9b6:	bf00      	nop
 801f9b8:	200134e4 	.word	0x200134e4
 801f9bc:	20000000 	.word	0x20000000
 801f9c0:	0801c0e3 	.word	0x0801c0e3
 801f9c4:	20000094 	.word	0x20000094
 801f9c8:	200134e8 	.word	0x200134e8
 801f9cc:	0801c0e1 	.word	0x0801c0e1
 801f9d0:	20000098 	.word	0x20000098

0801f9d4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f9d4:	b510      	push	{r4, lr}
 801f9d6:	4604      	mov	r4, r0
 801f9d8:	f7ff ff88 	bl	801f8ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f9dc:	4620      	mov	r0, r4
 801f9de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f9e2:	f7ff bfbd 	b.w	801f960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f9e6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f9e6:	b510      	push	{r4, lr}
 801f9e8:	4604      	mov	r4, r0
 801f9ea:	f7ff fff3 	bl	801f9d4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f9ee:	4620      	mov	r0, r4
 801f9f0:	f7ff ff72 	bl	801f8d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f9f4:	4620      	mov	r0, r4
 801f9f6:	f7ff fdf9 	bl	801f5ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f9fa:	4620      	mov	r0, r4
 801f9fc:	f7ff fcfa 	bl	801f3f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801fa00:	4620      	mov	r0, r4
 801fa02:	f7ff fd75 	bl	801f4f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801fa06:	4620      	mov	r0, r4
 801fa08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fa0c:	f7ff bee0 	b.w	801f7d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801fa10 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801fa10:	b538      	push	{r3, r4, r5, lr}
 801fa12:	4c0b      	ldr	r4, [pc, #44]	; (801fa40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801fa14:	7823      	ldrb	r3, [r4, #0]
 801fa16:	f3bf 8f5b 	dmb	ish
 801fa1a:	07db      	lsls	r3, r3, #31
 801fa1c:	4605      	mov	r5, r0
 801fa1e:	d40b      	bmi.n	801fa38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801fa20:	4620      	mov	r0, r4
 801fa22:	f00a fb60 	bl	802a0e6 <__cxa_guard_acquire>
 801fa26:	b138      	cbz	r0, 801fa38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801fa28:	4620      	mov	r0, r4
 801fa2a:	f00a fb68 	bl	802a0fe <__cxa_guard_release>
 801fa2e:	4a05      	ldr	r2, [pc, #20]	; (801fa44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801fa30:	4905      	ldr	r1, [pc, #20]	; (801fa48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801fa32:	4806      	ldr	r0, [pc, #24]	; (801fa4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801fa34:	f00a fb50 	bl	802a0d8 <__aeabi_atexit>
 801fa38:	4b04      	ldr	r3, [pc, #16]	; (801fa4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801fa3a:	67ab      	str	r3, [r5, #120]	; 0x78
 801fa3c:	bd38      	pop	{r3, r4, r5, pc}
 801fa3e:	bf00      	nop
 801fa40:	200134d8 	.word	0x200134d8
 801fa44:	20000000 	.word	0x20000000
 801fa48:	0801c0db 	.word	0x0801c0db
 801fa4c:	2000008c 	.word	0x2000008c

0801fa50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801fa50:	b538      	push	{r3, r4, r5, lr}
 801fa52:	4c0b      	ldr	r4, [pc, #44]	; (801fa80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801fa54:	7823      	ldrb	r3, [r4, #0]
 801fa56:	f3bf 8f5b 	dmb	ish
 801fa5a:	07db      	lsls	r3, r3, #31
 801fa5c:	4605      	mov	r5, r0
 801fa5e:	d40b      	bmi.n	801fa78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801fa60:	4620      	mov	r0, r4
 801fa62:	f00a fb40 	bl	802a0e6 <__cxa_guard_acquire>
 801fa66:	b138      	cbz	r0, 801fa78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801fa68:	4620      	mov	r0, r4
 801fa6a:	f00a fb48 	bl	802a0fe <__cxa_guard_release>
 801fa6e:	4a05      	ldr	r2, [pc, #20]	; (801fa84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801fa70:	4905      	ldr	r1, [pc, #20]	; (801fa88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801fa72:	4806      	ldr	r0, [pc, #24]	; (801fa8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fa74:	f00a fb30 	bl	802a0d8 <__aeabi_atexit>
 801fa78:	4b04      	ldr	r3, [pc, #16]	; (801fa8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fa7a:	67eb      	str	r3, [r5, #124]	; 0x7c
 801fa7c:	bd38      	pop	{r3, r4, r5, pc}
 801fa7e:	bf00      	nop
 801fa80:	200134dc 	.word	0x200134dc
 801fa84:	20000000 	.word	0x20000000
 801fa88:	0801c0d9 	.word	0x0801c0d9
 801fa8c:	20000090 	.word	0x20000090

0801fa90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801fa90:	b570      	push	{r4, r5, r6, lr}
 801fa92:	4d0d      	ldr	r5, [pc, #52]	; (801fac8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801fa94:	4c0d      	ldr	r4, [pc, #52]	; (801facc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801fa96:	782b      	ldrb	r3, [r5, #0]
 801fa98:	f3bf 8f5b 	dmb	ish
 801fa9c:	f013 0f01 	tst.w	r3, #1
 801faa0:	4606      	mov	r6, r0
 801faa2:	d10d      	bne.n	801fac0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801faa4:	4628      	mov	r0, r5
 801faa6:	f00a fb1e 	bl	802a0e6 <__cxa_guard_acquire>
 801faaa:	b148      	cbz	r0, 801fac0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801faac:	4b08      	ldr	r3, [pc, #32]	; (801fad0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801faae:	6023      	str	r3, [r4, #0]
 801fab0:	4628      	mov	r0, r5
 801fab2:	f00a fb24 	bl	802a0fe <__cxa_guard_release>
 801fab6:	4a07      	ldr	r2, [pc, #28]	; (801fad4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801fab8:	4907      	ldr	r1, [pc, #28]	; (801fad8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801faba:	4620      	mov	r0, r4
 801fabc:	f00a fb0c 	bl	802a0d8 <__aeabi_atexit>
 801fac0:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801fac4:	bd70      	pop	{r4, r5, r6, pc}
 801fac6:	bf00      	nop
 801fac8:	200134e0 	.word	0x200134e0
 801facc:	20013554 	.word	0x20013554
 801fad0:	0802fabc 	.word	0x0802fabc
 801fad4:	20000000 	.word	0x20000000
 801fad8:	0801c0d7 	.word	0x0801c0d7

0801fadc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801fadc:	b510      	push	{r4, lr}
 801fade:	4604      	mov	r4, r0
 801fae0:	f7ff ff96 	bl	801fa10 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801fae4:	4620      	mov	r0, r4
 801fae6:	f7ff ffb3 	bl	801fa50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801faea:	4620      	mov	r0, r4
 801faec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801faf0:	f7ff bfce 	b.w	801fa90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801faf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801faf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801faf8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801fafc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801fb00:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801fb04:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801fb08:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801fb0c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801fb10:	8808      	ldrh	r0, [r1, #0]
 801fb12:	fb05 4c0e 	mla	ip, r5, lr, r4
 801fb16:	2d00      	cmp	r5, #0
 801fb18:	eb02 0a0c 	add.w	sl, r2, ip
 801fb1c:	f2c0 80b0 	blt.w	801fc80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801fb20:	45ab      	cmp	fp, r5
 801fb22:	f340 80ad 	ble.w	801fc80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801fb26:	2c00      	cmp	r4, #0
 801fb28:	f2c0 80a8 	blt.w	801fc7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801fb2c:	45a6      	cmp	lr, r4
 801fb2e:	f340 80a5 	ble.w	801fc7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801fb32:	f812 200c 	ldrb.w	r2, [r2, ip]
 801fb36:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801fb3a:	1c62      	adds	r2, r4, #1
 801fb3c:	f100 80a3 	bmi.w	801fc86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fb40:	4596      	cmp	lr, r2
 801fb42:	f340 80a0 	ble.w	801fc86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fb46:	f1b9 0f00 	cmp.w	r9, #0
 801fb4a:	f000 809c 	beq.w	801fc86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fb4e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801fb52:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fb56:	3501      	adds	r5, #1
 801fb58:	f100 8099 	bmi.w	801fc8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fb5c:	45ab      	cmp	fp, r5
 801fb5e:	f340 8096 	ble.w	801fc8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fb62:	2f00      	cmp	r7, #0
 801fb64:	f000 8093 	beq.w	801fc8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fb68:	2c00      	cmp	r4, #0
 801fb6a:	f2c0 808e 	blt.w	801fc8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fb6e:	45a6      	cmp	lr, r4
 801fb70:	f340 808b 	ble.w	801fc8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fb74:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801fb78:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801fb7c:	3401      	adds	r4, #1
 801fb7e:	f100 8089 	bmi.w	801fc94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb82:	45a6      	cmp	lr, r4
 801fb84:	f340 8086 	ble.w	801fc94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb88:	f1b9 0f00 	cmp.w	r9, #0
 801fb8c:	f000 8082 	beq.w	801fc94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb90:	44d6      	add	lr, sl
 801fb92:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fb96:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801fb9a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801fb9e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fba2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801fba6:	fb19 fe07 	smulbb	lr, r9, r7
 801fbaa:	ea44 0808 	orr.w	r8, r4, r8
 801fbae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801fbb2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801fbb6:	f1c7 0210 	rsb	r2, r7, #16
 801fbba:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fbbe:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fbc2:	ea44 0c0c 	orr.w	ip, r4, ip
 801fbc6:	eba2 0209 	sub.w	r2, r2, r9
 801fbca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801fbce:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801fbd2:	fb04 f40c 	mul.w	r4, r4, ip
 801fbd6:	fb02 4808 	mla	r8, r2, r8, r4
 801fbda:	041a      	lsls	r2, r3, #16
 801fbdc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fbe0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fbe4:	4313      	orrs	r3, r2
 801fbe6:	042a      	lsls	r2, r5, #16
 801fbe8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fbec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fbf0:	fb0e 8303 	mla	r3, lr, r3, r8
 801fbf4:	432a      	orrs	r2, r5
 801fbf6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801fbfa:	fb07 3202 	mla	r2, r7, r2, r3
 801fbfe:	0d53      	lsrs	r3, r2, #21
 801fc00:	0952      	lsrs	r2, r2, #5
 801fc02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fc0a:	431a      	orrs	r2, r3
 801fc0c:	b293      	uxth	r3, r2
 801fc0e:	b2b4      	uxth	r4, r6
 801fc10:	1202      	asrs	r2, r0, #8
 801fc12:	43f6      	mvns	r6, r6
 801fc14:	b2f6      	uxtb	r6, r6
 801fc16:	121d      	asrs	r5, r3, #8
 801fc18:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fc1c:	fb12 f206 	smulbb	r2, r2, r6
 801fc20:	10c7      	asrs	r7, r0, #3
 801fc22:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fc26:	00c0      	lsls	r0, r0, #3
 801fc28:	fb05 2504 	mla	r5, r5, r4, r2
 801fc2c:	b2c0      	uxtb	r0, r0
 801fc2e:	10da      	asrs	r2, r3, #3
 801fc30:	00db      	lsls	r3, r3, #3
 801fc32:	b2db      	uxtb	r3, r3
 801fc34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fc38:	fb10 f006 	smulbb	r0, r0, r6
 801fc3c:	b2ad      	uxth	r5, r5
 801fc3e:	fb03 0004 	mla	r0, r3, r4, r0
 801fc42:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc46:	fb17 f706 	smulbb	r7, r7, r6
 801fc4a:	b280      	uxth	r0, r0
 801fc4c:	1c6b      	adds	r3, r5, #1
 801fc4e:	fb02 7204 	mla	r2, r2, r4, r7
 801fc52:	b292      	uxth	r2, r2
 801fc54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fc58:	1c43      	adds	r3, r0, #1
 801fc5a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fc5e:	1c50      	adds	r0, r2, #1
 801fc60:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801fc64:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fc68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc6c:	0952      	lsrs	r2, r2, #5
 801fc6e:	432b      	orrs	r3, r5
 801fc70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc74:	4313      	orrs	r3, r2
 801fc76:	800b      	strh	r3, [r1, #0]
 801fc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc7c:	4680      	mov	r8, r0
 801fc7e:	e75c      	b.n	801fb3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801fc80:	4684      	mov	ip, r0
 801fc82:	4680      	mov	r8, r0
 801fc84:	e767      	b.n	801fb56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fc86:	4684      	mov	ip, r0
 801fc88:	e765      	b.n	801fb56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fc8a:	4605      	mov	r5, r0
 801fc8c:	e776      	b.n	801fb7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801fc8e:	4603      	mov	r3, r0
 801fc90:	4605      	mov	r5, r0
 801fc92:	e782      	b.n	801fb9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801fc94:	4603      	mov	r3, r0
 801fc96:	e780      	b.n	801fb9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801fc98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc9c:	b099      	sub	sp, #100	; 0x64
 801fc9e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801fca2:	9215      	str	r2, [sp, #84]	; 0x54
 801fca4:	9309      	str	r3, [sp, #36]	; 0x24
 801fca6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fca8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801fcac:	930d      	str	r3, [sp, #52]	; 0x34
 801fcae:	910c      	str	r1, [sp, #48]	; 0x30
 801fcb0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801fcb4:	9016      	str	r0, [sp, #88]	; 0x58
 801fcb6:	6850      	ldr	r0, [r2, #4]
 801fcb8:	6812      	ldr	r2, [r2, #0]
 801fcba:	fb00 1303 	mla	r3, r0, r3, r1
 801fcbe:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801fcc2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fcc4:	681b      	ldr	r3, [r3, #0]
 801fcc6:	930b      	str	r3, [sp, #44]	; 0x2c
 801fcc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fcca:	685e      	ldr	r6, [r3, #4]
 801fccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fcce:	43db      	mvns	r3, r3
 801fcd0:	b2db      	uxtb	r3, r3
 801fcd2:	3604      	adds	r6, #4
 801fcd4:	930a      	str	r3, [sp, #40]	; 0x28
 801fcd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcd8:	2b00      	cmp	r3, #0
 801fcda:	dc03      	bgt.n	801fce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fcdc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801fcde:	2b00      	cmp	r3, #0
 801fce0:	f340 8225 	ble.w	802012e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fce4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fce6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fcea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fcee:	1e48      	subs	r0, r1, #1
 801fcf0:	1e57      	subs	r7, r2, #1
 801fcf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fcf4:	2b00      	cmp	r3, #0
 801fcf6:	f340 80e3 	ble.w	801fec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fcfa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fcfe:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fd02:	d406      	bmi.n	801fd12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fd04:	4584      	cmp	ip, r0
 801fd06:	da04      	bge.n	801fd12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fd08:	2b00      	cmp	r3, #0
 801fd0a:	db02      	blt.n	801fd12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fd0c:	42bb      	cmp	r3, r7
 801fd0e:	f2c0 80d8 	blt.w	801fec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fd12:	f11c 0c01 	adds.w	ip, ip, #1
 801fd16:	f100 80c9 	bmi.w	801feac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fd1a:	4561      	cmp	r1, ip
 801fd1c:	f2c0 80c6 	blt.w	801feac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fd20:	3301      	adds	r3, #1
 801fd22:	f100 80c3 	bmi.w	801feac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fd26:	429a      	cmp	r2, r3
 801fd28:	f2c0 80c0 	blt.w	801feac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fd2c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fd30:	4647      	mov	r7, r8
 801fd32:	f1bb 0f00 	cmp.w	fp, #0
 801fd36:	f340 80e3 	ble.w	801ff00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fd3a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fd3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fd3e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fd42:	689b      	ldr	r3, [r3, #8]
 801fd44:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fd48:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fd4c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fd50:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd54:	f100 8121 	bmi.w	801ff9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd58:	f103 39ff 	add.w	r9, r3, #4294967295
 801fd5c:	454a      	cmp	r2, r9
 801fd5e:	f280 811c 	bge.w	801ff9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd62:	f1bc 0f00 	cmp.w	ip, #0
 801fd66:	f2c0 8118 	blt.w	801ff9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd6a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fd6e:	45cc      	cmp	ip, r9
 801fd70:	f280 8113 	bge.w	801ff9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd74:	b21b      	sxth	r3, r3
 801fd76:	fb0c 2203 	mla	r2, ip, r3, r2
 801fd7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fd7c:	eb04 0902 	add.w	r9, r4, r2
 801fd80:	5ca2      	ldrb	r2, [r4, r2]
 801fd82:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fd86:	2800      	cmp	r0, #0
 801fd88:	f000 80fe 	beq.w	801ff88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fd8c:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fd90:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fd94:	9211      	str	r2, [sp, #68]	; 0x44
 801fd96:	b151      	cbz	r1, 801fdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd98:	eb09 0203 	add.w	r2, r9, r3
 801fd9c:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fda0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fda4:	930f      	str	r3, [sp, #60]	; 0x3c
 801fda6:	7853      	ldrb	r3, [r2, #1]
 801fda8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdac:	9312      	str	r3, [sp, #72]	; 0x48
 801fdae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fdb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fdb2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fdb6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fdba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fdbe:	ea4c 0c03 	orr.w	ip, ip, r3
 801fdc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fdc4:	041b      	lsls	r3, r3, #16
 801fdc6:	fb10 f201 	smulbb	r2, r0, r1
 801fdca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fdce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fdd2:	10d2      	asrs	r2, r2, #3
 801fdd4:	4323      	orrs	r3, r4
 801fdd6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fdda:	4353      	muls	r3, r2
 801fddc:	fb09 330c 	mla	r3, r9, ip, r3
 801fde0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fde4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fde8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fdec:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fdf0:	f1c1 0c10 	rsb	ip, r1, #16
 801fdf4:	ebac 0c00 	sub.w	ip, ip, r0
 801fdf8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fdfc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fe00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fe02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fe04:	0418      	lsls	r0, r3, #16
 801fe06:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fe0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fe0e:	4318      	orrs	r0, r3
 801fe10:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fe14:	fb02 c200 	mla	r2, r2, r0, ip
 801fe18:	0d53      	lsrs	r3, r2, #21
 801fe1a:	0952      	lsrs	r2, r2, #5
 801fe1c:	8838      	ldrh	r0, [r7, #0]
 801fe1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fe22:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fe26:	431a      	orrs	r2, r3
 801fe28:	b292      	uxth	r2, r2
 801fe2a:	1201      	asrs	r1, r0, #8
 801fe2c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fe30:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fe34:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe38:	fb11 f104 	smulbb	r1, r1, r4
 801fe3c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fe40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fe44:	00c0      	lsls	r0, r0, #3
 801fe46:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fe4a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fe4e:	10d1      	asrs	r1, r2, #3
 801fe50:	b2c0      	uxtb	r0, r0
 801fe52:	00d2      	lsls	r2, r2, #3
 801fe54:	b2d2      	uxtb	r2, r2
 801fe56:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fe5a:	fb1e fe04 	smulbb	lr, lr, r4
 801fe5e:	fb10 f004 	smulbb	r0, r0, r4
 801fe62:	fa1f fc8c 	uxth.w	ip, ip
 801fe66:	fb01 e103 	mla	r1, r1, r3, lr
 801fe6a:	fb02 0303 	mla	r3, r2, r3, r0
 801fe6e:	b29a      	uxth	r2, r3
 801fe70:	f10c 0301 	add.w	r3, ip, #1
 801fe74:	b289      	uxth	r1, r1
 801fe76:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fe7a:	1c53      	adds	r3, r2, #1
 801fe7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fe80:	1c4a      	adds	r2, r1, #1
 801fe82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fe86:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fe8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe8e:	0949      	lsrs	r1, r1, #5
 801fe90:	ea43 030c 	orr.w	r3, r3, ip
 801fe94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe98:	430b      	orrs	r3, r1
 801fe9a:	803b      	strh	r3, [r7, #0]
 801fe9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe9e:	449a      	add	sl, r3
 801fea0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fea2:	3702      	adds	r7, #2
 801fea4:	441d      	add	r5, r3
 801fea6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801feaa:	e742      	b.n	801fd32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801feac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801feae:	449a      	add	sl, r3
 801feb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801feb2:	441d      	add	r5, r3
 801feb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feb6:	3b01      	subs	r3, #1
 801feb8:	9309      	str	r3, [sp, #36]	; 0x24
 801feba:	f108 0802 	add.w	r8, r8, #2
 801febe:	e718      	b.n	801fcf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fec0:	d023      	beq.n	801ff0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fec4:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fec6:	3b01      	subs	r3, #1
 801fec8:	fb00 a003 	mla	r0, r0, r3, sl
 801fecc:	1400      	asrs	r0, r0, #16
 801fece:	f53f af2d 	bmi.w	801fd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fed2:	3901      	subs	r1, #1
 801fed4:	4288      	cmp	r0, r1
 801fed6:	f6bf af29 	bge.w	801fd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801feda:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fedc:	fb01 5303 	mla	r3, r1, r3, r5
 801fee0:	141b      	asrs	r3, r3, #16
 801fee2:	f53f af23 	bmi.w	801fd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fee6:	3a01      	subs	r2, #1
 801fee8:	4293      	cmp	r3, r2
 801feea:	f6bf af1f 	bge.w	801fd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801feee:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fef2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fef6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fefa:	f1be 0f00 	cmp.w	lr, #0
 801fefe:	dc6c      	bgt.n	801ffda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ff00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff02:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ff06:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ff0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff0c:	2b00      	cmp	r3, #0
 801ff0e:	f340 810e 	ble.w	802012e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ff12:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff24:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff2c:	eef0 6a62 	vmov.f32	s13, s5
 801ff30:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff38:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff3c:	ee16 aa90 	vmov	sl, s13
 801ff40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff44:	eef0 6a43 	vmov.f32	s13, s6
 801ff48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff4c:	ee12 2a90 	vmov	r2, s5
 801ff50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff54:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff58:	ee13 2a10 	vmov	r2, s6
 801ff5c:	9325      	str	r3, [sp, #148]	; 0x94
 801ff5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff60:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff64:	9326      	str	r3, [sp, #152]	; 0x98
 801ff66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff68:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ff6a:	3b01      	subs	r3, #1
 801ff6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff70:	930c      	str	r3, [sp, #48]	; 0x30
 801ff72:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff74:	bf08      	it	eq
 801ff76:	4613      	moveq	r3, r2
 801ff78:	ee16 5a90 	vmov	r5, s13
 801ff7c:	9309      	str	r3, [sp, #36]	; 0x24
 801ff7e:	eeb0 3a67 	vmov.f32	s6, s15
 801ff82:	eef0 2a47 	vmov.f32	s5, s14
 801ff86:	e6a6      	b.n	801fcd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ff88:	2900      	cmp	r1, #0
 801ff8a:	f43f af10 	beq.w	801fdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff8e:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ff92:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ff96:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff98:	e709      	b.n	801fdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff9a:	f112 0901 	adds.w	r9, r2, #1
 801ff9e:	f53f af7d 	bmi.w	801fe9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ffa2:	454b      	cmp	r3, r9
 801ffa4:	f6ff af7a 	blt.w	801fe9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ffa8:	f11c 0901 	adds.w	r9, ip, #1
 801ffac:	f53f af76 	bmi.w	801fe9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ffb0:	45ce      	cmp	lr, r9
 801ffb2:	f6ff af73 	blt.w	801fe9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ffb6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ffb8:	9202      	str	r2, [sp, #8]
 801ffba:	b21b      	sxth	r3, r3
 801ffbc:	fa0f f28e 	sxth.w	r2, lr
 801ffc0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ffc4:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ffc8:	9201      	str	r2, [sp, #4]
 801ffca:	9300      	str	r3, [sp, #0]
 801ffcc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ffce:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ffd0:	4633      	mov	r3, r6
 801ffd2:	4639      	mov	r1, r7
 801ffd4:	f7ff fd8e 	bl	801faf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ffd8:	e760      	b.n	801fe9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ffda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ffdc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ffde:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ffe2:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ffe6:	1429      	asrs	r1, r5, #16
 801ffe8:	fb03 2101 	mla	r1, r3, r1, r2
 801ffec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ffee:	440a      	add	r2, r1
 801fff0:	5c61      	ldrb	r1, [r4, r1]
 801fff2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fff6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fffa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fffe:	f1bc 0f00 	cmp.w	ip, #0
 8020002:	f000 808c 	beq.w	802011e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020006:	7857      	ldrb	r7, [r2, #1]
 8020008:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 802000c:	9413      	str	r4, [sp, #76]	; 0x4c
 802000e:	b140      	cbz	r0, 8020022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020010:	18d7      	adds	r7, r2, r3
 8020012:	5cd3      	ldrb	r3, [r2, r3]
 8020014:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020018:	9310      	str	r3, [sp, #64]	; 0x40
 802001a:	787b      	ldrb	r3, [r7, #1]
 802001c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020020:	9314      	str	r3, [sp, #80]	; 0x50
 8020022:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020024:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020026:	fb1c f200 	smulbb	r2, ip, r0
 802002a:	041f      	lsls	r7, r3, #16
 802002c:	10d2      	asrs	r2, r2, #3
 802002e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020032:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020036:	431f      	orrs	r7, r3
 8020038:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 802003c:	9317      	str	r3, [sp, #92]	; 0x5c
 802003e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020040:	041b      	lsls	r3, r3, #16
 8020042:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020046:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802004a:	ea43 030b 	orr.w	r3, r3, fp
 802004e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020050:	4353      	muls	r3, r2
 8020052:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020056:	fb04 3707 	mla	r7, r4, r7, r3
 802005a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802005e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020062:	ea43 0b01 	orr.w	fp, r3, r1
 8020066:	f1c0 0110 	rsb	r1, r0, #16
 802006a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802006c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802006e:	eba1 0c0c 	sub.w	ip, r1, ip
 8020072:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020076:	fb0c 770b 	mla	r7, ip, fp, r7
 802007a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802007e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020082:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020086:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802008a:	ea4c 0c0b 	orr.w	ip, ip, fp
 802008e:	fb02 770c 	mla	r7, r2, ip, r7
 8020092:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020094:	0d79      	lsrs	r1, r7, #21
 8020096:	097f      	lsrs	r7, r7, #5
 8020098:	8812      	ldrh	r2, [r2, #0]
 802009a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802009e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80200a2:	430f      	orrs	r7, r1
 80200a4:	b2bb      	uxth	r3, r7
 80200a6:	1211      	asrs	r1, r2, #8
 80200a8:	1218      	asrs	r0, r3, #8
 80200aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80200ae:	fb11 f104 	smulbb	r1, r1, r4
 80200b2:	10d7      	asrs	r7, r2, #3
 80200b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80200b8:	00d2      	lsls	r2, r2, #3
 80200ba:	fb00 1009 	mla	r0, r0, r9, r1
 80200be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80200c2:	10d9      	asrs	r1, r3, #3
 80200c4:	b2d2      	uxtb	r2, r2
 80200c6:	00db      	lsls	r3, r3, #3
 80200c8:	fb17 f704 	smulbb	r7, r7, r4
 80200cc:	fb12 f204 	smulbb	r2, r2, r4
 80200d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80200d4:	b2db      	uxtb	r3, r3
 80200d6:	b280      	uxth	r0, r0
 80200d8:	fb01 7109 	mla	r1, r1, r9, r7
 80200dc:	fb03 2309 	mla	r3, r3, r9, r2
 80200e0:	b29b      	uxth	r3, r3
 80200e2:	b289      	uxth	r1, r1
 80200e4:	1c42      	adds	r2, r0, #1
 80200e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80200ea:	1c4f      	adds	r7, r1, #1
 80200ec:	1c5a      	adds	r2, r3, #1
 80200ee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80200f2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80200f6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80200fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80200fe:	0949      	lsrs	r1, r1, #5
 8020100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020102:	4310      	orrs	r0, r2
 8020104:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020108:	4308      	orrs	r0, r1
 802010a:	f823 0b02 	strh.w	r0, [r3], #2
 802010e:	930e      	str	r3, [sp, #56]	; 0x38
 8020110:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020112:	449a      	add	sl, r3
 8020114:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020116:	f10e 3eff 	add.w	lr, lr, #4294967295
 802011a:	441d      	add	r5, r3
 802011c:	e6ed      	b.n	801fefa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 802011e:	2800      	cmp	r0, #0
 8020120:	f43f af7f 	beq.w	8020022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020124:	5cd3      	ldrb	r3, [r2, r3]
 8020126:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802012a:	9310      	str	r3, [sp, #64]	; 0x40
 802012c:	e779      	b.n	8020022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802012e:	b019      	add	sp, #100	; 0x64
 8020130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020134:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020138:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 802013c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020140:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8020144:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020148:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802014c:	8808      	ldrh	r0, [r1, #0]
 802014e:	fb08 470e 	mla	r7, r8, lr, r4
 8020152:	f1b8 0f00 	cmp.w	r8, #0
 8020156:	eb02 0907 	add.w	r9, r2, r7
 802015a:	db67      	blt.n	802022c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 802015c:	45c2      	cmp	sl, r8
 802015e:	dd65      	ble.n	802022c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020160:	2c00      	cmp	r4, #0
 8020162:	db61      	blt.n	8020228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020164:	45a6      	cmp	lr, r4
 8020166:	dd5f      	ble.n	8020228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020168:	5dd2      	ldrb	r2, [r2, r7]
 802016a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802016e:	1c62      	adds	r2, r4, #1
 8020170:	d45f      	bmi.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020172:	4596      	cmp	lr, r2
 8020174:	dd5d      	ble.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020176:	2d00      	cmp	r5, #0
 8020178:	d05b      	beq.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802017a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802017e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020182:	f118 0801 	adds.w	r8, r8, #1
 8020186:	d458      	bmi.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020188:	45c2      	cmp	sl, r8
 802018a:	dd56      	ble.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802018c:	2e00      	cmp	r6, #0
 802018e:	d054      	beq.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020190:	2c00      	cmp	r4, #0
 8020192:	db50      	blt.n	8020236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020194:	45a6      	cmp	lr, r4
 8020196:	dd4e      	ble.n	8020236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020198:	f819 200e 	ldrb.w	r2, [r9, lr]
 802019c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80201a0:	3401      	adds	r4, #1
 80201a2:	d407      	bmi.n	80201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80201a4:	45a6      	cmp	lr, r4
 80201a6:	dd05      	ble.n	80201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80201a8:	b125      	cbz	r5, 80201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80201aa:	44ce      	add	lr, r9
 80201ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80201b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80201b4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80201b8:	fb15 f406 	smulbb	r4, r5, r6
 80201bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80201c0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80201c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80201c8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80201cc:	ea43 0c0c 	orr.w	ip, r3, ip
 80201d0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80201d4:	f1c6 0310 	rsb	r3, r6, #16
 80201d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80201dc:	1b5b      	subs	r3, r3, r5
 80201de:	ea4e 0707 	orr.w	r7, lr, r7
 80201e2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80201e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80201ea:	437d      	muls	r5, r7
 80201ec:	fb03 5c0c 	mla	ip, r3, ip, r5
 80201f0:	0403      	lsls	r3, r0, #16
 80201f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80201f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80201fa:	4318      	orrs	r0, r3
 80201fc:	0413      	lsls	r3, r2, #16
 80201fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020202:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020206:	4313      	orrs	r3, r2
 8020208:	fb04 c000 	mla	r0, r4, r0, ip
 802020c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020210:	fb06 0003 	mla	r0, r6, r3, r0
 8020214:	0d43      	lsrs	r3, r0, #21
 8020216:	0940      	lsrs	r0, r0, #5
 8020218:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802021c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020220:	4318      	orrs	r0, r3
 8020222:	8008      	strh	r0, [r1, #0]
 8020224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020228:	4684      	mov	ip, r0
 802022a:	e7a0      	b.n	802016e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 802022c:	4607      	mov	r7, r0
 802022e:	4684      	mov	ip, r0
 8020230:	e7a7      	b.n	8020182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020232:	4607      	mov	r7, r0
 8020234:	e7a5      	b.n	8020182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020236:	4602      	mov	r2, r0
 8020238:	e7b2      	b.n	80201a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 802023a:	4602      	mov	r2, r0
 802023c:	e7ba      	b.n	80201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0802023e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802023e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020242:	b093      	sub	sp, #76	; 0x4c
 8020244:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020248:	920f      	str	r2, [sp, #60]	; 0x3c
 802024a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802024c:	9108      	str	r1, [sp, #32]
 802024e:	9306      	str	r3, [sp, #24]
 8020250:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020254:	9010      	str	r0, [sp, #64]	; 0x40
 8020256:	6850      	ldr	r0, [r2, #4]
 8020258:	6812      	ldr	r2, [r2, #0]
 802025a:	fb00 1303 	mla	r3, r0, r3, r1
 802025e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020262:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020264:	681b      	ldr	r3, [r3, #0]
 8020266:	9307      	str	r3, [sp, #28]
 8020268:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802026a:	685f      	ldr	r7, [r3, #4]
 802026c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020270:	3704      	adds	r7, #4
 8020272:	9b08      	ldr	r3, [sp, #32]
 8020274:	2b00      	cmp	r3, #0
 8020276:	dc03      	bgt.n	8020280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802027a:	2b00      	cmp	r3, #0
 802027c:	f340 81b2 	ble.w	80205e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020280:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020282:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020286:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802028a:	1e48      	subs	r0, r1, #1
 802028c:	f102 3cff 	add.w	ip, r2, #4294967295
 8020290:	9b06      	ldr	r3, [sp, #24]
 8020292:	2b00      	cmp	r3, #0
 8020294:	f340 80a9 	ble.w	80203ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020298:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802029c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80202a0:	d406      	bmi.n	80202b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80202a2:	4586      	cmp	lr, r0
 80202a4:	da04      	bge.n	80202b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80202a6:	2b00      	cmp	r3, #0
 80202a8:	db02      	blt.n	80202b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80202aa:	4563      	cmp	r3, ip
 80202ac:	f2c0 809e 	blt.w	80203ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80202b0:	f11e 0e01 	adds.w	lr, lr, #1
 80202b4:	f100 808f 	bmi.w	80203d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80202b8:	4571      	cmp	r1, lr
 80202ba:	f2c0 808c 	blt.w	80203d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80202be:	3301      	adds	r3, #1
 80202c0:	f100 8089 	bmi.w	80203d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80202c4:	429a      	cmp	r2, r3
 80202c6:	f2c0 8086 	blt.w	80203d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80202ca:	f8dd b018 	ldr.w	fp, [sp, #24]
 80202ce:	46c8      	mov	r8, r9
 80202d0:	f1bb 0f00 	cmp.w	fp, #0
 80202d4:	f340 80a6 	ble.w	8020424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80202d8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80202da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80202dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80202e0:	689b      	ldr	r3, [r3, #8]
 80202e2:	1422      	asrs	r2, r4, #16
 80202e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80202e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80202ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80202f0:	f100 80e3 	bmi.w	80204ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80202f4:	f103 3aff 	add.w	sl, r3, #4294967295
 80202f8:	4552      	cmp	r2, sl
 80202fa:	f280 80de 	bge.w	80204ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80202fe:	f1bc 0f00 	cmp.w	ip, #0
 8020302:	f2c0 80da 	blt.w	80204ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020306:	f10e 3aff 	add.w	sl, lr, #4294967295
 802030a:	45d4      	cmp	ip, sl
 802030c:	f280 80d5 	bge.w	80204ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020310:	b21b      	sxth	r3, r3
 8020312:	fb0c 2203 	mla	r2, ip, r3, r2
 8020316:	9d07      	ldr	r5, [sp, #28]
 8020318:	eb05 0a02 	add.w	sl, r5, r2
 802031c:	5caa      	ldrb	r2, [r5, r2]
 802031e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8020322:	2800      	cmp	r0, #0
 8020324:	f000 80c0 	beq.w	80204a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020328:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802032c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020330:	920b      	str	r2, [sp, #44]	; 0x2c
 8020332:	b151      	cbz	r1, 802034a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020334:	eb0a 0203 	add.w	r2, sl, r3
 8020338:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802033c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020340:	9309      	str	r3, [sp, #36]	; 0x24
 8020342:	7853      	ldrb	r3, [r2, #1]
 8020344:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020348:	930c      	str	r3, [sp, #48]	; 0x30
 802034a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802034c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802034e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020352:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020356:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802035a:	ea4c 0c03 	orr.w	ip, ip, r3
 802035e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020360:	041b      	lsls	r3, r3, #16
 8020362:	fb10 f201 	smulbb	r2, r0, r1
 8020366:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802036a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802036e:	10d2      	asrs	r2, r2, #3
 8020370:	432b      	orrs	r3, r5
 8020372:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020376:	4353      	muls	r3, r2
 8020378:	fb0a 330c 	mla	r3, sl, ip, r3
 802037c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020380:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020384:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020388:	ea4c 0e0e 	orr.w	lr, ip, lr
 802038c:	f1c1 0c10 	rsb	ip, r1, #16
 8020390:	ebac 0c00 	sub.w	ip, ip, r0
 8020394:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020398:	fb0c 3c0e 	mla	ip, ip, lr, r3
 802039c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802039e:	0418      	lsls	r0, r3, #16
 80203a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80203a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80203a8:	4318      	orrs	r0, r3
 80203aa:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80203ae:	fb02 c200 	mla	r2, r2, r0, ip
 80203b2:	0d53      	lsrs	r3, r2, #21
 80203b4:	0952      	lsrs	r2, r2, #5
 80203b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80203ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80203be:	431a      	orrs	r2, r3
 80203c0:	f8a8 2000 	strh.w	r2, [r8]
 80203c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80203c6:	441c      	add	r4, r3
 80203c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80203ca:	f108 0802 	add.w	r8, r8, #2
 80203ce:	441e      	add	r6, r3
 80203d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80203d4:	e77c      	b.n	80202d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80203d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80203d8:	441c      	add	r4, r3
 80203da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80203dc:	441e      	add	r6, r3
 80203de:	9b06      	ldr	r3, [sp, #24]
 80203e0:	3b01      	subs	r3, #1
 80203e2:	9306      	str	r3, [sp, #24]
 80203e4:	f109 0902 	add.w	r9, r9, #2
 80203e8:	e752      	b.n	8020290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80203ea:	d020      	beq.n	802042e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80203ec:	9b06      	ldr	r3, [sp, #24]
 80203ee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80203f0:	3b01      	subs	r3, #1
 80203f2:	fb00 4003 	mla	r0, r0, r3, r4
 80203f6:	1400      	asrs	r0, r0, #16
 80203f8:	f53f af67 	bmi.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80203fc:	3901      	subs	r1, #1
 80203fe:	4288      	cmp	r0, r1
 8020400:	f6bf af63 	bge.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020404:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020406:	fb01 6303 	mla	r3, r1, r3, r6
 802040a:	141b      	asrs	r3, r3, #16
 802040c:	f53f af5d 	bmi.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020410:	3a01      	subs	r2, #1
 8020412:	4293      	cmp	r3, r2
 8020414:	f6bf af59 	bge.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020418:	f8dd 8018 	ldr.w	r8, [sp, #24]
 802041c:	46ca      	mov	sl, r9
 802041e:	f1b8 0f00 	cmp.w	r8, #0
 8020422:	dc67      	bgt.n	80204f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020424:	9b06      	ldr	r3, [sp, #24]
 8020426:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802042a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802042e:	9b08      	ldr	r3, [sp, #32]
 8020430:	2b00      	cmp	r3, #0
 8020432:	f340 80d7 	ble.w	80205e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020436:	ee30 0a04 	vadd.f32	s0, s0, s8
 802043a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802043e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020442:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020444:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020448:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802044c:	eeb0 6a62 	vmov.f32	s12, s5
 8020450:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020454:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020458:	ee77 2a62 	vsub.f32	s5, s14, s5
 802045c:	ee16 4a10 	vmov	r4, s12
 8020460:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020464:	eeb0 6a43 	vmov.f32	s12, s6
 8020468:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802046c:	ee12 2a90 	vmov	r2, s5
 8020470:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020474:	fb92 f3f3 	sdiv	r3, r2, r3
 8020478:	ee13 2a10 	vmov	r2, s6
 802047c:	931f      	str	r3, [sp, #124]	; 0x7c
 802047e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020480:	fb92 f3f3 	sdiv	r3, r2, r3
 8020484:	9320      	str	r3, [sp, #128]	; 0x80
 8020486:	9b08      	ldr	r3, [sp, #32]
 8020488:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802048a:	3b01      	subs	r3, #1
 802048c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020490:	9308      	str	r3, [sp, #32]
 8020492:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020494:	bf08      	it	eq
 8020496:	4613      	moveq	r3, r2
 8020498:	ee16 6a10 	vmov	r6, s12
 802049c:	9306      	str	r3, [sp, #24]
 802049e:	eeb0 3a67 	vmov.f32	s6, s15
 80204a2:	eef0 2a47 	vmov.f32	s5, s14
 80204a6:	e6e4      	b.n	8020272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80204a8:	2900      	cmp	r1, #0
 80204aa:	f43f af4e 	beq.w	802034a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80204ae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80204b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80204b6:	9309      	str	r3, [sp, #36]	; 0x24
 80204b8:	e747      	b.n	802034a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80204ba:	f112 0a01 	adds.w	sl, r2, #1
 80204be:	d481      	bmi.n	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80204c0:	4553      	cmp	r3, sl
 80204c2:	f6ff af7f 	blt.w	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80204c6:	f11c 0a01 	adds.w	sl, ip, #1
 80204ca:	f53f af7b 	bmi.w	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80204ce:	45d6      	cmp	lr, sl
 80204d0:	f6ff af78 	blt.w	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80204d4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80204d8:	b21b      	sxth	r3, r3
 80204da:	fa0f f28e 	sxth.w	r2, lr
 80204de:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80204e2:	9201      	str	r2, [sp, #4]
 80204e4:	9300      	str	r3, [sp, #0]
 80204e6:	9a07      	ldr	r2, [sp, #28]
 80204e8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80204ea:	463b      	mov	r3, r7
 80204ec:	4641      	mov	r1, r8
 80204ee:	f7ff fe21 	bl	8020134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80204f2:	e767      	b.n	80203c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80204f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80204f6:	9d07      	ldr	r5, [sp, #28]
 80204f8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80204fc:	1422      	asrs	r2, r4, #16
 80204fe:	1431      	asrs	r1, r6, #16
 8020500:	fb03 2101 	mla	r1, r3, r1, r2
 8020504:	9a07      	ldr	r2, [sp, #28]
 8020506:	440a      	add	r2, r1
 8020508:	5c69      	ldrb	r1, [r5, r1]
 802050a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802050e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020512:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020516:	f1be 0f00 	cmp.w	lr, #0
 802051a:	d05c      	beq.n	80205d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802051c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020520:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020524:	950d      	str	r5, [sp, #52]	; 0x34
 8020526:	b150      	cbz	r0, 802053e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020528:	eb02 0c03 	add.w	ip, r2, r3
 802052c:	5cd3      	ldrb	r3, [r2, r3]
 802052e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020532:	930a      	str	r3, [sp, #40]	; 0x28
 8020534:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020538:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802053c:	930e      	str	r3, [sp, #56]	; 0x38
 802053e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020540:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020542:	fb1e f200 	smulbb	r2, lr, r0
 8020546:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802054a:	10d2      	asrs	r2, r2, #3
 802054c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020550:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020554:	ea4c 0c03 	orr.w	ip, ip, r3
 8020558:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 802055c:	9311      	str	r3, [sp, #68]	; 0x44
 802055e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020560:	041b      	lsls	r3, r3, #16
 8020562:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020566:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802056a:	ea43 030b 	orr.w	r3, r3, fp
 802056e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020570:	4353      	muls	r3, r2
 8020572:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020576:	fb05 3c0c 	mla	ip, r5, ip, r3
 802057a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802057e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020582:	ea43 0b01 	orr.w	fp, r3, r1
 8020586:	f1c0 0110 	rsb	r1, r0, #16
 802058a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802058c:	eba1 0e0e 	sub.w	lr, r1, lr
 8020590:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020594:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020598:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 802059c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80205a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80205a4:	ea4b 0e0e 	orr.w	lr, fp, lr
 80205a8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80205ac:	fb02 cc0e 	mla	ip, r2, lr, ip
 80205b0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80205b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80205b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80205bc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80205c0:	ea43 0c0c 	orr.w	ip, r3, ip
 80205c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80205c6:	f82a cb02 	strh.w	ip, [sl], #2
 80205ca:	441c      	add	r4, r3
 80205cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205ce:	f108 38ff 	add.w	r8, r8, #4294967295
 80205d2:	441e      	add	r6, r3
 80205d4:	e723      	b.n	802041e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80205d6:	2800      	cmp	r0, #0
 80205d8:	d0b1      	beq.n	802053e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80205da:	5cd3      	ldrb	r3, [r2, r3]
 80205dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80205e0:	930a      	str	r3, [sp, #40]	; 0x28
 80205e2:	e7ac      	b.n	802053e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80205e4:	b013      	add	sp, #76	; 0x4c
 80205e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080205ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80205ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205ee:	880d      	ldrh	r5, [r1, #0]
 80205f0:	b087      	sub	sp, #28
 80205f2:	10ef      	asrs	r7, r5, #3
 80205f4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80205f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80205fc:	00ed      	lsls	r5, r5, #3
 80205fe:	9701      	str	r7, [sp, #4]
 8020600:	b2ed      	uxtb	r5, r5
 8020602:	9502      	str	r5, [sp, #8]
 8020604:	9d01      	ldr	r5, [sp, #4]
 8020606:	9103      	str	r1, [sp, #12]
 8020608:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 802060c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020610:	9902      	ldr	r1, [sp, #8]
 8020612:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020616:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802061a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802061e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020622:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020626:	022d      	lsls	r5, r5, #8
 8020628:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 802062c:	fb06 0709 	mla	r7, r6, r9, r0
 8020630:	430d      	orrs	r5, r1
 8020632:	2e00      	cmp	r6, #0
 8020634:	eb02 0c07 	add.w	ip, r2, r7
 8020638:	9505      	str	r5, [sp, #20]
 802063a:	f2c0 80b6 	blt.w	80207aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802063e:	45b3      	cmp	fp, r6
 8020640:	f340 80b3 	ble.w	80207aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020644:	2800      	cmp	r0, #0
 8020646:	f2c0 80ae 	blt.w	80207a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802064a:	4581      	cmp	r9, r0
 802064c:	f340 80ab 	ble.w	80207a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020650:	5dd7      	ldrb	r7, [r2, r7]
 8020652:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020656:	441f      	add	r7, r3
 8020658:	1c42      	adds	r2, r0, #1
 802065a:	f100 80a9 	bmi.w	80207b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802065e:	4591      	cmp	r9, r2
 8020660:	f340 80a6 	ble.w	80207b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020664:	2c00      	cmp	r4, #0
 8020666:	f000 80a3 	beq.w	80207b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802066a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802066e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020672:	441d      	add	r5, r3
 8020674:	3601      	adds	r6, #1
 8020676:	f100 809f 	bmi.w	80207b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802067a:	45b3      	cmp	fp, r6
 802067c:	f340 809c 	ble.w	80207b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020680:	f1be 0f00 	cmp.w	lr, #0
 8020684:	f000 8098 	beq.w	80207b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020688:	2800      	cmp	r0, #0
 802068a:	f2c0 8093 	blt.w	80207b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802068e:	4581      	cmp	r9, r0
 8020690:	f340 8090 	ble.w	80207b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020694:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020698:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802069c:	441e      	add	r6, r3
 802069e:	3001      	adds	r0, #1
 80206a0:	f100 808d 	bmi.w	80207be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80206a4:	4581      	cmp	r9, r0
 80206a6:	f340 808a 	ble.w	80207be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80206aa:	2c00      	cmp	r4, #0
 80206ac:	f000 8087 	beq.w	80207be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80206b0:	44e1      	add	r9, ip
 80206b2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80206b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80206ba:	4413      	add	r3, r2
 80206bc:	b2a4      	uxth	r4, r4
 80206be:	fa1f fe8e 	uxth.w	lr, lr
 80206c2:	fb04 fb0e 	mul.w	fp, r4, lr
 80206c6:	0124      	lsls	r4, r4, #4
 80206c8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80206cc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80206d0:	eba4 040b 	sub.w	r4, r4, fp
 80206d4:	fa1f f08e 	uxth.w	r0, lr
 80206d8:	b2a2      	uxth	r2, r4
 80206da:	78ac      	ldrb	r4, [r5, #2]
 80206dc:	f897 c002 	ldrb.w	ip, [r7, #2]
 80206e0:	9901      	ldr	r1, [sp, #4]
 80206e2:	eba9 0900 	sub.w	r9, r9, r0
 80206e6:	fa1f f989 	uxth.w	r9, r9
 80206ea:	4354      	muls	r4, r2
 80206ec:	fb09 440c 	mla	r4, r9, ip, r4
 80206f0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80206f4:	fb00 440c 	mla	r4, r0, ip, r4
 80206f8:	f893 c002 	ldrb.w	ip, [r3, #2]
 80206fc:	fa1f fe88 	uxth.w	lr, r8
 8020700:	ea6f 0808 	mvn.w	r8, r8
 8020704:	fa5f f888 	uxtb.w	r8, r8
 8020708:	fb0b 4c0c 	mla	ip, fp, ip, r4
 802070c:	fb1a fa08 	smulbb	sl, sl, r8
 8020710:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020714:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020718:	f895 a001 	ldrb.w	sl, [r5, #1]
 802071c:	787c      	ldrb	r4, [r7, #1]
 802071e:	782d      	ldrb	r5, [r5, #0]
 8020720:	783f      	ldrb	r7, [r7, #0]
 8020722:	fb02 fa0a 	mul.w	sl, r2, sl
 8020726:	fb09 aa04 	mla	sl, r9, r4, sl
 802072a:	7874      	ldrb	r4, [r6, #1]
 802072c:	436a      	muls	r2, r5
 802072e:	7835      	ldrb	r5, [r6, #0]
 8020730:	fb00 aa04 	mla	sl, r0, r4, sl
 8020734:	fb09 2207 	mla	r2, r9, r7, r2
 8020738:	785c      	ldrb	r4, [r3, #1]
 802073a:	781b      	ldrb	r3, [r3, #0]
 802073c:	fb00 2005 	mla	r0, r0, r5, r2
 8020740:	fb0b a404 	mla	r4, fp, r4, sl
 8020744:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020748:	9b02      	ldr	r3, [sp, #8]
 802074a:	fb11 fa08 	smulbb	sl, r1, r8
 802074e:	fa1f fc8c 	uxth.w	ip, ip
 8020752:	fb13 f808 	smulbb	r8, r3, r8
 8020756:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802075a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802075e:	fb04 a40e 	mla	r4, r4, lr, sl
 8020762:	f10c 0301 	add.w	r3, ip, #1
 8020766:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802076a:	fa1f fe8e 	uxth.w	lr, lr
 802076e:	b2a4      	uxth	r4, r4
 8020770:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020774:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020778:	f104 0a01 	add.w	sl, r4, #1
 802077c:	f10e 0c01 	add.w	ip, lr, #1
 8020780:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020784:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020788:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802078c:	0964      	lsrs	r4, r4, #5
 802078e:	ea4c 0c03 	orr.w	ip, ip, r3
 8020792:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020796:	9b03      	ldr	r3, [sp, #12]
 8020798:	ea4c 0c04 	orr.w	ip, ip, r4
 802079c:	f8a3 c000 	strh.w	ip, [r3]
 80207a0:	b007      	add	sp, #28
 80207a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80207a6:	af05      	add	r7, sp, #20
 80207a8:	e756      	b.n	8020658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80207aa:	ad05      	add	r5, sp, #20
 80207ac:	462f      	mov	r7, r5
 80207ae:	e761      	b.n	8020674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80207b0:	ad05      	add	r5, sp, #20
 80207b2:	e75f      	b.n	8020674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80207b4:	ae05      	add	r6, sp, #20
 80207b6:	e772      	b.n	802069e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80207b8:	ab05      	add	r3, sp, #20
 80207ba:	461e      	mov	r6, r3
 80207bc:	e77e      	b.n	80206bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80207be:	ab05      	add	r3, sp, #20
 80207c0:	e77c      	b.n	80206bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080207c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80207c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207c6:	b095      	sub	sp, #84	; 0x54
 80207c8:	9212      	str	r2, [sp, #72]	; 0x48
 80207ca:	9309      	str	r3, [sp, #36]	; 0x24
 80207cc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80207ce:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80207d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80207d4:	910e      	str	r1, [sp, #56]	; 0x38
 80207d6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80207da:	9013      	str	r0, [sp, #76]	; 0x4c
 80207dc:	6850      	ldr	r0, [r2, #4]
 80207de:	6812      	ldr	r2, [r2, #0]
 80207e0:	fb00 1303 	mla	r3, r0, r3, r1
 80207e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80207e8:	930a      	str	r3, [sp, #40]	; 0x28
 80207ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80207ec:	681b      	ldr	r3, [r3, #0]
 80207ee:	930d      	str	r3, [sp, #52]	; 0x34
 80207f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80207f2:	685c      	ldr	r4, [r3, #4]
 80207f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80207f6:	43db      	mvns	r3, r3
 80207f8:	b2db      	uxtb	r3, r3
 80207fa:	3404      	adds	r4, #4
 80207fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80207fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020800:	2b00      	cmp	r3, #0
 8020802:	dc03      	bgt.n	802080c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020804:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020806:	2b00      	cmp	r3, #0
 8020808:	f340 8255 	ble.w	8020cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802080c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802080e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020812:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020816:	1e48      	subs	r0, r1, #1
 8020818:	1e55      	subs	r5, r2, #1
 802081a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802081c:	2b00      	cmp	r3, #0
 802081e:	f340 80f9 	ble.w	8020a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020822:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020824:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020826:	1436      	asrs	r6, r6, #16
 8020828:	ea4f 4323 	mov.w	r3, r3, asr #16
 802082c:	d406      	bmi.n	802083c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802082e:	4286      	cmp	r6, r0
 8020830:	da04      	bge.n	802083c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020832:	2b00      	cmp	r3, #0
 8020834:	db02      	blt.n	802083c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020836:	42ab      	cmp	r3, r5
 8020838:	f2c0 80ed 	blt.w	8020a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 802083c:	3601      	adds	r6, #1
 802083e:	f100 80da 	bmi.w	80209f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020842:	42b1      	cmp	r1, r6
 8020844:	f2c0 80d7 	blt.w	80209f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020848:	3301      	adds	r3, #1
 802084a:	f100 80d4 	bmi.w	80209f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802084e:	429a      	cmp	r2, r3
 8020850:	f2c0 80d1 	blt.w	80209f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020856:	9311      	str	r3, [sp, #68]	; 0x44
 8020858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802085a:	930c      	str	r3, [sp, #48]	; 0x30
 802085c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802085e:	2b00      	cmp	r3, #0
 8020860:	f340 80fa 	ble.w	8020a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020864:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020866:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020868:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802086a:	68c6      	ldr	r6, [r0, #12]
 802086c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802086e:	141d      	asrs	r5, r3, #16
 8020870:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020874:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020876:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020878:	1400      	asrs	r0, r0, #16
 802087a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802087e:	6892      	ldr	r2, [r2, #8]
 8020880:	f100 813e 	bmi.w	8020b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020884:	1e57      	subs	r7, r2, #1
 8020886:	42b8      	cmp	r0, r7
 8020888:	f280 813a 	bge.w	8020b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802088c:	2d00      	cmp	r5, #0
 802088e:	f2c0 8137 	blt.w	8020b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020892:	1e77      	subs	r7, r6, #1
 8020894:	42bd      	cmp	r5, r7
 8020896:	f280 8133 	bge.w	8020b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802089a:	b212      	sxth	r2, r2
 802089c:	fb05 0002 	mla	r0, r5, r2, r0
 80208a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80208a2:	f815 a000 	ldrb.w	sl, [r5, r0]
 80208a6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80208aa:	182e      	adds	r6, r5, r0
 80208ac:	eb04 050a 	add.w	r5, r4, sl
 80208b0:	2b00      	cmp	r3, #0
 80208b2:	f000 8117 	beq.w	8020ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80208b6:	f896 c001 	ldrb.w	ip, [r6, #1]
 80208ba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80208be:	44a4      	add	ip, r4
 80208c0:	2900      	cmp	r1, #0
 80208c2:	f000 8117 	beq.w	8020af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80208c6:	18b0      	adds	r0, r6, r2
 80208c8:	5cb2      	ldrb	r2, [r6, r2]
 80208ca:	7840      	ldrb	r0, [r0, #1]
 80208cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80208d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80208d4:	4422      	add	r2, r4
 80208d6:	4420      	add	r0, r4
 80208d8:	b29b      	uxth	r3, r3
 80208da:	b289      	uxth	r1, r1
 80208dc:	fb03 f901 	mul.w	r9, r3, r1
 80208e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80208e4:	011b      	lsls	r3, r3, #4
 80208e6:	b289      	uxth	r1, r1
 80208e8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80208ec:	f895 b002 	ldrb.w	fp, [r5, #2]
 80208f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80208f2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80208f6:	f8b6 e000 	ldrh.w	lr, [r6]
 80208fa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80208fe:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8020902:	eba3 0309 	sub.w	r3, r3, r9
 8020906:	b29b      	uxth	r3, r3
 8020908:	eba8 0801 	sub.w	r8, r8, r1
 802090c:	fa1f f888 	uxth.w	r8, r8
 8020910:	435f      	muls	r7, r3
 8020912:	fb08 770b 	mla	r7, r8, fp, r7
 8020916:	f892 b002 	ldrb.w	fp, [r2, #2]
 802091a:	9310      	str	r3, [sp, #64]	; 0x40
 802091c:	fb01 770b 	mla	r7, r1, fp, r7
 8020920:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020924:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020926:	fb09 770b 	mla	r7, r9, fp, r7
 802092a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802092e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020932:	fb1b fb03 	smulbb	fp, fp, r3
 8020936:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802093a:	fb07 b706 	mla	r7, r7, r6, fp
 802093e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020940:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020944:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020948:	f89c c000 	ldrb.w	ip, [ip]
 802094c:	435d      	muls	r5, r3
 802094e:	fb08 550b 	mla	r5, r8, fp, r5
 8020952:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020956:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020958:	fb01 550b 	mla	r5, r1, fp, r5
 802095c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020960:	fb09 550b 	mla	r5, r9, fp, r5
 8020964:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020968:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 802096c:	fb1b fb03 	smulbb	fp, fp, r3
 8020970:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020972:	fb03 f30c 	mul.w	r3, r3, ip
 8020976:	f892 c000 	ldrb.w	ip, [r2]
 802097a:	fb08 330a 	mla	r3, r8, sl, r3
 802097e:	fb01 330c 	mla	r3, r1, ip, r3
 8020982:	f890 c000 	ldrb.w	ip, [r0]
 8020986:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802098a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802098e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020990:	fa5f fe8e 	uxtb.w	lr, lr
 8020994:	b2bf      	uxth	r7, r7
 8020996:	fb1e fe03 	smulbb	lr, lr, r3
 802099a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802099e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80209a2:	fb05 b506 	mla	r5, r5, r6, fp
 80209a6:	1c7b      	adds	r3, r7, #1
 80209a8:	fb0c e606 	mla	r6, ip, r6, lr
 80209ac:	b2ad      	uxth	r5, r5
 80209ae:	b2b6      	uxth	r6, r6
 80209b0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80209b4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80209b8:	f105 0b01 	add.w	fp, r5, #1
 80209bc:	1c77      	adds	r7, r6, #1
 80209be:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80209c2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80209c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80209ca:	096d      	lsrs	r5, r5, #5
 80209cc:	431f      	orrs	r7, r3
 80209ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80209d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80209d4:	433d      	orrs	r5, r7
 80209d6:	801d      	strh	r5, [r3, #0]
 80209d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80209da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80209dc:	3302      	adds	r3, #2
 80209de:	930c      	str	r3, [sp, #48]	; 0x30
 80209e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80209e2:	4413      	add	r3, r2
 80209e4:	931f      	str	r3, [sp, #124]	; 0x7c
 80209e6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80209e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209ea:	4413      	add	r3, r2
 80209ec:	9320      	str	r3, [sp, #128]	; 0x80
 80209ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80209f0:	3b01      	subs	r3, #1
 80209f2:	9311      	str	r3, [sp, #68]	; 0x44
 80209f4:	e732      	b.n	802085c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80209f6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80209f8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80209fa:	4433      	add	r3, r6
 80209fc:	931f      	str	r3, [sp, #124]	; 0x7c
 80209fe:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8020a00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a02:	4433      	add	r3, r6
 8020a04:	9320      	str	r3, [sp, #128]	; 0x80
 8020a06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a08:	3b01      	subs	r3, #1
 8020a0a:	9309      	str	r3, [sp, #36]	; 0x24
 8020a0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a0e:	3302      	adds	r3, #2
 8020a10:	930a      	str	r3, [sp, #40]	; 0x28
 8020a12:	e702      	b.n	802081a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020a14:	d027      	beq.n	8020a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a18:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020a1a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020a1c:	3b01      	subs	r3, #1
 8020a1e:	fb00 5003 	mla	r0, r0, r3, r5
 8020a22:	1400      	asrs	r0, r0, #16
 8020a24:	f53f af16 	bmi.w	8020854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a28:	3901      	subs	r1, #1
 8020a2a:	4288      	cmp	r0, r1
 8020a2c:	f6bf af12 	bge.w	8020854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a30:	9922      	ldr	r1, [sp, #136]	; 0x88
 8020a32:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020a34:	fb01 0303 	mla	r3, r1, r3, r0
 8020a38:	141b      	asrs	r3, r3, #16
 8020a3a:	f53f af0b 	bmi.w	8020854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a3e:	3a01      	subs	r2, #1
 8020a40:	4293      	cmp	r3, r2
 8020a42:	f6bf af07 	bge.w	8020854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a48:	9311      	str	r3, [sp, #68]	; 0x44
 8020a4a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8020a4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a50:	930c      	str	r3, [sp, #48]	; 0x30
 8020a52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020a54:	2b00      	cmp	r3, #0
 8020a56:	dc70      	bgt.n	8020b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020a5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020a60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a64:	930a      	str	r3, [sp, #40]	; 0x28
 8020a66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020a68:	2b00      	cmp	r3, #0
 8020a6a:	f340 8124 	ble.w	8020cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020a6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020a76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020a7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a88:	eef0 6a62 	vmov.f32	s13, s5
 8020a8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a98:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020a9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020aa0:	eef0 6a43 	vmov.f32	s13, s6
 8020aa4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020aa8:	ee12 2a90 	vmov	r2, s5
 8020aac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020ab0:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ab4:	ee13 2a10 	vmov	r2, s6
 8020ab8:	9321      	str	r3, [sp, #132]	; 0x84
 8020aba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020abc:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ac0:	9322      	str	r3, [sp, #136]	; 0x88
 8020ac2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020ac4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020ac6:	3b01      	subs	r3, #1
 8020ac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020acc:	930e      	str	r3, [sp, #56]	; 0x38
 8020ace:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020ad0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020ad4:	bf08      	it	eq
 8020ad6:	4613      	moveq	r3, r2
 8020ad8:	9309      	str	r3, [sp, #36]	; 0x24
 8020ada:	eeb0 3a67 	vmov.f32	s6, s15
 8020ade:	eef0 2a47 	vmov.f32	s5, s14
 8020ae2:	e68c      	b.n	80207fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020ae4:	b149      	cbz	r1, 8020afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020ae6:	5cb2      	ldrb	r2, [r6, r2]
 8020ae8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020aec:	4422      	add	r2, r4
 8020aee:	4628      	mov	r0, r5
 8020af0:	46ac      	mov	ip, r5
 8020af2:	e6f1      	b.n	80208d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020af4:	4628      	mov	r0, r5
 8020af6:	462a      	mov	r2, r5
 8020af8:	e6ee      	b.n	80208d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020afa:	4628      	mov	r0, r5
 8020afc:	462a      	mov	r2, r5
 8020afe:	e7f7      	b.n	8020af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020b00:	1c47      	adds	r7, r0, #1
 8020b02:	f53f af69 	bmi.w	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020b06:	42ba      	cmp	r2, r7
 8020b08:	f6ff af66 	blt.w	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020b0c:	1c6f      	adds	r7, r5, #1
 8020b0e:	f53f af63 	bmi.w	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020b12:	42be      	cmp	r6, r7
 8020b14:	f6ff af60 	blt.w	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020b18:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020b1a:	9002      	str	r0, [sp, #8]
 8020b1c:	b236      	sxth	r6, r6
 8020b1e:	b212      	sxth	r2, r2
 8020b20:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020b24:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020b28:	9200      	str	r2, [sp, #0]
 8020b2a:	9601      	str	r6, [sp, #4]
 8020b2c:	4623      	mov	r3, r4
 8020b2e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8020b32:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020b34:	f7ff fd59 	bl	80205ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020b38:	e74e      	b.n	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020b3a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020b3c:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020b3e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020b40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020b42:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020b46:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020b48:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020b4c:	142d      	asrs	r5, r5, #16
 8020b4e:	1400      	asrs	r0, r0, #16
 8020b50:	fb02 5000 	mla	r0, r2, r0, r5
 8020b54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020b56:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020b5a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020b5e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8020b62:	182e      	adds	r6, r5, r0
 8020b64:	eb04 0509 	add.w	r5, r4, r9
 8020b68:	2b00      	cmp	r3, #0
 8020b6a:	f000 8096 	beq.w	8020c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020b6e:	7877      	ldrb	r7, [r6, #1]
 8020b70:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020b74:	4427      	add	r7, r4
 8020b76:	2900      	cmp	r1, #0
 8020b78:	f000 8097 	beq.w	8020caa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020b7c:	18b0      	adds	r0, r6, r2
 8020b7e:	5cb2      	ldrb	r2, [r6, r2]
 8020b80:	7840      	ldrb	r0, [r0, #1]
 8020b82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020b8a:	4422      	add	r2, r4
 8020b8c:	4420      	add	r0, r4
 8020b8e:	b29b      	uxth	r3, r3
 8020b90:	b289      	uxth	r1, r1
 8020b92:	fb03 f801 	mul.w	r8, r3, r1
 8020b96:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020b98:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020b9c:	f8b6 c000 	ldrh.w	ip, [r6]
 8020ba0:	78be      	ldrb	r6, [r7, #2]
 8020ba2:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020ba6:	011b      	lsls	r3, r3, #4
 8020ba8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020bac:	b289      	uxth	r1, r1
 8020bae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020bb2:	eba3 0308 	sub.w	r3, r3, r8
 8020bb6:	b29b      	uxth	r3, r3
 8020bb8:	ebae 0e01 	sub.w	lr, lr, r1
 8020bbc:	fa1f fe8e 	uxth.w	lr, lr
 8020bc0:	435e      	muls	r6, r3
 8020bc2:	fb0e 660b 	mla	r6, lr, fp, r6
 8020bc6:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020bca:	9310      	str	r3, [sp, #64]	; 0x40
 8020bcc:	fb01 660b 	mla	r6, r1, fp, r6
 8020bd0:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020bd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020bd6:	fb08 660b 	mla	r6, r8, fp, r6
 8020bda:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020bde:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020be2:	fb1b fb03 	smulbb	fp, fp, r3
 8020be6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020bea:	fb06 b60a 	mla	r6, r6, sl, fp
 8020bee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020bf0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020bf4:	787d      	ldrb	r5, [r7, #1]
 8020bf6:	783f      	ldrb	r7, [r7, #0]
 8020bf8:	435d      	muls	r5, r3
 8020bfa:	fb0e 550b 	mla	r5, lr, fp, r5
 8020bfe:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020c02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c04:	fb01 550b 	mla	r5, r1, fp, r5
 8020c08:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020c0c:	fb08 550b 	mla	r5, r8, fp, r5
 8020c10:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020c14:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020c18:	fb1b fb03 	smulbb	fp, fp, r3
 8020c1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020c1e:	437b      	muls	r3, r7
 8020c20:	7817      	ldrb	r7, [r2, #0]
 8020c22:	fb0e 3309 	mla	r3, lr, r9, r3
 8020c26:	fb01 3307 	mla	r3, r1, r7, r3
 8020c2a:	7807      	ldrb	r7, [r0, #0]
 8020c2c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020c30:	fb08 3707 	mla	r7, r8, r7, r3
 8020c34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c36:	fa5f fc8c 	uxtb.w	ip, ip
 8020c3a:	fb1c fc03 	smulbb	ip, ip, r3
 8020c3e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020c42:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020c46:	fb05 b50a 	mla	r5, r5, sl, fp
 8020c4a:	fb07 c70a 	mla	r7, r7, sl, ip
 8020c4e:	b2b6      	uxth	r6, r6
 8020c50:	b2ad      	uxth	r5, r5
 8020c52:	b2bf      	uxth	r7, r7
 8020c54:	1c73      	adds	r3, r6, #1
 8020c56:	1c7a      	adds	r2, r7, #1
 8020c58:	f105 0b01 	add.w	fp, r5, #1
 8020c5c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020c60:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020c64:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020c68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c6c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020c70:	096d      	lsrs	r5, r5, #5
 8020c72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c74:	4316      	orrs	r6, r2
 8020c76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c7a:	432e      	orrs	r6, r5
 8020c7c:	f823 6b02 	strh.w	r6, [r3], #2
 8020c80:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020c82:	930c      	str	r3, [sp, #48]	; 0x30
 8020c84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c86:	4413      	add	r3, r2
 8020c88:	931f      	str	r3, [sp, #124]	; 0x7c
 8020c8a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020c8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c8e:	4413      	add	r3, r2
 8020c90:	9320      	str	r3, [sp, #128]	; 0x80
 8020c92:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c94:	3b01      	subs	r3, #1
 8020c96:	9311      	str	r3, [sp, #68]	; 0x44
 8020c98:	e6db      	b.n	8020a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020c9a:	b149      	cbz	r1, 8020cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020c9c:	5cb2      	ldrb	r2, [r6, r2]
 8020c9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ca2:	4422      	add	r2, r4
 8020ca4:	4628      	mov	r0, r5
 8020ca6:	462f      	mov	r7, r5
 8020ca8:	e771      	b.n	8020b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020caa:	4628      	mov	r0, r5
 8020cac:	462a      	mov	r2, r5
 8020cae:	e76e      	b.n	8020b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020cb0:	4628      	mov	r0, r5
 8020cb2:	462a      	mov	r2, r5
 8020cb4:	e7f7      	b.n	8020ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020cb6:	b015      	add	sp, #84	; 0x54
 8020cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020cbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cc0:	880f      	ldrh	r7, [r1, #0]
 8020cc2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020cc6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020cca:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8020cce:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020cd2:	023c      	lsls	r4, r7, #8
 8020cd4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020cd8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020cdc:	017c      	lsls	r4, r7, #5
 8020cde:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8020ce2:	00ff      	lsls	r7, r7, #3
 8020ce4:	ea4b 0404 	orr.w	r4, fp, r4
 8020ce8:	b2ff      	uxtb	r7, r7
 8020cea:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020cee:	4327      	orrs	r7, r4
 8020cf0:	2d00      	cmp	r5, #0
 8020cf2:	eb02 080a 	add.w	r8, r2, sl
 8020cf6:	9701      	str	r7, [sp, #4]
 8020cf8:	db7e      	blt.n	8020df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020cfa:	45a9      	cmp	r9, r5
 8020cfc:	dd7c      	ble.n	8020df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020cfe:	f1bc 0f00 	cmp.w	ip, #0
 8020d02:	db77      	blt.n	8020df4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020d04:	45e6      	cmp	lr, ip
 8020d06:	dd75      	ble.n	8020df4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020d08:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020d0c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020d10:	441f      	add	r7, r3
 8020d12:	f11c 0201 	adds.w	r2, ip, #1
 8020d16:	d472      	bmi.n	8020dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020d18:	4596      	cmp	lr, r2
 8020d1a:	dd70      	ble.n	8020dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020d1c:	2800      	cmp	r0, #0
 8020d1e:	d06e      	beq.n	8020dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020d20:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020d24:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020d28:	441c      	add	r4, r3
 8020d2a:	3501      	adds	r5, #1
 8020d2c:	d46b      	bmi.n	8020e06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020d2e:	45a9      	cmp	r9, r5
 8020d30:	dd69      	ble.n	8020e06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020d32:	2e00      	cmp	r6, #0
 8020d34:	d067      	beq.n	8020e06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020d36:	f1bc 0f00 	cmp.w	ip, #0
 8020d3a:	db62      	blt.n	8020e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020d3c:	45e6      	cmp	lr, ip
 8020d3e:	dd60      	ble.n	8020e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020d40:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020d44:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020d48:	441d      	add	r5, r3
 8020d4a:	f11c 0201 	adds.w	r2, ip, #1
 8020d4e:	d45d      	bmi.n	8020e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020d50:	4596      	cmp	lr, r2
 8020d52:	dd5b      	ble.n	8020e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020d54:	2800      	cmp	r0, #0
 8020d56:	d059      	beq.n	8020e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020d58:	44c6      	add	lr, r8
 8020d5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020d5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d62:	4413      	add	r3, r2
 8020d64:	b280      	uxth	r0, r0
 8020d66:	b2b2      	uxth	r2, r6
 8020d68:	fb00 f602 	mul.w	r6, r0, r2
 8020d6c:	0100      	lsls	r0, r0, #4
 8020d6e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020d72:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020d76:	1b80      	subs	r0, r0, r6
 8020d78:	fa1f fc82 	uxth.w	ip, r2
 8020d7c:	b282      	uxth	r2, r0
 8020d7e:	78a0      	ldrb	r0, [r4, #2]
 8020d80:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020d84:	f897 9000 	ldrb.w	r9, [r7]
 8020d88:	787f      	ldrb	r7, [r7, #1]
 8020d8a:	eba8 080c 	sub.w	r8, r8, ip
 8020d8e:	fa1f f888 	uxth.w	r8, r8
 8020d92:	4350      	muls	r0, r2
 8020d94:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020d98:	78a8      	ldrb	r0, [r5, #2]
 8020d9a:	fb0c e000 	mla	r0, ip, r0, lr
 8020d9e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020da2:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020da6:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020daa:	f894 e000 	ldrb.w	lr, [r4]
 8020dae:	fb02 fe0e 	mul.w	lr, r2, lr
 8020db2:	fb08 e909 	mla	r9, r8, r9, lr
 8020db6:	f895 e000 	ldrb.w	lr, [r5]
 8020dba:	fb0c 990e 	mla	r9, ip, lr, r9
 8020dbe:	f893 e000 	ldrb.w	lr, [r3]
 8020dc2:	785b      	ldrb	r3, [r3, #1]
 8020dc4:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020dc8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020dcc:	ea4e 0e00 	orr.w	lr, lr, r0
 8020dd0:	7860      	ldrb	r0, [r4, #1]
 8020dd2:	4350      	muls	r0, r2
 8020dd4:	786a      	ldrb	r2, [r5, #1]
 8020dd6:	fb08 0007 	mla	r0, r8, r7, r0
 8020dda:	fb0c 0202 	mla	r2, ip, r2, r0
 8020dde:	fb06 2303 	mla	r3, r6, r3, r2
 8020de2:	095b      	lsrs	r3, r3, #5
 8020de4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020de8:	ea4e 0303 	orr.w	r3, lr, r3
 8020dec:	800b      	strh	r3, [r1, #0]
 8020dee:	b003      	add	sp, #12
 8020df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020df4:	af01      	add	r7, sp, #4
 8020df6:	e78c      	b.n	8020d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020df8:	ac01      	add	r4, sp, #4
 8020dfa:	4627      	mov	r7, r4
 8020dfc:	e795      	b.n	8020d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020dfe:	ac01      	add	r4, sp, #4
 8020e00:	e793      	b.n	8020d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020e02:	ad01      	add	r5, sp, #4
 8020e04:	e7a1      	b.n	8020d4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020e06:	ab01      	add	r3, sp, #4
 8020e08:	461d      	mov	r5, r3
 8020e0a:	e7ab      	b.n	8020d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020e0c:	ab01      	add	r3, sp, #4
 8020e0e:	e7a9      	b.n	8020d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e14:	b08f      	sub	sp, #60	; 0x3c
 8020e16:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020e1a:	920c      	str	r2, [sp, #48]	; 0x30
 8020e1c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020e1e:	910a      	str	r1, [sp, #40]	; 0x28
 8020e20:	9306      	str	r3, [sp, #24]
 8020e22:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020e26:	900d      	str	r0, [sp, #52]	; 0x34
 8020e28:	6850      	ldr	r0, [r2, #4]
 8020e2a:	6812      	ldr	r2, [r2, #0]
 8020e2c:	fb00 1303 	mla	r3, r0, r3, r1
 8020e30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020e34:	9307      	str	r3, [sp, #28]
 8020e36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e38:	681b      	ldr	r3, [r3, #0]
 8020e3a:	9308      	str	r3, [sp, #32]
 8020e3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e3e:	685c      	ldr	r4, [r3, #4]
 8020e40:	3404      	adds	r4, #4
 8020e42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e44:	2b00      	cmp	r3, #0
 8020e46:	dc03      	bgt.n	8020e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020e48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020e4a:	2b00      	cmp	r3, #0
 8020e4c:	f340 81d6 	ble.w	80211fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020e50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020e5a:	1e48      	subs	r0, r1, #1
 8020e5c:	1e56      	subs	r6, r2, #1
 8020e5e:	9b06      	ldr	r3, [sp, #24]
 8020e60:	2b00      	cmp	r3, #0
 8020e62:	f340 80b7 	ble.w	8020fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020e66:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020e6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020e6e:	d406      	bmi.n	8020e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e70:	4287      	cmp	r7, r0
 8020e72:	da04      	bge.n	8020e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e74:	2b00      	cmp	r3, #0
 8020e76:	db02      	blt.n	8020e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e78:	42b3      	cmp	r3, r6
 8020e7a:	f2c0 80ac 	blt.w	8020fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020e7e:	3701      	adds	r7, #1
 8020e80:	f100 809d 	bmi.w	8020fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e84:	42b9      	cmp	r1, r7
 8020e86:	f2c0 809a 	blt.w	8020fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e8a:	3301      	adds	r3, #1
 8020e8c:	f100 8097 	bmi.w	8020fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e90:	429a      	cmp	r2, r3
 8020e92:	f2c0 8094 	blt.w	8020fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e96:	9b06      	ldr	r3, [sp, #24]
 8020e98:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e9a:	9b07      	ldr	r3, [sp, #28]
 8020e9c:	9309      	str	r3, [sp, #36]	; 0x24
 8020e9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ea0:	2b00      	cmp	r3, #0
 8020ea2:	f340 80b5 	ble.w	8021010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020ea6:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020ea8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020eaa:	68c7      	ldr	r7, [r0, #12]
 8020eac:	6892      	ldr	r2, [r2, #8]
 8020eae:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020eb2:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020eb6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020eba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020ebe:	f100 80fb 	bmi.w	80210b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ec2:	f102 3cff 	add.w	ip, r2, #4294967295
 8020ec6:	4560      	cmp	r0, ip
 8020ec8:	f280 80f6 	bge.w	80210b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ecc:	2e00      	cmp	r6, #0
 8020ece:	f2c0 80f3 	blt.w	80210b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ed2:	f107 3cff 	add.w	ip, r7, #4294967295
 8020ed6:	4566      	cmp	r6, ip
 8020ed8:	f280 80ee 	bge.w	80210b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020edc:	b212      	sxth	r2, r2
 8020ede:	fb06 0002 	mla	r0, r6, r2, r0
 8020ee2:	9e08      	ldr	r6, [sp, #32]
 8020ee4:	1837      	adds	r7, r6, r0
 8020ee6:	5c30      	ldrb	r0, [r6, r0]
 8020ee8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020eec:	eb04 0c08 	add.w	ip, r4, r8
 8020ef0:	2b00      	cmp	r3, #0
 8020ef2:	f000 80d3 	beq.w	802109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020ef6:	787e      	ldrb	r6, [r7, #1]
 8020ef8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020efc:	4426      	add	r6, r4
 8020efe:	2900      	cmp	r1, #0
 8020f00:	f000 80d4 	beq.w	80210ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020f04:	18b8      	adds	r0, r7, r2
 8020f06:	5cba      	ldrb	r2, [r7, r2]
 8020f08:	7840      	ldrb	r0, [r0, #1]
 8020f0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f12:	4422      	add	r2, r4
 8020f14:	4420      	add	r0, r4
 8020f16:	b29b      	uxth	r3, r3
 8020f18:	b289      	uxth	r1, r1
 8020f1a:	fb03 f901 	mul.w	r9, r3, r1
 8020f1e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020f22:	011b      	lsls	r3, r3, #4
 8020f24:	b289      	uxth	r1, r1
 8020f26:	78b7      	ldrb	r7, [r6, #2]
 8020f28:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020f2c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020f30:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020f34:	eba3 0309 	sub.w	r3, r3, r9
 8020f38:	b29b      	uxth	r3, r3
 8020f3a:	ebae 0e01 	sub.w	lr, lr, r1
 8020f3e:	fa1f fe8e 	uxth.w	lr, lr
 8020f42:	435f      	muls	r7, r3
 8020f44:	fb0e 770a 	mla	r7, lr, sl, r7
 8020f48:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020f4c:	fb01 770a 	mla	r7, r1, sl, r7
 8020f50:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020f54:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020f58:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020f5c:	f896 8000 	ldrb.w	r8, [r6]
 8020f60:	7876      	ldrb	r6, [r6, #1]
 8020f62:	fb03 f808 	mul.w	r8, r3, r8
 8020f66:	fb0e 8807 	mla	r8, lr, r7, r8
 8020f6a:	7817      	ldrb	r7, [r2, #0]
 8020f6c:	fb01 8807 	mla	r8, r1, r7, r8
 8020f70:	7807      	ldrb	r7, [r0, #0]
 8020f72:	fb09 8707 	mla	r7, r9, r7, r8
 8020f76:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020f7a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f7e:	ea47 070a 	orr.w	r7, r7, sl
 8020f82:	4373      	muls	r3, r6
 8020f84:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020f88:	fb0e 330c 	mla	r3, lr, ip, r3
 8020f8c:	fb01 310a 	mla	r1, r1, sl, r3
 8020f90:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020f94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f96:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020f9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020f9e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020fa2:	ea47 070a 	orr.w	r7, r7, sl
 8020fa6:	801f      	strh	r7, [r3, #0]
 8020fa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020faa:	3302      	adds	r3, #2
 8020fac:	9309      	str	r3, [sp, #36]	; 0x24
 8020fae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020fb0:	449b      	add	fp, r3
 8020fb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020fb4:	441d      	add	r5, r3
 8020fb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020fb8:	3b01      	subs	r3, #1
 8020fba:	930b      	str	r3, [sp, #44]	; 0x2c
 8020fbc:	e76f      	b.n	8020e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020fbe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020fc0:	449b      	add	fp, r3
 8020fc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020fc4:	441d      	add	r5, r3
 8020fc6:	9b06      	ldr	r3, [sp, #24]
 8020fc8:	3b01      	subs	r3, #1
 8020fca:	9306      	str	r3, [sp, #24]
 8020fcc:	9b07      	ldr	r3, [sp, #28]
 8020fce:	3302      	adds	r3, #2
 8020fd0:	9307      	str	r3, [sp, #28]
 8020fd2:	e744      	b.n	8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020fd4:	d023      	beq.n	802101e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020fd6:	9b06      	ldr	r3, [sp, #24]
 8020fd8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020fda:	3b01      	subs	r3, #1
 8020fdc:	fb00 b003 	mla	r0, r0, r3, fp
 8020fe0:	1400      	asrs	r0, r0, #16
 8020fe2:	f53f af58 	bmi.w	8020e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020fe6:	3901      	subs	r1, #1
 8020fe8:	4288      	cmp	r0, r1
 8020fea:	f6bf af54 	bge.w	8020e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020fee:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020ff0:	fb01 5303 	mla	r3, r1, r3, r5
 8020ff4:	141b      	asrs	r3, r3, #16
 8020ff6:	f53f af4e 	bmi.w	8020e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020ffa:	3a01      	subs	r2, #1
 8020ffc:	4293      	cmp	r3, r2
 8020ffe:	f6bf af4a 	bge.w	8020e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021002:	9b06      	ldr	r3, [sp, #24]
 8021004:	9309      	str	r3, [sp, #36]	; 0x24
 8021006:	9b07      	ldr	r3, [sp, #28]
 8021008:	930b      	str	r3, [sp, #44]	; 0x2c
 802100a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802100c:	2b00      	cmp	r3, #0
 802100e:	dc70      	bgt.n	80210f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021010:	9b06      	ldr	r3, [sp, #24]
 8021012:	9a07      	ldr	r2, [sp, #28]
 8021014:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021018:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802101c:	9307      	str	r3, [sp, #28]
 802101e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021020:	2b00      	cmp	r3, #0
 8021022:	f340 80eb 	ble.w	80211fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021026:	ee30 0a04 	vadd.f32	s0, s0, s8
 802102a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802102e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021032:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021034:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021038:	ee31 1a05 	vadd.f32	s2, s2, s10
 802103c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021040:	eef0 6a62 	vmov.f32	s13, s5
 8021044:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021048:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802104c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021050:	ee16 ba90 	vmov	fp, s13
 8021054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021058:	eef0 6a43 	vmov.f32	s13, s6
 802105c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021060:	ee12 2a90 	vmov	r2, s5
 8021064:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021068:	fb92 f3f3 	sdiv	r3, r2, r3
 802106c:	ee13 2a10 	vmov	r2, s6
 8021070:	931b      	str	r3, [sp, #108]	; 0x6c
 8021072:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021074:	fb92 f3f3 	sdiv	r3, r2, r3
 8021078:	931c      	str	r3, [sp, #112]	; 0x70
 802107a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802107c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802107e:	3b01      	subs	r3, #1
 8021080:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021084:	930a      	str	r3, [sp, #40]	; 0x28
 8021086:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021088:	bf08      	it	eq
 802108a:	4613      	moveq	r3, r2
 802108c:	ee16 5a90 	vmov	r5, s13
 8021090:	9306      	str	r3, [sp, #24]
 8021092:	eeb0 3a67 	vmov.f32	s6, s15
 8021096:	eef0 2a47 	vmov.f32	s5, s14
 802109a:	e6d2      	b.n	8020e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802109c:	b149      	cbz	r1, 80210b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802109e:	5cba      	ldrb	r2, [r7, r2]
 80210a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80210a4:	4422      	add	r2, r4
 80210a6:	4660      	mov	r0, ip
 80210a8:	4666      	mov	r6, ip
 80210aa:	e734      	b.n	8020f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80210ac:	4660      	mov	r0, ip
 80210ae:	4662      	mov	r2, ip
 80210b0:	e731      	b.n	8020f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80210b2:	4660      	mov	r0, ip
 80210b4:	4662      	mov	r2, ip
 80210b6:	e7f7      	b.n	80210a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80210b8:	f110 0c01 	adds.w	ip, r0, #1
 80210bc:	f53f af74 	bmi.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80210c0:	4562      	cmp	r2, ip
 80210c2:	f6ff af71 	blt.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80210c6:	f116 0c01 	adds.w	ip, r6, #1
 80210ca:	f53f af6d 	bmi.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80210ce:	4567      	cmp	r7, ip
 80210d0:	f6ff af6a 	blt.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80210d4:	b23f      	sxth	r7, r7
 80210d6:	b212      	sxth	r2, r2
 80210d8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80210dc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80210e0:	9200      	str	r2, [sp, #0]
 80210e2:	9701      	str	r7, [sp, #4]
 80210e4:	4623      	mov	r3, r4
 80210e6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80210ea:	980d      	ldr	r0, [sp, #52]	; 0x34
 80210ec:	f7ff fde6 	bl	8020cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80210f0:	e75a      	b.n	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80210f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80210f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80210f8:	ea4f 462b 	mov.w	r6, fp, asr #16
 80210fc:	1428      	asrs	r0, r5, #16
 80210fe:	fb02 6000 	mla	r0, r2, r0, r6
 8021102:	9e08      	ldr	r6, [sp, #32]
 8021104:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021108:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802110c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021110:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021114:	1837      	adds	r7, r6, r0
 8021116:	eb04 0c08 	add.w	ip, r4, r8
 802111a:	2b00      	cmp	r3, #0
 802111c:	d060      	beq.n	80211e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 802111e:	787e      	ldrb	r6, [r7, #1]
 8021120:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021124:	4426      	add	r6, r4
 8021126:	2900      	cmp	r1, #0
 8021128:	d062      	beq.n	80211f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 802112a:	18b8      	adds	r0, r7, r2
 802112c:	5cba      	ldrb	r2, [r7, r2]
 802112e:	7840      	ldrb	r0, [r0, #1]
 8021130:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021134:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021138:	4422      	add	r2, r4
 802113a:	4420      	add	r0, r4
 802113c:	b29b      	uxth	r3, r3
 802113e:	b289      	uxth	r1, r1
 8021140:	fb03 f901 	mul.w	r9, r3, r1
 8021144:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021148:	011b      	lsls	r3, r3, #4
 802114a:	b289      	uxth	r1, r1
 802114c:	78b7      	ldrb	r7, [r6, #2]
 802114e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021152:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021156:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802115a:	eba3 0309 	sub.w	r3, r3, r9
 802115e:	b29b      	uxth	r3, r3
 8021160:	ebae 0e01 	sub.w	lr, lr, r1
 8021164:	fa1f fe8e 	uxth.w	lr, lr
 8021168:	435f      	muls	r7, r3
 802116a:	fb0e 770a 	mla	r7, lr, sl, r7
 802116e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021172:	fb01 770a 	mla	r7, r1, sl, r7
 8021176:	f890 a002 	ldrb.w	sl, [r0, #2]
 802117a:	fb09 7a0a 	mla	sl, r9, sl, r7
 802117e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021182:	f896 8000 	ldrb.w	r8, [r6]
 8021186:	7876      	ldrb	r6, [r6, #1]
 8021188:	fb03 f808 	mul.w	r8, r3, r8
 802118c:	fb0e 8807 	mla	r8, lr, r7, r8
 8021190:	7817      	ldrb	r7, [r2, #0]
 8021192:	fb01 8807 	mla	r8, r1, r7, r8
 8021196:	7807      	ldrb	r7, [r0, #0]
 8021198:	fb09 8707 	mla	r7, r9, r7, r8
 802119c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80211a0:	4373      	muls	r3, r6
 80211a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80211a6:	7856      	ldrb	r6, [r2, #1]
 80211a8:	ea47 070a 	orr.w	r7, r7, sl
 80211ac:	fb0e 330c 	mla	r3, lr, ip, r3
 80211b0:	f890 a001 	ldrb.w	sl, [r0, #1]
 80211b4:	fb01 3306 	mla	r3, r1, r6, r3
 80211b8:	fb09 3a0a 	mla	sl, r9, sl, r3
 80211bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80211c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80211c6:	ea47 070a 	orr.w	r7, r7, sl
 80211ca:	f823 7b02 	strh.w	r7, [r3], #2
 80211ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80211d0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80211d2:	449b      	add	fp, r3
 80211d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211d6:	441d      	add	r5, r3
 80211d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211da:	3b01      	subs	r3, #1
 80211dc:	9309      	str	r3, [sp, #36]	; 0x24
 80211de:	e714      	b.n	802100a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80211e0:	b149      	cbz	r1, 80211f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80211e2:	5cba      	ldrb	r2, [r7, r2]
 80211e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80211e8:	4422      	add	r2, r4
 80211ea:	4660      	mov	r0, ip
 80211ec:	4666      	mov	r6, ip
 80211ee:	e7a5      	b.n	802113c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80211f0:	4660      	mov	r0, ip
 80211f2:	4662      	mov	r2, ip
 80211f4:	e7a2      	b.n	802113c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80211f6:	4660      	mov	r0, ip
 80211f8:	4662      	mov	r2, ip
 80211fa:	e7f7      	b.n	80211ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80211fc:	b00f      	add	sp, #60	; 0x3c
 80211fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021202 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021202:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021206:	b085      	sub	sp, #20
 8021208:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 802120c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021210:	9102      	str	r1, [sp, #8]
 8021212:	2c00      	cmp	r4, #0
 8021214:	fb04 710c 	mla	r1, r4, ip, r7
 8021218:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802121c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021220:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021224:	eb02 0e01 	add.w	lr, r2, r1
 8021228:	f2c0 8122 	blt.w	8021470 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802122c:	45a0      	cmp	r8, r4
 802122e:	f340 811f 	ble.w	8021470 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021232:	2f00      	cmp	r7, #0
 8021234:	f2c0 811a 	blt.w	802146c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021238:	45bc      	cmp	ip, r7
 802123a:	f340 8117 	ble.w	802146c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802123e:	5c52      	ldrb	r2, [r2, r1]
 8021240:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021244:	1c7a      	adds	r2, r7, #1
 8021246:	f100 8116 	bmi.w	8021476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802124a:	4594      	cmp	ip, r2
 802124c:	f340 8113 	ble.w	8021476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021250:	2e00      	cmp	r6, #0
 8021252:	f000 8112 	beq.w	802147a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021256:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802125a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802125e:	3401      	adds	r4, #1
 8021260:	f100 810f 	bmi.w	8021482 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021264:	45a0      	cmp	r8, r4
 8021266:	f340 810c 	ble.w	8021482 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802126a:	2800      	cmp	r0, #0
 802126c:	f000 810c 	beq.w	8021488 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021270:	2f00      	cmp	r7, #0
 8021272:	f2c0 8104 	blt.w	802147e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021276:	45bc      	cmp	ip, r7
 8021278:	f340 8101 	ble.w	802147e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802127c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021280:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021284:	3701      	adds	r7, #1
 8021286:	f100 8102 	bmi.w	802148e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802128a:	45bc      	cmp	ip, r7
 802128c:	f340 80ff 	ble.w	802148e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021290:	2e00      	cmp	r6, #0
 8021292:	f000 80fe 	beq.w	8021492 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021296:	44f4      	add	ip, lr
 8021298:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802129c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80212a0:	b2b6      	uxth	r6, r6
 80212a2:	b280      	uxth	r0, r0
 80212a4:	fb00 fe06 	mul.w	lr, r0, r6
 80212a8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80212ac:	0136      	lsls	r6, r6, #4
 80212ae:	eba6 070e 	sub.w	r7, r6, lr
 80212b2:	b280      	uxth	r0, r0
 80212b4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80212b8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80212bc:	b2bf      	uxth	r7, r7
 80212be:	1a1b      	subs	r3, r3, r0
 80212c0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80212c4:	b29b      	uxth	r3, r3
 80212c6:	fb0a f607 	mul.w	r6, sl, r7
 80212ca:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80212ce:	fb0b 6603 	mla	r6, fp, r3, r6
 80212d2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80212d6:	fb00 6609 	mla	r6, r0, r9, r6
 80212da:	fb0e 6608 	mla	r6, lr, r8, r6
 80212de:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80212e2:	9600      	str	r6, [sp, #0]
 80212e4:	2e00      	cmp	r6, #0
 80212e6:	f000 80be 	beq.w	8021466 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80212ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80212ee:	fb0b fc0c 	mul.w	ip, fp, ip
 80212f2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80212f6:	fb0b f505 	mul.w	r5, fp, r5
 80212fa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80212fe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021302:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021306:	44dc      	add	ip, fp
 8021308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802130c:	9501      	str	r5, [sp, #4]
 802130e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021312:	9503      	str	r5, [sp, #12]
 8021314:	9d01      	ldr	r5, [sp, #4]
 8021316:	9e02      	ldr	r6, [sp, #8]
 8021318:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802131c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021320:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021324:	fb0a fc0c 	mul.w	ip, sl, ip
 8021328:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802132c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021330:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021334:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021338:	4465      	add	r5, ip
 802133a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802133e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021342:	fb09 fc0c 	mul.w	ip, r9, ip
 8021346:	fb09 f904 	mul.w	r9, r9, r4
 802134a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802134e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021352:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021356:	fb08 f404 	mul.w	r4, r8, r4
 802135a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802135e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021362:	fb08 f802 	mul.w	r8, r8, r2
 8021366:	fb0a fa01 	mul.w	sl, sl, r1
 802136a:	0a22      	lsrs	r2, r4, #8
 802136c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021370:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021374:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021378:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802137c:	4414      	add	r4, r2
 802137e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021382:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021386:	0a2d      	lsrs	r5, r5, #8
 8021388:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802138c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021390:	9a03      	ldr	r2, [sp, #12]
 8021392:	8836      	ldrh	r6, [r6, #0]
 8021394:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021398:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802139c:	437d      	muls	r5, r7
 802139e:	4461      	add	r1, ip
 80213a0:	0a24      	lsrs	r4, r4, #8
 80213a2:	fb02 5503 	mla	r5, r2, r3, r5
 80213a6:	0a09      	lsrs	r1, r1, #8
 80213a8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80213ac:	fb04 540e 	mla	r4, r4, lr, r5
 80213b0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80213b4:	fb01 4100 	mla	r1, r1, r0, r4
 80213b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80213bc:	0a09      	lsrs	r1, r1, #8
 80213be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80213c2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80213c6:	fb07 f70a 	mul.w	r7, r7, sl
 80213ca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80213ce:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80213d2:	fb03 7101 	mla	r1, r3, r1, r7
 80213d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80213da:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80213de:	fb0e 1e08 	mla	lr, lr, r8, r1
 80213e2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80213e6:	fb00 e101 	mla	r1, r0, r1, lr
 80213ea:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80213ee:	9a00      	ldr	r2, [sp, #0]
 80213f0:	b287      	uxth	r7, r0
 80213f2:	437a      	muls	r2, r7
 80213f4:	0a09      	lsrs	r1, r1, #8
 80213f6:	1c53      	adds	r3, r2, #1
 80213f8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80213fc:	4321      	orrs	r1, r4
 80213fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021402:	1235      	asrs	r5, r6, #8
 8021404:	0c0a      	lsrs	r2, r1, #16
 8021406:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802140a:	b2db      	uxtb	r3, r3
 802140c:	fb12 f207 	smulbb	r2, r2, r7
 8021410:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021414:	fb05 2503 	mla	r5, r5, r3, r2
 8021418:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802141c:	10f2      	asrs	r2, r6, #3
 802141e:	b2c8      	uxtb	r0, r1
 8021420:	00f6      	lsls	r6, r6, #3
 8021422:	fb14 f407 	smulbb	r4, r4, r7
 8021426:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802142a:	b2f6      	uxtb	r6, r6
 802142c:	fb10 f007 	smulbb	r0, r0, r7
 8021430:	fb02 4203 	mla	r2, r2, r3, r4
 8021434:	b2ad      	uxth	r5, r5
 8021436:	fb06 0303 	mla	r3, r6, r3, r0
 802143a:	b299      	uxth	r1, r3
 802143c:	b294      	uxth	r4, r2
 802143e:	1c6b      	adds	r3, r5, #1
 8021440:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021444:	1c62      	adds	r2, r4, #1
 8021446:	1c4b      	adds	r3, r1, #1
 8021448:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802144c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021450:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021454:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021458:	0952      	lsrs	r2, r2, #5
 802145a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802145e:	432b      	orrs	r3, r5
 8021460:	4313      	orrs	r3, r2
 8021462:	9a02      	ldr	r2, [sp, #8]
 8021464:	8013      	strh	r3, [r2, #0]
 8021466:	b005      	add	sp, #20
 8021468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802146c:	2500      	movs	r5, #0
 802146e:	e6e9      	b.n	8021244 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021470:	2100      	movs	r1, #0
 8021472:	460d      	mov	r5, r1
 8021474:	e6f3      	b.n	802125e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021476:	2100      	movs	r1, #0
 8021478:	e6f1      	b.n	802125e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802147a:	4631      	mov	r1, r6
 802147c:	e6ef      	b.n	802125e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802147e:	2400      	movs	r4, #0
 8021480:	e700      	b.n	8021284 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021482:	2200      	movs	r2, #0
 8021484:	4614      	mov	r4, r2
 8021486:	e70b      	b.n	80212a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021488:	4602      	mov	r2, r0
 802148a:	4604      	mov	r4, r0
 802148c:	e708      	b.n	80212a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802148e:	2200      	movs	r2, #0
 8021490:	e706      	b.n	80212a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021492:	4632      	mov	r2, r6
 8021494:	e704      	b.n	80212a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021496:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802149a:	b09f      	sub	sp, #124	; 0x7c
 802149c:	921b      	str	r2, [sp, #108]	; 0x6c
 802149e:	9309      	str	r3, [sp, #36]	; 0x24
 80214a0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80214a2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80214a6:	931c      	str	r3, [sp, #112]	; 0x70
 80214a8:	9119      	str	r1, [sp, #100]	; 0x64
 80214aa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80214ae:	901d      	str	r0, [sp, #116]	; 0x74
 80214b0:	6850      	ldr	r0, [r2, #4]
 80214b2:	6812      	ldr	r2, [r2, #0]
 80214b4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80214b6:	fb00 1303 	mla	r3, r0, r3, r1
 80214ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214be:	930c      	str	r3, [sp, #48]	; 0x30
 80214c0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214c2:	681b      	ldr	r3, [r3, #0]
 80214c4:	9312      	str	r3, [sp, #72]	; 0x48
 80214c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214c8:	685e      	ldr	r6, [r3, #4]
 80214ca:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80214ce:	930d      	str	r3, [sp, #52]	; 0x34
 80214d0:	3604      	adds	r6, #4
 80214d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80214d4:	2b00      	cmp	r3, #0
 80214d6:	dc03      	bgt.n	80214e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80214d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80214da:	2b00      	cmp	r3, #0
 80214dc:	f340 8388 	ble.w	8021bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80214e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80214ea:	1e48      	subs	r0, r1, #1
 80214ec:	1e57      	subs	r7, r2, #1
 80214ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214f0:	2b00      	cmp	r3, #0
 80214f2:	f340 8195 	ble.w	8021820 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80214f6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80214f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80214fc:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021500:	d406      	bmi.n	8021510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021502:	4584      	cmp	ip, r0
 8021504:	da04      	bge.n	8021510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021506:	2b00      	cmp	r3, #0
 8021508:	db02      	blt.n	8021510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802150a:	42bb      	cmp	r3, r7
 802150c:	f2c0 8189 	blt.w	8021822 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021510:	f11c 0c01 	adds.w	ip, ip, #1
 8021514:	f100 8177 	bmi.w	8021806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021518:	4561      	cmp	r1, ip
 802151a:	f2c0 8174 	blt.w	8021806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802151e:	3301      	adds	r3, #1
 8021520:	f100 8171 	bmi.w	8021806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021524:	429a      	cmp	r2, r3
 8021526:	f2c0 816e 	blt.w	8021806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802152a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802152c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802152e:	931a      	str	r3, [sp, #104]	; 0x68
 8021530:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021532:	2b00      	cmp	r3, #0
 8021534:	f340 8193 	ble.w	802185e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021538:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802153a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802153e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021540:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021544:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021546:	141b      	asrs	r3, r3, #16
 8021548:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802154c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021550:	f100 81d6 	bmi.w	8021900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021554:	f100 38ff 	add.w	r8, r0, #4294967295
 8021558:	4543      	cmp	r3, r8
 802155a:	f280 81d1 	bge.w	8021900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802155e:	f1bc 0f00 	cmp.w	ip, #0
 8021562:	f2c0 81cd 	blt.w	8021900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021566:	f10e 38ff 	add.w	r8, lr, #4294967295
 802156a:	45c4      	cmp	ip, r8
 802156c:	f280 81c8 	bge.w	8021900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021570:	b200      	sxth	r0, r0
 8021572:	fb0c 3300 	mla	r3, ip, r0, r3
 8021576:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021578:	eb04 0803 	add.w	r8, r4, r3
 802157c:	5ce3      	ldrb	r3, [r4, r3]
 802157e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021582:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021586:	2a00      	cmp	r2, #0
 8021588:	f000 81af 	beq.w	80218ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802158c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021590:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021594:	940e      	str	r4, [sp, #56]	; 0x38
 8021596:	0e24      	lsrs	r4, r4, #24
 8021598:	9415      	str	r4, [sp, #84]	; 0x54
 802159a:	b179      	cbz	r1, 80215bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802159c:	eb08 0c00 	add.w	ip, r8, r0
 80215a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80215a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80215a8:	900a      	str	r0, [sp, #40]	; 0x28
 80215aa:	0e00      	lsrs	r0, r0, #24
 80215ac:	9013      	str	r0, [sp, #76]	; 0x4c
 80215ae:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80215b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80215b6:	900f      	str	r0, [sp, #60]	; 0x3c
 80215b8:	0e00      	lsrs	r0, r0, #24
 80215ba:	9016      	str	r0, [sp, #88]	; 0x58
 80215bc:	b292      	uxth	r2, r2
 80215be:	b289      	uxth	r1, r1
 80215c0:	fb02 f901 	mul.w	r9, r2, r1
 80215c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80215c8:	0112      	lsls	r2, r2, #4
 80215ca:	eba2 0809 	sub.w	r8, r2, r9
 80215ce:	b289      	uxth	r1, r1
 80215d0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80215d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80215d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80215d8:	fa1f f888 	uxth.w	r8, r8
 80215dc:	1a52      	subs	r2, r2, r1
 80215de:	b292      	uxth	r2, r2
 80215e0:	fb08 f000 	mul.w	r0, r8, r0
 80215e4:	fb02 000e 	mla	r0, r2, lr, r0
 80215e8:	fb01 0004 	mla	r0, r1, r4, r0
 80215ec:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80215ee:	fb09 0004 	mla	r0, r9, r4, r0
 80215f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80215f6:	2800      	cmp	r0, #0
 80215f8:	f000 80fa 	beq.w	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80215fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021600:	d01b      	beq.n	802163a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021602:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021606:	fb0e fa0a 	mul.w	sl, lr, sl
 802160a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802160e:	fb0e fe03 	mul.w	lr, lr, r3
 8021612:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021616:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802161a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802161e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021622:	4453      	add	r3, sl
 8021624:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021628:	0a1b      	lsrs	r3, r3, #8
 802162a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802162e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021632:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021636:	ea43 030c 	orr.w	r3, r3, ip
 802163a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802163c:	2cff      	cmp	r4, #255	; 0xff
 802163e:	d021      	beq.n	8021684 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021640:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021642:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021646:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021648:	fb04 fb0b 	mul.w	fp, r4, fp
 802164c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802164e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021652:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021654:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021658:	fb04 fa0a 	mul.w	sl, r4, sl
 802165c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021660:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021664:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021668:	44de      	add	lr, fp
 802166a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802166e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021672:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021676:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802167a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802167e:	ea4e 040a 	orr.w	r4, lr, sl
 8021682:	940e      	str	r4, [sp, #56]	; 0x38
 8021684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021686:	2cff      	cmp	r4, #255	; 0xff
 8021688:	d021      	beq.n	80216ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802168a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802168c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021690:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021692:	fb04 fb0b 	mul.w	fp, r4, fp
 8021696:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021698:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802169c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802169e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80216a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80216a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80216ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80216b2:	44de      	add	lr, fp
 80216b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80216b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80216bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216c8:	ea4e 040a 	orr.w	r4, lr, sl
 80216cc:	940a      	str	r4, [sp, #40]	; 0x28
 80216ce:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80216d0:	2cff      	cmp	r4, #255	; 0xff
 80216d2:	d021      	beq.n	8021718 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80216d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80216d6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80216da:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80216dc:	fb04 fb0b 	mul.w	fp, r4, fp
 80216e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80216e2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80216e6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80216e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80216ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80216f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80216f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80216fc:	44de      	add	lr, fp
 80216fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021702:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802170a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802170e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021712:	ea4e 040a 	orr.w	r4, lr, sl
 8021716:	940f      	str	r4, [sp, #60]	; 0x3c
 8021718:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802171a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802171e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021720:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021724:	fb08 fc0c 	mul.w	ip, r8, ip
 8021728:	fb02 cc0e 	mla	ip, r2, lr, ip
 802172c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021730:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021732:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021736:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802173a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802173c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021740:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021744:	fb08 f80e 	mul.w	r8, r8, lr
 8021748:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802174c:	fb02 8303 	mla	r3, r2, r3, r8
 8021750:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021752:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021754:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802175a:	fb01 330a 	mla	r3, r1, sl, r3
 802175e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021762:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021764:	fb09 3901 	mla	r9, r9, r1, r3
 8021768:	4342      	muls	r2, r0
 802176a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802176e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021772:	883b      	ldrh	r3, [r7, #0]
 8021774:	1c50      	adds	r0, r2, #1
 8021776:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802177a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802177e:	ea4c 0c09 	orr.w	ip, ip, r9
 8021782:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021786:	1219      	asrs	r1, r3, #8
 8021788:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802178c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021790:	b2c0      	uxtb	r0, r0
 8021792:	fb12 f204 	smulbb	r2, r2, r4
 8021796:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802179a:	fb01 2100 	mla	r1, r1, r0, r2
 802179e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80217a2:	10da      	asrs	r2, r3, #3
 80217a4:	fa5f fc8c 	uxtb.w	ip, ip
 80217a8:	00db      	lsls	r3, r3, #3
 80217aa:	fb1c fc04 	smulbb	ip, ip, r4
 80217ae:	b2db      	uxtb	r3, r3
 80217b0:	b289      	uxth	r1, r1
 80217b2:	fb03 c300 	mla	r3, r3, r0, ip
 80217b6:	fa1f fc83 	uxth.w	ip, r3
 80217ba:	1c4b      	adds	r3, r1, #1
 80217bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80217c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80217c4:	fb1e fe04 	smulbb	lr, lr, r4
 80217c8:	f10c 0301 	add.w	r3, ip, #1
 80217cc:	fb02 e200 	mla	r2, r2, r0, lr
 80217d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80217d4:	b292      	uxth	r2, r2
 80217d6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80217da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80217de:	430b      	orrs	r3, r1
 80217e0:	1c51      	adds	r1, r2, #1
 80217e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80217e6:	0952      	lsrs	r2, r2, #5
 80217e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217ec:	4313      	orrs	r3, r2
 80217ee:	803b      	strh	r3, [r7, #0]
 80217f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80217f2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80217f4:	441a      	add	r2, r3
 80217f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80217f8:	9229      	str	r2, [sp, #164]	; 0xa4
 80217fa:	441d      	add	r5, r3
 80217fc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80217fe:	3b01      	subs	r3, #1
 8021800:	3702      	adds	r7, #2
 8021802:	931a      	str	r3, [sp, #104]	; 0x68
 8021804:	e694      	b.n	8021530 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021806:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021808:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802180a:	441c      	add	r4, r3
 802180c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802180e:	9429      	str	r4, [sp, #164]	; 0xa4
 8021810:	441d      	add	r5, r3
 8021812:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021814:	3b01      	subs	r3, #1
 8021816:	9309      	str	r3, [sp, #36]	; 0x24
 8021818:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802181a:	3302      	adds	r3, #2
 802181c:	930c      	str	r3, [sp, #48]	; 0x30
 802181e:	e666      	b.n	80214ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021820:	d024      	beq.n	802186c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8021822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021824:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021826:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021828:	3b01      	subs	r3, #1
 802182a:	fb00 4003 	mla	r0, r0, r3, r4
 802182e:	1400      	asrs	r0, r0, #16
 8021830:	f53f ae7b 	bmi.w	802152a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021834:	3901      	subs	r1, #1
 8021836:	4288      	cmp	r0, r1
 8021838:	f6bf ae77 	bge.w	802152a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802183c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802183e:	fb01 5303 	mla	r3, r1, r3, r5
 8021842:	141b      	asrs	r3, r3, #16
 8021844:	f53f ae71 	bmi.w	802152a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021848:	3a01      	subs	r2, #1
 802184a:	4293      	cmp	r3, r2
 802184c:	f6bf ae6d 	bge.w	802152a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021850:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021854:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021858:	f1bb 0f00 	cmp.w	fp, #0
 802185c:	dc70      	bgt.n	8021940 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802185e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021860:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021864:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021866:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802186a:	930c      	str	r3, [sp, #48]	; 0x30
 802186c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802186e:	2b00      	cmp	r3, #0
 8021870:	f340 81be 	ble.w	8021bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021874:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021878:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802187c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021880:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021882:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021886:	ee31 1a05 	vadd.f32	s2, s2, s10
 802188a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802188e:	eef0 6a62 	vmov.f32	s13, s5
 8021892:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802189a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802189e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80218a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80218a6:	eef0 6a43 	vmov.f32	s13, s6
 80218aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80218ae:	ee12 2a90 	vmov	r2, s5
 80218b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80218ba:	ee13 2a10 	vmov	r2, s6
 80218be:	932b      	str	r3, [sp, #172]	; 0xac
 80218c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80218c6:	932c      	str	r3, [sp, #176]	; 0xb0
 80218c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80218ca:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80218cc:	3b01      	subs	r3, #1
 80218ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218d2:	9319      	str	r3, [sp, #100]	; 0x64
 80218d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218d6:	bf08      	it	eq
 80218d8:	4613      	moveq	r3, r2
 80218da:	ee16 5a90 	vmov	r5, s13
 80218de:	9309      	str	r3, [sp, #36]	; 0x24
 80218e0:	eeb0 3a67 	vmov.f32	s6, s15
 80218e4:	eef0 2a47 	vmov.f32	s5, s14
 80218e8:	e5f3      	b.n	80214d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80218ea:	2900      	cmp	r1, #0
 80218ec:	f43f ae66 	beq.w	80215bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80218f0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80218f4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80218f8:	900a      	str	r0, [sp, #40]	; 0x28
 80218fa:	0e00      	lsrs	r0, r0, #24
 80218fc:	9013      	str	r0, [sp, #76]	; 0x4c
 80218fe:	e65d      	b.n	80215bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021900:	f113 0801 	adds.w	r8, r3, #1
 8021904:	f53f af74 	bmi.w	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021908:	4540      	cmp	r0, r8
 802190a:	f6ff af71 	blt.w	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802190e:	f11c 0801 	adds.w	r8, ip, #1
 8021912:	f53f af6d 	bmi.w	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021916:	45c6      	cmp	lr, r8
 8021918:	f6ff af6a 	blt.w	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802191c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802191e:	9302      	str	r3, [sp, #8]
 8021920:	b200      	sxth	r0, r0
 8021922:	fa0f f38e 	sxth.w	r3, lr
 8021926:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802192a:	e9cd c203 	strd	ip, r2, [sp, #12]
 802192e:	9301      	str	r3, [sp, #4]
 8021930:	9000      	str	r0, [sp, #0]
 8021932:	4633      	mov	r3, r6
 8021934:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021936:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021938:	4639      	mov	r1, r7
 802193a:	f7ff fc62 	bl	8021202 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802193e:	e757      	b.n	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021940:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021942:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021944:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021948:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802194a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802194e:	1427      	asrs	r7, r4, #16
 8021950:	142b      	asrs	r3, r5, #16
 8021952:	fb01 7303 	mla	r3, r1, r3, r7
 8021956:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021958:	18e7      	adds	r7, r4, r3
 802195a:	5ce3      	ldrb	r3, [r4, r3]
 802195c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021960:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021964:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021968:	2a00      	cmp	r2, #0
 802196a:	f000 8137 	beq.w	8021bdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802196e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021972:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021976:	9410      	str	r4, [sp, #64]	; 0x40
 8021978:	0e24      	lsrs	r4, r4, #24
 802197a:	9417      	str	r4, [sp, #92]	; 0x5c
 802197c:	b170      	cbz	r0, 802199c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802197e:	eb07 0e01 	add.w	lr, r7, r1
 8021982:	5c79      	ldrb	r1, [r7, r1]
 8021984:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021988:	910b      	str	r1, [sp, #44]	; 0x2c
 802198a:	0e09      	lsrs	r1, r1, #24
 802198c:	9114      	str	r1, [sp, #80]	; 0x50
 802198e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021992:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021996:	9111      	str	r1, [sp, #68]	; 0x44
 8021998:	0e09      	lsrs	r1, r1, #24
 802199a:	9118      	str	r1, [sp, #96]	; 0x60
 802199c:	b292      	uxth	r2, r2
 802199e:	b280      	uxth	r0, r0
 80219a0:	fb02 f800 	mul.w	r8, r2, r0
 80219a4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80219a8:	0112      	lsls	r2, r2, #4
 80219aa:	eba2 0e08 	sub.w	lr, r2, r8
 80219ae:	b280      	uxth	r0, r0
 80219b0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80219b4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80219b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80219b8:	fa1f fe8e 	uxth.w	lr, lr
 80219bc:	1a12      	subs	r2, r2, r0
 80219be:	b292      	uxth	r2, r2
 80219c0:	fb0e f101 	mul.w	r1, lr, r1
 80219c4:	fb02 110c 	mla	r1, r2, ip, r1
 80219c8:	fb00 1104 	mla	r1, r0, r4, r1
 80219cc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80219ce:	fb08 1104 	mla	r1, r8, r4, r1
 80219d2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80219d6:	2900      	cmp	r1, #0
 80219d8:	f000 80f5 	beq.w	8021bc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80219dc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80219e0:	d019      	beq.n	8021a16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80219e2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80219e6:	fb0c fa0a 	mul.w	sl, ip, sl
 80219ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80219ee:	fb0c fc03 	mul.w	ip, ip, r3
 80219f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80219f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80219fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80219fe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021a02:	4453      	add	r3, sl
 8021a04:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021a08:	0a1b      	lsrs	r3, r3, #8
 8021a0a:	0a3f      	lsrs	r7, r7, #8
 8021a0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021a10:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021a14:	433b      	orrs	r3, r7
 8021a16:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021a18:	2cff      	cmp	r4, #255	; 0xff
 8021a1a:	d020      	beq.n	8021a5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021a1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021a1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021a22:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021a24:	4367      	muls	r7, r4
 8021a26:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021a28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021a2c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021a2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a32:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a3e:	44bc      	add	ip, r7
 8021a40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a58:	ea4c 040a 	orr.w	r4, ip, sl
 8021a5c:	9410      	str	r4, [sp, #64]	; 0x40
 8021a5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021a60:	2cff      	cmp	r4, #255	; 0xff
 8021a62:	d020      	beq.n	8021aa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021a64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021a6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021a6c:	4367      	muls	r7, r4
 8021a6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021a74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021a76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a86:	44bc      	add	ip, r7
 8021a88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021aa0:	ea4c 040a 	orr.w	r4, ip, sl
 8021aa4:	940b      	str	r4, [sp, #44]	; 0x2c
 8021aa6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021aa8:	2cff      	cmp	r4, #255	; 0xff
 8021aaa:	d020      	beq.n	8021aee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021aac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021aae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021ab2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021ab4:	4367      	muls	r7, r4
 8021ab6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021ab8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021abc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021abe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ac2:	fb04 fa0a 	mul.w	sl, r4, sl
 8021ac6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021aca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ace:	44bc      	add	ip, r7
 8021ad0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021ad4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021ad8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021adc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ae0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ae4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ae8:	ea4c 040a 	orr.w	r4, ip, sl
 8021aec:	9411      	str	r4, [sp, #68]	; 0x44
 8021aee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021af0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021af4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021af6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021afa:	fb0e f707 	mul.w	r7, lr, r7
 8021afe:	fb02 770c 	mla	r7, r2, ip, r7
 8021b02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021b06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021b08:	fb00 770c 	mla	r7, r0, ip, r7
 8021b0c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021b10:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b12:	fb08 770c 	mla	r7, r8, ip, r7
 8021b16:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021b1a:	fb0e fe0c 	mul.w	lr, lr, ip
 8021b1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021b22:	fb02 e303 	mla	r3, r2, r3, lr
 8021b26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021b28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021b2a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021b2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8021b30:	fb00 330a 	mla	r3, r0, sl, r3
 8021b34:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021b38:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021b3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b3e:	f8b9 0000 	ldrh.w	r0, [r9]
 8021b42:	434b      	muls	r3, r1
 8021b44:	0a3f      	lsrs	r7, r7, #8
 8021b46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b4a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021b4e:	1c59      	adds	r1, r3, #1
 8021b50:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021b54:	ea47 070c 	orr.w	r7, r7, ip
 8021b58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021b5c:	1202      	asrs	r2, r0, #8
 8021b5e:	0c3b      	lsrs	r3, r7, #16
 8021b60:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021b64:	b2c9      	uxtb	r1, r1
 8021b66:	fb13 f304 	smulbb	r3, r3, r4
 8021b6a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021b6e:	fb02 3201 	mla	r2, r2, r1, r3
 8021b72:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021b76:	10c3      	asrs	r3, r0, #3
 8021b78:	b2ff      	uxtb	r7, r7
 8021b7a:	00c0      	lsls	r0, r0, #3
 8021b7c:	b292      	uxth	r2, r2
 8021b7e:	fb1c fc04 	smulbb	ip, ip, r4
 8021b82:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021b86:	b2c0      	uxtb	r0, r0
 8021b88:	fb17 f704 	smulbb	r7, r7, r4
 8021b8c:	fb03 c301 	mla	r3, r3, r1, ip
 8021b90:	fb00 7001 	mla	r0, r0, r1, r7
 8021b94:	f102 0c01 	add.w	ip, r2, #1
 8021b98:	b280      	uxth	r0, r0
 8021b9a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8021b9e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8021ba2:	1c42      	adds	r2, r0, #1
 8021ba4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021ba8:	b29b      	uxth	r3, r3
 8021baa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021bae:	ea42 020c 	orr.w	r2, r2, ip
 8021bb2:	f103 0c01 	add.w	ip, r3, #1
 8021bb6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021bba:	095b      	lsrs	r3, r3, #5
 8021bbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021bc0:	431a      	orrs	r2, r3
 8021bc2:	f8a9 2000 	strh.w	r2, [r9]
 8021bc6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021bc8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021bca:	441a      	add	r2, r3
 8021bcc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bce:	9229      	str	r2, [sp, #164]	; 0xa4
 8021bd0:	f109 0902 	add.w	r9, r9, #2
 8021bd4:	441d      	add	r5, r3
 8021bd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021bda:	e63d      	b.n	8021858 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021bdc:	2800      	cmp	r0, #0
 8021bde:	f43f aedd 	beq.w	802199c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021be2:	5c79      	ldrb	r1, [r7, r1]
 8021be4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021be8:	910b      	str	r1, [sp, #44]	; 0x2c
 8021bea:	0e09      	lsrs	r1, r1, #24
 8021bec:	9114      	str	r1, [sp, #80]	; 0x50
 8021bee:	e6d5      	b.n	802199c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021bf0:	b01f      	add	sp, #124	; 0x7c
 8021bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021bf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021bf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bfa:	b089      	sub	sp, #36	; 0x24
 8021bfc:	9101      	str	r1, [sp, #4]
 8021bfe:	9801      	ldr	r0, [sp, #4]
 8021c00:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021c04:	8800      	ldrh	r0, [r0, #0]
 8021c06:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021c0a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8021c0e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8021c12:	1206      	asrs	r6, r0, #8
 8021c14:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021c18:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021c1c:	9602      	str	r6, [sp, #8]
 8021c1e:	10c6      	asrs	r6, r0, #3
 8021c20:	00c0      	lsls	r0, r0, #3
 8021c22:	b2c0      	uxtb	r0, r0
 8021c24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021c28:	9004      	str	r0, [sp, #16]
 8021c2a:	2f00      	cmp	r7, #0
 8021c2c:	fb07 100c 	mla	r0, r7, ip, r1
 8021c30:	9603      	str	r6, [sp, #12]
 8021c32:	eb02 0e00 	add.w	lr, r2, r0
 8021c36:	f2c0 810a 	blt.w	8021e4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021c3a:	45b8      	cmp	r8, r7
 8021c3c:	f340 8107 	ble.w	8021e4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021c40:	2900      	cmp	r1, #0
 8021c42:	f2c0 8102 	blt.w	8021e4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021c46:	458c      	cmp	ip, r1
 8021c48:	f340 80ff 	ble.w	8021e4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021c4c:	5c12      	ldrb	r2, [r2, r0]
 8021c4e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8021c52:	1c4a      	adds	r2, r1, #1
 8021c54:	f100 80fe 	bmi.w	8021e54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021c58:	4594      	cmp	ip, r2
 8021c5a:	f340 80fb 	ble.w	8021e54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021c5e:	2d00      	cmp	r5, #0
 8021c60:	f000 80fa 	beq.w	8021e58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021c64:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021c68:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021c6c:	3701      	adds	r7, #1
 8021c6e:	f100 80f7 	bmi.w	8021e60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021c72:	45b8      	cmp	r8, r7
 8021c74:	f340 80f4 	ble.w	8021e60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021c78:	2c00      	cmp	r4, #0
 8021c7a:	f000 80f4 	beq.w	8021e66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021c7e:	2900      	cmp	r1, #0
 8021c80:	eb0e 020c 	add.w	r2, lr, ip
 8021c84:	f2c0 80ea 	blt.w	8021e5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021c88:	458c      	cmp	ip, r1
 8021c8a:	f340 80e7 	ble.w	8021e5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021c8e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8021c92:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021c96:	3101      	adds	r1, #1
 8021c98:	f100 80e8 	bmi.w	8021e6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021c9c:	458c      	cmp	ip, r1
 8021c9e:	f340 80e5 	ble.w	8021e6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021ca2:	2d00      	cmp	r5, #0
 8021ca4:	f000 80e4 	beq.w	8021e70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021ca8:	7852      	ldrb	r2, [r2, #1]
 8021caa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021cae:	0e0b      	lsrs	r3, r1, #24
 8021cb0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021cb4:	9300      	str	r3, [sp, #0]
 8021cb6:	b2a4      	uxth	r4, r4
 8021cb8:	b2ab      	uxth	r3, r5
 8021cba:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8021cbe:	fb03 f904 	mul.w	r9, r3, r4
 8021cc2:	fb0a f505 	mul.w	r5, sl, r5
 8021cc6:	011b      	lsls	r3, r3, #4
 8021cc8:	eba3 0e09 	sub.w	lr, r3, r9
 8021ccc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8021cd0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021cd4:	0a28      	lsrs	r0, r5, #8
 8021cd6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021cda:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8021cde:	4405      	add	r5, r0
 8021ce0:	0a2d      	lsrs	r5, r5, #8
 8021ce2:	fb0a f303 	mul.w	r3, sl, r3
 8021ce6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021cea:	9005      	str	r0, [sp, #20]
 8021cec:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021cf0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021cf4:	0a1b      	lsrs	r3, r3, #8
 8021cf6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021cfa:	9306      	str	r3, [sp, #24]
 8021cfc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021d00:	fb0b f303 	mul.w	r3, fp, r3
 8021d04:	0a1d      	lsrs	r5, r3, #8
 8021d06:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021d0a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021d0e:	fb0b f606 	mul.w	r6, fp, r6
 8021d12:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021d16:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021d1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021d1e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021d22:	fb08 f707 	mul.w	r7, r8, r7
 8021d26:	441d      	add	r5, r3
 8021d28:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021d2c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021d30:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021d34:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021d38:	fb08 fc0c 	mul.w	ip, r8, ip
 8021d3c:	0a1b      	lsrs	r3, r3, #8
 8021d3e:	9307      	str	r3, [sp, #28]
 8021d40:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021d44:	0e0b      	lsrs	r3, r1, #24
 8021d46:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021d4a:	435f      	muls	r7, r3
 8021d4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021d50:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021d54:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021d58:	4460      	add	r0, ip
 8021d5a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021d5e:	b2a4      	uxth	r4, r4
 8021d60:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021d64:	0a2d      	lsrs	r5, r5, #8
 8021d66:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021d6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021d6e:	fa1f fe8e 	uxth.w	lr, lr
 8021d72:	4359      	muls	r1, r3
 8021d74:	1b12      	subs	r2, r2, r4
 8021d76:	9b05      	ldr	r3, [sp, #20]
 8021d78:	44bc      	add	ip, r7
 8021d7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021d7e:	b292      	uxth	r2, r2
 8021d80:	fb05 f50e 	mul.w	r5, r5, lr
 8021d84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d88:	fb03 5502 	mla	r5, r3, r2, r5
 8021d8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021d90:	9b06      	ldr	r3, [sp, #24]
 8021d92:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021d96:	0a36      	lsrs	r6, r6, #8
 8021d98:	0a00      	lsrs	r0, r0, #8
 8021d9a:	fb0c 5509 	mla	r5, ip, r9, r5
 8021d9e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021da2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021da6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021daa:	fb00 5504 	mla	r5, r0, r4, r5
 8021dae:	fb0e f606 	mul.w	r6, lr, r6
 8021db2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021db6:	0a09      	lsrs	r1, r1, #8
 8021db8:	9b07      	ldr	r3, [sp, #28]
 8021dba:	fb02 6000 	mla	r0, r2, r0, r6
 8021dbe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021dc2:	fb09 0001 	mla	r0, r9, r1, r0
 8021dc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021dca:	fb0e fe0b 	mul.w	lr, lr, fp
 8021dce:	fb04 0003 	mla	r0, r4, r3, r0
 8021dd2:	fb02 e20a 	mla	r2, r2, sl, lr
 8021dd6:	9b00      	ldr	r3, [sp, #0]
 8021dd8:	fb04 2408 	mla	r4, r4, r8, r2
 8021ddc:	fb09 4903 	mla	r9, r9, r3, r4
 8021de0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021de4:	9b02      	ldr	r3, [sp, #8]
 8021de6:	9a04      	ldr	r2, [sp, #16]
 8021de8:	fa5f f989 	uxtb.w	r9, r9
 8021dec:	fb03 f109 	mul.w	r1, r3, r9
 8021df0:	9b03      	ldr	r3, [sp, #12]
 8021df2:	0a2d      	lsrs	r5, r5, #8
 8021df4:	0a00      	lsrs	r0, r0, #8
 8021df6:	fb03 f309 	mul.w	r3, r3, r9
 8021dfa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021dfe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021e02:	4305      	orrs	r5, r0
 8021e04:	fb02 f909 	mul.w	r9, r2, r9
 8021e08:	1c58      	adds	r0, r3, #1
 8021e0a:	1c4a      	adds	r2, r1, #1
 8021e0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021e10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021e14:	0a2b      	lsrs	r3, r5, #8
 8021e16:	0c2a      	lsrs	r2, r5, #16
 8021e18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021e1c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021e20:	00db      	lsls	r3, r3, #3
 8021e22:	0212      	lsls	r2, r2, #8
 8021e24:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021e28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e2c:	4313      	orrs	r3, r2
 8021e2e:	f109 0201 	add.w	r2, r9, #1
 8021e32:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021e36:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021e3a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021e3e:	431d      	orrs	r5, r3
 8021e40:	9b01      	ldr	r3, [sp, #4]
 8021e42:	801d      	strh	r5, [r3, #0]
 8021e44:	b009      	add	sp, #36	; 0x24
 8021e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e4a:	2000      	movs	r0, #0
 8021e4c:	e701      	b.n	8021c52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021e4e:	2600      	movs	r6, #0
 8021e50:	4630      	mov	r0, r6
 8021e52:	e70b      	b.n	8021c6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021e54:	2600      	movs	r6, #0
 8021e56:	e709      	b.n	8021c6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021e58:	462e      	mov	r6, r5
 8021e5a:	e707      	b.n	8021c6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021e5c:	2700      	movs	r7, #0
 8021e5e:	e71a      	b.n	8021c96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021e60:	2100      	movs	r1, #0
 8021e62:	460f      	mov	r7, r1
 8021e64:	e723      	b.n	8021cae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021e66:	4621      	mov	r1, r4
 8021e68:	4627      	mov	r7, r4
 8021e6a:	e720      	b.n	8021cae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021e6c:	2100      	movs	r1, #0
 8021e6e:	e71e      	b.n	8021cae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021e70:	4629      	mov	r1, r5
 8021e72:	e71c      	b.n	8021cae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e78:	b09b      	sub	sp, #108	; 0x6c
 8021e7a:	9218      	str	r2, [sp, #96]	; 0x60
 8021e7c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021e7e:	9116      	str	r1, [sp, #88]	; 0x58
 8021e80:	9307      	str	r3, [sp, #28]
 8021e82:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021e86:	9019      	str	r0, [sp, #100]	; 0x64
 8021e88:	6850      	ldr	r0, [r2, #4]
 8021e8a:	6812      	ldr	r2, [r2, #0]
 8021e8c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021e8e:	fb00 1303 	mla	r3, r0, r3, r1
 8021e92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021e96:	930a      	str	r3, [sp, #40]	; 0x28
 8021e98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e9a:	681b      	ldr	r3, [r3, #0]
 8021e9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8021e9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021ea0:	685e      	ldr	r6, [r3, #4]
 8021ea2:	3604      	adds	r6, #4
 8021ea4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021ea6:	2b00      	cmp	r3, #0
 8021ea8:	dc03      	bgt.n	8021eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021eaa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021eac:	2b00      	cmp	r3, #0
 8021eae:	f340 8373 	ble.w	8022598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021eb2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021eb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021eb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ebc:	1e48      	subs	r0, r1, #1
 8021ebe:	1e57      	subs	r7, r2, #1
 8021ec0:	9b07      	ldr	r3, [sp, #28]
 8021ec2:	2b00      	cmp	r3, #0
 8021ec4:	f340 8190 	ble.w	80221e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021ec8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021eca:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021ece:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021ed2:	d406      	bmi.n	8021ee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ed4:	4584      	cmp	ip, r0
 8021ed6:	da04      	bge.n	8021ee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ed8:	2b00      	cmp	r3, #0
 8021eda:	db02      	blt.n	8021ee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021edc:	42bb      	cmp	r3, r7
 8021ede:	f2c0 8184 	blt.w	80221ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021ee2:	f11c 0c01 	adds.w	ip, ip, #1
 8021ee6:	f100 8172 	bmi.w	80221ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021eea:	4561      	cmp	r1, ip
 8021eec:	f2c0 816f 	blt.w	80221ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ef0:	3301      	adds	r3, #1
 8021ef2:	f100 816c 	bmi.w	80221ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ef6:	429a      	cmp	r2, r3
 8021ef8:	f2c0 8169 	blt.w	80221ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021efc:	9b07      	ldr	r3, [sp, #28]
 8021efe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021f00:	9317      	str	r3, [sp, #92]	; 0x5c
 8021f02:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021f04:	2b00      	cmp	r3, #0
 8021f06:	f340 818e 	ble.w	8022226 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021f0a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021f0c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021f12:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021f16:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021f18:	141b      	asrs	r3, r3, #16
 8021f1a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021f1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021f22:	f100 81d1 	bmi.w	80222c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021f26:	f101 38ff 	add.w	r8, r1, #4294967295
 8021f2a:	4543      	cmp	r3, r8
 8021f2c:	f280 81cc 	bge.w	80222c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021f30:	f1bc 0f00 	cmp.w	ip, #0
 8021f34:	f2c0 81c8 	blt.w	80222c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021f38:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021f3c:	45c4      	cmp	ip, r8
 8021f3e:	f280 81c3 	bge.w	80222c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021f42:	b209      	sxth	r1, r1
 8021f44:	fb0c 3301 	mla	r3, ip, r1, r3
 8021f48:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021f4a:	eb04 0803 	add.w	r8, r4, r3
 8021f4e:	5ce3      	ldrb	r3, [r4, r3]
 8021f50:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021f54:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021f58:	2a00      	cmp	r2, #0
 8021f5a:	f000 81aa 	beq.w	80222b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021f5e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021f62:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021f66:	940b      	str	r4, [sp, #44]	; 0x2c
 8021f68:	0e24      	lsrs	r4, r4, #24
 8021f6a:	9412      	str	r4, [sp, #72]	; 0x48
 8021f6c:	b178      	cbz	r0, 8021f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021f6e:	eb08 0c01 	add.w	ip, r8, r1
 8021f72:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021f76:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f7a:	9108      	str	r1, [sp, #32]
 8021f7c:	0e09      	lsrs	r1, r1, #24
 8021f7e:	9110      	str	r1, [sp, #64]	; 0x40
 8021f80:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021f84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f88:	910c      	str	r1, [sp, #48]	; 0x30
 8021f8a:	0e09      	lsrs	r1, r1, #24
 8021f8c:	9113      	str	r1, [sp, #76]	; 0x4c
 8021f8e:	b292      	uxth	r2, r2
 8021f90:	b280      	uxth	r0, r0
 8021f92:	fb02 f900 	mul.w	r9, r2, r0
 8021f96:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021f9a:	0112      	lsls	r2, r2, #4
 8021f9c:	eba2 0809 	sub.w	r8, r2, r9
 8021fa0:	b280      	uxth	r0, r0
 8021fa2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021fa6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021fa8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021faa:	fa1f f888 	uxth.w	r8, r8
 8021fae:	1a12      	subs	r2, r2, r0
 8021fb0:	b292      	uxth	r2, r2
 8021fb2:	fb08 f101 	mul.w	r1, r8, r1
 8021fb6:	fb02 110e 	mla	r1, r2, lr, r1
 8021fba:	fb00 1104 	mla	r1, r0, r4, r1
 8021fbe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021fc0:	fb09 1104 	mla	r1, r9, r4, r1
 8021fc4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021fc8:	2900      	cmp	r1, #0
 8021fca:	f000 80f5 	beq.w	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021fce:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021fd2:	d01b      	beq.n	802200c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021fd4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021fd8:	fb0e fa0a 	mul.w	sl, lr, sl
 8021fdc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021fe0:	fb0e fe03 	mul.w	lr, lr, r3
 8021fe4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021fe8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021fec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021ff0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021ff4:	4453      	add	r3, sl
 8021ff6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021ffa:	0a1b      	lsrs	r3, r3, #8
 8021ffc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022000:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022004:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022008:	ea43 030c 	orr.w	r3, r3, ip
 802200c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802200e:	2cff      	cmp	r4, #255	; 0xff
 8022010:	d021      	beq.n	8022056 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8022012:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022014:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022018:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802201a:	fb04 fb0b 	mul.w	fp, r4, fp
 802201e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022020:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022024:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022026:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802202a:	fb04 fa0a 	mul.w	sl, r4, sl
 802202e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022032:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022036:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802203a:	44de      	add	lr, fp
 802203c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022040:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022048:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802204c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022050:	ea4e 040a 	orr.w	r4, lr, sl
 8022054:	940b      	str	r4, [sp, #44]	; 0x2c
 8022056:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022058:	2cff      	cmp	r4, #255	; 0xff
 802205a:	d021      	beq.n	80220a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 802205c:	9c08      	ldr	r4, [sp, #32]
 802205e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022062:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022064:	fb04 fb0b 	mul.w	fp, r4, fp
 8022068:	9c08      	ldr	r4, [sp, #32]
 802206a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802206e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022070:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022074:	fb04 fa0a 	mul.w	sl, r4, sl
 8022078:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802207c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022080:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022084:	44de      	add	lr, fp
 8022086:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802208a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802208e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022092:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022096:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802209a:	ea4e 040a 	orr.w	r4, lr, sl
 802209e:	9408      	str	r4, [sp, #32]
 80220a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80220a2:	2cff      	cmp	r4, #255	; 0xff
 80220a4:	d021      	beq.n	80220ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80220a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80220a8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80220ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80220ae:	fb04 fb0b 	mul.w	fp, r4, fp
 80220b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80220b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80220b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80220ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80220be:	fb04 fa0a 	mul.w	sl, r4, sl
 80220c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80220c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80220ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80220ce:	44de      	add	lr, fp
 80220d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80220d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80220d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80220e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220e4:	ea4e 040a 	orr.w	r4, lr, sl
 80220e8:	940c      	str	r4, [sp, #48]	; 0x30
 80220ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80220ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80220f0:	9c08      	ldr	r4, [sp, #32]
 80220f2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80220f6:	fb08 fc0c 	mul.w	ip, r8, ip
 80220fa:	fb02 cc0e 	mla	ip, r2, lr, ip
 80220fe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022102:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022104:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022108:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802210c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802210e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022112:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022116:	fb08 f80e 	mul.w	r8, r8, lr
 802211a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802211e:	fb02 8303 	mla	r3, r2, r3, r8
 8022122:	9a08      	ldr	r2, [sp, #32]
 8022124:	f8b7 8000 	ldrh.w	r8, [r7]
 8022128:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802212c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802212e:	fb00 330a 	mla	r3, r0, sl, r3
 8022132:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022136:	fb09 3900 	mla	r9, r9, r0, r3
 802213a:	43c9      	mvns	r1, r1
 802213c:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022140:	fa5f fe81 	uxtb.w	lr, r1
 8022144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022148:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802214c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022150:	fb02 f20e 	mul.w	r2, r2, lr
 8022154:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022158:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802215c:	ea4c 0c09 	orr.w	ip, ip, r9
 8022160:	1c53      	adds	r3, r2, #1
 8022162:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022166:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802216a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802216e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022172:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022176:	4a63      	ldr	r2, [pc, #396]	; (8022304 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022178:	fb00 f00e 	mul.w	r0, r0, lr
 802217c:	b2db      	uxtb	r3, r3
 802217e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022182:	1c43      	adds	r3, r0, #1
 8022184:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022188:	ea4f 231c 	mov.w	r3, ip, lsr #8
 802218c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022190:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022194:	b2c9      	uxtb	r1, r1
 8022196:	00db      	lsls	r3, r3, #3
 8022198:	fb01 f10e 	mul.w	r1, r1, lr
 802219c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80221a0:	4313      	orrs	r3, r2
 80221a2:	1c4a      	adds	r2, r1, #1
 80221a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80221a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80221ac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80221b0:	ea4c 0c03 	orr.w	ip, ip, r3
 80221b4:	f8a7 c000 	strh.w	ip, [r7]
 80221b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80221ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80221bc:	441a      	add	r2, r3
 80221be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80221c0:	9225      	str	r2, [sp, #148]	; 0x94
 80221c2:	441d      	add	r5, r3
 80221c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80221c6:	3b01      	subs	r3, #1
 80221c8:	3702      	adds	r7, #2
 80221ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80221cc:	e699      	b.n	8021f02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80221ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80221d0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80221d2:	441c      	add	r4, r3
 80221d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80221d6:	9425      	str	r4, [sp, #148]	; 0x94
 80221d8:	441d      	add	r5, r3
 80221da:	9b07      	ldr	r3, [sp, #28]
 80221dc:	3b01      	subs	r3, #1
 80221de:	9307      	str	r3, [sp, #28]
 80221e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80221e2:	3302      	adds	r3, #2
 80221e4:	930a      	str	r3, [sp, #40]	; 0x28
 80221e6:	e66b      	b.n	8021ec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80221e8:	d024      	beq.n	8022234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80221ea:	9b07      	ldr	r3, [sp, #28]
 80221ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80221ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80221f0:	3b01      	subs	r3, #1
 80221f2:	fb00 4003 	mla	r0, r0, r3, r4
 80221f6:	1400      	asrs	r0, r0, #16
 80221f8:	f53f ae80 	bmi.w	8021efc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80221fc:	3901      	subs	r1, #1
 80221fe:	4288      	cmp	r0, r1
 8022200:	f6bf ae7c 	bge.w	8021efc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022204:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022206:	fb01 5303 	mla	r3, r1, r3, r5
 802220a:	141b      	asrs	r3, r3, #16
 802220c:	f53f ae76 	bmi.w	8021efc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022210:	3a01      	subs	r2, #1
 8022212:	4293      	cmp	r3, r2
 8022214:	f6bf ae72 	bge.w	8021efc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022218:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802221c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022220:	f1bb 0f00 	cmp.w	fp, #0
 8022224:	dc70      	bgt.n	8022308 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022226:	9b07      	ldr	r3, [sp, #28]
 8022228:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802222c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802222e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022232:	930a      	str	r3, [sp, #40]	; 0x28
 8022234:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022236:	2b00      	cmp	r3, #0
 8022238:	f340 81ae 	ble.w	8022598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802223c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022240:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022244:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022248:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802224a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802224e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022256:	eef0 6a62 	vmov.f32	s13, s5
 802225a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802225e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022262:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022266:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802226a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802226e:	eef0 6a43 	vmov.f32	s13, s6
 8022272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022276:	ee12 2a90 	vmov	r2, s5
 802227a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802227e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022282:	ee13 2a10 	vmov	r2, s6
 8022286:	9327      	str	r3, [sp, #156]	; 0x9c
 8022288:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802228a:	fb92 f3f3 	sdiv	r3, r2, r3
 802228e:	9328      	str	r3, [sp, #160]	; 0xa0
 8022290:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022292:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022294:	3b01      	subs	r3, #1
 8022296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802229a:	9316      	str	r3, [sp, #88]	; 0x58
 802229c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802229e:	bf08      	it	eq
 80222a0:	4613      	moveq	r3, r2
 80222a2:	ee16 5a90 	vmov	r5, s13
 80222a6:	9307      	str	r3, [sp, #28]
 80222a8:	eeb0 3a67 	vmov.f32	s6, s15
 80222ac:	eef0 2a47 	vmov.f32	s5, s14
 80222b0:	e5f8      	b.n	8021ea4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80222b2:	2800      	cmp	r0, #0
 80222b4:	f43f ae6b 	beq.w	8021f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80222b8:	f818 1001 	ldrb.w	r1, [r8, r1]
 80222bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222c0:	9108      	str	r1, [sp, #32]
 80222c2:	0e09      	lsrs	r1, r1, #24
 80222c4:	9110      	str	r1, [sp, #64]	; 0x40
 80222c6:	e662      	b.n	8021f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80222c8:	f113 0801 	adds.w	r8, r3, #1
 80222cc:	f53f af74 	bmi.w	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80222d0:	4541      	cmp	r1, r8
 80222d2:	f6ff af71 	blt.w	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80222d6:	f11c 0801 	adds.w	r8, ip, #1
 80222da:	f53f af6d 	bmi.w	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80222de:	45c6      	cmp	lr, r8
 80222e0:	f6ff af6a 	blt.w	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80222e4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80222e8:	b209      	sxth	r1, r1
 80222ea:	fa0f f38e 	sxth.w	r3, lr
 80222ee:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80222f2:	9301      	str	r3, [sp, #4]
 80222f4:	9100      	str	r1, [sp, #0]
 80222f6:	4633      	mov	r3, r6
 80222f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80222fa:	9819      	ldr	r0, [sp, #100]	; 0x64
 80222fc:	4639      	mov	r1, r7
 80222fe:	f7ff fc7a 	bl	8021bf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8022302:	e759      	b.n	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022304:	fffff800 	.word	0xfffff800
 8022308:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802230a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802230c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022310:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022312:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022316:	1427      	asrs	r7, r4, #16
 8022318:	142b      	asrs	r3, r5, #16
 802231a:	fb01 7303 	mla	r3, r1, r3, r7
 802231e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022320:	18e7      	adds	r7, r4, r3
 8022322:	5ce3      	ldrb	r3, [r4, r3]
 8022324:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022328:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802232c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022330:	2a00      	cmp	r2, #0
 8022332:	f000 8127 	beq.w	8022584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022336:	f897 e001 	ldrb.w	lr, [r7, #1]
 802233a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802233e:	940d      	str	r4, [sp, #52]	; 0x34
 8022340:	0e24      	lsrs	r4, r4, #24
 8022342:	9414      	str	r4, [sp, #80]	; 0x50
 8022344:	b170      	cbz	r0, 8022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022346:	eb07 0e01 	add.w	lr, r7, r1
 802234a:	5c79      	ldrb	r1, [r7, r1]
 802234c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022350:	9109      	str	r1, [sp, #36]	; 0x24
 8022352:	0e09      	lsrs	r1, r1, #24
 8022354:	9111      	str	r1, [sp, #68]	; 0x44
 8022356:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802235a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802235e:	910e      	str	r1, [sp, #56]	; 0x38
 8022360:	0e09      	lsrs	r1, r1, #24
 8022362:	9115      	str	r1, [sp, #84]	; 0x54
 8022364:	b292      	uxth	r2, r2
 8022366:	b280      	uxth	r0, r0
 8022368:	fb02 f800 	mul.w	r8, r2, r0
 802236c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022370:	0112      	lsls	r2, r2, #4
 8022372:	eba2 0e08 	sub.w	lr, r2, r8
 8022376:	b280      	uxth	r0, r0
 8022378:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802237c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802237e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022380:	fa1f fe8e 	uxth.w	lr, lr
 8022384:	1a09      	subs	r1, r1, r0
 8022386:	b289      	uxth	r1, r1
 8022388:	fb0e f202 	mul.w	r2, lr, r2
 802238c:	fb01 220c 	mla	r2, r1, ip, r2
 8022390:	fb00 2204 	mla	r2, r0, r4, r2
 8022394:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022396:	fb08 2204 	mla	r2, r8, r4, r2
 802239a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802239e:	2a00      	cmp	r2, #0
 80223a0:	f000 80e5 	beq.w	802256e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80223a4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80223a8:	d019      	beq.n	80223de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80223aa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80223ae:	fb0c fa0a 	mul.w	sl, ip, sl
 80223b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80223b6:	fb0c fc03 	mul.w	ip, ip, r3
 80223ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80223be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80223c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80223c6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80223ca:	4453      	add	r3, sl
 80223cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80223d0:	0a1b      	lsrs	r3, r3, #8
 80223d2:	0a3f      	lsrs	r7, r7, #8
 80223d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80223d8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80223dc:	433b      	orrs	r3, r7
 80223de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80223e0:	2cff      	cmp	r4, #255	; 0xff
 80223e2:	d020      	beq.n	8022426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80223e4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80223e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80223ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80223ec:	4367      	muls	r7, r4
 80223ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80223f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80223f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80223fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022402:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022406:	44bc      	add	ip, r7
 8022408:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802240c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022410:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022418:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802241c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022420:	ea4c 040a 	orr.w	r4, ip, sl
 8022424:	940d      	str	r4, [sp, #52]	; 0x34
 8022426:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022428:	2cff      	cmp	r4, #255	; 0xff
 802242a:	d020      	beq.n	802246e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 802242c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802242e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022432:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022434:	4367      	muls	r7, r4
 8022436:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022438:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802243c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802243e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022442:	fb04 fa0a 	mul.w	sl, r4, sl
 8022446:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802244a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802244e:	44bc      	add	ip, r7
 8022450:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022454:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022458:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802245c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022460:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022464:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022468:	ea4c 040a 	orr.w	r4, ip, sl
 802246c:	9409      	str	r4, [sp, #36]	; 0x24
 802246e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022470:	2cff      	cmp	r4, #255	; 0xff
 8022472:	d020      	beq.n	80224b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022474:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022476:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802247a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802247c:	4367      	muls	r7, r4
 802247e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022480:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022484:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022486:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802248a:	fb04 fa0a 	mul.w	sl, r4, sl
 802248e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022492:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022496:	44bc      	add	ip, r7
 8022498:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802249c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80224a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80224a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80224b0:	ea4c 040a 	orr.w	r4, ip, sl
 80224b4:	940e      	str	r4, [sp, #56]	; 0x38
 80224b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80224b8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80224bc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80224be:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80224c2:	fb0e f707 	mul.w	r7, lr, r7
 80224c6:	fb01 770c 	mla	r7, r1, ip, r7
 80224ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80224ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80224d0:	fb00 770c 	mla	r7, r0, ip, r7
 80224d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80224d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80224da:	fb08 770c 	mla	r7, r8, ip, r7
 80224de:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80224e2:	fb0e fe0c 	mul.w	lr, lr, ip
 80224e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80224ea:	fb01 e303 	mla	r3, r1, r3, lr
 80224ee:	9909      	ldr	r1, [sp, #36]	; 0x24
 80224f0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80224f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80224f6:	fb00 330a 	mla	r3, r0, sl, r3
 80224fa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80224fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022502:	f8b9 3000 	ldrh.w	r3, [r9]
 8022506:	43d2      	mvns	r2, r2
 8022508:	1218      	asrs	r0, r3, #8
 802250a:	b2d2      	uxtb	r2, r2
 802250c:	10d9      	asrs	r1, r3, #3
 802250e:	0a3f      	lsrs	r7, r7, #8
 8022510:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022514:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022518:	00db      	lsls	r3, r3, #3
 802251a:	4350      	muls	r0, r2
 802251c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022520:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022524:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022528:	b2db      	uxtb	r3, r3
 802252a:	ea47 070c 	orr.w	r7, r7, ip
 802252e:	4351      	muls	r1, r2
 8022530:	4353      	muls	r3, r2
 8022532:	1c42      	adds	r2, r0, #1
 8022534:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022538:	0c3a      	lsrs	r2, r7, #16
 802253a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802253e:	4a18      	ldr	r2, [pc, #96]	; (80225a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022540:	b2c0      	uxtb	r0, r0
 8022542:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022546:	1c4a      	adds	r2, r1, #1
 8022548:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802254c:	0a3a      	lsrs	r2, r7, #8
 802254e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022552:	00c9      	lsls	r1, r1, #3
 8022554:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022558:	4301      	orrs	r1, r0
 802255a:	1c58      	adds	r0, r3, #1
 802255c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022560:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022564:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022568:	4308      	orrs	r0, r1
 802256a:	f8a9 0000 	strh.w	r0, [r9]
 802256e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022570:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022572:	441a      	add	r2, r3
 8022574:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022576:	9225      	str	r2, [sp, #148]	; 0x94
 8022578:	f109 0902 	add.w	r9, r9, #2
 802257c:	441d      	add	r5, r3
 802257e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022582:	e64d      	b.n	8022220 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022584:	2800      	cmp	r0, #0
 8022586:	f43f aeed 	beq.w	8022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802258a:	5c79      	ldrb	r1, [r7, r1]
 802258c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022590:	9109      	str	r1, [sp, #36]	; 0x24
 8022592:	0e09      	lsrs	r1, r1, #24
 8022594:	9111      	str	r1, [sp, #68]	; 0x44
 8022596:	e6e5      	b.n	8022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022598:	b01b      	add	sp, #108	; 0x6c
 802259a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802259e:	bf00      	nop
 80225a0:	fffff800 	.word	0xfffff800

080225a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80225a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225a8:	b085      	sub	sp, #20
 80225aa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80225ae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80225b2:	9103      	str	r1, [sp, #12]
 80225b4:	fb00 7406 	mla	r4, r0, r6, r7
 80225b8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80225bc:	2800      	cmp	r0, #0
 80225be:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80225c2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80225c6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80225ca:	9501      	str	r5, [sp, #4]
 80225cc:	eb03 0904 	add.w	r9, r3, r4
 80225d0:	f2c0 8150 	blt.w	8022874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80225d4:	4583      	cmp	fp, r0
 80225d6:	f340 814d 	ble.w	8022874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80225da:	2f00      	cmp	r7, #0
 80225dc:	f2c0 8146 	blt.w	802286c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80225e0:	42be      	cmp	r6, r7
 80225e2:	f340 8143 	ble.w	802286c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80225e6:	f813 c004 	ldrb.w	ip, [r3, r4]
 80225ea:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80225ee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80225f2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80225f6:	4355      	muls	r5, r2
 80225f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80225fc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022600:	fb0c f203 	mul.w	r2, ip, r3
 8022604:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022608:	f605 0501 	addw	r5, r5, #2049	; 0x801
 802260c:	441d      	add	r5, r3
 802260e:	f102 0320 	add.w	r3, r2, #32
 8022612:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022616:	0a1b      	lsrs	r3, r3, #8
 8022618:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802261c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022620:	431c      	orrs	r4, r3
 8022622:	1c7b      	adds	r3, r7, #1
 8022624:	f100 812b 	bmi.w	802287e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022628:	429e      	cmp	r6, r3
 802262a:	f340 8128 	ble.w	802287e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802262e:	2900      	cmp	r1, #0
 8022630:	f000 8128 	beq.w	8022884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022634:	9a01      	ldr	r2, [sp, #4]
 8022636:	f899 3001 	ldrb.w	r3, [r9, #1]
 802263a:	8855      	ldrh	r5, [r2, #2]
 802263c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022640:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022644:	fb08 f802 	mul.w	r8, r8, r2
 8022648:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802264c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022650:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022654:	435d      	muls	r5, r3
 8022656:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802265a:	44d0      	add	r8, sl
 802265c:	f105 0a20 	add.w	sl, r5, #32
 8022660:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022664:	0a2d      	lsrs	r5, r5, #8
 8022666:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802266a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802266e:	432a      	orrs	r2, r5
 8022670:	3001      	adds	r0, #1
 8022672:	f100 810d 	bmi.w	8022890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022676:	4583      	cmp	fp, r0
 8022678:	f340 810a 	ble.w	8022890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802267c:	f1be 0f00 	cmp.w	lr, #0
 8022680:	f000 810b 	beq.w	802289a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022684:	2f00      	cmp	r7, #0
 8022686:	f2c0 8100 	blt.w	802288a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802268a:	42be      	cmp	r6, r7
 802268c:	f340 80fd 	ble.w	802288a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022690:	9801      	ldr	r0, [sp, #4]
 8022692:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022696:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802269a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802269e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80226a2:	fb0a fa00 	mul.w	sl, sl, r0
 80226a6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80226aa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80226ae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80226b2:	fb05 f808 	mul.w	r8, r5, r8
 80226b6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80226ba:	4482      	add	sl, r0
 80226bc:	f108 0020 	add.w	r0, r8, #32
 80226c0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80226c4:	0a00      	lsrs	r0, r0, #8
 80226c6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80226ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226ce:	ea4b 0b00 	orr.w	fp, fp, r0
 80226d2:	3701      	adds	r7, #1
 80226d4:	f100 80e6 	bmi.w	80228a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80226d8:	42be      	cmp	r6, r7
 80226da:	f340 80e3 	ble.w	80228a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80226de:	2900      	cmp	r1, #0
 80226e0:	f000 80e3 	beq.w	80228aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80226e4:	3601      	adds	r6, #1
 80226e6:	9801      	ldr	r0, [sp, #4]
 80226e8:	f819 7006 	ldrb.w	r7, [r9, r6]
 80226ec:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80226f0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80226f4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80226f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226fc:	fb09 f906 	mul.w	r9, r9, r6
 8022700:	fb07 f800 	mul.w	r8, r7, r0
 8022704:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022708:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802270c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022710:	44d1      	add	r9, sl
 8022712:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022716:	f108 0020 	add.w	r0, r8, #32
 802271a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802271e:	0a00      	lsrs	r0, r0, #8
 8022720:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022724:	4330      	orrs	r0, r6
 8022726:	b28e      	uxth	r6, r1
 8022728:	fa1f f98e 	uxth.w	r9, lr
 802272c:	fb06 f809 	mul.w	r8, r6, r9
 8022730:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022734:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022738:	0136      	lsls	r6, r6, #4
 802273a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802273e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022742:	9601      	str	r6, [sp, #4]
 8022744:	ea4a 0404 	orr.w	r4, sl, r4
 8022748:	fa1f f689 	uxth.w	r6, r9
 802274c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022750:	fb11 f90e 	smulbb	r9, r1, lr
 8022754:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022758:	9602      	str	r6, [sp, #8]
 802275a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802275e:	4626      	mov	r6, r4
 8022760:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022764:	f1ce 0410 	rsb	r4, lr, #16
 8022768:	1a64      	subs	r4, r4, r1
 802276a:	ea4a 0202 	orr.w	r2, sl, r2
 802276e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022772:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022776:	434a      	muls	r2, r1
 8022778:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802277c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022780:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022784:	fb04 2406 	mla	r4, r4, r6, r2
 8022788:	ea4a 0000 	orr.w	r0, sl, r0
 802278c:	fb09 4200 	mla	r2, r9, r0, r4
 8022790:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022794:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022798:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802279c:	ea44 0b0b 	orr.w	fp, r4, fp
 80227a0:	9c01      	ldr	r4, [sp, #4]
 80227a2:	9e02      	ldr	r6, [sp, #8]
 80227a4:	9903      	ldr	r1, [sp, #12]
 80227a6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80227aa:	1ba4      	subs	r4, r4, r6
 80227ac:	9e01      	ldr	r6, [sp, #4]
 80227ae:	8808      	ldrh	r0, [r1, #0]
 80227b0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80227b4:	eba6 0608 	sub.w	r6, r6, r8
 80227b8:	b2b6      	uxth	r6, r6
 80227ba:	b2a4      	uxth	r4, r4
 80227bc:	4373      	muls	r3, r6
 80227be:	fb0c 3304 	mla	r3, ip, r4, r3
 80227c2:	9c02      	ldr	r4, [sp, #8]
 80227c4:	fb04 3505 	mla	r5, r4, r5, r3
 80227c8:	fb08 5707 	mla	r7, r8, r7, r5
 80227cc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80227d0:	b289      	uxth	r1, r1
 80227d2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80227d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80227da:	434f      	muls	r7, r1
 80227dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80227e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80227e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227e8:	1c7b      	adds	r3, r7, #1
 80227ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80227ee:	ea42 0e0e 	orr.w	lr, r2, lr
 80227f2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80227f6:	fa1f f28e 	uxth.w	r2, lr
 80227fa:	1203      	asrs	r3, r0, #8
 80227fc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022800:	b2ff      	uxtb	r7, r7
 8022802:	1215      	asrs	r5, r2, #8
 8022804:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022808:	fb13 f307 	smulbb	r3, r3, r7
 802280c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022810:	fb05 3501 	mla	r5, r5, r1, r3
 8022814:	10c3      	asrs	r3, r0, #3
 8022816:	10d4      	asrs	r4, r2, #3
 8022818:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802281c:	fb13 f307 	smulbb	r3, r3, r7
 8022820:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022824:	fb04 3401 	mla	r4, r4, r1, r3
 8022828:	00c3      	lsls	r3, r0, #3
 802282a:	00d2      	lsls	r2, r2, #3
 802282c:	b2db      	uxtb	r3, r3
 802282e:	fb13 f307 	smulbb	r3, r3, r7
 8022832:	b2d2      	uxtb	r2, r2
 8022834:	fb02 3101 	mla	r1, r2, r1, r3
 8022838:	b2ad      	uxth	r5, r5
 802283a:	b289      	uxth	r1, r1
 802283c:	b2a4      	uxth	r4, r4
 802283e:	1c6b      	adds	r3, r5, #1
 8022840:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022844:	1c62      	adds	r2, r4, #1
 8022846:	1c4b      	adds	r3, r1, #1
 8022848:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802284c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022850:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022854:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022858:	0964      	lsrs	r4, r4, #5
 802285a:	432b      	orrs	r3, r5
 802285c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022860:	9a03      	ldr	r2, [sp, #12]
 8022862:	4323      	orrs	r3, r4
 8022864:	8013      	strh	r3, [r2, #0]
 8022866:	b005      	add	sp, #20
 8022868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802286c:	f04f 0c00 	mov.w	ip, #0
 8022870:	4664      	mov	r4, ip
 8022872:	e6d6      	b.n	8022622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022874:	2300      	movs	r3, #0
 8022876:	469c      	mov	ip, r3
 8022878:	461a      	mov	r2, r3
 802287a:	461c      	mov	r4, r3
 802287c:	e6f8      	b.n	8022670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802287e:	2300      	movs	r3, #0
 8022880:	461a      	mov	r2, r3
 8022882:	e6f5      	b.n	8022670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022884:	460b      	mov	r3, r1
 8022886:	460a      	mov	r2, r1
 8022888:	e6f2      	b.n	8022670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802288a:	2500      	movs	r5, #0
 802288c:	46ab      	mov	fp, r5
 802288e:	e720      	b.n	80226d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022890:	2700      	movs	r7, #0
 8022892:	463d      	mov	r5, r7
 8022894:	4638      	mov	r0, r7
 8022896:	46bb      	mov	fp, r7
 8022898:	e745      	b.n	8022726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802289a:	4677      	mov	r7, lr
 802289c:	4675      	mov	r5, lr
 802289e:	4670      	mov	r0, lr
 80228a0:	46f3      	mov	fp, lr
 80228a2:	e740      	b.n	8022726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80228a4:	2700      	movs	r7, #0
 80228a6:	4638      	mov	r0, r7
 80228a8:	e73d      	b.n	8022726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80228aa:	460f      	mov	r7, r1
 80228ac:	4608      	mov	r0, r1
 80228ae:	e73a      	b.n	8022726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080228b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228b4:	b097      	sub	sp, #92	; 0x5c
 80228b6:	9214      	str	r2, [sp, #80]	; 0x50
 80228b8:	9308      	str	r3, [sp, #32]
 80228ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80228bc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80228c0:	9312      	str	r3, [sp, #72]	; 0x48
 80228c2:	9111      	str	r1, [sp, #68]	; 0x44
 80228c4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80228c8:	9015      	str	r0, [sp, #84]	; 0x54
 80228ca:	6850      	ldr	r0, [r2, #4]
 80228cc:	6812      	ldr	r2, [r2, #0]
 80228ce:	fb00 1303 	mla	r3, r0, r3, r1
 80228d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80228d6:	9309      	str	r3, [sp, #36]	; 0x24
 80228d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228da:	681b      	ldr	r3, [r3, #0]
 80228dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80228de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228e0:	685b      	ldr	r3, [r3, #4]
 80228e2:	930c      	str	r3, [sp, #48]	; 0x30
 80228e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80228e8:	930a      	str	r3, [sp, #40]	; 0x28
 80228ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80228ec:	2b00      	cmp	r3, #0
 80228ee:	dc03      	bgt.n	80228f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80228f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80228f2:	2b00      	cmp	r3, #0
 80228f4:	f340 83cb 	ble.w	802308e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80228f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80228fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022902:	1e48      	subs	r0, r1, #1
 8022904:	1e55      	subs	r5, r2, #1
 8022906:	9b08      	ldr	r3, [sp, #32]
 8022908:	2b00      	cmp	r3, #0
 802290a:	f340 81a3 	ble.w	8022c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802290e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8022910:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022912:	1436      	asrs	r6, r6, #16
 8022914:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022918:	d406      	bmi.n	8022928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802291a:	4286      	cmp	r6, r0
 802291c:	da04      	bge.n	8022928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802291e:	2b00      	cmp	r3, #0
 8022920:	db02      	blt.n	8022928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022922:	42ab      	cmp	r3, r5
 8022924:	f2c0 8197 	blt.w	8022c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022928:	3601      	adds	r6, #1
 802292a:	f100 8184 	bmi.w	8022c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802292e:	42b1      	cmp	r1, r6
 8022930:	f2c0 8181 	blt.w	8022c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022934:	3301      	adds	r3, #1
 8022936:	f100 817e 	bmi.w	8022c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802293a:	429a      	cmp	r2, r3
 802293c:	f2c0 817b 	blt.w	8022c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022940:	9b08      	ldr	r3, [sp, #32]
 8022942:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022944:	9313      	str	r3, [sp, #76]	; 0x4c
 8022946:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802294a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802294c:	2b00      	cmp	r3, #0
 802294e:	f340 81a4 	ble.w	8022c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022952:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022954:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022956:	1418      	asrs	r0, r3, #16
 8022958:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802295a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802295e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022960:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022964:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022966:	142d      	asrs	r5, r5, #16
 8022968:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802296c:	f100 81f8 	bmi.w	8022d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022970:	f102 3eff 	add.w	lr, r2, #4294967295
 8022974:	4575      	cmp	r5, lr
 8022976:	f280 81f3 	bge.w	8022d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802297a:	2800      	cmp	r0, #0
 802297c:	f2c0 81f0 	blt.w	8022d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022980:	f103 3eff 	add.w	lr, r3, #4294967295
 8022984:	4570      	cmp	r0, lr
 8022986:	f280 81eb 	bge.w	8022d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802298a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802298c:	b212      	sxth	r2, r2
 802298e:	fb00 5002 	mla	r0, r0, r2, r5
 8022992:	fa1f fe81 	uxth.w	lr, r1
 8022996:	eb03 0a00 	add.w	sl, r3, r0
 802299a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802299e:	f813 9000 	ldrb.w	r9, [r3, r0]
 80229a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80229a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80229aa:	b29b      	uxth	r3, r3
 80229ac:	f1bc 0f00 	cmp.w	ip, #0
 80229b0:	f000 81b9 	beq.w	8022d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80229b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80229b8:	940d      	str	r4, [sp, #52]	; 0x34
 80229ba:	eb0a 0b02 	add.w	fp, sl, r2
 80229be:	fa1f fa8c 	uxth.w	sl, ip
 80229c2:	fb0a fe0e 	mul.w	lr, sl, lr
 80229c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80229ca:	fa1f fa8a 	uxth.w	sl, sl
 80229ce:	eba5 050e 	sub.w	r5, r5, lr
 80229d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80229d6:	940e      	str	r4, [sp, #56]	; 0x38
 80229d8:	eba3 030a 	sub.w	r3, r3, sl
 80229dc:	b2ad      	uxth	r5, r5
 80229de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229e0:	b29b      	uxth	r3, r3
 80229e2:	fb08 f505 	mul.w	r5, r8, r5
 80229e6:	fb09 5303 	mla	r3, r9, r3, r5
 80229ea:	fb0a 3304 	mla	r3, sl, r4, r3
 80229ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80229f0:	fb0e 3304 	mla	r3, lr, r4, r3
 80229f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80229f8:	2b00      	cmp	r3, #0
 80229fa:	f000 810f 	beq.w	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80229fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022a04:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022a08:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022a0c:	f000 8190 	beq.w	8022d30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8022a10:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022a14:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022a18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a1c:	fb09 f000 	mul.w	r0, r9, r0
 8022a20:	fb0a fe0e 	mul.w	lr, sl, lr
 8022a24:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022a28:	f100 0b20 	add.w	fp, r0, #32
 8022a2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022a30:	44ce      	add	lr, r9
 8022a32:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022a36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022a3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022a42:	ea4e 0909 	orr.w	r9, lr, r9
 8022a46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022a4a:	8868      	ldrh	r0, [r5, #2]
 8022a4c:	d019      	beq.n	8022a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022a4e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022a52:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022a56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a5a:	fb08 f800 	mul.w	r8, r8, r0
 8022a5e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022a62:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022a66:	f108 0b20 	add.w	fp, r8, #32
 8022a6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022a6e:	4486      	add	lr, r0
 8022a70:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022a74:	0a00      	lsrs	r0, r0, #8
 8022a76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022a7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a7e:	ea4e 0000 	orr.w	r0, lr, r0
 8022a82:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022a86:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022a8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022a8e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022a92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022a96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a9a:	ea4e 0909 	orr.w	r9, lr, r9
 8022a9e:	ea4a 0000 	orr.w	r0, sl, r0
 8022aa2:	f1bc 0f00 	cmp.w	ip, #0
 8022aa6:	f000 8145 	beq.w	8022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022aaa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022aae:	3a01      	subs	r2, #1
 8022ab0:	0052      	lsls	r2, r2, #1
 8022ab2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022ab4:	3202      	adds	r2, #2
 8022ab6:	2cff      	cmp	r4, #255	; 0xff
 8022ab8:	eb05 0e02 	add.w	lr, r5, r2
 8022abc:	5aaa      	ldrh	r2, [r5, r2]
 8022abe:	d018      	beq.n	8022af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022ac0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022ac4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ac8:	fb04 fa02 	mul.w	sl, r4, r2
 8022acc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ad0:	fb08 f805 	mul.w	r8, r8, r5
 8022ad4:	f10a 0520 	add.w	r5, sl, #32
 8022ad8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022adc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022ae0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ae4:	4442      	add	r2, r8
 8022ae6:	0a2d      	lsrs	r5, r5, #8
 8022ae8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022aec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022af0:	432a      	orrs	r2, r5
 8022af2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022af4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022af8:	2cff      	cmp	r4, #255	; 0xff
 8022afa:	d01a      	beq.n	8022b32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022afc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022b00:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022b04:	fb04 fa05 	mul.w	sl, r4, r5
 8022b08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b0c:	fb08 f80e 	mul.w	r8, r8, lr
 8022b10:	f10a 0e20 	add.w	lr, sl, #32
 8022b14:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022b18:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022b1c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b20:	4445      	add	r5, r8
 8022b22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022b26:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022b2a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022b2e:	ea45 050e 	orr.w	r5, r5, lr
 8022b32:	fb1c fe01 	smulbb	lr, ip, r1
 8022b36:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022b3a:	f1cc 0810 	rsb	r8, ip, #16
 8022b3e:	eba8 0801 	sub.w	r8, r8, r1
 8022b42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022b46:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022b4a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022b4e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022b52:	4341      	muls	r1, r0
 8022b54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b5c:	ea4a 0202 	orr.w	r2, sl, r2
 8022b60:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022b64:	fb09 1108 	mla	r1, r9, r8, r1
 8022b68:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b6c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022b70:	fb0c 1102 	mla	r1, ip, r2, r1
 8022b74:	ea4b 0505 	orr.w	r5, fp, r5
 8022b78:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022b7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022b80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022b84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b88:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022b8c:	ea42 0e0e 	orr.w	lr, r2, lr
 8022b90:	fa1f f28e 	uxth.w	r2, lr
 8022b94:	2bff      	cmp	r3, #255	; 0xff
 8022b96:	d103      	bne.n	8022ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022b98:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022b9a:	29ff      	cmp	r1, #255	; 0xff
 8022b9c:	f000 80de 	beq.w	8022d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8022ba0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022ba2:	8838      	ldrh	r0, [r7, #0]
 8022ba4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022ba6:	434b      	muls	r3, r1
 8022ba8:	f103 0c01 	add.w	ip, r3, #1
 8022bac:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8022bb0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022bb4:	fa5f fc83 	uxtb.w	ip, r3
 8022bb8:	1203      	asrs	r3, r0, #8
 8022bba:	1215      	asrs	r5, r2, #8
 8022bbc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022bc0:	fb13 f30c 	smulbb	r3, r3, ip
 8022bc4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022bc8:	fb05 3501 	mla	r5, r5, r1, r3
 8022bcc:	10c3      	asrs	r3, r0, #3
 8022bce:	10d1      	asrs	r1, r2, #3
 8022bd0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022bd4:	fb13 f30c 	smulbb	r3, r3, ip
 8022bd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022bdc:	fb01 3104 	mla	r1, r1, r4, r3
 8022be0:	00c3      	lsls	r3, r0, #3
 8022be2:	00d2      	lsls	r2, r2, #3
 8022be4:	b2db      	uxtb	r3, r3
 8022be6:	b2d2      	uxtb	r2, r2
 8022be8:	fb13 f30c 	smulbb	r3, r3, ip
 8022bec:	b2ad      	uxth	r5, r5
 8022bee:	fb02 3304 	mla	r3, r2, r4, r3
 8022bf2:	b29a      	uxth	r2, r3
 8022bf4:	1c6b      	adds	r3, r5, #1
 8022bf6:	b289      	uxth	r1, r1
 8022bf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022bfc:	1c53      	adds	r3, r2, #1
 8022bfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c02:	1c4a      	adds	r2, r1, #1
 8022c04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022c08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022c0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022c10:	0949      	lsrs	r1, r1, #5
 8022c12:	432b      	orrs	r3, r5
 8022c14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c18:	430b      	orrs	r3, r1
 8022c1a:	803b      	strh	r3, [r7, #0]
 8022c1c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c1e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022c20:	4413      	add	r3, r2
 8022c22:	9321      	str	r3, [sp, #132]	; 0x84
 8022c24:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022c26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c28:	441a      	add	r2, r3
 8022c2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022c2c:	9222      	str	r2, [sp, #136]	; 0x88
 8022c2e:	3b01      	subs	r3, #1
 8022c30:	3702      	adds	r7, #2
 8022c32:	9313      	str	r3, [sp, #76]	; 0x4c
 8022c34:	e689      	b.n	802294a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022c36:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c38:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022c3a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022c3c:	4433      	add	r3, r6
 8022c3e:	9321      	str	r3, [sp, #132]	; 0x84
 8022c40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c42:	441c      	add	r4, r3
 8022c44:	9b08      	ldr	r3, [sp, #32]
 8022c46:	9422      	str	r4, [sp, #136]	; 0x88
 8022c48:	3b01      	subs	r3, #1
 8022c4a:	9308      	str	r3, [sp, #32]
 8022c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c4e:	3302      	adds	r3, #2
 8022c50:	9309      	str	r3, [sp, #36]	; 0x24
 8022c52:	e658      	b.n	8022906 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022c54:	d028      	beq.n	8022ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022c56:	9b08      	ldr	r3, [sp, #32]
 8022c58:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022c5a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022c5c:	3b01      	subs	r3, #1
 8022c5e:	fb00 5003 	mla	r0, r0, r3, r5
 8022c62:	1400      	asrs	r0, r0, #16
 8022c64:	f53f ae6c 	bmi.w	8022940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c68:	3901      	subs	r1, #1
 8022c6a:	4288      	cmp	r0, r1
 8022c6c:	f6bf ae68 	bge.w	8022940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c70:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022c72:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022c74:	fb01 0303 	mla	r3, r1, r3, r0
 8022c78:	141b      	asrs	r3, r3, #16
 8022c7a:	f53f ae61 	bmi.w	8022940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c7e:	3a01      	subs	r2, #1
 8022c80:	4293      	cmp	r3, r2
 8022c82:	f6bf ae5d 	bge.w	8022940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c86:	9b08      	ldr	r3, [sp, #32]
 8022c88:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022c8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022c8e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022c92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022c94:	2b00      	cmp	r3, #0
 8022c96:	f300 8082 	bgt.w	8022d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022c9a:	9b08      	ldr	r3, [sp, #32]
 8022c9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022ca0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022ca2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022ca6:	9309      	str	r3, [sp, #36]	; 0x24
 8022ca8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022caa:	2b00      	cmp	r3, #0
 8022cac:	f340 81ef 	ble.w	802308e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022cb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022cb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022cb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022cbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022cc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022cc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022cca:	eef0 6a62 	vmov.f32	s13, s5
 8022cce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022cd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022cd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022cda:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8022cde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ce2:	eef0 6a43 	vmov.f32	s13, s6
 8022ce6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022cea:	ee12 2a90 	vmov	r2, s5
 8022cee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cf6:	ee13 2a10 	vmov	r2, s6
 8022cfa:	9323      	str	r3, [sp, #140]	; 0x8c
 8022cfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d02:	9324      	str	r3, [sp, #144]	; 0x90
 8022d04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022d06:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022d08:	3b01      	subs	r3, #1
 8022d0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d0e:	9311      	str	r3, [sp, #68]	; 0x44
 8022d10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d12:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022d16:	bf08      	it	eq
 8022d18:	4613      	moveq	r3, r2
 8022d1a:	9308      	str	r3, [sp, #32]
 8022d1c:	eeb0 3a67 	vmov.f32	s6, s15
 8022d20:	eef0 2a47 	vmov.f32	s5, s14
 8022d24:	e5e1      	b.n	80228ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022d26:	fb08 f505 	mul.w	r5, r8, r5
 8022d2a:	fb09 5303 	mla	r3, r9, r3, r5
 8022d2e:	e661      	b.n	80229f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022d30:	4681      	mov	r9, r0
 8022d32:	e688      	b.n	8022a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022d34:	f1c1 0210 	rsb	r2, r1, #16
 8022d38:	4341      	muls	r1, r0
 8022d3a:	fb09 1902 	mla	r9, r9, r2, r1
 8022d3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022d42:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022d46:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022d4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022d4e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022d52:	ea42 0909 	orr.w	r9, r2, r9
 8022d56:	fa1f f289 	uxth.w	r2, r9
 8022d5a:	e71b      	b.n	8022b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022d5c:	803a      	strh	r2, [r7, #0]
 8022d5e:	e75d      	b.n	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d60:	f115 0e01 	adds.w	lr, r5, #1
 8022d64:	f53f af5a 	bmi.w	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d68:	4572      	cmp	r2, lr
 8022d6a:	f6ff af57 	blt.w	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d6e:	f110 0e01 	adds.w	lr, r0, #1
 8022d72:	f53f af53 	bmi.w	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d76:	4573      	cmp	r3, lr
 8022d78:	f6ff af50 	blt.w	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d7e:	9502      	str	r5, [sp, #8]
 8022d80:	b21b      	sxth	r3, r3
 8022d82:	b212      	sxth	r2, r2
 8022d84:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022d88:	9301      	str	r3, [sp, #4]
 8022d8a:	9200      	str	r2, [sp, #0]
 8022d8c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022d90:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022d94:	4639      	mov	r1, r7
 8022d96:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022d98:	f7ff fc04 	bl	80225a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022d9c:	e73e      	b.n	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022da0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022da4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022da6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022daa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022dac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022db0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022db2:	141f      	asrs	r7, r3, #16
 8022db4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022db6:	141b      	asrs	r3, r3, #16
 8022db8:	fb01 3707 	mla	r7, r1, r7, r3
 8022dbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022dbe:	fa1f fc82 	uxth.w	ip, r2
 8022dc2:	eb03 0a07 	add.w	sl, r3, r7
 8022dc6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022dca:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022dce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022dd2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022dd6:	b29b      	uxth	r3, r3
 8022dd8:	2d00      	cmp	r5, #0
 8022dda:	f000 813d 	beq.w	8023058 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022dde:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022de2:	940f      	str	r4, [sp, #60]	; 0x3c
 8022de4:	eb0a 0b01 	add.w	fp, sl, r1
 8022de8:	fa1f fa85 	uxth.w	sl, r5
 8022dec:	fb0a fc0c 	mul.w	ip, sl, ip
 8022df0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022df4:	fa1f fa8a 	uxth.w	sl, sl
 8022df8:	eba0 000c 	sub.w	r0, r0, ip
 8022dfc:	eba3 030a 	sub.w	r3, r3, sl
 8022e00:	b280      	uxth	r0, r0
 8022e02:	fb08 f000 	mul.w	r0, r8, r0
 8022e06:	b29b      	uxth	r3, r3
 8022e08:	fb09 0303 	mla	r3, r9, r3, r0
 8022e0c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022e0e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022e12:	9410      	str	r4, [sp, #64]	; 0x40
 8022e14:	fb0a 3300 	mla	r3, sl, r0, r3
 8022e18:	fb0c 3304 	mla	r3, ip, r4, r3
 8022e1c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022e20:	2b00      	cmp	r3, #0
 8022e22:	f000 810b 	beq.w	802303c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022e26:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022e28:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e2a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022e2e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022e32:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022e36:	f000 8114 	beq.w	8023062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022e3a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022e3e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022e42:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e46:	fb09 f707 	mul.w	r7, r9, r7
 8022e4a:	fb0a fc0c 	mul.w	ip, sl, ip
 8022e4e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022e52:	f107 0b20 	add.w	fp, r7, #32
 8022e56:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022e5a:	44cc      	add	ip, r9
 8022e5c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022e60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022e64:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022e68:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022e6c:	ea4c 0909 	orr.w	r9, ip, r9
 8022e70:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022e74:	8847      	ldrh	r7, [r0, #2]
 8022e76:	d019      	beq.n	8022eac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022e78:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022e7c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022e80:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e84:	fb08 f807 	mul.w	r8, r8, r7
 8022e88:	fb0a fc0c 	mul.w	ip, sl, ip
 8022e8c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022e90:	f108 0b20 	add.w	fp, r8, #32
 8022e94:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022e98:	44bc      	add	ip, r7
 8022e9a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022e9e:	0a3f      	lsrs	r7, r7, #8
 8022ea0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022ea4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ea8:	ea4c 0707 	orr.w	r7, ip, r7
 8022eac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022eb0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022eb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022eb8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ebc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022ec0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022ec4:	ea4c 0909 	orr.w	r9, ip, r9
 8022ec8:	ea4a 0707 	orr.w	r7, sl, r7
 8022ecc:	2d00      	cmp	r5, #0
 8022ece:	f000 80ca 	beq.w	8023066 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022ed2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ed6:	3901      	subs	r1, #1
 8022ed8:	0049      	lsls	r1, r1, #1
 8022eda:	3102      	adds	r1, #2
 8022edc:	eb00 0c01 	add.w	ip, r0, r1
 8022ee0:	5a41      	ldrh	r1, [r0, r1]
 8022ee2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022ee4:	28ff      	cmp	r0, #255	; 0xff
 8022ee6:	d019      	beq.n	8022f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022ee8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022eea:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022eee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ef2:	fb04 fa01 	mul.w	sl, r4, r1
 8022ef6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022efa:	fb08 f800 	mul.w	r8, r8, r0
 8022efe:	f10a 0020 	add.w	r0, sl, #32
 8022f02:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022f06:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022f0a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022f0e:	4441      	add	r1, r8
 8022f10:	0a00      	lsrs	r0, r0, #8
 8022f12:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022f16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f1a:	4301      	orrs	r1, r0
 8022f1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022f1e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022f22:	2cff      	cmp	r4, #255	; 0xff
 8022f24:	d01a      	beq.n	8022f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022f26:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022f2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f2e:	fb04 fa00 	mul.w	sl, r4, r0
 8022f32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022f36:	fb08 f80c 	mul.w	r8, r8, ip
 8022f3a:	f10a 0c20 	add.w	ip, sl, #32
 8022f3e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022f42:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022f46:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022f4a:	4440      	add	r0, r8
 8022f4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022f50:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022f54:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022f58:	ea40 000c 	orr.w	r0, r0, ip
 8022f5c:	fb15 fc02 	smulbb	ip, r5, r2
 8022f60:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022f64:	f1c5 0810 	rsb	r8, r5, #16
 8022f68:	eba8 0802 	sub.w	r8, r8, r2
 8022f6c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022f70:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022f74:	437a      	muls	r2, r7
 8022f76:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022f7a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022f7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f86:	fb09 2208 	mla	r2, r9, r8, r2
 8022f8a:	ea4a 0101 	orr.w	r1, sl, r1
 8022f8e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022f92:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f9a:	fb05 2201 	mla	r2, r5, r1, r2
 8022f9e:	ea4b 0000 	orr.w	r0, fp, r0
 8022fa2:	fb0c 2200 	mla	r2, ip, r0, r2
 8022fa6:	0d57      	lsrs	r7, r2, #21
 8022fa8:	0952      	lsrs	r2, r2, #5
 8022faa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022fae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022fb2:	433a      	orrs	r2, r7
 8022fb4:	2bff      	cmp	r3, #255	; 0xff
 8022fb6:	b292      	uxth	r2, r2
 8022fb8:	d102      	bne.n	8022fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022fba:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022fbc:	29ff      	cmp	r1, #255	; 0xff
 8022fbe:	d063      	beq.n	8023088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022fc0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022fc2:	f8be 1000 	ldrh.w	r1, [lr]
 8022fc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022fc8:	4343      	muls	r3, r0
 8022fca:	1c58      	adds	r0, r3, #1
 8022fcc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022fd0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022fd4:	1208      	asrs	r0, r1, #8
 8022fd6:	b2db      	uxtb	r3, r3
 8022fd8:	1215      	asrs	r5, r2, #8
 8022fda:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022fde:	fb10 f003 	smulbb	r0, r0, r3
 8022fe2:	10cf      	asrs	r7, r1, #3
 8022fe4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022fe8:	00c9      	lsls	r1, r1, #3
 8022fea:	fb05 0504 	mla	r5, r5, r4, r0
 8022fee:	b2c9      	uxtb	r1, r1
 8022ff0:	10d0      	asrs	r0, r2, #3
 8022ff2:	00d2      	lsls	r2, r2, #3
 8022ff4:	fb11 f103 	smulbb	r1, r1, r3
 8022ff8:	b2d2      	uxtb	r2, r2
 8022ffa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022ffe:	fb02 1204 	mla	r2, r2, r4, r1
 8023002:	fb17 f703 	smulbb	r7, r7, r3
 8023006:	b2ad      	uxth	r5, r5
 8023008:	b292      	uxth	r2, r2
 802300a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802300e:	fb00 7004 	mla	r0, r0, r4, r7
 8023012:	1c6b      	adds	r3, r5, #1
 8023014:	1c57      	adds	r7, r2, #1
 8023016:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802301a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802301e:	b280      	uxth	r0, r0
 8023020:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023024:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023028:	433d      	orrs	r5, r7
 802302a:	1c47      	adds	r7, r0, #1
 802302c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023030:	097f      	lsrs	r7, r7, #5
 8023032:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023036:	433d      	orrs	r5, r7
 8023038:	f8ae 5000 	strh.w	r5, [lr]
 802303c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802303e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023040:	4413      	add	r3, r2
 8023042:	9321      	str	r3, [sp, #132]	; 0x84
 8023044:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023046:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023048:	441a      	add	r2, r3
 802304a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802304c:	9222      	str	r2, [sp, #136]	; 0x88
 802304e:	3b01      	subs	r3, #1
 8023050:	f10e 0e02 	add.w	lr, lr, #2
 8023054:	9313      	str	r3, [sp, #76]	; 0x4c
 8023056:	e61c      	b.n	8022c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023058:	fb08 f000 	mul.w	r0, r8, r0
 802305c:	fb09 0303 	mla	r3, r9, r3, r0
 8023060:	e6dc      	b.n	8022e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8023062:	46b9      	mov	r9, r7
 8023064:	e704      	b.n	8022e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8023066:	f1c2 0110 	rsb	r1, r2, #16
 802306a:	437a      	muls	r2, r7
 802306c:	fb09 2901 	mla	r9, r9, r1, r2
 8023070:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023074:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023078:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802307c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023080:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023084:	4302      	orrs	r2, r0
 8023086:	e795      	b.n	8022fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023088:	f8ae 2000 	strh.w	r2, [lr]
 802308c:	e7d6      	b.n	802303c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802308e:	b017      	add	sp, #92	; 0x5c
 8023090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023098:	b085      	sub	sp, #20
 802309a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802309e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80230a2:	9103      	str	r1, [sp, #12]
 80230a4:	fb00 7406 	mla	r4, r0, r6, r7
 80230a8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80230ac:	2800      	cmp	r0, #0
 80230ae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80230b2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80230b6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80230ba:	9501      	str	r5, [sp, #4]
 80230bc:	eb02 0904 	add.w	r9, r2, r4
 80230c0:	f2c0 8141 	blt.w	8023346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80230c4:	4583      	cmp	fp, r0
 80230c6:	f340 813e 	ble.w	8023346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80230ca:	2f00      	cmp	r7, #0
 80230cc:	f2c0 8137 	blt.w	802333e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80230d0:	42be      	cmp	r6, r7
 80230d2:	f340 8134 	ble.w	802333e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80230d6:	f812 c004 	ldrb.w	ip, [r2, r4]
 80230da:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80230de:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80230e2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80230e6:	4355      	muls	r5, r2
 80230e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230ec:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80230f0:	fb0c f203 	mul.w	r2, ip, r3
 80230f4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80230f8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80230fc:	441d      	add	r5, r3
 80230fe:	f102 0320 	add.w	r3, r2, #32
 8023102:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023106:	0a1b      	lsrs	r3, r3, #8
 8023108:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802310c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023110:	431c      	orrs	r4, r3
 8023112:	1c7b      	adds	r3, r7, #1
 8023114:	f100 811c 	bmi.w	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023118:	429e      	cmp	r6, r3
 802311a:	f340 8119 	ble.w	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802311e:	2900      	cmp	r1, #0
 8023120:	f000 8119 	beq.w	8023356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023124:	9a01      	ldr	r2, [sp, #4]
 8023126:	f899 3001 	ldrb.w	r3, [r9, #1]
 802312a:	8855      	ldrh	r5, [r2, #2]
 802312c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023130:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023134:	fb08 f802 	mul.w	r8, r8, r2
 8023138:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802313c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023140:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023144:	435d      	muls	r5, r3
 8023146:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802314a:	44d0      	add	r8, sl
 802314c:	f105 0a20 	add.w	sl, r5, #32
 8023150:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023154:	0a2d      	lsrs	r5, r5, #8
 8023156:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802315a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802315e:	432a      	orrs	r2, r5
 8023160:	3001      	adds	r0, #1
 8023162:	f100 80fe 	bmi.w	8023362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023166:	4583      	cmp	fp, r0
 8023168:	f340 80fb 	ble.w	8023362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802316c:	f1be 0f00 	cmp.w	lr, #0
 8023170:	f000 80fc 	beq.w	802336c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023174:	2f00      	cmp	r7, #0
 8023176:	f2c0 80f1 	blt.w	802335c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802317a:	42be      	cmp	r6, r7
 802317c:	f340 80ee 	ble.w	802335c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023180:	9801      	ldr	r0, [sp, #4]
 8023182:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023186:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802318a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802318e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023192:	fb0a fa00 	mul.w	sl, sl, r0
 8023196:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802319a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802319e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80231a2:	fb05 f808 	mul.w	r8, r5, r8
 80231a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80231aa:	4482      	add	sl, r0
 80231ac:	f108 0020 	add.w	r0, r8, #32
 80231b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80231b4:	0a00      	lsrs	r0, r0, #8
 80231b6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80231ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231be:	ea4b 0b00 	orr.w	fp, fp, r0
 80231c2:	3701      	adds	r7, #1
 80231c4:	f100 80d7 	bmi.w	8023376 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80231c8:	42be      	cmp	r6, r7
 80231ca:	f340 80d4 	ble.w	8023376 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80231ce:	2900      	cmp	r1, #0
 80231d0:	f000 80d4 	beq.w	802337c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80231d4:	3601      	adds	r6, #1
 80231d6:	9801      	ldr	r0, [sp, #4]
 80231d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 80231dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80231e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80231e4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80231e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231ec:	fb09 f906 	mul.w	r9, r9, r6
 80231f0:	fb07 f800 	mul.w	r8, r7, r0
 80231f4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80231f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80231fc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023200:	44d1      	add	r9, sl
 8023202:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023206:	f108 0020 	add.w	r0, r8, #32
 802320a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802320e:	0a00      	lsrs	r0, r0, #8
 8023210:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023214:	4330      	orrs	r0, r6
 8023216:	b28e      	uxth	r6, r1
 8023218:	fa1f f98e 	uxth.w	r9, lr
 802321c:	fb06 f809 	mul.w	r8, r6, r9
 8023220:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023224:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023228:	0136      	lsls	r6, r6, #4
 802322a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802322e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023232:	9601      	str	r6, [sp, #4]
 8023234:	ea4a 0404 	orr.w	r4, sl, r4
 8023238:	fa1f f689 	uxth.w	r6, r9
 802323c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023240:	fb11 f90e 	smulbb	r9, r1, lr
 8023244:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023248:	9602      	str	r6, [sp, #8]
 802324a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802324e:	4626      	mov	r6, r4
 8023250:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023254:	f1ce 0410 	rsb	r4, lr, #16
 8023258:	1a64      	subs	r4, r4, r1
 802325a:	ea4a 0202 	orr.w	r2, sl, r2
 802325e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023262:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023266:	434a      	muls	r2, r1
 8023268:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802326c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023270:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023274:	fb04 2406 	mla	r4, r4, r6, r2
 8023278:	ea4a 0000 	orr.w	r0, sl, r0
 802327c:	fb09 4200 	mla	r2, r9, r0, r4
 8023280:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023284:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023288:	9801      	ldr	r0, [sp, #4]
 802328a:	9903      	ldr	r1, [sp, #12]
 802328c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023290:	ea44 0b0b 	orr.w	fp, r4, fp
 8023294:	9c02      	ldr	r4, [sp, #8]
 8023296:	8809      	ldrh	r1, [r1, #0]
 8023298:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802329c:	1b00      	subs	r0, r0, r4
 802329e:	9c01      	ldr	r4, [sp, #4]
 80232a0:	eba4 0608 	sub.w	r6, r4, r8
 80232a4:	b2b6      	uxth	r6, r6
 80232a6:	b280      	uxth	r0, r0
 80232a8:	4373      	muls	r3, r6
 80232aa:	fb0c 3300 	mla	r3, ip, r0, r3
 80232ae:	9802      	ldr	r0, [sp, #8]
 80232b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80232b4:	fb00 3505 	mla	r5, r0, r5, r3
 80232b8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80232bc:	fb08 5707 	mla	r7, r8, r7, r5
 80232c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80232c4:	120b      	asrs	r3, r1, #8
 80232c6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80232ca:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80232ce:	b2ff      	uxtb	r7, r7
 80232d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232d4:	10c8      	asrs	r0, r1, #3
 80232d6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80232da:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80232de:	00c9      	lsls	r1, r1, #3
 80232e0:	437b      	muls	r3, r7
 80232e2:	ea42 0e0e 	orr.w	lr, r2, lr
 80232e6:	b2c9      	uxtb	r1, r1
 80232e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80232ec:	fa1f f28e 	uxth.w	r2, lr
 80232f0:	4378      	muls	r0, r7
 80232f2:	434f      	muls	r7, r1
 80232f4:	1c59      	adds	r1, r3, #1
 80232f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80232fa:	1213      	asrs	r3, r2, #8
 80232fc:	f023 0307 	bic.w	r3, r3, #7
 8023300:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023304:	1c41      	adds	r1, r0, #1
 8023306:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802330a:	10d1      	asrs	r1, r2, #3
 802330c:	f021 0103 	bic.w	r1, r1, #3
 8023310:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023314:	021b      	lsls	r3, r3, #8
 8023316:	00c9      	lsls	r1, r1, #3
 8023318:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802331c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023320:	430b      	orrs	r3, r1
 8023322:	1c79      	adds	r1, r7, #1
 8023324:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023328:	00d2      	lsls	r2, r2, #3
 802332a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802332e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023332:	431a      	orrs	r2, r3
 8023334:	9b03      	ldr	r3, [sp, #12]
 8023336:	801a      	strh	r2, [r3, #0]
 8023338:	b005      	add	sp, #20
 802333a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802333e:	f04f 0c00 	mov.w	ip, #0
 8023342:	4664      	mov	r4, ip
 8023344:	e6e5      	b.n	8023112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8023346:	2300      	movs	r3, #0
 8023348:	469c      	mov	ip, r3
 802334a:	461a      	mov	r2, r3
 802334c:	461c      	mov	r4, r3
 802334e:	e707      	b.n	8023160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023350:	2300      	movs	r3, #0
 8023352:	461a      	mov	r2, r3
 8023354:	e704      	b.n	8023160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023356:	460b      	mov	r3, r1
 8023358:	460a      	mov	r2, r1
 802335a:	e701      	b.n	8023160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802335c:	2500      	movs	r5, #0
 802335e:	46ab      	mov	fp, r5
 8023360:	e72f      	b.n	80231c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023362:	2700      	movs	r7, #0
 8023364:	463d      	mov	r5, r7
 8023366:	4638      	mov	r0, r7
 8023368:	46bb      	mov	fp, r7
 802336a:	e754      	b.n	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802336c:	4677      	mov	r7, lr
 802336e:	4675      	mov	r5, lr
 8023370:	4670      	mov	r0, lr
 8023372:	46f3      	mov	fp, lr
 8023374:	e74f      	b.n	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023376:	2700      	movs	r7, #0
 8023378:	4638      	mov	r0, r7
 802337a:	e74c      	b.n	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802337c:	460f      	mov	r7, r1
 802337e:	4608      	mov	r0, r1
 8023380:	e749      	b.n	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023388:	b093      	sub	sp, #76	; 0x4c
 802338a:	9210      	str	r2, [sp, #64]	; 0x40
 802338c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802338e:	910e      	str	r1, [sp, #56]	; 0x38
 8023390:	9306      	str	r3, [sp, #24]
 8023392:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023396:	9011      	str	r0, [sp, #68]	; 0x44
 8023398:	6850      	ldr	r0, [r2, #4]
 802339a:	6812      	ldr	r2, [r2, #0]
 802339c:	fb00 1303 	mla	r3, r0, r3, r1
 80233a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80233a4:	9307      	str	r3, [sp, #28]
 80233a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233a8:	681b      	ldr	r3, [r3, #0]
 80233aa:	9308      	str	r3, [sp, #32]
 80233ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233ae:	685b      	ldr	r3, [r3, #4]
 80233b0:	9309      	str	r3, [sp, #36]	; 0x24
 80233b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80233b4:	2b00      	cmp	r3, #0
 80233b6:	dc03      	bgt.n	80233c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80233b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80233ba:	2b00      	cmp	r3, #0
 80233bc:	f340 83b4 	ble.w	8023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80233c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80233ca:	1e48      	subs	r0, r1, #1
 80233cc:	1e55      	subs	r5, r2, #1
 80233ce:	9b06      	ldr	r3, [sp, #24]
 80233d0:	2b00      	cmp	r3, #0
 80233d2:	f340 8163 	ble.w	802369c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80233d6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80233d8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80233da:	1436      	asrs	r6, r6, #16
 80233dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80233e0:	d406      	bmi.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80233e2:	4286      	cmp	r6, r0
 80233e4:	da04      	bge.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80233e6:	2b00      	cmp	r3, #0
 80233e8:	db02      	blt.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80233ea:	42ab      	cmp	r3, r5
 80233ec:	f2c0 8157 	blt.w	802369e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80233f0:	3601      	adds	r6, #1
 80233f2:	f100 8144 	bmi.w	802367e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80233f6:	42b1      	cmp	r1, r6
 80233f8:	f2c0 8141 	blt.w	802367e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80233fc:	3301      	adds	r3, #1
 80233fe:	f100 813e 	bmi.w	802367e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023402:	429a      	cmp	r2, r3
 8023404:	f2c0 813b 	blt.w	802367e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023408:	9b06      	ldr	r3, [sp, #24]
 802340a:	9f07      	ldr	r7, [sp, #28]
 802340c:	930f      	str	r3, [sp, #60]	; 0x3c
 802340e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023412:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023414:	2b00      	cmp	r3, #0
 8023416:	f340 8164 	ble.w	80236e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802341a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802341c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802341e:	1418      	asrs	r0, r3, #16
 8023420:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023422:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023426:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023428:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802342c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802342e:	142d      	asrs	r5, r5, #16
 8023430:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023434:	f100 81ee 	bmi.w	8023814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023438:	f102 3eff 	add.w	lr, r2, #4294967295
 802343c:	4575      	cmp	r5, lr
 802343e:	f280 81e9 	bge.w	8023814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023442:	2800      	cmp	r0, #0
 8023444:	f2c0 81e6 	blt.w	8023814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023448:	f103 3eff 	add.w	lr, r3, #4294967295
 802344c:	4570      	cmp	r0, lr
 802344e:	f280 81e1 	bge.w	8023814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023452:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023454:	b212      	sxth	r2, r2
 8023456:	fb00 5002 	mla	r0, r0, r2, r5
 802345a:	fa1f fe81 	uxth.w	lr, r1
 802345e:	eb03 0a00 	add.w	sl, r3, r0
 8023462:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023466:	f813 9000 	ldrb.w	r9, [r3, r0]
 802346a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802346e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023472:	b29b      	uxth	r3, r3
 8023474:	f1bc 0f00 	cmp.w	ip, #0
 8023478:	f000 8179 	beq.w	802376e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802347c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023480:	940a      	str	r4, [sp, #40]	; 0x28
 8023482:	eb0a 0b02 	add.w	fp, sl, r2
 8023486:	fa1f fa8c 	uxth.w	sl, ip
 802348a:	fb0a fe0e 	mul.w	lr, sl, lr
 802348e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023492:	fa1f fa8a 	uxth.w	sl, sl
 8023496:	eba5 050e 	sub.w	r5, r5, lr
 802349a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802349e:	940b      	str	r4, [sp, #44]	; 0x2c
 80234a0:	eba3 030a 	sub.w	r3, r3, sl
 80234a4:	b2ad      	uxth	r5, r5
 80234a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80234a8:	b29b      	uxth	r3, r3
 80234aa:	fb08 f505 	mul.w	r5, r8, r5
 80234ae:	fb09 5303 	mla	r3, r9, r3, r5
 80234b2:	fb0a 3304 	mla	r3, sl, r4, r3
 80234b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80234b8:	fb0e 3304 	mla	r3, lr, r4, r3
 80234bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80234c0:	2b00      	cmp	r3, #0
 80234c2:	f000 80cf 	beq.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234c6:	9c08      	ldr	r4, [sp, #32]
 80234c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80234cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80234d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80234d4:	f000 8150 	beq.w	8023778 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80234d8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80234dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80234e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234e4:	fb09 f000 	mul.w	r0, r9, r0
 80234e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80234ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80234f0:	f100 0b20 	add.w	fp, r0, #32
 80234f4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80234f8:	44ce      	add	lr, r9
 80234fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80234fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023502:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023506:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802350a:	ea4e 0909 	orr.w	r9, lr, r9
 802350e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023512:	8868      	ldrh	r0, [r5, #2]
 8023514:	d019      	beq.n	802354a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023516:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802351a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802351e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023522:	fb08 f800 	mul.w	r8, r8, r0
 8023526:	fb0a fe0e 	mul.w	lr, sl, lr
 802352a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802352e:	f108 0b20 	add.w	fp, r8, #32
 8023532:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023536:	4486      	add	lr, r0
 8023538:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802353c:	0a00      	lsrs	r0, r0, #8
 802353e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023542:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023546:	ea4e 0000 	orr.w	r0, lr, r0
 802354a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802354e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023552:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023556:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802355a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802355e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023562:	ea4e 0909 	orr.w	r9, lr, r9
 8023566:	ea4a 0000 	orr.w	r0, sl, r0
 802356a:	f1bc 0f00 	cmp.w	ip, #0
 802356e:	f000 8105 	beq.w	802377c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023572:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023576:	3a01      	subs	r2, #1
 8023578:	0052      	lsls	r2, r2, #1
 802357a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802357c:	3202      	adds	r2, #2
 802357e:	2cff      	cmp	r4, #255	; 0xff
 8023580:	eb05 0e02 	add.w	lr, r5, r2
 8023584:	5aaa      	ldrh	r2, [r5, r2]
 8023586:	d018      	beq.n	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023588:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802358c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023590:	fb04 fa02 	mul.w	sl, r4, r2
 8023594:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023598:	fb08 f805 	mul.w	r8, r8, r5
 802359c:	f10a 0520 	add.w	r5, sl, #32
 80235a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80235a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80235a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80235ac:	4442      	add	r2, r8
 80235ae:	0a2d      	lsrs	r5, r5, #8
 80235b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80235b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80235b8:	432a      	orrs	r2, r5
 80235ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80235bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80235c0:	2cff      	cmp	r4, #255	; 0xff
 80235c2:	d01a      	beq.n	80235fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80235c4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80235c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80235cc:	fb04 fa05 	mul.w	sl, r4, r5
 80235d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80235d4:	fb08 f80e 	mul.w	r8, r8, lr
 80235d8:	f10a 0e20 	add.w	lr, sl, #32
 80235dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80235e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80235e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80235e8:	4445      	add	r5, r8
 80235ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80235f2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80235f6:	ea45 050e 	orr.w	r5, r5, lr
 80235fa:	fb1c fe01 	smulbb	lr, ip, r1
 80235fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023602:	f1cc 0810 	rsb	r8, ip, #16
 8023606:	eba8 0801 	sub.w	r8, r8, r1
 802360a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802360e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023612:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023616:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802361a:	4341      	muls	r1, r0
 802361c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023620:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023624:	ea4a 0202 	orr.w	r2, sl, r2
 8023628:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802362c:	fb09 1108 	mla	r1, r9, r8, r1
 8023630:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023634:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023638:	fb0c 1102 	mla	r1, ip, r2, r1
 802363c:	ea4b 0505 	orr.w	r5, fp, r5
 8023640:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023644:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023648:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802364c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023650:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023654:	ea42 0e0e 	orr.w	lr, r2, lr
 8023658:	fa1f f28e 	uxth.w	r2, lr
 802365c:	2bff      	cmp	r3, #255	; 0xff
 802365e:	f040 80a1 	bne.w	80237a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023662:	803a      	strh	r2, [r7, #0]
 8023664:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023666:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023668:	4413      	add	r3, r2
 802366a:	931d      	str	r3, [sp, #116]	; 0x74
 802366c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802366e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023670:	441a      	add	r2, r3
 8023672:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023674:	921e      	str	r2, [sp, #120]	; 0x78
 8023676:	3b01      	subs	r3, #1
 8023678:	3702      	adds	r7, #2
 802367a:	930f      	str	r3, [sp, #60]	; 0x3c
 802367c:	e6c9      	b.n	8023412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802367e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023680:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023682:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023684:	4433      	add	r3, r6
 8023686:	931d      	str	r3, [sp, #116]	; 0x74
 8023688:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802368a:	441c      	add	r4, r3
 802368c:	9b06      	ldr	r3, [sp, #24]
 802368e:	941e      	str	r4, [sp, #120]	; 0x78
 8023690:	3b01      	subs	r3, #1
 8023692:	9306      	str	r3, [sp, #24]
 8023694:	9b07      	ldr	r3, [sp, #28]
 8023696:	3302      	adds	r3, #2
 8023698:	9307      	str	r3, [sp, #28]
 802369a:	e698      	b.n	80233ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802369c:	d028      	beq.n	80236f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802369e:	9b06      	ldr	r3, [sp, #24]
 80236a0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80236a2:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80236a4:	3b01      	subs	r3, #1
 80236a6:	fb00 5003 	mla	r0, r0, r3, r5
 80236aa:	1400      	asrs	r0, r0, #16
 80236ac:	f53f aeac 	bmi.w	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80236b0:	3901      	subs	r1, #1
 80236b2:	4288      	cmp	r0, r1
 80236b4:	f6bf aea8 	bge.w	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80236b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80236ba:	981e      	ldr	r0, [sp, #120]	; 0x78
 80236bc:	fb01 0303 	mla	r3, r1, r3, r0
 80236c0:	141b      	asrs	r3, r3, #16
 80236c2:	f53f aea1 	bmi.w	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80236c6:	3a01      	subs	r2, #1
 80236c8:	4293      	cmp	r3, r2
 80236ca:	f6bf ae9d 	bge.w	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80236ce:	9b06      	ldr	r3, [sp, #24]
 80236d0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80236d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80236d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80236da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80236dc:	2b00      	cmp	r3, #0
 80236de:	f300 80b6 	bgt.w	802384e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80236e2:	9b06      	ldr	r3, [sp, #24]
 80236e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80236e8:	9b07      	ldr	r3, [sp, #28]
 80236ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80236ee:	9307      	str	r3, [sp, #28]
 80236f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80236f2:	2b00      	cmp	r3, #0
 80236f4:	f340 8218 	ble.w	8023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80236f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80236fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023700:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023704:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023706:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802370a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802370e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023712:	eef0 6a62 	vmov.f32	s13, s5
 8023716:	ee61 7a27 	vmul.f32	s15, s2, s15
 802371a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802371e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023722:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023726:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802372a:	eef0 6a43 	vmov.f32	s13, s6
 802372e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023732:	ee12 2a90 	vmov	r2, s5
 8023736:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802373a:	fb92 f3f3 	sdiv	r3, r2, r3
 802373e:	ee13 2a10 	vmov	r2, s6
 8023742:	931f      	str	r3, [sp, #124]	; 0x7c
 8023744:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023746:	fb92 f3f3 	sdiv	r3, r2, r3
 802374a:	9320      	str	r3, [sp, #128]	; 0x80
 802374c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802374e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023750:	3b01      	subs	r3, #1
 8023752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023756:	930e      	str	r3, [sp, #56]	; 0x38
 8023758:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802375a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802375e:	bf08      	it	eq
 8023760:	4613      	moveq	r3, r2
 8023762:	9306      	str	r3, [sp, #24]
 8023764:	eeb0 3a67 	vmov.f32	s6, s15
 8023768:	eef0 2a47 	vmov.f32	s5, s14
 802376c:	e621      	b.n	80233b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802376e:	fb08 f505 	mul.w	r5, r8, r5
 8023772:	fb09 5303 	mla	r3, r9, r3, r5
 8023776:	e6a1      	b.n	80234bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023778:	4681      	mov	r9, r0
 802377a:	e6c8      	b.n	802350e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802377c:	f1c1 0210 	rsb	r2, r1, #16
 8023780:	4341      	muls	r1, r0
 8023782:	fb09 1902 	mla	r9, r9, r2, r1
 8023786:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802378a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802378e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023792:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023796:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802379a:	ea42 0909 	orr.w	r9, r2, r9
 802379e:	fa1f f289 	uxth.w	r2, r9
 80237a2:	e75b      	b.n	802365c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80237a4:	f8b7 c000 	ldrh.w	ip, [r7]
 80237a8:	43db      	mvns	r3, r3
 80237aa:	ea4f 202c 	mov.w	r0, ip, asr #8
 80237ae:	fa5f fe83 	uxtb.w	lr, r3
 80237b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80237b6:	fb00 f00e 	mul.w	r0, r0, lr
 80237ba:	1c41      	adds	r1, r0, #1
 80237bc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80237c0:	1211      	asrs	r1, r2, #8
 80237c2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80237c6:	f021 0107 	bic.w	r1, r1, #7
 80237ca:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80237ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80237d2:	48d7      	ldr	r0, [pc, #860]	; (8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80237d4:	fb05 f50e 	mul.w	r5, r5, lr
 80237d8:	b2c9      	uxtb	r1, r1
 80237da:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80237de:	1c69      	adds	r1, r5, #1
 80237e0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80237e4:	10d1      	asrs	r1, r2, #3
 80237e6:	f021 0103 	bic.w	r1, r1, #3
 80237ea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80237ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80237f2:	b2db      	uxtb	r3, r3
 80237f4:	00c9      	lsls	r1, r1, #3
 80237f6:	fb03 f30e 	mul.w	r3, r3, lr
 80237fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80237fe:	4301      	orrs	r1, r0
 8023800:	1c58      	adds	r0, r3, #1
 8023802:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023806:	00d2      	lsls	r2, r2, #3
 8023808:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802380c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023810:	430a      	orrs	r2, r1
 8023812:	e726      	b.n	8023662 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023814:	f115 0e01 	adds.w	lr, r5, #1
 8023818:	f53f af24 	bmi.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802381c:	4572      	cmp	r2, lr
 802381e:	f6ff af21 	blt.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023822:	f110 0e01 	adds.w	lr, r0, #1
 8023826:	f53f af1d 	bmi.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802382a:	4573      	cmp	r3, lr
 802382c:	f6ff af1a 	blt.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023830:	b21b      	sxth	r3, r3
 8023832:	b212      	sxth	r2, r2
 8023834:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023838:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802383c:	9301      	str	r3, [sp, #4]
 802383e:	9200      	str	r2, [sp, #0]
 8023840:	4639      	mov	r1, r7
 8023842:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023846:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023848:	f7ff fc24 	bl	8023094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802384c:	e70a      	b.n	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802384e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023850:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023854:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023856:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802385a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802385c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023860:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023862:	141f      	asrs	r7, r3, #16
 8023864:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023866:	141b      	asrs	r3, r3, #16
 8023868:	fb01 3707 	mla	r7, r1, r7, r3
 802386c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802386e:	fa1f fc82 	uxth.w	ip, r2
 8023872:	eb03 0a07 	add.w	sl, r3, r7
 8023876:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802387a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802387e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023882:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023886:	b29b      	uxth	r3, r3
 8023888:	2d00      	cmp	r5, #0
 802388a:	f000 80fe 	beq.w	8023a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802388e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023892:	940c      	str	r4, [sp, #48]	; 0x30
 8023894:	eb0a 0b01 	add.w	fp, sl, r1
 8023898:	fa1f fa85 	uxth.w	sl, r5
 802389c:	fb0a fc0c 	mul.w	ip, sl, ip
 80238a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80238a4:	fa1f fa8a 	uxth.w	sl, sl
 80238a8:	eba0 000c 	sub.w	r0, r0, ip
 80238ac:	eba3 030a 	sub.w	r3, r3, sl
 80238b0:	b280      	uxth	r0, r0
 80238b2:	fb08 f000 	mul.w	r0, r8, r0
 80238b6:	b29b      	uxth	r3, r3
 80238b8:	fb09 0303 	mla	r3, r9, r3, r0
 80238bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80238be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80238c2:	940d      	str	r4, [sp, #52]	; 0x34
 80238c4:	fb0a 3300 	mla	r3, sl, r0, r3
 80238c8:	fb0c 3304 	mla	r3, ip, r4, r3
 80238cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80238d0:	2b00      	cmp	r3, #0
 80238d2:	f000 80cc 	beq.w	8023a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80238d6:	9808      	ldr	r0, [sp, #32]
 80238d8:	9c08      	ldr	r4, [sp, #32]
 80238da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80238de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80238e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80238e6:	f000 80d5 	beq.w	8023a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80238ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80238ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80238f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80238f6:	fb09 f707 	mul.w	r7, r9, r7
 80238fa:	fb0a fc0c 	mul.w	ip, sl, ip
 80238fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023902:	f107 0b20 	add.w	fp, r7, #32
 8023906:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802390a:	44cc      	add	ip, r9
 802390c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023910:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023914:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023918:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802391c:	ea4c 0909 	orr.w	r9, ip, r9
 8023920:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023924:	8847      	ldrh	r7, [r0, #2]
 8023926:	d019      	beq.n	802395c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023928:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802392c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023930:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023934:	fb08 f807 	mul.w	r8, r8, r7
 8023938:	fb0a fc0c 	mul.w	ip, sl, ip
 802393c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023940:	f108 0b20 	add.w	fp, r8, #32
 8023944:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023948:	44bc      	add	ip, r7
 802394a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802394e:	0a3f      	lsrs	r7, r7, #8
 8023950:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023954:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023958:	ea4c 0707 	orr.w	r7, ip, r7
 802395c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023960:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023964:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023968:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802396c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023970:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023974:	ea4c 0909 	orr.w	r9, ip, r9
 8023978:	ea4a 0707 	orr.w	r7, sl, r7
 802397c:	2d00      	cmp	r5, #0
 802397e:	f000 808b 	beq.w	8023a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8023982:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023986:	3901      	subs	r1, #1
 8023988:	0049      	lsls	r1, r1, #1
 802398a:	3102      	adds	r1, #2
 802398c:	eb00 0c01 	add.w	ip, r0, r1
 8023990:	5a41      	ldrh	r1, [r0, r1]
 8023992:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023994:	28ff      	cmp	r0, #255	; 0xff
 8023996:	d019      	beq.n	80239cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023998:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802399a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802399e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80239a2:	fb04 fa01 	mul.w	sl, r4, r1
 80239a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80239aa:	fb08 f800 	mul.w	r8, r8, r0
 80239ae:	f10a 0020 	add.w	r0, sl, #32
 80239b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80239b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80239ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80239be:	4441      	add	r1, r8
 80239c0:	0a00      	lsrs	r0, r0, #8
 80239c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80239c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80239ca:	4301      	orrs	r1, r0
 80239cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80239ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80239d2:	2cff      	cmp	r4, #255	; 0xff
 80239d4:	d01a      	beq.n	8023a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80239d6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80239da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80239de:	fb04 fa00 	mul.w	sl, r4, r0
 80239e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80239e6:	fb08 f80c 	mul.w	r8, r8, ip
 80239ea:	f10a 0c20 	add.w	ip, sl, #32
 80239ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80239f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80239f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80239fa:	4440      	add	r0, r8
 80239fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a00:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023a04:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023a08:	ea40 000c 	orr.w	r0, r0, ip
 8023a0c:	fb15 fc02 	smulbb	ip, r5, r2
 8023a10:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023a14:	f1c5 0810 	rsb	r8, r5, #16
 8023a18:	eba8 0802 	sub.w	r8, r8, r2
 8023a1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023a20:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023a24:	437a      	muls	r2, r7
 8023a26:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023a2a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023a2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023a36:	fb09 2208 	mla	r2, r9, r8, r2
 8023a3a:	ea4a 0101 	orr.w	r1, sl, r1
 8023a3e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023a42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023a46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023a4a:	fb05 2201 	mla	r2, r5, r1, r2
 8023a4e:	ea4b 0000 	orr.w	r0, fp, r0
 8023a52:	fb0c 2200 	mla	r2, ip, r0, r2
 8023a56:	0d57      	lsrs	r7, r2, #21
 8023a58:	0952      	lsrs	r2, r2, #5
 8023a5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023a5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023a62:	433a      	orrs	r2, r7
 8023a64:	2bff      	cmp	r3, #255	; 0xff
 8023a66:	b292      	uxth	r2, r2
 8023a68:	d127      	bne.n	8023aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023a6a:	f8ae 2000 	strh.w	r2, [lr]
 8023a6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023a70:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023a72:	4413      	add	r3, r2
 8023a74:	931d      	str	r3, [sp, #116]	; 0x74
 8023a76:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023a78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a7a:	441a      	add	r2, r3
 8023a7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023a7e:	921e      	str	r2, [sp, #120]	; 0x78
 8023a80:	3b01      	subs	r3, #1
 8023a82:	f10e 0e02 	add.w	lr, lr, #2
 8023a86:	930f      	str	r3, [sp, #60]	; 0x3c
 8023a88:	e627      	b.n	80236da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023a8a:	fb08 f000 	mul.w	r0, r8, r0
 8023a8e:	fb09 0303 	mla	r3, r9, r3, r0
 8023a92:	e71b      	b.n	80238cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023a94:	46b9      	mov	r9, r7
 8023a96:	e743      	b.n	8023920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023a98:	f1c2 0110 	rsb	r1, r2, #16
 8023a9c:	437a      	muls	r2, r7
 8023a9e:	fb09 2901 	mla	r9, r9, r1, r2
 8023aa2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023aa6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023aaa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023aae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023ab2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ab6:	4302      	orrs	r2, r0
 8023ab8:	e7d4      	b.n	8023a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023aba:	f8be 7000 	ldrh.w	r7, [lr]
 8023abe:	4c1c      	ldr	r4, [pc, #112]	; (8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023ac0:	43db      	mvns	r3, r3
 8023ac2:	1238      	asrs	r0, r7, #8
 8023ac4:	fa5f fc83 	uxtb.w	ip, r3
 8023ac8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023acc:	10fd      	asrs	r5, r7, #3
 8023ace:	fb00 f00c 	mul.w	r0, r0, ip
 8023ad2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023ad6:	fb05 f10c 	mul.w	r1, r5, ip
 8023ada:	1c45      	adds	r5, r0, #1
 8023adc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023ae0:	1215      	asrs	r5, r2, #8
 8023ae2:	f025 0507 	bic.w	r5, r5, #7
 8023ae6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023aea:	1c4d      	adds	r5, r1, #1
 8023aec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023af0:	10d1      	asrs	r1, r2, #3
 8023af2:	f021 0103 	bic.w	r1, r1, #3
 8023af6:	00fb      	lsls	r3, r7, #3
 8023af8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023afc:	b2db      	uxtb	r3, r3
 8023afe:	b2c0      	uxtb	r0, r0
 8023b00:	00c9      	lsls	r1, r1, #3
 8023b02:	fb03 f30c 	mul.w	r3, r3, ip
 8023b06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023b0a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8023b0e:	4308      	orrs	r0, r1
 8023b10:	1c59      	adds	r1, r3, #1
 8023b12:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023b16:	00d2      	lsls	r2, r2, #3
 8023b18:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023b1c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8023b20:	4318      	orrs	r0, r3
 8023b22:	f8ae 0000 	strh.w	r0, [lr]
 8023b26:	e7a2      	b.n	8023a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023b28:	b013      	add	sp, #76	; 0x4c
 8023b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b2e:	bf00      	nop
 8023b30:	fffff800 	.word	0xfffff800

08023b34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023b34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023b38:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023b3c:	fb05 4c03 	mla	ip, r5, r3, r4
 8023b40:	2d00      	cmp	r5, #0
 8023b42:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023b46:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023b4a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023b4e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8023b52:	8808      	ldrh	r0, [r1, #0]
 8023b54:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023b58:	f2c0 80a7 	blt.w	8023caa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023b5c:	45aa      	cmp	sl, r5
 8023b5e:	f340 80a4 	ble.w	8023caa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023b62:	2c00      	cmp	r4, #0
 8023b64:	f2c0 809f 	blt.w	8023ca6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023b68:	42a3      	cmp	r3, r4
 8023b6a:	f340 809c 	ble.w	8023ca6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023b6e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8023b72:	1c62      	adds	r2, r4, #1
 8023b74:	f100 809c 	bmi.w	8023cb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b78:	4293      	cmp	r3, r2
 8023b7a:	f340 8099 	ble.w	8023cb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b7e:	f1b9 0f00 	cmp.w	r9, #0
 8023b82:	f000 8095 	beq.w	8023cb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b86:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023b8a:	3501      	adds	r5, #1
 8023b8c:	f100 8094 	bmi.w	8023cb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b90:	45aa      	cmp	sl, r5
 8023b92:	f340 8091 	ble.w	8023cb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b96:	2f00      	cmp	r7, #0
 8023b98:	f000 808e 	beq.w	8023cb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b9c:	2c00      	cmp	r4, #0
 8023b9e:	f2c0 8089 	blt.w	8023cb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023ba2:	42a3      	cmp	r3, r4
 8023ba4:	f340 8086 	ble.w	8023cb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023ba8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023bac:	3401      	adds	r4, #1
 8023bae:	f100 8086 	bmi.w	8023cbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023bb2:	42a3      	cmp	r3, r4
 8023bb4:	f340 8083 	ble.w	8023cbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023bb8:	f1b9 0f00 	cmp.w	r9, #0
 8023bbc:	d07f      	beq.n	8023cbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023bbe:	3301      	adds	r3, #1
 8023bc0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023bc4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023bc8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023bcc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8023bd0:	fb19 fe07 	smulbb	lr, r9, r7
 8023bd4:	ea44 0808 	orr.w	r8, r4, r8
 8023bd8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023bdc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023be0:	f1c7 0210 	rsb	r2, r7, #16
 8023be4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023be8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023bec:	ea44 0c0c 	orr.w	ip, r4, ip
 8023bf0:	eba2 0209 	sub.w	r2, r2, r9
 8023bf4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023bf8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023bfc:	fb04 f40c 	mul.w	r4, r4, ip
 8023c00:	fb02 4808 	mla	r8, r2, r8, r4
 8023c04:	041a      	lsls	r2, r3, #16
 8023c06:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023c0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023c0e:	4313      	orrs	r3, r2
 8023c10:	042a      	lsls	r2, r5, #16
 8023c12:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023c16:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023c1a:	fb0e 8303 	mla	r3, lr, r3, r8
 8023c1e:	432a      	orrs	r2, r5
 8023c20:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023c24:	fb07 3202 	mla	r2, r7, r2, r3
 8023c28:	0d53      	lsrs	r3, r2, #21
 8023c2a:	0952      	lsrs	r2, r2, #5
 8023c2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023c30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023c34:	431a      	orrs	r2, r3
 8023c36:	b293      	uxth	r3, r2
 8023c38:	b2b4      	uxth	r4, r6
 8023c3a:	1202      	asrs	r2, r0, #8
 8023c3c:	43f6      	mvns	r6, r6
 8023c3e:	b2f6      	uxtb	r6, r6
 8023c40:	121d      	asrs	r5, r3, #8
 8023c42:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023c46:	fb12 f206 	smulbb	r2, r2, r6
 8023c4a:	10c7      	asrs	r7, r0, #3
 8023c4c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023c50:	00c0      	lsls	r0, r0, #3
 8023c52:	fb05 2504 	mla	r5, r5, r4, r2
 8023c56:	b2c0      	uxtb	r0, r0
 8023c58:	10da      	asrs	r2, r3, #3
 8023c5a:	00db      	lsls	r3, r3, #3
 8023c5c:	b2db      	uxtb	r3, r3
 8023c5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023c62:	fb10 f006 	smulbb	r0, r0, r6
 8023c66:	b2ad      	uxth	r5, r5
 8023c68:	fb03 0004 	mla	r0, r3, r4, r0
 8023c6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023c70:	fb17 f706 	smulbb	r7, r7, r6
 8023c74:	b280      	uxth	r0, r0
 8023c76:	1c6b      	adds	r3, r5, #1
 8023c78:	fb02 7204 	mla	r2, r2, r4, r7
 8023c7c:	b292      	uxth	r2, r2
 8023c7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023c82:	1c43      	adds	r3, r0, #1
 8023c84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023c88:	1c50      	adds	r0, r2, #1
 8023c8a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8023c8e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023c92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c96:	0952      	lsrs	r2, r2, #5
 8023c98:	432b      	orrs	r3, r5
 8023c9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c9e:	4313      	orrs	r3, r2
 8023ca0:	800b      	strh	r3, [r1, #0]
 8023ca2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023ca6:	4680      	mov	r8, r0
 8023ca8:	e763      	b.n	8023b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023caa:	4684      	mov	ip, r0
 8023cac:	4680      	mov	r8, r0
 8023cae:	e76c      	b.n	8023b8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023cb0:	4684      	mov	ip, r0
 8023cb2:	e76a      	b.n	8023b8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023cb4:	4605      	mov	r5, r0
 8023cb6:	e779      	b.n	8023bac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023cb8:	4603      	mov	r3, r0
 8023cba:	4605      	mov	r5, r0
 8023cbc:	e782      	b.n	8023bc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8023cbe:	4603      	mov	r3, r0
 8023cc0:	e780      	b.n	8023bc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08023cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023cc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023cc6:	b093      	sub	sp, #76	; 0x4c
 8023cc8:	461d      	mov	r5, r3
 8023cca:	9210      	str	r2, [sp, #64]	; 0x40
 8023ccc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023cce:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8023cd2:	920b      	str	r2, [sp, #44]	; 0x2c
 8023cd4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023cd8:	910a      	str	r1, [sp, #40]	; 0x28
 8023cda:	6859      	ldr	r1, [r3, #4]
 8023cdc:	681b      	ldr	r3, [r3, #0]
 8023cde:	9011      	str	r0, [sp, #68]	; 0x44
 8023ce0:	fb01 2707 	mla	r7, r1, r7, r2
 8023ce4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023ce8:	9307      	str	r3, [sp, #28]
 8023cea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023cec:	681b      	ldr	r3, [r3, #0]
 8023cee:	9309      	str	r3, [sp, #36]	; 0x24
 8023cf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cf2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023cf6:	43db      	mvns	r3, r3
 8023cf8:	b2db      	uxtb	r3, r3
 8023cfa:	9308      	str	r3, [sp, #32]
 8023cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cfe:	2b00      	cmp	r3, #0
 8023d00:	dc03      	bgt.n	8023d0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023d02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023d04:	2b00      	cmp	r3, #0
 8023d06:	f340 8203 	ble.w	8024110 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023d0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023d14:	1e48      	subs	r0, r1, #1
 8023d16:	f102 3cff 	add.w	ip, r2, #4294967295
 8023d1a:	2d00      	cmp	r5, #0
 8023d1c:	f340 80da 	ble.w	8023ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023d20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023d24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023d28:	d406      	bmi.n	8023d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023d2a:	4586      	cmp	lr, r0
 8023d2c:	da04      	bge.n	8023d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023d2e:	2b00      	cmp	r3, #0
 8023d30:	db02      	blt.n	8023d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023d32:	4563      	cmp	r3, ip
 8023d34:	f2c0 80cf 	blt.w	8023ed6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023d38:	f11e 0e01 	adds.w	lr, lr, #1
 8023d3c:	f100 80c1 	bmi.w	8023ec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023d40:	4571      	cmp	r1, lr
 8023d42:	f2c0 80be 	blt.w	8023ec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023d46:	3301      	adds	r3, #1
 8023d48:	f100 80bb 	bmi.w	8023ec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023d4c:	429a      	cmp	r2, r3
 8023d4e:	f2c0 80b8 	blt.w	8023ec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023d52:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023d56:	46a9      	mov	r9, r5
 8023d58:	f1b9 0f00 	cmp.w	r9, #0
 8023d5c:	f340 80d8 	ble.w	8023f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023d60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d62:	1421      	asrs	r1, r4, #16
 8023d64:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023d68:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d6c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023d70:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023d74:	f100 8111 	bmi.w	8023f9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d78:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023d7c:	4551      	cmp	r1, sl
 8023d7e:	f280 810c 	bge.w	8023f9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d82:	2800      	cmp	r0, #0
 8023d84:	f2c0 8109 	blt.w	8023f9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d88:	f103 3aff 	add.w	sl, r3, #4294967295
 8023d8c:	4550      	cmp	r0, sl
 8023d8e:	f280 8104 	bge.w	8023f9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d92:	fa0f f38e 	sxth.w	r3, lr
 8023d96:	fb00 1103 	mla	r1, r0, r3, r1
 8023d9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023d9c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023da0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023da4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023da8:	f1bc 0f00 	cmp.w	ip, #0
 8023dac:	d007      	beq.n	8023dbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023dae:	005b      	lsls	r3, r3, #1
 8023db0:	eb0a 0003 	add.w	r0, sl, r3
 8023db4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023db8:	930c      	str	r3, [sp, #48]	; 0x30
 8023dba:	8843      	ldrh	r3, [r0, #2]
 8023dbc:	930d      	str	r3, [sp, #52]	; 0x34
 8023dbe:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023dc2:	fb12 f30c 	smulbb	r3, r2, ip
 8023dc6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023dca:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023dce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023dd2:	10db      	asrs	r3, r3, #3
 8023dd4:	ea40 000e 	orr.w	r0, r0, lr
 8023dd8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023ddc:	f1cc 0e10 	rsb	lr, ip, #16
 8023de0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023de4:	ebae 0e02 	sub.w	lr, lr, r2
 8023de8:	ea4a 0101 	orr.w	r1, sl, r1
 8023dec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023df0:	4351      	muls	r1, r2
 8023df2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023df4:	9f08      	ldr	r7, [sp, #32]
 8023df6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023dfa:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023dfe:	0410      	lsls	r0, r2, #16
 8023e00:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023e04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023e08:	4310      	orrs	r0, r2
 8023e0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023e0c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023e0e:	0412      	lsls	r2, r2, #16
 8023e10:	fb03 e000 	mla	r0, r3, r0, lr
 8023e14:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023e18:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023e1c:	ea42 020e 	orr.w	r2, r2, lr
 8023e20:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023e24:	fb03 0302 	mla	r3, r3, r2, r0
 8023e28:	0d5a      	lsrs	r2, r3, #21
 8023e2a:	095b      	lsrs	r3, r3, #5
 8023e2c:	f8b8 0000 	ldrh.w	r0, [r8]
 8023e30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023e38:	4313      	orrs	r3, r2
 8023e3a:	b29b      	uxth	r3, r3
 8023e3c:	1201      	asrs	r1, r0, #8
 8023e3e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023e42:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023e46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e4a:	fb11 f107 	smulbb	r1, r1, r7
 8023e4e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023e52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023e56:	00c0      	lsls	r0, r0, #3
 8023e58:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023e5c:	b2c0      	uxtb	r0, r0
 8023e5e:	10d9      	asrs	r1, r3, #3
 8023e60:	00db      	lsls	r3, r3, #3
 8023e62:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023e66:	b2db      	uxtb	r3, r3
 8023e68:	fb10 f007 	smulbb	r0, r0, r7
 8023e6c:	fa1f fc8c 	uxth.w	ip, ip
 8023e70:	fb03 0302 	mla	r3, r3, r2, r0
 8023e74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023e78:	fb1e fe07 	smulbb	lr, lr, r7
 8023e7c:	fb01 e102 	mla	r1, r1, r2, lr
 8023e80:	b29a      	uxth	r2, r3
 8023e82:	f10c 0301 	add.w	r3, ip, #1
 8023e86:	b289      	uxth	r1, r1
 8023e88:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023e8c:	1c53      	adds	r3, r2, #1
 8023e8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e92:	1c4a      	adds	r2, r1, #1
 8023e94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023e98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023e9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023ea0:	0949      	lsrs	r1, r1, #5
 8023ea2:	ea43 030c 	orr.w	r3, r3, ip
 8023ea6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023eaa:	430b      	orrs	r3, r1
 8023eac:	f8a8 3000 	strh.w	r3, [r8]
 8023eb0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023eb2:	441c      	add	r4, r3
 8023eb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023eb6:	f108 0802 	add.w	r8, r8, #2
 8023eba:	441e      	add	r6, r3
 8023ebc:	f109 39ff 	add.w	r9, r9, #4294967295
 8023ec0:	e74a      	b.n	8023d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023ec2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023ec4:	441c      	add	r4, r3
 8023ec6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ec8:	441e      	add	r6, r3
 8023eca:	9b07      	ldr	r3, [sp, #28]
 8023ecc:	3302      	adds	r3, #2
 8023ece:	3d01      	subs	r5, #1
 8023ed0:	9307      	str	r3, [sp, #28]
 8023ed2:	e722      	b.n	8023d1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023ed4:	d022      	beq.n	8023f1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023ed6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023ed8:	1e6b      	subs	r3, r5, #1
 8023eda:	fb00 4003 	mla	r0, r0, r3, r4
 8023ede:	1400      	asrs	r0, r0, #16
 8023ee0:	f53f af37 	bmi.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ee4:	3901      	subs	r1, #1
 8023ee6:	4288      	cmp	r0, r1
 8023ee8:	f6bf af33 	bge.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023eec:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023eee:	fb01 6303 	mla	r3, r1, r3, r6
 8023ef2:	141b      	asrs	r3, r3, #16
 8023ef4:	f53f af2d 	bmi.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ef8:	3a01      	subs	r2, #1
 8023efa:	4293      	cmp	r3, r2
 8023efc:	f6bf af29 	bge.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023f00:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023f04:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023f08:	46a8      	mov	r8, r5
 8023f0a:	f1b8 0f00 	cmp.w	r8, #0
 8023f0e:	dc5e      	bgt.n	8023fce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023f10:	9b07      	ldr	r3, [sp, #28]
 8023f12:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023f16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023f1a:	9307      	str	r3, [sp, #28]
 8023f1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f1e:	2b00      	cmp	r3, #0
 8023f20:	f340 80f6 	ble.w	8024110 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023f24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f3e:	eef0 6a62 	vmov.f32	s13, s5
 8023f42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f4e:	ee16 4a90 	vmov	r4, s13
 8023f52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f56:	eef0 6a43 	vmov.f32	s13, s6
 8023f5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f5e:	ee12 2a90 	vmov	r2, s5
 8023f62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f6a:	ee13 2a10 	vmov	r2, s6
 8023f6e:	931f      	str	r3, [sp, #124]	; 0x7c
 8023f70:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f72:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f76:	9320      	str	r3, [sp, #128]	; 0x80
 8023f78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f7a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023f7c:	3b01      	subs	r3, #1
 8023f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f82:	930a      	str	r3, [sp, #40]	; 0x28
 8023f84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f86:	ee16 6a90 	vmov	r6, s13
 8023f8a:	bf14      	ite	ne
 8023f8c:	461d      	movne	r5, r3
 8023f8e:	4615      	moveq	r5, r2
 8023f90:	eeb0 3a67 	vmov.f32	s6, s15
 8023f94:	eef0 2a47 	vmov.f32	s5, s14
 8023f98:	e6b0      	b.n	8023cfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023f9a:	f111 0a01 	adds.w	sl, r1, #1
 8023f9e:	d487      	bmi.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023fa0:	45d6      	cmp	lr, sl
 8023fa2:	db85      	blt.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023fa4:	f110 0a01 	adds.w	sl, r0, #1
 8023fa8:	d482      	bmi.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023faa:	4553      	cmp	r3, sl
 8023fac:	db80      	blt.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023fae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023fb0:	9101      	str	r1, [sp, #4]
 8023fb2:	b21b      	sxth	r3, r3
 8023fb4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023fb8:	9300      	str	r3, [sp, #0]
 8023fba:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023fbe:	fa0f f38e 	sxth.w	r3, lr
 8023fc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023fc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023fc6:	4641      	mov	r1, r8
 8023fc8:	f7ff fdb4 	bl	8023b34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023fcc:	e770      	b.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023fce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023fd0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023fd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023fd6:	1430      	asrs	r0, r6, #16
 8023fd8:	1423      	asrs	r3, r4, #16
 8023fda:	fb01 3000 	mla	r0, r1, r0, r3
 8023fde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023fe0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023fe4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023fe8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023fec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023ff0:	8858      	ldrh	r0, [r3, #2]
 8023ff2:	f1be 0f00 	cmp.w	lr, #0
 8023ff6:	d00b      	beq.n	8024010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023ff8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023ffc:	3901      	subs	r1, #1
 8023ffe:	0049      	lsls	r1, r1, #1
 8024000:	3102      	adds	r1, #2
 8024002:	eb03 0b01 	add.w	fp, r3, r1
 8024006:	5a5b      	ldrh	r3, [r3, r1]
 8024008:	930e      	str	r3, [sp, #56]	; 0x38
 802400a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802400e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024010:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024014:	fb12 f30e 	smulbb	r3, r2, lr
 8024018:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802401c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024020:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024024:	10db      	asrs	r3, r3, #3
 8024026:	ea41 010c 	orr.w	r1, r1, ip
 802402a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802402e:	f1ce 0c10 	rsb	ip, lr, #16
 8024032:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024036:	ebac 0c02 	sub.w	ip, ip, r2
 802403a:	ea4b 0000 	orr.w	r0, fp, r0
 802403e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024042:	4350      	muls	r0, r2
 8024044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024046:	9f08      	ldr	r7, [sp, #32]
 8024048:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802404c:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024050:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024054:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024058:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802405a:	980e      	ldr	r0, [sp, #56]	; 0x38
 802405c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024060:	0412      	lsls	r2, r2, #16
 8024062:	ea4b 0101 	orr.w	r1, fp, r1
 8024066:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802406a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802406e:	fb03 c101 	mla	r1, r3, r1, ip
 8024072:	4302      	orrs	r2, r0
 8024074:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024078:	fb03 1202 	mla	r2, r3, r2, r1
 802407c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024080:	0952      	lsrs	r2, r2, #5
 8024082:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024086:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802408a:	f8b9 2000 	ldrh.w	r2, [r9]
 802408e:	ea4b 0303 	orr.w	r3, fp, r3
 8024092:	b29b      	uxth	r3, r3
 8024094:	1211      	asrs	r1, r2, #8
 8024096:	1218      	asrs	r0, r3, #8
 8024098:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802409c:	fb11 f107 	smulbb	r1, r1, r7
 80240a0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80240a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80240a8:	00d2      	lsls	r2, r2, #3
 80240aa:	fb00 100a 	mla	r0, r0, sl, r1
 80240ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80240b2:	10d9      	asrs	r1, r3, #3
 80240b4:	b2d2      	uxtb	r2, r2
 80240b6:	00db      	lsls	r3, r3, #3
 80240b8:	fb1c fc07 	smulbb	ip, ip, r7
 80240bc:	fb12 f207 	smulbb	r2, r2, r7
 80240c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80240c4:	b2db      	uxtb	r3, r3
 80240c6:	b280      	uxth	r0, r0
 80240c8:	fb01 c10a 	mla	r1, r1, sl, ip
 80240cc:	fb03 230a 	mla	r3, r3, sl, r2
 80240d0:	b29b      	uxth	r3, r3
 80240d2:	b289      	uxth	r1, r1
 80240d4:	1c42      	adds	r2, r0, #1
 80240d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80240da:	f101 0c01 	add.w	ip, r1, #1
 80240de:	1c5a      	adds	r2, r3, #1
 80240e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80240e4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80240e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80240ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80240ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80240f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80240f6:	4310      	orrs	r0, r2
 80240f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80240fc:	441c      	add	r4, r3
 80240fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024100:	ea40 000c 	orr.w	r0, r0, ip
 8024104:	f829 0b02 	strh.w	r0, [r9], #2
 8024108:	441e      	add	r6, r3
 802410a:	f108 38ff 	add.w	r8, r8, #4294967295
 802410e:	e6fc      	b.n	8023f0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024110:	b013      	add	sp, #76	; 0x4c
 8024112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024116 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024116:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802411a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802411e:	fb0e 4703 	mla	r7, lr, r3, r4
 8024122:	f1be 0f00 	cmp.w	lr, #0
 8024126:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802412a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802412e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024132:	8808      	ldrh	r0, [r1, #0]
 8024134:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024138:	db60      	blt.n	80241fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802413a:	45f1      	cmp	r9, lr
 802413c:	dd5e      	ble.n	80241fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802413e:	2c00      	cmp	r4, #0
 8024140:	db5a      	blt.n	80241f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024142:	42a3      	cmp	r3, r4
 8024144:	dd58      	ble.n	80241f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024146:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802414a:	1c62      	adds	r2, r4, #1
 802414c:	d459      	bmi.n	8024202 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802414e:	4293      	cmp	r3, r2
 8024150:	dd57      	ble.n	8024202 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024152:	2d00      	cmp	r5, #0
 8024154:	d055      	beq.n	8024202 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024156:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802415a:	f11e 0e01 	adds.w	lr, lr, #1
 802415e:	d454      	bmi.n	802420a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024160:	45f1      	cmp	r9, lr
 8024162:	dd52      	ble.n	802420a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024164:	2e00      	cmp	r6, #0
 8024166:	d050      	beq.n	802420a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024168:	2c00      	cmp	r4, #0
 802416a:	db4c      	blt.n	8024206 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802416c:	42a3      	cmp	r3, r4
 802416e:	dd4a      	ble.n	8024206 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024170:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024174:	3401      	adds	r4, #1
 8024176:	d405      	bmi.n	8024184 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024178:	42a3      	cmp	r3, r4
 802417a:	dd03      	ble.n	8024184 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802417c:	b115      	cbz	r5, 8024184 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802417e:	3301      	adds	r3, #1
 8024180:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024184:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024188:	fb15 f406 	smulbb	r4, r5, r6
 802418c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024190:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024194:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024198:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802419c:	ea43 0c0c 	orr.w	ip, r3, ip
 80241a0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80241a4:	f1c6 0310 	rsb	r3, r6, #16
 80241a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80241ac:	1b5b      	subs	r3, r3, r5
 80241ae:	ea4e 0707 	orr.w	r7, lr, r7
 80241b2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80241b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80241ba:	437d      	muls	r5, r7
 80241bc:	fb03 5c0c 	mla	ip, r3, ip, r5
 80241c0:	0403      	lsls	r3, r0, #16
 80241c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80241c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80241ca:	4318      	orrs	r0, r3
 80241cc:	0413      	lsls	r3, r2, #16
 80241ce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80241d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80241d6:	4313      	orrs	r3, r2
 80241d8:	fb04 c000 	mla	r0, r4, r0, ip
 80241dc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80241e0:	fb06 0003 	mla	r0, r6, r3, r0
 80241e4:	0d43      	lsrs	r3, r0, #21
 80241e6:	0940      	lsrs	r0, r0, #5
 80241e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80241ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80241f0:	4318      	orrs	r0, r3
 80241f2:	8008      	strh	r0, [r1, #0]
 80241f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80241f8:	4684      	mov	ip, r0
 80241fa:	e7a6      	b.n	802414a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80241fc:	4607      	mov	r7, r0
 80241fe:	4684      	mov	ip, r0
 8024200:	e7ab      	b.n	802415a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024202:	4607      	mov	r7, r0
 8024204:	e7a9      	b.n	802415a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024206:	4602      	mov	r2, r0
 8024208:	e7b4      	b.n	8024174 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802420a:	4602      	mov	r2, r0
 802420c:	e7ba      	b.n	8024184 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802420e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802420e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024212:	b08f      	sub	sp, #60	; 0x3c
 8024214:	461d      	mov	r5, r3
 8024216:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024218:	920c      	str	r2, [sp, #48]	; 0x30
 802421a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802421e:	9107      	str	r1, [sp, #28]
 8024220:	6859      	ldr	r1, [r3, #4]
 8024222:	681b      	ldr	r3, [r3, #0]
 8024224:	900d      	str	r0, [sp, #52]	; 0x34
 8024226:	fb01 2707 	mla	r7, r1, r7, r2
 802422a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802422e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024230:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024234:	f8d3 8000 	ldr.w	r8, [r3]
 8024238:	9b07      	ldr	r3, [sp, #28]
 802423a:	2b00      	cmp	r3, #0
 802423c:	dc03      	bgt.n	8024246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802423e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024240:	2b00      	cmp	r3, #0
 8024242:	f340 8181 	ble.w	8024548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024246:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024248:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802424c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024250:	1e48      	subs	r0, r1, #1
 8024252:	f102 3cff 	add.w	ip, r2, #4294967295
 8024256:	2d00      	cmp	r5, #0
 8024258:	f340 809b 	ble.w	8024392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 802425c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024260:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024264:	d406      	bmi.n	8024274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024266:	4586      	cmp	lr, r0
 8024268:	da04      	bge.n	8024274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802426a:	2b00      	cmp	r3, #0
 802426c:	db02      	blt.n	8024274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802426e:	4563      	cmp	r3, ip
 8024270:	f2c0 8090 	blt.w	8024394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024274:	f11e 0e01 	adds.w	lr, lr, #1
 8024278:	f100 8084 	bmi.w	8024384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802427c:	4571      	cmp	r1, lr
 802427e:	f2c0 8081 	blt.w	8024384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024282:	3301      	adds	r3, #1
 8024284:	d47e      	bmi.n	8024384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024286:	429a      	cmp	r2, r3
 8024288:	db7c      	blt.n	8024384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802428a:	46aa      	mov	sl, r5
 802428c:	46b9      	mov	r9, r7
 802428e:	f1ba 0f00 	cmp.w	sl, #0
 8024292:	f340 8099 	ble.w	80243c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024296:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024298:	1421      	asrs	r1, r4, #16
 802429a:	ea4f 4026 	mov.w	r0, r6, asr #16
 802429e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80242a2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80242a6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80242aa:	f100 80d0 	bmi.w	802444e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80242ae:	f10e 3bff 	add.w	fp, lr, #4294967295
 80242b2:	4559      	cmp	r1, fp
 80242b4:	f280 80cb 	bge.w	802444e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80242b8:	2800      	cmp	r0, #0
 80242ba:	f2c0 80c8 	blt.w	802444e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80242be:	f103 3bff 	add.w	fp, r3, #4294967295
 80242c2:	4558      	cmp	r0, fp
 80242c4:	f280 80c3 	bge.w	802444e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80242c8:	fa0f fe8e 	sxth.w	lr, lr
 80242cc:	fb00 110e 	mla	r1, r0, lr, r1
 80242d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80242d4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80242d8:	8841      	ldrh	r1, [r0, #2]
 80242da:	f1bc 0f00 	cmp.w	ip, #0
 80242de:	d00b      	beq.n	80242f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80242e0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80242e4:	3b01      	subs	r3, #1
 80242e6:	005b      	lsls	r3, r3, #1
 80242e8:	3302      	adds	r3, #2
 80242ea:	eb00 0e03 	add.w	lr, r0, r3
 80242ee:	5ac3      	ldrh	r3, [r0, r3]
 80242f0:	9308      	str	r3, [sp, #32]
 80242f2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80242f6:	9309      	str	r3, [sp, #36]	; 0x24
 80242f8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80242fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024300:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024304:	ea40 000b 	orr.w	r0, r0, fp
 8024308:	fb12 f30c 	smulbb	r3, r2, ip
 802430c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024310:	10db      	asrs	r3, r3, #3
 8024312:	f1cc 0e10 	rsb	lr, ip, #16
 8024316:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802431a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802431e:	ebae 0e02 	sub.w	lr, lr, r2
 8024322:	ea4b 0101 	orr.w	r1, fp, r1
 8024326:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802432a:	4351      	muls	r1, r2
 802432c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802432e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024332:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024336:	0410      	lsls	r0, r2, #16
 8024338:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802433c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024340:	4310      	orrs	r0, r2
 8024342:	9a08      	ldr	r2, [sp, #32]
 8024344:	9908      	ldr	r1, [sp, #32]
 8024346:	0412      	lsls	r2, r2, #16
 8024348:	fb03 e000 	mla	r0, r3, r0, lr
 802434c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024350:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024354:	ea42 020e 	orr.w	r2, r2, lr
 8024358:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802435c:	fb03 0302 	mla	r3, r3, r2, r0
 8024360:	0d5a      	lsrs	r2, r3, #21
 8024362:	095b      	lsrs	r3, r3, #5
 8024364:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024368:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802436c:	4313      	orrs	r3, r2
 802436e:	f8a9 3000 	strh.w	r3, [r9]
 8024372:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024374:	441c      	add	r4, r3
 8024376:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024378:	f109 0902 	add.w	r9, r9, #2
 802437c:	441e      	add	r6, r3
 802437e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024382:	e784      	b.n	802428e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024384:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024386:	441c      	add	r4, r3
 8024388:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802438a:	3d01      	subs	r5, #1
 802438c:	441e      	add	r6, r3
 802438e:	3702      	adds	r7, #2
 8024390:	e761      	b.n	8024256 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024392:	d01d      	beq.n	80243d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024394:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024396:	1e6b      	subs	r3, r5, #1
 8024398:	fb00 4003 	mla	r0, r0, r3, r4
 802439c:	1400      	asrs	r0, r0, #16
 802439e:	f53f af74 	bmi.w	802428a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80243a2:	3901      	subs	r1, #1
 80243a4:	4288      	cmp	r0, r1
 80243a6:	f6bf af70 	bge.w	802428a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80243aa:	991c      	ldr	r1, [sp, #112]	; 0x70
 80243ac:	fb01 6303 	mla	r3, r1, r3, r6
 80243b0:	141b      	asrs	r3, r3, #16
 80243b2:	f53f af6a 	bmi.w	802428a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80243b6:	3a01      	subs	r2, #1
 80243b8:	4293      	cmp	r3, r2
 80243ba:	f6bf af66 	bge.w	802428a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80243be:	46a9      	mov	r9, r5
 80243c0:	46ba      	mov	sl, r7
 80243c2:	f1b9 0f00 	cmp.w	r9, #0
 80243c6:	dc5a      	bgt.n	802447e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80243c8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80243cc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80243d0:	9b07      	ldr	r3, [sp, #28]
 80243d2:	2b00      	cmp	r3, #0
 80243d4:	f340 80b8 	ble.w	8024548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80243d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80243dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80243e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80243e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80243e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80243ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243f2:	eef0 6a62 	vmov.f32	s13, s5
 80243f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024402:	ee16 4a90 	vmov	r4, s13
 8024406:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802440a:	eef0 6a43 	vmov.f32	s13, s6
 802440e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024412:	ee12 2a90 	vmov	r2, s5
 8024416:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802441a:	fb92 f3f3 	sdiv	r3, r2, r3
 802441e:	ee13 2a10 	vmov	r2, s6
 8024422:	931b      	str	r3, [sp, #108]	; 0x6c
 8024424:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024426:	fb92 f3f3 	sdiv	r3, r2, r3
 802442a:	931c      	str	r3, [sp, #112]	; 0x70
 802442c:	9b07      	ldr	r3, [sp, #28]
 802442e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024430:	3b01      	subs	r3, #1
 8024432:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024436:	9307      	str	r3, [sp, #28]
 8024438:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802443a:	ee16 6a90 	vmov	r6, s13
 802443e:	bf14      	ite	ne
 8024440:	461d      	movne	r5, r3
 8024442:	4615      	moveq	r5, r2
 8024444:	eeb0 3a67 	vmov.f32	s6, s15
 8024448:	eef0 2a47 	vmov.f32	s5, s14
 802444c:	e6f4      	b.n	8024238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802444e:	f111 0b01 	adds.w	fp, r1, #1
 8024452:	d48e      	bmi.n	8024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024454:	45de      	cmp	lr, fp
 8024456:	db8c      	blt.n	8024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024458:	f110 0b01 	adds.w	fp, r0, #1
 802445c:	d489      	bmi.n	8024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802445e:	455b      	cmp	r3, fp
 8024460:	db87      	blt.n	8024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024462:	b21b      	sxth	r3, r3
 8024464:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024468:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802446c:	9300      	str	r3, [sp, #0]
 802446e:	4642      	mov	r2, r8
 8024470:	fa0f f38e 	sxth.w	r3, lr
 8024474:	4649      	mov	r1, r9
 8024476:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024478:	f7ff fe4d 	bl	8024116 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802447c:	e779      	b.n	8024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802447e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024480:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024484:	1420      	asrs	r0, r4, #16
 8024486:	1431      	asrs	r1, r6, #16
 8024488:	fb03 0101 	mla	r1, r3, r1, r0
 802448c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024490:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024494:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024498:	8841      	ldrh	r1, [r0, #2]
 802449a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802449e:	f1be 0f00 	cmp.w	lr, #0
 80244a2:	d00b      	beq.n	80244bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80244a4:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80244a8:	3b01      	subs	r3, #1
 80244aa:	005b      	lsls	r3, r3, #1
 80244ac:	3302      	adds	r3, #2
 80244ae:	eb00 0b03 	add.w	fp, r0, r3
 80244b2:	5ac3      	ldrh	r3, [r0, r3]
 80244b4:	930a      	str	r3, [sp, #40]	; 0x28
 80244b6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80244ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80244bc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80244c0:	fb12 f30e 	smulbb	r3, r2, lr
 80244c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80244c8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80244cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80244d0:	10db      	asrs	r3, r3, #3
 80244d2:	ea40 000c 	orr.w	r0, r0, ip
 80244d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80244da:	f1ce 0c10 	rsb	ip, lr, #16
 80244de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80244e2:	ebac 0c02 	sub.w	ip, ip, r2
 80244e6:	ea4b 0101 	orr.w	r1, fp, r1
 80244ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80244ee:	4351      	muls	r1, r2
 80244f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80244f2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80244f6:	fb0c 1c00 	mla	ip, ip, r0, r1
 80244fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80244fe:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8024502:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024504:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024506:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802450a:	0412      	lsls	r2, r2, #16
 802450c:	ea4b 0000 	orr.w	r0, fp, r0
 8024510:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024514:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024518:	fb03 c000 	mla	r0, r3, r0, ip
 802451c:	ea42 0b0b 	orr.w	fp, r2, fp
 8024520:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024524:	fb03 000b 	mla	r0, r3, fp, r0
 8024528:	0d43      	lsrs	r3, r0, #21
 802452a:	0940      	lsrs	r0, r0, #5
 802452c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024530:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024534:	4318      	orrs	r0, r3
 8024536:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024538:	f82a 0b02 	strh.w	r0, [sl], #2
 802453c:	441c      	add	r4, r3
 802453e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024540:	f109 39ff 	add.w	r9, r9, #4294967295
 8024544:	441e      	add	r6, r3
 8024546:	e73c      	b.n	80243c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024548:	b00f      	add	sp, #60	; 0x3c
 802454a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802454e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802454e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024552:	b085      	sub	sp, #20
 8024554:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024558:	9102      	str	r1, [sp, #8]
 802455a:	2c00      	cmp	r4, #0
 802455c:	fb04 7103 	mla	r1, r4, r3, r7
 8024560:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024564:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024568:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802456c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024570:	f2c0 811b 	blt.w	80247aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024574:	45a6      	cmp	lr, r4
 8024576:	f340 8118 	ble.w	80247aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802457a:	2f00      	cmp	r7, #0
 802457c:	f2c0 8113 	blt.w	80247a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024580:	42bb      	cmp	r3, r7
 8024582:	f340 8110 	ble.w	80247a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024586:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802458a:	1c7a      	adds	r2, r7, #1
 802458c:	f100 8110 	bmi.w	80247b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024590:	4293      	cmp	r3, r2
 8024592:	f340 810d 	ble.w	80247b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024596:	2e00      	cmp	r6, #0
 8024598:	f000 810c 	beq.w	80247b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802459c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80245a0:	3401      	adds	r4, #1
 80245a2:	f100 810b 	bmi.w	80247bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80245a6:	45a6      	cmp	lr, r4
 80245a8:	f340 8108 	ble.w	80247bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80245ac:	2800      	cmp	r0, #0
 80245ae:	f000 8108 	beq.w	80247c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80245b2:	2f00      	cmp	r7, #0
 80245b4:	f2c0 8100 	blt.w	80247b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80245b8:	42bb      	cmp	r3, r7
 80245ba:	f340 80fd 	ble.w	80247b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80245be:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80245c2:	3701      	adds	r7, #1
 80245c4:	f100 8100 	bmi.w	80247c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80245c8:	42bb      	cmp	r3, r7
 80245ca:	f340 80fd 	ble.w	80247c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80245ce:	2e00      	cmp	r6, #0
 80245d0:	f000 80fc 	beq.w	80247cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80245d4:	3301      	adds	r3, #1
 80245d6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80245da:	b2b6      	uxth	r6, r6
 80245dc:	b280      	uxth	r0, r0
 80245de:	fb00 fe06 	mul.w	lr, r0, r6
 80245e2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80245e6:	0136      	lsls	r6, r6, #4
 80245e8:	eba6 070e 	sub.w	r7, r6, lr
 80245ec:	b280      	uxth	r0, r0
 80245ee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80245f2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80245f6:	b2bf      	uxth	r7, r7
 80245f8:	1a1b      	subs	r3, r3, r0
 80245fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80245fe:	b29b      	uxth	r3, r3
 8024600:	fb0a f607 	mul.w	r6, sl, r7
 8024604:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024608:	fb0b 6603 	mla	r6, fp, r3, r6
 802460c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024610:	fb00 6609 	mla	r6, r0, r9, r6
 8024614:	fb0e 6608 	mla	r6, lr, r8, r6
 8024618:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802461c:	9600      	str	r6, [sp, #0]
 802461e:	2e00      	cmp	r6, #0
 8024620:	f000 80be 	beq.w	80247a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024624:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024628:	fb0b fc0c 	mul.w	ip, fp, ip
 802462c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024630:	fb0b f505 	mul.w	r5, fp, r5
 8024634:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024638:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802463c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024640:	44dc      	add	ip, fp
 8024642:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024646:	9501      	str	r5, [sp, #4]
 8024648:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802464c:	9503      	str	r5, [sp, #12]
 802464e:	9d01      	ldr	r5, [sp, #4]
 8024650:	9e02      	ldr	r6, [sp, #8]
 8024652:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024656:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802465a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802465e:	fb0a fc0c 	mul.w	ip, sl, ip
 8024662:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024666:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802466a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802466e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024672:	4465      	add	r5, ip
 8024674:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024678:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802467c:	fb09 fc0c 	mul.w	ip, r9, ip
 8024680:	fb09 f904 	mul.w	r9, r9, r4
 8024684:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024688:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802468c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024690:	fb08 f404 	mul.w	r4, r8, r4
 8024694:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024698:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802469c:	fb08 f802 	mul.w	r8, r8, r2
 80246a0:	fb0a fa01 	mul.w	sl, sl, r1
 80246a4:	0a22      	lsrs	r2, r4, #8
 80246a6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80246aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80246ae:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80246b2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80246b6:	4414      	add	r4, r2
 80246b8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80246bc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80246c0:	0a2d      	lsrs	r5, r5, #8
 80246c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80246c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80246ca:	9a03      	ldr	r2, [sp, #12]
 80246cc:	8836      	ldrh	r6, [r6, #0]
 80246ce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80246d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80246d6:	437d      	muls	r5, r7
 80246d8:	4461      	add	r1, ip
 80246da:	0a24      	lsrs	r4, r4, #8
 80246dc:	fb02 5503 	mla	r5, r2, r3, r5
 80246e0:	0a09      	lsrs	r1, r1, #8
 80246e2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80246e6:	fb04 540e 	mla	r4, r4, lr, r5
 80246ea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80246ee:	fb01 4100 	mla	r1, r1, r0, r4
 80246f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246f6:	0a09      	lsrs	r1, r1, #8
 80246f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246fc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024700:	fb07 f70a 	mul.w	r7, r7, sl
 8024704:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024708:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802470c:	fb03 7101 	mla	r1, r3, r1, r7
 8024710:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024714:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024718:	fb0e 1e08 	mla	lr, lr, r8, r1
 802471c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024720:	fb00 e101 	mla	r1, r0, r1, lr
 8024724:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024728:	9a00      	ldr	r2, [sp, #0]
 802472a:	b287      	uxth	r7, r0
 802472c:	437a      	muls	r2, r7
 802472e:	0a09      	lsrs	r1, r1, #8
 8024730:	1c53      	adds	r3, r2, #1
 8024732:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024736:	4321      	orrs	r1, r4
 8024738:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802473c:	1235      	asrs	r5, r6, #8
 802473e:	0c0a      	lsrs	r2, r1, #16
 8024740:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024744:	b2db      	uxtb	r3, r3
 8024746:	fb12 f207 	smulbb	r2, r2, r7
 802474a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802474e:	fb05 2503 	mla	r5, r5, r3, r2
 8024752:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024756:	10f2      	asrs	r2, r6, #3
 8024758:	b2c8      	uxtb	r0, r1
 802475a:	00f6      	lsls	r6, r6, #3
 802475c:	fb14 f407 	smulbb	r4, r4, r7
 8024760:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024764:	b2f6      	uxtb	r6, r6
 8024766:	fb10 f007 	smulbb	r0, r0, r7
 802476a:	fb02 4203 	mla	r2, r2, r3, r4
 802476e:	b2ad      	uxth	r5, r5
 8024770:	fb06 0303 	mla	r3, r6, r3, r0
 8024774:	b299      	uxth	r1, r3
 8024776:	b294      	uxth	r4, r2
 8024778:	1c6b      	adds	r3, r5, #1
 802477a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802477e:	1c62      	adds	r2, r4, #1
 8024780:	1c4b      	adds	r3, r1, #1
 8024782:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024786:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802478a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802478e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024792:	0952      	lsrs	r2, r2, #5
 8024794:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024798:	432b      	orrs	r3, r5
 802479a:	4313      	orrs	r3, r2
 802479c:	9a02      	ldr	r2, [sp, #8]
 802479e:	8013      	strh	r3, [r2, #0]
 80247a0:	b005      	add	sp, #20
 80247a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80247a6:	2500      	movs	r5, #0
 80247a8:	e6ef      	b.n	802458a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80247aa:	2100      	movs	r1, #0
 80247ac:	460d      	mov	r5, r1
 80247ae:	e6f7      	b.n	80245a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80247b0:	2100      	movs	r1, #0
 80247b2:	e6f5      	b.n	80245a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80247b4:	4631      	mov	r1, r6
 80247b6:	e6f3      	b.n	80245a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80247b8:	2400      	movs	r4, #0
 80247ba:	e702      	b.n	80245c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80247bc:	2200      	movs	r2, #0
 80247be:	4614      	mov	r4, r2
 80247c0:	e70b      	b.n	80245da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80247c2:	4602      	mov	r2, r0
 80247c4:	4604      	mov	r4, r0
 80247c6:	e708      	b.n	80245da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80247c8:	2200      	movs	r2, #0
 80247ca:	e706      	b.n	80245da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80247cc:	4632      	mov	r2, r6
 80247ce:	e704      	b.n	80245da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080247d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80247d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80247d4:	b09d      	sub	sp, #116	; 0x74
 80247d6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80247da:	9219      	str	r2, [sp, #100]	; 0x64
 80247dc:	9307      	str	r3, [sp, #28]
 80247de:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80247e0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80247e4:	931a      	str	r3, [sp, #104]	; 0x68
 80247e6:	9117      	str	r1, [sp, #92]	; 0x5c
 80247e8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80247ec:	901b      	str	r0, [sp, #108]	; 0x6c
 80247ee:	6850      	ldr	r0, [r2, #4]
 80247f0:	6812      	ldr	r2, [r2, #0]
 80247f2:	fb00 1303 	mla	r3, r0, r3, r1
 80247f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80247fa:	930a      	str	r3, [sp, #40]	; 0x28
 80247fc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80247fe:	681b      	ldr	r3, [r3, #0]
 8024800:	9310      	str	r3, [sp, #64]	; 0x40
 8024802:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024806:	930b      	str	r3, [sp, #44]	; 0x2c
 8024808:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802480a:	2b00      	cmp	r3, #0
 802480c:	dc03      	bgt.n	8024816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802480e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024810:	2b00      	cmp	r3, #0
 8024812:	f340 8375 	ble.w	8024f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024816:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024818:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802481c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024820:	1e48      	subs	r0, r1, #1
 8024822:	1e57      	subs	r7, r2, #1
 8024824:	9b07      	ldr	r3, [sp, #28]
 8024826:	2b00      	cmp	r3, #0
 8024828:	f340 818e 	ble.w	8024b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802482c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024830:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024834:	d406      	bmi.n	8024844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024836:	4584      	cmp	ip, r0
 8024838:	da04      	bge.n	8024844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802483a:	2b00      	cmp	r3, #0
 802483c:	db02      	blt.n	8024844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802483e:	42bb      	cmp	r3, r7
 8024840:	f2c0 8183 	blt.w	8024b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024844:	f11c 0c01 	adds.w	ip, ip, #1
 8024848:	f100 8173 	bmi.w	8024b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802484c:	4561      	cmp	r1, ip
 802484e:	f2c0 8170 	blt.w	8024b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024852:	3301      	adds	r3, #1
 8024854:	f100 816d 	bmi.w	8024b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024858:	429a      	cmp	r2, r3
 802485a:	f2c0 816a 	blt.w	8024b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802485e:	9b07      	ldr	r3, [sp, #28]
 8024860:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024862:	9318      	str	r3, [sp, #96]	; 0x60
 8024864:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024866:	2b00      	cmp	r3, #0
 8024868:	f340 818c 	ble.w	8024b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802486c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802486e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024870:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024874:	689b      	ldr	r3, [r3, #8]
 8024876:	1422      	asrs	r2, r4, #16
 8024878:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802487c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024880:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024884:	f100 81cd 	bmi.w	8024c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024888:	f103 38ff 	add.w	r8, r3, #4294967295
 802488c:	4542      	cmp	r2, r8
 802488e:	f280 81c8 	bge.w	8024c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024892:	f1bc 0f00 	cmp.w	ip, #0
 8024896:	f2c0 81c4 	blt.w	8024c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802489a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802489e:	45c4      	cmp	ip, r8
 80248a0:	f280 81bf 	bge.w	8024c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80248a4:	b21b      	sxth	r3, r3
 80248a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80248aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80248ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80248b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80248b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80248b8:	2800      	cmp	r0, #0
 80248ba:	f000 81a9 	beq.w	8024c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80248be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80248c2:	950c      	str	r5, [sp, #48]	; 0x30
 80248c4:	0e2d      	lsrs	r5, r5, #24
 80248c6:	9513      	str	r5, [sp, #76]	; 0x4c
 80248c8:	b181      	cbz	r1, 80248ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80248ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80248ce:	3b01      	subs	r3, #1
 80248d0:	009b      	lsls	r3, r3, #2
 80248d2:	3304      	adds	r3, #4
 80248d4:	eb08 0c03 	add.w	ip, r8, r3
 80248d8:	f858 3003 	ldr.w	r3, [r8, r3]
 80248dc:	9308      	str	r3, [sp, #32]
 80248de:	0e1b      	lsrs	r3, r3, #24
 80248e0:	9311      	str	r3, [sp, #68]	; 0x44
 80248e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80248e6:	930d      	str	r3, [sp, #52]	; 0x34
 80248e8:	0e1b      	lsrs	r3, r3, #24
 80248ea:	9314      	str	r3, [sp, #80]	; 0x50
 80248ec:	b280      	uxth	r0, r0
 80248ee:	b289      	uxth	r1, r1
 80248f0:	fb00 f901 	mul.w	r9, r0, r1
 80248f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80248f8:	0100      	lsls	r0, r0, #4
 80248fa:	eba0 0809 	sub.w	r8, r0, r9
 80248fe:	b289      	uxth	r1, r1
 8024900:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024904:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024906:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024908:	fa1f f888 	uxth.w	r8, r8
 802490c:	1a5b      	subs	r3, r3, r1
 802490e:	b29b      	uxth	r3, r3
 8024910:	fb08 f000 	mul.w	r0, r8, r0
 8024914:	fb03 000e 	mla	r0, r3, lr, r0
 8024918:	fb01 0005 	mla	r0, r1, r5, r0
 802491c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802491e:	fb09 0005 	mla	r0, r9, r5, r0
 8024922:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024926:	2800      	cmp	r0, #0
 8024928:	f000 80fa 	beq.w	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802492c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024930:	d01b      	beq.n	802496a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024932:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024936:	fb0e fa0a 	mul.w	sl, lr, sl
 802493a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802493e:	fb0e fe02 	mul.w	lr, lr, r2
 8024942:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024946:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802494a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802494e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024952:	4452      	add	r2, sl
 8024954:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024958:	0a12      	lsrs	r2, r2, #8
 802495a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802495e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024962:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024966:	ea42 020c 	orr.w	r2, r2, ip
 802496a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802496c:	2dff      	cmp	r5, #255	; 0xff
 802496e:	d021      	beq.n	80249b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024970:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024972:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024976:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024978:	fb05 fb0b 	mul.w	fp, r5, fp
 802497c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802497e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024982:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024984:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024988:	fb05 fa0a 	mul.w	sl, r5, sl
 802498c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024990:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024994:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024998:	44de      	add	lr, fp
 802499a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802499e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80249a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80249aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249ae:	ea4e 050a 	orr.w	r5, lr, sl
 80249b2:	950c      	str	r5, [sp, #48]	; 0x30
 80249b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249b6:	2dff      	cmp	r5, #255	; 0xff
 80249b8:	d021      	beq.n	80249fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80249ba:	9d08      	ldr	r5, [sp, #32]
 80249bc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80249c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249c2:	fb05 fb0b 	mul.w	fp, r5, fp
 80249c6:	9d08      	ldr	r5, [sp, #32]
 80249c8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80249cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80249d2:	fb05 fa0a 	mul.w	sl, r5, sl
 80249d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80249da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80249de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80249e2:	44de      	add	lr, fp
 80249e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80249e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80249ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80249f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249f8:	ea4e 050a 	orr.w	r5, lr, sl
 80249fc:	9508      	str	r5, [sp, #32]
 80249fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a00:	2dff      	cmp	r5, #255	; 0xff
 8024a02:	d021      	beq.n	8024a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024a04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a06:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024a0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8024a10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a2c:	44de      	add	lr, fp
 8024a2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a42:	ea4e 050a 	orr.w	r5, lr, sl
 8024a46:	950d      	str	r5, [sp, #52]	; 0x34
 8024a48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024a4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024a4e:	9d08      	ldr	r5, [sp, #32]
 8024a50:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024a54:	fb08 fc0c 	mul.w	ip, r8, ip
 8024a58:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024a5c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024a60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a62:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024a66:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024a6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024a6c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024a70:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024a74:	fb08 f80e 	mul.w	r8, r8, lr
 8024a78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024a7c:	fb03 8202 	mla	r2, r3, r2, r8
 8024a80:	9b08      	ldr	r3, [sp, #32]
 8024a82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024a84:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024a88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024a8a:	fb01 220a 	mla	r2, r1, sl, r2
 8024a8e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8024a92:	fb09 2901 	mla	r9, r9, r1, r2
 8024a96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024a98:	883b      	ldrh	r3, [r7, #0]
 8024a9a:	4342      	muls	r2, r0
 8024a9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024aa0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024aa4:	1c50      	adds	r0, r2, #1
 8024aa6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024aaa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024aae:	ea4c 0c09 	orr.w	ip, ip, r9
 8024ab2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024ab6:	1219      	asrs	r1, r3, #8
 8024ab8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024abc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024ac0:	b2c0      	uxtb	r0, r0
 8024ac2:	fb12 f205 	smulbb	r2, r2, r5
 8024ac6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024aca:	fb01 2100 	mla	r1, r1, r0, r2
 8024ace:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024ad2:	10da      	asrs	r2, r3, #3
 8024ad4:	fa5f fc8c 	uxtb.w	ip, ip
 8024ad8:	00db      	lsls	r3, r3, #3
 8024ada:	fb1c fc05 	smulbb	ip, ip, r5
 8024ade:	b2db      	uxtb	r3, r3
 8024ae0:	b289      	uxth	r1, r1
 8024ae2:	fb03 c300 	mla	r3, r3, r0, ip
 8024ae6:	fa1f fc83 	uxth.w	ip, r3
 8024aea:	1c4b      	adds	r3, r1, #1
 8024aec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024af0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024af4:	fb1e fe05 	smulbb	lr, lr, r5
 8024af8:	f10c 0301 	add.w	r3, ip, #1
 8024afc:	fb02 e200 	mla	r2, r2, r0, lr
 8024b00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024b04:	b292      	uxth	r2, r2
 8024b06:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024b0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b0e:	430b      	orrs	r3, r1
 8024b10:	1c51      	adds	r1, r2, #1
 8024b12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024b16:	0952      	lsrs	r2, r2, #5
 8024b18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b1c:	4313      	orrs	r3, r2
 8024b1e:	803b      	strh	r3, [r7, #0]
 8024b20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024b22:	441c      	add	r4, r3
 8024b24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024b26:	441e      	add	r6, r3
 8024b28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024b2a:	3b01      	subs	r3, #1
 8024b2c:	3702      	adds	r7, #2
 8024b2e:	9318      	str	r3, [sp, #96]	; 0x60
 8024b30:	e698      	b.n	8024864 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024b32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024b34:	441c      	add	r4, r3
 8024b36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024b38:	441e      	add	r6, r3
 8024b3a:	9b07      	ldr	r3, [sp, #28]
 8024b3c:	3b01      	subs	r3, #1
 8024b3e:	9307      	str	r3, [sp, #28]
 8024b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024b42:	3302      	adds	r3, #2
 8024b44:	930a      	str	r3, [sp, #40]	; 0x28
 8024b46:	e66d      	b.n	8024824 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024b48:	d023      	beq.n	8024b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024b4a:	9b07      	ldr	r3, [sp, #28]
 8024b4c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8024b4e:	3b01      	subs	r3, #1
 8024b50:	fb00 4003 	mla	r0, r0, r3, r4
 8024b54:	1400      	asrs	r0, r0, #16
 8024b56:	f53f ae82 	bmi.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b5a:	3901      	subs	r1, #1
 8024b5c:	4288      	cmp	r0, r1
 8024b5e:	f6bf ae7e 	bge.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b62:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024b64:	fb01 6303 	mla	r3, r1, r3, r6
 8024b68:	141b      	asrs	r3, r3, #16
 8024b6a:	f53f ae78 	bmi.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b6e:	3a01      	subs	r2, #1
 8024b70:	4293      	cmp	r3, r2
 8024b72:	f6bf ae74 	bge.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024b7a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024b7e:	f1bb 0f00 	cmp.w	fp, #0
 8024b82:	dc6c      	bgt.n	8024c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024b84:	9b07      	ldr	r3, [sp, #28]
 8024b86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024b8c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024b90:	930a      	str	r3, [sp, #40]	; 0x28
 8024b92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024b94:	2b00      	cmp	r3, #0
 8024b96:	f340 81b3 	ble.w	8024f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024b9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024ba2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024ba6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024ba8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024bac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024bb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024bb4:	eef0 6a62 	vmov.f32	s13, s5
 8024bb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024bbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024bc4:	ee16 4a90 	vmov	r4, s13
 8024bc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024bcc:	eef0 6a43 	vmov.f32	s13, s6
 8024bd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024bd4:	ee12 2a90 	vmov	r2, s5
 8024bd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024bdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8024be0:	ee13 2a10 	vmov	r2, s6
 8024be4:	9329      	str	r3, [sp, #164]	; 0xa4
 8024be6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024be8:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bec:	932a      	str	r3, [sp, #168]	; 0xa8
 8024bee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024bf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8024bf2:	3b01      	subs	r3, #1
 8024bf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bf8:	9317      	str	r3, [sp, #92]	; 0x5c
 8024bfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024bfc:	bf08      	it	eq
 8024bfe:	4613      	moveq	r3, r2
 8024c00:	ee16 6a90 	vmov	r6, s13
 8024c04:	9307      	str	r3, [sp, #28]
 8024c06:	eeb0 3a67 	vmov.f32	s6, s15
 8024c0a:	eef0 2a47 	vmov.f32	s5, s14
 8024c0e:	e5fb      	b.n	8024808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024c10:	2900      	cmp	r1, #0
 8024c12:	f43f ae6b 	beq.w	80248ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024c16:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024c1a:	9308      	str	r3, [sp, #32]
 8024c1c:	0e1b      	lsrs	r3, r3, #24
 8024c1e:	9311      	str	r3, [sp, #68]	; 0x44
 8024c20:	e664      	b.n	80248ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024c22:	f112 0801 	adds.w	r8, r2, #1
 8024c26:	f53f af7b 	bmi.w	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024c2a:	4543      	cmp	r3, r8
 8024c2c:	f6ff af78 	blt.w	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024c30:	f11c 0801 	adds.w	r8, ip, #1
 8024c34:	f53f af74 	bmi.w	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024c38:	45c6      	cmp	lr, r8
 8024c3a:	f6ff af71 	blt.w	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024c3e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8024c40:	9201      	str	r2, [sp, #4]
 8024c42:	fa0f f28e 	sxth.w	r2, lr
 8024c46:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024c4a:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024c4e:	9200      	str	r2, [sp, #0]
 8024c50:	b21b      	sxth	r3, r3
 8024c52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024c54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024c56:	4639      	mov	r1, r7
 8024c58:	f7ff fc79 	bl	802454e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024c5c:	e760      	b.n	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024c5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024c60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024c62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024c66:	1427      	asrs	r7, r4, #16
 8024c68:	1433      	asrs	r3, r6, #16
 8024c6a:	fb01 7303 	mla	r3, r1, r3, r7
 8024c6e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8024c72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024c76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024c7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024c7e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024c82:	2a00      	cmp	r2, #0
 8024c84:	f000 8133 	beq.w	8024eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024c88:	687d      	ldr	r5, [r7, #4]
 8024c8a:	950e      	str	r5, [sp, #56]	; 0x38
 8024c8c:	0e2d      	lsrs	r5, r5, #24
 8024c8e:	9515      	str	r5, [sp, #84]	; 0x54
 8024c90:	b178      	cbz	r0, 8024cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c92:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024c96:	3901      	subs	r1, #1
 8024c98:	0089      	lsls	r1, r1, #2
 8024c9a:	3104      	adds	r1, #4
 8024c9c:	eb07 0e01 	add.w	lr, r7, r1
 8024ca0:	5879      	ldr	r1, [r7, r1]
 8024ca2:	9109      	str	r1, [sp, #36]	; 0x24
 8024ca4:	0e09      	lsrs	r1, r1, #24
 8024ca6:	9112      	str	r1, [sp, #72]	; 0x48
 8024ca8:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024cac:	910f      	str	r1, [sp, #60]	; 0x3c
 8024cae:	0e09      	lsrs	r1, r1, #24
 8024cb0:	9116      	str	r1, [sp, #88]	; 0x58
 8024cb2:	b292      	uxth	r2, r2
 8024cb4:	b280      	uxth	r0, r0
 8024cb6:	fb02 f800 	mul.w	r8, r2, r0
 8024cba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024cbe:	0112      	lsls	r2, r2, #4
 8024cc0:	eba2 0e08 	sub.w	lr, r2, r8
 8024cc4:	b280      	uxth	r0, r0
 8024cc6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024cca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024ccc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024cce:	fa1f fe8e 	uxth.w	lr, lr
 8024cd2:	1a12      	subs	r2, r2, r0
 8024cd4:	b292      	uxth	r2, r2
 8024cd6:	fb0e f101 	mul.w	r1, lr, r1
 8024cda:	fb02 110c 	mla	r1, r2, ip, r1
 8024cde:	fb00 1105 	mla	r1, r0, r5, r1
 8024ce2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024ce4:	fb08 1105 	mla	r1, r8, r5, r1
 8024ce8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024cec:	2900      	cmp	r1, #0
 8024cee:	f000 80f5 	beq.w	8024edc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024cf2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024cf6:	d019      	beq.n	8024d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024cf8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024cfc:	fb0c fa0a 	mul.w	sl, ip, sl
 8024d00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024d04:	fb0c fc03 	mul.w	ip, ip, r3
 8024d08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024d0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024d10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024d14:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024d18:	4453      	add	r3, sl
 8024d1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024d1e:	0a1b      	lsrs	r3, r3, #8
 8024d20:	0a3f      	lsrs	r7, r7, #8
 8024d22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024d26:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024d2a:	433b      	orrs	r3, r7
 8024d2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024d2e:	2dff      	cmp	r5, #255	; 0xff
 8024d30:	d020      	beq.n	8024d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024d32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024d38:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024d3a:	436f      	muls	r7, r5
 8024d3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024d42:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024d44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024d48:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d4c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024d50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d54:	44bc      	add	ip, r7
 8024d56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024d5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024d5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d6e:	ea4c 050a 	orr.w	r5, ip, sl
 8024d72:	950e      	str	r5, [sp, #56]	; 0x38
 8024d74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d76:	2dff      	cmp	r5, #255	; 0xff
 8024d78:	d020      	beq.n	8024dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024d7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024d7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024d80:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d82:	436f      	muls	r7, r5
 8024d84:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024d86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024d8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024d90:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024d98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d9c:	44bc      	add	ip, r7
 8024d9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024da2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024da6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024db2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024db6:	ea4c 050a 	orr.w	r5, ip, sl
 8024dba:	9509      	str	r5, [sp, #36]	; 0x24
 8024dbc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024dbe:	2dff      	cmp	r5, #255	; 0xff
 8024dc0:	d020      	beq.n	8024e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024dc2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024dc4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024dc8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024dca:	436f      	muls	r7, r5
 8024dcc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024dce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024dd2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024dd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024dd8:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ddc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024de0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024de4:	44bc      	add	ip, r7
 8024de6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024dea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024dee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024df2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024df6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024dfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024dfe:	ea4c 050a 	orr.w	r5, ip, sl
 8024e02:	950f      	str	r5, [sp, #60]	; 0x3c
 8024e04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024e06:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024e0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024e0c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024e10:	fb0e f707 	mul.w	r7, lr, r7
 8024e14:	fb02 770c 	mla	r7, r2, ip, r7
 8024e18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024e1c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024e1e:	fb00 770c 	mla	r7, r0, ip, r7
 8024e22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024e26:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024e28:	fb08 770c 	mla	r7, r8, ip, r7
 8024e2c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024e30:	fb0e fe0c 	mul.w	lr, lr, ip
 8024e34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024e38:	fb02 e303 	mla	r3, r2, r3, lr
 8024e3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024e3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024e40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024e44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e46:	fb00 330a 	mla	r3, r0, sl, r3
 8024e4a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024e4e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024e54:	f8b9 0000 	ldrh.w	r0, [r9]
 8024e58:	4359      	muls	r1, r3
 8024e5a:	0a3f      	lsrs	r7, r7, #8
 8024e5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024e64:	1c4b      	adds	r3, r1, #1
 8024e66:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024e6a:	ea47 070c 	orr.w	r7, r7, ip
 8024e6e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024e72:	1202      	asrs	r2, r0, #8
 8024e74:	0c3b      	lsrs	r3, r7, #16
 8024e76:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024e7a:	b2c9      	uxtb	r1, r1
 8024e7c:	fb13 f305 	smulbb	r3, r3, r5
 8024e80:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024e84:	fb02 3201 	mla	r2, r2, r1, r3
 8024e88:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024e8c:	10c3      	asrs	r3, r0, #3
 8024e8e:	b2ff      	uxtb	r7, r7
 8024e90:	00c0      	lsls	r0, r0, #3
 8024e92:	b2c0      	uxtb	r0, r0
 8024e94:	fb17 f705 	smulbb	r7, r7, r5
 8024e98:	fb00 7001 	mla	r0, r0, r1, r7
 8024e9c:	b292      	uxth	r2, r2
 8024e9e:	fb1c fc05 	smulbb	ip, ip, r5
 8024ea2:	b280      	uxth	r0, r0
 8024ea4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024ea8:	fb03 c301 	mla	r3, r3, r1, ip
 8024eac:	1c51      	adds	r1, r2, #1
 8024eae:	f100 0c01 	add.w	ip, r0, #1
 8024eb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024eb6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024eba:	b29b      	uxth	r3, r3
 8024ebc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024ec0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024ec4:	ea4c 0202 	orr.w	r2, ip, r2
 8024ec8:	f103 0c01 	add.w	ip, r3, #1
 8024ecc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024ed0:	095b      	lsrs	r3, r3, #5
 8024ed2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ed6:	431a      	orrs	r2, r3
 8024ed8:	f8a9 2000 	strh.w	r2, [r9]
 8024edc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024ede:	441c      	add	r4, r3
 8024ee0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024ee2:	f109 0902 	add.w	r9, r9, #2
 8024ee6:	441e      	add	r6, r3
 8024ee8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024eec:	e647      	b.n	8024b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024eee:	2800      	cmp	r0, #0
 8024ef0:	f43f aedf 	beq.w	8024cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024ef4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024ef8:	9109      	str	r1, [sp, #36]	; 0x24
 8024efa:	0e09      	lsrs	r1, r1, #24
 8024efc:	9112      	str	r1, [sp, #72]	; 0x48
 8024efe:	e6d8      	b.n	8024cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024f00:	b01d      	add	sp, #116	; 0x74
 8024f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024f06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024f06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f0a:	b085      	sub	sp, #20
 8024f0c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024f10:	9102      	str	r1, [sp, #8]
 8024f12:	2c00      	cmp	r4, #0
 8024f14:	fb04 7103 	mla	r1, r4, r3, r7
 8024f18:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024f1c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024f20:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024f24:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024f28:	f2c0 810c 	blt.w	8025144 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024f2c:	45a6      	cmp	lr, r4
 8024f2e:	f340 8109 	ble.w	8025144 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024f32:	2f00      	cmp	r7, #0
 8024f34:	f2c0 8104 	blt.w	8025140 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024f38:	42bb      	cmp	r3, r7
 8024f3a:	f340 8101 	ble.w	8025140 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024f3e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024f42:	1c7a      	adds	r2, r7, #1
 8024f44:	f100 8101 	bmi.w	802514a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024f48:	4293      	cmp	r3, r2
 8024f4a:	f340 80fe 	ble.w	802514a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024f4e:	2e00      	cmp	r6, #0
 8024f50:	f000 80fd 	beq.w	802514e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024f54:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024f58:	3401      	adds	r4, #1
 8024f5a:	f100 80fc 	bmi.w	8025156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024f5e:	45a6      	cmp	lr, r4
 8024f60:	f340 80f9 	ble.w	8025156 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024f64:	2800      	cmp	r0, #0
 8024f66:	f000 80f9 	beq.w	802515c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024f6a:	2f00      	cmp	r7, #0
 8024f6c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024f70:	f2c0 80ef 	blt.w	8025152 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024f74:	42bb      	cmp	r3, r7
 8024f76:	f340 80ec 	ble.w	8025152 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024f7a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024f7e:	3701      	adds	r7, #1
 8024f80:	f100 80ef 	bmi.w	8025162 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024f84:	42bb      	cmp	r3, r7
 8024f86:	f340 80ec 	ble.w	8025162 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024f8a:	2e00      	cmp	r6, #0
 8024f8c:	f000 80eb 	beq.w	8025166 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024f90:	6852      	ldr	r2, [r2, #4]
 8024f92:	b2b6      	uxth	r6, r6
 8024f94:	b280      	uxth	r0, r0
 8024f96:	fb00 fe06 	mul.w	lr, r0, r6
 8024f9a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024f9e:	0136      	lsls	r6, r6, #4
 8024fa0:	eba6 070e 	sub.w	r7, r6, lr
 8024fa4:	b280      	uxth	r0, r0
 8024fa6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024faa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024fae:	b2bf      	uxth	r7, r7
 8024fb0:	1a1b      	subs	r3, r3, r0
 8024fb2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024fb6:	b29b      	uxth	r3, r3
 8024fb8:	fb07 f60a 	mul.w	r6, r7, sl
 8024fbc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024fc0:	fb0b 6603 	mla	r6, fp, r3, r6
 8024fc4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024fc8:	fb00 6609 	mla	r6, r0, r9, r6
 8024fcc:	fb0e 6608 	mla	r6, lr, r8, r6
 8024fd0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024fd4:	9600      	str	r6, [sp, #0]
 8024fd6:	2e00      	cmp	r6, #0
 8024fd8:	f000 80af 	beq.w	802513a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024fdc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024fe0:	fb0b fc0c 	mul.w	ip, fp, ip
 8024fe4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024fe8:	fb0b f505 	mul.w	r5, fp, r5
 8024fec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024ff0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024ff4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024ff8:	44dc      	add	ip, fp
 8024ffa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ffe:	9501      	str	r5, [sp, #4]
 8025000:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025004:	9503      	str	r5, [sp, #12]
 8025006:	9d01      	ldr	r5, [sp, #4]
 8025008:	9e02      	ldr	r6, [sp, #8]
 802500a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802500e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025012:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025016:	fb0a fc0c 	mul.w	ip, sl, ip
 802501a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802501e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025022:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025026:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802502a:	4465      	add	r5, ip
 802502c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025030:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025034:	fb09 fc0c 	mul.w	ip, r9, ip
 8025038:	fb09 f904 	mul.w	r9, r9, r4
 802503c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025040:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025044:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025048:	fb08 f404 	mul.w	r4, r8, r4
 802504c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025050:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025054:	fb08 f802 	mul.w	r8, r8, r2
 8025058:	fb0a fa01 	mul.w	sl, sl, r1
 802505c:	0a22      	lsrs	r2, r4, #8
 802505e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025062:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025066:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802506a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802506e:	4414      	add	r4, r2
 8025070:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025074:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025078:	0a2d      	lsrs	r5, r5, #8
 802507a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802507e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025082:	9a03      	ldr	r2, [sp, #12]
 8025084:	8836      	ldrh	r6, [r6, #0]
 8025086:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802508a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802508e:	437d      	muls	r5, r7
 8025090:	4461      	add	r1, ip
 8025092:	0a24      	lsrs	r4, r4, #8
 8025094:	fb02 5503 	mla	r5, r2, r3, r5
 8025098:	0a09      	lsrs	r1, r1, #8
 802509a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802509e:	fb04 540e 	mla	r4, r4, lr, r5
 80250a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80250a6:	fb01 4100 	mla	r1, r1, r0, r4
 80250aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250ae:	0a09      	lsrs	r1, r1, #8
 80250b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250b4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80250b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80250bc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80250c0:	fb07 f70a 	mul.w	r7, r7, sl
 80250c4:	fb03 7101 	mla	r1, r3, r1, r7
 80250c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80250cc:	9b00      	ldr	r3, [sp, #0]
 80250ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80250d2:	fb0e 1e08 	mla	lr, lr, r8, r1
 80250d6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80250da:	fb00 e101 	mla	r1, r0, r1, lr
 80250de:	43da      	mvns	r2, r3
 80250e0:	1233      	asrs	r3, r6, #8
 80250e2:	b2d2      	uxtb	r2, r2
 80250e4:	10f0      	asrs	r0, r6, #3
 80250e6:	0a09      	lsrs	r1, r1, #8
 80250e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80250ec:	00f6      	lsls	r6, r6, #3
 80250ee:	4353      	muls	r3, r2
 80250f0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80250f4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80250f8:	b2f6      	uxtb	r6, r6
 80250fa:	4321      	orrs	r1, r4
 80250fc:	4350      	muls	r0, r2
 80250fe:	4356      	muls	r6, r2
 8025100:	1c5a      	adds	r2, r3, #1
 8025102:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025106:	0c0b      	lsrs	r3, r1, #16
 8025108:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802510c:	1c42      	adds	r2, r0, #1
 802510e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025112:	0a0a      	lsrs	r2, r1, #8
 8025114:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025118:	021b      	lsls	r3, r3, #8
 802511a:	00d2      	lsls	r2, r2, #3
 802511c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025120:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025124:	4313      	orrs	r3, r2
 8025126:	1c72      	adds	r2, r6, #1
 8025128:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802512c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025130:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025134:	4319      	orrs	r1, r3
 8025136:	9b02      	ldr	r3, [sp, #8]
 8025138:	8019      	strh	r1, [r3, #0]
 802513a:	b005      	add	sp, #20
 802513c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025140:	2500      	movs	r5, #0
 8025142:	e6fe      	b.n	8024f42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025144:	2100      	movs	r1, #0
 8025146:	460d      	mov	r5, r1
 8025148:	e706      	b.n	8024f58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802514a:	2100      	movs	r1, #0
 802514c:	e704      	b.n	8024f58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802514e:	4631      	mov	r1, r6
 8025150:	e702      	b.n	8024f58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025152:	2400      	movs	r4, #0
 8025154:	e713      	b.n	8024f7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025156:	2200      	movs	r2, #0
 8025158:	4614      	mov	r4, r2
 802515a:	e71a      	b.n	8024f92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802515c:	4602      	mov	r2, r0
 802515e:	4604      	mov	r4, r0
 8025160:	e717      	b.n	8024f92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025162:	2200      	movs	r2, #0
 8025164:	e715      	b.n	8024f92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025166:	4632      	mov	r2, r6
 8025168:	e713      	b.n	8024f92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802516c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802516c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025170:	b09b      	sub	sp, #108	; 0x6c
 8025172:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025176:	9218      	str	r2, [sp, #96]	; 0x60
 8025178:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802517a:	9116      	str	r1, [sp, #88]	; 0x58
 802517c:	9307      	str	r3, [sp, #28]
 802517e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025182:	9019      	str	r0, [sp, #100]	; 0x64
 8025184:	6850      	ldr	r0, [r2, #4]
 8025186:	6812      	ldr	r2, [r2, #0]
 8025188:	fb00 1303 	mla	r3, r0, r3, r1
 802518c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025190:	930a      	str	r3, [sp, #40]	; 0x28
 8025192:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025194:	681b      	ldr	r3, [r3, #0]
 8025196:	930f      	str	r3, [sp, #60]	; 0x3c
 8025198:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802519a:	2b00      	cmp	r3, #0
 802519c:	dc03      	bgt.n	80251a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802519e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80251a0:	2b00      	cmp	r3, #0
 80251a2:	f340 8386 	ble.w	80258b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80251a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80251a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80251ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80251b0:	1e48      	subs	r0, r1, #1
 80251b2:	1e57      	subs	r7, r2, #1
 80251b4:	9b07      	ldr	r3, [sp, #28]
 80251b6:	2b00      	cmp	r3, #0
 80251b8:	f340 8166 	ble.w	8025488 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80251bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80251c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80251c4:	d406      	bmi.n	80251d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80251c6:	4584      	cmp	ip, r0
 80251c8:	da04      	bge.n	80251d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80251ca:	2b00      	cmp	r3, #0
 80251cc:	db02      	blt.n	80251d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80251ce:	42bb      	cmp	r3, r7
 80251d0:	f2c0 815b 	blt.w	802548a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80251d4:	f11c 0c01 	adds.w	ip, ip, #1
 80251d8:	f100 814b 	bmi.w	8025472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80251dc:	4561      	cmp	r1, ip
 80251de:	f2c0 8148 	blt.w	8025472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80251e2:	3301      	adds	r3, #1
 80251e4:	f100 8145 	bmi.w	8025472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80251e8:	429a      	cmp	r2, r3
 80251ea:	f2c0 8142 	blt.w	8025472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80251ee:	9b07      	ldr	r3, [sp, #28]
 80251f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80251f2:	9317      	str	r3, [sp, #92]	; 0x5c
 80251f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80251f6:	2b00      	cmp	r3, #0
 80251f8:	f340 8165 	ble.w	80254c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80251fc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80251fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025200:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025204:	689b      	ldr	r3, [r3, #8]
 8025206:	1422      	asrs	r2, r4, #16
 8025208:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802520c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025210:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025214:	f100 81d5 	bmi.w	80255c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025218:	f103 38ff 	add.w	r8, r3, #4294967295
 802521c:	4542      	cmp	r2, r8
 802521e:	f280 81d0 	bge.w	80255c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025222:	f1bc 0f00 	cmp.w	ip, #0
 8025226:	f2c0 81cc 	blt.w	80255c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802522a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802522e:	45c4      	cmp	ip, r8
 8025230:	f280 81c7 	bge.w	80255c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025234:	b21b      	sxth	r3, r3
 8025236:	fb0c 2203 	mla	r2, ip, r3, r2
 802523a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802523c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025240:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025244:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025248:	2900      	cmp	r1, #0
 802524a:	f000 8182 	beq.w	8025552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802524e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025252:	950b      	str	r5, [sp, #44]	; 0x2c
 8025254:	0e2d      	lsrs	r5, r5, #24
 8025256:	9512      	str	r5, [sp, #72]	; 0x48
 8025258:	b180      	cbz	r0, 802527c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802525a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802525e:	3b01      	subs	r3, #1
 8025260:	009b      	lsls	r3, r3, #2
 8025262:	3304      	adds	r3, #4
 8025264:	eb08 0c03 	add.w	ip, r8, r3
 8025268:	f858 3003 	ldr.w	r3, [r8, r3]
 802526c:	9308      	str	r3, [sp, #32]
 802526e:	0e1b      	lsrs	r3, r3, #24
 8025270:	9310      	str	r3, [sp, #64]	; 0x40
 8025272:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025276:	930c      	str	r3, [sp, #48]	; 0x30
 8025278:	0e1b      	lsrs	r3, r3, #24
 802527a:	9313      	str	r3, [sp, #76]	; 0x4c
 802527c:	b289      	uxth	r1, r1
 802527e:	b280      	uxth	r0, r0
 8025280:	fb01 f900 	mul.w	r9, r1, r0
 8025284:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025288:	0109      	lsls	r1, r1, #4
 802528a:	eba1 0809 	sub.w	r8, r1, r9
 802528e:	b280      	uxth	r0, r0
 8025290:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025294:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025296:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025298:	fa1f f888 	uxth.w	r8, r8
 802529c:	1a09      	subs	r1, r1, r0
 802529e:	b289      	uxth	r1, r1
 80252a0:	fb08 f303 	mul.w	r3, r8, r3
 80252a4:	fb01 330e 	mla	r3, r1, lr, r3
 80252a8:	fb00 3305 	mla	r3, r0, r5, r3
 80252ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80252ae:	fb09 3305 	mla	r3, r9, r5, r3
 80252b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80252b6:	2b00      	cmp	r3, #0
 80252b8:	f000 80d2 	beq.w	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80252c0:	d01b      	beq.n	80252fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80252c2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80252c6:	fb0e fa0a 	mul.w	sl, lr, sl
 80252ca:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80252ce:	fb0e fe02 	mul.w	lr, lr, r2
 80252d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80252d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80252da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80252de:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80252e2:	4452      	add	r2, sl
 80252e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80252e8:	0a12      	lsrs	r2, r2, #8
 80252ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80252f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80252f6:	ea42 020c 	orr.w	r2, r2, ip
 80252fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80252fc:	2dff      	cmp	r5, #255	; 0xff
 80252fe:	d021      	beq.n	8025344 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025300:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025302:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025306:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025308:	fb05 fb0b 	mul.w	fp, r5, fp
 802530c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802530e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025312:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025314:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025318:	fb05 fa0a 	mul.w	sl, r5, sl
 802531c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025320:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025324:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025328:	44de      	add	lr, fp
 802532a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802532e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025332:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025336:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802533a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802533e:	ea4e 050a 	orr.w	r5, lr, sl
 8025342:	950b      	str	r5, [sp, #44]	; 0x2c
 8025344:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025346:	2dff      	cmp	r5, #255	; 0xff
 8025348:	d021      	beq.n	802538e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802534a:	9d08      	ldr	r5, [sp, #32]
 802534c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025350:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025352:	fb05 fb0b 	mul.w	fp, r5, fp
 8025356:	9d08      	ldr	r5, [sp, #32]
 8025358:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802535c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802535e:	fb05 fa0e 	mul.w	sl, r5, lr
 8025362:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025366:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802536a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802536e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025372:	44de      	add	lr, fp
 8025374:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025378:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802537c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025380:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025384:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025388:	ea4e 050a 	orr.w	r5, lr, sl
 802538c:	9508      	str	r5, [sp, #32]
 802538e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025390:	2dff      	cmp	r5, #255	; 0xff
 8025392:	d021      	beq.n	80253d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025394:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025396:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802539a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802539c:	fb05 fb0b 	mul.w	fp, r5, fp
 80253a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80253a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80253a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80253a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80253ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80253b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80253b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80253b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80253bc:	44de      	add	lr, fp
 80253be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80253c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80253c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80253ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80253ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80253d2:	ea4e 050a 	orr.w	r5, lr, sl
 80253d6:	950c      	str	r5, [sp, #48]	; 0x30
 80253d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80253da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80253de:	9d08      	ldr	r5, [sp, #32]
 80253e0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80253e4:	fb08 fc0c 	mul.w	ip, r8, ip
 80253e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 80253ec:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80253f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80253f2:	fb00 cc0e 	mla	ip, r0, lr, ip
 80253f6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80253fa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80253fc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025400:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025404:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025408:	fb08 f80e 	mul.w	r8, r8, lr
 802540c:	fb01 8202 	mla	r2, r1, r2, r8
 8025410:	9908      	ldr	r1, [sp, #32]
 8025412:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025416:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025418:	fb00 220a 	mla	r2, r0, sl, r2
 802541c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025420:	fb09 2900 	mla	r9, r9, r0, r2
 8025424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025428:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802542c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025430:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025434:	ea4c 0c09 	orr.w	ip, ip, r9
 8025438:	2bff      	cmp	r3, #255	; 0xff
 802543a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802543e:	f040 8091 	bne.w	8025564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025442:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025446:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802544a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802544e:	f022 0207 	bic.w	r2, r2, #7
 8025452:	431a      	orrs	r2, r3
 8025454:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025458:	ea4c 0c02 	orr.w	ip, ip, r2
 802545c:	f8a7 c000 	strh.w	ip, [r7]
 8025460:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025462:	441c      	add	r4, r3
 8025464:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025466:	441e      	add	r6, r3
 8025468:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802546a:	3b01      	subs	r3, #1
 802546c:	3702      	adds	r7, #2
 802546e:	9317      	str	r3, [sp, #92]	; 0x5c
 8025470:	e6c0      	b.n	80251f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025472:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025474:	441c      	add	r4, r3
 8025476:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025478:	441e      	add	r6, r3
 802547a:	9b07      	ldr	r3, [sp, #28]
 802547c:	3b01      	subs	r3, #1
 802547e:	9307      	str	r3, [sp, #28]
 8025480:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025482:	3302      	adds	r3, #2
 8025484:	930a      	str	r3, [sp, #40]	; 0x28
 8025486:	e695      	b.n	80251b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025488:	d024      	beq.n	80254d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802548a:	9b07      	ldr	r3, [sp, #28]
 802548c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802548e:	3b01      	subs	r3, #1
 8025490:	fb00 4003 	mla	r0, r0, r3, r4
 8025494:	1400      	asrs	r0, r0, #16
 8025496:	f53f aeaa 	bmi.w	80251ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802549a:	3901      	subs	r1, #1
 802549c:	4288      	cmp	r0, r1
 802549e:	f6bf aea6 	bge.w	80251ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80254a2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80254a4:	fb01 6303 	mla	r3, r1, r3, r6
 80254a8:	141b      	asrs	r3, r3, #16
 80254aa:	f53f aea0 	bmi.w	80251ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80254ae:	3a01      	subs	r2, #1
 80254b0:	4293      	cmp	r3, r2
 80254b2:	f6bf ae9c 	bge.w	80251ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80254b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80254ba:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80254be:	f1bb 0f00 	cmp.w	fp, #0
 80254c2:	f300 809a 	bgt.w	80255fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80254c6:	9b07      	ldr	r3, [sp, #28]
 80254c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80254cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80254ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80254d2:	930a      	str	r3, [sp, #40]	; 0x28
 80254d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80254d6:	2b00      	cmp	r3, #0
 80254d8:	f340 81eb 	ble.w	80258b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80254dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80254e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80254e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80254e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80254ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80254f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80254f6:	eef0 6a62 	vmov.f32	s13, s5
 80254fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80254fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025502:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025506:	ee16 4a90 	vmov	r4, s13
 802550a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802550e:	eef0 6a43 	vmov.f32	s13, s6
 8025512:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025516:	ee12 2a90 	vmov	r2, s5
 802551a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802551e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025522:	ee13 2a10 	vmov	r2, s6
 8025526:	9327      	str	r3, [sp, #156]	; 0x9c
 8025528:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802552a:	fb92 f3f3 	sdiv	r3, r2, r3
 802552e:	9328      	str	r3, [sp, #160]	; 0xa0
 8025530:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025532:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025534:	3b01      	subs	r3, #1
 8025536:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802553a:	9316      	str	r3, [sp, #88]	; 0x58
 802553c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802553e:	bf08      	it	eq
 8025540:	4613      	moveq	r3, r2
 8025542:	ee16 6a90 	vmov	r6, s13
 8025546:	9307      	str	r3, [sp, #28]
 8025548:	eeb0 3a67 	vmov.f32	s6, s15
 802554c:	eef0 2a47 	vmov.f32	s5, s14
 8025550:	e622      	b.n	8025198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025552:	2800      	cmp	r0, #0
 8025554:	f43f ae92 	beq.w	802527c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025558:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802555c:	9308      	str	r3, [sp, #32]
 802555e:	0e1b      	lsrs	r3, r3, #24
 8025560:	9310      	str	r3, [sp, #64]	; 0x40
 8025562:	e68b      	b.n	802527c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025564:	8839      	ldrh	r1, [r7, #0]
 8025566:	4dd4      	ldr	r5, [pc, #848]	; (80258b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025568:	43db      	mvns	r3, r3
 802556a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802556e:	fa5f f883 	uxtb.w	r8, r3
 8025572:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025576:	fb0e fe08 	mul.w	lr, lr, r8
 802557a:	10c8      	asrs	r0, r1, #3
 802557c:	00cb      	lsls	r3, r1, #3
 802557e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025582:	f10e 0101 	add.w	r1, lr, #1
 8025586:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802558a:	fb00 f008 	mul.w	r0, r0, r8
 802558e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025592:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025596:	f100 0e01 	add.w	lr, r0, #1
 802559a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802559e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80255a2:	b2db      	uxtb	r3, r3
 80255a4:	b2c9      	uxtb	r1, r1
 80255a6:	00d2      	lsls	r2, r2, #3
 80255a8:	fb03 f308 	mul.w	r3, r3, r8
 80255ac:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80255b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255b4:	430a      	orrs	r2, r1
 80255b6:	1c59      	adds	r1, r3, #1
 80255b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80255bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80255c0:	e748      	b.n	8025454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80255c2:	f112 0801 	adds.w	r8, r2, #1
 80255c6:	f53f af4b 	bmi.w	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80255ca:	4543      	cmp	r3, r8
 80255cc:	f6ff af48 	blt.w	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80255d0:	f11c 0801 	adds.w	r8, ip, #1
 80255d4:	f53f af44 	bmi.w	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80255d8:	45c6      	cmp	lr, r8
 80255da:	f6ff af41 	blt.w	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80255de:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80255e2:	fa0f f28e 	sxth.w	r2, lr
 80255e6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80255ea:	9200      	str	r2, [sp, #0]
 80255ec:	b21b      	sxth	r3, r3
 80255ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80255f0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80255f2:	4639      	mov	r1, r7
 80255f4:	f7ff fc87 	bl	8024f06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80255f8:	e732      	b.n	8025460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80255fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80255fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80255fe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025602:	1421      	asrs	r1, r4, #16
 8025604:	1433      	asrs	r3, r6, #16
 8025606:	fb07 1303 	mla	r3, r7, r3, r1
 802560a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802560c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025610:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025614:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025618:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802561c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025620:	2a00      	cmp	r2, #0
 8025622:	f000 8107 	beq.w	8025834 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025626:	684d      	ldr	r5, [r1, #4]
 8025628:	950d      	str	r5, [sp, #52]	; 0x34
 802562a:	0e2d      	lsrs	r5, r5, #24
 802562c:	9514      	str	r5, [sp, #80]	; 0x50
 802562e:	b178      	cbz	r0, 8025650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025630:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025634:	3f01      	subs	r7, #1
 8025636:	00bf      	lsls	r7, r7, #2
 8025638:	3704      	adds	r7, #4
 802563a:	eb01 0e07 	add.w	lr, r1, r7
 802563e:	59c9      	ldr	r1, [r1, r7]
 8025640:	9109      	str	r1, [sp, #36]	; 0x24
 8025642:	0e09      	lsrs	r1, r1, #24
 8025644:	9111      	str	r1, [sp, #68]	; 0x44
 8025646:	f8de 1004 	ldr.w	r1, [lr, #4]
 802564a:	910e      	str	r1, [sp, #56]	; 0x38
 802564c:	0e09      	lsrs	r1, r1, #24
 802564e:	9115      	str	r1, [sp, #84]	; 0x54
 8025650:	b292      	uxth	r2, r2
 8025652:	b280      	uxth	r0, r0
 8025654:	fb02 f900 	mul.w	r9, r2, r0
 8025658:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802565c:	0112      	lsls	r2, r2, #4
 802565e:	eba2 0e09 	sub.w	lr, r2, r9
 8025662:	b280      	uxth	r0, r0
 8025664:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025668:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802566a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802566c:	fa1f fe8e 	uxth.w	lr, lr
 8025670:	1a09      	subs	r1, r1, r0
 8025672:	b289      	uxth	r1, r1
 8025674:	fb0e f202 	mul.w	r2, lr, r2
 8025678:	fb01 220c 	mla	r2, r1, ip, r2
 802567c:	fb00 2205 	mla	r2, r0, r5, r2
 8025680:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025682:	fb09 2205 	mla	r2, r9, r5, r2
 8025686:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802568a:	2a00      	cmp	r2, #0
 802568c:	f000 80c9 	beq.w	8025822 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025690:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025694:	d019      	beq.n	80256ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025696:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802569a:	fb0c fa0a 	mul.w	sl, ip, sl
 802569e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80256a2:	fb0c fc03 	mul.w	ip, ip, r3
 80256a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80256aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80256ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80256b2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80256b6:	4453      	add	r3, sl
 80256b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80256bc:	0a1b      	lsrs	r3, r3, #8
 80256be:	0a3f      	lsrs	r7, r7, #8
 80256c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80256c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80256c8:	433b      	orrs	r3, r7
 80256ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80256cc:	2dff      	cmp	r5, #255	; 0xff
 80256ce:	d020      	beq.n	8025712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80256d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80256d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80256d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80256d8:	436f      	muls	r7, r5
 80256da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80256dc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80256e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80256e6:	fb05 fa0a 	mul.w	sl, r5, sl
 80256ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80256ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256f2:	44bc      	add	ip, r7
 80256f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80256f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80256fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025700:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025704:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025708:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802570c:	ea4c 050a 	orr.w	r5, ip, sl
 8025710:	950d      	str	r5, [sp, #52]	; 0x34
 8025712:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025714:	2dff      	cmp	r5, #255	; 0xff
 8025716:	d020      	beq.n	802575a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025718:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802571a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802571e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025720:	436f      	muls	r7, r5
 8025722:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025724:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025728:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802572a:	fb05 fa0c 	mul.w	sl, r5, ip
 802572e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025736:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802573a:	44bc      	add	ip, r7
 802573c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025740:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025744:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025748:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802574c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025750:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025754:	ea4c 050a 	orr.w	r5, ip, sl
 8025758:	9509      	str	r5, [sp, #36]	; 0x24
 802575a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802575c:	2dff      	cmp	r5, #255	; 0xff
 802575e:	d020      	beq.n	80257a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025760:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025762:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025766:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025768:	436f      	muls	r7, r5
 802576a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802576c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025770:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025772:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025776:	fb05 fa0a 	mul.w	sl, r5, sl
 802577a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802577e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025782:	44bc      	add	ip, r7
 8025784:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025788:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802578c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025790:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025794:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025798:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802579c:	ea4c 050a 	orr.w	r5, ip, sl
 80257a0:	950e      	str	r5, [sp, #56]	; 0x38
 80257a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80257a4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80257a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80257aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80257ae:	fb0e f707 	mul.w	r7, lr, r7
 80257b2:	fb01 770c 	mla	r7, r1, ip, r7
 80257b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80257ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80257bc:	fb00 770c 	mla	r7, r0, ip, r7
 80257c0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80257c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80257c6:	fb09 770c 	mla	r7, r9, ip, r7
 80257ca:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80257ce:	fb0e fe0c 	mul.w	lr, lr, ip
 80257d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80257d6:	fb01 e303 	mla	r3, r1, r3, lr
 80257da:	9909      	ldr	r1, [sp, #36]	; 0x24
 80257dc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80257e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80257e2:	fb00 330a 	mla	r3, r0, sl, r3
 80257e6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80257ea:	fb09 3c0c 	mla	ip, r9, ip, r3
 80257ee:	0a3f      	lsrs	r7, r7, #8
 80257f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80257f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80257fc:	ea47 070c 	orr.w	r7, r7, ip
 8025800:	2aff      	cmp	r2, #255	; 0xff
 8025802:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025806:	d11e      	bne.n	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025808:	097a      	lsrs	r2, r7, #5
 802580a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802580e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025812:	f023 0307 	bic.w	r3, r3, #7
 8025816:	4313      	orrs	r3, r2
 8025818:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802581c:	431f      	orrs	r7, r3
 802581e:	f8a8 7000 	strh.w	r7, [r8]
 8025822:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025824:	441c      	add	r4, r3
 8025826:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025828:	f108 0802 	add.w	r8, r8, #2
 802582c:	441e      	add	r6, r3
 802582e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025832:	e644      	b.n	80254be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025834:	2800      	cmp	r0, #0
 8025836:	f43f af0b 	beq.w	8025650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802583a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802583e:	9109      	str	r1, [sp, #36]	; 0x24
 8025840:	0e09      	lsrs	r1, r1, #24
 8025842:	9111      	str	r1, [sp, #68]	; 0x44
 8025844:	e704      	b.n	8025650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025846:	f8b8 1000 	ldrh.w	r1, [r8]
 802584a:	43d2      	mvns	r2, r2
 802584c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025850:	fa5f fe82 	uxtb.w	lr, r2
 8025854:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025858:	fb0c fc0e 	mul.w	ip, ip, lr
 802585c:	10c8      	asrs	r0, r1, #3
 802585e:	00ca      	lsls	r2, r1, #3
 8025860:	f10c 0101 	add.w	r1, ip, #1
 8025864:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025868:	0c39      	lsrs	r1, r7, #16
 802586a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802586e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025872:	4911      	ldr	r1, [pc, #68]	; (80258b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025874:	fb00 f00e 	mul.w	r0, r0, lr
 8025878:	fa5f fc8c 	uxtb.w	ip, ip
 802587c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025880:	b2d2      	uxtb	r2, r2
 8025882:	1c41      	adds	r1, r0, #1
 8025884:	fb02 f20e 	mul.w	r2, r2, lr
 8025888:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802588c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025890:	1c51      	adds	r1, r2, #1
 8025892:	00c0      	lsls	r0, r0, #3
 8025894:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025898:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802589c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80258a0:	ea4c 0c00 	orr.w	ip, ip, r0
 80258a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80258a8:	ea47 0c0c 	orr.w	ip, r7, ip
 80258ac:	f8a8 c000 	strh.w	ip, [r8]
 80258b0:	e7b7      	b.n	8025822 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80258b2:	b01b      	add	sp, #108	; 0x6c
 80258b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80258b8:	fffff800 	.word	0xfffff800

080258bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80258bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80258c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80258c4:	2d00      	cmp	r5, #0
 80258c6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80258ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80258ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80258d2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80258d6:	fb05 0e03 	mla	lr, r5, r3, r0
 80258da:	f2c0 808c 	blt.w	80259f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80258de:	45a9      	cmp	r9, r5
 80258e0:	f340 8089 	ble.w	80259f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80258e4:	2800      	cmp	r0, #0
 80258e6:	f2c0 8084 	blt.w	80259f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80258ea:	4580      	cmp	r8, r0
 80258ec:	f340 8081 	ble.w	80259f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80258f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80258f4:	f01e 0f01 	tst.w	lr, #1
 80258f8:	5d16      	ldrb	r6, [r2, r4]
 80258fa:	bf0c      	ite	eq
 80258fc:	f006 060f 	andeq.w	r6, r6, #15
 8025900:	1136      	asrne	r6, r6, #4
 8025902:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025906:	b2f6      	uxtb	r6, r6
 8025908:	1c44      	adds	r4, r0, #1
 802590a:	d477      	bmi.n	80259fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802590c:	45a0      	cmp	r8, r4
 802590e:	dd75      	ble.n	80259fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025910:	2f00      	cmp	r7, #0
 8025912:	d075      	beq.n	8025a00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025914:	f10e 0a01 	add.w	sl, lr, #1
 8025918:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802591c:	f01a 0f01 	tst.w	sl, #1
 8025920:	5d14      	ldrb	r4, [r2, r4]
 8025922:	bf0c      	ite	eq
 8025924:	f004 040f 	andeq.w	r4, r4, #15
 8025928:	1124      	asrne	r4, r4, #4
 802592a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802592e:	b2e4      	uxtb	r4, r4
 8025930:	3501      	adds	r5, #1
 8025932:	d469      	bmi.n	8025a08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025934:	45a9      	cmp	r9, r5
 8025936:	dd67      	ble.n	8025a08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025938:	f1bc 0f00 	cmp.w	ip, #0
 802593c:	d067      	beq.n	8025a0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802593e:	2800      	cmp	r0, #0
 8025940:	db60      	blt.n	8025a04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025942:	4580      	cmp	r8, r0
 8025944:	dd5e      	ble.n	8025a04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025946:	eb03 090e 	add.w	r9, r3, lr
 802594a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802594e:	f019 0f01 	tst.w	r9, #1
 8025952:	5d55      	ldrb	r5, [r2, r5]
 8025954:	bf0c      	ite	eq
 8025956:	f005 050f 	andeq.w	r5, r5, #15
 802595a:	112d      	asrne	r5, r5, #4
 802595c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025960:	b2ed      	uxtb	r5, r5
 8025962:	3001      	adds	r0, #1
 8025964:	d456      	bmi.n	8025a14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025966:	4580      	cmp	r8, r0
 8025968:	dd54      	ble.n	8025a14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802596a:	2f00      	cmp	r7, #0
 802596c:	d054      	beq.n	8025a18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802596e:	3301      	adds	r3, #1
 8025970:	449e      	add	lr, r3
 8025972:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025976:	f01e 0f01 	tst.w	lr, #1
 802597a:	5cd0      	ldrb	r0, [r2, r3]
 802597c:	bf0c      	ite	eq
 802597e:	f000 000f 	andeq.w	r0, r0, #15
 8025982:	1100      	asrne	r0, r0, #4
 8025984:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025988:	b2c3      	uxtb	r3, r0
 802598a:	b2ba      	uxth	r2, r7
 802598c:	fa1f fc8c 	uxth.w	ip, ip
 8025990:	fb02 f00c 	mul.w	r0, r2, ip
 8025994:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025998:	0112      	lsls	r2, r2, #4
 802599a:	fa1f fc8c 	uxth.w	ip, ip
 802599e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80259a2:	1a12      	subs	r2, r2, r0
 80259a4:	eba7 070c 	sub.w	r7, r7, ip
 80259a8:	b292      	uxth	r2, r2
 80259aa:	b2bf      	uxth	r7, r7
 80259ac:	4362      	muls	r2, r4
 80259ae:	fb06 2207 	mla	r2, r6, r7, r2
 80259b2:	fb0c 2505 	mla	r5, ip, r5, r2
 80259b6:	fb00 5303 	mla	r3, r0, r3, r5
 80259ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80259be:	b1b3      	cbz	r3, 80259ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80259c0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80259c4:	435a      	muls	r2, r3
 80259c6:	1c53      	adds	r3, r2, #1
 80259c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80259cc:	4a2d      	ldr	r2, [pc, #180]	; (8025a84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80259ce:	121b      	asrs	r3, r3, #8
 80259d0:	6812      	ldr	r2, [r2, #0]
 80259d2:	2bff      	cmp	r3, #255	; 0xff
 80259d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80259d8:	d120      	bne.n	8025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80259da:	4b2b      	ldr	r3, [pc, #172]	; (8025a88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80259dc:	0950      	lsrs	r0, r2, #5
 80259de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80259e2:	4033      	ands	r3, r6
 80259e4:	4318      	orrs	r0, r3
 80259e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80259ea:	4302      	orrs	r2, r0
 80259ec:	800a      	strh	r2, [r1, #0]
 80259ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80259f2:	2600      	movs	r6, #0
 80259f4:	e788      	b.n	8025908 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80259f6:	2400      	movs	r4, #0
 80259f8:	4626      	mov	r6, r4
 80259fa:	e799      	b.n	8025930 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80259fc:	2400      	movs	r4, #0
 80259fe:	e797      	b.n	8025930 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025a00:	463c      	mov	r4, r7
 8025a02:	e795      	b.n	8025930 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025a04:	2500      	movs	r5, #0
 8025a06:	e7ac      	b.n	8025962 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025a08:	2300      	movs	r3, #0
 8025a0a:	461d      	mov	r5, r3
 8025a0c:	e7bd      	b.n	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025a0e:	4663      	mov	r3, ip
 8025a10:	4665      	mov	r5, ip
 8025a12:	e7ba      	b.n	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025a14:	2300      	movs	r3, #0
 8025a16:	e7b8      	b.n	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025a18:	463b      	mov	r3, r7
 8025a1a:	e7b6      	b.n	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025a1c:	880d      	ldrh	r5, [r1, #0]
 8025a1e:	b29f      	uxth	r7, r3
 8025a20:	122c      	asrs	r4, r5, #8
 8025a22:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025a26:	43db      	mvns	r3, r3
 8025a28:	b2db      	uxtb	r3, r3
 8025a2a:	fb10 f007 	smulbb	r0, r0, r7
 8025a2e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025a32:	fb04 0403 	mla	r4, r4, r3, r0
 8025a36:	b2f6      	uxtb	r6, r6
 8025a38:	10e8      	asrs	r0, r5, #3
 8025a3a:	b2d2      	uxtb	r2, r2
 8025a3c:	00ed      	lsls	r5, r5, #3
 8025a3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a42:	fb12 f207 	smulbb	r2, r2, r7
 8025a46:	fb16 f607 	smulbb	r6, r6, r7
 8025a4a:	b2ed      	uxtb	r5, r5
 8025a4c:	b2a4      	uxth	r4, r4
 8025a4e:	fb00 6603 	mla	r6, r0, r3, r6
 8025a52:	fb05 2303 	mla	r3, r5, r3, r2
 8025a56:	b29a      	uxth	r2, r3
 8025a58:	1c63      	adds	r3, r4, #1
 8025a5a:	b2b0      	uxth	r0, r6
 8025a5c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025a60:	1c53      	adds	r3, r2, #1
 8025a62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025a66:	1c42      	adds	r2, r0, #1
 8025a68:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025a6c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025a70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025a74:	0940      	lsrs	r0, r0, #5
 8025a76:	4323      	orrs	r3, r4
 8025a78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a7c:	4303      	orrs	r3, r0
 8025a7e:	800b      	strh	r3, [r1, #0]
 8025a80:	e7b5      	b.n	80259ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025a82:	bf00      	nop
 8025a84:	20013454 	.word	0x20013454
 8025a88:	00fff800 	.word	0x00fff800

08025a8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a90:	b097      	sub	sp, #92	; 0x5c
 8025a92:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025a96:	9214      	str	r2, [sp, #80]	; 0x50
 8025a98:	9309      	str	r3, [sp, #36]	; 0x24
 8025a9a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025a9c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025aa0:	910d      	str	r1, [sp, #52]	; 0x34
 8025aa2:	930f      	str	r3, [sp, #60]	; 0x3c
 8025aa4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025aa8:	9015      	str	r0, [sp, #84]	; 0x54
 8025aaa:	6850      	ldr	r0, [r2, #4]
 8025aac:	6812      	ldr	r2, [r2, #0]
 8025aae:	fb00 1303 	mla	r3, r0, r3, r1
 8025ab2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025ab6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025ab8:	689b      	ldr	r3, [r3, #8]
 8025aba:	3301      	adds	r3, #1
 8025abc:	f023 0301 	bic.w	r3, r3, #1
 8025ac0:	930a      	str	r3, [sp, #40]	; 0x28
 8025ac2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025ac4:	681f      	ldr	r7, [r3, #0]
 8025ac6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025ac8:	2b00      	cmp	r3, #0
 8025aca:	dc03      	bgt.n	8025ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025acc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025ace:	2b00      	cmp	r3, #0
 8025ad0:	f340 8287 	ble.w	8025fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025ad4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025ad6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ada:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ade:	1e48      	subs	r0, r1, #1
 8025ae0:	f102 3cff 	add.w	ip, r2, #4294967295
 8025ae4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025ae6:	2b00      	cmp	r3, #0
 8025ae8:	f340 80c4 	ble.w	8025c74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025aec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025af0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025af4:	d406      	bmi.n	8025b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025af6:	4586      	cmp	lr, r0
 8025af8:	da04      	bge.n	8025b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025afa:	2b00      	cmp	r3, #0
 8025afc:	db02      	blt.n	8025b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025afe:	4563      	cmp	r3, ip
 8025b00:	f2c0 80b9 	blt.w	8025c76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025b04:	f11e 0e01 	adds.w	lr, lr, #1
 8025b08:	f100 80aa 	bmi.w	8025c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025b0c:	4571      	cmp	r1, lr
 8025b0e:	f2c0 80a7 	blt.w	8025c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025b12:	3301      	adds	r3, #1
 8025b14:	f100 80a4 	bmi.w	8025c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025b18:	429a      	cmp	r2, r3
 8025b1a:	f2c0 80a1 	blt.w	8025c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025b1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025b20:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8025b24:	930e      	str	r3, [sp, #56]	; 0x38
 8025b26:	46c8      	mov	r8, r9
 8025b28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025b2a:	2b00      	cmp	r3, #0
 8025b2c:	f340 80c3 	ble.w	8025cb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025b30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025b32:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025b36:	1423      	asrs	r3, r4, #16
 8025b38:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025b3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025b40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025b44:	f100 814d 	bmi.w	8025de2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025b48:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025b4c:	455b      	cmp	r3, fp
 8025b4e:	f280 8148 	bge.w	8025de2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025b52:	2800      	cmp	r0, #0
 8025b54:	f2c0 8145 	blt.w	8025de2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025b58:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025b5c:	4558      	cmp	r0, fp
 8025b5e:	f280 8140 	bge.w	8025de2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025b62:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025b64:	fb00 3305 	mla	r3, r0, r5, r3
 8025b68:	0858      	lsrs	r0, r3, #1
 8025b6a:	07dd      	lsls	r5, r3, #31
 8025b6c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025b70:	bf54      	ite	pl
 8025b72:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025b76:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025b7a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b7e:	fa5f fc8c 	uxtb.w	ip, ip
 8025b82:	2a00      	cmp	r2, #0
 8025b84:	f000 80db 	beq.w	8025d3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025b88:	1c58      	adds	r0, r3, #1
 8025b8a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025b8e:	07c0      	lsls	r0, r0, #31
 8025b90:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025b94:	bf54      	ite	pl
 8025b96:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025b9a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025b9e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025ba2:	fa5f f08e 	uxtb.w	r0, lr
 8025ba6:	9010      	str	r0, [sp, #64]	; 0x40
 8025ba8:	b1c9      	cbz	r1, 8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025baa:	4453      	add	r3, sl
 8025bac:	0858      	lsrs	r0, r3, #1
 8025bae:	07dd      	lsls	r5, r3, #31
 8025bb0:	5c38      	ldrb	r0, [r7, r0]
 8025bb2:	bf54      	ite	pl
 8025bb4:	f000 000f 	andpl.w	r0, r0, #15
 8025bb8:	1100      	asrmi	r0, r0, #4
 8025bba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025bbe:	3301      	adds	r3, #1
 8025bc0:	b2c0      	uxtb	r0, r0
 8025bc2:	900b      	str	r0, [sp, #44]	; 0x2c
 8025bc4:	0858      	lsrs	r0, r3, #1
 8025bc6:	07dd      	lsls	r5, r3, #31
 8025bc8:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025bcc:	bf54      	ite	pl
 8025bce:	f00e 030f 	andpl.w	r3, lr, #15
 8025bd2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025bd6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025bda:	b2db      	uxtb	r3, r3
 8025bdc:	9311      	str	r3, [sp, #68]	; 0x44
 8025bde:	b292      	uxth	r2, r2
 8025be0:	b289      	uxth	r1, r1
 8025be2:	fb02 f301 	mul.w	r3, r2, r1
 8025be6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025bea:	0112      	lsls	r2, r2, #4
 8025bec:	b289      	uxth	r1, r1
 8025bee:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025bf2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025bf4:	1ad2      	subs	r2, r2, r3
 8025bf6:	1a40      	subs	r0, r0, r1
 8025bf8:	b292      	uxth	r2, r2
 8025bfa:	436a      	muls	r2, r5
 8025bfc:	b280      	uxth	r0, r0
 8025bfe:	fb0c 2c00 	mla	ip, ip, r0, r2
 8025c02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025c04:	fb01 c102 	mla	r1, r1, r2, ip
 8025c08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025c0a:	fb03 1302 	mla	r3, r3, r2, r1
 8025c0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c12:	b1db      	cbz	r3, 8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025c16:	4353      	muls	r3, r2
 8025c18:	1c5a      	adds	r2, r3, #1
 8025c1a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025c1e:	4ac6      	ldr	r2, [pc, #792]	; (8025f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025c20:	121b      	asrs	r3, r3, #8
 8025c22:	6812      	ldr	r2, [r2, #0]
 8025c24:	2bff      	cmp	r3, #255	; 0xff
 8025c26:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025c2a:	f040 8099 	bne.w	8025d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8025c2e:	0953      	lsrs	r3, r2, #5
 8025c30:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025c34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c38:	f02c 0c07 	bic.w	ip, ip, #7
 8025c3c:	ea43 0c0c 	orr.w	ip, r3, ip
 8025c40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025c44:	ea4c 0202 	orr.w	r2, ip, r2
 8025c48:	f8a8 2000 	strh.w	r2, [r8]
 8025c4c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025c4e:	441c      	add	r4, r3
 8025c50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c52:	441e      	add	r6, r3
 8025c54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025c56:	3b01      	subs	r3, #1
 8025c58:	f108 0802 	add.w	r8, r8, #2
 8025c5c:	930e      	str	r3, [sp, #56]	; 0x38
 8025c5e:	e763      	b.n	8025b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025c60:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025c62:	441c      	add	r4, r3
 8025c64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c66:	441e      	add	r6, r3
 8025c68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c6a:	3b01      	subs	r3, #1
 8025c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8025c6e:	f109 0902 	add.w	r9, r9, #2
 8025c72:	e737      	b.n	8025ae4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025c74:	d024      	beq.n	8025cc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025c76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c78:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025c7a:	3b01      	subs	r3, #1
 8025c7c:	fb00 4003 	mla	r0, r0, r3, r4
 8025c80:	1400      	asrs	r0, r0, #16
 8025c82:	f53f af4c 	bmi.w	8025b1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c86:	3901      	subs	r1, #1
 8025c88:	4288      	cmp	r0, r1
 8025c8a:	f6bf af48 	bge.w	8025b1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c8e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025c90:	fb01 6303 	mla	r3, r1, r3, r6
 8025c94:	141b      	asrs	r3, r3, #16
 8025c96:	f53f af42 	bmi.w	8025b1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c9a:	3a01      	subs	r2, #1
 8025c9c:	4293      	cmp	r3, r2
 8025c9e:	f6bf af3e 	bge.w	8025b1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025ca2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025ca6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025caa:	930e      	str	r3, [sp, #56]	; 0x38
 8025cac:	46c8      	mov	r8, r9
 8025cae:	f1bb 0f00 	cmp.w	fp, #0
 8025cb2:	f300 80b7 	bgt.w	8025e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025cb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025cb8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025cbc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025cc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025cc2:	2b00      	cmp	r3, #0
 8025cc4:	f340 818d 	ble.w	8025fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025cc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025ccc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025cd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025cd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025cd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025cda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025cde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025ce2:	eef0 6a62 	vmov.f32	s13, s5
 8025ce6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025cea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025cee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025cf2:	ee16 4a90 	vmov	r4, s13
 8025cf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025cfa:	eef0 6a43 	vmov.f32	s13, s6
 8025cfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025d02:	ee12 2a90 	vmov	r2, s5
 8025d06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025d0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d0e:	ee13 2a10 	vmov	r2, s6
 8025d12:	9323      	str	r3, [sp, #140]	; 0x8c
 8025d14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d1a:	9324      	str	r3, [sp, #144]	; 0x90
 8025d1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025d20:	3b01      	subs	r3, #1
 8025d22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d26:	930d      	str	r3, [sp, #52]	; 0x34
 8025d28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d2a:	bf08      	it	eq
 8025d2c:	4613      	moveq	r3, r2
 8025d2e:	ee16 6a90 	vmov	r6, s13
 8025d32:	9309      	str	r3, [sp, #36]	; 0x24
 8025d34:	eeb0 3a67 	vmov.f32	s6, s15
 8025d38:	eef0 2a47 	vmov.f32	s5, s14
 8025d3c:	e6c3      	b.n	8025ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025d3e:	2900      	cmp	r1, #0
 8025d40:	f43f af4d 	beq.w	8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025d44:	eb0a 0003 	add.w	r0, sl, r3
 8025d48:	0843      	lsrs	r3, r0, #1
 8025d4a:	07c0      	lsls	r0, r0, #31
 8025d4c:	5cfb      	ldrb	r3, [r7, r3]
 8025d4e:	bf54      	ite	pl
 8025d50:	f003 030f 	andpl.w	r3, r3, #15
 8025d54:	111b      	asrmi	r3, r3, #4
 8025d56:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025d5a:	b2db      	uxtb	r3, r3
 8025d5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8025d5e:	e73e      	b.n	8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025d60:	f8b8 e000 	ldrh.w	lr, [r8]
 8025d64:	fa1f fb83 	uxth.w	fp, r3
 8025d68:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025d6c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025d70:	43db      	mvns	r3, r3
 8025d72:	b2db      	uxtb	r3, r3
 8025d74:	fb11 f10b 	smulbb	r1, r1, fp
 8025d78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025d7c:	fb00 1003 	mla	r0, r0, r3, r1
 8025d80:	fa5f fc8c 	uxtb.w	ip, ip
 8025d84:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025d88:	b2d2      	uxtb	r2, r2
 8025d8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025d8e:	b280      	uxth	r0, r0
 8025d90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025d94:	fb1c fc0b 	smulbb	ip, ip, fp
 8025d98:	fa5f fe8e 	uxtb.w	lr, lr
 8025d9c:	fb12 fb0b 	smulbb	fp, r2, fp
 8025da0:	fb01 cc03 	mla	ip, r1, r3, ip
 8025da4:	fb0e bb03 	mla	fp, lr, r3, fp
 8025da8:	1c43      	adds	r3, r0, #1
 8025daa:	fa1f fc8c 	uxth.w	ip, ip
 8025dae:	fa1f fb8b 	uxth.w	fp, fp
 8025db2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025db6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025dba:	f10c 0101 	add.w	r1, ip, #1
 8025dbe:	f10b 0001 	add.w	r0, fp, #1
 8025dc2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025dc6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025dca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025dce:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025dd2:	4318      	orrs	r0, r3
 8025dd4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025dd8:	ea40 000c 	orr.w	r0, r0, ip
 8025ddc:	f8a8 0000 	strh.w	r0, [r8]
 8025de0:	e734      	b.n	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025de2:	f113 0b01 	adds.w	fp, r3, #1
 8025de6:	f53f af31 	bmi.w	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025dea:	45dc      	cmp	ip, fp
 8025dec:	f6ff af2e 	blt.w	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025df0:	f110 0b01 	adds.w	fp, r0, #1
 8025df4:	f53f af2a 	bmi.w	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025df8:	45de      	cmp	lr, fp
 8025dfa:	f6ff af27 	blt.w	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025dfe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025e00:	9302      	str	r3, [sp, #8]
 8025e02:	fa0f f38e 	sxth.w	r3, lr
 8025e06:	9301      	str	r3, [sp, #4]
 8025e08:	fa0f f38c 	sxth.w	r3, ip
 8025e0c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025e10:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025e14:	9300      	str	r3, [sp, #0]
 8025e16:	463a      	mov	r2, r7
 8025e18:	4653      	mov	r3, sl
 8025e1a:	4641      	mov	r1, r8
 8025e1c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025e1e:	f7ff fd4d 	bl	80258bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025e22:	e713      	b.n	8025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025e24:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025e26:	1422      	asrs	r2, r4, #16
 8025e28:	1433      	asrs	r3, r6, #16
 8025e2a:	fb05 2303 	mla	r3, r5, r3, r2
 8025e2e:	085a      	lsrs	r2, r3, #1
 8025e30:	07dd      	lsls	r5, r3, #31
 8025e32:	5cba      	ldrb	r2, [r7, r2]
 8025e34:	bf54      	ite	pl
 8025e36:	f002 020f 	andpl.w	r2, r2, #15
 8025e3a:	1112      	asrmi	r2, r2, #4
 8025e3c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025e40:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025e44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025e48:	b2d2      	uxtb	r2, r2
 8025e4a:	2900      	cmp	r1, #0
 8025e4c:	d076      	beq.n	8025f3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025e4e:	f103 0e01 	add.w	lr, r3, #1
 8025e52:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025e56:	f01e 0f01 	tst.w	lr, #1
 8025e5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025e5e:	bf0c      	ite	eq
 8025e60:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025e64:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025e68:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e6c:	fa5f f58c 	uxtb.w	r5, ip
 8025e70:	9512      	str	r5, [sp, #72]	; 0x48
 8025e72:	b300      	cbz	r0, 8025eb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025e74:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025e76:	442b      	add	r3, r5
 8025e78:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025e7c:	07dd      	lsls	r5, r3, #31
 8025e7e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025e82:	bf54      	ite	pl
 8025e84:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025e88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025e8c:	3301      	adds	r3, #1
 8025e8e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e92:	fa5f f58c 	uxtb.w	r5, ip
 8025e96:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025e9a:	950c      	str	r5, [sp, #48]	; 0x30
 8025e9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025ea0:	07dd      	lsls	r5, r3, #31
 8025ea2:	bf54      	ite	pl
 8025ea4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025ea8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025eac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025eb0:	fa5f f38c 	uxtb.w	r3, ip
 8025eb4:	9313      	str	r3, [sp, #76]	; 0x4c
 8025eb6:	b289      	uxth	r1, r1
 8025eb8:	b280      	uxth	r0, r0
 8025eba:	fb01 f300 	mul.w	r3, r1, r0
 8025ebe:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025ec2:	0109      	lsls	r1, r1, #4
 8025ec4:	b280      	uxth	r0, r0
 8025ec6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025eca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ecc:	1ac9      	subs	r1, r1, r3
 8025ece:	ebac 0c00 	sub.w	ip, ip, r0
 8025ed2:	b289      	uxth	r1, r1
 8025ed4:	4369      	muls	r1, r5
 8025ed6:	fa1f fc8c 	uxth.w	ip, ip
 8025eda:	fb02 120c 	mla	r2, r2, ip, r1
 8025ede:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025ee0:	fb00 2001 	mla	r0, r0, r1, r2
 8025ee4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025ee6:	fb03 0302 	mla	r3, r3, r2, r0
 8025eea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025eee:	b1d3      	cbz	r3, 8025f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025ef0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025ef2:	4353      	muls	r3, r2
 8025ef4:	1c5a      	adds	r2, r3, #1
 8025ef6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025efa:	4a0f      	ldr	r2, [pc, #60]	; (8025f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025efc:	121b      	asrs	r3, r3, #8
 8025efe:	6812      	ldr	r2, [r2, #0]
 8025f00:	2bff      	cmp	r3, #255	; 0xff
 8025f02:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025f06:	d12d      	bne.n	8025f64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025f08:	0953      	lsrs	r3, r2, #5
 8025f0a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025f0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025f12:	f02c 0c07 	bic.w	ip, ip, #7
 8025f16:	ea43 0c0c 	orr.w	ip, r3, ip
 8025f1a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025f1e:	ea4c 0202 	orr.w	r2, ip, r2
 8025f22:	f8a8 2000 	strh.w	r2, [r8]
 8025f26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025f28:	441c      	add	r4, r3
 8025f2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f2c:	f108 0802 	add.w	r8, r8, #2
 8025f30:	441e      	add	r6, r3
 8025f32:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025f36:	e6ba      	b.n	8025cae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025f38:	20013454 	.word	0x20013454
 8025f3c:	2800      	cmp	r0, #0
 8025f3e:	d0ba      	beq.n	8025eb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025f40:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025f42:	442b      	add	r3, r5
 8025f44:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025f48:	07db      	lsls	r3, r3, #31
 8025f4a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025f4e:	bf54      	ite	pl
 8025f50:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025f54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025f58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025f5c:	fa5f f38c 	uxtb.w	r3, ip
 8025f60:	930c      	str	r3, [sp, #48]	; 0x30
 8025f62:	e7a8      	b.n	8025eb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025f64:	f8b8 e000 	ldrh.w	lr, [r8]
 8025f68:	fa1f fa83 	uxth.w	sl, r3
 8025f6c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025f70:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025f74:	43db      	mvns	r3, r3
 8025f76:	b2db      	uxtb	r3, r3
 8025f78:	fb11 f10a 	smulbb	r1, r1, sl
 8025f7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025f80:	fb00 1003 	mla	r0, r0, r3, r1
 8025f84:	b2d2      	uxtb	r2, r2
 8025f86:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025f8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025f8e:	fa5f fe8e 	uxtb.w	lr, lr
 8025f92:	fb12 f20a 	smulbb	r2, r2, sl
 8025f96:	fb0e 2203 	mla	r2, lr, r3, r2
 8025f9a:	fa5f fc8c 	uxtb.w	ip, ip
 8025f9e:	b280      	uxth	r0, r0
 8025fa0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025fa4:	b292      	uxth	r2, r2
 8025fa6:	fb1c fc0a 	smulbb	ip, ip, sl
 8025faa:	fb01 cc03 	mla	ip, r1, r3, ip
 8025fae:	1c43      	adds	r3, r0, #1
 8025fb0:	1c51      	adds	r1, r2, #1
 8025fb2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025fb6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025fba:	fa1f fc8c 	uxth.w	ip, ip
 8025fbe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025fc2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025fc6:	4308      	orrs	r0, r1
 8025fc8:	f10c 0101 	add.w	r1, ip, #1
 8025fcc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025fd0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025fd4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025fd8:	ea40 000c 	orr.w	r0, r0, ip
 8025fdc:	f8a8 0000 	strh.w	r0, [r8]
 8025fe0:	e7a1      	b.n	8025f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025fe2:	b017      	add	sp, #92	; 0x5c
 8025fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025fe8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025fe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025fec:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025ff0:	2d00      	cmp	r5, #0
 8025ff2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025ff6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025ffa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025ffe:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026002:	fb05 0e03 	mla	lr, r5, r3, r0
 8026006:	f2c0 80b0 	blt.w	802616a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802600a:	45a9      	cmp	r9, r5
 802600c:	f340 80ad 	ble.w	802616a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026010:	2800      	cmp	r0, #0
 8026012:	f2c0 80a8 	blt.w	8026166 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026016:	4580      	cmp	r8, r0
 8026018:	f340 80a5 	ble.w	8026166 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802601c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026020:	f01e 0f01 	tst.w	lr, #1
 8026024:	5d16      	ldrb	r6, [r2, r4]
 8026026:	bf0c      	ite	eq
 8026028:	f006 060f 	andeq.w	r6, r6, #15
 802602c:	1136      	asrne	r6, r6, #4
 802602e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026032:	b2f6      	uxtb	r6, r6
 8026034:	1c44      	adds	r4, r0, #1
 8026036:	f100 809b 	bmi.w	8026170 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802603a:	45a0      	cmp	r8, r4
 802603c:	f340 8098 	ble.w	8026170 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026040:	2f00      	cmp	r7, #0
 8026042:	f000 8097 	beq.w	8026174 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8026046:	f10e 0a01 	add.w	sl, lr, #1
 802604a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802604e:	f01a 0f01 	tst.w	sl, #1
 8026052:	5d14      	ldrb	r4, [r2, r4]
 8026054:	bf0c      	ite	eq
 8026056:	f004 040f 	andeq.w	r4, r4, #15
 802605a:	1124      	asrne	r4, r4, #4
 802605c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026060:	b2e4      	uxtb	r4, r4
 8026062:	3501      	adds	r5, #1
 8026064:	f100 808a 	bmi.w	802617c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026068:	45a9      	cmp	r9, r5
 802606a:	f340 8087 	ble.w	802617c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802606e:	f1bc 0f00 	cmp.w	ip, #0
 8026072:	f000 8086 	beq.w	8026182 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026076:	2800      	cmp	r0, #0
 8026078:	db7e      	blt.n	8026178 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802607a:	4580      	cmp	r8, r0
 802607c:	dd7c      	ble.n	8026178 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802607e:	eb03 090e 	add.w	r9, r3, lr
 8026082:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026086:	f019 0f01 	tst.w	r9, #1
 802608a:	5d55      	ldrb	r5, [r2, r5]
 802608c:	bf0c      	ite	eq
 802608e:	f005 050f 	andeq.w	r5, r5, #15
 8026092:	112d      	asrne	r5, r5, #4
 8026094:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026098:	b2ed      	uxtb	r5, r5
 802609a:	3001      	adds	r0, #1
 802609c:	d474      	bmi.n	8026188 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802609e:	4580      	cmp	r8, r0
 80260a0:	dd72      	ble.n	8026188 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80260a2:	2f00      	cmp	r7, #0
 80260a4:	d072      	beq.n	802618c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80260a6:	3301      	adds	r3, #1
 80260a8:	449e      	add	lr, r3
 80260aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80260ae:	f01e 0f01 	tst.w	lr, #1
 80260b2:	5cd0      	ldrb	r0, [r2, r3]
 80260b4:	bf0c      	ite	eq
 80260b6:	f000 000f 	andeq.w	r0, r0, #15
 80260ba:	1100      	asrne	r0, r0, #4
 80260bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80260c0:	b2c3      	uxtb	r3, r0
 80260c2:	b2ba      	uxth	r2, r7
 80260c4:	fa1f fc8c 	uxth.w	ip, ip
 80260c8:	fb02 f00c 	mul.w	r0, r2, ip
 80260cc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80260d0:	0112      	lsls	r2, r2, #4
 80260d2:	fa1f fc8c 	uxth.w	ip, ip
 80260d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80260da:	1a12      	subs	r2, r2, r0
 80260dc:	eba7 070c 	sub.w	r7, r7, ip
 80260e0:	b292      	uxth	r2, r2
 80260e2:	b2bf      	uxth	r7, r7
 80260e4:	4362      	muls	r2, r4
 80260e6:	fb06 2207 	mla	r2, r6, r7, r2
 80260ea:	fb0c 2505 	mla	r5, ip, r5, r2
 80260ee:	fb00 5303 	mla	r3, r0, r3, r5
 80260f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80260f6:	b3a3      	cbz	r3, 8026162 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80260f8:	4a25      	ldr	r2, [pc, #148]	; (8026190 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80260fa:	880e      	ldrh	r6, [r1, #0]
 80260fc:	6815      	ldr	r5, [r2, #0]
 80260fe:	1234      	asrs	r4, r6, #8
 8026100:	b29a      	uxth	r2, r3
 8026102:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026106:	43db      	mvns	r3, r3
 8026108:	b2db      	uxtb	r3, r3
 802610a:	fb10 f002 	smulbb	r0, r0, r2
 802610e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026112:	fb04 0403 	mla	r4, r4, r3, r0
 8026116:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802611a:	10f0      	asrs	r0, r6, #3
 802611c:	b2ed      	uxtb	r5, r5
 802611e:	00f6      	lsls	r6, r6, #3
 8026120:	fb17 f702 	smulbb	r7, r7, r2
 8026124:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026128:	fb15 f202 	smulbb	r2, r5, r2
 802612c:	b2f6      	uxtb	r6, r6
 802612e:	b2a4      	uxth	r4, r4
 8026130:	fb00 7003 	mla	r0, r0, r3, r7
 8026134:	fb06 2303 	mla	r3, r6, r3, r2
 8026138:	b29a      	uxth	r2, r3
 802613a:	1c63      	adds	r3, r4, #1
 802613c:	b280      	uxth	r0, r0
 802613e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026142:	1c53      	adds	r3, r2, #1
 8026144:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026148:	1c42      	adds	r2, r0, #1
 802614a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802614e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026152:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026156:	0940      	lsrs	r0, r0, #5
 8026158:	4323      	orrs	r3, r4
 802615a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802615e:	4303      	orrs	r3, r0
 8026160:	800b      	strh	r3, [r1, #0]
 8026162:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026166:	2600      	movs	r6, #0
 8026168:	e764      	b.n	8026034 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802616a:	2400      	movs	r4, #0
 802616c:	4626      	mov	r6, r4
 802616e:	e778      	b.n	8026062 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026170:	2400      	movs	r4, #0
 8026172:	e776      	b.n	8026062 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026174:	463c      	mov	r4, r7
 8026176:	e774      	b.n	8026062 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026178:	2500      	movs	r5, #0
 802617a:	e78e      	b.n	802609a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802617c:	2300      	movs	r3, #0
 802617e:	461d      	mov	r5, r3
 8026180:	e79f      	b.n	80260c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026182:	4663      	mov	r3, ip
 8026184:	4665      	mov	r5, ip
 8026186:	e79c      	b.n	80260c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026188:	2300      	movs	r3, #0
 802618a:	e79a      	b.n	80260c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802618c:	463b      	mov	r3, r7
 802618e:	e798      	b.n	80260c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026190:	20013454 	.word	0x20013454

08026194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026198:	b093      	sub	sp, #76	; 0x4c
 802619a:	461d      	mov	r5, r3
 802619c:	920c      	str	r2, [sp, #48]	; 0x30
 802619e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80261a0:	9107      	str	r1, [sp, #28]
 80261a2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80261a6:	9011      	str	r0, [sp, #68]	; 0x44
 80261a8:	6850      	ldr	r0, [r2, #4]
 80261aa:	6812      	ldr	r2, [r2, #0]
 80261ac:	fb00 1303 	mla	r3, r0, r3, r1
 80261b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80261b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80261b6:	689b      	ldr	r3, [r3, #8]
 80261b8:	3301      	adds	r3, #1
 80261ba:	f023 0301 	bic.w	r3, r3, #1
 80261be:	9306      	str	r3, [sp, #24]
 80261c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80261c2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80261c6:	681f      	ldr	r7, [r3, #0]
 80261c8:	9b07      	ldr	r3, [sp, #28]
 80261ca:	2b00      	cmp	r3, #0
 80261cc:	dc03      	bgt.n	80261d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80261ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80261d0:	2b00      	cmp	r3, #0
 80261d2:	f340 8267 	ble.w	80266a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80261d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80261d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80261dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80261e0:	1e48      	subs	r0, r1, #1
 80261e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80261e6:	2d00      	cmp	r5, #0
 80261e8:	f340 80b8 	ble.w	802635c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80261ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80261f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80261f4:	d406      	bmi.n	8026204 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80261f6:	4586      	cmp	lr, r0
 80261f8:	da04      	bge.n	8026204 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80261fa:	2b00      	cmp	r3, #0
 80261fc:	db02      	blt.n	8026204 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80261fe:	4563      	cmp	r3, ip
 8026200:	f2c0 80ad 	blt.w	802635e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026204:	f11e 0e01 	adds.w	lr, lr, #1
 8026208:	f100 80a0 	bmi.w	802634c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802620c:	4571      	cmp	r1, lr
 802620e:	f2c0 809d 	blt.w	802634c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026212:	3301      	adds	r3, #1
 8026214:	f100 809a 	bmi.w	802634c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026218:	429a      	cmp	r2, r3
 802621a:	f2c0 8097 	blt.w	802634c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802621e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026222:	9509      	str	r5, [sp, #36]	; 0x24
 8026224:	46c8      	mov	r8, r9
 8026226:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026228:	2b00      	cmp	r3, #0
 802622a:	f340 80b6 	ble.w	802639a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802622e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026232:	9308      	str	r3, [sp, #32]
 8026234:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026236:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802623a:	1423      	asrs	r3, r4, #16
 802623c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026240:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026244:	f100 813e 	bmi.w	80264c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026248:	f10c 3bff 	add.w	fp, ip, #4294967295
 802624c:	455b      	cmp	r3, fp
 802624e:	f280 8139 	bge.w	80264c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026252:	2800      	cmp	r0, #0
 8026254:	f2c0 8136 	blt.w	80264c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026258:	f10e 3bff 	add.w	fp, lr, #4294967295
 802625c:	4558      	cmp	r0, fp
 802625e:	f280 8131 	bge.w	80264c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026262:	9a06      	ldr	r2, [sp, #24]
 8026264:	fb00 3302 	mla	r3, r0, r2, r3
 8026268:	0858      	lsrs	r0, r3, #1
 802626a:	07da      	lsls	r2, r3, #31
 802626c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026270:	9a08      	ldr	r2, [sp, #32]
 8026272:	bf54      	ite	pl
 8026274:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026278:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802627c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026280:	fa5f fc8c 	uxtb.w	ip, ip
 8026284:	2a00      	cmp	r2, #0
 8026286:	f000 80cb 	beq.w	8026420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802628a:	1c58      	adds	r0, r3, #1
 802628c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026290:	07c0      	lsls	r0, r0, #31
 8026292:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026296:	bf54      	ite	pl
 8026298:	f00e 0e0f 	andpl.w	lr, lr, #15
 802629c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80262a0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80262a4:	fa5f fe8e 	uxtb.w	lr, lr
 80262a8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80262ac:	b1b9      	cbz	r1, 80262de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80262ae:	4453      	add	r3, sl
 80262b0:	0858      	lsrs	r0, r3, #1
 80262b2:	07da      	lsls	r2, r3, #31
 80262b4:	5c38      	ldrb	r0, [r7, r0]
 80262b6:	bf54      	ite	pl
 80262b8:	f000 000f 	andpl.w	r0, r0, #15
 80262bc:	1100      	asrmi	r0, r0, #4
 80262be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80262c2:	b2c0      	uxtb	r0, r0
 80262c4:	900a      	str	r0, [sp, #40]	; 0x28
 80262c6:	1c58      	adds	r0, r3, #1
 80262c8:	0843      	lsrs	r3, r0, #1
 80262ca:	07c2      	lsls	r2, r0, #31
 80262cc:	5cfb      	ldrb	r3, [r7, r3]
 80262ce:	bf54      	ite	pl
 80262d0:	f003 030f 	andpl.w	r3, r3, #15
 80262d4:	111b      	asrmi	r3, r3, #4
 80262d6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80262da:	b2db      	uxtb	r3, r3
 80262dc:	930e      	str	r3, [sp, #56]	; 0x38
 80262de:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80262e2:	b289      	uxth	r1, r1
 80262e4:	fb02 f301 	mul.w	r3, r2, r1
 80262e8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80262ec:	0112      	lsls	r2, r2, #4
 80262ee:	b289      	uxth	r1, r1
 80262f0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80262f4:	1a40      	subs	r0, r0, r1
 80262f6:	fa1f fe80 	uxth.w	lr, r0
 80262fa:	1ad2      	subs	r2, r2, r3
 80262fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80262fe:	b292      	uxth	r2, r2
 8026300:	4342      	muls	r2, r0
 8026302:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8026306:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026308:	fb01 c102 	mla	r1, r1, r2, ip
 802630c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802630e:	fb03 1302 	mla	r3, r3, r2, r1
 8026312:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026316:	2bff      	cmp	r3, #255	; 0xff
 8026318:	f040 8093 	bne.w	8026442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802631c:	4bbe      	ldr	r3, [pc, #760]	; (8026618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802631e:	681a      	ldr	r2, [r3, #0]
 8026320:	4bbe      	ldr	r3, [pc, #760]	; (802661c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026322:	0951      	lsrs	r1, r2, #5
 8026324:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026328:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802632c:	430b      	orrs	r3, r1
 802632e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026332:	4313      	orrs	r3, r2
 8026334:	f8a8 3000 	strh.w	r3, [r8]
 8026338:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802633a:	441c      	add	r4, r3
 802633c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802633e:	441e      	add	r6, r3
 8026340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026342:	3b01      	subs	r3, #1
 8026344:	f108 0802 	add.w	r8, r8, #2
 8026348:	9309      	str	r3, [sp, #36]	; 0x24
 802634a:	e76c      	b.n	8026226 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802634c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802634e:	441c      	add	r4, r3
 8026350:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026352:	3d01      	subs	r5, #1
 8026354:	441e      	add	r6, r3
 8026356:	f109 0902 	add.w	r9, r9, #2
 802635a:	e744      	b.n	80261e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802635c:	d021      	beq.n	80263a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802635e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026360:	1e6b      	subs	r3, r5, #1
 8026362:	fb00 4003 	mla	r0, r0, r3, r4
 8026366:	1400      	asrs	r0, r0, #16
 8026368:	f53f af59 	bmi.w	802621e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802636c:	3901      	subs	r1, #1
 802636e:	4288      	cmp	r0, r1
 8026370:	f6bf af55 	bge.w	802621e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026374:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026376:	fb01 6303 	mla	r3, r1, r3, r6
 802637a:	141b      	asrs	r3, r3, #16
 802637c:	f53f af4f 	bmi.w	802621e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026380:	3a01      	subs	r2, #1
 8026382:	4293      	cmp	r3, r2
 8026384:	f6bf af4b 	bge.w	802621e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026388:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802638c:	9308      	str	r3, [sp, #32]
 802638e:	46a8      	mov	r8, r5
 8026390:	46ce      	mov	lr, r9
 8026392:	f1b8 0f00 	cmp.w	r8, #0
 8026396:	f300 80b5 	bgt.w	8026504 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802639a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802639e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80263a2:	9b07      	ldr	r3, [sp, #28]
 80263a4:	2b00      	cmp	r3, #0
 80263a6:	f340 817d 	ble.w	80266a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80263aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80263ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80263b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80263b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80263b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80263bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80263c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80263c4:	eef0 6a62 	vmov.f32	s13, s5
 80263c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80263cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80263d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80263d4:	ee16 4a90 	vmov	r4, s13
 80263d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80263dc:	eef0 6a43 	vmov.f32	s13, s6
 80263e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80263e4:	ee12 2a90 	vmov	r2, s5
 80263e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80263ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80263f0:	ee13 2a10 	vmov	r2, s6
 80263f4:	931f      	str	r3, [sp, #124]	; 0x7c
 80263f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80263f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80263fc:	9320      	str	r3, [sp, #128]	; 0x80
 80263fe:	9b07      	ldr	r3, [sp, #28]
 8026400:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026402:	3b01      	subs	r3, #1
 8026404:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026408:	9307      	str	r3, [sp, #28]
 802640a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802640c:	ee16 6a90 	vmov	r6, s13
 8026410:	bf14      	ite	ne
 8026412:	461d      	movne	r5, r3
 8026414:	4615      	moveq	r5, r2
 8026416:	eeb0 3a67 	vmov.f32	s6, s15
 802641a:	eef0 2a47 	vmov.f32	s5, s14
 802641e:	e6d3      	b.n	80261c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026420:	2900      	cmp	r1, #0
 8026422:	f43f af5c 	beq.w	80262de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026426:	eb0a 0003 	add.w	r0, sl, r3
 802642a:	0843      	lsrs	r3, r0, #1
 802642c:	07c0      	lsls	r0, r0, #31
 802642e:	5cfb      	ldrb	r3, [r7, r3]
 8026430:	bf54      	ite	pl
 8026432:	f003 030f 	andpl.w	r3, r3, #15
 8026436:	111b      	asrmi	r3, r3, #4
 8026438:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802643c:	b2db      	uxtb	r3, r3
 802643e:	930a      	str	r3, [sp, #40]	; 0x28
 8026440:	e74d      	b.n	80262de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026442:	2b00      	cmp	r3, #0
 8026444:	f43f af78 	beq.w	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026448:	4a73      	ldr	r2, [pc, #460]	; (8026618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802644a:	f8b8 c000 	ldrh.w	ip, [r8]
 802644e:	6810      	ldr	r0, [r2, #0]
 8026450:	fa1f fe83 	uxth.w	lr, r3
 8026454:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026458:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802645c:	43db      	mvns	r3, r3
 802645e:	b2db      	uxtb	r3, r3
 8026460:	fb12 f20e 	smulbb	r2, r2, lr
 8026464:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026468:	fb01 2103 	mla	r1, r1, r3, r2
 802646c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026470:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026474:	b2c0      	uxtb	r0, r0
 8026476:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802647a:	fb1b fb0e 	smulbb	fp, fp, lr
 802647e:	b289      	uxth	r1, r1
 8026480:	fb10 fe0e 	smulbb	lr, r0, lr
 8026484:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026488:	fa5f fc8c 	uxtb.w	ip, ip
 802648c:	fb02 b203 	mla	r2, r2, r3, fp
 8026490:	1c48      	adds	r0, r1, #1
 8026492:	fb0c e303 	mla	r3, ip, r3, lr
 8026496:	b292      	uxth	r2, r2
 8026498:	b29b      	uxth	r3, r3
 802649a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802649e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80264a2:	f102 0b01 	add.w	fp, r2, #1
 80264a6:	1c59      	adds	r1, r3, #1
 80264a8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80264ac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80264b0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80264b4:	0952      	lsrs	r2, r2, #5
 80264b6:	4301      	orrs	r1, r0
 80264b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80264bc:	4311      	orrs	r1, r2
 80264be:	f8a8 1000 	strh.w	r1, [r8]
 80264c2:	e739      	b.n	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80264c4:	f113 0b01 	adds.w	fp, r3, #1
 80264c8:	f53f af36 	bmi.w	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80264cc:	45dc      	cmp	ip, fp
 80264ce:	f6ff af33 	blt.w	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80264d2:	f110 0b01 	adds.w	fp, r0, #1
 80264d6:	f53f af2f 	bmi.w	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80264da:	45de      	cmp	lr, fp
 80264dc:	f6ff af2c 	blt.w	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80264e0:	9a08      	ldr	r2, [sp, #32]
 80264e2:	9302      	str	r3, [sp, #8]
 80264e4:	fa0f f38e 	sxth.w	r3, lr
 80264e8:	9301      	str	r3, [sp, #4]
 80264ea:	fa0f f38c 	sxth.w	r3, ip
 80264ee:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80264f2:	9105      	str	r1, [sp, #20]
 80264f4:	9300      	str	r3, [sp, #0]
 80264f6:	463a      	mov	r2, r7
 80264f8:	4653      	mov	r3, sl
 80264fa:	4641      	mov	r1, r8
 80264fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80264fe:	f7ff fd73 	bl	8025fe8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8026502:	e719      	b.n	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026504:	9906      	ldr	r1, [sp, #24]
 8026506:	1422      	asrs	r2, r4, #16
 8026508:	1433      	asrs	r3, r6, #16
 802650a:	fb01 2303 	mla	r3, r1, r3, r2
 802650e:	085a      	lsrs	r2, r3, #1
 8026510:	07d9      	lsls	r1, r3, #31
 8026512:	5cba      	ldrb	r2, [r7, r2]
 8026514:	bf54      	ite	pl
 8026516:	f002 020f 	andpl.w	r2, r2, #15
 802651a:	1112      	asrmi	r2, r2, #4
 802651c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026520:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026524:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026528:	b2d2      	uxtb	r2, r2
 802652a:	2800      	cmp	r0, #0
 802652c:	d062      	beq.n	80265f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802652e:	f103 0a01 	add.w	sl, r3, #1
 8026532:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026536:	f01a 0f01 	tst.w	sl, #1
 802653a:	5c79      	ldrb	r1, [r7, r1]
 802653c:	bf0c      	ite	eq
 802653e:	f001 010f 	andeq.w	r1, r1, #15
 8026542:	1109      	asrne	r1, r1, #4
 8026544:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026548:	b2c9      	uxtb	r1, r1
 802654a:	910f      	str	r1, [sp, #60]	; 0x3c
 802654c:	f1bc 0f00 	cmp.w	ip, #0
 8026550:	d019      	beq.n	8026586 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026552:	9908      	ldr	r1, [sp, #32]
 8026554:	440b      	add	r3, r1
 8026556:	0859      	lsrs	r1, r3, #1
 8026558:	f013 0f01 	tst.w	r3, #1
 802655c:	5c79      	ldrb	r1, [r7, r1]
 802655e:	bf0c      	ite	eq
 8026560:	f001 010f 	andeq.w	r1, r1, #15
 8026564:	1109      	asrne	r1, r1, #4
 8026566:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802656a:	b2c9      	uxtb	r1, r1
 802656c:	3301      	adds	r3, #1
 802656e:	910b      	str	r1, [sp, #44]	; 0x2c
 8026570:	0859      	lsrs	r1, r3, #1
 8026572:	07db      	lsls	r3, r3, #31
 8026574:	5c79      	ldrb	r1, [r7, r1]
 8026576:	bf54      	ite	pl
 8026578:	f001 010f 	andpl.w	r1, r1, #15
 802657c:	1109      	asrmi	r1, r1, #4
 802657e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026582:	b2c9      	uxtb	r1, r1
 8026584:	9110      	str	r1, [sp, #64]	; 0x40
 8026586:	b280      	uxth	r0, r0
 8026588:	fa1f fc8c 	uxth.w	ip, ip
 802658c:	fb00 f30c 	mul.w	r3, r0, ip
 8026590:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026594:	0100      	lsls	r0, r0, #4
 8026596:	fa1f fc8c 	uxth.w	ip, ip
 802659a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802659e:	eba1 010c 	sub.w	r1, r1, ip
 80265a2:	fa1f fa81 	uxth.w	sl, r1
 80265a6:	1ac0      	subs	r0, r0, r3
 80265a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80265aa:	b280      	uxth	r0, r0
 80265ac:	4348      	muls	r0, r1
 80265ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80265b0:	fb02 020a 	mla	r2, r2, sl, r0
 80265b4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80265b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80265ba:	fb03 c302 	mla	r3, r3, r2, ip
 80265be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80265c2:	2bff      	cmp	r3, #255	; 0xff
 80265c4:	d12c      	bne.n	8026620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80265c6:	4b14      	ldr	r3, [pc, #80]	; (8026618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80265c8:	681a      	ldr	r2, [r3, #0]
 80265ca:	4b14      	ldr	r3, [pc, #80]	; (802661c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80265cc:	0951      	lsrs	r1, r2, #5
 80265ce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80265d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80265d6:	430b      	orrs	r3, r1
 80265d8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80265dc:	4313      	orrs	r3, r2
 80265de:	f8ae 3000 	strh.w	r3, [lr]
 80265e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80265e4:	441c      	add	r4, r3
 80265e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80265e8:	f10e 0e02 	add.w	lr, lr, #2
 80265ec:	441e      	add	r6, r3
 80265ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80265f2:	e6ce      	b.n	8026392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80265f4:	f1bc 0f00 	cmp.w	ip, #0
 80265f8:	d0c5      	beq.n	8026586 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80265fa:	9908      	ldr	r1, [sp, #32]
 80265fc:	440b      	add	r3, r1
 80265fe:	0859      	lsrs	r1, r3, #1
 8026600:	07db      	lsls	r3, r3, #31
 8026602:	5c79      	ldrb	r1, [r7, r1]
 8026604:	bf54      	ite	pl
 8026606:	f001 010f 	andpl.w	r1, r1, #15
 802660a:	1109      	asrmi	r1, r1, #4
 802660c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026610:	b2c9      	uxtb	r1, r1
 8026612:	910b      	str	r1, [sp, #44]	; 0x2c
 8026614:	e7b7      	b.n	8026586 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026616:	bf00      	nop
 8026618:	20013454 	.word	0x20013454
 802661c:	fffff800 	.word	0xfffff800
 8026620:	2b00      	cmp	r3, #0
 8026622:	d0de      	beq.n	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026624:	4a21      	ldr	r2, [pc, #132]	; (80266ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026626:	f8be c000 	ldrh.w	ip, [lr]
 802662a:	6810      	ldr	r0, [r2, #0]
 802662c:	fa1f fa83 	uxth.w	sl, r3
 8026630:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026634:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026638:	43db      	mvns	r3, r3
 802663a:	b2db      	uxtb	r3, r3
 802663c:	fb12 f20a 	smulbb	r2, r2, sl
 8026640:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026644:	fb01 2103 	mla	r1, r1, r3, r2
 8026648:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802664c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026650:	b2c0      	uxtb	r0, r0
 8026652:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026656:	fa5f fc8c 	uxtb.w	ip, ip
 802665a:	fb10 f00a 	smulbb	r0, r0, sl
 802665e:	fb0c 0003 	mla	r0, ip, r3, r0
 8026662:	b289      	uxth	r1, r1
 8026664:	fb1b fb0a 	smulbb	fp, fp, sl
 8026668:	b280      	uxth	r0, r0
 802666a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802666e:	fb02 b203 	mla	r2, r2, r3, fp
 8026672:	1c4b      	adds	r3, r1, #1
 8026674:	f100 0b01 	add.w	fp, r0, #1
 8026678:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802667c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026680:	b292      	uxth	r2, r2
 8026682:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026686:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802668a:	ea4b 0101 	orr.w	r1, fp, r1
 802668e:	f102 0b01 	add.w	fp, r2, #1
 8026692:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026696:	0952      	lsrs	r2, r2, #5
 8026698:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802669c:	4311      	orrs	r1, r2
 802669e:	f8ae 1000 	strh.w	r1, [lr]
 80266a2:	e79e      	b.n	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80266a4:	b013      	add	sp, #76	; 0x4c
 80266a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266aa:	bf00      	nop
 80266ac:	20013454 	.word	0x20013454

080266b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80266b0:	b570      	push	{r4, r5, r6, lr}
 80266b2:	1208      	asrs	r0, r1, #8
 80266b4:	b29e      	uxth	r6, r3
 80266b6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80266ba:	1213      	asrs	r3, r2, #8
 80266bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80266c0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80266c4:	fb13 f305 	smulbb	r3, r3, r5
 80266c8:	fb10 f006 	smulbb	r0, r0, r6
 80266cc:	4418      	add	r0, r3
 80266ce:	10cc      	asrs	r4, r1, #3
 80266d0:	10d3      	asrs	r3, r2, #3
 80266d2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80266d6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80266da:	fb13 f305 	smulbb	r3, r3, r5
 80266de:	fb14 f406 	smulbb	r4, r4, r6
 80266e2:	00c9      	lsls	r1, r1, #3
 80266e4:	00d2      	lsls	r2, r2, #3
 80266e6:	441c      	add	r4, r3
 80266e8:	b2d2      	uxtb	r2, r2
 80266ea:	b2cb      	uxtb	r3, r1
 80266ec:	fb12 f205 	smulbb	r2, r2, r5
 80266f0:	b280      	uxth	r0, r0
 80266f2:	fb13 f306 	smulbb	r3, r3, r6
 80266f6:	4413      	add	r3, r2
 80266f8:	1c42      	adds	r2, r0, #1
 80266fa:	b29b      	uxth	r3, r3
 80266fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026700:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026704:	1c58      	adds	r0, r3, #1
 8026706:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802670a:	b2a4      	uxth	r4, r4
 802670c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026710:	4310      	orrs	r0, r2
 8026712:	1c62      	adds	r2, r4, #1
 8026714:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026718:	0964      	lsrs	r4, r4, #5
 802671a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802671e:	4320      	orrs	r0, r4
 8026720:	bd70      	pop	{r4, r5, r6, pc}
	...

08026724 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026728:	b08f      	sub	sp, #60	; 0x3c
 802672a:	461c      	mov	r4, r3
 802672c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026730:	9004      	str	r0, [sp, #16]
 8026732:	460d      	mov	r5, r1
 8026734:	4616      	mov	r6, r2
 8026736:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026738:	2f00      	cmp	r7, #0
 802673a:	f000 80f6 	beq.w	802692a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802673e:	6820      	ldr	r0, [r4, #0]
 8026740:	6861      	ldr	r1, [r4, #4]
 8026742:	aa0a      	add	r2, sp, #40	; 0x28
 8026744:	c203      	stmia	r2!, {r0, r1}
 8026746:	6818      	ldr	r0, [r3, #0]
 8026748:	6859      	ldr	r1, [r3, #4]
 802674a:	aa0c      	add	r2, sp, #48	; 0x30
 802674c:	c203      	stmia	r2!, {r0, r1}
 802674e:	a80a      	add	r0, sp, #40	; 0x28
 8026750:	f7ef fa5e 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026754:	4621      	mov	r1, r4
 8026756:	a80c      	add	r0, sp, #48	; 0x30
 8026758:	f7ef fa9e 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802675c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026760:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026764:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026768:	f002 0301 	and.w	r3, r2, #1
 802676c:	9306      	str	r3, [sp, #24]
 802676e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026772:	f003 0101 	and.w	r1, r3, #1
 8026776:	9105      	str	r1, [sp, #20]
 8026778:	9805      	ldr	r0, [sp, #20]
 802677a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802677e:	4403      	add	r3, r0
 8026780:	fb01 2303 	mla	r3, r1, r3, r2
 8026784:	f04f 0802 	mov.w	r8, #2
 8026788:	fb93 f3f8 	sdiv	r3, r3, r8
 802678c:	441d      	add	r5, r3
 802678e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026792:	441a      	add	r2, r3
 8026794:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026798:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802679c:	4419      	add	r1, r3
 802679e:	4b64      	ldr	r3, [pc, #400]	; (8026930 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80267a0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80267a4:	6818      	ldr	r0, [r3, #0]
 80267a6:	6803      	ldr	r3, [r0, #0]
 80267a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80267aa:	4798      	blx	r3
 80267ac:	4a61      	ldr	r2, [pc, #388]	; (8026934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80267ae:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80267b2:	8813      	ldrh	r3, [r2, #0]
 80267b4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80267b8:	2fff      	cmp	r7, #255	; 0xff
 80267ba:	fb03 a404 	mla	r4, r3, r4, sl
 80267be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80267c2:	f106 0604 	add.w	r6, r6, #4
 80267c6:	4611      	mov	r1, r2
 80267c8:	fb03 fb0b 	mul.w	fp, r3, fp
 80267cc:	d06b      	beq.n	80268a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80267ce:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80267d2:	9303      	str	r3, [sp, #12]
 80267d4:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80267d8:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80267dc:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80267e0:	9b07      	ldr	r3, [sp, #28]
 80267e2:	42a3      	cmp	r3, r4
 80267e4:	f240 809c 	bls.w	8026920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80267e8:	9b06      	ldr	r3, [sp, #24]
 80267ea:	2b00      	cmp	r3, #0
 80267ec:	d039      	beq.n	8026862 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80267ee:	782b      	ldrb	r3, [r5, #0]
 80267f0:	8822      	ldrh	r2, [r4, #0]
 80267f2:	9804      	ldr	r0, [sp, #16]
 80267f4:	f003 030f 	and.w	r3, r3, #15
 80267f8:	f105 0801 	add.w	r8, r5, #1
 80267fc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026800:	9b03      	ldr	r3, [sp, #12]
 8026802:	9300      	str	r3, [sp, #0]
 8026804:	463b      	mov	r3, r7
 8026806:	f7ff ff53 	bl	80266b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802680a:	f824 0b02 	strh.w	r0, [r4], #2
 802680e:	f109 3bff 	add.w	fp, r9, #4294967295
 8026812:	f1bb 0f01 	cmp.w	fp, #1
 8026816:	46a2      	mov	sl, r4
 8026818:	f104 0404 	add.w	r4, r4, #4
 802681c:	dd24      	ble.n	8026868 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802681e:	f898 3000 	ldrb.w	r3, [r8]
 8026822:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026826:	9804      	ldr	r0, [sp, #16]
 8026828:	091b      	lsrs	r3, r3, #4
 802682a:	f1ab 0b02 	sub.w	fp, fp, #2
 802682e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026832:	9b03      	ldr	r3, [sp, #12]
 8026834:	9300      	str	r3, [sp, #0]
 8026836:	463b      	mov	r3, r7
 8026838:	f7ff ff3a 	bl	80266b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802683c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026840:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026844:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026848:	9804      	ldr	r0, [sp, #16]
 802684a:	f003 030f 	and.w	r3, r3, #15
 802684e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026852:	9b03      	ldr	r3, [sp, #12]
 8026854:	9300      	str	r3, [sp, #0]
 8026856:	463b      	mov	r3, r7
 8026858:	f7ff ff2a 	bl	80266b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802685c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026860:	e7d7      	b.n	8026812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026862:	46a8      	mov	r8, r5
 8026864:	46cb      	mov	fp, r9
 8026866:	e7d4      	b.n	8026812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026868:	d10e      	bne.n	8026888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802686a:	f898 3000 	ldrb.w	r3, [r8]
 802686e:	f8ba 2000 	ldrh.w	r2, [sl]
 8026872:	9804      	ldr	r0, [sp, #16]
 8026874:	091b      	lsrs	r3, r3, #4
 8026876:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802687a:	9b03      	ldr	r3, [sp, #12]
 802687c:	9300      	str	r3, [sp, #0]
 802687e:	463b      	mov	r3, r7
 8026880:	f7ff ff16 	bl	80266b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026884:	f82a 0b02 	strh.w	r0, [sl], #2
 8026888:	9b08      	ldr	r3, [sp, #32]
 802688a:	9a05      	ldr	r2, [sp, #20]
 802688c:	881c      	ldrh	r4, [r3, #0]
 802688e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026892:	eba4 0409 	sub.w	r4, r4, r9
 8026896:	4413      	add	r3, r2
 8026898:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802689c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802689e:	fb93 f3f2 	sdiv	r3, r3, r2
 80268a2:	441d      	add	r5, r3
 80268a4:	e79c      	b.n	80267e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80268a6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80268aa:	45a3      	cmp	fp, r4
 80268ac:	d938      	bls.n	8026920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80268ae:	9b06      	ldr	r3, [sp, #24]
 80268b0:	b1f3      	cbz	r3, 80268f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80268b2:	782b      	ldrb	r3, [r5, #0]
 80268b4:	f003 030f 	and.w	r3, r3, #15
 80268b8:	1c6a      	adds	r2, r5, #1
 80268ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80268be:	8023      	strh	r3, [r4, #0]
 80268c0:	f109 30ff 	add.w	r0, r9, #4294967295
 80268c4:	3402      	adds	r4, #2
 80268c6:	2801      	cmp	r0, #1
 80268c8:	4623      	mov	r3, r4
 80268ca:	f104 0404 	add.w	r4, r4, #4
 80268ce:	dd12      	ble.n	80268f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80268d0:	7813      	ldrb	r3, [r2, #0]
 80268d2:	091b      	lsrs	r3, r3, #4
 80268d4:	3802      	subs	r0, #2
 80268d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80268da:	f824 3c04 	strh.w	r3, [r4, #-4]
 80268de:	f812 3b01 	ldrb.w	r3, [r2], #1
 80268e2:	f003 030f 	and.w	r3, r3, #15
 80268e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80268ea:	f824 3c02 	strh.w	r3, [r4, #-2]
 80268ee:	e7ea      	b.n	80268c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80268f0:	462a      	mov	r2, r5
 80268f2:	4648      	mov	r0, r9
 80268f4:	e7e7      	b.n	80268c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80268f6:	d106      	bne.n	8026906 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80268f8:	7812      	ldrb	r2, [r2, #0]
 80268fa:	0912      	lsrs	r2, r2, #4
 80268fc:	3302      	adds	r3, #2
 80268fe:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8026902:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026906:	880c      	ldrh	r4, [r1, #0]
 8026908:	9a05      	ldr	r2, [sp, #20]
 802690a:	eba4 0409 	sub.w	r4, r4, r9
 802690e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8026912:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026916:	4413      	add	r3, r2
 8026918:	fb93 f3f8 	sdiv	r3, r3, r8
 802691c:	441d      	add	r5, r3
 802691e:	e7c4      	b.n	80268aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8026920:	4b03      	ldr	r3, [pc, #12]	; (8026930 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026922:	6818      	ldr	r0, [r3, #0]
 8026924:	6803      	ldr	r3, [r0, #0]
 8026926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026928:	4798      	blx	r3
 802692a:	b00f      	add	sp, #60	; 0x3c
 802692c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026930:	20013444 	.word	0x20013444
 8026934:	2001343e 	.word	0x2001343e

08026938 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026938:	b5f0      	push	{r4, r5, r6, r7, lr}
 802693a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802693e:	2dff      	cmp	r5, #255	; 0xff
 8026940:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026944:	d10c      	bne.n	8026960 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026946:	2bff      	cmp	r3, #255	; 0xff
 8026948:	d10a      	bne.n	8026960 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802694a:	4b25      	ldr	r3, [pc, #148]	; (80269e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802694c:	0948      	lsrs	r0, r1, #5
 802694e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026952:	403b      	ands	r3, r7
 8026954:	4318      	orrs	r0, r3
 8026956:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802695a:	4308      	orrs	r0, r1
 802695c:	b280      	uxth	r0, r0
 802695e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026960:	fb15 f503 	smulbb	r5, r5, r3
 8026964:	b2ab      	uxth	r3, r5
 8026966:	1c5d      	adds	r5, r3, #1
 8026968:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802696c:	1214      	asrs	r4, r2, #8
 802696e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026972:	fa1f fc85 	uxth.w	ip, r5
 8026976:	10d6      	asrs	r6, r2, #3
 8026978:	00d0      	lsls	r0, r2, #3
 802697a:	43ed      	mvns	r5, r5
 802697c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026980:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026984:	b2eb      	uxtb	r3, r5
 8026986:	b2c0      	uxtb	r0, r0
 8026988:	fb12 f20c 	smulbb	r2, r2, ip
 802698c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026990:	fb04 2403 	mla	r4, r4, r3, r2
 8026994:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026998:	b2c8      	uxtb	r0, r1
 802699a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802699e:	b2fd      	uxtb	r5, r7
 80269a0:	fb10 f00c 	smulbb	r0, r0, ip
 80269a4:	b2a4      	uxth	r4, r4
 80269a6:	fb02 0003 	mla	r0, r2, r3, r0
 80269aa:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80269ae:	fb15 f50c 	smulbb	r5, r5, ip
 80269b2:	fb06 5503 	mla	r5, r6, r3, r5
 80269b6:	b283      	uxth	r3, r0
 80269b8:	1c60      	adds	r0, r4, #1
 80269ba:	b2ad      	uxth	r5, r5
 80269bc:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80269c0:	1c58      	adds	r0, r3, #1
 80269c2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80269c6:	1c6b      	adds	r3, r5, #1
 80269c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80269cc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80269d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80269d4:	096d      	lsrs	r5, r5, #5
 80269d6:	4320      	orrs	r0, r4
 80269d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80269dc:	4328      	orrs	r0, r5
 80269de:	e7be      	b.n	802695e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80269e0:	00fff800 	.word	0x00fff800

080269e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80269e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269e8:	461c      	mov	r4, r3
 80269ea:	b08d      	sub	sp, #52	; 0x34
 80269ec:	460d      	mov	r5, r1
 80269ee:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80269f0:	6861      	ldr	r1, [r4, #4]
 80269f2:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80269f6:	4680      	mov	r8, r0
 80269f8:	6820      	ldr	r0, [r4, #0]
 80269fa:	4616      	mov	r6, r2
 80269fc:	aa08      	add	r2, sp, #32
 80269fe:	c203      	stmia	r2!, {r0, r1}
 8026a00:	6818      	ldr	r0, [r3, #0]
 8026a02:	6859      	ldr	r1, [r3, #4]
 8026a04:	aa0a      	add	r2, sp, #40	; 0x28
 8026a06:	c203      	stmia	r2!, {r0, r1}
 8026a08:	a808      	add	r0, sp, #32
 8026a0a:	f7ef f901 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026a0e:	4621      	mov	r1, r4
 8026a10:	a80a      	add	r0, sp, #40	; 0x28
 8026a12:	f7ef f941 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026a16:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026a1a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8026a1e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8026a22:	f002 0301 	and.w	r3, r2, #1
 8026a26:	9303      	str	r3, [sp, #12]
 8026a28:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026a2c:	f003 0101 	and.w	r1, r3, #1
 8026a30:	9102      	str	r1, [sp, #8]
 8026a32:	9802      	ldr	r0, [sp, #8]
 8026a34:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026a38:	4403      	add	r3, r0
 8026a3a:	fb01 2303 	mla	r3, r1, r3, r2
 8026a3e:	f04f 0a02 	mov.w	sl, #2
 8026a42:	fb93 f3fa 	sdiv	r3, r3, sl
 8026a46:	441d      	add	r5, r3
 8026a48:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026a4c:	441a      	add	r2, r3
 8026a4e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8026a52:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026a56:	4a3f      	ldr	r2, [pc, #252]	; (8026b54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026a58:	9205      	str	r2, [sp, #20]
 8026a5a:	4419      	add	r1, r3
 8026a5c:	6810      	ldr	r0, [r2, #0]
 8026a5e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8026a62:	6803      	ldr	r3, [r0, #0]
 8026a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026a66:	4798      	blx	r3
 8026a68:	4b3b      	ldr	r3, [pc, #236]	; (8026b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026a6a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8026a6e:	8819      	ldrh	r1, [r3, #0]
 8026a70:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026a74:	fb01 c404 	mla	r4, r1, r4, ip
 8026a78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a7c:	434f      	muls	r7, r1
 8026a7e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8026a82:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026a86:	3604      	adds	r6, #4
 8026a88:	9204      	str	r2, [sp, #16]
 8026a8a:	9b04      	ldr	r3, [sp, #16]
 8026a8c:	429c      	cmp	r4, r3
 8026a8e:	d258      	bcs.n	8026b42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026a90:	9b03      	ldr	r3, [sp, #12]
 8026a92:	2b00      	cmp	r3, #0
 8026a94:	d034      	beq.n	8026b00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026a96:	782b      	ldrb	r3, [r5, #0]
 8026a98:	f003 030f 	and.w	r3, r3, #15
 8026a9c:	1c6f      	adds	r7, r5, #1
 8026a9e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026aa2:	0e0b      	lsrs	r3, r1, #24
 8026aa4:	d006      	beq.n	8026ab4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026aa6:	8822      	ldrh	r2, [r4, #0]
 8026aa8:	9300      	str	r3, [sp, #0]
 8026aaa:	4640      	mov	r0, r8
 8026aac:	464b      	mov	r3, r9
 8026aae:	f7ff ff43 	bl	8026938 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026ab2:	8020      	strh	r0, [r4, #0]
 8026ab4:	3402      	adds	r4, #2
 8026ab6:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026aba:	f1ba 0f01 	cmp.w	sl, #1
 8026abe:	dd22      	ble.n	8026b06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026ac0:	783b      	ldrb	r3, [r7, #0]
 8026ac2:	091b      	lsrs	r3, r3, #4
 8026ac4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026ac8:	0e0b      	lsrs	r3, r1, #24
 8026aca:	d006      	beq.n	8026ada <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026acc:	8822      	ldrh	r2, [r4, #0]
 8026ace:	9300      	str	r3, [sp, #0]
 8026ad0:	4640      	mov	r0, r8
 8026ad2:	464b      	mov	r3, r9
 8026ad4:	f7ff ff30 	bl	8026938 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026ad8:	8020      	strh	r0, [r4, #0]
 8026ada:	f817 3b01 	ldrb.w	r3, [r7], #1
 8026ade:	f003 030f 	and.w	r3, r3, #15
 8026ae2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026ae6:	0e0b      	lsrs	r3, r1, #24
 8026ae8:	d006      	beq.n	8026af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026aea:	8862      	ldrh	r2, [r4, #2]
 8026aec:	9300      	str	r3, [sp, #0]
 8026aee:	4640      	mov	r0, r8
 8026af0:	464b      	mov	r3, r9
 8026af2:	f7ff ff21 	bl	8026938 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026af6:	8060      	strh	r0, [r4, #2]
 8026af8:	3404      	adds	r4, #4
 8026afa:	f1aa 0a02 	sub.w	sl, sl, #2
 8026afe:	e7dc      	b.n	8026aba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026b00:	462f      	mov	r7, r5
 8026b02:	46da      	mov	sl, fp
 8026b04:	e7d9      	b.n	8026aba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026b06:	d10d      	bne.n	8026b24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026b08:	783b      	ldrb	r3, [r7, #0]
 8026b0a:	091b      	lsrs	r3, r3, #4
 8026b0c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026b10:	0e0b      	lsrs	r3, r1, #24
 8026b12:	d006      	beq.n	8026b22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026b14:	8822      	ldrh	r2, [r4, #0]
 8026b16:	9300      	str	r3, [sp, #0]
 8026b18:	4640      	mov	r0, r8
 8026b1a:	464b      	mov	r3, r9
 8026b1c:	f7ff ff0c 	bl	8026938 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026b20:	8020      	strh	r0, [r4, #0]
 8026b22:	3402      	adds	r4, #2
 8026b24:	9b06      	ldr	r3, [sp, #24]
 8026b26:	9a02      	ldr	r2, [sp, #8]
 8026b28:	881b      	ldrh	r3, [r3, #0]
 8026b2a:	eba3 030b 	sub.w	r3, r3, fp
 8026b2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8026b32:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026b36:	4413      	add	r3, r2
 8026b38:	9a07      	ldr	r2, [sp, #28]
 8026b3a:	fb93 f3f2 	sdiv	r3, r3, r2
 8026b3e:	441d      	add	r5, r3
 8026b40:	e7a3      	b.n	8026a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8026b42:	9b05      	ldr	r3, [sp, #20]
 8026b44:	6818      	ldr	r0, [r3, #0]
 8026b46:	6803      	ldr	r3, [r0, #0]
 8026b48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026b4a:	4798      	blx	r3
 8026b4c:	b00d      	add	sp, #52	; 0x34
 8026b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b52:	bf00      	nop
 8026b54:	20013444 	.word	0x20013444
 8026b58:	2001343e 	.word	0x2001343e

08026b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026b5c:	b570      	push	{r4, r5, r6, lr}
 8026b5e:	1214      	asrs	r4, r2, #8
 8026b60:	788d      	ldrb	r5, [r1, #2]
 8026b62:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026b66:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026b6a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026b6e:	fb15 f503 	smulbb	r5, r5, r3
 8026b72:	fb04 5506 	mla	r5, r4, r6, r5
 8026b76:	10d0      	asrs	r0, r2, #3
 8026b78:	784c      	ldrb	r4, [r1, #1]
 8026b7a:	7809      	ldrb	r1, [r1, #0]
 8026b7c:	00d2      	lsls	r2, r2, #3
 8026b7e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026b82:	b2d2      	uxtb	r2, r2
 8026b84:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026b88:	fb14 f403 	smulbb	r4, r4, r3
 8026b8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8026b90:	fb11 f303 	smulbb	r3, r1, r3
 8026b94:	fb00 4406 	mla	r4, r0, r6, r4
 8026b98:	fb02 3306 	mla	r3, r2, r6, r3
 8026b9c:	b2ad      	uxth	r5, r5
 8026b9e:	b29b      	uxth	r3, r3
 8026ba0:	b2a4      	uxth	r4, r4
 8026ba2:	1c68      	adds	r0, r5, #1
 8026ba4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026ba8:	1c62      	adds	r2, r4, #1
 8026baa:	1c58      	adds	r0, r3, #1
 8026bac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026bb0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026bb4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026bb8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026bbc:	0964      	lsrs	r4, r4, #5
 8026bbe:	4328      	orrs	r0, r5
 8026bc0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026bc4:	4320      	orrs	r0, r4
 8026bc6:	bd70      	pop	{r4, r5, r6, pc}

08026bc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026bcc:	b08f      	sub	sp, #60	; 0x3c
 8026bce:	461c      	mov	r4, r3
 8026bd0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026bd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026bd6:	4682      	mov	sl, r0
 8026bd8:	460e      	mov	r6, r1
 8026bda:	4615      	mov	r5, r2
 8026bdc:	2f00      	cmp	r7, #0
 8026bde:	f000 8142 	beq.w	8026e66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8026be2:	6820      	ldr	r0, [r4, #0]
 8026be4:	6861      	ldr	r1, [r4, #4]
 8026be6:	aa0a      	add	r2, sp, #40	; 0x28
 8026be8:	c203      	stmia	r2!, {r0, r1}
 8026bea:	6818      	ldr	r0, [r3, #0]
 8026bec:	6859      	ldr	r1, [r3, #4]
 8026bee:	aa0c      	add	r2, sp, #48	; 0x30
 8026bf0:	c203      	stmia	r2!, {r0, r1}
 8026bf2:	a80a      	add	r0, sp, #40	; 0x28
 8026bf4:	f7ef f80c 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026bf8:	4621      	mov	r1, r4
 8026bfa:	a80c      	add	r0, sp, #48	; 0x30
 8026bfc:	f7ef f84c 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026c00:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026c04:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026c08:	f002 0301 	and.w	r3, r2, #1
 8026c0c:	9306      	str	r3, [sp, #24]
 8026c0e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026c12:	f003 0101 	and.w	r1, r3, #1
 8026c16:	9105      	str	r1, [sp, #20]
 8026c18:	9805      	ldr	r0, [sp, #20]
 8026c1a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026c1e:	4403      	add	r3, r0
 8026c20:	fb01 2303 	mla	r3, r1, r3, r2
 8026c24:	f04f 0802 	mov.w	r8, #2
 8026c28:	fb93 f3f8 	sdiv	r3, r3, r8
 8026c2c:	441e      	add	r6, r3
 8026c2e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026c32:	441a      	add	r2, r3
 8026c34:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026c38:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026c3c:	4419      	add	r1, r3
 8026c3e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8026c42:	9303      	str	r3, [sp, #12]
 8026c44:	4b89      	ldr	r3, [pc, #548]	; (8026e6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026c46:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026c4a:	6818      	ldr	r0, [r3, #0]
 8026c4c:	6803      	ldr	r3, [r0, #0]
 8026c4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026c50:	4798      	blx	r3
 8026c52:	4a87      	ldr	r2, [pc, #540]	; (8026e70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026c54:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026c58:	8813      	ldrh	r3, [r2, #0]
 8026c5a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026c5e:	2fff      	cmp	r7, #255	; 0xff
 8026c60:	fb03 9404 	mla	r4, r3, r4, r9
 8026c64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026c68:	f105 0504 	add.w	r5, r5, #4
 8026c6c:	4694      	mov	ip, r2
 8026c6e:	fb03 f30b 	mul.w	r3, r3, fp
 8026c72:	d071      	beq.n	8026d58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026c74:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026c78:	43f9      	mvns	r1, r7
 8026c7a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026c7e:	b2c9      	uxtb	r1, r1
 8026c80:	9104      	str	r1, [sp, #16]
 8026c82:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026c86:	9b07      	ldr	r3, [sp, #28]
 8026c88:	42a3      	cmp	r3, r4
 8026c8a:	f240 80e7 	bls.w	8026e5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026c8e:	9b06      	ldr	r3, [sp, #24]
 8026c90:	2b00      	cmp	r3, #0
 8026c92:	d03d      	beq.n	8026d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026c94:	7831      	ldrb	r1, [r6, #0]
 8026c96:	9b04      	ldr	r3, [sp, #16]
 8026c98:	8822      	ldrh	r2, [r4, #0]
 8026c9a:	9300      	str	r3, [sp, #0]
 8026c9c:	f001 010f 	and.w	r1, r1, #15
 8026ca0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026ca4:	463b      	mov	r3, r7
 8026ca6:	4429      	add	r1, r5
 8026ca8:	4650      	mov	r0, sl
 8026caa:	f7ff ff57 	bl	8026b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026cae:	9b03      	ldr	r3, [sp, #12]
 8026cb0:	f824 0b02 	strh.w	r0, [r4], #2
 8026cb4:	f106 0801 	add.w	r8, r6, #1
 8026cb8:	f103 3bff 	add.w	fp, r3, #4294967295
 8026cbc:	f1bb 0f01 	cmp.w	fp, #1
 8026cc0:	46a1      	mov	r9, r4
 8026cc2:	f104 0404 	add.w	r4, r4, #4
 8026cc6:	dd27      	ble.n	8026d18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026cc8:	f898 1000 	ldrb.w	r1, [r8]
 8026ccc:	9b04      	ldr	r3, [sp, #16]
 8026cce:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026cd2:	9300      	str	r3, [sp, #0]
 8026cd4:	0909      	lsrs	r1, r1, #4
 8026cd6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026cda:	463b      	mov	r3, r7
 8026cdc:	4429      	add	r1, r5
 8026cde:	4650      	mov	r0, sl
 8026ce0:	f7ff ff3c 	bl	8026b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026ce4:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026ce8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026cec:	9b04      	ldr	r3, [sp, #16]
 8026cee:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026cf2:	9300      	str	r3, [sp, #0]
 8026cf4:	f001 010f 	and.w	r1, r1, #15
 8026cf8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026cfc:	463b      	mov	r3, r7
 8026cfe:	4429      	add	r1, r5
 8026d00:	4650      	mov	r0, sl
 8026d02:	f7ff ff2b 	bl	8026b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026d06:	f1ab 0b02 	sub.w	fp, fp, #2
 8026d0a:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026d0e:	e7d5      	b.n	8026cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026d10:	46b0      	mov	r8, r6
 8026d12:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026d16:	e7d1      	b.n	8026cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026d18:	d10f      	bne.n	8026d3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026d1a:	f898 1000 	ldrb.w	r1, [r8]
 8026d1e:	9b04      	ldr	r3, [sp, #16]
 8026d20:	f8b9 2000 	ldrh.w	r2, [r9]
 8026d24:	9300      	str	r3, [sp, #0]
 8026d26:	0909      	lsrs	r1, r1, #4
 8026d28:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026d2c:	463b      	mov	r3, r7
 8026d2e:	4429      	add	r1, r5
 8026d30:	4650      	mov	r0, sl
 8026d32:	f7ff ff13 	bl	8026b5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026d36:	f829 0b02 	strh.w	r0, [r9], #2
 8026d3a:	9b08      	ldr	r3, [sp, #32]
 8026d3c:	9a05      	ldr	r2, [sp, #20]
 8026d3e:	881c      	ldrh	r4, [r3, #0]
 8026d40:	9b03      	ldr	r3, [sp, #12]
 8026d42:	1ae4      	subs	r4, r4, r3
 8026d44:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026d48:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026d4c:	4413      	add	r3, r2
 8026d4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d50:	fb93 f3f2 	sdiv	r3, r3, r2
 8026d54:	441e      	add	r6, r3
 8026d56:	e796      	b.n	8026c86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026d58:	4f46      	ldr	r7, [pc, #280]	; (8026e74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026d5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026d5e:	42a3      	cmp	r3, r4
 8026d60:	d97c      	bls.n	8026e5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026d62:	9a06      	ldr	r2, [sp, #24]
 8026d64:	2a00      	cmp	r2, #0
 8026d66:	d054      	beq.n	8026e12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026d68:	7830      	ldrb	r0, [r6, #0]
 8026d6a:	f000 000f 	and.w	r0, r0, #15
 8026d6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026d72:	eb05 0e00 	add.w	lr, r5, r0
 8026d76:	5c28      	ldrb	r0, [r5, r0]
 8026d78:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026d7c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026d80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026d84:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026d88:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026d8c:	ea42 020e 	orr.w	r2, r2, lr
 8026d90:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026d94:	f824 2b02 	strh.w	r2, [r4], #2
 8026d98:	9a03      	ldr	r2, [sp, #12]
 8026d9a:	1c71      	adds	r1, r6, #1
 8026d9c:	f102 3eff 	add.w	lr, r2, #4294967295
 8026da0:	f1be 0f01 	cmp.w	lr, #1
 8026da4:	4620      	mov	r0, r4
 8026da6:	f104 0404 	add.w	r4, r4, #4
 8026daa:	dd36      	ble.n	8026e1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026dac:	7808      	ldrb	r0, [r1, #0]
 8026dae:	0900      	lsrs	r0, r0, #4
 8026db0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026db4:	eb05 0a00 	add.w	sl, r5, r0
 8026db8:	f1ae 0e02 	sub.w	lr, lr, #2
 8026dbc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026dc0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026dc4:	00d2      	lsls	r2, r2, #3
 8026dc6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026dca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026dce:	ea49 0202 	orr.w	r2, r9, r2
 8026dd2:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026dd6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026dda:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026dde:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026de2:	f000 000f 	and.w	r0, r0, #15
 8026de6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026dea:	eb05 0a00 	add.w	sl, r5, r0
 8026dee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026df2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026df6:	00d2      	lsls	r2, r2, #3
 8026df8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026dfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026e00:	ea49 0202 	orr.w	r2, r9, r2
 8026e04:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026e08:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026e0c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026e10:	e7c6      	b.n	8026da0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026e12:	4631      	mov	r1, r6
 8026e14:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026e18:	e7c2      	b.n	8026da0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026e1a:	d111      	bne.n	8026e40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026e1c:	7809      	ldrb	r1, [r1, #0]
 8026e1e:	0909      	lsrs	r1, r1, #4
 8026e20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026e24:	186c      	adds	r4, r5, r1
 8026e26:	5c69      	ldrb	r1, [r5, r1]
 8026e28:	78a2      	ldrb	r2, [r4, #2]
 8026e2a:	7864      	ldrb	r4, [r4, #1]
 8026e2c:	00e4      	lsls	r4, r4, #3
 8026e2e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026e32:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026e36:	4322      	orrs	r2, r4
 8026e38:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026e3c:	f820 2b02 	strh.w	r2, [r0], #2
 8026e40:	9a03      	ldr	r2, [sp, #12]
 8026e42:	f8bc 4000 	ldrh.w	r4, [ip]
 8026e46:	9905      	ldr	r1, [sp, #20]
 8026e48:	1aa4      	subs	r4, r4, r2
 8026e4a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026e4e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026e52:	440a      	add	r2, r1
 8026e54:	fb92 f2f8 	sdiv	r2, r2, r8
 8026e58:	4416      	add	r6, r2
 8026e5a:	e780      	b.n	8026d5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026e5c:	4b03      	ldr	r3, [pc, #12]	; (8026e6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026e5e:	6818      	ldr	r0, [r3, #0]
 8026e60:	6803      	ldr	r3, [r0, #0]
 8026e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026e64:	4798      	blx	r3
 8026e66:	b00f      	add	sp, #60	; 0x3c
 8026e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e6c:	20013444 	.word	0x20013444
 8026e70:	2001343e 	.word	0x2001343e
 8026e74:	fffff800 	.word	0xfffff800

08026e78 <CRC_Lock>:
 8026e78:	b530      	push	{r4, r5, lr}
 8026e7a:	4a20      	ldr	r2, [pc, #128]	; (8026efc <CRC_Lock+0x84>)
 8026e7c:	6813      	ldr	r3, [r2, #0]
 8026e7e:	f023 0301 	bic.w	r3, r3, #1
 8026e82:	6013      	str	r3, [r2, #0]
 8026e84:	4b1e      	ldr	r3, [pc, #120]	; (8026f00 <CRC_Lock+0x88>)
 8026e86:	681a      	ldr	r2, [r3, #0]
 8026e88:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026e8c:	4022      	ands	r2, r4
 8026e8e:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026e92:	42aa      	cmp	r2, r5
 8026e94:	d005      	beq.n	8026ea2 <CRC_Lock+0x2a>
 8026e96:	681b      	ldr	r3, [r3, #0]
 8026e98:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026e9c:	4023      	ands	r3, r4
 8026e9e:	4293      	cmp	r3, r2
 8026ea0:	d124      	bne.n	8026eec <CRC_Lock+0x74>
 8026ea2:	4b18      	ldr	r3, [pc, #96]	; (8026f04 <CRC_Lock+0x8c>)
 8026ea4:	681b      	ldr	r3, [r3, #0]
 8026ea6:	bb0b      	cbnz	r3, 8026eec <CRC_Lock+0x74>
 8026ea8:	4b17      	ldr	r3, [pc, #92]	; (8026f08 <CRC_Lock+0x90>)
 8026eaa:	681a      	ldr	r2, [r3, #0]
 8026eac:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026eb0:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026eb4:	d00d      	beq.n	8026ed2 <CRC_Lock+0x5a>
 8026eb6:	681a      	ldr	r2, [r3, #0]
 8026eb8:	f240 4483 	movw	r4, #1155	; 0x483
 8026ebc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026ec0:	42a2      	cmp	r2, r4
 8026ec2:	d006      	beq.n	8026ed2 <CRC_Lock+0x5a>
 8026ec4:	681b      	ldr	r3, [r3, #0]
 8026ec6:	f240 4285 	movw	r2, #1157	; 0x485
 8026eca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026ece:	4293      	cmp	r3, r2
 8026ed0:	d10c      	bne.n	8026eec <CRC_Lock+0x74>
 8026ed2:	4b0e      	ldr	r3, [pc, #56]	; (8026f0c <CRC_Lock+0x94>)
 8026ed4:	2201      	movs	r2, #1
 8026ed6:	601a      	str	r2, [r3, #0]
 8026ed8:	681a      	ldr	r2, [r3, #0]
 8026eda:	2a00      	cmp	r2, #0
 8026edc:	d1fc      	bne.n	8026ed8 <CRC_Lock+0x60>
 8026ede:	4b0c      	ldr	r3, [pc, #48]	; (8026f10 <CRC_Lock+0x98>)
 8026ee0:	6018      	str	r0, [r3, #0]
 8026ee2:	6818      	ldr	r0, [r3, #0]
 8026ee4:	1a43      	subs	r3, r0, r1
 8026ee6:	4258      	negs	r0, r3
 8026ee8:	4158      	adcs	r0, r3
 8026eea:	bd30      	pop	{r4, r5, pc}
 8026eec:	4b09      	ldr	r3, [pc, #36]	; (8026f14 <CRC_Lock+0x9c>)
 8026eee:	2201      	movs	r2, #1
 8026ef0:	601a      	str	r2, [r3, #0]
 8026ef2:	681a      	ldr	r2, [r3, #0]
 8026ef4:	2a00      	cmp	r2, #0
 8026ef6:	d1fc      	bne.n	8026ef2 <CRC_Lock+0x7a>
 8026ef8:	4b07      	ldr	r3, [pc, #28]	; (8026f18 <CRC_Lock+0xa0>)
 8026efa:	e7f1      	b.n	8026ee0 <CRC_Lock+0x68>
 8026efc:	e0002000 	.word	0xe0002000
 8026f00:	e000ed00 	.word	0xe000ed00
 8026f04:	e0042000 	.word	0xe0042000
 8026f08:	5c001000 	.word	0x5c001000
 8026f0c:	58024c08 	.word	0x58024c08
 8026f10:	58024c00 	.word	0x58024c00
 8026f14:	40023008 	.word	0x40023008
 8026f18:	40023000 	.word	0x40023000

08026f1c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026f1c:	6101      	str	r1, [r0, #16]
 8026f1e:	4770      	bx	lr

08026f20 <_ZN8touchgfx8Gestures4tickEv>:
 8026f20:	7b83      	ldrb	r3, [r0, #14]
 8026f22:	b14b      	cbz	r3, 8026f38 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026f24:	8903      	ldrh	r3, [r0, #8]
 8026f26:	3301      	adds	r3, #1
 8026f28:	b29b      	uxth	r3, r3
 8026f2a:	2b07      	cmp	r3, #7
 8026f2c:	8103      	strh	r3, [r0, #8]
 8026f2e:	bf81      	itttt	hi
 8026f30:	2300      	movhi	r3, #0
 8026f32:	8143      	strhhi	r3, [r0, #10]
 8026f34:	8183      	strhhi	r3, [r0, #12]
 8026f36:	7383      	strbhi	r3, [r0, #14]
 8026f38:	4770      	bx	lr
	...

08026f3c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026f3c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026f40:	4698      	mov	r8, r3
 8026f42:	8883      	ldrh	r3, [r0, #4]
 8026f44:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026f48:	eba8 0303 	sub.w	r3, r8, r3
 8026f4c:	b21b      	sxth	r3, r3
 8026f4e:	4604      	mov	r4, r0
 8026f50:	2b00      	cmp	r3, #0
 8026f52:	4617      	mov	r7, r2
 8026f54:	4a18      	ldr	r2, [pc, #96]	; (8026fb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026f56:	9200      	str	r2, [sp, #0]
 8026f58:	bfb8      	it	lt
 8026f5a:	425b      	neglt	r3, r3
 8026f5c:	8aa2      	ldrh	r2, [r4, #20]
 8026f5e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026f62:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026f66:	b21b      	sxth	r3, r3
 8026f68:	460e      	mov	r6, r1
 8026f6a:	4293      	cmp	r3, r2
 8026f6c:	88c1      	ldrh	r1, [r0, #6]
 8026f6e:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026f72:	f04f 0000 	mov.w	r0, #0
 8026f76:	f88d 0004 	strb.w	r0, [sp, #4]
 8026f7a:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026f7e:	dc07      	bgt.n	8026f90 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026f80:	1a69      	subs	r1, r5, r1
 8026f82:	b209      	sxth	r1, r1
 8026f84:	2900      	cmp	r1, #0
 8026f86:	bfb8      	it	lt
 8026f88:	4249      	neglt	r1, r1
 8026f8a:	b209      	sxth	r1, r1
 8026f8c:	428a      	cmp	r2, r1
 8026f8e:	da10      	bge.n	8026fb2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026f90:	6920      	ldr	r0, [r4, #16]
 8026f92:	6803      	ldr	r3, [r0, #0]
 8026f94:	4669      	mov	r1, sp
 8026f96:	685b      	ldr	r3, [r3, #4]
 8026f98:	4798      	blx	r3
 8026f9a:	eba8 0606 	sub.w	r6, r8, r6
 8026f9e:	2300      	movs	r3, #0
 8026fa0:	1bef      	subs	r7, r5, r7
 8026fa2:	2001      	movs	r0, #1
 8026fa4:	8123      	strh	r3, [r4, #8]
 8026fa6:	8166      	strh	r6, [r4, #10]
 8026fa8:	81a7      	strh	r7, [r4, #12]
 8026faa:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026fae:	80e5      	strh	r5, [r4, #6]
 8026fb0:	73a0      	strb	r0, [r4, #14]
 8026fb2:	b004      	add	sp, #16
 8026fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026fb8:	0802fa28 	.word	0x0802fa28

08026fbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026fbe:	461e      	mov	r6, r3
 8026fc0:	1e4b      	subs	r3, r1, #1
 8026fc2:	2b01      	cmp	r3, #1
 8026fc4:	b085      	sub	sp, #20
 8026fc6:	4604      	mov	r4, r0
 8026fc8:	460d      	mov	r5, r1
 8026fca:	4617      	mov	r7, r2
 8026fcc:	d84b      	bhi.n	8027066 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026fce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026fd2:	1cd3      	adds	r3, r2, #3
 8026fd4:	b29b      	uxth	r3, r3
 8026fd6:	2b06      	cmp	r3, #6
 8026fd8:	d916      	bls.n	8027008 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026fda:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802707c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026fde:	f8cd c004 	str.w	ip, [sp, #4]
 8026fe2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026fe6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026fea:	6900      	ldr	r0, [r0, #16]
 8026fec:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026ff0:	f04f 0c00 	mov.w	ip, #0
 8026ff4:	f88d c008 	strb.w	ip, [sp, #8]
 8026ff8:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026ffc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027000:	6803      	ldr	r3, [r0, #0]
 8027002:	a901      	add	r1, sp, #4
 8027004:	689b      	ldr	r3, [r3, #8]
 8027006:	4798      	blx	r3
 8027008:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802700c:	1cd3      	adds	r3, r2, #3
 802700e:	b29b      	uxth	r3, r3
 8027010:	2b06      	cmp	r3, #6
 8027012:	d916      	bls.n	8027042 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027014:	f8df c064 	ldr.w	ip, [pc, #100]	; 802707c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027018:	f8cd c004 	str.w	ip, [sp, #4]
 802701c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027020:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027024:	6920      	ldr	r0, [r4, #16]
 8027026:	f8ad 100c 	strh.w	r1, [sp, #12]
 802702a:	f04f 0c01 	mov.w	ip, #1
 802702e:	f88d c008 	strb.w	ip, [sp, #8]
 8027032:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027036:	f8ad 300e 	strh.w	r3, [sp, #14]
 802703a:	6803      	ldr	r3, [r0, #0]
 802703c:	a901      	add	r1, sp, #4
 802703e:	689b      	ldr	r3, [r3, #8]
 8027040:	4798      	blx	r3
 8027042:	4b0d      	ldr	r3, [pc, #52]	; (8027078 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027044:	9301      	str	r3, [sp, #4]
 8027046:	6920      	ldr	r0, [r4, #16]
 8027048:	f88d 5008 	strb.w	r5, [sp, #8]
 802704c:	2300      	movs	r3, #0
 802704e:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027052:	f8ad 600c 	strh.w	r6, [sp, #12]
 8027056:	f8ad 300e 	strh.w	r3, [sp, #14]
 802705a:	6803      	ldr	r3, [r0, #0]
 802705c:	a901      	add	r1, sp, #4
 802705e:	681b      	ldr	r3, [r3, #0]
 8027060:	4798      	blx	r3
 8027062:	b005      	add	sp, #20
 8027064:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027066:	2900      	cmp	r1, #0
 8027068:	d1eb      	bne.n	8027042 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802706a:	80a2      	strh	r2, [r4, #4]
 802706c:	80c6      	strh	r6, [r0, #6]
 802706e:	60a1      	str	r1, [r4, #8]
 8027070:	81a1      	strh	r1, [r4, #12]
 8027072:	73a1      	strb	r1, [r4, #14]
 8027074:	e7e5      	b.n	8027042 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027076:	bf00      	nop
 8027078:	0802fa14 	.word	0x0802fa14
 802707c:	0802fa3c 	.word	0x0802fa3c

08027080 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027080:	10c9      	asrs	r1, r1, #3
 8027082:	2900      	cmp	r1, #0
 8027084:	bfb8      	it	lt
 8027086:	4249      	neglt	r1, r1
 8027088:	2801      	cmp	r0, #1
 802708a:	d108      	bne.n	802709e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802708c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027090:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027094:	4601      	mov	r1, r0
 8027096:	dd02      	ble.n	802709e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027098:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802709c:	4770      	bx	lr
 802709e:	29ff      	cmp	r1, #255	; 0xff
 80270a0:	bfa8      	it	ge
 80270a2:	21ff      	movge	r1, #255	; 0xff
 80270a4:	4608      	mov	r0, r1
 80270a6:	4770      	bx	lr

080270a8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80270a8:	b410      	push	{r4}
 80270aa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80270ae:	429c      	cmp	r4, r3
 80270b0:	d803      	bhi.n	80270ba <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80270b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80270b6:	f7ed b8b1 	b.w	801421c <_ZN8touchgfx7Outline6lineToEii>
 80270ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80270be:	4770      	bx	lr

080270c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80270c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80270c4:	b08b      	sub	sp, #44	; 0x2c
 80270c6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80270ca:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80270ce:	9308      	str	r3, [sp, #32]
 80270d0:	4606      	mov	r6, r0
 80270d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80270d6:	9309      	str	r3, [sp, #36]	; 0x24
 80270d8:	468a      	mov	sl, r1
 80270da:	f7ed fa0c 	bl	80144f6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80270de:	68b5      	ldr	r5, [r6, #8]
 80270e0:	4604      	mov	r4, r0
 80270e2:	2d00      	cmp	r5, #0
 80270e4:	d044      	beq.n	8027170 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80270e6:	6873      	ldr	r3, [r6, #4]
 80270e8:	42ab      	cmp	r3, r5
 80270ea:	d33d      	bcc.n	8027168 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80270ec:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80270f0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80270f4:	eb02 0b03 	add.w	fp, r2, r3
 80270f8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80270fc:	fb02 1203 	mla	r2, r2, r3, r1
 8027100:	9205      	str	r2, [sp, #20]
 8027102:	1e6a      	subs	r2, r5, #1
 8027104:	9204      	str	r2, [sp, #16]
 8027106:	f04f 0800 	mov.w	r8, #0
 802710a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802710e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027112:	454b      	cmp	r3, r9
 8027114:	463a      	mov	r2, r7
 8027116:	d008      	beq.n	802712a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027118:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802711c:	eb03 0b09 	add.w	fp, r3, r9
 8027120:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027124:	fb03 1309 	mla	r3, r3, r9, r1
 8027128:	9305      	str	r3, [sp, #20]
 802712a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802712e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027132:	4498      	add	r8, r3
 8027134:	9b04      	ldr	r3, [sp, #16]
 8027136:	3b01      	subs	r3, #1
 8027138:	9304      	str	r3, [sp, #16]
 802713a:	9b04      	ldr	r3, [sp, #16]
 802713c:	3301      	adds	r3, #1
 802713e:	d015      	beq.n	802716c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027140:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027144:	42bb      	cmp	r3, r7
 8027146:	d117      	bne.n	8027178 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027148:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802714c:	9b04      	ldr	r3, [sp, #16]
 802714e:	4548      	cmp	r0, r9
 8027150:	f103 33ff 	add.w	r3, r3, #4294967295
 8027154:	d17f      	bne.n	8027256 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8027156:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802715a:	4401      	add	r1, r0
 802715c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027160:	4480      	add	r8, r0
 8027162:	e7e9      	b.n	8027138 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027164:	461f      	mov	r7, r3
 8027166:	e044      	b.n	80271f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027168:	2000      	movs	r0, #0
 802716a:	e002      	b.n	8027172 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802716c:	2900      	cmp	r1, #0
 802716e:	d16f      	bne.n	8027250 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027170:	2001      	movs	r0, #1
 8027172:	b00b      	add	sp, #44	; 0x2c
 8027174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027178:	2900      	cmp	r1, #0
 802717a:	d030      	beq.n	80271de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802717c:	2f00      	cmp	r7, #0
 802717e:	db29      	blt.n	80271d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027180:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027184:	42bb      	cmp	r3, r7
 8027186:	dd25      	ble.n	80271d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027188:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802718c:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027190:	f7ff ff76 	bl	8027080 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027194:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027196:	fb10 f003 	smulbb	r0, r0, r3
 802719a:	b280      	uxth	r0, r0
 802719c:	1c41      	adds	r1, r0, #1
 802719e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80271a2:	1209      	asrs	r1, r1, #8
 80271a4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80271a8:	d014      	beq.n	80271d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80271aa:	9808      	ldr	r0, [sp, #32]
 80271ac:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80271ae:	b2c9      	uxtb	r1, r1
 80271b0:	b2ba      	uxth	r2, r7
 80271b2:	9102      	str	r1, [sp, #8]
 80271b4:	2101      	movs	r1, #1
 80271b6:	4413      	add	r3, r2
 80271b8:	9101      	str	r1, [sp, #4]
 80271ba:	4402      	add	r2, r0
 80271bc:	fa0f f18b 	sxth.w	r1, fp
 80271c0:	f8da 0000 	ldr.w	r0, [sl]
 80271c4:	9100      	str	r1, [sp, #0]
 80271c6:	6941      	ldr	r1, [r0, #20]
 80271c8:	b21b      	sxth	r3, r3
 80271ca:	460d      	mov	r5, r1
 80271cc:	b212      	sxth	r2, r2
 80271ce:	9905      	ldr	r1, [sp, #20]
 80271d0:	4650      	mov	r0, sl
 80271d2:	47a8      	blx	r5
 80271d4:	9b04      	ldr	r3, [sp, #16]
 80271d6:	3301      	adds	r3, #1
 80271d8:	f107 0201 	add.w	r2, r7, #1
 80271dc:	d0c8      	beq.n	8027170 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80271de:	f9b4 7000 	ldrsh.w	r7, [r4]
 80271e2:	1abb      	subs	r3, r7, r2
 80271e4:	2b00      	cmp	r3, #0
 80271e6:	dd31      	ble.n	802724c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80271e8:	2a00      	cmp	r2, #0
 80271ea:	dabb      	bge.n	8027164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80271ec:	2f00      	cmp	r7, #0
 80271ee:	dd2d      	ble.n	802724c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80271f0:	2200      	movs	r2, #0
 80271f2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80271f6:	19d1      	adds	r1, r2, r7
 80271f8:	4299      	cmp	r1, r3
 80271fa:	db02      	blt.n	8027202 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80271fc:	1a9f      	subs	r7, r3, r2
 80271fe:	2f00      	cmp	r7, #0
 8027200:	dd24      	ble.n	802724c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027202:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027206:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802720a:	f7ff ff39 	bl	8027080 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802720e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027210:	fb10 f003 	smulbb	r0, r0, r3
 8027214:	b280      	uxth	r0, r0
 8027216:	1c41      	adds	r1, r0, #1
 8027218:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802721c:	1209      	asrs	r1, r1, #8
 802721e:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027222:	d013      	beq.n	802724c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027224:	9808      	ldr	r0, [sp, #32]
 8027226:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027228:	b292      	uxth	r2, r2
 802722a:	b2c9      	uxtb	r1, r1
 802722c:	4413      	add	r3, r2
 802722e:	9102      	str	r1, [sp, #8]
 8027230:	4402      	add	r2, r0
 8027232:	b23f      	sxth	r7, r7
 8027234:	f8da 0000 	ldr.w	r0, [sl]
 8027238:	9701      	str	r7, [sp, #4]
 802723a:	fa0f f18b 	sxth.w	r1, fp
 802723e:	9100      	str	r1, [sp, #0]
 8027240:	6947      	ldr	r7, [r0, #20]
 8027242:	9905      	ldr	r1, [sp, #20]
 8027244:	b21b      	sxth	r3, r3
 8027246:	b212      	sxth	r2, r2
 8027248:	4650      	mov	r0, sl
 802724a:	47b8      	blx	r7
 802724c:	464b      	mov	r3, r9
 802724e:	e75c      	b.n	802710a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027250:	2f00      	cmp	r7, #0
 8027252:	da95      	bge.n	8027180 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027254:	e78c      	b.n	8027170 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027256:	2900      	cmp	r1, #0
 8027258:	d0f8      	beq.n	802724c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802725a:	e78f      	b.n	802717c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802725c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802725c:	4b4b      	ldr	r3, [pc, #300]	; (802738c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802725e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027262:	2500      	movs	r5, #0
 8027264:	f100 0620 	add.w	r6, r0, #32
 8027268:	4604      	mov	r4, r0
 802726a:	e9c0 3100 	strd	r3, r1, [r0]
 802726e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027272:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027276:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802727a:	f100 0718 	add.w	r7, r0, #24
 802727e:	4630      	mov	r0, r6
 8027280:	4690      	mov	r8, r2
 8027282:	f7ec fb03 	bl	801388c <_ZN8touchgfx7OutlineC1Ev>
 8027286:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802728a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802728e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027292:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027296:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802729a:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802729e:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 80272a2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80272a6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80272aa:	f9b8 2000 	ldrsh.w	r2, [r8]
 80272ae:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80272b2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80272b6:	9500      	str	r5, [sp, #0]
 80272b8:	4410      	add	r0, r2
 80272ba:	b280      	uxth	r0, r0
 80272bc:	fa0f fa80 	sxth.w	sl, r0
 80272c0:	45aa      	cmp	sl, r5
 80272c2:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80272c6:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80272ca:	dd5c      	ble.n	8027386 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80272cc:	4591      	cmp	r9, r2
 80272ce:	dd5a      	ble.n	8027386 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80272d0:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80272d4:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80272d8:	440b      	add	r3, r1
 80272da:	b29b      	uxth	r3, r3
 80272dc:	b21d      	sxth	r5, r3
 80272de:	2d00      	cmp	r5, #0
 80272e0:	dd51      	ble.n	8027386 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80272e2:	458e      	cmp	lr, r1
 80272e4:	dd4f      	ble.n	8027386 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80272e6:	45d1      	cmp	r9, sl
 80272e8:	bfb8      	it	lt
 80272ea:	fa1f f089 	uxthlt.w	r0, r9
 80272ee:	45ae      	cmp	lr, r5
 80272f0:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80272f4:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80272f8:	bfb8      	it	lt
 80272fa:	fa1f f38e 	uxthlt.w	r3, lr
 80272fe:	1a80      	subs	r0, r0, r2
 8027300:	1a5b      	subs	r3, r3, r1
 8027302:	f8ad 0004 	strh.w	r0, [sp, #4]
 8027306:	f8ad 3006 	strh.w	r3, [sp, #6]
 802730a:	f8ad 2000 	strh.w	r2, [sp]
 802730e:	f8ad 1002 	strh.w	r1, [sp, #2]
 8027312:	466d      	mov	r5, sp
 8027314:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027318:	e887 0003 	stmia.w	r7, {r0, r1}
 802731c:	f8dc 3000 	ldr.w	r3, [ip]
 8027320:	4660      	mov	r0, ip
 8027322:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027324:	4639      	mov	r1, r7
 8027326:	4798      	blx	r3
 8027328:	6861      	ldr	r1, [r4, #4]
 802732a:	4628      	mov	r0, r5
 802732c:	3104      	adds	r1, #4
 802732e:	f7ee fcb3 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027332:	4638      	mov	r0, r7
 8027334:	f7ee fc6c 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027338:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802733c:	f8bd 2000 	ldrh.w	r2, [sp]
 8027340:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8027344:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027348:	4630      	mov	r0, r6
 802734a:	f7ec fa83 	bl	8013854 <_ZN8touchgfx7Outline5resetEv>
 802734e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8027352:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027356:	015b      	lsls	r3, r3, #5
 8027358:	60a3      	str	r3, [r4, #8]
 802735a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802735e:	015b      	lsls	r3, r3, #5
 8027360:	60e3      	str	r3, [r4, #12]
 8027362:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027366:	015b      	lsls	r3, r3, #5
 8027368:	6123      	str	r3, [r4, #16]
 802736a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802736e:	015b      	lsls	r3, r3, #5
 8027370:	6163      	str	r3, [r4, #20]
 8027372:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027376:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802737a:	4620      	mov	r0, r4
 802737c:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027380:	b002      	add	sp, #8
 8027382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027386:	2300      	movs	r3, #0
 8027388:	9301      	str	r3, [sp, #4]
 802738a:	e7c2      	b.n	8027312 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 802738c:	0802fd60 	.word	0x0802fd60

08027390 <_ZN8touchgfx6Canvas5closeEv>:
 8027390:	b538      	push	{r3, r4, r5, lr}
 8027392:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027396:	4604      	mov	r4, r0
 8027398:	b193      	cbz	r3, 80273c0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802739a:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802739e:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80273a2:	4213      	tst	r3, r2
 80273a4:	d10c      	bne.n	80273c0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80273a6:	f100 0520 	add.w	r5, r0, #32
 80273aa:	b123      	cbz	r3, 80273b6 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80273ac:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80273b0:	4628      	mov	r0, r5
 80273b2:	f7ff fe79 	bl	80270a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80273b6:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80273ba:	4628      	mov	r0, r5
 80273bc:	f7ff fe74 	bl	80270a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80273c0:	2300      	movs	r3, #0
 80273c2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80273c6:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80273ca:	4298      	cmp	r0, r3
 80273cc:	bf34      	ite	cc
 80273ce:	2000      	movcc	r0, #0
 80273d0:	2001      	movcs	r0, #1
 80273d2:	bd38      	pop	{r3, r4, r5, pc}

080273d4 <_ZN8touchgfx6Canvas6renderEh>:
 80273d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80273d8:	4604      	mov	r4, r0
 80273da:	6840      	ldr	r0, [r0, #4]
 80273dc:	6803      	ldr	r3, [r0, #0]
 80273de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80273e0:	460d      	mov	r5, r1
 80273e2:	4798      	blx	r3
 80273e4:	fb10 f105 	smulbb	r1, r0, r5
 80273e8:	b289      	uxth	r1, r1
 80273ea:	1c4d      	adds	r5, r1, #1
 80273ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80273f0:	122d      	asrs	r5, r5, #8
 80273f2:	f000 809d 	beq.w	8027530 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80273f6:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80273fa:	2b00      	cmp	r3, #0
 80273fc:	f000 8098 	beq.w	8027530 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027400:	4620      	mov	r0, r4
 8027402:	f7ff ffc5 	bl	8027390 <_ZN8touchgfx6Canvas5closeEv>
 8027406:	4607      	mov	r7, r0
 8027408:	2800      	cmp	r0, #0
 802740a:	d048      	beq.n	802749e <_ZN8touchgfx6Canvas6renderEh+0xca>
 802740c:	6863      	ldr	r3, [r4, #4]
 802740e:	4e49      	ldr	r6, [pc, #292]	; (8027534 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027410:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027412:	6837      	ldr	r7, [r6, #0]
 8027414:	6803      	ldr	r3, [r0, #0]
 8027416:	689b      	ldr	r3, [r3, #8]
 8027418:	4798      	blx	r3
 802741a:	4601      	mov	r1, r0
 802741c:	4638      	mov	r0, r7
 802741e:	f7ea fb87 	bl	8011b30 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8027422:	4607      	mov	r7, r0
 8027424:	f7dc fe94 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8027428:	6803      	ldr	r3, [r0, #0]
 802742a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802742c:	4798      	blx	r3
 802742e:	4680      	mov	r8, r0
 8027430:	f7dc fe8e 	bl	8004150 <_ZN8touchgfx3HAL3lcdEv>
 8027434:	6803      	ldr	r3, [r0, #0]
 8027436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027438:	4798      	blx	r3
 802743a:	280b      	cmp	r0, #11
 802743c:	d85d      	bhi.n	80274fa <_ZN8touchgfx6Canvas6renderEh+0x126>
 802743e:	e8df f000 	tbb	[pc, r0]
 8027442:	5e53      	.short	0x5e53
 8027444:	325c066e 	.word	0x325c066e
 8027448:	67676742 	.word	0x67676742
 802744c:	6767      	.short	0x6767
 802744e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027452:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027456:	2208      	movs	r2, #8
 8027458:	fb91 f2f2 	sdiv	r2, r1, r2
 802745c:	fb08 2303 	mla	r3, r8, r3, r2
 8027460:	441f      	add	r7, r3
 8027462:	424b      	negs	r3, r1
 8027464:	f003 0307 	and.w	r3, r3, #7
 8027468:	f001 0107 	and.w	r1, r1, #7
 802746c:	bf58      	it	pl
 802746e:	4259      	negpl	r1, r3
 8027470:	b2c9      	uxtb	r1, r1
 8027472:	b2ed      	uxtb	r5, r5
 8027474:	e9cd 1500 	strd	r1, r5, [sp]
 8027478:	6860      	ldr	r0, [r4, #4]
 802747a:	463a      	mov	r2, r7
 802747c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802747e:	fa0f f388 	sxth.w	r3, r8
 8027482:	f104 0020 	add.w	r0, r4, #32
 8027486:	f7ff fe1b 	bl	80270c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802748a:	6863      	ldr	r3, [r4, #4]
 802748c:	4607      	mov	r7, r0
 802748e:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027490:	6803      	ldr	r3, [r0, #0]
 8027492:	691b      	ldr	r3, [r3, #16]
 8027494:	4798      	blx	r3
 8027496:	6830      	ldr	r0, [r6, #0]
 8027498:	6803      	ldr	r3, [r0, #0]
 802749a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802749c:	4798      	blx	r3
 802749e:	4638      	mov	r0, r7
 80274a0:	b002      	add	sp, #8
 80274a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80274a6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80274aa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80274ae:	2204      	movs	r2, #4
 80274b0:	fb91 f2f2 	sdiv	r2, r1, r2
 80274b4:	fb08 2303 	mla	r3, r8, r3, r2
 80274b8:	441f      	add	r7, r3
 80274ba:	424b      	negs	r3, r1
 80274bc:	f003 0303 	and.w	r3, r3, #3
 80274c0:	f001 0103 	and.w	r1, r1, #3
 80274c4:	e7d2      	b.n	802746c <_ZN8touchgfx6Canvas6renderEh+0x98>
 80274c6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80274ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80274ce:	2900      	cmp	r1, #0
 80274d0:	f04f 0202 	mov.w	r2, #2
 80274d4:	fb91 f2f2 	sdiv	r2, r1, r2
 80274d8:	f001 0101 	and.w	r1, r1, #1
 80274dc:	fb08 2303 	mla	r3, r8, r3, r2
 80274e0:	441f      	add	r7, r3
 80274e2:	bfb8      	it	lt
 80274e4:	4249      	neglt	r1, r1
 80274e6:	e7c3      	b.n	8027470 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80274e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80274ec:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80274f0:	fb08 f303 	mul.w	r3, r8, r3
 80274f4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80274f8:	441f      	add	r7, r3
 80274fa:	2100      	movs	r1, #0
 80274fc:	e7b9      	b.n	8027472 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80274fe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027502:	fb08 f203 	mul.w	r2, r8, r3
 8027506:	8b23      	ldrh	r3, [r4, #24]
 8027508:	2103      	movs	r1, #3
 802750a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802750e:	e7f3      	b.n	80274f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027510:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027514:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027518:	fb08 2303 	mla	r3, r8, r3, r2
 802751c:	e7ec      	b.n	80274f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802751e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027522:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027526:	fb08 f303 	mul.w	r3, r8, r3
 802752a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802752e:	e7e3      	b.n	80274f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027530:	2701      	movs	r7, #1
 8027532:	e7b4      	b.n	802749e <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027534:	20013444 	.word	0x20013444

08027538 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027538:	b510      	push	{r4, lr}
 802753a:	4b07      	ldr	r3, [pc, #28]	; (8027558 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802753c:	781b      	ldrb	r3, [r3, #0]
 802753e:	2b01      	cmp	r3, #1
 8027540:	d108      	bne.n	8027554 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027542:	6843      	ldr	r3, [r0, #4]
 8027544:	6814      	ldr	r4, [r2, #0]
 8027546:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802754a:	680b      	ldr	r3, [r1, #0]
 802754c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027550:	6013      	str	r3, [r2, #0]
 8027552:	600c      	str	r4, [r1, #0]
 8027554:	bd10      	pop	{r4, pc}
 8027556:	bf00      	nop
 8027558:	2001343c 	.word	0x2001343c

0802755c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802755c:	b513      	push	{r0, r1, r4, lr}
 802755e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027562:	4604      	mov	r4, r0
 8027564:	e9cd 2100 	strd	r2, r1, [sp]
 8027568:	b9a3      	cbnz	r3, 8027594 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802756a:	466a      	mov	r2, sp
 802756c:	a901      	add	r1, sp, #4
 802756e:	4620      	mov	r0, r4
 8027570:	f7ff ffe2 	bl	8027538 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027574:	68a3      	ldr	r3, [r4, #8]
 8027576:	9901      	ldr	r1, [sp, #4]
 8027578:	9a00      	ldr	r2, [sp, #0]
 802757a:	1ac9      	subs	r1, r1, r3
 802757c:	68e3      	ldr	r3, [r4, #12]
 802757e:	9101      	str	r1, [sp, #4]
 8027580:	1ad2      	subs	r2, r2, r3
 8027582:	2a00      	cmp	r2, #0
 8027584:	9200      	str	r2, [sp, #0]
 8027586:	da0b      	bge.n	80275a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027588:	2301      	movs	r3, #1
 802758a:	2900      	cmp	r1, #0
 802758c:	da0e      	bge.n	80275ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802758e:	f043 0304 	orr.w	r3, r3, #4
 8027592:	e013      	b.n	80275bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027594:	f7ff fefc 	bl	8027390 <_ZN8touchgfx6Canvas5closeEv>
 8027598:	2800      	cmp	r0, #0
 802759a:	d1e6      	bne.n	802756a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802759c:	b002      	add	sp, #8
 802759e:	bd10      	pop	{r4, pc}
 80275a0:	6963      	ldr	r3, [r4, #20]
 80275a2:	429a      	cmp	r2, r3
 80275a4:	bfac      	ite	ge
 80275a6:	2302      	movge	r3, #2
 80275a8:	2300      	movlt	r3, #0
 80275aa:	e7ee      	b.n	802758a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80275ac:	6920      	ldr	r0, [r4, #16]
 80275ae:	4281      	cmp	r1, r0
 80275b0:	bfac      	ite	ge
 80275b2:	2008      	movge	r0, #8
 80275b4:	2000      	movlt	r0, #0
 80275b6:	4318      	orrs	r0, r3
 80275b8:	b2c3      	uxtb	r3, r0
 80275ba:	b158      	cbz	r0, 80275d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80275bc:	2200      	movs	r2, #0
 80275be:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80275c2:	9901      	ldr	r1, [sp, #4]
 80275c4:	9a00      	ldr	r2, [sp, #0]
 80275c6:	66a1      	str	r1, [r4, #104]	; 0x68
 80275c8:	66e2      	str	r2, [r4, #108]	; 0x6c
 80275ca:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80275ce:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80275d2:	e7e3      	b.n	802759c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80275d4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80275d8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80275dc:	4298      	cmp	r0, r3
 80275de:	d803      	bhi.n	80275e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80275e0:	f104 0020 	add.w	r0, r4, #32
 80275e4:	f7ec fe34 	bl	8014250 <_ZN8touchgfx7Outline6moveToEii>
 80275e8:	2301      	movs	r3, #1
 80275ea:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80275ee:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80275f2:	2300      	movs	r3, #0
 80275f4:	e7e5      	b.n	80275c2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80275f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80275f8:	ab02      	add	r3, sp, #8
 80275fa:	4604      	mov	r4, r0
 80275fc:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027600:	9101      	str	r1, [sp, #4]
 8027602:	461a      	mov	r2, r3
 8027604:	a901      	add	r1, sp, #4
 8027606:	f7ff ff97 	bl	8027538 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802760a:	68a3      	ldr	r3, [r4, #8]
 802760c:	9901      	ldr	r1, [sp, #4]
 802760e:	9a00      	ldr	r2, [sp, #0]
 8027610:	1ac9      	subs	r1, r1, r3
 8027612:	68e3      	ldr	r3, [r4, #12]
 8027614:	9101      	str	r1, [sp, #4]
 8027616:	1ad2      	subs	r2, r2, r3
 8027618:	2a00      	cmp	r2, #0
 802761a:	9200      	str	r2, [sp, #0]
 802761c:	db1c      	blt.n	8027658 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802761e:	6963      	ldr	r3, [r4, #20]
 8027620:	429a      	cmp	r2, r3
 8027622:	bfac      	ite	ge
 8027624:	2002      	movge	r0, #2
 8027626:	2000      	movlt	r0, #0
 8027628:	2900      	cmp	r1, #0
 802762a:	db17      	blt.n	802765c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802762c:	6923      	ldr	r3, [r4, #16]
 802762e:	4299      	cmp	r1, r3
 8027630:	bfac      	ite	ge
 8027632:	2308      	movge	r3, #8
 8027634:	2300      	movlt	r3, #0
 8027636:	4303      	orrs	r3, r0
 8027638:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802763c:	b2dd      	uxtb	r5, r3
 802763e:	b978      	cbnz	r0, 8027660 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027640:	f104 0020 	add.w	r0, r4, #32
 8027644:	f7ff fd30 	bl	80270a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027648:	9b01      	ldr	r3, [sp, #4]
 802764a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802764c:	9b00      	ldr	r3, [sp, #0]
 802764e:	6623      	str	r3, [r4, #96]	; 0x60
 8027650:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027654:	b002      	add	sp, #8
 8027656:	bd70      	pop	{r4, r5, r6, pc}
 8027658:	2001      	movs	r0, #1
 802765a:	e7e5      	b.n	8027628 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802765c:	2304      	movs	r3, #4
 802765e:	e7ea      	b.n	8027636 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027660:	b113      	cbz	r3, 8027668 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027662:	ea10 0305 	ands.w	r3, r0, r5
 8027666:	d11c      	bne.n	80276a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027668:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802766c:	f104 0620 	add.w	r6, r4, #32
 8027670:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027674:	b98b      	cbnz	r3, 802769a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027676:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802767a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802767e:	4298      	cmp	r0, r3
 8027680:	d802      	bhi.n	8027688 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027682:	4630      	mov	r0, r6
 8027684:	f7ec fde4 	bl	8014250 <_ZN8touchgfx7Outline6moveToEii>
 8027688:	2301      	movs	r3, #1
 802768a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802768e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027692:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027696:	4630      	mov	r0, r6
 8027698:	e7d4      	b.n	8027644 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802769a:	4630      	mov	r0, r6
 802769c:	f7ff fd04 	bl	80270a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80276a0:	e7f7      	b.n	8027692 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80276a2:	461d      	mov	r5, r3
 80276a4:	e7d0      	b.n	8027648 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080276a8 <_ZN8touchgfx6CanvasD1Ev>:
 80276a8:	b510      	push	{r4, lr}
 80276aa:	4b04      	ldr	r3, [pc, #16]	; (80276bc <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80276ac:	4604      	mov	r4, r0
 80276ae:	f840 3b20 	str.w	r3, [r0], #32
 80276b2:	f7ec f8c7 	bl	8013844 <_ZN8touchgfx7OutlineD1Ev>
 80276b6:	4620      	mov	r0, r4
 80276b8:	bd10      	pop	{r4, pc}
 80276ba:	bf00      	nop
 80276bc:	0802fd60 	.word	0x0802fd60

080276c0 <_ZN8touchgfx6CanvasD0Ev>:
 80276c0:	b510      	push	{r4, lr}
 80276c2:	4604      	mov	r4, r0
 80276c4:	f7ff fff0 	bl	80276a8 <_ZN8touchgfx6CanvasD1Ev>
 80276c8:	4620      	mov	r0, r4
 80276ca:	2170      	movs	r1, #112	; 0x70
 80276cc:	f002 fd09 	bl	802a0e2 <_ZdlPvj>
 80276d0:	4620      	mov	r0, r4
 80276d2:	bd10      	pop	{r4, pc}

080276d4 <_ZN8touchgfx6CircleD1Ev>:
 80276d4:	4770      	bx	lr

080276d6 <_ZN8touchgfx6CircleD0Ev>:
 80276d6:	b510      	push	{r4, lr}
 80276d8:	2148      	movs	r1, #72	; 0x48
 80276da:	4604      	mov	r4, r0
 80276dc:	f002 fd01 	bl	802a0e2 <_ZdlPvj>
 80276e0:	4620      	mov	r0, r4
 80276e2:	bd10      	pop	{r4, pc}

080276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80276e4:	b508      	push	{r3, lr}
 80276e6:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80276ea:	f7ea fd77 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80276ee:	bd08      	pop	{r3, pc}

080276f0 <_ZN8touchgfx6CircleC1Ev>:
 80276f0:	b510      	push	{r4, lr}
 80276f2:	4604      	mov	r4, r0
 80276f4:	f7ea fc0e 	bl	8011f14 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80276f8:	4b08      	ldr	r3, [pc, #32]	; (802771c <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80276fa:	6023      	str	r3, [r4, #0]
 80276fc:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027700:	2300      	movs	r3, #0
 8027702:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027706:	f24b 4205 	movw	r2, #46085	; 0xb405
 802770a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802770e:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8027712:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027716:	60a3      	str	r3, [r4, #8]
 8027718:	4620      	mov	r0, r4
 802771a:	bd10      	pop	{r4, pc}
 802771c:	0802fd74 	.word	0x0802fd74

08027720 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027724:	428a      	cmp	r2, r1
 8027726:	4680      	mov	r8, r0
 8027728:	4610      	mov	r0, r2
 802772a:	4699      	mov	r9, r3
 802772c:	bfa6      	itte	ge
 802772e:	460a      	movge	r2, r1
 8027730:	4603      	movge	r3, r0
 8027732:	460b      	movlt	r3, r1
 8027734:	1a99      	subs	r1, r3, r2
 8027736:	b085      	sub	sp, #20
 8027738:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802773c:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027740:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027742:	bfa4      	itt	ge
 8027744:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027748:	2200      	movge	r2, #0
 802774a:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802774e:	9300      	str	r3, [sp, #0]
 8027750:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027754:	f102 0b01 	add.w	fp, r2, #1
 8027758:	2c00      	cmp	r4, #0
 802775a:	f040 80af 	bne.w	80278bc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802775e:	4610      	mov	r0, r2
 8027760:	9201      	str	r2, [sp, #4]
 8027762:	f7ea fd3b 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027766:	a903      	add	r1, sp, #12
 8027768:	9003      	str	r0, [sp, #12]
 802776a:	4650      	mov	r0, sl
 802776c:	f7ea fbfe 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027770:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027774:	9a01      	ldr	r2, [sp, #4]
 8027776:	4408      	add	r0, r1
 8027778:	f8d9 1000 	ldr.w	r1, [r9]
 802777c:	4281      	cmp	r1, r0
 802777e:	bfc8      	it	gt
 8027780:	f8c9 0000 	strgt.w	r0, [r9]
 8027784:	6839      	ldr	r1, [r7, #0]
 8027786:	4288      	cmp	r0, r1
 8027788:	bfc8      	it	gt
 802778a:	6038      	strgt	r0, [r7, #0]
 802778c:	4610      	mov	r0, r2
 802778e:	f7ff ffa9 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027792:	a903      	add	r1, sp, #12
 8027794:	9003      	str	r0, [sp, #12]
 8027796:	4650      	mov	r0, sl
 8027798:	f7ea fbe8 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802779c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80277a0:	1a10      	subs	r0, r2, r0
 80277a2:	6832      	ldr	r2, [r6, #0]
 80277a4:	4282      	cmp	r2, r0
 80277a6:	bfc8      	it	gt
 80277a8:	6030      	strgt	r0, [r6, #0]
 80277aa:	682a      	ldr	r2, [r5, #0]
 80277ac:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80277b0:	4290      	cmp	r0, r2
 80277b2:	fb9b f2f1 	sdiv	r2, fp, r1
 80277b6:	fb01 b212 	mls	r2, r1, r2, fp
 80277ba:	eba1 0202 	sub.w	r2, r1, r2
 80277be:	bfc8      	it	gt
 80277c0:	6028      	strgt	r0, [r5, #0]
 80277c2:	fb92 f0f1 	sdiv	r0, r2, r1
 80277c6:	fb01 2210 	mls	r2, r1, r0, r2
 80277ca:	4493      	add	fp, r2
 80277cc:	9b00      	ldr	r3, [sp, #0]
 80277ce:	455b      	cmp	r3, fp
 80277d0:	db2a      	blt.n	8027828 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80277d2:	4658      	mov	r0, fp
 80277d4:	f7ea fd02 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80277d8:	a903      	add	r1, sp, #12
 80277da:	9003      	str	r0, [sp, #12]
 80277dc:	4650      	mov	r0, sl
 80277de:	f7ea fbc5 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277e2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80277e6:	4410      	add	r0, r2
 80277e8:	f8d9 2000 	ldr.w	r2, [r9]
 80277ec:	4282      	cmp	r2, r0
 80277ee:	bfc8      	it	gt
 80277f0:	f8c9 0000 	strgt.w	r0, [r9]
 80277f4:	683a      	ldr	r2, [r7, #0]
 80277f6:	4290      	cmp	r0, r2
 80277f8:	bfc8      	it	gt
 80277fa:	6038      	strgt	r0, [r7, #0]
 80277fc:	4658      	mov	r0, fp
 80277fe:	f7ff ff71 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027802:	a903      	add	r1, sp, #12
 8027804:	9003      	str	r0, [sp, #12]
 8027806:	4650      	mov	r0, sl
 8027808:	f7ea fbb0 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802780c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027810:	1a10      	subs	r0, r2, r0
 8027812:	6832      	ldr	r2, [r6, #0]
 8027814:	4282      	cmp	r2, r0
 8027816:	bfc8      	it	gt
 8027818:	6030      	strgt	r0, [r6, #0]
 802781a:	682a      	ldr	r2, [r5, #0]
 802781c:	4290      	cmp	r0, r2
 802781e:	bfc8      	it	gt
 8027820:	6028      	strgt	r0, [r5, #0]
 8027822:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027826:	e7d1      	b.n	80277cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027828:	9b00      	ldr	r3, [sp, #0]
 802782a:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802782e:	455b      	cmp	r3, fp
 8027830:	dd27      	ble.n	8027882 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8027832:	4618      	mov	r0, r3
 8027834:	f7ea fcd2 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027838:	a903      	add	r1, sp, #12
 802783a:	9003      	str	r0, [sp, #12]
 802783c:	4650      	mov	r0, sl
 802783e:	f7ea fb95 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027842:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027846:	4410      	add	r0, r2
 8027848:	f8d9 2000 	ldr.w	r2, [r9]
 802784c:	4282      	cmp	r2, r0
 802784e:	bfc8      	it	gt
 8027850:	f8c9 0000 	strgt.w	r0, [r9]
 8027854:	683a      	ldr	r2, [r7, #0]
 8027856:	4290      	cmp	r0, r2
 8027858:	bfc8      	it	gt
 802785a:	6038      	strgt	r0, [r7, #0]
 802785c:	9800      	ldr	r0, [sp, #0]
 802785e:	f7ff ff41 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027862:	a903      	add	r1, sp, #12
 8027864:	9003      	str	r0, [sp, #12]
 8027866:	4650      	mov	r0, sl
 8027868:	f7ea fb80 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802786c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027870:	1a10      	subs	r0, r2, r0
 8027872:	6832      	ldr	r2, [r6, #0]
 8027874:	4282      	cmp	r2, r0
 8027876:	bfc8      	it	gt
 8027878:	6030      	strgt	r0, [r6, #0]
 802787a:	682a      	ldr	r2, [r5, #0]
 802787c:	4290      	cmp	r0, r2
 802787e:	bfc8      	it	gt
 8027880:	6028      	strgt	r0, [r5, #0]
 8027882:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027886:	f8d9 1000 	ldr.w	r1, [r9]
 802788a:	4291      	cmp	r1, r2
 802788c:	bfc8      	it	gt
 802788e:	f8c9 2000 	strgt.w	r2, [r9]
 8027892:	683a      	ldr	r2, [r7, #0]
 8027894:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027898:	429a      	cmp	r2, r3
 802789a:	bfb8      	it	lt
 802789c:	603b      	strlt	r3, [r7, #0]
 802789e:	6832      	ldr	r2, [r6, #0]
 80278a0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80278a4:	429a      	cmp	r2, r3
 80278a6:	bfc8      	it	gt
 80278a8:	6033      	strgt	r3, [r6, #0]
 80278aa:	682a      	ldr	r2, [r5, #0]
 80278ac:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80278b0:	429a      	cmp	r2, r3
 80278b2:	da00      	bge.n	80278b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80278b4:	602b      	str	r3, [r5, #0]
 80278b6:	b005      	add	sp, #20
 80278b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80278bc:	2002      	movs	r0, #2
 80278be:	3401      	adds	r4, #1
 80278c0:	fb94 f4f0 	sdiv	r4, r4, r0
 80278c4:	4610      	mov	r0, r2
 80278c6:	9201      	str	r2, [sp, #4]
 80278c8:	f7ea fc88 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80278cc:	a903      	add	r1, sp, #12
 80278ce:	9003      	str	r0, [sp, #12]
 80278d0:	4650      	mov	r0, sl
 80278d2:	f7ea fb4b 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278d6:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80278da:	9a01      	ldr	r2, [sp, #4]
 80278dc:	4408      	add	r0, r1
 80278de:	f8d9 1000 	ldr.w	r1, [r9]
 80278e2:	1b03      	subs	r3, r0, r4
 80278e4:	4299      	cmp	r1, r3
 80278e6:	bfc8      	it	gt
 80278e8:	f8c9 3000 	strgt.w	r3, [r9]
 80278ec:	6839      	ldr	r1, [r7, #0]
 80278ee:	428b      	cmp	r3, r1
 80278f0:	bfc8      	it	gt
 80278f2:	603b      	strgt	r3, [r7, #0]
 80278f4:	f8d9 1000 	ldr.w	r1, [r9]
 80278f8:	4420      	add	r0, r4
 80278fa:	4281      	cmp	r1, r0
 80278fc:	bfc8      	it	gt
 80278fe:	f8c9 0000 	strgt.w	r0, [r9]
 8027902:	6839      	ldr	r1, [r7, #0]
 8027904:	4288      	cmp	r0, r1
 8027906:	bfc8      	it	gt
 8027908:	6038      	strgt	r0, [r7, #0]
 802790a:	4610      	mov	r0, r2
 802790c:	f7ff feea 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027910:	a903      	add	r1, sp, #12
 8027912:	9003      	str	r0, [sp, #12]
 8027914:	4650      	mov	r0, sl
 8027916:	f7ea fb29 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802791a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802791e:	1a10      	subs	r0, r2, r0
 8027920:	6832      	ldr	r2, [r6, #0]
 8027922:	1b01      	subs	r1, r0, r4
 8027924:	428a      	cmp	r2, r1
 8027926:	bfc8      	it	gt
 8027928:	6031      	strgt	r1, [r6, #0]
 802792a:	682a      	ldr	r2, [r5, #0]
 802792c:	4291      	cmp	r1, r2
 802792e:	bfc8      	it	gt
 8027930:	6029      	strgt	r1, [r5, #0]
 8027932:	6832      	ldr	r2, [r6, #0]
 8027934:	4420      	add	r0, r4
 8027936:	4282      	cmp	r2, r0
 8027938:	bfc8      	it	gt
 802793a:	6030      	strgt	r0, [r6, #0]
 802793c:	682a      	ldr	r2, [r5, #0]
 802793e:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027942:	4290      	cmp	r0, r2
 8027944:	fb9b f2f1 	sdiv	r2, fp, r1
 8027948:	fb01 b212 	mls	r2, r1, r2, fp
 802794c:	eba1 0202 	sub.w	r2, r1, r2
 8027950:	bfc8      	it	gt
 8027952:	6028      	strgt	r0, [r5, #0]
 8027954:	fb92 f0f1 	sdiv	r0, r2, r1
 8027958:	fb01 2210 	mls	r2, r1, r0, r2
 802795c:	4493      	add	fp, r2
 802795e:	9b00      	ldr	r3, [sp, #0]
 8027960:	455b      	cmp	r3, fp
 8027962:	db40      	blt.n	80279e6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027964:	4658      	mov	r0, fp
 8027966:	f7ea fc39 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802796a:	a903      	add	r1, sp, #12
 802796c:	9003      	str	r0, [sp, #12]
 802796e:	4650      	mov	r0, sl
 8027970:	f7ea fafc 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027974:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027978:	4410      	add	r0, r2
 802797a:	f8d9 2000 	ldr.w	r2, [r9]
 802797e:	1b01      	subs	r1, r0, r4
 8027980:	428a      	cmp	r2, r1
 8027982:	bfc8      	it	gt
 8027984:	f8c9 1000 	strgt.w	r1, [r9]
 8027988:	683a      	ldr	r2, [r7, #0]
 802798a:	4291      	cmp	r1, r2
 802798c:	bfc8      	it	gt
 802798e:	6039      	strgt	r1, [r7, #0]
 8027990:	f8d9 2000 	ldr.w	r2, [r9]
 8027994:	4420      	add	r0, r4
 8027996:	4282      	cmp	r2, r0
 8027998:	bfc8      	it	gt
 802799a:	f8c9 0000 	strgt.w	r0, [r9]
 802799e:	683a      	ldr	r2, [r7, #0]
 80279a0:	4290      	cmp	r0, r2
 80279a2:	bfc8      	it	gt
 80279a4:	6038      	strgt	r0, [r7, #0]
 80279a6:	4658      	mov	r0, fp
 80279a8:	f7ff fe9c 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80279ac:	a903      	add	r1, sp, #12
 80279ae:	9003      	str	r0, [sp, #12]
 80279b0:	4650      	mov	r0, sl
 80279b2:	f7ea fadb 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279b6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80279ba:	1a10      	subs	r0, r2, r0
 80279bc:	6832      	ldr	r2, [r6, #0]
 80279be:	1b01      	subs	r1, r0, r4
 80279c0:	428a      	cmp	r2, r1
 80279c2:	bfc8      	it	gt
 80279c4:	6031      	strgt	r1, [r6, #0]
 80279c6:	682a      	ldr	r2, [r5, #0]
 80279c8:	4291      	cmp	r1, r2
 80279ca:	bfc8      	it	gt
 80279cc:	6029      	strgt	r1, [r5, #0]
 80279ce:	6832      	ldr	r2, [r6, #0]
 80279d0:	4420      	add	r0, r4
 80279d2:	4282      	cmp	r2, r0
 80279d4:	bfc8      	it	gt
 80279d6:	6030      	strgt	r0, [r6, #0]
 80279d8:	682a      	ldr	r2, [r5, #0]
 80279da:	4290      	cmp	r0, r2
 80279dc:	bfc8      	it	gt
 80279de:	6028      	strgt	r0, [r5, #0]
 80279e0:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80279e4:	e7bb      	b.n	802795e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80279e6:	9b00      	ldr	r3, [sp, #0]
 80279e8:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80279ec:	455b      	cmp	r3, fp
 80279ee:	f77f af62 	ble.w	80278b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80279f2:	4618      	mov	r0, r3
 80279f4:	f7ea fbf2 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80279f8:	a903      	add	r1, sp, #12
 80279fa:	9003      	str	r0, [sp, #12]
 80279fc:	4650      	mov	r0, sl
 80279fe:	f7ea fab5 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a02:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027a06:	4410      	add	r0, r2
 8027a08:	f8d9 2000 	ldr.w	r2, [r9]
 8027a0c:	1b01      	subs	r1, r0, r4
 8027a0e:	428a      	cmp	r2, r1
 8027a10:	bfc8      	it	gt
 8027a12:	f8c9 1000 	strgt.w	r1, [r9]
 8027a16:	683a      	ldr	r2, [r7, #0]
 8027a18:	4291      	cmp	r1, r2
 8027a1a:	bfc8      	it	gt
 8027a1c:	6039      	strgt	r1, [r7, #0]
 8027a1e:	f8d9 2000 	ldr.w	r2, [r9]
 8027a22:	4420      	add	r0, r4
 8027a24:	4282      	cmp	r2, r0
 8027a26:	bfc8      	it	gt
 8027a28:	f8c9 0000 	strgt.w	r0, [r9]
 8027a2c:	683b      	ldr	r3, [r7, #0]
 8027a2e:	4298      	cmp	r0, r3
 8027a30:	bfc8      	it	gt
 8027a32:	6038      	strgt	r0, [r7, #0]
 8027a34:	9800      	ldr	r0, [sp, #0]
 8027a36:	f7ff fe55 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a3a:	a903      	add	r1, sp, #12
 8027a3c:	9003      	str	r0, [sp, #12]
 8027a3e:	4650      	mov	r0, sl
 8027a40:	f7ea fa94 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a44:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027a48:	6832      	ldr	r2, [r6, #0]
 8027a4a:	1a18      	subs	r0, r3, r0
 8027a4c:	1b03      	subs	r3, r0, r4
 8027a4e:	429a      	cmp	r2, r3
 8027a50:	bfc8      	it	gt
 8027a52:	6033      	strgt	r3, [r6, #0]
 8027a54:	682a      	ldr	r2, [r5, #0]
 8027a56:	4293      	cmp	r3, r2
 8027a58:	bfc8      	it	gt
 8027a5a:	602b      	strgt	r3, [r5, #0]
 8027a5c:	6833      	ldr	r3, [r6, #0]
 8027a5e:	4404      	add	r4, r0
 8027a60:	42a3      	cmp	r3, r4
 8027a62:	bfc8      	it	gt
 8027a64:	6034      	strgt	r4, [r6, #0]
 8027a66:	682b      	ldr	r3, [r5, #0]
 8027a68:	429c      	cmp	r4, r3
 8027a6a:	bfc8      	it	gt
 8027a6c:	602c      	strgt	r4, [r5, #0]
 8027a6e:	e722      	b.n	80278b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08027a70 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8027a70:	b530      	push	{r4, r5, lr}
 8027a72:	4604      	mov	r4, r0
 8027a74:	4608      	mov	r0, r1
 8027a76:	4611      	mov	r1, r2
 8027a78:	461a      	mov	r2, r3
 8027a7a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8027a7e:	b089      	sub	sp, #36	; 0x24
 8027a80:	015b      	lsls	r3, r3, #5
 8027a82:	9304      	str	r3, [sp, #16]
 8027a84:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027a88:	2500      	movs	r5, #0
 8027a8a:	015b      	lsls	r3, r3, #5
 8027a8c:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8027a90:	ab07      	add	r3, sp, #28
 8027a92:	9302      	str	r3, [sp, #8]
 8027a94:	ab06      	add	r3, sp, #24
 8027a96:	9301      	str	r3, [sp, #4]
 8027a98:	ab05      	add	r3, sp, #20
 8027a9a:	9300      	str	r3, [sp, #0]
 8027a9c:	ab04      	add	r3, sp, #16
 8027a9e:	9505      	str	r5, [sp, #20]
 8027aa0:	f7ff fe3e 	bl	8027720 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027aa4:	2520      	movs	r5, #32
 8027aa6:	9a04      	ldr	r2, [sp, #16]
 8027aa8:	9805      	ldr	r0, [sp, #20]
 8027aaa:	fb92 f2f5 	sdiv	r2, r2, r5
 8027aae:	fb90 f0f5 	sdiv	r0, r0, r5
 8027ab2:	b292      	uxth	r2, r2
 8027ab4:	3002      	adds	r0, #2
 8027ab6:	1a80      	subs	r0, r0, r2
 8027ab8:	9b06      	ldr	r3, [sp, #24]
 8027aba:	9907      	ldr	r1, [sp, #28]
 8027abc:	fb93 f3f5 	sdiv	r3, r3, r5
 8027ac0:	fb91 f1f5 	sdiv	r1, r1, r5
 8027ac4:	b29b      	uxth	r3, r3
 8027ac6:	3102      	adds	r1, #2
 8027ac8:	1ac9      	subs	r1, r1, r3
 8027aca:	3a01      	subs	r2, #1
 8027acc:	3b01      	subs	r3, #1
 8027ace:	80a0      	strh	r0, [r4, #4]
 8027ad0:	4620      	mov	r0, r4
 8027ad2:	8022      	strh	r2, [r4, #0]
 8027ad4:	8063      	strh	r3, [r4, #2]
 8027ad6:	80e1      	strh	r1, [r4, #6]
 8027ad8:	b009      	add	sp, #36	; 0x24
 8027ada:	bd30      	pop	{r4, r5, pc}

08027adc <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027adc:	b510      	push	{r4, lr}
 8027ade:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8027ae2:	4604      	mov	r4, r0
 8027ae4:	f7ff ffc4 	bl	8027a70 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027ae8:	4620      	mov	r0, r4
 8027aea:	bd10      	pop	{r4, pc}

08027aec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027aee:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8027af2:	4606      	mov	r6, r0
 8027af4:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027af8:	6813      	ldr	r3, [r2, #0]
 8027afa:	42a5      	cmp	r5, r4
 8027afc:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8027b00:	da2b      	bge.n	8027b5a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8027b02:	42a3      	cmp	r3, r4
 8027b04:	dd14      	ble.n	8027b30 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027b06:	b168      	cbz	r0, 8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027b08:	4267      	negs	r7, r4
 8027b0a:	fb97 f2f0 	sdiv	r2, r7, r0
 8027b0e:	fb00 7212 	mls	r2, r0, r2, r7
 8027b12:	1a82      	subs	r2, r0, r2
 8027b14:	fb92 f7f0 	sdiv	r7, r2, r0
 8027b18:	fb00 2017 	mls	r0, r0, r7, r2
 8027b1c:	1a24      	subs	r4, r4, r0
 8027b1e:	42ac      	cmp	r4, r5
 8027b20:	bfb8      	it	lt
 8027b22:	462c      	movlt	r4, r5
 8027b24:	4630      	mov	r0, r6
 8027b26:	4622      	mov	r2, r4
 8027b28:	f7ff ffa2 	bl	8027a70 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027b2c:	4630      	mov	r0, r6
 8027b2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027b30:	42ab      	cmp	r3, r5
 8027b32:	dd0e      	ble.n	8027b52 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027b34:	b168      	cbz	r0, 8027b52 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027b36:	425f      	negs	r7, r3
 8027b38:	fb97 f2f0 	sdiv	r2, r7, r0
 8027b3c:	fb00 7212 	mls	r2, r0, r2, r7
 8027b40:	1a82      	subs	r2, r0, r2
 8027b42:	fb92 f7f0 	sdiv	r7, r2, r0
 8027b46:	fb00 2017 	mls	r0, r0, r7, r2
 8027b4a:	1a1b      	subs	r3, r3, r0
 8027b4c:	42ab      	cmp	r3, r5
 8027b4e:	bfb8      	it	lt
 8027b50:	462b      	movlt	r3, r5
 8027b52:	4622      	mov	r2, r4
 8027b54:	461c      	mov	r4, r3
 8027b56:	4613      	mov	r3, r2
 8027b58:	e7e4      	b.n	8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027b5a:	42a3      	cmp	r3, r4
 8027b5c:	da10      	bge.n	8027b80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8027b5e:	b148      	cbz	r0, 8027b74 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8027b60:	fb94 f2f0 	sdiv	r2, r4, r0
 8027b64:	fb00 4212 	mls	r2, r0, r2, r4
 8027b68:	1a82      	subs	r2, r0, r2
 8027b6a:	fb92 f7f0 	sdiv	r7, r2, r0
 8027b6e:	fb00 2017 	mls	r0, r0, r7, r2
 8027b72:	4404      	add	r4, r0
 8027b74:	42a5      	cmp	r5, r4
 8027b76:	bfa8      	it	ge
 8027b78:	4625      	movge	r5, r4
 8027b7a:	461c      	mov	r4, r3
 8027b7c:	462b      	mov	r3, r5
 8027b7e:	e7d1      	b.n	8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027b80:	42ab      	cmp	r3, r5
 8027b82:	dacf      	bge.n	8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027b84:	2800      	cmp	r0, #0
 8027b86:	d0cd      	beq.n	8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027b88:	fb93 f2f0 	sdiv	r2, r3, r0
 8027b8c:	fb00 3212 	mls	r2, r0, r2, r3
 8027b90:	1a82      	subs	r2, r0, r2
 8027b92:	fb92 f7f0 	sdiv	r7, r2, r0
 8027b96:	fb00 2017 	mls	r0, r0, r7, r2
 8027b9a:	4403      	add	r3, r0
 8027b9c:	42ab      	cmp	r3, r5
 8027b9e:	bfa8      	it	ge
 8027ba0:	462b      	movge	r3, r5
 8027ba2:	e7bf      	b.n	8027b24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027ba4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027ba8:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027bac:	42ae      	cmp	r6, r5
 8027bae:	bfa2      	ittt	ge
 8027bb0:	4633      	movge	r3, r6
 8027bb2:	462e      	movge	r6, r5
 8027bb4:	461d      	movge	r5, r3
 8027bb6:	1bab      	subs	r3, r5, r6
 8027bb8:	468b      	mov	fp, r1
 8027bba:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027bbc:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8027bc0:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027bc4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027bc8:	f04f 0220 	mov.w	r2, #32
 8027bcc:	b0ab      	sub	sp, #172	; 0xac
 8027bce:	4604      	mov	r4, r0
 8027bd0:	bfa4      	itt	ge
 8027bd2:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027bd6:	2600      	movge	r6, #0
 8027bd8:	fb99 f9f2 	sdiv	r9, r9, r2
 8027bdc:	fb9a faf2 	sdiv	sl, sl, r2
 8027be0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8027be2:	2900      	cmp	r1, #0
 8027be4:	f000 80f5 	beq.w	8027dd2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027be8:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027bec:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8027bf0:	eba9 0700 	sub.w	r7, r9, r0
 8027bf4:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027bf8:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027bfc:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8027c00:	ebaa 0802 	sub.w	r8, sl, r2
 8027c04:	4407      	add	r7, r0
 8027c06:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027c0a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8027c0e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8027c12:	b23f      	sxth	r7, r7
 8027c14:	4490      	add	r8, r2
 8027c16:	eba9 0707 	sub.w	r7, r9, r7
 8027c1a:	fa0f f888 	sxth.w	r8, r8
 8027c1e:	ebaa 0808 	sub.w	r8, sl, r8
 8027c22:	2f00      	cmp	r7, #0
 8027c24:	bfb8      	it	lt
 8027c26:	427f      	neglt	r7, r7
 8027c28:	f1b8 0f00 	cmp.w	r8, #0
 8027c2c:	bfb8      	it	lt
 8027c2e:	f1c8 0800 	rsblt	r8, r8, #0
 8027c32:	45bc      	cmp	ip, r7
 8027c34:	bfcc      	ite	gt
 8027c36:	f10c 0701 	addgt.w	r7, ip, #1
 8027c3a:	3701      	addle	r7, #1
 8027c3c:	4540      	cmp	r0, r8
 8027c3e:	bfc8      	it	gt
 8027c40:	f100 0801 	addgt.w	r8, r0, #1
 8027c44:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027c48:	f100 0001 	add.w	r0, r0, #1
 8027c4c:	ea4f 0060 	mov.w	r0, r0, asr #1
 8027c50:	f04f 0202 	mov.w	r2, #2
 8027c54:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027c58:	fb91 f1f2 	sdiv	r1, r1, r2
 8027c5c:	eba3 0301 	sub.w	r3, r3, r1
 8027c60:	bfd8      	it	le
 8027c62:	f108 0801 	addle.w	r8, r8, #1
 8027c66:	9201      	str	r2, [sp, #4]
 8027c68:	930d      	str	r3, [sp, #52]	; 0x34
 8027c6a:	f7ea fa97 	bl	801219c <_ZN8touchgfx7CWRUtil4sineEi>
 8027c6e:	a92a      	add	r1, sp, #168	; 0xa8
 8027c70:	fb08 f808 	mul.w	r8, r8, r8
 8027c74:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027c78:	a80d      	add	r0, sp, #52	; 0x34
 8027c7a:	f7ea f977 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c7e:	fb07 8707 	mla	r7, r7, r7, r8
 8027c82:	f04f 0c20 	mov.w	ip, #32
 8027c86:	fb90 f0fc 	sdiv	r0, r0, ip
 8027c8a:	4340      	muls	r0, r0
 8027c8c:	4287      	cmp	r7, r0
 8027c8e:	9a01      	ldr	r2, [sp, #4]
 8027c90:	da04      	bge.n	8027c9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8027c92:	2401      	movs	r4, #1
 8027c94:	4620      	mov	r0, r4
 8027c96:	b02b      	add	sp, #172	; 0xac
 8027c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c9c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8027c9e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8027ca0:	fb91 f3f2 	sdiv	r3, r1, r2
 8027ca4:	4403      	add	r3, r0
 8027ca6:	fb93 f3fc 	sdiv	r3, r3, ip
 8027caa:	f9bb 1000 	ldrsh.w	r1, [fp]
 8027cae:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8027cb2:	440a      	add	r2, r1
 8027cb4:	b212      	sxth	r2, r2
 8027cb6:	454a      	cmp	r2, r9
 8027cb8:	bfa8      	it	ge
 8027cba:	464a      	movge	r2, r9
 8027cbc:	428a      	cmp	r2, r1
 8027cbe:	bfac      	ite	ge
 8027cc0:	eba9 0902 	subge.w	r9, r9, r2
 8027cc4:	eba9 0901 	sublt.w	r9, r9, r1
 8027cc8:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027ccc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8027cd0:	440a      	add	r2, r1
 8027cd2:	b212      	sxth	r2, r2
 8027cd4:	4552      	cmp	r2, sl
 8027cd6:	bfa8      	it	ge
 8027cd8:	4652      	movge	r2, sl
 8027cda:	428a      	cmp	r2, r1
 8027cdc:	bfac      	ite	ge
 8027cde:	ebaa 0a02 	subge.w	sl, sl, r2
 8027ce2:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027ce6:	3301      	adds	r3, #1
 8027ce8:	fb0a fa0a 	mul.w	sl, sl, sl
 8027cec:	fb09 a909 	mla	r9, r9, r9, sl
 8027cf0:	435b      	muls	r3, r3
 8027cf2:	4599      	cmp	r9, r3
 8027cf4:	dccd      	bgt.n	8027c92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027cf6:	465a      	mov	r2, fp
 8027cf8:	4621      	mov	r1, r4
 8027cfa:	a80e      	add	r0, sp, #56	; 0x38
 8027cfc:	f7ff faae 	bl	802725c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027d00:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027d02:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027d04:	9209      	str	r2, [sp, #36]	; 0x24
 8027d06:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027d0a:	930a      	str	r3, [sp, #40]	; 0x28
 8027d0c:	dd07      	ble.n	8027d1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027d0e:	2102      	movs	r1, #2
 8027d10:	fb93 f3f1 	sdiv	r3, r3, r1
 8027d14:	4413      	add	r3, r2
 8027d16:	930a      	str	r3, [sp, #40]	; 0x28
 8027d18:	fb93 f3f1 	sdiv	r3, r3, r1
 8027d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8027d1e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027d22:	4630      	mov	r0, r6
 8027d24:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027d28:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d2a:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027d2e:	f7ea fa55 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d32:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027d36:	f04f 0a02 	mov.w	sl, #2
 8027d3a:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027d3e:	a80b      	add	r0, sp, #44	; 0x2c
 8027d40:	4649      	mov	r1, r9
 8027d42:	f7ea f913 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d48:	fb90 f0fa 	sdiv	r0, r0, sl
 8027d4c:	eb00 0b03 	add.w	fp, r0, r3
 8027d50:	4630      	mov	r0, r6
 8027d52:	f7ff fcc7 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d56:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027d5a:	017f      	lsls	r7, r7, #5
 8027d5c:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027d60:	a80b      	add	r0, sp, #44	; 0x2c
 8027d62:	4641      	mov	r1, r8
 8027d64:	f7ea f902 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d68:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d6a:	fb90 f0fa 	sdiv	r0, r0, sl
 8027d6e:	4659      	mov	r1, fp
 8027d70:	1a12      	subs	r2, r2, r0
 8027d72:	a80e      	add	r0, sp, #56	; 0x38
 8027d74:	f7ff fbf2 	bl	802755c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027d78:	f106 0a20 	add.w	sl, r6, #32
 8027d7c:	bb67      	cbnz	r7, 8027dd8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027d7e:	46b3      	mov	fp, r6
 8027d80:	45aa      	cmp	sl, r5
 8027d82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027d84:	dc33      	bgt.n	8027dee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027d86:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027d88:	4650      	mov	r0, sl
 8027d8a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027d8e:	920b      	str	r2, [sp, #44]	; 0x2c
 8027d90:	f7ea fa24 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d94:	4641      	mov	r1, r8
 8027d96:	900c      	str	r0, [sp, #48]	; 0x30
 8027d98:	a80b      	add	r0, sp, #44	; 0x2c
 8027d9a:	f7ea f8e7 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d9e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027da0:	2302      	movs	r3, #2
 8027da2:	fb90 f0f3 	sdiv	r0, r0, r3
 8027da6:	eb00 0b02 	add.w	fp, r0, r2
 8027daa:	4650      	mov	r0, sl
 8027dac:	f7ff fc9a 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027db0:	4649      	mov	r1, r9
 8027db2:	900d      	str	r0, [sp, #52]	; 0x34
 8027db4:	a80b      	add	r0, sp, #44	; 0x2c
 8027db6:	f7ea f8d9 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dba:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027dbc:	2302      	movs	r3, #2
 8027dbe:	4659      	mov	r1, fp
 8027dc0:	fb90 f0f3 	sdiv	r0, r0, r3
 8027dc4:	1a12      	subs	r2, r2, r0
 8027dc6:	a80e      	add	r0, sp, #56	; 0x38
 8027dc8:	46d3      	mov	fp, sl
 8027dca:	f7ff fc14 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027dce:	44ba      	add	sl, r7
 8027dd0:	e7d6      	b.n	8027d80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027dd2:	fb93 f3f2 	sdiv	r3, r3, r2
 8027dd6:	e768      	b.n	8027caa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027dd8:	fb9a f2f7 	sdiv	r2, sl, r7
 8027ddc:	fb07 a212 	mls	r2, r7, r2, sl
 8027de0:	1aba      	subs	r2, r7, r2
 8027de2:	fb92 f1f7 	sdiv	r1, r2, r7
 8027de6:	fb07 2211 	mls	r2, r7, r1, r2
 8027dea:	4492      	add	sl, r2
 8027dec:	e7c7      	b.n	8027d7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027dee:	45ab      	cmp	fp, r5
 8027df0:	da23      	bge.n	8027e3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027df4:	4628      	mov	r0, r5
 8027df6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027dfa:	920b      	str	r2, [sp, #44]	; 0x2c
 8027dfc:	f7ea f9ee 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e00:	4641      	mov	r1, r8
 8027e02:	900c      	str	r0, [sp, #48]	; 0x30
 8027e04:	a80b      	add	r0, sp, #44	; 0x2c
 8027e06:	f7ea f8b1 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e0a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027e0c:	f04f 0a02 	mov.w	sl, #2
 8027e10:	fb90 f0fa 	sdiv	r0, r0, sl
 8027e14:	4403      	add	r3, r0
 8027e16:	4628      	mov	r0, r5
 8027e18:	9301      	str	r3, [sp, #4]
 8027e1a:	f7ff fc63 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e1e:	4649      	mov	r1, r9
 8027e20:	900d      	str	r0, [sp, #52]	; 0x34
 8027e22:	a80b      	add	r0, sp, #44	; 0x2c
 8027e24:	f7ea f8a2 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e28:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027e2a:	9b01      	ldr	r3, [sp, #4]
 8027e2c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027e30:	4619      	mov	r1, r3
 8027e32:	1a12      	subs	r2, r2, r0
 8027e34:	a80e      	add	r0, sp, #56	; 0x38
 8027e36:	f7ff fbde 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027e3c:	b99b      	cbnz	r3, 8027e66 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027e3e:	1bad      	subs	r5, r5, r6
 8027e40:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027e44:	da04      	bge.n	8027e50 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027e46:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027e4a:	a80e      	add	r0, sp, #56	; 0x38
 8027e4c:	f7ff fbd3 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e50:	21ff      	movs	r1, #255	; 0xff
 8027e52:	a80e      	add	r0, sp, #56	; 0x38
 8027e54:	f7ff fabe 	bl	80273d4 <_ZN8touchgfx6Canvas6renderEh>
 8027e58:	4604      	mov	r4, r0
 8027e5a:	4b8a      	ldr	r3, [pc, #552]	; (8028084 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027e5c:	930e      	str	r3, [sp, #56]	; 0x38
 8027e5e:	a816      	add	r0, sp, #88	; 0x58
 8027e60:	f7eb fcf0 	bl	8013844 <_ZN8touchgfx7OutlineD1Ev>
 8027e64:	e716      	b.n	8027c94 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027e66:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027e6a:	429a      	cmp	r2, r3
 8027e6c:	f0c0 8107 	bcc.w	802807e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027e70:	1bab      	subs	r3, r5, r6
 8027e72:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027e76:	9301      	str	r3, [sp, #4]
 8027e78:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027e7c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027e80:	da43      	bge.n	8027f0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027e82:	4628      	mov	r0, r5
 8027e84:	f7ea f9aa 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e88:	4649      	mov	r1, r9
 8027e8a:	900d      	str	r0, [sp, #52]	; 0x34
 8027e8c:	a809      	add	r0, sp, #36	; 0x24
 8027e8e:	f7ea f86d 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e92:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027e94:	18c3      	adds	r3, r0, r3
 8027e96:	4628      	mov	r0, r5
 8027e98:	9303      	str	r3, [sp, #12]
 8027e9a:	f7ff fc23 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e9e:	4649      	mov	r1, r9
 8027ea0:	900d      	str	r0, [sp, #52]	; 0x34
 8027ea2:	a809      	add	r0, sp, #36	; 0x24
 8027ea4:	f7ea f862 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ea8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027eaa:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027eae:	1a1b      	subs	r3, r3, r0
 8027eb0:	9302      	str	r3, [sp, #8]
 8027eb2:	9204      	str	r2, [sp, #16]
 8027eb4:	eb0a 0305 	add.w	r3, sl, r5
 8027eb8:	9a04      	ldr	r2, [sp, #16]
 8027eba:	4293      	cmp	r3, r2
 8027ebc:	da25      	bge.n	8027f0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027ebe:	4618      	mov	r0, r3
 8027ec0:	9306      	str	r3, [sp, #24]
 8027ec2:	f7ea f98b 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ec6:	4649      	mov	r1, r9
 8027ec8:	900d      	str	r0, [sp, #52]	; 0x34
 8027eca:	a80a      	add	r0, sp, #40	; 0x28
 8027ecc:	f7ea f84e 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ed0:	9b03      	ldr	r3, [sp, #12]
 8027ed2:	2202      	movs	r2, #2
 8027ed4:	fb90 f0f2 	sdiv	r0, r0, r2
 8027ed8:	18c3      	adds	r3, r0, r3
 8027eda:	9305      	str	r3, [sp, #20]
 8027edc:	9b06      	ldr	r3, [sp, #24]
 8027ede:	9207      	str	r2, [sp, #28]
 8027ee0:	4618      	mov	r0, r3
 8027ee2:	f7ff fbff 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ee6:	a92a      	add	r1, sp, #168	; 0xa8
 8027ee8:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027eec:	a80a      	add	r0, sp, #40	; 0x28
 8027eee:	f7ea f83d 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ef2:	9b02      	ldr	r3, [sp, #8]
 8027ef4:	9a07      	ldr	r2, [sp, #28]
 8027ef6:	9905      	ldr	r1, [sp, #20]
 8027ef8:	fb90 f2f2 	sdiv	r2, r0, r2
 8027efc:	a80e      	add	r0, sp, #56	; 0x38
 8027efe:	1a9a      	subs	r2, r3, r2
 8027f00:	f7ff fb79 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027f04:	9b06      	ldr	r3, [sp, #24]
 8027f06:	4453      	add	r3, sl
 8027f08:	e7d6      	b.n	8027eb8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027f0a:	45ab      	cmp	fp, r5
 8027f0c:	da25      	bge.n	8027f5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027f0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027f12:	4628      	mov	r0, r5
 8027f14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027f18:	930b      	str	r3, [sp, #44]	; 0x2c
 8027f1a:	f7ea f95f 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027f1e:	4641      	mov	r1, r8
 8027f20:	900c      	str	r0, [sp, #48]	; 0x30
 8027f22:	a80b      	add	r0, sp, #44	; 0x2c
 8027f24:	f7ea f822 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027f2a:	2202      	movs	r2, #2
 8027f2c:	fb90 f0f2 	sdiv	r0, r0, r2
 8027f30:	eb00 0903 	add.w	r9, r0, r3
 8027f34:	4628      	mov	r0, r5
 8027f36:	9202      	str	r2, [sp, #8]
 8027f38:	f7ff fbd4 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f3c:	a92a      	add	r1, sp, #168	; 0xa8
 8027f3e:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027f42:	a80b      	add	r0, sp, #44	; 0x2c
 8027f44:	f7ea f812 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f48:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027f4a:	9a02      	ldr	r2, [sp, #8]
 8027f4c:	fb90 f2f2 	sdiv	r2, r0, r2
 8027f50:	4649      	mov	r1, r9
 8027f52:	1a9a      	subs	r2, r3, r2
 8027f54:	a80e      	add	r0, sp, #56	; 0x38
 8027f56:	f7ff fb4e 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027f5a:	46d9      	mov	r9, fp
 8027f5c:	2502      	movs	r5, #2
 8027f5e:	45b1      	cmp	r9, r6
 8027f60:	db25      	blt.n	8027fae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027f62:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027f66:	4648      	mov	r0, r9
 8027f68:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027f6c:	930b      	str	r3, [sp, #44]	; 0x2c
 8027f6e:	f7ea f935 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027f72:	4641      	mov	r1, r8
 8027f74:	900c      	str	r0, [sp, #48]	; 0x30
 8027f76:	a80b      	add	r0, sp, #44	; 0x2c
 8027f78:	f7e9 fff8 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027f7e:	fb90 f0f5 	sdiv	r0, r0, r5
 8027f82:	eb00 0b03 	add.w	fp, r0, r3
 8027f86:	4648      	mov	r0, r9
 8027f88:	f7ff fbac 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f8c:	a90d      	add	r1, sp, #52	; 0x34
 8027f8e:	900d      	str	r0, [sp, #52]	; 0x34
 8027f90:	a80b      	add	r0, sp, #44	; 0x2c
 8027f92:	f7e9 ffeb 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f96:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027f98:	fb90 f0f5 	sdiv	r0, r0, r5
 8027f9c:	4659      	mov	r1, fp
 8027f9e:	1a12      	subs	r2, r2, r0
 8027fa0:	a80e      	add	r0, sp, #56	; 0x38
 8027fa2:	46cb      	mov	fp, r9
 8027fa4:	f7ff fb27 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027fa8:	eba9 0907 	sub.w	r9, r9, r7
 8027fac:	e7d7      	b.n	8027f5e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027fae:	455e      	cmp	r6, fp
 8027fb0:	da22      	bge.n	8027ff8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027fb2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027fb6:	4630      	mov	r0, r6
 8027fb8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027fbc:	930b      	str	r3, [sp, #44]	; 0x2c
 8027fbe:	f7ea f90d 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027fc2:	4641      	mov	r1, r8
 8027fc4:	900c      	str	r0, [sp, #48]	; 0x30
 8027fc6:	a80b      	add	r0, sp, #44	; 0x2c
 8027fc8:	f7e9 ffd0 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027fcc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027fce:	2502      	movs	r5, #2
 8027fd0:	fb90 f0f5 	sdiv	r0, r0, r5
 8027fd4:	4407      	add	r7, r0
 8027fd6:	4630      	mov	r0, r6
 8027fd8:	f7ff fb84 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027fdc:	a92a      	add	r1, sp, #168	; 0xa8
 8027fde:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027fe2:	a80b      	add	r0, sp, #44	; 0x2c
 8027fe4:	f7e9 ffc2 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027fe8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027fea:	fb90 f0f5 	sdiv	r0, r0, r5
 8027fee:	4639      	mov	r1, r7
 8027ff0:	1a12      	subs	r2, r2, r0
 8027ff2:	a80e      	add	r0, sp, #56	; 0x38
 8027ff4:	f7ff faff 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ff8:	9b01      	ldr	r3, [sp, #4]
 8027ffa:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027ffe:	f6bf af27 	bge.w	8027e50 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028002:	4630      	mov	r0, r6
 8028004:	f7ea f8ea 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028008:	ad2a      	add	r5, sp, #168	; 0xa8
 802800a:	f04f 0b02 	mov.w	fp, #2
 802800e:	f845 0d74 	str.w	r0, [r5, #-116]!
 8028012:	a809      	add	r0, sp, #36	; 0x24
 8028014:	4629      	mov	r1, r5
 8028016:	f7e9 ffa9 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802801a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802801c:	eb00 0903 	add.w	r9, r0, r3
 8028020:	4630      	mov	r0, r6
 8028022:	f7ff fb5f 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028026:	4629      	mov	r1, r5
 8028028:	900d      	str	r0, [sp, #52]	; 0x34
 802802a:	a809      	add	r0, sp, #36	; 0x24
 802802c:	f7e9 ff9e 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028030:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028032:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8028036:	eba3 0800 	sub.w	r8, r3, r0
 802803a:	4454      	add	r4, sl
 802803c:	42a6      	cmp	r6, r4
 802803e:	f77f af07 	ble.w	8027e50 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028042:	4620      	mov	r0, r4
 8028044:	f7ea f8ca 	bl	80121dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028048:	4629      	mov	r1, r5
 802804a:	900d      	str	r0, [sp, #52]	; 0x34
 802804c:	a80a      	add	r0, sp, #40	; 0x28
 802804e:	f7e9 ff8d 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028052:	fb90 f0fb 	sdiv	r0, r0, fp
 8028056:	eb00 0709 	add.w	r7, r0, r9
 802805a:	4620      	mov	r0, r4
 802805c:	f7ff fb42 	bl	80276e4 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028060:	a90c      	add	r1, sp, #48	; 0x30
 8028062:	900c      	str	r0, [sp, #48]	; 0x30
 8028064:	a80a      	add	r0, sp, #40	; 0x28
 8028066:	f7e9 ff81 	bl	8011f6c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802806a:	4639      	mov	r1, r7
 802806c:	fb90 f2fb 	sdiv	r2, r0, fp
 8028070:	a80e      	add	r0, sp, #56	; 0x38
 8028072:	eba8 0202 	sub.w	r2, r8, r2
 8028076:	f7ff fabe 	bl	80275f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802807a:	4454      	add	r4, sl
 802807c:	e7de      	b.n	802803c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802807e:	2400      	movs	r4, #0
 8028080:	e6eb      	b.n	8027e5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028082:	bf00      	nop
 8028084:	0802fd60 	.word	0x0802fd60

08028088 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028088:	b570      	push	{r4, r5, r6, lr}
 802808a:	790b      	ldrb	r3, [r1, #4]
 802808c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028090:	2b00      	cmp	r3, #0
 8028092:	bf0c      	ite	eq
 8028094:	2301      	moveq	r3, #1
 8028096:	2300      	movne	r3, #0
 8028098:	4604      	mov	r4, r0
 802809a:	460e      	mov	r6, r1
 802809c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80280a0:	d109      	bne.n	80280b6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80280a2:	b14d      	cbz	r5, 80280b8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80280a4:	7933      	ldrb	r3, [r6, #4]
 80280a6:	2b01      	cmp	r3, #1
 80280a8:	d10c      	bne.n	80280c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80280aa:	6823      	ldr	r3, [r4, #0]
 80280ac:	4620      	mov	r0, r4
 80280ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80280b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80280b4:	4718      	bx	r3
 80280b6:	b12d      	cbz	r5, 80280c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80280b8:	6823      	ldr	r3, [r4, #0]
 80280ba:	4620      	mov	r0, r4
 80280bc:	695b      	ldr	r3, [r3, #20]
 80280be:	4798      	blx	r3
 80280c0:	2d00      	cmp	r5, #0
 80280c2:	d1ef      	bne.n	80280a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80280c4:	bd70      	pop	{r4, r5, r6, pc}

080280c6 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80280c6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80280ca:	4770      	bx	lr

080280cc <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80280cc:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80280d0:	4770      	bx	lr

080280d2 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80280d2:	6802      	ldr	r2, [r0, #0]
 80280d4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80280d8:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80280da:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80280de:	4710      	bx	r2

080280e0 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80280e0:	6802      	ldr	r2, [r0, #0]
 80280e2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80280e6:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80280e8:	eef0 0a40 	vmov.f32	s1, s0
 80280ec:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80280f0:	4710      	bx	r2

080280f2 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80280f2:	6802      	ldr	r2, [r0, #0]
 80280f4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80280f8:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80280fa:	eeb0 1a40 	vmov.f32	s2, s0
 80280fe:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028102:	4710      	bx	r2

08028104 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028104:	6802      	ldr	r2, [r0, #0]
 8028106:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802810a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802810c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028110:	4710      	bx	r2

08028112 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028112:	6802      	ldr	r2, [r0, #0]
 8028114:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028118:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802811a:	eef0 0a40 	vmov.f32	s1, s0
 802811e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028122:	4710      	bx	r2

08028124 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028124:	6802      	ldr	r2, [r0, #0]
 8028126:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802812a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802812c:	eeb0 1a40 	vmov.f32	s2, s0
 8028130:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028134:	4710      	bx	r2

08028136 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028136:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802813a:	4770      	bx	lr

0802813c <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802813c:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028140:	4770      	bx	lr

08028142 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8028142:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8028146:	4770      	bx	lr

08028148 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028148:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802814c:	4770      	bx	lr

0802814e <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802814e:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8028152:	4770      	bx	lr

08028154 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8028154:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028158:	4770      	bx	lr

0802815a <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802815a:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802815e:	4770      	bx	lr

08028160 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028160:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028164:	4770      	bx	lr

08028166 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028166:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802816a:	4770      	bx	lr

0802816c <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802816c:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028170:	4770      	bx	lr

08028172 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028172:	ee07 2a90 	vmov	s15, r2
 8028176:	6803      	ldr	r3, [r0, #0]
 8028178:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802817c:	ee07 1a90 	vmov	s15, r1
 8028180:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028184:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028188:	4718      	bx	r3

0802818a <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802818a:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802818e:	4770      	bx	lr

08028190 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028190:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028194:	4770      	bx	lr

08028196 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028196:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802819a:	4770      	bx	lr

0802819c <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802819c:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 80281a0:	4770      	bx	lr

080281a2 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80281a2:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 80281a6:	4770      	bx	lr

080281a8 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 80281a8:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 80281ac:	4770      	bx	lr

080281ae <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 80281ae:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 80281b2:	4770      	bx	lr

080281b4 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 80281b4:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 80281b8:	4770      	bx	lr

080281ba <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 80281ba:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80281be:	4770      	bx	lr

080281c0 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80281c0:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 80281c4:	4770      	bx	lr

080281c6 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 80281c6:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 80281ca:	4770      	bx	lr

080281cc <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 80281cc:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 80281d0:	4770      	bx	lr

080281d2 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 80281d2:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80281d6:	4770      	bx	lr

080281d8 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80281d8:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80281dc:	4770      	bx	lr

080281de <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80281de:	b510      	push	{r4, lr}
 80281e0:	ed2d 8b04 	vpush	{d8-d9}
 80281e4:	6803      	ldr	r3, [r0, #0]
 80281e6:	4604      	mov	r4, r0
 80281e8:	699b      	ldr	r3, [r3, #24]
 80281ea:	eeb0 8a40 	vmov.f32	s16, s0
 80281ee:	eef0 8a60 	vmov.f32	s17, s1
 80281f2:	eeb0 9a41 	vmov.f32	s18, s2
 80281f6:	4798      	blx	r3
 80281f8:	6823      	ldr	r3, [r4, #0]
 80281fa:	4620      	mov	r0, r4
 80281fc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80281fe:	eeb0 1a49 	vmov.f32	s2, s18
 8028202:	eef0 0a68 	vmov.f32	s1, s17
 8028206:	eeb0 0a48 	vmov.f32	s0, s16
 802820a:	4798      	blx	r3
 802820c:	ecbd 8b04 	vpop	{d8-d9}
 8028210:	6823      	ldr	r3, [r4, #0]
 8028212:	4620      	mov	r0, r4
 8028214:	699b      	ldr	r3, [r3, #24]
 8028216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802821a:	4718      	bx	r3

0802821c <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802821c:	b510      	push	{r4, lr}
 802821e:	ed2d 8b02 	vpush	{d8}
 8028222:	6803      	ldr	r3, [r0, #0]
 8028224:	4604      	mov	r4, r0
 8028226:	699b      	ldr	r3, [r3, #24]
 8028228:	eeb0 8a40 	vmov.f32	s16, s0
 802822c:	4798      	blx	r3
 802822e:	6823      	ldr	r3, [r4, #0]
 8028230:	4620      	mov	r0, r4
 8028232:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028236:	eeb0 0a48 	vmov.f32	s0, s16
 802823a:	4798      	blx	r3
 802823c:	ecbd 8b02 	vpop	{d8}
 8028240:	6823      	ldr	r3, [r4, #0]
 8028242:	4620      	mov	r0, r4
 8028244:	699b      	ldr	r3, [r3, #24]
 8028246:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802824a:	4718      	bx	r3

0802824c <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802824c:	2200      	movs	r2, #0
 802824e:	8002      	strh	r2, [r0, #0]
 8028250:	8042      	strh	r2, [r0, #2]
 8028252:	8082      	strh	r2, [r0, #4]
 8028254:	80c2      	strh	r2, [r0, #6]
 8028256:	4770      	bx	lr

08028258 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028258:	4770      	bx	lr

0802825a <_ZN8touchgfx13TextureMapperD0Ev>:
 802825a:	b510      	push	{r4, lr}
 802825c:	2190      	movs	r1, #144	; 0x90
 802825e:	4604      	mov	r4, r0
 8028260:	f001 ff3f 	bl	802a0e2 <_ZdlPvj>
 8028264:	4620      	mov	r0, r4
 8028266:	bd10      	pop	{r4, pc}

08028268 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028268:	b538      	push	{r3, r4, r5, lr}
 802826a:	2500      	movs	r5, #0
 802826c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028270:	2301      	movs	r3, #1
 8028272:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028276:	4b1f      	ldr	r3, [pc, #124]	; (80282f4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028278:	8085      	strh	r5, [r0, #4]
 802827a:	80c5      	strh	r5, [r0, #6]
 802827c:	8105      	strh	r5, [r0, #8]
 802827e:	8145      	strh	r5, [r0, #10]
 8028280:	8185      	strh	r5, [r0, #12]
 8028282:	81c5      	strh	r5, [r0, #14]
 8028284:	8205      	strh	r5, [r0, #16]
 8028286:	8245      	strh	r5, [r0, #18]
 8028288:	61c5      	str	r5, [r0, #28]
 802828a:	8405      	strh	r5, [r0, #32]
 802828c:	8445      	strh	r5, [r0, #34]	; 0x22
 802828e:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028292:	6003      	str	r3, [r0, #0]
 8028294:	880b      	ldrh	r3, [r1, #0]
 8028296:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028298:	23ff      	movs	r3, #255	; 0xff
 802829a:	4604      	mov	r4, r0
 802829c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80282a0:	f7eb f961 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80282a4:	4b14      	ldr	r3, [pc, #80]	; (80282f8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 80282a6:	6023      	str	r3, [r4, #0]
 80282a8:	2300      	movs	r3, #0
 80282aa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80282ae:	4913      	ldr	r1, [pc, #76]	; (80282fc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80282b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80282b2:	6323      	str	r3, [r4, #48]	; 0x30
 80282b4:	6363      	str	r3, [r4, #52]	; 0x34
 80282b6:	63a3      	str	r3, [r4, #56]	; 0x38
 80282b8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80282ba:	6463      	str	r3, [r4, #68]	; 0x44
 80282bc:	64a3      	str	r3, [r4, #72]	; 0x48
 80282be:	6523      	str	r3, [r4, #80]	; 0x50
 80282c0:	6563      	str	r3, [r4, #84]	; 0x54
 80282c2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80282c4:	6623      	str	r3, [r4, #96]	; 0x60
 80282c6:	66a3      	str	r3, [r4, #104]	; 0x68
 80282c8:	66e3      	str	r3, [r4, #108]	; 0x6c
 80282ca:	6763      	str	r3, [r4, #116]	; 0x74
 80282cc:	67a3      	str	r3, [r4, #120]	; 0x78
 80282ce:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80282d2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80282d6:	230c      	movs	r3, #12
 80282d8:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80282dc:	6422      	str	r2, [r4, #64]	; 0x40
 80282de:	64e1      	str	r1, [r4, #76]	; 0x4c
 80282e0:	65a1      	str	r1, [r4, #88]	; 0x58
 80282e2:	6662      	str	r2, [r4, #100]	; 0x64
 80282e4:	6722      	str	r2, [r4, #112]	; 0x70
 80282e6:	67e2      	str	r2, [r4, #124]	; 0x7c
 80282e8:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80282ec:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80282f0:	4620      	mov	r0, r4
 80282f2:	bd38      	pop	{r3, r4, r5, pc}
 80282f4:	0802f808 	.word	0x0802f808
 80282f8:	0802fdec 	.word	0x0802fdec
 80282fc:	447a0000 	.word	0x447a0000

08028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028300:	b570      	push	{r4, r5, r6, lr}
 8028302:	ed2d 8b04 	vpush	{d8-d9}
 8028306:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802830a:	add0      	add	r5, sp, #832	; 0x340
 802830c:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802830e:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8028312:	4604      	mov	r4, r0
 8028314:	4628      	mov	r0, r5
 8028316:	f7f1 fa7f 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802831a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802831c:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028320:	4606      	mov	r6, r0
 8028322:	4628      	mov	r0, r5
 8028324:	f7f1 faac 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028328:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802832c:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028330:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8028332:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8028336:	9312      	str	r3, [sp, #72]	; 0x48
 8028338:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802833c:	1c72      	adds	r2, r6, #1
 802833e:	3001      	adds	r0, #1
 8028340:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8028344:	ee07 2a90 	vmov	s15, r2
 8028348:	ee06 0a90 	vmov	s13, r0
 802834c:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028350:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028354:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028358:	ee77 7a86 	vadd.f32	s15, s15, s12
 802835c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028360:	9316      	str	r3, [sp, #88]	; 0x58
 8028362:	931a      	str	r3, [sp, #104]	; 0x68
 8028364:	931e      	str	r3, [sp, #120]	; 0x78
 8028366:	2300      	movs	r3, #0
 8028368:	9320      	str	r3, [sp, #128]	; 0x80
 802836a:	9321      	str	r3, [sp, #132]	; 0x84
 802836c:	9322      	str	r3, [sp, #136]	; 0x88
 802836e:	9324      	str	r3, [sp, #144]	; 0x90
 8028370:	9325      	str	r3, [sp, #148]	; 0x94
 8028372:	9326      	str	r3, [sp, #152]	; 0x98
 8028374:	9328      	str	r3, [sp, #160]	; 0xa0
 8028376:	9329      	str	r3, [sp, #164]	; 0xa4
 8028378:	932a      	str	r3, [sp, #168]	; 0xa8
 802837a:	932c      	str	r3, [sp, #176]	; 0xb0
 802837c:	932d      	str	r3, [sp, #180]	; 0xb4
 802837e:	932e      	str	r3, [sp, #184]	; 0xb8
 8028380:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028384:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028388:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802838c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028390:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028394:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028398:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802839c:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80283a0:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80283a4:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80283a8:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80283ac:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80283b0:	a830      	add	r0, sp, #192	; 0xc0
 80283b2:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80283b6:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80283ba:	f000 fc43 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80283be:	eeb1 0a49 	vneg.f32	s0, s18
 80283c2:	a830      	add	r0, sp, #192	; 0xc0
 80283c4:	f000 fd12 	bl	8028dec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80283c8:	eeb1 0a68 	vneg.f32	s0, s17
 80283cc:	f000 fd1c 	bl	8028e08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80283d0:	eeb1 0a48 	vneg.f32	s0, s16
 80283d4:	f000 fd27 	bl	8028e26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80283d8:	a840      	add	r0, sp, #256	; 0x100
 80283da:	f000 fc33 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80283de:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80283e2:	a840      	add	r0, sp, #256	; 0x100
 80283e4:	f000 fc86 	bl	8028cf4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80283e8:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80283ec:	f000 fcac 	bl	8028d48 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80283f0:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80283f4:	f000 fcd1 	bl	8028d9a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80283f8:	a850      	add	r0, sp, #320	; 0x140
 80283fa:	f000 fc23 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80283fe:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028402:	a850      	add	r0, sp, #320	; 0x140
 8028404:	f000 fd1e 	bl	8028e44 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028408:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802840c:	f000 fd26 	bl	8028e5c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028410:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028414:	f000 fd2f 	bl	8028e76 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028418:	a860      	add	r0, sp, #384	; 0x180
 802841a:	f000 fc13 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802841e:	eeb0 0a49 	vmov.f32	s0, s18
 8028422:	a860      	add	r0, sp, #384	; 0x180
 8028424:	f000 fce2 	bl	8028dec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028428:	eeb0 0a68 	vmov.f32	s0, s17
 802842c:	f000 fcec 	bl	8028e08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028430:	eeb0 0a48 	vmov.f32	s0, s16
 8028434:	f000 fcf7 	bl	8028e26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028438:	aa50      	add	r2, sp, #320	; 0x140
 802843a:	a960      	add	r1, sp, #384	; 0x180
 802843c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802843e:	f000 fc1b 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028442:	4628      	mov	r0, r5
 8028444:	aa40      	add	r2, sp, #256	; 0x100
 8028446:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028448:	f000 fc16 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802844c:	4629      	mov	r1, r5
 802844e:	aa30      	add	r2, sp, #192	; 0xc0
 8028450:	a870      	add	r0, sp, #448	; 0x1c0
 8028452:	f000 fc11 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028456:	a880      	add	r0, sp, #512	; 0x200
 8028458:	f000 fbf4 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802845c:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028460:	a880      	add	r0, sp, #512	; 0x200
 8028462:	eeb1 0a40 	vneg.f32	s0, s0
 8028466:	f000 fcc1 	bl	8028dec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802846a:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802846e:	a880      	add	r0, sp, #512	; 0x200
 8028470:	eeb1 0a40 	vneg.f32	s0, s0
 8028474:	f000 fcc8 	bl	8028e08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028478:	a890      	add	r0, sp, #576	; 0x240
 802847a:	f000 fbe3 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802847e:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028482:	a890      	add	r0, sp, #576	; 0x240
 8028484:	f000 fc26 	bl	8028cd4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028488:	a8a0      	add	r0, sp, #640	; 0x280
 802848a:	f000 fbdb 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802848e:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028492:	a8a0      	add	r0, sp, #640	; 0x280
 8028494:	f000 fcaa 	bl	8028dec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028498:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802849c:	f000 fcb4 	bl	8028e08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80284a0:	aa90      	add	r2, sp, #576	; 0x240
 80284a2:	a9a0      	add	r1, sp, #640	; 0x280
 80284a4:	a8b0      	add	r0, sp, #704	; 0x2c0
 80284a6:	f000 fbe7 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80284aa:	4628      	mov	r0, r5
 80284ac:	aa80      	add	r2, sp, #512	; 0x200
 80284ae:	a9b0      	add	r1, sp, #704	; 0x2c0
 80284b0:	f000 fbe2 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80284b4:	4629      	mov	r1, r5
 80284b6:	aa70      	add	r2, sp, #448	; 0x1c0
 80284b8:	4668      	mov	r0, sp
 80284ba:	466d      	mov	r5, sp
 80284bc:	f000 fbdc 	bl	8028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80284c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80284c2:	ae70      	add	r6, sp, #448	; 0x1c0
 80284c4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80284c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80284c8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80284ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80284cc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80284ce:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80284d2:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80284d6:	2500      	movs	r5, #0
 80284d8:	0129      	lsls	r1, r5, #4
 80284da:	ab20      	add	r3, sp, #128	; 0x80
 80284dc:	185e      	adds	r6, r3, r1
 80284de:	ab10      	add	r3, sp, #64	; 0x40
 80284e0:	4419      	add	r1, r3
 80284e2:	a870      	add	r0, sp, #448	; 0x1c0
 80284e4:	f000 fb7e 	bl	8028be4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80284e8:	3501      	adds	r5, #1
 80284ea:	2d04      	cmp	r5, #4
 80284ec:	ed86 0a00 	vstr	s0, [r6]
 80284f0:	edc6 0a01 	vstr	s1, [r6, #4]
 80284f4:	ed86 1a02 	vstr	s2, [r6, #8]
 80284f8:	edc6 1a03 	vstr	s3, [r6, #12]
 80284fc:	d1ec      	bne.n	80284d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80284fe:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8028502:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028506:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802850a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802850e:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8028512:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028516:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802851a:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802851e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028522:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028526:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802852a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802852e:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028532:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028536:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802853a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802853e:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028542:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028546:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802854a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802854e:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028552:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028556:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802855a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802855e:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028562:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028566:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802856a:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802856e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028572:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028576:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802857a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802857e:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028582:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028586:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802858a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802858e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028592:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028596:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802859a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802859e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80285a2:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80285a6:	ecbd 8b04 	vpop	{d8-d9}
 80285aa:	bd70      	pop	{r4, r5, r6, pc}

080285ac <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80285ac:	b510      	push	{r4, lr}
 80285ae:	4604      	mov	r4, r0
 80285b0:	f7ea ffd9 	bl	8013566 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80285b4:	4620      	mov	r0, r4
 80285b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80285ba:	f7ff bea1 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080285be <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80285be:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80285c2:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80285c6:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80285ca:	f7ff be99 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080285ce <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80285ce:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80285d2:	f7ff be95 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080285d6 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80285d6:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80285da:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80285de:	f7ff be8f 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080285e2 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80285e2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80285e6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80285ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285ee:	bfd8      	it	le
 80285f0:	eeb0 0a67 	vmovle.f32	s0, s15
 80285f4:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80285f8:	f7ff be82 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080285fc <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80285fc:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028600:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028604:	f7ff be7c 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028608 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028608:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802860c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028610:	f7ff be76 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028614 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028614:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028618:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802861c:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028620:	f7ff be6e 	b.w	8028300 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028624 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028628:	ed2d 8b04 	vpush	{d8-d9}
 802862c:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028630:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028634:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028638:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802863c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028644:	bf54      	ite	pl
 8028646:	eeb0 0a69 	vmovpl.f32	s0, s19
 802864a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802864e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028656:	bfd8      	it	le
 8028658:	eeb0 0a49 	vmovle.f32	s0, s18
 802865c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028664:	bfd8      	it	le
 8028666:	eeb0 0a68 	vmovle.f32	s0, s17
 802866a:	460c      	mov	r4, r1
 802866c:	4607      	mov	r7, r0
 802866e:	f001 fe4f 	bl	802a310 <floorf>
 8028672:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028676:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802867a:	bf58      	it	pl
 802867c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028680:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028684:	bf56      	itet	pl
 8028686:	ee10 3a10 	vmovpl	r3, s0
 802868a:	2600      	movmi	r6, #0
 802868c:	b21e      	sxthpl	r6, r3
 802868e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028692:	bfd8      	it	le
 8028694:	eeb0 8a69 	vmovle.f32	s16, s19
 8028698:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802869c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286a0:	bf58      	it	pl
 80286a2:	eeb0 8a49 	vmovpl.f32	s16, s18
 80286a6:	eef4 8ac8 	vcmpe.f32	s17, s16
 80286aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286ae:	bf54      	ite	pl
 80286b0:	eeb0 0a68 	vmovpl.f32	s0, s17
 80286b4:	eeb0 0a48 	vmovmi.f32	s0, s16
 80286b8:	f001 fde8 	bl	802a28c <ceilf>
 80286bc:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80286c0:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80286c4:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80286c8:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80286cc:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80286d0:	ee07 8a90 	vmov	s15, r8
 80286d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80286d8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80286dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286e0:	bfd8      	it	le
 80286e2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80286e6:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80286ea:	bfdc      	itt	le
 80286ec:	ee10 3a10 	vmovle	r3, s0
 80286f0:	fa0f f883 	sxthle.w	r8, r3
 80286f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286f8:	bf54      	ite	pl
 80286fa:	eeb0 0a69 	vmovpl.f32	s0, s19
 80286fe:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028702:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802870a:	bfd8      	it	le
 802870c:	eeb0 0a49 	vmovle.f32	s0, s18
 8028710:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028718:	bfd8      	it	le
 802871a:	eeb0 0a68 	vmovle.f32	s0, s17
 802871e:	f001 fdf7 	bl	802a310 <floorf>
 8028722:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802872a:	bf58      	it	pl
 802872c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028730:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028734:	bf56      	itet	pl
 8028736:	ee10 3a10 	vmovpl	r3, s0
 802873a:	2500      	movmi	r5, #0
 802873c:	b21d      	sxthpl	r5, r3
 802873e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028742:	bfd8      	it	le
 8028744:	eeb0 8a69 	vmovle.f32	s16, s19
 8028748:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802874c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028750:	bf58      	it	pl
 8028752:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028756:	eef4 8ac8 	vcmpe.f32	s17, s16
 802875a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802875e:	bf54      	ite	pl
 8028760:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028764:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028768:	f001 fd90 	bl	802a28c <ceilf>
 802876c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028770:	803e      	strh	r6, [r7, #0]
 8028772:	ee07 3a90 	vmov	s15, r3
 8028776:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802877a:	807d      	strh	r5, [r7, #2]
 802877c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028784:	bfd8      	it	le
 8028786:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802878a:	eba8 0606 	sub.w	r6, r8, r6
 802878e:	bfdc      	itt	le
 8028790:	ee10 3a10 	vmovle	r3, s0
 8028794:	b21b      	sxthle	r3, r3
 8028796:	1b5d      	subs	r5, r3, r5
 8028798:	80be      	strh	r6, [r7, #4]
 802879a:	80fd      	strh	r5, [r7, #6]
 802879c:	ecbd 8b04 	vpop	{d8-d9}
 80287a0:	4638      	mov	r0, r7
 80287a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080287a6 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80287a6:	b513      	push	{r0, r1, r4, lr}
 80287a8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80287ac:	4604      	mov	r4, r0
 80287ae:	b143      	cbz	r3, 80287c2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80287b0:	4601      	mov	r1, r0
 80287b2:	4668      	mov	r0, sp
 80287b4:	f7ff ff36 	bl	8028624 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80287b8:	6823      	ldr	r3, [r4, #0]
 80287ba:	4669      	mov	r1, sp
 80287bc:	691b      	ldr	r3, [r3, #16]
 80287be:	4620      	mov	r0, r4
 80287c0:	4798      	blx	r3
 80287c2:	b002      	add	sp, #8
 80287c4:	bd10      	pop	{r4, pc}

080287c6 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80287c6:	4603      	mov	r3, r0
 80287c8:	3026      	adds	r0, #38	; 0x26
 80287ca:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80287ce:	b90b      	cbnz	r3, 80287d4 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80287d0:	f7ee bdfa 	b.w	80173c8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80287d4:	f7ee be08 	b.w	80173e8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080287d8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80287d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80287dc:	ed2d 8b04 	vpush	{d8-d9}
 80287e0:	4604      	mov	r4, r0
 80287e2:	469b      	mov	fp, r3
 80287e4:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80287e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80287ec:	f9b1 6000 	ldrsh.w	r6, [r1]
 80287f0:	8888      	ldrh	r0, [r1, #4]
 80287f2:	b0b3      	sub	sp, #204	; 0xcc
 80287f4:	4430      	add	r0, r6
 80287f6:	b280      	uxth	r0, r0
 80287f8:	9206      	str	r2, [sp, #24]
 80287fa:	fa0f fe80 	sxth.w	lr, r0
 80287fe:	2200      	movs	r2, #0
 8028800:	4596      	cmp	lr, r2
 8028802:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028806:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802880a:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802880e:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8028810:	9211      	str	r2, [sp, #68]	; 0x44
 8028812:	f340 8129 	ble.w	8028a68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028816:	45b4      	cmp	ip, r6
 8028818:	f340 8126 	ble.w	8028a68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802881c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8028820:	88ca      	ldrh	r2, [r1, #6]
 8028822:	442a      	add	r2, r5
 8028824:	b292      	uxth	r2, r2
 8028826:	b211      	sxth	r1, r2
 8028828:	2900      	cmp	r1, #0
 802882a:	f340 811d 	ble.w	8028a68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802882e:	42ab      	cmp	r3, r5
 8028830:	f340 811a 	ble.w	8028a68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028834:	45f4      	cmp	ip, lr
 8028836:	bfb8      	it	lt
 8028838:	fa1f f08c 	uxthlt.w	r0, ip
 802883c:	428b      	cmp	r3, r1
 802883e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8028842:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028846:	bfb8      	it	lt
 8028848:	b29a      	uxthlt	r2, r3
 802884a:	1b80      	subs	r0, r0, r6
 802884c:	1b52      	subs	r2, r2, r5
 802884e:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8028852:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028856:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802885a:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802885e:	ab11      	add	r3, sp, #68	; 0x44
 8028860:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028864:	6822      	ldr	r2, [r4, #0]
 8028866:	9307      	str	r3, [sp, #28]
 8028868:	ad13      	add	r5, sp, #76	; 0x4c
 802886a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802886c:	e885 0003 	stmia.w	r5, {r0, r1}
 8028870:	4629      	mov	r1, r5
 8028872:	4620      	mov	r0, r4
 8028874:	4790      	blx	r2
 8028876:	4621      	mov	r1, r4
 8028878:	a815      	add	r0, sp, #84	; 0x54
 802887a:	f7ee fd01 	bl	8017280 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802887e:	a815      	add	r0, sp, #84	; 0x54
 8028880:	f7ed f9c6 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028884:	9b07      	ldr	r3, [sp, #28]
 8028886:	1d26      	adds	r6, r4, #4
 8028888:	4618      	mov	r0, r3
 802888a:	4631      	mov	r1, r6
 802888c:	f7ed fa04 	bl	8015c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028890:	4628      	mov	r0, r5
 8028892:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028896:	f7ed f9bb 	bl	8015c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802889a:	4628      	mov	r0, r5
 802889c:	f7f1 f8a8 	bl	80199f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80288a0:	9007      	str	r0, [sp, #28]
 80288a2:	2800      	cmp	r0, #0
 80288a4:	f000 80db 	beq.w	8028a5e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80288a8:	f8db 2000 	ldr.w	r2, [fp]
 80288ac:	9209      	str	r2, [sp, #36]	; 0x24
 80288ae:	f8db 2004 	ldr.w	r2, [fp, #4]
 80288b2:	920a      	str	r2, [sp, #40]	; 0x28
 80288b4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80288b8:	920b      	str	r2, [sp, #44]	; 0x2c
 80288ba:	f8db 200c 	ldr.w	r2, [fp, #12]
 80288be:	920c      	str	r2, [sp, #48]	; 0x30
 80288c0:	f8da 2000 	ldr.w	r2, [sl]
 80288c4:	920d      	str	r2, [sp, #52]	; 0x34
 80288c6:	f8da 2004 	ldr.w	r2, [sl, #4]
 80288ca:	920e      	str	r2, [sp, #56]	; 0x38
 80288cc:	f8da 2008 	ldr.w	r2, [sl, #8]
 80288d0:	920f      	str	r2, [sp, #60]	; 0x3c
 80288d2:	f8da 200c 	ldr.w	r2, [sl, #12]
 80288d6:	9210      	str	r2, [sp, #64]	; 0x40
 80288d8:	a90d      	add	r1, sp, #52	; 0x34
 80288da:	4632      	mov	r2, r6
 80288dc:	a809      	add	r0, sp, #36	; 0x24
 80288de:	f7ed f9bf 	bl	8015c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80288e2:	4632      	mov	r2, r6
 80288e4:	a90e      	add	r1, sp, #56	; 0x38
 80288e6:	a80a      	add	r0, sp, #40	; 0x28
 80288e8:	f7ed f9ba 	bl	8015c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80288ec:	4632      	mov	r2, r6
 80288ee:	a90f      	add	r1, sp, #60	; 0x3c
 80288f0:	a80b      	add	r0, sp, #44	; 0x2c
 80288f2:	f7ed f9b5 	bl	8015c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80288f6:	4632      	mov	r2, r6
 80288f8:	a910      	add	r1, sp, #64	; 0x40
 80288fa:	a80c      	add	r0, sp, #48	; 0x30
 80288fc:	f7ed f9b0 	bl	8015c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028900:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028904:	edd7 4a00 	vldr	s9, [r7]
 8028908:	edd7 5a01 	vldr	s11, [r7, #4]
 802890c:	ed98 4a00 	vldr	s8, [r8]
 8028910:	ed98 5a01 	vldr	s10, [r8, #4]
 8028914:	ed99 9a00 	vldr	s18, [r9]
 8028918:	ed99 8a01 	vldr	s16, [r9, #4]
 802891c:	edd9 8a02 	vldr	s17, [r9, #8]
 8028920:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028924:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028928:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802892c:	eef0 6a67 	vmov.f32	s13, s15
 8028930:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028934:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028938:	eeb0 7a67 	vmov.f32	s14, s15
 802893c:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8028940:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028944:	eeb0 6a67 	vmov.f32	s12, s15
 8028948:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802894c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8028950:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028954:	ee16 6a10 	vmov	r6, s12
 8028958:	eeb0 6a67 	vmov.f32	s12, s15
 802895c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028960:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028964:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028968:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802896c:	68ff      	ldr	r7, [r7, #12]
 802896e:	9624      	str	r6, [sp, #144]	; 0x90
 8028970:	ee16 0a10 	vmov	r0, s12
 8028974:	eeb0 6a67 	vmov.f32	s12, s15
 8028978:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802897c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028980:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028984:	ee16 1a10 	vmov	r1, s12
 8028988:	eeb0 6a67 	vmov.f32	s12, s15
 802898c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028990:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028994:	ee16 2a10 	vmov	r2, s12
 8028998:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802899c:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80289a0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80289a4:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80289a8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80289ac:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80289b0:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80289b4:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80289b8:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80289bc:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80289c0:	922d      	str	r2, [sp, #180]	; 0xb4
 80289c2:	4a2b      	ldr	r2, [pc, #172]	; (8028a70 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80289c4:	9b06      	ldr	r3, [sp, #24]
 80289c6:	8812      	ldrh	r2, [r2, #0]
 80289c8:	9317      	str	r3, [sp, #92]	; 0x5c
 80289ca:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80289ce:	9b07      	ldr	r3, [sp, #28]
 80289d0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80289d4:	4628      	mov	r0, r5
 80289d6:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80289da:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80289de:	9218      	str	r2, [sp, #96]	; 0x60
 80289e0:	9319      	str	r3, [sp, #100]	; 0x64
 80289e2:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80289e6:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80289ea:	9731      	str	r7, [sp, #196]	; 0xc4
 80289ec:	f7f1 f830 	bl	8019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80289f0:	901a      	str	r0, [sp, #104]	; 0x68
 80289f2:	4628      	mov	r0, r5
 80289f4:	f7f0 ff10 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80289f8:	901b      	str	r0, [sp, #108]	; 0x6c
 80289fa:	4628      	mov	r0, r5
 80289fc:	f7f0 ff40 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028a00:	901c      	str	r0, [sp, #112]	; 0x70
 8028a02:	4628      	mov	r0, r5
 8028a04:	f7f0 ff08 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028a08:	eeb4 9a48 	vcmp.f32	s18, s16
 8028a0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a10:	901d      	str	r0, [sp, #116]	; 0x74
 8028a12:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8028a16:	d107      	bne.n	8028a28 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028a18:	eeb4 8a68 	vcmp.f32	s16, s17
 8028a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8028a24:	bf08      	it	eq
 8028a26:	461e      	moveq	r6, r3
 8028a28:	4b12      	ldr	r3, [pc, #72]	; (8028a74 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028a2a:	681b      	ldr	r3, [r3, #0]
 8028a2c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8028a30:	b10a      	cbz	r2, 8028a36 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8028a32:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8028a34:	b905      	cbnz	r5, 8028a38 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8028a36:	689d      	ldr	r5, [r3, #8]
 8028a38:	682b      	ldr	r3, [r5, #0]
 8028a3a:	4620      	mov	r0, r4
 8028a3c:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8028a3e:	f7ff fec2 	bl	80287c6 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8028a42:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8028a46:	9604      	str	r6, [sp, #16]
 8028a48:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028a4c:	ab13      	add	r3, sp, #76	; 0x4c
 8028a4e:	9301      	str	r3, [sp, #4]
 8028a50:	ab15      	add	r3, sp, #84	; 0x54
 8028a52:	9300      	str	r3, [sp, #0]
 8028a54:	aa1e      	add	r2, sp, #120	; 0x78
 8028a56:	ab19      	add	r3, sp, #100	; 0x64
 8028a58:	a917      	add	r1, sp, #92	; 0x5c
 8028a5a:	4628      	mov	r0, r5
 8028a5c:	47b8      	blx	r7
 8028a5e:	b033      	add	sp, #204	; 0xcc
 8028a60:	ecbd 8b04 	vpop	{d8-d9}
 8028a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028a68:	2300      	movs	r3, #0
 8028a6a:	9312      	str	r3, [sp, #72]	; 0x48
 8028a6c:	e6f7      	b.n	802885e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8028a6e:	bf00      	nop
 8028a70:	2001343e 	.word	0x2001343e
 8028a74:	20013444 	.word	0x20013444

08028a78 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028a78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a7c:	ed2d 8b02 	vpush	{d8}
 8028a80:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028a84:	b098      	sub	sp, #96	; 0x60
 8028a86:	4604      	mov	r4, r0
 8028a88:	4688      	mov	r8, r1
 8028a8a:	2b00      	cmp	r3, #0
 8028a8c:	d077      	beq.n	8028b7e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8028a8e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8028a92:	4628      	mov	r0, r5
 8028a94:	f7f0 fec0 	bl	8019818 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028a98:	ee07 0a90 	vmov	s15, r0
 8028a9c:	4628      	mov	r0, r5
 8028a9e:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8028aa2:	f7f0 feed 	bl	8019880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028aa6:	4b4e      	ldr	r3, [pc, #312]	; (8028be0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028aa8:	781b      	ldrb	r3, [r3, #0]
 8028aaa:	ee07 0a90 	vmov	s15, r0
 8028aae:	2b01      	cmp	r3, #1
 8028ab0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028ab4:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028ab8:	d066      	beq.n	8028b88 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028aba:	eeb0 6a47 	vmov.f32	s12, s14
 8028abe:	ee17 3a10 	vmov	r3, s14
 8028ac2:	eeb0 4a48 	vmov.f32	s8, s16
 8028ac6:	eeb0 7a48 	vmov.f32	s14, s16
 8028aca:	eef0 4a67 	vmov.f32	s9, s15
 8028ace:	eeb0 8a67 	vmov.f32	s16, s15
 8028ad2:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028ad6:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028ada:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8028ade:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8028ae2:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028ae6:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028aea:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028aec:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8028aee:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8028af0:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028af4:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028af8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028afc:	ee73 1a65 	vsub.f32	s3, s6, s11
 8028b00:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028b04:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028b08:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028b0c:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8028b10:	eee1 6a21 	vfma.f32	s13, s2, s3
 8028b14:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8028b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b1c:	dd3d      	ble.n	8028b9a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8028b1e:	ed8d 5a04 	vstr	s10, [sp, #16]
 8028b22:	ed8d 2a05 	vstr	s4, [sp, #20]
 8028b26:	edcd 2a06 	vstr	s5, [sp, #24]
 8028b2a:	f8cd c01c 	str.w	ip, [sp, #28]
 8028b2e:	edcd 5a08 	vstr	s11, [sp, #32]
 8028b32:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8028b36:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8028b3a:	970b      	str	r7, [sp, #44]	; 0x2c
 8028b3c:	960c      	str	r6, [sp, #48]	; 0x30
 8028b3e:	950d      	str	r5, [sp, #52]	; 0x34
 8028b40:	920e      	str	r2, [sp, #56]	; 0x38
 8028b42:	900f      	str	r0, [sp, #60]	; 0x3c
 8028b44:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028b48:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028b4c:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8028b50:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8028b54:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028b58:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028b5c:	9316      	str	r3, [sp, #88]	; 0x58
 8028b5e:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8028b62:	ab14      	add	r3, sp, #80	; 0x50
 8028b64:	9303      	str	r3, [sp, #12]
 8028b66:	ab10      	add	r3, sp, #64	; 0x40
 8028b68:	9302      	str	r3, [sp, #8]
 8028b6a:	ab0c      	add	r3, sp, #48	; 0x30
 8028b6c:	9301      	str	r3, [sp, #4]
 8028b6e:	ab08      	add	r3, sp, #32
 8028b70:	9300      	str	r3, [sp, #0]
 8028b72:	2200      	movs	r2, #0
 8028b74:	ab04      	add	r3, sp, #16
 8028b76:	4641      	mov	r1, r8
 8028b78:	4620      	mov	r0, r4
 8028b7a:	f7ff fe2d 	bl	80287d8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8028b7e:	b018      	add	sp, #96	; 0x60
 8028b80:	ecbd 8b02 	vpop	{d8}
 8028b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028b88:	eeb0 6a48 	vmov.f32	s12, s16
 8028b8c:	eef0 4a47 	vmov.f32	s9, s14
 8028b90:	ee17 3a90 	vmov	r3, s15
 8028b94:	eeb0 4a67 	vmov.f32	s8, s15
 8028b98:	e79b      	b.n	8028ad2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028b9a:	ed8d 5a05 	vstr	s10, [sp, #20]
 8028b9e:	ed8d 2a04 	vstr	s4, [sp, #16]
 8028ba2:	f8cd c018 	str.w	ip, [sp, #24]
 8028ba6:	edcd 2a07 	vstr	s5, [sp, #28]
 8028baa:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8028bae:	ed8d 3a08 	vstr	s6, [sp, #32]
 8028bb2:	970a      	str	r7, [sp, #40]	; 0x28
 8028bb4:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028bb8:	960d      	str	r6, [sp, #52]	; 0x34
 8028bba:	950c      	str	r5, [sp, #48]	; 0x30
 8028bbc:	900e      	str	r0, [sp, #56]	; 0x38
 8028bbe:	920f      	str	r2, [sp, #60]	; 0x3c
 8028bc0:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028bc4:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028bc8:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028bcc:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028bd0:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028bd4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028bd8:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028bdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8028bde:	e7c0      	b.n	8028b62 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8028be0:	2001343c 	.word	0x2001343c

08028be4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028be4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028be6:	b08d      	sub	sp, #52	; 0x34
 8028be8:	2300      	movs	r3, #0
 8028bea:	9304      	str	r3, [sp, #16]
 8028bec:	9305      	str	r3, [sp, #20]
 8028bee:	9306      	str	r3, [sp, #24]
 8028bf0:	aa04      	add	r2, sp, #16
 8028bf2:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028bf6:	9307      	str	r3, [sp, #28]
 8028bf8:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028bfc:	4613      	mov	r3, r2
 8028bfe:	f101 0710 	add.w	r7, r1, #16
 8028c02:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028c40 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028c06:	460c      	mov	r4, r1
 8028c08:	4605      	mov	r5, r0
 8028c0a:	ecb4 7a01 	vldmia	r4!, {s14}
 8028c0e:	ecf5 6a01 	vldmia	r5!, {s13}
 8028c12:	42bc      	cmp	r4, r7
 8028c14:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028c18:	d1f7      	bne.n	8028c0a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028c1a:	3010      	adds	r0, #16
 8028c1c:	42b0      	cmp	r0, r6
 8028c1e:	ece2 7a01 	vstmia	r2!, {s15}
 8028c22:	d1ee      	bne.n	8028c02 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8028c24:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8028c26:	ac0c      	add	r4, sp, #48	; 0x30
 8028c28:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028c2c:	ed9d 0a08 	vldr	s0, [sp, #32]
 8028c30:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028c34:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028c38:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028c3c:	b00d      	add	sp, #52	; 0x34
 8028c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028c40:	00000000 	.word	0x00000000

08028c44 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028c44:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028c74 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028c48:	2300      	movs	r3, #0
 8028c4a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028c4e:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8028c52:	2200      	movs	r2, #0
 8028c54:	4293      	cmp	r3, r2
 8028c56:	f102 0201 	add.w	r2, r2, #1
 8028c5a:	bf14      	ite	ne
 8028c5c:	eef0 6a47 	vmovne.f32	s13, s14
 8028c60:	eef0 6a67 	vmoveq.f32	s13, s15
 8028c64:	2a04      	cmp	r2, #4
 8028c66:	ece1 6a01 	vstmia	r1!, {s13}
 8028c6a:	d1f3      	bne.n	8028c54 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028c6c:	3301      	adds	r3, #1
 8028c6e:	2b04      	cmp	r3, #4
 8028c70:	d1ed      	bne.n	8028c4e <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8028c72:	4770      	bx	lr
 8028c74:	00000000 	.word	0x00000000

08028c78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c7c:	460c      	mov	r4, r1
 8028c7e:	4605      	mov	r5, r0
 8028c80:	4690      	mov	r8, r2
 8028c82:	f7ff ffdf 	bl	8028c44 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c86:	4628      	mov	r0, r5
 8028c88:	4621      	mov	r1, r4
 8028c8a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8028c8e:	2300      	movs	r3, #0
 8028c90:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028cd0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028c94:	eb08 0603 	add.w	r6, r8, r3
 8028c98:	460f      	mov	r7, r1
 8028c9a:	2400      	movs	r4, #0
 8028c9c:	4632      	mov	r2, r6
 8028c9e:	ecf7 6a01 	vldmia	r7!, {s13}
 8028ca2:	ed92 7a00 	vldr	s14, [r2]
 8028ca6:	3401      	adds	r4, #1
 8028ca8:	2c04      	cmp	r4, #4
 8028caa:	f106 0610 	add.w	r6, r6, #16
 8028cae:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028cb2:	d1f3      	bne.n	8028c9c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028cb4:	18c2      	adds	r2, r0, r3
 8028cb6:	3304      	adds	r3, #4
 8028cb8:	2b10      	cmp	r3, #16
 8028cba:	edc2 7a00 	vstr	s15, [r2]
 8028cbe:	d1e7      	bne.n	8028c90 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8028cc0:	3110      	adds	r1, #16
 8028cc2:	4561      	cmp	r1, ip
 8028cc4:	f100 0010 	add.w	r0, r0, #16
 8028cc8:	d1e1      	bne.n	8028c8e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028cca:	4628      	mov	r0, r5
 8028ccc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028cd0:	00000000 	.word	0x00000000

08028cd4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028cd4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028cd8:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028cdc:	f100 0320 	add.w	r3, r0, #32
 8028ce0:	3030      	adds	r0, #48	; 0x30
 8028ce2:	ecf3 7a01 	vldmia	r3!, {s15}
 8028ce6:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028cea:	4283      	cmp	r3, r0
 8028cec:	edc3 7a03 	vstr	s15, [r3, #12]
 8028cf0:	d1f7      	bne.n	8028ce2 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028cf2:	4770      	bx	lr

08028cf4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028cf4:	b510      	push	{r4, lr}
 8028cf6:	ed2d 8b02 	vpush	{d8}
 8028cfa:	4604      	mov	r4, r0
 8028cfc:	eef0 8a40 	vmov.f32	s17, s0
 8028d00:	f001 fa7a 	bl	802a1f8 <sinf>
 8028d04:	eeb0 8a40 	vmov.f32	s16, s0
 8028d08:	eeb0 0a68 	vmov.f32	s0, s17
 8028d0c:	f001 fa30 	bl	802a170 <cosf>
 8028d10:	f104 0310 	add.w	r3, r4, #16
 8028d14:	f104 0220 	add.w	r2, r4, #32
 8028d18:	eeb1 6a48 	vneg.f32	s12, s16
 8028d1c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028d20:	edd3 6a00 	vldr	s13, [r3]
 8028d24:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028d28:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028d2c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028d30:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028d34:	eca3 7a01 	vstmia	r3!, {s14}
 8028d38:	429a      	cmp	r2, r3
 8028d3a:	edc3 7a03 	vstr	s15, [r3, #12]
 8028d3e:	d1ed      	bne.n	8028d1c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028d40:	ecbd 8b02 	vpop	{d8}
 8028d44:	4620      	mov	r0, r4
 8028d46:	bd10      	pop	{r4, pc}

08028d48 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028d48:	b510      	push	{r4, lr}
 8028d4a:	ed2d 8b02 	vpush	{d8}
 8028d4e:	4604      	mov	r4, r0
 8028d50:	eef0 8a40 	vmov.f32	s17, s0
 8028d54:	f001 fa50 	bl	802a1f8 <sinf>
 8028d58:	eeb0 8a40 	vmov.f32	s16, s0
 8028d5c:	eeb0 0a68 	vmov.f32	s0, s17
 8028d60:	f001 fa06 	bl	802a170 <cosf>
 8028d64:	4623      	mov	r3, r4
 8028d66:	f104 0210 	add.w	r2, r4, #16
 8028d6a:	eeb1 6a48 	vneg.f32	s12, s16
 8028d6e:	edd3 7a08 	vldr	s15, [r3, #32]
 8028d72:	edd3 6a00 	vldr	s13, [r3]
 8028d76:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028d7a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028d7e:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028d82:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028d86:	eca3 7a01 	vstmia	r3!, {s14}
 8028d8a:	429a      	cmp	r2, r3
 8028d8c:	edc3 7a07 	vstr	s15, [r3, #28]
 8028d90:	d1ed      	bne.n	8028d6e <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028d92:	ecbd 8b02 	vpop	{d8}
 8028d96:	4620      	mov	r0, r4
 8028d98:	bd10      	pop	{r4, pc}

08028d9a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028d9a:	b510      	push	{r4, lr}
 8028d9c:	ed2d 8b02 	vpush	{d8}
 8028da0:	4604      	mov	r4, r0
 8028da2:	eef0 8a40 	vmov.f32	s17, s0
 8028da6:	f001 fa27 	bl	802a1f8 <sinf>
 8028daa:	eeb0 8a40 	vmov.f32	s16, s0
 8028dae:	eeb0 0a68 	vmov.f32	s0, s17
 8028db2:	f001 f9dd 	bl	802a170 <cosf>
 8028db6:	4623      	mov	r3, r4
 8028db8:	f104 0210 	add.w	r2, r4, #16
 8028dbc:	eeb1 6a48 	vneg.f32	s12, s16
 8028dc0:	edd3 7a04 	vldr	s15, [r3, #16]
 8028dc4:	edd3 6a00 	vldr	s13, [r3]
 8028dc8:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028dcc:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028dd0:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028dd4:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028dd8:	eca3 7a01 	vstmia	r3!, {s14}
 8028ddc:	429a      	cmp	r2, r3
 8028dde:	edc3 7a03 	vstr	s15, [r3, #12]
 8028de2:	d1ed      	bne.n	8028dc0 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028de4:	ecbd 8b02 	vpop	{d8}
 8028de8:	4620      	mov	r0, r4
 8028dea:	bd10      	pop	{r4, pc}

08028dec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028dec:	4603      	mov	r3, r0
 8028dee:	f100 0210 	add.w	r2, r0, #16
 8028df2:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028df6:	edd3 7a00 	vldr	s15, [r3]
 8028dfa:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028dfe:	ece3 7a01 	vstmia	r3!, {s15}
 8028e02:	4293      	cmp	r3, r2
 8028e04:	d1f5      	bne.n	8028df2 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028e06:	4770      	bx	lr

08028e08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028e08:	f100 0310 	add.w	r3, r0, #16
 8028e0c:	f100 0220 	add.w	r2, r0, #32
 8028e10:	ed93 7a08 	vldr	s14, [r3, #32]
 8028e14:	edd3 7a00 	vldr	s15, [r3]
 8028e18:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028e1c:	ece3 7a01 	vstmia	r3!, {s15}
 8028e20:	4293      	cmp	r3, r2
 8028e22:	d1f5      	bne.n	8028e10 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028e24:	4770      	bx	lr

08028e26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028e26:	f100 0320 	add.w	r3, r0, #32
 8028e2a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028e2e:	ed93 7a04 	vldr	s14, [r3, #16]
 8028e32:	edd3 7a00 	vldr	s15, [r3]
 8028e36:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028e3a:	ece3 7a01 	vstmia	r3!, {s15}
 8028e3e:	4293      	cmp	r3, r2
 8028e40:	d1f5      	bne.n	8028e2e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028e42:	4770      	bx	lr

08028e44 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028e44:	4603      	mov	r3, r0
 8028e46:	f100 0210 	add.w	r2, r0, #16
 8028e4a:	edd3 7a00 	vldr	s15, [r3]
 8028e4e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028e52:	ece3 7a01 	vstmia	r3!, {s15}
 8028e56:	4293      	cmp	r3, r2
 8028e58:	d1f7      	bne.n	8028e4a <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028e5a:	4770      	bx	lr

08028e5c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028e5c:	f100 0310 	add.w	r3, r0, #16
 8028e60:	f100 0220 	add.w	r2, r0, #32
 8028e64:	edd3 7a00 	vldr	s15, [r3]
 8028e68:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028e6c:	ece3 7a01 	vstmia	r3!, {s15}
 8028e70:	4293      	cmp	r3, r2
 8028e72:	d1f7      	bne.n	8028e64 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028e74:	4770      	bx	lr

08028e76 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028e76:	f100 0320 	add.w	r3, r0, #32
 8028e7a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028e7e:	edd3 7a00 	vldr	s15, [r3]
 8028e82:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028e86:	ece3 7a01 	vstmia	r3!, {s15}
 8028e8a:	4293      	cmp	r3, r2
 8028e8c:	d1f7      	bne.n	8028e7e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028e8e:	4770      	bx	lr

08028e90 <arm_max_f32>:
 8028e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e94:	1e4f      	subs	r7, r1, #1
 8028e96:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028e9a:	f100 0e04 	add.w	lr, r0, #4
 8028e9e:	edd0 7a00 	vldr	s15, [r0]
 8028ea2:	d058      	beq.n	8028f56 <arm_max_f32+0xc6>
 8028ea4:	3014      	adds	r0, #20
 8028ea6:	46c4      	mov	ip, r8
 8028ea8:	2604      	movs	r6, #4
 8028eaa:	2400      	movs	r4, #0
 8028eac:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028eb0:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028eb4:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028eb8:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028ebc:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028ec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ec4:	bfc8      	it	gt
 8028ec6:	eef0 7a46 	vmovgt.f32	s15, s12
 8028eca:	f1a6 0503 	sub.w	r5, r6, #3
 8028ece:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028ed2:	bfc8      	it	gt
 8028ed4:	462c      	movgt	r4, r5
 8028ed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028eda:	bf48      	it	mi
 8028edc:	eef0 7a66 	vmovmi.f32	s15, s13
 8028ee0:	f1a6 0502 	sub.w	r5, r6, #2
 8028ee4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028ee8:	bf48      	it	mi
 8028eea:	462c      	movmi	r4, r5
 8028eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ef0:	bf48      	it	mi
 8028ef2:	eef0 7a47 	vmovmi.f32	s15, s14
 8028ef6:	f106 35ff 	add.w	r5, r6, #4294967295
 8028efa:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028efe:	bf48      	it	mi
 8028f00:	462c      	movmi	r4, r5
 8028f02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f06:	bf48      	it	mi
 8028f08:	4634      	movmi	r4, r6
 8028f0a:	bf48      	it	mi
 8028f0c:	eef0 7a65 	vmovmi.f32	s15, s11
 8028f10:	f1bc 0c01 	subs.w	ip, ip, #1
 8028f14:	f106 0604 	add.w	r6, r6, #4
 8028f18:	f100 0010 	add.w	r0, r0, #16
 8028f1c:	d1c6      	bne.n	8028eac <arm_max_f32+0x1c>
 8028f1e:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028f22:	f017 0003 	ands.w	r0, r7, #3
 8028f26:	d018      	beq.n	8028f5a <arm_max_f32+0xca>
 8028f28:	1a08      	subs	r0, r1, r0
 8028f2a:	ecbe 7a01 	vldmia	lr!, {s14}
 8028f2e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f36:	bfc8      	it	gt
 8028f38:	4604      	movgt	r4, r0
 8028f3a:	f100 0001 	add.w	r0, r0, #1
 8028f3e:	bfd8      	it	le
 8028f40:	eeb0 7a67 	vmovle.f32	s14, s15
 8028f44:	4288      	cmp	r0, r1
 8028f46:	eef0 7a47 	vmov.f32	s15, s14
 8028f4a:	d1ee      	bne.n	8028f2a <arm_max_f32+0x9a>
 8028f4c:	ed82 7a00 	vstr	s14, [r2]
 8028f50:	601c      	str	r4, [r3, #0]
 8028f52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f56:	4644      	mov	r4, r8
 8028f58:	e7e3      	b.n	8028f22 <arm_max_f32+0x92>
 8028f5a:	eeb0 7a67 	vmov.f32	s14, s15
 8028f5e:	e7f5      	b.n	8028f4c <arm_max_f32+0xbc>

08028f60 <arm_rfft_fast_init_f32>:
 8028f60:	084b      	lsrs	r3, r1, #1
 8028f62:	2b80      	cmp	r3, #128	; 0x80
 8028f64:	b410      	push	{r4}
 8028f66:	8201      	strh	r1, [r0, #16]
 8028f68:	8003      	strh	r3, [r0, #0]
 8028f6a:	d047      	beq.n	8028ffc <arm_rfft_fast_init_f32+0x9c>
 8028f6c:	d917      	bls.n	8028f9e <arm_rfft_fast_init_f32+0x3e>
 8028f6e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028f72:	d03d      	beq.n	8028ff0 <arm_rfft_fast_init_f32+0x90>
 8028f74:	d929      	bls.n	8028fca <arm_rfft_fast_init_f32+0x6a>
 8028f76:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028f7a:	d020      	beq.n	8028fbe <arm_rfft_fast_init_f32+0x5e>
 8028f7c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028f80:	d113      	bne.n	8028faa <arm_rfft_fast_init_f32+0x4a>
 8028f82:	4921      	ldr	r1, [pc, #132]	; (8029008 <arm_rfft_fast_init_f32+0xa8>)
 8028f84:	4a21      	ldr	r2, [pc, #132]	; (802900c <arm_rfft_fast_init_f32+0xac>)
 8028f86:	4b22      	ldr	r3, [pc, #136]	; (8029010 <arm_rfft_fast_init_f32+0xb0>)
 8028f88:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028f8c:	8184      	strh	r4, [r0, #12]
 8028f8e:	6081      	str	r1, [r0, #8]
 8028f90:	6042      	str	r2, [r0, #4]
 8028f92:	6143      	str	r3, [r0, #20]
 8028f94:	2000      	movs	r0, #0
 8028f96:	b240      	sxtb	r0, r0
 8028f98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028f9c:	4770      	bx	lr
 8028f9e:	2b20      	cmp	r3, #32
 8028fa0:	d01c      	beq.n	8028fdc <arm_rfft_fast_init_f32+0x7c>
 8028fa2:	2b40      	cmp	r3, #64	; 0x40
 8028fa4:	d006      	beq.n	8028fb4 <arm_rfft_fast_init_f32+0x54>
 8028fa6:	2b10      	cmp	r3, #16
 8028fa8:	d01d      	beq.n	8028fe6 <arm_rfft_fast_init_f32+0x86>
 8028faa:	20ff      	movs	r0, #255	; 0xff
 8028fac:	b240      	sxtb	r0, r0
 8028fae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028fb2:	4770      	bx	lr
 8028fb4:	2438      	movs	r4, #56	; 0x38
 8028fb6:	4917      	ldr	r1, [pc, #92]	; (8029014 <arm_rfft_fast_init_f32+0xb4>)
 8028fb8:	4a17      	ldr	r2, [pc, #92]	; (8029018 <arm_rfft_fast_init_f32+0xb8>)
 8028fba:	4b18      	ldr	r3, [pc, #96]	; (802901c <arm_rfft_fast_init_f32+0xbc>)
 8028fbc:	e7e6      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028fbe:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028fc2:	4917      	ldr	r1, [pc, #92]	; (8029020 <arm_rfft_fast_init_f32+0xc0>)
 8028fc4:	4a17      	ldr	r2, [pc, #92]	; (8029024 <arm_rfft_fast_init_f32+0xc4>)
 8028fc6:	4b18      	ldr	r3, [pc, #96]	; (8029028 <arm_rfft_fast_init_f32+0xc8>)
 8028fc8:	e7e0      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028fca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028fce:	d1ec      	bne.n	8028faa <arm_rfft_fast_init_f32+0x4a>
 8028fd0:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028fd4:	4915      	ldr	r1, [pc, #84]	; (802902c <arm_rfft_fast_init_f32+0xcc>)
 8028fd6:	4a16      	ldr	r2, [pc, #88]	; (8029030 <arm_rfft_fast_init_f32+0xd0>)
 8028fd8:	4b16      	ldr	r3, [pc, #88]	; (8029034 <arm_rfft_fast_init_f32+0xd4>)
 8028fda:	e7d7      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028fdc:	2430      	movs	r4, #48	; 0x30
 8028fde:	4916      	ldr	r1, [pc, #88]	; (8029038 <arm_rfft_fast_init_f32+0xd8>)
 8028fe0:	4a16      	ldr	r2, [pc, #88]	; (802903c <arm_rfft_fast_init_f32+0xdc>)
 8028fe2:	4b17      	ldr	r3, [pc, #92]	; (8029040 <arm_rfft_fast_init_f32+0xe0>)
 8028fe4:	e7d2      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028fe6:	2414      	movs	r4, #20
 8028fe8:	4916      	ldr	r1, [pc, #88]	; (8029044 <arm_rfft_fast_init_f32+0xe4>)
 8028fea:	4a17      	ldr	r2, [pc, #92]	; (8029048 <arm_rfft_fast_init_f32+0xe8>)
 8028fec:	4b17      	ldr	r3, [pc, #92]	; (802904c <arm_rfft_fast_init_f32+0xec>)
 8028fee:	e7cd      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028ff0:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028ff4:	4916      	ldr	r1, [pc, #88]	; (8029050 <arm_rfft_fast_init_f32+0xf0>)
 8028ff6:	4a17      	ldr	r2, [pc, #92]	; (8029054 <arm_rfft_fast_init_f32+0xf4>)
 8028ff8:	4b17      	ldr	r3, [pc, #92]	; (8029058 <arm_rfft_fast_init_f32+0xf8>)
 8028ffa:	e7c7      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8028ffc:	24d0      	movs	r4, #208	; 0xd0
 8028ffe:	4917      	ldr	r1, [pc, #92]	; (802905c <arm_rfft_fast_init_f32+0xfc>)
 8029000:	4a17      	ldr	r2, [pc, #92]	; (8029060 <arm_rfft_fast_init_f32+0x100>)
 8029002:	4b18      	ldr	r3, [pc, #96]	; (8029064 <arm_rfft_fast_init_f32+0x104>)
 8029004:	e7c2      	b.n	8028f8c <arm_rfft_fast_init_f32+0x2c>
 8029006:	bf00      	nop
 8029008:	0803ed00 	.word	0x0803ed00
 802900c:	0802fef8 	.word	0x0802fef8
 8029010:	08036068 	.word	0x08036068
 8029014:	08033ff8 	.word	0x08033ff8
 8029018:	08040ac0 	.word	0x08040ac0
 802901c:	08042fb0 	.word	0x08042fb0
 8029020:	0803c9e8 	.word	0x0803c9e8
 8029024:	0803a8e8 	.word	0x0803a8e8
 8029028:	08034068 	.word	0x08034068
 802902c:	08042c40 	.word	0x08042c40
 8029030:	0803a068 	.word	0x0803a068
 8029034:	08040cc0 	.word	0x08040cc0
 8029038:	0803d8a0 	.word	0x0803d8a0
 802903c:	0803c8e8 	.word	0x0803c8e8
 8029040:	08033ef8 	.word	0x08033ef8
 8029044:	0803d7f8 	.word	0x0803d7f8
 8029048:	0803a868 	.word	0x0803a868
 802904c:	0803d820 	.word	0x0803d820
 8029050:	080414c0 	.word	0x080414c0
 8029054:	0803dd00 	.word	0x0803dd00
 8029058:	08041840 	.word	0x08041840
 802905c:	080431b0 	.word	0x080431b0
 8029060:	0803d900 	.word	0x0803d900
 8029064:	08042840 	.word	0x08042840

08029068 <arm_rfft_fast_f32>:
 8029068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802906c:	8a06      	ldrh	r6, [r0, #16]
 802906e:	0876      	lsrs	r6, r6, #1
 8029070:	4607      	mov	r7, r0
 8029072:	4615      	mov	r5, r2
 8029074:	8006      	strh	r6, [r0, #0]
 8029076:	460c      	mov	r4, r1
 8029078:	2b00      	cmp	r3, #0
 802907a:	d15c      	bne.n	8029136 <arm_rfft_fast_f32+0xce>
 802907c:	461a      	mov	r2, r3
 802907e:	2301      	movs	r3, #1
 8029080:	f000 fbe6 	bl	8029850 <arm_cfft_f32>
 8029084:	edd4 7a00 	vldr	s15, [r4]
 8029088:	ed94 7a01 	vldr	s14, [r4, #4]
 802908c:	883e      	ldrh	r6, [r7, #0]
 802908e:	6978      	ldr	r0, [r7, #20]
 8029090:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029094:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029098:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802909c:	ee77 6a87 	vadd.f32	s13, s15, s14
 80290a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80290a4:	3e01      	subs	r6, #1
 80290a6:	ee26 7aa3 	vmul.f32	s14, s13, s7
 80290aa:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80290ae:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80290b2:	ed85 7a00 	vstr	s14, [r5]
 80290b6:	edc5 7a01 	vstr	s15, [r5, #4]
 80290ba:	3010      	adds	r0, #16
 80290bc:	f105 0210 	add.w	r2, r5, #16
 80290c0:	3b08      	subs	r3, #8
 80290c2:	f104 0110 	add.w	r1, r4, #16
 80290c6:	ed51 4a02 	vldr	s9, [r1, #-8]
 80290ca:	ed93 5a02 	vldr	s10, [r3, #8]
 80290ce:	ed11 7a01 	vldr	s14, [r1, #-4]
 80290d2:	ed10 6a02 	vldr	s12, [r0, #-8]
 80290d6:	edd3 5a03 	vldr	s11, [r3, #12]
 80290da:	ed50 6a01 	vldr	s13, [r0, #-4]
 80290de:	ee75 7a64 	vsub.f32	s15, s10, s9
 80290e2:	ee35 4a87 	vadd.f32	s8, s11, s14
 80290e6:	ee35 5a24 	vadd.f32	s10, s10, s9
 80290ea:	ee77 5a65 	vsub.f32	s11, s14, s11
 80290ee:	ee66 4a27 	vmul.f32	s9, s12, s15
 80290f2:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80290f6:	ee34 5a85 	vadd.f32	s10, s9, s10
 80290fa:	ee26 6a04 	vmul.f32	s12, s12, s8
 80290fe:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029102:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029106:	ee76 6a85 	vadd.f32	s13, s13, s10
 802910a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802910e:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029112:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029116:	3e01      	subs	r6, #1
 8029118:	ed42 6a02 	vstr	s13, [r2, #-8]
 802911c:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029120:	f1a3 0308 	sub.w	r3, r3, #8
 8029124:	f101 0108 	add.w	r1, r1, #8
 8029128:	f100 0008 	add.w	r0, r0, #8
 802912c:	f102 0208 	add.w	r2, r2, #8
 8029130:	d1c9      	bne.n	80290c6 <arm_rfft_fast_f32+0x5e>
 8029132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029136:	edd1 7a00 	vldr	s15, [r1]
 802913a:	edd1 6a01 	vldr	s13, [r1, #4]
 802913e:	6941      	ldr	r1, [r0, #20]
 8029140:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029144:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029148:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802914c:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029150:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029154:	3e01      	subs	r6, #1
 8029156:	ed82 7a00 	vstr	s14, [r2]
 802915a:	edc2 7a01 	vstr	s15, [r2, #4]
 802915e:	00f0      	lsls	r0, r6, #3
 8029160:	b3ee      	cbz	r6, 80291de <arm_rfft_fast_f32+0x176>
 8029162:	3808      	subs	r0, #8
 8029164:	f101 0e10 	add.w	lr, r1, #16
 8029168:	4420      	add	r0, r4
 802916a:	f104 0110 	add.w	r1, r4, #16
 802916e:	f102 0c10 	add.w	ip, r2, #16
 8029172:	ed90 7a02 	vldr	s14, [r0, #8]
 8029176:	ed51 6a02 	vldr	s13, [r1, #-8]
 802917a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802917e:	ed90 4a03 	vldr	s8, [r0, #12]
 8029182:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029186:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802918a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802918e:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029192:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029196:	ee77 6a26 	vadd.f32	s13, s14, s13
 802919a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802919e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80291a2:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80291a6:	ee77 7a05 	vadd.f32	s15, s14, s10
 80291aa:	ee26 6a24 	vmul.f32	s12, s12, s9
 80291ae:	ee65 5aa4 	vmul.f32	s11, s11, s9
 80291b2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80291b6:	ee36 7ae5 	vsub.f32	s14, s13, s11
 80291ba:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80291be:	ee27 7a23 	vmul.f32	s14, s14, s7
 80291c2:	3e01      	subs	r6, #1
 80291c4:	ed0c 7a02 	vstr	s14, [ip, #-8]
 80291c8:	ed4c 7a01 	vstr	s15, [ip, #-4]
 80291cc:	f1a0 0008 	sub.w	r0, r0, #8
 80291d0:	f101 0108 	add.w	r1, r1, #8
 80291d4:	f10e 0e08 	add.w	lr, lr, #8
 80291d8:	f10c 0c08 	add.w	ip, ip, #8
 80291dc:	d1c9      	bne.n	8029172 <arm_rfft_fast_f32+0x10a>
 80291de:	4638      	mov	r0, r7
 80291e0:	4629      	mov	r1, r5
 80291e2:	461a      	mov	r2, r3
 80291e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80291e8:	2301      	movs	r3, #1
 80291ea:	f000 bb31 	b.w	8029850 <arm_cfft_f32>
 80291ee:	bf00      	nop

080291f0 <arm_cfft_radix8by2_f32>:
 80291f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80291f4:	ed2d 8b08 	vpush	{d8-d11}
 80291f8:	f8b0 e000 	ldrh.w	lr, [r0]
 80291fc:	6842      	ldr	r2, [r0, #4]
 80291fe:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029202:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029206:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802920a:	4607      	mov	r7, r0
 802920c:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029210:	f000 80af 	beq.w	8029372 <arm_cfft_radix8by2_f32+0x182>
 8029214:	3310      	adds	r3, #16
 8029216:	18ce      	adds	r6, r1, r3
 8029218:	3210      	adds	r2, #16
 802921a:	4443      	add	r3, r8
 802921c:	f101 0510 	add.w	r5, r1, #16
 8029220:	f108 0410 	add.w	r4, r8, #16
 8029224:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029228:	ed13 4a04 	vldr	s8, [r3, #-16]
 802922c:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029230:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029234:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029238:	ed54 6a03 	vldr	s13, [r4, #-12]
 802923c:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029240:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029244:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029248:	ed15 6a03 	vldr	s12, [r5, #-12]
 802924c:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029250:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029254:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029258:	ed56 0a02 	vldr	s1, [r6, #-8]
 802925c:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029260:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029264:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029268:	ee36 ba26 	vadd.f32	s22, s12, s13
 802926c:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029270:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029274:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029278:	ee31 8a05 	vadd.f32	s16, s2, s10
 802927c:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029280:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029284:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029288:	ed05 ba03 	vstr	s22, [r5, #-12]
 802928c:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029290:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029294:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029298:	ed46 9a04 	vstr	s19, [r6, #-16]
 802929c:	ed06 9a03 	vstr	s18, [r6, #-12]
 80292a0:	ed46 8a02 	vstr	s17, [r6, #-8]
 80292a4:	ee76 6a66 	vsub.f32	s13, s12, s13
 80292a8:	ee73 3ae2 	vsub.f32	s7, s7, s5
 80292ac:	ed12 6a03 	vldr	s12, [r2, #-12]
 80292b0:	ed52 2a04 	vldr	s5, [r2, #-16]
 80292b4:	ee33 3a61 	vsub.f32	s6, s6, s3
 80292b8:	ee34 4a42 	vsub.f32	s8, s8, s4
 80292bc:	ee26 8a86 	vmul.f32	s16, s13, s12
 80292c0:	ee24 2a06 	vmul.f32	s4, s8, s12
 80292c4:	ee63 1a22 	vmul.f32	s3, s6, s5
 80292c8:	ee24 4a22 	vmul.f32	s8, s8, s5
 80292cc:	ee23 3a06 	vmul.f32	s6, s6, s12
 80292d0:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80292d4:	ee23 6a86 	vmul.f32	s12, s7, s12
 80292d8:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80292dc:	ee36 6a04 	vadd.f32	s12, s12, s8
 80292e0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80292e4:	ee72 3a63 	vsub.f32	s7, s4, s7
 80292e8:	ee71 2a88 	vadd.f32	s5, s3, s16
 80292ec:	ed44 6a03 	vstr	s13, [r4, #-12]
 80292f0:	ed44 2a04 	vstr	s5, [r4, #-16]
 80292f4:	ed43 3a04 	vstr	s7, [r3, #-16]
 80292f8:	ed03 6a03 	vstr	s12, [r3, #-12]
 80292fc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029300:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029304:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029308:	ed52 5a02 	vldr	s11, [r2, #-8]
 802930c:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029310:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029314:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029318:	ee26 5a87 	vmul.f32	s10, s13, s14
 802931c:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029320:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029324:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029328:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802932c:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029330:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029334:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029338:	ee74 5a23 	vadd.f32	s11, s8, s7
 802933c:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029340:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029344:	f1be 0e01 	subs.w	lr, lr, #1
 8029348:	ed44 5a02 	vstr	s11, [r4, #-8]
 802934c:	f105 0510 	add.w	r5, r5, #16
 8029350:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029354:	f106 0610 	add.w	r6, r6, #16
 8029358:	ed03 6a02 	vstr	s12, [r3, #-8]
 802935c:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029360:	f102 0210 	add.w	r2, r2, #16
 8029364:	f104 0410 	add.w	r4, r4, #16
 8029368:	f103 0310 	add.w	r3, r3, #16
 802936c:	f47f af5a 	bne.w	8029224 <arm_cfft_radix8by2_f32+0x34>
 8029370:	687a      	ldr	r2, [r7, #4]
 8029372:	fa1f f48c 	uxth.w	r4, ip
 8029376:	4608      	mov	r0, r1
 8029378:	2302      	movs	r3, #2
 802937a:	4621      	mov	r1, r4
 802937c:	f000 fbca 	bl	8029b14 <arm_radix8_butterfly_f32>
 8029380:	ecbd 8b08 	vpop	{d8-d11}
 8029384:	4640      	mov	r0, r8
 8029386:	4621      	mov	r1, r4
 8029388:	687a      	ldr	r2, [r7, #4]
 802938a:	2302      	movs	r3, #2
 802938c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029390:	f000 bbc0 	b.w	8029b14 <arm_radix8_butterfly_f32>

08029394 <arm_cfft_radix8by4_f32>:
 8029394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029398:	ed2d 8b0a 	vpush	{d8-d12}
 802939c:	8802      	ldrh	r2, [r0, #0]
 802939e:	ed91 6a00 	vldr	s12, [r1]
 80293a2:	b08f      	sub	sp, #60	; 0x3c
 80293a4:	460f      	mov	r7, r1
 80293a6:	0852      	lsrs	r2, r2, #1
 80293a8:	0093      	lsls	r3, r2, #2
 80293aa:	900c      	str	r0, [sp, #48]	; 0x30
 80293ac:	9103      	str	r1, [sp, #12]
 80293ae:	6841      	ldr	r1, [r0, #4]
 80293b0:	ed97 7a01 	vldr	s14, [r7, #4]
 80293b4:	4638      	mov	r0, r7
 80293b6:	4418      	add	r0, r3
 80293b8:	4606      	mov	r6, r0
 80293ba:	9009      	str	r0, [sp, #36]	; 0x24
 80293bc:	4418      	add	r0, r3
 80293be:	edd0 6a00 	vldr	s13, [r0]
 80293c2:	edd6 3a00 	vldr	s7, [r6]
 80293c6:	edd6 2a01 	vldr	s5, [r6, #4]
 80293ca:	edd0 7a01 	vldr	s15, [r0, #4]
 80293ce:	900a      	str	r0, [sp, #40]	; 0x28
 80293d0:	ee76 5a26 	vadd.f32	s11, s12, s13
 80293d4:	4604      	mov	r4, r0
 80293d6:	4625      	mov	r5, r4
 80293d8:	441c      	add	r4, r3
 80293da:	ed94 4a00 	vldr	s8, [r4]
 80293de:	ed94 5a01 	vldr	s10, [r4, #4]
 80293e2:	9401      	str	r4, [sp, #4]
 80293e4:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80293e8:	4630      	mov	r0, r6
 80293ea:	ee74 4a24 	vadd.f32	s9, s8, s9
 80293ee:	463e      	mov	r6, r7
 80293f0:	ee14 ea90 	vmov	lr, s9
 80293f4:	ee76 6a66 	vsub.f32	s13, s12, s13
 80293f8:	f846 eb08 	str.w	lr, [r6], #8
 80293fc:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029400:	edd0 4a01 	vldr	s9, [r0, #4]
 8029404:	9604      	str	r6, [sp, #16]
 8029406:	ee77 7a67 	vsub.f32	s15, s14, s15
 802940a:	9e01      	ldr	r6, [sp, #4]
 802940c:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029410:	ed96 2a01 	vldr	s4, [r6, #4]
 8029414:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029418:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802941c:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029420:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029424:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029428:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802942c:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029430:	4604      	mov	r4, r0
 8029432:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029436:	ee75 6a26 	vadd.f32	s13, s10, s13
 802943a:	46a3      	mov	fp, r4
 802943c:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029440:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029444:	ee13 8a90 	vmov	r8, s7
 8029448:	46a4      	mov	ip, r4
 802944a:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802944e:	ed87 7a01 	vstr	s14, [r7, #4]
 8029452:	f84b 8b08 	str.w	r8, [fp], #8
 8029456:	f1ac 0704 	sub.w	r7, ip, #4
 802945a:	ed8c 5a01 	vstr	s10, [ip, #4]
 802945e:	f101 0c08 	add.w	ip, r1, #8
 8029462:	462c      	mov	r4, r5
 8029464:	f8cd c014 	str.w	ip, [sp, #20]
 8029468:	ee15 ca90 	vmov	ip, s11
 802946c:	f844 cb08 	str.w	ip, [r4], #8
 8029470:	9407      	str	r4, [sp, #28]
 8029472:	f101 0410 	add.w	r4, r1, #16
 8029476:	ed85 6a01 	vstr	s12, [r5, #4]
 802947a:	0852      	lsrs	r2, r2, #1
 802947c:	9402      	str	r4, [sp, #8]
 802947e:	462c      	mov	r4, r5
 8029480:	f101 0518 	add.w	r5, r1, #24
 8029484:	920b      	str	r2, [sp, #44]	; 0x2c
 8029486:	46b2      	mov	sl, r6
 8029488:	9506      	str	r5, [sp, #24]
 802948a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802948e:	3a02      	subs	r2, #2
 8029490:	ee16 5a90 	vmov	r5, s13
 8029494:	46b6      	mov	lr, r6
 8029496:	4630      	mov	r0, r6
 8029498:	0852      	lsrs	r2, r2, #1
 802949a:	f84a 5b08 	str.w	r5, [sl], #8
 802949e:	f1a0 0604 	sub.w	r6, r0, #4
 80294a2:	edce 7a01 	vstr	s15, [lr, #4]
 80294a6:	9208      	str	r2, [sp, #32]
 80294a8:	f000 8130 	beq.w	802970c <arm_cfft_radix8by4_f32+0x378>
 80294ac:	4691      	mov	r9, r2
 80294ae:	9a03      	ldr	r2, [sp, #12]
 80294b0:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80294b4:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80294b8:	3b08      	subs	r3, #8
 80294ba:	f102 0510 	add.w	r5, r2, #16
 80294be:	f101 0c20 	add.w	ip, r1, #32
 80294c2:	f1a4 020c 	sub.w	r2, r4, #12
 80294c6:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80294ca:	4433      	add	r3, r6
 80294cc:	3410      	adds	r4, #16
 80294ce:	4650      	mov	r0, sl
 80294d0:	4659      	mov	r1, fp
 80294d2:	ed55 3a02 	vldr	s7, [r5, #-8]
 80294d6:	ed14 5a02 	vldr	s10, [r4, #-8]
 80294da:	ed91 7a00 	vldr	s14, [r1]
 80294de:	edd0 7a00 	vldr	s15, [r0]
 80294e2:	ed15 4a01 	vldr	s8, [r5, #-4]
 80294e6:	ed54 5a01 	vldr	s11, [r4, #-4]
 80294ea:	edd0 6a01 	vldr	s13, [r0, #4]
 80294ee:	ed91 6a01 	vldr	s12, [r1, #4]
 80294f2:	ee33 8a85 	vadd.f32	s16, s7, s10
 80294f6:	ee34 0a25 	vadd.f32	s0, s8, s11
 80294fa:	ee78 4a07 	vadd.f32	s9, s16, s14
 80294fe:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029502:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029506:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802950a:	ed45 4a02 	vstr	s9, [r5, #-8]
 802950e:	edd1 4a01 	vldr	s9, [r1, #4]
 8029512:	ed90 4a01 	vldr	s8, [r0, #4]
 8029516:	ee70 4a24 	vadd.f32	s9, s0, s9
 802951a:	ee76 aa05 	vadd.f32	s21, s12, s10
 802951e:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029522:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029526:	ed45 4a01 	vstr	s9, [r5, #-4]
 802952a:	edd6 1a00 	vldr	s3, [r6]
 802952e:	edd7 0a00 	vldr	s1, [r7]
 8029532:	ed92 4a02 	vldr	s8, [r2, #8]
 8029536:	edd3 3a02 	vldr	s7, [r3, #8]
 802953a:	ed93 2a01 	vldr	s4, [r3, #4]
 802953e:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029542:	edd2 2a01 	vldr	s5, [r2, #4]
 8029546:	ed57 9a01 	vldr	s19, [r7, #-4]
 802954a:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802954e:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029552:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029556:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802955a:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802955e:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029562:	ee18 aa90 	vmov	sl, s17
 8029566:	f847 a908 	str.w	sl, [r7], #-8
 802956a:	edd2 8a01 	vldr	s17, [r2, #4]
 802956e:	ed93 9a01 	vldr	s18, [r3, #4]
 8029572:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029576:	ee3a aa27 	vadd.f32	s20, s20, s15
 802957a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802957e:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029582:	edc7 8a01 	vstr	s17, [r7, #4]
 8029586:	ed18 ba02 	vldr	s22, [r8, #-8]
 802958a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802958e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029592:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029596:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802959a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802959e:	ee30 9a81 	vadd.f32	s18, s1, s2
 80295a2:	ee79 9a82 	vadd.f32	s19, s19, s4
 80295a6:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80295aa:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80295ae:	ee69 baa8 	vmul.f32	s23, s19, s17
 80295b2:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80295b6:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80295ba:	ee69 8a28 	vmul.f32	s17, s18, s17
 80295be:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80295c2:	ee1c aa10 	vmov	sl, s24
 80295c6:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80295ca:	f841 ab08 	str.w	sl, [r1], #8
 80295ce:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80295d2:	ee3b bacb 	vsub.f32	s22, s23, s22
 80295d6:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80295da:	ee33 3a62 	vsub.f32	s6, s6, s5
 80295de:	ed01 aa01 	vstr	s20, [r1, #-4]
 80295e2:	edc2 8a01 	vstr	s17, [r2, #4]
 80295e6:	ed82 ba02 	vstr	s22, [r2, #8]
 80295ea:	ed5c 4a04 	vldr	s9, [ip, #-16]
 80295ee:	ee74 3a63 	vsub.f32	s7, s8, s7
 80295f2:	ee38 8a47 	vsub.f32	s16, s16, s14
 80295f6:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80295fa:	ee30 0a46 	vsub.f32	s0, s0, s12
 80295fe:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029602:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029606:	ee30 0a66 	vsub.f32	s0, s0, s13
 802960a:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802960e:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029612:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029616:	ee60 9a04 	vmul.f32	s19, s0, s8
 802961a:	ee28 8a04 	vmul.f32	s16, s16, s8
 802961e:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029622:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029626:	ee39 4a68 	vsub.f32	s8, s18, s17
 802962a:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802962e:	ee14 aa10 	vmov	sl, s8
 8029632:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029636:	ee63 4a24 	vmul.f32	s9, s6, s9
 802963a:	ed44 9a02 	vstr	s19, [r4, #-8]
 802963e:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029642:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029646:	f846 a908 	str.w	sl, [r6], #-8
 802964a:	ee35 6a46 	vsub.f32	s12, s10, s12
 802964e:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029652:	edc6 3a01 	vstr	s7, [r6, #4]
 8029656:	ee76 6a86 	vadd.f32	s13, s13, s12
 802965a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802965e:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029662:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029666:	ee67 5a86 	vmul.f32	s11, s15, s12
 802966a:	ee26 5a87 	vmul.f32	s10, s13, s14
 802966e:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029672:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029676:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802967a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802967e:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029682:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029686:	ee67 7a87 	vmul.f32	s15, s15, s14
 802968a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802968e:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029692:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029696:	ee15 aa90 	vmov	sl, s11
 802969a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802969e:	f840 ab08 	str.w	sl, [r0], #8
 80296a2:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80296a6:	ee76 2a22 	vadd.f32	s5, s12, s5
 80296aa:	f1b9 0901 	subs.w	r9, r9, #1
 80296ae:	ed40 7a01 	vstr	s15, [r0, #-4]
 80296b2:	f105 0508 	add.w	r5, r5, #8
 80296b6:	ed83 1a02 	vstr	s2, [r3, #8]
 80296ba:	edc3 2a01 	vstr	s5, [r3, #4]
 80296be:	f108 0808 	add.w	r8, r8, #8
 80296c2:	f1a2 0208 	sub.w	r2, r2, #8
 80296c6:	f10c 0c10 	add.w	ip, ip, #16
 80296ca:	f104 0408 	add.w	r4, r4, #8
 80296ce:	f10e 0e18 	add.w	lr, lr, #24
 80296d2:	f1a3 0308 	sub.w	r3, r3, #8
 80296d6:	f47f aefc 	bne.w	80294d2 <arm_cfft_radix8by4_f32+0x13e>
 80296da:	9908      	ldr	r1, [sp, #32]
 80296dc:	9802      	ldr	r0, [sp, #8]
 80296de:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80296e2:	00cb      	lsls	r3, r1, #3
 80296e4:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 80296e8:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80296ec:	9102      	str	r1, [sp, #8]
 80296ee:	9904      	ldr	r1, [sp, #16]
 80296f0:	4419      	add	r1, r3
 80296f2:	9104      	str	r1, [sp, #16]
 80296f4:	9905      	ldr	r1, [sp, #20]
 80296f6:	4419      	add	r1, r3
 80296f8:	9105      	str	r1, [sp, #20]
 80296fa:	9907      	ldr	r1, [sp, #28]
 80296fc:	449b      	add	fp, r3
 80296fe:	4419      	add	r1, r3
 8029700:	449a      	add	sl, r3
 8029702:	9b06      	ldr	r3, [sp, #24]
 8029704:	9107      	str	r1, [sp, #28]
 8029706:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802970a:	9306      	str	r3, [sp, #24]
 802970c:	9a04      	ldr	r2, [sp, #16]
 802970e:	9807      	ldr	r0, [sp, #28]
 8029710:	edd2 3a00 	vldr	s7, [r2]
 8029714:	ed90 4a00 	vldr	s8, [r0]
 8029718:	eddb 7a00 	vldr	s15, [fp]
 802971c:	ed9a 3a00 	vldr	s6, [sl]
 8029720:	edd2 4a01 	vldr	s9, [r2, #4]
 8029724:	ed90 7a01 	vldr	s14, [r0, #4]
 8029728:	ed9b 2a01 	vldr	s4, [fp, #4]
 802972c:	edda 5a01 	vldr	s11, [sl, #4]
 8029730:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029734:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029736:	ee73 6a84 	vadd.f32	s13, s7, s8
 802973a:	ee34 6a87 	vadd.f32	s12, s9, s14
 802973e:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029742:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029746:	ee33 5a05 	vadd.f32	s10, s6, s10
 802974a:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802974e:	ed82 5a00 	vstr	s10, [r2]
 8029752:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029756:	edda 4a01 	vldr	s9, [sl, #4]
 802975a:	ee36 5a05 	vadd.f32	s10, s12, s10
 802975e:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029762:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029766:	ee77 4a67 	vsub.f32	s9, s14, s15
 802976a:	ed82 5a01 	vstr	s10, [r2, #4]
 802976e:	9a05      	ldr	r2, [sp, #20]
 8029770:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029774:	edd2 1a00 	vldr	s3, [r2]
 8029778:	edd2 2a01 	vldr	s5, [r2, #4]
 802977c:	9a02      	ldr	r2, [sp, #8]
 802977e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029782:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029786:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802978a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802978e:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029792:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029796:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802979a:	ee35 5a63 	vsub.f32	s10, s10, s7
 802979e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80297a2:	edcb 2a00 	vstr	s5, [fp]
 80297a6:	ed8b 5a01 	vstr	s10, [fp, #4]
 80297aa:	edd2 3a01 	vldr	s7, [r2, #4]
 80297ae:	ed92 5a00 	vldr	s10, [r2]
 80297b2:	9a06      	ldr	r2, [sp, #24]
 80297b4:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80297b8:	ee36 6a65 	vsub.f32	s12, s12, s11
 80297bc:	ee66 4a85 	vmul.f32	s9, s13, s10
 80297c0:	ee26 5a05 	vmul.f32	s10, s12, s10
 80297c4:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80297c8:	ee26 6a23 	vmul.f32	s12, s12, s7
 80297cc:	ee75 6a66 	vsub.f32	s13, s10, s13
 80297d0:	ee34 6a86 	vadd.f32	s12, s9, s12
 80297d4:	ee34 4a42 	vsub.f32	s8, s8, s4
 80297d8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80297dc:	edc0 6a01 	vstr	s13, [r0, #4]
 80297e0:	ed80 6a00 	vstr	s12, [r0]
 80297e4:	ed92 6a01 	vldr	s12, [r2, #4]
 80297e8:	9803      	ldr	r0, [sp, #12]
 80297ea:	ee77 7a43 	vsub.f32	s15, s14, s6
 80297ee:	ee75 5a84 	vadd.f32	s11, s11, s8
 80297f2:	ed92 7a00 	vldr	s14, [r2]
 80297f6:	ee65 6a87 	vmul.f32	s13, s11, s14
 80297fa:	ee27 7a87 	vmul.f32	s14, s15, s14
 80297fe:	ee65 5a86 	vmul.f32	s11, s11, s12
 8029802:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029806:	ee77 5a65 	vsub.f32	s11, s14, s11
 802980a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802980e:	edca 5a01 	vstr	s11, [sl, #4]
 8029812:	edca 7a00 	vstr	s15, [sl]
 8029816:	6872      	ldr	r2, [r6, #4]
 8029818:	4621      	mov	r1, r4
 802981a:	2304      	movs	r3, #4
 802981c:	f000 f97a 	bl	8029b14 <arm_radix8_butterfly_f32>
 8029820:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029822:	6872      	ldr	r2, [r6, #4]
 8029824:	4621      	mov	r1, r4
 8029826:	2304      	movs	r3, #4
 8029828:	f000 f974 	bl	8029b14 <arm_radix8_butterfly_f32>
 802982c:	980a      	ldr	r0, [sp, #40]	; 0x28
 802982e:	6872      	ldr	r2, [r6, #4]
 8029830:	4621      	mov	r1, r4
 8029832:	2304      	movs	r3, #4
 8029834:	f000 f96e 	bl	8029b14 <arm_radix8_butterfly_f32>
 8029838:	9801      	ldr	r0, [sp, #4]
 802983a:	6872      	ldr	r2, [r6, #4]
 802983c:	4621      	mov	r1, r4
 802983e:	2304      	movs	r3, #4
 8029840:	b00f      	add	sp, #60	; 0x3c
 8029842:	ecbd 8b0a 	vpop	{d8-d12}
 8029846:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802984a:	f000 b963 	b.w	8029b14 <arm_radix8_butterfly_f32>
 802984e:	bf00      	nop

08029850 <arm_cfft_f32>:
 8029850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029854:	2a01      	cmp	r2, #1
 8029856:	4606      	mov	r6, r0
 8029858:	4617      	mov	r7, r2
 802985a:	460c      	mov	r4, r1
 802985c:	4698      	mov	r8, r3
 802985e:	8805      	ldrh	r5, [r0, #0]
 8029860:	d054      	beq.n	802990c <arm_cfft_f32+0xbc>
 8029862:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029866:	d04c      	beq.n	8029902 <arm_cfft_f32+0xb2>
 8029868:	d916      	bls.n	8029898 <arm_cfft_f32+0x48>
 802986a:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802986e:	d01a      	beq.n	80298a6 <arm_cfft_f32+0x56>
 8029870:	d95c      	bls.n	802992c <arm_cfft_f32+0xdc>
 8029872:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029876:	d044      	beq.n	8029902 <arm_cfft_f32+0xb2>
 8029878:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802987c:	d105      	bne.n	802988a <arm_cfft_f32+0x3a>
 802987e:	4620      	mov	r0, r4
 8029880:	4629      	mov	r1, r5
 8029882:	6872      	ldr	r2, [r6, #4]
 8029884:	2301      	movs	r3, #1
 8029886:	f000 f945 	bl	8029b14 <arm_radix8_butterfly_f32>
 802988a:	f1b8 0f00 	cmp.w	r8, #0
 802988e:	d111      	bne.n	80298b4 <arm_cfft_f32+0x64>
 8029890:	2f01      	cmp	r7, #1
 8029892:	d016      	beq.n	80298c2 <arm_cfft_f32+0x72>
 8029894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029898:	2d20      	cmp	r5, #32
 802989a:	d032      	beq.n	8029902 <arm_cfft_f32+0xb2>
 802989c:	d94a      	bls.n	8029934 <arm_cfft_f32+0xe4>
 802989e:	2d40      	cmp	r5, #64	; 0x40
 80298a0:	d0ed      	beq.n	802987e <arm_cfft_f32+0x2e>
 80298a2:	2d80      	cmp	r5, #128	; 0x80
 80298a4:	d1f1      	bne.n	802988a <arm_cfft_f32+0x3a>
 80298a6:	4630      	mov	r0, r6
 80298a8:	4621      	mov	r1, r4
 80298aa:	f7ff fca1 	bl	80291f0 <arm_cfft_radix8by2_f32>
 80298ae:	f1b8 0f00 	cmp.w	r8, #0
 80298b2:	d0ed      	beq.n	8029890 <arm_cfft_f32+0x40>
 80298b4:	4620      	mov	r0, r4
 80298b6:	89b1      	ldrh	r1, [r6, #12]
 80298b8:	68b2      	ldr	r2, [r6, #8]
 80298ba:	f7d6 fc99 	bl	80001f0 <arm_bitreversal_32>
 80298be:	2f01      	cmp	r7, #1
 80298c0:	d1e8      	bne.n	8029894 <arm_cfft_f32+0x44>
 80298c2:	ee07 5a90 	vmov	s15, r5
 80298c6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80298ca:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80298ce:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80298d2:	2d00      	cmp	r5, #0
 80298d4:	d0de      	beq.n	8029894 <arm_cfft_f32+0x44>
 80298d6:	f104 0108 	add.w	r1, r4, #8
 80298da:	2300      	movs	r3, #0
 80298dc:	3301      	adds	r3, #1
 80298de:	429d      	cmp	r5, r3
 80298e0:	f101 0108 	add.w	r1, r1, #8
 80298e4:	ed11 7a04 	vldr	s14, [r1, #-16]
 80298e8:	ed51 7a03 	vldr	s15, [r1, #-12]
 80298ec:	ee27 7a26 	vmul.f32	s14, s14, s13
 80298f0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80298f4:	ed01 7a04 	vstr	s14, [r1, #-16]
 80298f8:	ed41 7a03 	vstr	s15, [r1, #-12]
 80298fc:	d1ee      	bne.n	80298dc <arm_cfft_f32+0x8c>
 80298fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029902:	4630      	mov	r0, r6
 8029904:	4621      	mov	r1, r4
 8029906:	f7ff fd45 	bl	8029394 <arm_cfft_radix8by4_f32>
 802990a:	e7be      	b.n	802988a <arm_cfft_f32+0x3a>
 802990c:	b1ad      	cbz	r5, 802993a <arm_cfft_f32+0xea>
 802990e:	f101 030c 	add.w	r3, r1, #12
 8029912:	2200      	movs	r2, #0
 8029914:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029918:	3201      	adds	r2, #1
 802991a:	eef1 7a67 	vneg.f32	s15, s15
 802991e:	4295      	cmp	r5, r2
 8029920:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029924:	f103 0308 	add.w	r3, r3, #8
 8029928:	d1f4      	bne.n	8029914 <arm_cfft_f32+0xc4>
 802992a:	e79a      	b.n	8029862 <arm_cfft_f32+0x12>
 802992c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8029930:	d0a5      	beq.n	802987e <arm_cfft_f32+0x2e>
 8029932:	e7aa      	b.n	802988a <arm_cfft_f32+0x3a>
 8029934:	2d10      	cmp	r5, #16
 8029936:	d0b6      	beq.n	80298a6 <arm_cfft_f32+0x56>
 8029938:	e7a7      	b.n	802988a <arm_cfft_f32+0x3a>
 802993a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802993e:	d894      	bhi.n	802986a <arm_cfft_f32+0x1a>
 8029940:	e7aa      	b.n	8029898 <arm_cfft_f32+0x48>
 8029942:	bf00      	nop

08029944 <arm_cmplx_mag_f32>:
 8029944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029948:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802994c:	b084      	sub	sp, #16
 802994e:	d07f      	beq.n	8029a50 <arm_cmplx_mag_f32+0x10c>
 8029950:	2700      	movs	r7, #0
 8029952:	f100 0420 	add.w	r4, r0, #32
 8029956:	f101 0510 	add.w	r5, r1, #16
 802995a:	4646      	mov	r6, r8
 802995c:	e05a      	b.n	8029a14 <arm_cmplx_mag_f32+0xd0>
 802995e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029962:	eeb4 0a40 	vcmp.f32	s0, s0
 8029966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802996a:	f040 80a4 	bne.w	8029ab6 <arm_cmplx_mag_f32+0x172>
 802996e:	ed05 0a04 	vstr	s0, [r5, #-16]
 8029972:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029976:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802997a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802997e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029982:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029986:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802998a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802998e:	f2c0 808f 	blt.w	8029ab0 <arm_cmplx_mag_f32+0x16c>
 8029992:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029996:	eeb4 0a40 	vcmp.f32	s0, s0
 802999a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802999e:	f040 80af 	bne.w	8029b00 <arm_cmplx_mag_f32+0x1bc>
 80299a2:	ed05 0a03 	vstr	s0, [r5, #-12]
 80299a6:	ed54 7a04 	vldr	s15, [r4, #-16]
 80299aa:	ed14 0a03 	vldr	s0, [r4, #-12]
 80299ae:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80299b2:	ee20 0a00 	vmul.f32	s0, s0, s0
 80299b6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80299ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80299be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299c2:	db72      	blt.n	8029aaa <arm_cmplx_mag_f32+0x166>
 80299c4:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80299c8:	eeb4 0a40 	vcmp.f32	s0, s0
 80299cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299d0:	f040 808c 	bne.w	8029aec <arm_cmplx_mag_f32+0x1a8>
 80299d4:	ed05 0a02 	vstr	s0, [r5, #-8]
 80299d8:	ed54 7a02 	vldr	s15, [r4, #-8]
 80299dc:	ed14 0a01 	vldr	s0, [r4, #-4]
 80299e0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80299e4:	ee20 0a00 	vmul.f32	s0, s0, s0
 80299e8:	ee77 7a80 	vadd.f32	s15, s15, s0
 80299ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80299f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299f4:	db20      	blt.n	8029a38 <arm_cmplx_mag_f32+0xf4>
 80299f6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80299fa:	eeb4 0a40 	vcmp.f32	s0, s0
 80299fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a02:	d169      	bne.n	8029ad8 <arm_cmplx_mag_f32+0x194>
 8029a04:	3e01      	subs	r6, #1
 8029a06:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029a0a:	f104 0420 	add.w	r4, r4, #32
 8029a0e:	f105 0510 	add.w	r5, r5, #16
 8029a12:	d019      	beq.n	8029a48 <arm_cmplx_mag_f32+0x104>
 8029a14:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029a18:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029a1c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029a20:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029a24:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029a28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a30:	da95      	bge.n	802995e <arm_cmplx_mag_f32+0x1a>
 8029a32:	f845 7c10 	str.w	r7, [r5, #-16]
 8029a36:	e79c      	b.n	8029972 <arm_cmplx_mag_f32+0x2e>
 8029a38:	3e01      	subs	r6, #1
 8029a3a:	f845 7c04 	str.w	r7, [r5, #-4]
 8029a3e:	f104 0420 	add.w	r4, r4, #32
 8029a42:	f105 0510 	add.w	r5, r5, #16
 8029a46:	d1e5      	bne.n	8029a14 <arm_cmplx_mag_f32+0xd0>
 8029a48:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029a4c:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8029a50:	f012 0503 	ands.w	r5, r2, #3
 8029a54:	d026      	beq.n	8029aa4 <arm_cmplx_mag_f32+0x160>
 8029a56:	2600      	movs	r6, #0
 8029a58:	f100 0408 	add.w	r4, r0, #8
 8029a5c:	e00c      	b.n	8029a78 <arm_cmplx_mag_f32+0x134>
 8029a5e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029a62:	eeb4 0a40 	vcmp.f32	s0, s0
 8029a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a6a:	d12e      	bne.n	8029aca <arm_cmplx_mag_f32+0x186>
 8029a6c:	3d01      	subs	r5, #1
 8029a6e:	ed01 0a01 	vstr	s0, [r1, #-4]
 8029a72:	f104 0408 	add.w	r4, r4, #8
 8029a76:	d015      	beq.n	8029aa4 <arm_cmplx_mag_f32+0x160>
 8029a78:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029a7c:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029a80:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029a84:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029a88:	3104      	adds	r1, #4
 8029a8a:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029a8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a96:	dae2      	bge.n	8029a5e <arm_cmplx_mag_f32+0x11a>
 8029a98:	3d01      	subs	r5, #1
 8029a9a:	f841 6c04 	str.w	r6, [r1, #-4]
 8029a9e:	f104 0408 	add.w	r4, r4, #8
 8029aa2:	d1e9      	bne.n	8029a78 <arm_cmplx_mag_f32+0x134>
 8029aa4:	b004      	add	sp, #16
 8029aa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029aaa:	f845 7c08 	str.w	r7, [r5, #-8]
 8029aae:	e793      	b.n	80299d8 <arm_cmplx_mag_f32+0x94>
 8029ab0:	f845 7c0c 	str.w	r7, [r5, #-12]
 8029ab4:	e777      	b.n	80299a6 <arm_cmplx_mag_f32+0x62>
 8029ab6:	eeb0 0a67 	vmov.f32	s0, s15
 8029aba:	9203      	str	r2, [sp, #12]
 8029abc:	9102      	str	r1, [sp, #8]
 8029abe:	9001      	str	r0, [sp, #4]
 8029ac0:	f000 fb38 	bl	802a134 <sqrtf>
 8029ac4:	a801      	add	r0, sp, #4
 8029ac6:	c807      	ldmia	r0, {r0, r1, r2}
 8029ac8:	e751      	b.n	802996e <arm_cmplx_mag_f32+0x2a>
 8029aca:	eeb0 0a67 	vmov.f32	s0, s15
 8029ace:	9101      	str	r1, [sp, #4]
 8029ad0:	f000 fb30 	bl	802a134 <sqrtf>
 8029ad4:	9901      	ldr	r1, [sp, #4]
 8029ad6:	e7c9      	b.n	8029a6c <arm_cmplx_mag_f32+0x128>
 8029ad8:	eeb0 0a67 	vmov.f32	s0, s15
 8029adc:	9203      	str	r2, [sp, #12]
 8029ade:	9102      	str	r1, [sp, #8]
 8029ae0:	9001      	str	r0, [sp, #4]
 8029ae2:	f000 fb27 	bl	802a134 <sqrtf>
 8029ae6:	a801      	add	r0, sp, #4
 8029ae8:	c807      	ldmia	r0, {r0, r1, r2}
 8029aea:	e78b      	b.n	8029a04 <arm_cmplx_mag_f32+0xc0>
 8029aec:	eeb0 0a67 	vmov.f32	s0, s15
 8029af0:	9203      	str	r2, [sp, #12]
 8029af2:	9102      	str	r1, [sp, #8]
 8029af4:	9001      	str	r0, [sp, #4]
 8029af6:	f000 fb1d 	bl	802a134 <sqrtf>
 8029afa:	a801      	add	r0, sp, #4
 8029afc:	c807      	ldmia	r0, {r0, r1, r2}
 8029afe:	e769      	b.n	80299d4 <arm_cmplx_mag_f32+0x90>
 8029b00:	eeb0 0a67 	vmov.f32	s0, s15
 8029b04:	9203      	str	r2, [sp, #12]
 8029b06:	9102      	str	r1, [sp, #8]
 8029b08:	9001      	str	r0, [sp, #4]
 8029b0a:	f000 fb13 	bl	802a134 <sqrtf>
 8029b0e:	a801      	add	r0, sp, #4
 8029b10:	c807      	ldmia	r0, {r0, r1, r2}
 8029b12:	e746      	b.n	80299a2 <arm_cmplx_mag_f32+0x5e>

08029b14 <arm_radix8_butterfly_f32>:
 8029b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029b18:	ed2d 8b10 	vpush	{d8-d15}
 8029b1c:	b09d      	sub	sp, #116	; 0x74
 8029b1e:	461c      	mov	r4, r3
 8029b20:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029e44 <arm_radix8_butterfly_f32+0x330>
 8029b24:	921a      	str	r2, [sp, #104]	; 0x68
 8029b26:	1d03      	adds	r3, r0, #4
 8029b28:	4682      	mov	sl, r0
 8029b2a:	4689      	mov	r9, r1
 8029b2c:	468b      	mov	fp, r1
 8029b2e:	931b      	str	r3, [sp, #108]	; 0x6c
 8029b30:	9400      	str	r4, [sp, #0]
 8029b32:	469e      	mov	lr, r3
 8029b34:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029b38:	005a      	lsls	r2, r3, #1
 8029b3a:	18d6      	adds	r6, r2, r3
 8029b3c:	18f5      	adds	r5, r6, r3
 8029b3e:	9203      	str	r2, [sp, #12]
 8029b40:	195a      	adds	r2, r3, r5
 8029b42:	18d0      	adds	r0, r2, r3
 8029b44:	00df      	lsls	r7, r3, #3
 8029b46:	1819      	adds	r1, r3, r0
 8029b48:	463c      	mov	r4, r7
 8029b4a:	9701      	str	r7, [sp, #4]
 8029b4c:	4457      	add	r7, sl
 8029b4e:	930c      	str	r3, [sp, #48]	; 0x30
 8029b50:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029b54:	011b      	lsls	r3, r3, #4
 8029b56:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029b5a:	eb07 0c04 	add.w	ip, r7, r4
 8029b5e:	9c00      	ldr	r4, [sp, #0]
 8029b60:	9302      	str	r3, [sp, #8]
 8029b62:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029b66:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029b6a:	3204      	adds	r2, #4
 8029b6c:	3104      	adds	r1, #4
 8029b6e:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8029b72:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029b76:	f04f 0800 	mov.w	r8, #0
 8029b7a:	eddc 7a00 	vldr	s15, [ip]
 8029b7e:	edd7 6a00 	vldr	s13, [r7]
 8029b82:	edd6 3a00 	vldr	s7, [r6]
 8029b86:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029b8a:	edd5 4a00 	vldr	s9, [r5]
 8029b8e:	ed90 2a00 	vldr	s4, [r0]
 8029b92:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029b96:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029b9a:	ee77 8a82 	vadd.f32	s17, s15, s4
 8029b9e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8029ba2:	ee76 1a87 	vadd.f32	s3, s13, s14
 8029ba6:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029baa:	ee31 6a84 	vadd.f32	s12, s3, s8
 8029bae:	ee33 5a28 	vadd.f32	s10, s6, s17
 8029bb2:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8029bb6:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029bba:	ee35 5a46 	vsub.f32	s10, s10, s12
 8029bbe:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8029bc2:	ed85 5a00 	vstr	s10, [r5]
 8029bc6:	ed96 1a01 	vldr	s2, [r6, #4]
 8029bca:	edd7 5a01 	vldr	s11, [r7, #4]
 8029bce:	ed92 aa00 	vldr	s20, [r2]
 8029bd2:	ed91 6a00 	vldr	s12, [r1]
 8029bd6:	ed9e 9a00 	vldr	s18, [lr]
 8029bda:	ed95 5a01 	vldr	s10, [r5, #4]
 8029bde:	eddc 6a01 	vldr	s13, [ip, #4]
 8029be2:	edd0 9a01 	vldr	s19, [r0, #4]
 8029be6:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029bea:	ee71 2a46 	vsub.f32	s5, s2, s12
 8029bee:	ee75 3aca 	vsub.f32	s7, s11, s20
 8029bf2:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029bf6:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029bfa:	ee37 7a20 	vadd.f32	s14, s14, s1
 8029bfe:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8029c02:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029c06:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029c0a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8029c0e:	ee39 5a45 	vsub.f32	s10, s18, s10
 8029c12:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029c16:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029c1a:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8029c1e:	ee31 6a06 	vadd.f32	s12, s2, s12
 8029c22:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029c26:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029c2a:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8029c2e:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8029c32:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029c36:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029c3a:	ee75 8a86 	vadd.f32	s17, s11, s12
 8029c3e:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8029c42:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029c46:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029c4a:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029c4e:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8029c52:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029c56:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029c5a:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029c5e:	ee75 4a22 	vadd.f32	s9, s10, s5
 8029c62:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029c66:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029c6a:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029c6e:	ee75 2a87 	vadd.f32	s5, s11, s14
 8029c72:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029c76:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029c7a:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029c7e:	ee33 2a80 	vadd.f32	s4, s7, s0
 8029c82:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029c86:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029c8a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029c8e:	ee31 1a68 	vsub.f32	s2, s2, s17
 8029c92:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029c96:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029c9a:	ee74 4a85 	vadd.f32	s9, s9, s10
 8029c9e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8029ca2:	44d8      	add	r8, fp
 8029ca4:	45c1      	cmp	r9, r8
 8029ca6:	ed8e 9a00 	vstr	s18, [lr]
 8029caa:	ed85 1a01 	vstr	s2, [r5, #4]
 8029cae:	449e      	add	lr, r3
 8029cb0:	ed8c 8a00 	vstr	s16, [ip]
 8029cb4:	441d      	add	r5, r3
 8029cb6:	ed80 6a00 	vstr	s12, [r0]
 8029cba:	edcc 0a01 	vstr	s1, [ip, #4]
 8029cbe:	ed80 4a01 	vstr	s8, [r0, #4]
 8029cc2:	449c      	add	ip, r3
 8029cc4:	ed87 2a00 	vstr	s4, [r7]
 8029cc8:	4418      	add	r0, r3
 8029cca:	ed41 3a01 	vstr	s7, [r1, #-4]
 8029cce:	ed42 2a01 	vstr	s5, [r2, #-4]
 8029cd2:	ed86 7a00 	vstr	s14, [r6]
 8029cd6:	ed87 3a01 	vstr	s6, [r7, #4]
 8029cda:	edc1 4a00 	vstr	s9, [r1]
 8029cde:	441f      	add	r7, r3
 8029ce0:	edc2 5a00 	vstr	s11, [r2]
 8029ce4:	4419      	add	r1, r3
 8029ce6:	edc6 6a01 	vstr	s13, [r6, #4]
 8029cea:	441a      	add	r2, r3
 8029cec:	441e      	add	r6, r3
 8029cee:	f63f af44 	bhi.w	8029b7a <arm_radix8_butterfly_f32+0x66>
 8029cf2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029cf4:	2907      	cmp	r1, #7
 8029cf6:	4620      	mov	r0, r4
 8029cf8:	f240 81e9 	bls.w	802a0ce <arm_radix8_butterfly_f32+0x5ba>
 8029cfc:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029d00:	193e      	adds	r6, r7, r4
 8029d02:	1935      	adds	r5, r6, r4
 8029d04:	9c03      	ldr	r4, [sp, #12]
 8029d06:	9000      	str	r0, [sp, #0]
 8029d08:	4622      	mov	r2, r4
 8029d0a:	3201      	adds	r2, #1
 8029d0c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029d10:	9900      	ldr	r1, [sp, #0]
 8029d12:	1828      	adds	r0, r5, r0
 8029d14:	eb00 0e01 	add.w	lr, r0, r1
 8029d18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029d1a:	440a      	add	r2, r1
 8029d1c:	eb04 0c01 	add.w	ip, r4, r1
 8029d20:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029d24:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029d28:	9a00      	ldr	r2, [sp, #0]
 8029d2a:	940f      	str	r4, [sp, #60]	; 0x3c
 8029d2c:	00ed      	lsls	r5, r5, #3
 8029d2e:	9511      	str	r5, [sp, #68]	; 0x44
 8029d30:	00d5      	lsls	r5, r2, #3
 8029d32:	950d      	str	r5, [sp, #52]	; 0x34
 8029d34:	9d01      	ldr	r5, [sp, #4]
 8029d36:	3508      	adds	r5, #8
 8029d38:	9516      	str	r5, [sp, #88]	; 0x58
 8029d3a:	9d02      	ldr	r5, [sp, #8]
 8029d3c:	3508      	adds	r5, #8
 8029d3e:	0114      	lsls	r4, r2, #4
 8029d40:	9517      	str	r5, [sp, #92]	; 0x5c
 8029d42:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029d44:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029d46:	940e      	str	r4, [sp, #56]	; 0x38
 8029d48:	00c0      	lsls	r0, r0, #3
 8029d4a:	9010      	str	r0, [sp, #64]	; 0x40
 8029d4c:	18aa      	adds	r2, r5, r2
 8029d4e:	9207      	str	r2, [sp, #28]
 8029d50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029d52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029d54:	18aa      	adds	r2, r5, r2
 8029d56:	9208      	str	r2, [sp, #32]
 8029d58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029d5a:	18aa      	adds	r2, r5, r2
 8029d5c:	9209      	str	r2, [sp, #36]	; 0x24
 8029d5e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029d62:	f10e 0204 	add.w	r2, lr, #4
 8029d66:	920a      	str	r2, [sp, #40]	; 0x28
 8029d68:	00c9      	lsls	r1, r1, #3
 8029d6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029d6c:	310c      	adds	r1, #12
 8029d6e:	00f6      	lsls	r6, r6, #3
 8029d70:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029d74:	9114      	str	r1, [sp, #80]	; 0x50
 8029d76:	18a9      	adds	r1, r5, r2
 8029d78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029d7a:	9612      	str	r6, [sp, #72]	; 0x48
 8029d7c:	00ff      	lsls	r7, r7, #3
 8029d7e:	19ae      	adds	r6, r5, r6
 8029d80:	3008      	adds	r0, #8
 8029d82:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029d86:	9606      	str	r6, [sp, #24]
 8029d88:	9019      	str	r0, [sp, #100]	; 0x64
 8029d8a:	18aa      	adds	r2, r5, r2
 8029d8c:	0164      	lsls	r4, r4, #5
 8029d8e:	19ee      	adds	r6, r5, r7
 8029d90:	f10c 000c 	add.w	r0, ip, #12
 8029d94:	9713      	str	r7, [sp, #76]	; 0x4c
 8029d96:	9604      	str	r6, [sp, #16]
 8029d98:	9015      	str	r0, [sp, #84]	; 0x54
 8029d9a:	9103      	str	r1, [sp, #12]
 8029d9c:	9205      	str	r2, [sp, #20]
 8029d9e:	f104 0208 	add.w	r2, r4, #8
 8029da2:	9218      	str	r2, [sp, #96]	; 0x60
 8029da4:	f04f 0801 	mov.w	r8, #1
 8029da8:	2200      	movs	r2, #0
 8029daa:	f102 0108 	add.w	r1, r2, #8
 8029dae:	460f      	mov	r7, r1
 8029db0:	910b      	str	r1, [sp, #44]	; 0x2c
 8029db2:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029db4:	188e      	adds	r6, r1, r2
 8029db6:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029db8:	188d      	adds	r5, r1, r2
 8029dba:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029dbc:	188c      	adds	r4, r1, r2
 8029dbe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029dc0:	1888      	adds	r0, r1, r2
 8029dc2:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029dc4:	eb01 0c02 	add.w	ip, r1, r2
 8029dc8:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029dca:	440a      	add	r2, r1
 8029dcc:	9903      	ldr	r1, [sp, #12]
 8029dce:	edd1 fa00 	vldr	s31, [r1]
 8029dd2:	9905      	ldr	r1, [sp, #20]
 8029dd4:	ed91 fa00 	vldr	s30, [r1]
 8029dd8:	9904      	ldr	r1, [sp, #16]
 8029dda:	edd1 ea00 	vldr	s29, [r1]
 8029dde:	9906      	ldr	r1, [sp, #24]
 8029de0:	ed91 ea00 	vldr	s28, [r1]
 8029de4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029de6:	edd1 da00 	vldr	s27, [r1]
 8029dea:	9908      	ldr	r1, [sp, #32]
 8029dec:	ed91 da00 	vldr	s26, [r1]
 8029df0:	9907      	ldr	r1, [sp, #28]
 8029df2:	edd1 ca00 	vldr	s25, [r1]
 8029df6:	9903      	ldr	r1, [sp, #12]
 8029df8:	ed91 ca01 	vldr	s24, [r1, #4]
 8029dfc:	9905      	ldr	r1, [sp, #20]
 8029dfe:	edd1 ba01 	vldr	s23, [r1, #4]
 8029e02:	9904      	ldr	r1, [sp, #16]
 8029e04:	edd1 aa01 	vldr	s21, [r1, #4]
 8029e08:	9906      	ldr	r1, [sp, #24]
 8029e0a:	ed91 aa01 	vldr	s20, [r1, #4]
 8029e0e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029e10:	edd1 7a01 	vldr	s15, [r1, #4]
 8029e14:	9908      	ldr	r1, [sp, #32]
 8029e16:	edcd 7a00 	vstr	s15, [sp]
 8029e1a:	edd1 7a01 	vldr	s15, [r1, #4]
 8029e1e:	9907      	ldr	r1, [sp, #28]
 8029e20:	edcd 7a01 	vstr	s15, [sp, #4]
 8029e24:	edd1 7a01 	vldr	s15, [r1, #4]
 8029e28:	eb0a 0e07 	add.w	lr, sl, r7
 8029e2c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029e2e:	edcd 7a02 	vstr	s15, [sp, #8]
 8029e32:	eb0c 010a 	add.w	r1, ip, sl
 8029e36:	4456      	add	r6, sl
 8029e38:	4455      	add	r5, sl
 8029e3a:	4454      	add	r4, sl
 8029e3c:	4450      	add	r0, sl
 8029e3e:	4452      	add	r2, sl
 8029e40:	46c4      	mov	ip, r8
 8029e42:	e001      	b.n	8029e48 <arm_radix8_butterfly_f32+0x334>
 8029e44:	3f3504f3 	.word	0x3f3504f3
 8029e48:	ed96 5a00 	vldr	s10, [r6]
 8029e4c:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029e50:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029e54:	edd0 7a00 	vldr	s15, [r0]
 8029e58:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029e5c:	edde 3a00 	vldr	s7, [lr]
 8029e60:	ed94 3a00 	vldr	s6, [r4]
 8029e64:	ed95 2a00 	vldr	s4, [r5]
 8029e68:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029e6c:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029e70:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029e74:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029e78:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029e7c:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029e80:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029e84:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029e88:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029e8c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e90:	ed8e 6a00 	vstr	s12, [lr]
 8029e94:	edd0 8a01 	vldr	s17, [r0, #4]
 8029e98:	ed95 9a01 	vldr	s18, [r5, #4]
 8029e9c:	edd1 2a00 	vldr	s5, [r1]
 8029ea0:	ed97 7a00 	vldr	s14, [r7]
 8029ea4:	edd4 0a01 	vldr	s1, [r4, #4]
 8029ea8:	ed96 6a01 	vldr	s12, [r6, #4]
 8029eac:	edd2 5a00 	vldr	s11, [r2]
 8029eb0:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029eb4:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029eb8:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029ebc:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029ec0:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029ec4:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029ec8:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029ecc:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029ed0:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029ed4:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029ed8:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029edc:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029ee0:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029ee4:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029ee8:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029eec:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029ef0:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029ef4:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029ef8:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029efc:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029f00:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029f04:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029f08:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029f0c:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029f10:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029f14:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029f18:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029f1c:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029f20:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029f24:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029f28:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029f2c:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029f30:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029f34:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029f38:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029f3c:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029f40:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029f44:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029f48:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029f4c:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029f50:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029f54:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029f58:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029f5c:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029f60:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029f64:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029f68:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029f6c:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029f70:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029f74:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029f78:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029f7c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029f80:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029f84:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029f88:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029f8c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029f90:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029f94:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029f98:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029f9c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029fa0:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029fa4:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029fa8:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029fac:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029fb0:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029fb4:	ed86 3a00 	vstr	s6, [r6]
 8029fb8:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029fbc:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029fc0:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029fc4:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029fc8:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029fcc:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029fd0:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029fd4:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029fd8:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029fdc:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029fe0:	ed9d 4a00 	vldr	s8, [sp]
 8029fe4:	edc6 6a01 	vstr	s13, [r6, #4]
 8029fe8:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029fec:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029ff0:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029ff4:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029ff8:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029ffc:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a000:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a004:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a008:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a00c:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a010:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a014:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a018:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a01c:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a020:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a024:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a028:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a02c:	44dc      	add	ip, fp
 802a02e:	45e1      	cmp	r9, ip
 802a030:	ed84 9a00 	vstr	s18, [r4]
 802a034:	edc4 3a01 	vstr	s7, [r4, #4]
 802a038:	449e      	add	lr, r3
 802a03a:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a03e:	edc2 2a00 	vstr	s5, [r2]
 802a042:	441e      	add	r6, r3
 802a044:	ed85 2a00 	vstr	s4, [r5]
 802a048:	ed85 8a01 	vstr	s16, [r5, #4]
 802a04c:	441c      	add	r4, r3
 802a04e:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a052:	ed87 0a00 	vstr	s0, [r7]
 802a056:	441a      	add	r2, r3
 802a058:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a05c:	edc1 9a00 	vstr	s19, [r1]
 802a060:	441d      	add	r5, r3
 802a062:	edc0 0a00 	vstr	s1, [r0]
 802a066:	441f      	add	r7, r3
 802a068:	ed80 6a01 	vstr	s12, [r0, #4]
 802a06c:	4419      	add	r1, r3
 802a06e:	4418      	add	r0, r3
 802a070:	f63f aeea 	bhi.w	8029e48 <arm_radix8_butterfly_f32+0x334>
 802a074:	9a03      	ldr	r2, [sp, #12]
 802a076:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a078:	440a      	add	r2, r1
 802a07a:	9203      	str	r2, [sp, #12]
 802a07c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a07e:	9a05      	ldr	r2, [sp, #20]
 802a080:	440a      	add	r2, r1
 802a082:	9205      	str	r2, [sp, #20]
 802a084:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a086:	9a04      	ldr	r2, [sp, #16]
 802a088:	440a      	add	r2, r1
 802a08a:	9204      	str	r2, [sp, #16]
 802a08c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a08e:	9a06      	ldr	r2, [sp, #24]
 802a090:	440a      	add	r2, r1
 802a092:	9206      	str	r2, [sp, #24]
 802a094:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a096:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a098:	440a      	add	r2, r1
 802a09a:	9209      	str	r2, [sp, #36]	; 0x24
 802a09c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a09e:	9a08      	ldr	r2, [sp, #32]
 802a0a0:	440a      	add	r2, r1
 802a0a2:	9208      	str	r2, [sp, #32]
 802a0a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a0a6:	9a07      	ldr	r2, [sp, #28]
 802a0a8:	440a      	add	r2, r1
 802a0aa:	9207      	str	r2, [sp, #28]
 802a0ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a0ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a0b0:	f108 0801 	add.w	r8, r8, #1
 802a0b4:	3208      	adds	r2, #8
 802a0b6:	4588      	cmp	r8, r1
 802a0b8:	920a      	str	r2, [sp, #40]	; 0x28
 802a0ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a0bc:	f47f ae75 	bne.w	8029daa <arm_radix8_butterfly_f32+0x296>
 802a0c0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a0c4:	9300      	str	r3, [sp, #0]
 802a0c6:	46c3      	mov	fp, r8
 802a0c8:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802a0cc:	e532      	b.n	8029b34 <arm_radix8_butterfly_f32+0x20>
 802a0ce:	b01d      	add	sp, #116	; 0x74
 802a0d0:	ecbd 8b10 	vpop	{d8-d15}
 802a0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a0d8 <__aeabi_atexit>:
 802a0d8:	460b      	mov	r3, r1
 802a0da:	4601      	mov	r1, r0
 802a0dc:	4618      	mov	r0, r3
 802a0de:	f000 bef3 	b.w	802aec8 <__cxa_atexit>

0802a0e2 <_ZdlPvj>:
 802a0e2:	f000 b812 	b.w	802a10a <_ZdlPv>

0802a0e6 <__cxa_guard_acquire>:
 802a0e6:	6803      	ldr	r3, [r0, #0]
 802a0e8:	07db      	lsls	r3, r3, #31
 802a0ea:	d406      	bmi.n	802a0fa <__cxa_guard_acquire+0x14>
 802a0ec:	7843      	ldrb	r3, [r0, #1]
 802a0ee:	b103      	cbz	r3, 802a0f2 <__cxa_guard_acquire+0xc>
 802a0f0:	deff      	udf	#255	; 0xff
 802a0f2:	2301      	movs	r3, #1
 802a0f4:	7043      	strb	r3, [r0, #1]
 802a0f6:	4618      	mov	r0, r3
 802a0f8:	4770      	bx	lr
 802a0fa:	2000      	movs	r0, #0
 802a0fc:	4770      	bx	lr

0802a0fe <__cxa_guard_release>:
 802a0fe:	2301      	movs	r3, #1
 802a100:	6003      	str	r3, [r0, #0]
 802a102:	4770      	bx	lr

0802a104 <__cxa_pure_virtual>:
 802a104:	b508      	push	{r3, lr}
 802a106:	f000 f80f 	bl	802a128 <_ZSt9terminatev>

0802a10a <_ZdlPv>:
 802a10a:	f000 be29 	b.w	802ad60 <free>

0802a10e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a10e:	b508      	push	{r3, lr}
 802a110:	4780      	blx	r0
 802a112:	f000 fdf1 	bl	802acf8 <abort>
	...

0802a118 <_ZSt13get_terminatev>:
 802a118:	4b02      	ldr	r3, [pc, #8]	; (802a124 <_ZSt13get_terminatev+0xc>)
 802a11a:	6818      	ldr	r0, [r3, #0]
 802a11c:	f3bf 8f5b 	dmb	ish
 802a120:	4770      	bx	lr
 802a122:	bf00      	nop
 802a124:	20000104 	.word	0x20000104

0802a128 <_ZSt9terminatev>:
 802a128:	b508      	push	{r3, lr}
 802a12a:	f7ff fff5 	bl	802a118 <_ZSt13get_terminatev>
 802a12e:	f7ff ffee 	bl	802a10e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a134 <sqrtf>:
 802a134:	b508      	push	{r3, lr}
 802a136:	ed2d 8b02 	vpush	{d8}
 802a13a:	eeb0 8a40 	vmov.f32	s16, s0
 802a13e:	f000 f8a1 	bl	802a284 <__ieee754_sqrtf>
 802a142:	eeb4 8a48 	vcmp.f32	s16, s16
 802a146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a14a:	d60c      	bvs.n	802a166 <sqrtf+0x32>
 802a14c:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a16c <sqrtf+0x38>
 802a150:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802a154:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a158:	d505      	bpl.n	802a166 <sqrtf+0x32>
 802a15a:	f001 f8d3 	bl	802b304 <__errno>
 802a15e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a162:	2321      	movs	r3, #33	; 0x21
 802a164:	6003      	str	r3, [r0, #0]
 802a166:	ecbd 8b02 	vpop	{d8}
 802a16a:	bd08      	pop	{r3, pc}
 802a16c:	00000000 	.word	0x00000000

0802a170 <cosf>:
 802a170:	ee10 3a10 	vmov	r3, s0
 802a174:	b507      	push	{r0, r1, r2, lr}
 802a176:	4a1e      	ldr	r2, [pc, #120]	; (802a1f0 <cosf+0x80>)
 802a178:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a17c:	4293      	cmp	r3, r2
 802a17e:	dc06      	bgt.n	802a18e <cosf+0x1e>
 802a180:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a1f4 <cosf+0x84>
 802a184:	b003      	add	sp, #12
 802a186:	f85d eb04 	ldr.w	lr, [sp], #4
 802a18a:	f000 b903 	b.w	802a394 <__kernel_cosf>
 802a18e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a192:	db04      	blt.n	802a19e <cosf+0x2e>
 802a194:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a198:	b003      	add	sp, #12
 802a19a:	f85d fb04 	ldr.w	pc, [sp], #4
 802a19e:	4668      	mov	r0, sp
 802a1a0:	f000 f99e 	bl	802a4e0 <__ieee754_rem_pio2f>
 802a1a4:	f000 0003 	and.w	r0, r0, #3
 802a1a8:	2801      	cmp	r0, #1
 802a1aa:	d009      	beq.n	802a1c0 <cosf+0x50>
 802a1ac:	2802      	cmp	r0, #2
 802a1ae:	d010      	beq.n	802a1d2 <cosf+0x62>
 802a1b0:	b9b0      	cbnz	r0, 802a1e0 <cosf+0x70>
 802a1b2:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1b6:	ed9d 0a00 	vldr	s0, [sp]
 802a1ba:	f000 f8eb 	bl	802a394 <__kernel_cosf>
 802a1be:	e7eb      	b.n	802a198 <cosf+0x28>
 802a1c0:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1c4:	ed9d 0a00 	vldr	s0, [sp]
 802a1c8:	f000 f942 	bl	802a450 <__kernel_sinf>
 802a1cc:	eeb1 0a40 	vneg.f32	s0, s0
 802a1d0:	e7e2      	b.n	802a198 <cosf+0x28>
 802a1d2:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1d6:	ed9d 0a00 	vldr	s0, [sp]
 802a1da:	f000 f8db 	bl	802a394 <__kernel_cosf>
 802a1de:	e7f5      	b.n	802a1cc <cosf+0x5c>
 802a1e0:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1e4:	ed9d 0a00 	vldr	s0, [sp]
 802a1e8:	2001      	movs	r0, #1
 802a1ea:	f000 f931 	bl	802a450 <__kernel_sinf>
 802a1ee:	e7d3      	b.n	802a198 <cosf+0x28>
 802a1f0:	3f490fd8 	.word	0x3f490fd8
 802a1f4:	00000000 	.word	0x00000000

0802a1f8 <sinf>:
 802a1f8:	ee10 3a10 	vmov	r3, s0
 802a1fc:	b507      	push	{r0, r1, r2, lr}
 802a1fe:	4a1f      	ldr	r2, [pc, #124]	; (802a27c <sinf+0x84>)
 802a200:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a204:	4293      	cmp	r3, r2
 802a206:	dc07      	bgt.n	802a218 <sinf+0x20>
 802a208:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a280 <sinf+0x88>
 802a20c:	2000      	movs	r0, #0
 802a20e:	b003      	add	sp, #12
 802a210:	f85d eb04 	ldr.w	lr, [sp], #4
 802a214:	f000 b91c 	b.w	802a450 <__kernel_sinf>
 802a218:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a21c:	db04      	blt.n	802a228 <sinf+0x30>
 802a21e:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a222:	b003      	add	sp, #12
 802a224:	f85d fb04 	ldr.w	pc, [sp], #4
 802a228:	4668      	mov	r0, sp
 802a22a:	f000 f959 	bl	802a4e0 <__ieee754_rem_pio2f>
 802a22e:	f000 0003 	and.w	r0, r0, #3
 802a232:	2801      	cmp	r0, #1
 802a234:	d00a      	beq.n	802a24c <sinf+0x54>
 802a236:	2802      	cmp	r0, #2
 802a238:	d00f      	beq.n	802a25a <sinf+0x62>
 802a23a:	b9c0      	cbnz	r0, 802a26e <sinf+0x76>
 802a23c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a240:	ed9d 0a00 	vldr	s0, [sp]
 802a244:	2001      	movs	r0, #1
 802a246:	f000 f903 	bl	802a450 <__kernel_sinf>
 802a24a:	e7ea      	b.n	802a222 <sinf+0x2a>
 802a24c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a250:	ed9d 0a00 	vldr	s0, [sp]
 802a254:	f000 f89e 	bl	802a394 <__kernel_cosf>
 802a258:	e7e3      	b.n	802a222 <sinf+0x2a>
 802a25a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a25e:	ed9d 0a00 	vldr	s0, [sp]
 802a262:	2001      	movs	r0, #1
 802a264:	f000 f8f4 	bl	802a450 <__kernel_sinf>
 802a268:	eeb1 0a40 	vneg.f32	s0, s0
 802a26c:	e7d9      	b.n	802a222 <sinf+0x2a>
 802a26e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a272:	ed9d 0a00 	vldr	s0, [sp]
 802a276:	f000 f88d 	bl	802a394 <__kernel_cosf>
 802a27a:	e7f5      	b.n	802a268 <sinf+0x70>
 802a27c:	3f490fd8 	.word	0x3f490fd8
 802a280:	00000000 	.word	0x00000000

0802a284 <__ieee754_sqrtf>:
 802a284:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a288:	4770      	bx	lr
	...

0802a28c <ceilf>:
 802a28c:	ee10 3a10 	vmov	r3, s0
 802a290:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a294:	3a7f      	subs	r2, #127	; 0x7f
 802a296:	2a16      	cmp	r2, #22
 802a298:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a29c:	dc2a      	bgt.n	802a2f4 <ceilf+0x68>
 802a29e:	2a00      	cmp	r2, #0
 802a2a0:	da11      	bge.n	802a2c6 <ceilf+0x3a>
 802a2a2:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a308 <ceilf+0x7c>
 802a2a6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2b2:	dd05      	ble.n	802a2c0 <ceilf+0x34>
 802a2b4:	2b00      	cmp	r3, #0
 802a2b6:	db23      	blt.n	802a300 <ceilf+0x74>
 802a2b8:	2900      	cmp	r1, #0
 802a2ba:	bf18      	it	ne
 802a2bc:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a2c0:	ee00 3a10 	vmov	s0, r3
 802a2c4:	4770      	bx	lr
 802a2c6:	4911      	ldr	r1, [pc, #68]	; (802a30c <ceilf+0x80>)
 802a2c8:	4111      	asrs	r1, r2
 802a2ca:	420b      	tst	r3, r1
 802a2cc:	d0fa      	beq.n	802a2c4 <ceilf+0x38>
 802a2ce:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a308 <ceilf+0x7c>
 802a2d2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2de:	ddef      	ble.n	802a2c0 <ceilf+0x34>
 802a2e0:	2b00      	cmp	r3, #0
 802a2e2:	bfc2      	ittt	gt
 802a2e4:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a2e8:	fa40 f202 	asrgt.w	r2, r0, r2
 802a2ec:	189b      	addgt	r3, r3, r2
 802a2ee:	ea23 0301 	bic.w	r3, r3, r1
 802a2f2:	e7e5      	b.n	802a2c0 <ceilf+0x34>
 802a2f4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a2f8:	d3e4      	bcc.n	802a2c4 <ceilf+0x38>
 802a2fa:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a2fe:	4770      	bx	lr
 802a300:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a304:	e7dc      	b.n	802a2c0 <ceilf+0x34>
 802a306:	bf00      	nop
 802a308:	7149f2ca 	.word	0x7149f2ca
 802a30c:	007fffff 	.word	0x007fffff

0802a310 <floorf>:
 802a310:	ee10 3a10 	vmov	r3, s0
 802a314:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a318:	3a7f      	subs	r2, #127	; 0x7f
 802a31a:	2a16      	cmp	r2, #22
 802a31c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a320:	dc2a      	bgt.n	802a378 <floorf+0x68>
 802a322:	2a00      	cmp	r2, #0
 802a324:	da11      	bge.n	802a34a <floorf+0x3a>
 802a326:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a388 <floorf+0x78>
 802a32a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a32e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a336:	dd05      	ble.n	802a344 <floorf+0x34>
 802a338:	2b00      	cmp	r3, #0
 802a33a:	da23      	bge.n	802a384 <floorf+0x74>
 802a33c:	4a13      	ldr	r2, [pc, #76]	; (802a38c <floorf+0x7c>)
 802a33e:	2900      	cmp	r1, #0
 802a340:	bf18      	it	ne
 802a342:	4613      	movne	r3, r2
 802a344:	ee00 3a10 	vmov	s0, r3
 802a348:	4770      	bx	lr
 802a34a:	4911      	ldr	r1, [pc, #68]	; (802a390 <floorf+0x80>)
 802a34c:	4111      	asrs	r1, r2
 802a34e:	420b      	tst	r3, r1
 802a350:	d0fa      	beq.n	802a348 <floorf+0x38>
 802a352:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a388 <floorf+0x78>
 802a356:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a35a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a35e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a362:	ddef      	ble.n	802a344 <floorf+0x34>
 802a364:	2b00      	cmp	r3, #0
 802a366:	bfbe      	ittt	lt
 802a368:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a36c:	fa40 f202 	asrlt.w	r2, r0, r2
 802a370:	189b      	addlt	r3, r3, r2
 802a372:	ea23 0301 	bic.w	r3, r3, r1
 802a376:	e7e5      	b.n	802a344 <floorf+0x34>
 802a378:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a37c:	d3e4      	bcc.n	802a348 <floorf+0x38>
 802a37e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a382:	4770      	bx	lr
 802a384:	2300      	movs	r3, #0
 802a386:	e7dd      	b.n	802a344 <floorf+0x34>
 802a388:	7149f2ca 	.word	0x7149f2ca
 802a38c:	bf800000 	.word	0xbf800000
 802a390:	007fffff 	.word	0x007fffff

0802a394 <__kernel_cosf>:
 802a394:	ee10 3a10 	vmov	r3, s0
 802a398:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a39c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a3a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a3a4:	da05      	bge.n	802a3b2 <__kernel_cosf+0x1e>
 802a3a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a3aa:	ee17 2a90 	vmov	r2, s15
 802a3ae:	2a00      	cmp	r2, #0
 802a3b0:	d03b      	beq.n	802a42a <__kernel_cosf+0x96>
 802a3b2:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a3b6:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a430 <__kernel_cosf+0x9c>
 802a3ba:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a434 <__kernel_cosf+0xa0>
 802a3be:	4a1e      	ldr	r2, [pc, #120]	; (802a438 <__kernel_cosf+0xa4>)
 802a3c0:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a3c4:	4293      	cmp	r3, r2
 802a3c6:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a43c <__kernel_cosf+0xa8>
 802a3ca:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a3ce:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a440 <__kernel_cosf+0xac>
 802a3d2:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a3d6:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a444 <__kernel_cosf+0xb0>
 802a3da:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a3de:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a448 <__kernel_cosf+0xb4>
 802a3e2:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a3e6:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a3ea:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a3ee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a3f2:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a3f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a3fa:	dc04      	bgt.n	802a406 <__kernel_cosf+0x72>
 802a3fc:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a400:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a404:	4770      	bx	lr
 802a406:	4a11      	ldr	r2, [pc, #68]	; (802a44c <__kernel_cosf+0xb8>)
 802a408:	4293      	cmp	r3, r2
 802a40a:	bfda      	itte	le
 802a40c:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a410:	ee07 3a10 	vmovle	s14, r3
 802a414:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a418:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a41c:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a420:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a424:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a428:	4770      	bx	lr
 802a42a:	eeb0 0a66 	vmov.f32	s0, s13
 802a42e:	4770      	bx	lr
 802a430:	ad47d74e 	.word	0xad47d74e
 802a434:	310f74f6 	.word	0x310f74f6
 802a438:	3e999999 	.word	0x3e999999
 802a43c:	b493f27c 	.word	0xb493f27c
 802a440:	37d00d01 	.word	0x37d00d01
 802a444:	bab60b61 	.word	0xbab60b61
 802a448:	3d2aaaab 	.word	0x3d2aaaab
 802a44c:	3f480000 	.word	0x3f480000

0802a450 <__kernel_sinf>:
 802a450:	ee10 3a10 	vmov	r3, s0
 802a454:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a458:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a45c:	da04      	bge.n	802a468 <__kernel_sinf+0x18>
 802a45e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a462:	ee17 3a90 	vmov	r3, s15
 802a466:	b35b      	cbz	r3, 802a4c0 <__kernel_sinf+0x70>
 802a468:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a46c:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a4c4 <__kernel_sinf+0x74>
 802a470:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a4c8 <__kernel_sinf+0x78>
 802a474:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a478:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a4cc <__kernel_sinf+0x7c>
 802a47c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a480:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a4d0 <__kernel_sinf+0x80>
 802a484:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a488:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a4d4 <__kernel_sinf+0x84>
 802a48c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a490:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a494:	b930      	cbnz	r0, 802a4a4 <__kernel_sinf+0x54>
 802a496:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a4d8 <__kernel_sinf+0x88>
 802a49a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a49e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a4a2:	4770      	bx	lr
 802a4a4:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a4a8:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a4ac:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a4b0:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a4b4:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a4dc <__kernel_sinf+0x8c>
 802a4b8:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a4bc:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a4c0:	4770      	bx	lr
 802a4c2:	bf00      	nop
 802a4c4:	2f2ec9d3 	.word	0x2f2ec9d3
 802a4c8:	b2d72f34 	.word	0xb2d72f34
 802a4cc:	3638ef1b 	.word	0x3638ef1b
 802a4d0:	b9500d01 	.word	0xb9500d01
 802a4d4:	3c088889 	.word	0x3c088889
 802a4d8:	be2aaaab 	.word	0xbe2aaaab
 802a4dc:	3e2aaaab 	.word	0x3e2aaaab

0802a4e0 <__ieee754_rem_pio2f>:
 802a4e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a4e2:	ee10 6a10 	vmov	r6, s0
 802a4e6:	4b86      	ldr	r3, [pc, #536]	; (802a700 <__ieee754_rem_pio2f+0x220>)
 802a4e8:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a4ec:	429d      	cmp	r5, r3
 802a4ee:	b087      	sub	sp, #28
 802a4f0:	4604      	mov	r4, r0
 802a4f2:	dc05      	bgt.n	802a500 <__ieee754_rem_pio2f+0x20>
 802a4f4:	2300      	movs	r3, #0
 802a4f6:	ed80 0a00 	vstr	s0, [r0]
 802a4fa:	6043      	str	r3, [r0, #4]
 802a4fc:	2000      	movs	r0, #0
 802a4fe:	e020      	b.n	802a542 <__ieee754_rem_pio2f+0x62>
 802a500:	4b80      	ldr	r3, [pc, #512]	; (802a704 <__ieee754_rem_pio2f+0x224>)
 802a502:	429d      	cmp	r5, r3
 802a504:	dc38      	bgt.n	802a578 <__ieee754_rem_pio2f+0x98>
 802a506:	2e00      	cmp	r6, #0
 802a508:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a708 <__ieee754_rem_pio2f+0x228>
 802a50c:	4b7f      	ldr	r3, [pc, #508]	; (802a70c <__ieee754_rem_pio2f+0x22c>)
 802a50e:	f025 050f 	bic.w	r5, r5, #15
 802a512:	dd18      	ble.n	802a546 <__ieee754_rem_pio2f+0x66>
 802a514:	429d      	cmp	r5, r3
 802a516:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a51a:	bf09      	itett	eq
 802a51c:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a710 <__ieee754_rem_pio2f+0x230>
 802a520:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a714 <__ieee754_rem_pio2f+0x234>
 802a524:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a528:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a718 <__ieee754_rem_pio2f+0x238>
 802a52c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a530:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a534:	edc0 6a00 	vstr	s13, [r0]
 802a538:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a53c:	edc0 7a01 	vstr	s15, [r0, #4]
 802a540:	2001      	movs	r0, #1
 802a542:	b007      	add	sp, #28
 802a544:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a546:	429d      	cmp	r5, r3
 802a548:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a54c:	bf09      	itett	eq
 802a54e:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a710 <__ieee754_rem_pio2f+0x230>
 802a552:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a714 <__ieee754_rem_pio2f+0x234>
 802a556:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a55a:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a718 <__ieee754_rem_pio2f+0x238>
 802a55e:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a562:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a566:	edc0 6a00 	vstr	s13, [r0]
 802a56a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a56e:	edc0 7a01 	vstr	s15, [r0, #4]
 802a572:	f04f 30ff 	mov.w	r0, #4294967295
 802a576:	e7e4      	b.n	802a542 <__ieee754_rem_pio2f+0x62>
 802a578:	4b68      	ldr	r3, [pc, #416]	; (802a71c <__ieee754_rem_pio2f+0x23c>)
 802a57a:	429d      	cmp	r5, r3
 802a57c:	dc71      	bgt.n	802a662 <__ieee754_rem_pio2f+0x182>
 802a57e:	f000 f8db 	bl	802a738 <fabsf>
 802a582:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a720 <__ieee754_rem_pio2f+0x240>
 802a586:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a58a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a58e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a592:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a596:	ee17 0a90 	vmov	r0, s15
 802a59a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a708 <__ieee754_rem_pio2f+0x228>
 802a59e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a5a2:	281f      	cmp	r0, #31
 802a5a4:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a714 <__ieee754_rem_pio2f+0x234>
 802a5a8:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a5ac:	eeb1 6a47 	vneg.f32	s12, s14
 802a5b0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a5b4:	ee16 2a90 	vmov	r2, s13
 802a5b8:	dc1c      	bgt.n	802a5f4 <__ieee754_rem_pio2f+0x114>
 802a5ba:	495a      	ldr	r1, [pc, #360]	; (802a724 <__ieee754_rem_pio2f+0x244>)
 802a5bc:	1e47      	subs	r7, r0, #1
 802a5be:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a5c2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a5c6:	428b      	cmp	r3, r1
 802a5c8:	d014      	beq.n	802a5f4 <__ieee754_rem_pio2f+0x114>
 802a5ca:	6022      	str	r2, [r4, #0]
 802a5cc:	ed94 7a00 	vldr	s14, [r4]
 802a5d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a5d4:	2e00      	cmp	r6, #0
 802a5d6:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a5da:	ed84 0a01 	vstr	s0, [r4, #4]
 802a5de:	dab0      	bge.n	802a542 <__ieee754_rem_pio2f+0x62>
 802a5e0:	eeb1 7a47 	vneg.f32	s14, s14
 802a5e4:	eeb1 0a40 	vneg.f32	s0, s0
 802a5e8:	ed84 7a00 	vstr	s14, [r4]
 802a5ec:	ed84 0a01 	vstr	s0, [r4, #4]
 802a5f0:	4240      	negs	r0, r0
 802a5f2:	e7a6      	b.n	802a542 <__ieee754_rem_pio2f+0x62>
 802a5f4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a5f8:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a5fc:	2908      	cmp	r1, #8
 802a5fe:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a602:	dde2      	ble.n	802a5ca <__ieee754_rem_pio2f+0xea>
 802a604:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a710 <__ieee754_rem_pio2f+0x230>
 802a608:	eef0 6a40 	vmov.f32	s13, s0
 802a60c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a610:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a614:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a618:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a718 <__ieee754_rem_pio2f+0x238>
 802a61c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a620:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a624:	ee15 2a90 	vmov	r2, s11
 802a628:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a62c:	1a5b      	subs	r3, r3, r1
 802a62e:	2b19      	cmp	r3, #25
 802a630:	dc04      	bgt.n	802a63c <__ieee754_rem_pio2f+0x15c>
 802a632:	edc4 5a00 	vstr	s11, [r4]
 802a636:	eeb0 0a66 	vmov.f32	s0, s13
 802a63a:	e7c7      	b.n	802a5cc <__ieee754_rem_pio2f+0xec>
 802a63c:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a728 <__ieee754_rem_pio2f+0x248>
 802a640:	eeb0 0a66 	vmov.f32	s0, s13
 802a644:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a648:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a64c:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a72c <__ieee754_rem_pio2f+0x24c>
 802a650:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a654:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a658:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a65c:	ed84 7a00 	vstr	s14, [r4]
 802a660:	e7b4      	b.n	802a5cc <__ieee754_rem_pio2f+0xec>
 802a662:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a666:	db06      	blt.n	802a676 <__ieee754_rem_pio2f+0x196>
 802a668:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a66c:	edc0 7a01 	vstr	s15, [r0, #4]
 802a670:	edc0 7a00 	vstr	s15, [r0]
 802a674:	e742      	b.n	802a4fc <__ieee754_rem_pio2f+0x1c>
 802a676:	15ea      	asrs	r2, r5, #23
 802a678:	3a86      	subs	r2, #134	; 0x86
 802a67a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a67e:	ee07 3a90 	vmov	s15, r3
 802a682:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a686:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a730 <__ieee754_rem_pio2f+0x250>
 802a68a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a68e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a692:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a696:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a69a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a69e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a6a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a6a6:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a6aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a6ae:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6b6:	edcd 7a05 	vstr	s15, [sp, #20]
 802a6ba:	d11e      	bne.n	802a6fa <__ieee754_rem_pio2f+0x21a>
 802a6bc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a6c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6c4:	bf14      	ite	ne
 802a6c6:	2302      	movne	r3, #2
 802a6c8:	2301      	moveq	r3, #1
 802a6ca:	491a      	ldr	r1, [pc, #104]	; (802a734 <__ieee754_rem_pio2f+0x254>)
 802a6cc:	9101      	str	r1, [sp, #4]
 802a6ce:	2102      	movs	r1, #2
 802a6d0:	9100      	str	r1, [sp, #0]
 802a6d2:	a803      	add	r0, sp, #12
 802a6d4:	4621      	mov	r1, r4
 802a6d6:	f000 f89d 	bl	802a814 <__kernel_rem_pio2f>
 802a6da:	2e00      	cmp	r6, #0
 802a6dc:	f6bf af31 	bge.w	802a542 <__ieee754_rem_pio2f+0x62>
 802a6e0:	edd4 7a00 	vldr	s15, [r4]
 802a6e4:	eef1 7a67 	vneg.f32	s15, s15
 802a6e8:	edc4 7a00 	vstr	s15, [r4]
 802a6ec:	edd4 7a01 	vldr	s15, [r4, #4]
 802a6f0:	eef1 7a67 	vneg.f32	s15, s15
 802a6f4:	edc4 7a01 	vstr	s15, [r4, #4]
 802a6f8:	e77a      	b.n	802a5f0 <__ieee754_rem_pio2f+0x110>
 802a6fa:	2303      	movs	r3, #3
 802a6fc:	e7e5      	b.n	802a6ca <__ieee754_rem_pio2f+0x1ea>
 802a6fe:	bf00      	nop
 802a700:	3f490fd8 	.word	0x3f490fd8
 802a704:	4016cbe3 	.word	0x4016cbe3
 802a708:	3fc90f80 	.word	0x3fc90f80
 802a70c:	3fc90fd0 	.word	0x3fc90fd0
 802a710:	37354400 	.word	0x37354400
 802a714:	37354443 	.word	0x37354443
 802a718:	2e85a308 	.word	0x2e85a308
 802a71c:	43490f80 	.word	0x43490f80
 802a720:	3f22f984 	.word	0x3f22f984
 802a724:	08043350 	.word	0x08043350
 802a728:	2e85a300 	.word	0x2e85a300
 802a72c:	248d3132 	.word	0x248d3132
 802a730:	43800000 	.word	0x43800000
 802a734:	080433d0 	.word	0x080433d0

0802a738 <fabsf>:
 802a738:	ee10 3a10 	vmov	r3, s0
 802a73c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a740:	ee00 3a10 	vmov	s0, r3
 802a744:	4770      	bx	lr
	...

0802a748 <scalbnf>:
 802a748:	ee10 3a10 	vmov	r3, s0
 802a74c:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a750:	d02b      	beq.n	802a7aa <scalbnf+0x62>
 802a752:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a756:	d302      	bcc.n	802a75e <scalbnf+0x16>
 802a758:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a75c:	4770      	bx	lr
 802a75e:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a762:	d123      	bne.n	802a7ac <scalbnf+0x64>
 802a764:	4b24      	ldr	r3, [pc, #144]	; (802a7f8 <scalbnf+0xb0>)
 802a766:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a7fc <scalbnf+0xb4>
 802a76a:	4298      	cmp	r0, r3
 802a76c:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a770:	db17      	blt.n	802a7a2 <scalbnf+0x5a>
 802a772:	ee10 3a10 	vmov	r3, s0
 802a776:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a77a:	3a19      	subs	r2, #25
 802a77c:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a780:	4288      	cmp	r0, r1
 802a782:	dd15      	ble.n	802a7b0 <scalbnf+0x68>
 802a784:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a800 <scalbnf+0xb8>
 802a788:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a804 <scalbnf+0xbc>
 802a78c:	ee10 3a10 	vmov	r3, s0
 802a790:	eeb0 7a67 	vmov.f32	s14, s15
 802a794:	2b00      	cmp	r3, #0
 802a796:	bfb8      	it	lt
 802a798:	eef0 7a66 	vmovlt.f32	s15, s13
 802a79c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a7a0:	4770      	bx	lr
 802a7a2:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a808 <scalbnf+0xc0>
 802a7a6:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a7aa:	4770      	bx	lr
 802a7ac:	0dd2      	lsrs	r2, r2, #23
 802a7ae:	e7e5      	b.n	802a77c <scalbnf+0x34>
 802a7b0:	4410      	add	r0, r2
 802a7b2:	28fe      	cmp	r0, #254	; 0xfe
 802a7b4:	dce6      	bgt.n	802a784 <scalbnf+0x3c>
 802a7b6:	2800      	cmp	r0, #0
 802a7b8:	dd06      	ble.n	802a7c8 <scalbnf+0x80>
 802a7ba:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a7be:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a7c2:	ee00 3a10 	vmov	s0, r3
 802a7c6:	4770      	bx	lr
 802a7c8:	f110 0f16 	cmn.w	r0, #22
 802a7cc:	da09      	bge.n	802a7e2 <scalbnf+0x9a>
 802a7ce:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a808 <scalbnf+0xc0>
 802a7d2:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a80c <scalbnf+0xc4>
 802a7d6:	ee10 3a10 	vmov	r3, s0
 802a7da:	eeb0 7a67 	vmov.f32	s14, s15
 802a7de:	2b00      	cmp	r3, #0
 802a7e0:	e7d9      	b.n	802a796 <scalbnf+0x4e>
 802a7e2:	3019      	adds	r0, #25
 802a7e4:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a7e8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a7ec:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a810 <scalbnf+0xc8>
 802a7f0:	ee07 3a90 	vmov	s15, r3
 802a7f4:	e7d7      	b.n	802a7a6 <scalbnf+0x5e>
 802a7f6:	bf00      	nop
 802a7f8:	ffff3cb0 	.word	0xffff3cb0
 802a7fc:	4c000000 	.word	0x4c000000
 802a800:	7149f2ca 	.word	0x7149f2ca
 802a804:	f149f2ca 	.word	0xf149f2ca
 802a808:	0da24260 	.word	0x0da24260
 802a80c:	8da24260 	.word	0x8da24260
 802a810:	33000000 	.word	0x33000000

0802a814 <__kernel_rem_pio2f>:
 802a814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a818:	ed2d 8b04 	vpush	{d8-d9}
 802a81c:	b0d9      	sub	sp, #356	; 0x164
 802a81e:	4688      	mov	r8, r1
 802a820:	9002      	str	r0, [sp, #8]
 802a822:	49b8      	ldr	r1, [pc, #736]	; (802ab04 <__kernel_rem_pio2f+0x2f0>)
 802a824:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a826:	9301      	str	r3, [sp, #4]
 802a828:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a82c:	9901      	ldr	r1, [sp, #4]
 802a82e:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a830:	f101 3bff 	add.w	fp, r1, #4294967295
 802a834:	1d11      	adds	r1, r2, #4
 802a836:	db25      	blt.n	802a884 <__kernel_rem_pio2f+0x70>
 802a838:	1ed0      	subs	r0, r2, #3
 802a83a:	bf48      	it	mi
 802a83c:	1d10      	addmi	r0, r2, #4
 802a83e:	10c0      	asrs	r0, r0, #3
 802a840:	1c45      	adds	r5, r0, #1
 802a842:	00e9      	lsls	r1, r5, #3
 802a844:	eba0 070b 	sub.w	r7, r0, fp
 802a848:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802a84c:	9103      	str	r1, [sp, #12]
 802a84e:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a852:	eb0a 0c0b 	add.w	ip, sl, fp
 802a856:	ae1c      	add	r6, sp, #112	; 0x70
 802a858:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a85c:	2400      	movs	r4, #0
 802a85e:	4564      	cmp	r4, ip
 802a860:	dd12      	ble.n	802a888 <__kernel_rem_pio2f+0x74>
 802a862:	9901      	ldr	r1, [sp, #4]
 802a864:	ac1c      	add	r4, sp, #112	; 0x70
 802a866:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a86a:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a86e:	f04f 0c00 	mov.w	ip, #0
 802a872:	45d4      	cmp	ip, sl
 802a874:	dc27      	bgt.n	802a8c6 <__kernel_rem_pio2f+0xb2>
 802a876:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a87a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802a87e:	4627      	mov	r7, r4
 802a880:	2600      	movs	r6, #0
 802a882:	e016      	b.n	802a8b2 <__kernel_rem_pio2f+0x9e>
 802a884:	2000      	movs	r0, #0
 802a886:	e7db      	b.n	802a840 <__kernel_rem_pio2f+0x2c>
 802a888:	42e7      	cmn	r7, r4
 802a88a:	bf5d      	ittte	pl
 802a88c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a890:	ee07 1a90 	vmovpl	s15, r1
 802a894:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a898:	eef0 7a47 	vmovmi.f32	s15, s14
 802a89c:	ece6 7a01 	vstmia	r6!, {s15}
 802a8a0:	3401      	adds	r4, #1
 802a8a2:	e7dc      	b.n	802a85e <__kernel_rem_pio2f+0x4a>
 802a8a4:	ecfe 6a01 	vldmia	lr!, {s13}
 802a8a8:	ed97 7a00 	vldr	s14, [r7]
 802a8ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a8b0:	3601      	adds	r6, #1
 802a8b2:	455e      	cmp	r6, fp
 802a8b4:	f1a7 0704 	sub.w	r7, r7, #4
 802a8b8:	ddf4      	ble.n	802a8a4 <__kernel_rem_pio2f+0x90>
 802a8ba:	ece9 7a01 	vstmia	r9!, {s15}
 802a8be:	f10c 0c01 	add.w	ip, ip, #1
 802a8c2:	3404      	adds	r4, #4
 802a8c4:	e7d5      	b.n	802a872 <__kernel_rem_pio2f+0x5e>
 802a8c6:	a908      	add	r1, sp, #32
 802a8c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a8cc:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a8d0:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802ab10 <__kernel_rem_pio2f+0x2fc>
 802a8d4:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802ab0c <__kernel_rem_pio2f+0x2f8>
 802a8d8:	9105      	str	r1, [sp, #20]
 802a8da:	9304      	str	r3, [sp, #16]
 802a8dc:	4656      	mov	r6, sl
 802a8de:	00b3      	lsls	r3, r6, #2
 802a8e0:	9306      	str	r3, [sp, #24]
 802a8e2:	ab58      	add	r3, sp, #352	; 0x160
 802a8e4:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a8e8:	ac08      	add	r4, sp, #32
 802a8ea:	ab44      	add	r3, sp, #272	; 0x110
 802a8ec:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a8f0:	46a4      	mov	ip, r4
 802a8f2:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a8f6:	4637      	mov	r7, r6
 802a8f8:	2f00      	cmp	r7, #0
 802a8fa:	f1a0 0004 	sub.w	r0, r0, #4
 802a8fe:	dc4a      	bgt.n	802a996 <__kernel_rem_pio2f+0x182>
 802a900:	4628      	mov	r0, r5
 802a902:	9207      	str	r2, [sp, #28]
 802a904:	f7ff ff20 	bl	802a748 <scalbnf>
 802a908:	eeb0 8a40 	vmov.f32	s16, s0
 802a90c:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a910:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a914:	f7ff fcfc 	bl	802a310 <floorf>
 802a918:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a91c:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a920:	2d00      	cmp	r5, #0
 802a922:	9a07      	ldr	r2, [sp, #28]
 802a924:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a928:	ee17 9a90 	vmov	r9, s15
 802a92c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a930:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a934:	dd41      	ble.n	802a9ba <__kernel_rem_pio2f+0x1a6>
 802a936:	f106 3cff 	add.w	ip, r6, #4294967295
 802a93a:	ab08      	add	r3, sp, #32
 802a93c:	f1c5 0e08 	rsb	lr, r5, #8
 802a940:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a944:	fa47 f00e 	asr.w	r0, r7, lr
 802a948:	4481      	add	r9, r0
 802a94a:	fa00 f00e 	lsl.w	r0, r0, lr
 802a94e:	1a3f      	subs	r7, r7, r0
 802a950:	f1c5 0007 	rsb	r0, r5, #7
 802a954:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a958:	4107      	asrs	r7, r0
 802a95a:	2f00      	cmp	r7, #0
 802a95c:	dd3c      	ble.n	802a9d8 <__kernel_rem_pio2f+0x1c4>
 802a95e:	f04f 0e00 	mov.w	lr, #0
 802a962:	f109 0901 	add.w	r9, r9, #1
 802a966:	4671      	mov	r1, lr
 802a968:	4576      	cmp	r6, lr
 802a96a:	dc67      	bgt.n	802aa3c <__kernel_rem_pio2f+0x228>
 802a96c:	2d00      	cmp	r5, #0
 802a96e:	dd03      	ble.n	802a978 <__kernel_rem_pio2f+0x164>
 802a970:	2d01      	cmp	r5, #1
 802a972:	d074      	beq.n	802aa5e <__kernel_rem_pio2f+0x24a>
 802a974:	2d02      	cmp	r5, #2
 802a976:	d07b      	beq.n	802aa70 <__kernel_rem_pio2f+0x25c>
 802a978:	2f02      	cmp	r7, #2
 802a97a:	d12d      	bne.n	802a9d8 <__kernel_rem_pio2f+0x1c4>
 802a97c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a980:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a984:	b341      	cbz	r1, 802a9d8 <__kernel_rem_pio2f+0x1c4>
 802a986:	4628      	mov	r0, r5
 802a988:	9207      	str	r2, [sp, #28]
 802a98a:	f7ff fedd 	bl	802a748 <scalbnf>
 802a98e:	9a07      	ldr	r2, [sp, #28]
 802a990:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a994:	e020      	b.n	802a9d8 <__kernel_rem_pio2f+0x1c4>
 802a996:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a99a:	3f01      	subs	r7, #1
 802a99c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a9a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a9a4:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a9a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a9ac:	ecac 0a01 	vstmia	ip!, {s0}
 802a9b0:	ed90 0a00 	vldr	s0, [r0]
 802a9b4:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a9b8:	e79e      	b.n	802a8f8 <__kernel_rem_pio2f+0xe4>
 802a9ba:	d105      	bne.n	802a9c8 <__kernel_rem_pio2f+0x1b4>
 802a9bc:	1e70      	subs	r0, r6, #1
 802a9be:	ab08      	add	r3, sp, #32
 802a9c0:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a9c4:	11ff      	asrs	r7, r7, #7
 802a9c6:	e7c8      	b.n	802a95a <__kernel_rem_pio2f+0x146>
 802a9c8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a9cc:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a9d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9d4:	da30      	bge.n	802aa38 <__kernel_rem_pio2f+0x224>
 802a9d6:	2700      	movs	r7, #0
 802a9d8:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a9dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9e0:	f040 809a 	bne.w	802ab18 <__kernel_rem_pio2f+0x304>
 802a9e4:	1e74      	subs	r4, r6, #1
 802a9e6:	46a4      	mov	ip, r4
 802a9e8:	2100      	movs	r1, #0
 802a9ea:	45d4      	cmp	ip, sl
 802a9ec:	da47      	bge.n	802aa7e <__kernel_rem_pio2f+0x26a>
 802a9ee:	2900      	cmp	r1, #0
 802a9f0:	d063      	beq.n	802aaba <__kernel_rem_pio2f+0x2a6>
 802a9f2:	ab08      	add	r3, sp, #32
 802a9f4:	3d08      	subs	r5, #8
 802a9f6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a9fa:	2b00      	cmp	r3, #0
 802a9fc:	d07f      	beq.n	802aafe <__kernel_rem_pio2f+0x2ea>
 802a9fe:	4628      	mov	r0, r5
 802aa00:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802aa04:	f7ff fea0 	bl	802a748 <scalbnf>
 802aa08:	1c63      	adds	r3, r4, #1
 802aa0a:	aa44      	add	r2, sp, #272	; 0x110
 802aa0c:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802ab10 <__kernel_rem_pio2f+0x2fc>
 802aa10:	0099      	lsls	r1, r3, #2
 802aa12:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802aa16:	4623      	mov	r3, r4
 802aa18:	2b00      	cmp	r3, #0
 802aa1a:	f280 80ad 	bge.w	802ab78 <__kernel_rem_pio2f+0x364>
 802aa1e:	4623      	mov	r3, r4
 802aa20:	2b00      	cmp	r3, #0
 802aa22:	f2c0 80cb 	blt.w	802abbc <__kernel_rem_pio2f+0x3a8>
 802aa26:	aa44      	add	r2, sp, #272	; 0x110
 802aa28:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802aa2c:	4e36      	ldr	r6, [pc, #216]	; (802ab08 <__kernel_rem_pio2f+0x2f4>)
 802aa2e:	eddf 7a39 	vldr	s15, [pc, #228]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802aa32:	2000      	movs	r0, #0
 802aa34:	1ae2      	subs	r2, r4, r3
 802aa36:	e0b6      	b.n	802aba6 <__kernel_rem_pio2f+0x392>
 802aa38:	2702      	movs	r7, #2
 802aa3a:	e790      	b.n	802a95e <__kernel_rem_pio2f+0x14a>
 802aa3c:	6820      	ldr	r0, [r4, #0]
 802aa3e:	b949      	cbnz	r1, 802aa54 <__kernel_rem_pio2f+0x240>
 802aa40:	b118      	cbz	r0, 802aa4a <__kernel_rem_pio2f+0x236>
 802aa42:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802aa46:	6020      	str	r0, [r4, #0]
 802aa48:	2001      	movs	r0, #1
 802aa4a:	f10e 0e01 	add.w	lr, lr, #1
 802aa4e:	3404      	adds	r4, #4
 802aa50:	4601      	mov	r1, r0
 802aa52:	e789      	b.n	802a968 <__kernel_rem_pio2f+0x154>
 802aa54:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802aa58:	6020      	str	r0, [r4, #0]
 802aa5a:	4608      	mov	r0, r1
 802aa5c:	e7f5      	b.n	802aa4a <__kernel_rem_pio2f+0x236>
 802aa5e:	1e74      	subs	r4, r6, #1
 802aa60:	ab08      	add	r3, sp, #32
 802aa62:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802aa66:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802aa6a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802aa6e:	e783      	b.n	802a978 <__kernel_rem_pio2f+0x164>
 802aa70:	1e74      	subs	r4, r6, #1
 802aa72:	ab08      	add	r3, sp, #32
 802aa74:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802aa78:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802aa7c:	e7f5      	b.n	802aa6a <__kernel_rem_pio2f+0x256>
 802aa7e:	ab08      	add	r3, sp, #32
 802aa80:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802aa84:	f10c 3cff 	add.w	ip, ip, #4294967295
 802aa88:	4301      	orrs	r1, r0
 802aa8a:	e7ae      	b.n	802a9ea <__kernel_rem_pio2f+0x1d6>
 802aa8c:	3001      	adds	r0, #1
 802aa8e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802aa92:	2f00      	cmp	r7, #0
 802aa94:	d0fa      	beq.n	802aa8c <__kernel_rem_pio2f+0x278>
 802aa96:	9b06      	ldr	r3, [sp, #24]
 802aa98:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802aa9c:	eb0d 0403 	add.w	r4, sp, r3
 802aaa0:	9b01      	ldr	r3, [sp, #4]
 802aaa2:	18f7      	adds	r7, r6, r3
 802aaa4:	ab1c      	add	r3, sp, #112	; 0x70
 802aaa6:	f106 0c01 	add.w	ip, r6, #1
 802aaaa:	3c4c      	subs	r4, #76	; 0x4c
 802aaac:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802aab0:	4430      	add	r0, r6
 802aab2:	4560      	cmp	r0, ip
 802aab4:	da04      	bge.n	802aac0 <__kernel_rem_pio2f+0x2ac>
 802aab6:	4606      	mov	r6, r0
 802aab8:	e711      	b.n	802a8de <__kernel_rem_pio2f+0xca>
 802aaba:	9c05      	ldr	r4, [sp, #20]
 802aabc:	2001      	movs	r0, #1
 802aabe:	e7e6      	b.n	802aa8e <__kernel_rem_pio2f+0x27a>
 802aac0:	9b04      	ldr	r3, [sp, #16]
 802aac2:	f8dd e008 	ldr.w	lr, [sp, #8]
 802aac6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802aaca:	9306      	str	r3, [sp, #24]
 802aacc:	ee07 3a90 	vmov	s15, r3
 802aad0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aad4:	2600      	movs	r6, #0
 802aad6:	ece7 7a01 	vstmia	r7!, {s15}
 802aada:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802aade:	46b9      	mov	r9, r7
 802aae0:	455e      	cmp	r6, fp
 802aae2:	dd04      	ble.n	802aaee <__kernel_rem_pio2f+0x2da>
 802aae4:	ece4 7a01 	vstmia	r4!, {s15}
 802aae8:	f10c 0c01 	add.w	ip, ip, #1
 802aaec:	e7e1      	b.n	802aab2 <__kernel_rem_pio2f+0x29e>
 802aaee:	ecfe 6a01 	vldmia	lr!, {s13}
 802aaf2:	ed39 7a01 	vldmdb	r9!, {s14}
 802aaf6:	3601      	adds	r6, #1
 802aaf8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aafc:	e7f0      	b.n	802aae0 <__kernel_rem_pio2f+0x2cc>
 802aafe:	3c01      	subs	r4, #1
 802ab00:	e777      	b.n	802a9f2 <__kernel_rem_pio2f+0x1de>
 802ab02:	bf00      	nop
 802ab04:	08043714 	.word	0x08043714
 802ab08:	080436e8 	.word	0x080436e8
 802ab0c:	43800000 	.word	0x43800000
 802ab10:	3b800000 	.word	0x3b800000
 802ab14:	00000000 	.word	0x00000000
 802ab18:	9b03      	ldr	r3, [sp, #12]
 802ab1a:	eeb0 0a48 	vmov.f32	s0, s16
 802ab1e:	1a98      	subs	r0, r3, r2
 802ab20:	f7ff fe12 	bl	802a748 <scalbnf>
 802ab24:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802ab0c <__kernel_rem_pio2f+0x2f8>
 802ab28:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802ab2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab30:	db19      	blt.n	802ab66 <__kernel_rem_pio2f+0x352>
 802ab32:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802ab10 <__kernel_rem_pio2f+0x2fc>
 802ab36:	ee60 7a27 	vmul.f32	s15, s0, s15
 802ab3a:	aa08      	add	r2, sp, #32
 802ab3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ab40:	1c74      	adds	r4, r6, #1
 802ab42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab46:	3508      	adds	r5, #8
 802ab48:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802ab4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ab50:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab54:	ee10 3a10 	vmov	r3, s0
 802ab58:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ab5c:	ee17 3a90 	vmov	r3, s15
 802ab60:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802ab64:	e74b      	b.n	802a9fe <__kernel_rem_pio2f+0x1ea>
 802ab66:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab6a:	aa08      	add	r2, sp, #32
 802ab6c:	ee10 3a10 	vmov	r3, s0
 802ab70:	4634      	mov	r4, r6
 802ab72:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ab76:	e742      	b.n	802a9fe <__kernel_rem_pio2f+0x1ea>
 802ab78:	a808      	add	r0, sp, #32
 802ab7a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802ab7e:	9001      	str	r0, [sp, #4]
 802ab80:	ee07 0a90 	vmov	s15, r0
 802ab84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab88:	3b01      	subs	r3, #1
 802ab8a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ab8e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ab92:	ed62 7a01 	vstmdb	r2!, {s15}
 802ab96:	e73f      	b.n	802aa18 <__kernel_rem_pio2f+0x204>
 802ab98:	ecf6 6a01 	vldmia	r6!, {s13}
 802ab9c:	ecb5 7a01 	vldmia	r5!, {s14}
 802aba0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aba4:	3001      	adds	r0, #1
 802aba6:	4550      	cmp	r0, sl
 802aba8:	dc01      	bgt.n	802abae <__kernel_rem_pio2f+0x39a>
 802abaa:	4290      	cmp	r0, r2
 802abac:	ddf4      	ble.n	802ab98 <__kernel_rem_pio2f+0x384>
 802abae:	a858      	add	r0, sp, #352	; 0x160
 802abb0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802abb4:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802abb8:	3b01      	subs	r3, #1
 802abba:	e731      	b.n	802aa20 <__kernel_rem_pio2f+0x20c>
 802abbc:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802abbe:	2b02      	cmp	r3, #2
 802abc0:	dc09      	bgt.n	802abd6 <__kernel_rem_pio2f+0x3c2>
 802abc2:	2b00      	cmp	r3, #0
 802abc4:	dc2b      	bgt.n	802ac1e <__kernel_rem_pio2f+0x40a>
 802abc6:	d044      	beq.n	802ac52 <__kernel_rem_pio2f+0x43e>
 802abc8:	f009 0007 	and.w	r0, r9, #7
 802abcc:	b059      	add	sp, #356	; 0x164
 802abce:	ecbd 8b04 	vpop	{d8-d9}
 802abd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802abd6:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802abd8:	2b03      	cmp	r3, #3
 802abda:	d1f5      	bne.n	802abc8 <__kernel_rem_pio2f+0x3b4>
 802abdc:	aa30      	add	r2, sp, #192	; 0xc0
 802abde:	1f0b      	subs	r3, r1, #4
 802abe0:	4413      	add	r3, r2
 802abe2:	461a      	mov	r2, r3
 802abe4:	4620      	mov	r0, r4
 802abe6:	2800      	cmp	r0, #0
 802abe8:	f1a2 0204 	sub.w	r2, r2, #4
 802abec:	dc52      	bgt.n	802ac94 <__kernel_rem_pio2f+0x480>
 802abee:	4622      	mov	r2, r4
 802abf0:	2a01      	cmp	r2, #1
 802abf2:	f1a3 0304 	sub.w	r3, r3, #4
 802abf6:	dc5d      	bgt.n	802acb4 <__kernel_rem_pio2f+0x4a0>
 802abf8:	ab30      	add	r3, sp, #192	; 0xc0
 802abfa:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802abfe:	440b      	add	r3, r1
 802ac00:	2c01      	cmp	r4, #1
 802ac02:	dc67      	bgt.n	802acd4 <__kernel_rem_pio2f+0x4c0>
 802ac04:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802ac08:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802ac0c:	2f00      	cmp	r7, #0
 802ac0e:	d167      	bne.n	802ace0 <__kernel_rem_pio2f+0x4cc>
 802ac10:	edc8 6a00 	vstr	s13, [r8]
 802ac14:	ed88 7a01 	vstr	s14, [r8, #4]
 802ac18:	edc8 7a02 	vstr	s15, [r8, #8]
 802ac1c:	e7d4      	b.n	802abc8 <__kernel_rem_pio2f+0x3b4>
 802ac1e:	ab30      	add	r3, sp, #192	; 0xc0
 802ac20:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802ac24:	440b      	add	r3, r1
 802ac26:	4622      	mov	r2, r4
 802ac28:	2a00      	cmp	r2, #0
 802ac2a:	da24      	bge.n	802ac76 <__kernel_rem_pio2f+0x462>
 802ac2c:	b34f      	cbz	r7, 802ac82 <__kernel_rem_pio2f+0x46e>
 802ac2e:	eef1 7a47 	vneg.f32	s15, s14
 802ac32:	edc8 7a00 	vstr	s15, [r8]
 802ac36:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802ac3a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac3e:	aa31      	add	r2, sp, #196	; 0xc4
 802ac40:	2301      	movs	r3, #1
 802ac42:	429c      	cmp	r4, r3
 802ac44:	da20      	bge.n	802ac88 <__kernel_rem_pio2f+0x474>
 802ac46:	b10f      	cbz	r7, 802ac4c <__kernel_rem_pio2f+0x438>
 802ac48:	eef1 7a67 	vneg.f32	s15, s15
 802ac4c:	edc8 7a01 	vstr	s15, [r8, #4]
 802ac50:	e7ba      	b.n	802abc8 <__kernel_rem_pio2f+0x3b4>
 802ac52:	ab30      	add	r3, sp, #192	; 0xc0
 802ac54:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802ab14 <__kernel_rem_pio2f+0x300>
 802ac58:	440b      	add	r3, r1
 802ac5a:	2c00      	cmp	r4, #0
 802ac5c:	da05      	bge.n	802ac6a <__kernel_rem_pio2f+0x456>
 802ac5e:	b10f      	cbz	r7, 802ac64 <__kernel_rem_pio2f+0x450>
 802ac60:	eef1 7a67 	vneg.f32	s15, s15
 802ac64:	edc8 7a00 	vstr	s15, [r8]
 802ac68:	e7ae      	b.n	802abc8 <__kernel_rem_pio2f+0x3b4>
 802ac6a:	ed33 7a01 	vldmdb	r3!, {s14}
 802ac6e:	3c01      	subs	r4, #1
 802ac70:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac74:	e7f1      	b.n	802ac5a <__kernel_rem_pio2f+0x446>
 802ac76:	ed73 7a01 	vldmdb	r3!, {s15}
 802ac7a:	3a01      	subs	r2, #1
 802ac7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ac80:	e7d2      	b.n	802ac28 <__kernel_rem_pio2f+0x414>
 802ac82:	eef0 7a47 	vmov.f32	s15, s14
 802ac86:	e7d4      	b.n	802ac32 <__kernel_rem_pio2f+0x41e>
 802ac88:	ecb2 7a01 	vldmia	r2!, {s14}
 802ac8c:	3301      	adds	r3, #1
 802ac8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac92:	e7d6      	b.n	802ac42 <__kernel_rem_pio2f+0x42e>
 802ac94:	edd2 7a00 	vldr	s15, [r2]
 802ac98:	edd2 6a01 	vldr	s13, [r2, #4]
 802ac9c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802aca0:	3801      	subs	r0, #1
 802aca2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aca6:	ed82 7a00 	vstr	s14, [r2]
 802acaa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802acae:	edc2 7a01 	vstr	s15, [r2, #4]
 802acb2:	e798      	b.n	802abe6 <__kernel_rem_pio2f+0x3d2>
 802acb4:	edd3 7a00 	vldr	s15, [r3]
 802acb8:	edd3 6a01 	vldr	s13, [r3, #4]
 802acbc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802acc0:	3a01      	subs	r2, #1
 802acc2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802acc6:	ed83 7a00 	vstr	s14, [r3]
 802acca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802acce:	edc3 7a01 	vstr	s15, [r3, #4]
 802acd2:	e78d      	b.n	802abf0 <__kernel_rem_pio2f+0x3dc>
 802acd4:	ed33 7a01 	vldmdb	r3!, {s14}
 802acd8:	3c01      	subs	r4, #1
 802acda:	ee77 7a87 	vadd.f32	s15, s15, s14
 802acde:	e78f      	b.n	802ac00 <__kernel_rem_pio2f+0x3ec>
 802ace0:	eef1 6a66 	vneg.f32	s13, s13
 802ace4:	eeb1 7a47 	vneg.f32	s14, s14
 802ace8:	edc8 6a00 	vstr	s13, [r8]
 802acec:	ed88 7a01 	vstr	s14, [r8, #4]
 802acf0:	eef1 7a67 	vneg.f32	s15, s15
 802acf4:	e790      	b.n	802ac18 <__kernel_rem_pio2f+0x404>
 802acf6:	bf00      	nop

0802acf8 <abort>:
 802acf8:	b508      	push	{r3, lr}
 802acfa:	2006      	movs	r0, #6
 802acfc:	f000 fa3a 	bl	802b174 <raise>
 802ad00:	2001      	movs	r0, #1
 802ad02:	f7d6 fdaf 	bl	8001864 <_exit>
	...

0802ad08 <__assert_func>:
 802ad08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ad0a:	4614      	mov	r4, r2
 802ad0c:	461a      	mov	r2, r3
 802ad0e:	4b09      	ldr	r3, [pc, #36]	; (802ad34 <__assert_func+0x2c>)
 802ad10:	681b      	ldr	r3, [r3, #0]
 802ad12:	4605      	mov	r5, r0
 802ad14:	68d8      	ldr	r0, [r3, #12]
 802ad16:	b14c      	cbz	r4, 802ad2c <__assert_func+0x24>
 802ad18:	4b07      	ldr	r3, [pc, #28]	; (802ad38 <__assert_func+0x30>)
 802ad1a:	9100      	str	r1, [sp, #0]
 802ad1c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802ad20:	4906      	ldr	r1, [pc, #24]	; (802ad3c <__assert_func+0x34>)
 802ad22:	462b      	mov	r3, r5
 802ad24:	f000 f982 	bl	802b02c <fiprintf>
 802ad28:	f7ff ffe6 	bl	802acf8 <abort>
 802ad2c:	4b04      	ldr	r3, [pc, #16]	; (802ad40 <__assert_func+0x38>)
 802ad2e:	461c      	mov	r4, r3
 802ad30:	e7f3      	b.n	802ad1a <__assert_func+0x12>
 802ad32:	bf00      	nop
 802ad34:	20000160 	.word	0x20000160
 802ad38:	08043720 	.word	0x08043720
 802ad3c:	0804372d 	.word	0x0804372d
 802ad40:	0804375b 	.word	0x0804375b

0802ad44 <atexit>:
 802ad44:	2300      	movs	r3, #0
 802ad46:	4601      	mov	r1, r0
 802ad48:	461a      	mov	r2, r3
 802ad4a:	4618      	mov	r0, r3
 802ad4c:	f000 bb16 	b.w	802b37c <__register_exitproc>

0802ad50 <malloc>:
 802ad50:	4b02      	ldr	r3, [pc, #8]	; (802ad5c <malloc+0xc>)
 802ad52:	4601      	mov	r1, r0
 802ad54:	6818      	ldr	r0, [r3, #0]
 802ad56:	f000 b82b 	b.w	802adb0 <_malloc_r>
 802ad5a:	bf00      	nop
 802ad5c:	20000160 	.word	0x20000160

0802ad60 <free>:
 802ad60:	4b02      	ldr	r3, [pc, #8]	; (802ad6c <free+0xc>)
 802ad62:	4601      	mov	r1, r0
 802ad64:	6818      	ldr	r0, [r3, #0]
 802ad66:	f000 bb67 	b.w	802b438 <_free_r>
 802ad6a:	bf00      	nop
 802ad6c:	20000160 	.word	0x20000160

0802ad70 <sbrk_aligned>:
 802ad70:	b570      	push	{r4, r5, r6, lr}
 802ad72:	4e0e      	ldr	r6, [pc, #56]	; (802adac <sbrk_aligned+0x3c>)
 802ad74:	460c      	mov	r4, r1
 802ad76:	6831      	ldr	r1, [r6, #0]
 802ad78:	4605      	mov	r5, r0
 802ad7a:	b911      	cbnz	r1, 802ad82 <sbrk_aligned+0x12>
 802ad7c:	f000 faa0 	bl	802b2c0 <_sbrk_r>
 802ad80:	6030      	str	r0, [r6, #0]
 802ad82:	4621      	mov	r1, r4
 802ad84:	4628      	mov	r0, r5
 802ad86:	f000 fa9b 	bl	802b2c0 <_sbrk_r>
 802ad8a:	1c43      	adds	r3, r0, #1
 802ad8c:	d00a      	beq.n	802ada4 <sbrk_aligned+0x34>
 802ad8e:	1cc4      	adds	r4, r0, #3
 802ad90:	f024 0403 	bic.w	r4, r4, #3
 802ad94:	42a0      	cmp	r0, r4
 802ad96:	d007      	beq.n	802ada8 <sbrk_aligned+0x38>
 802ad98:	1a21      	subs	r1, r4, r0
 802ad9a:	4628      	mov	r0, r5
 802ad9c:	f000 fa90 	bl	802b2c0 <_sbrk_r>
 802ada0:	3001      	adds	r0, #1
 802ada2:	d101      	bne.n	802ada8 <sbrk_aligned+0x38>
 802ada4:	f04f 34ff 	mov.w	r4, #4294967295
 802ada8:	4620      	mov	r0, r4
 802adaa:	bd70      	pop	{r4, r5, r6, pc}
 802adac:	20013d9c 	.word	0x20013d9c

0802adb0 <_malloc_r>:
 802adb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802adb4:	1ccd      	adds	r5, r1, #3
 802adb6:	f025 0503 	bic.w	r5, r5, #3
 802adba:	3508      	adds	r5, #8
 802adbc:	2d0c      	cmp	r5, #12
 802adbe:	bf38      	it	cc
 802adc0:	250c      	movcc	r5, #12
 802adc2:	2d00      	cmp	r5, #0
 802adc4:	4607      	mov	r7, r0
 802adc6:	db01      	blt.n	802adcc <_malloc_r+0x1c>
 802adc8:	42a9      	cmp	r1, r5
 802adca:	d905      	bls.n	802add8 <_malloc_r+0x28>
 802adcc:	230c      	movs	r3, #12
 802adce:	603b      	str	r3, [r7, #0]
 802add0:	2600      	movs	r6, #0
 802add2:	4630      	mov	r0, r6
 802add4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802add8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802aeac <_malloc_r+0xfc>
 802addc:	f000 f868 	bl	802aeb0 <__malloc_lock>
 802ade0:	f8d8 3000 	ldr.w	r3, [r8]
 802ade4:	461c      	mov	r4, r3
 802ade6:	bb5c      	cbnz	r4, 802ae40 <_malloc_r+0x90>
 802ade8:	4629      	mov	r1, r5
 802adea:	4638      	mov	r0, r7
 802adec:	f7ff ffc0 	bl	802ad70 <sbrk_aligned>
 802adf0:	1c43      	adds	r3, r0, #1
 802adf2:	4604      	mov	r4, r0
 802adf4:	d155      	bne.n	802aea2 <_malloc_r+0xf2>
 802adf6:	f8d8 4000 	ldr.w	r4, [r8]
 802adfa:	4626      	mov	r6, r4
 802adfc:	2e00      	cmp	r6, #0
 802adfe:	d145      	bne.n	802ae8c <_malloc_r+0xdc>
 802ae00:	2c00      	cmp	r4, #0
 802ae02:	d048      	beq.n	802ae96 <_malloc_r+0xe6>
 802ae04:	6823      	ldr	r3, [r4, #0]
 802ae06:	4631      	mov	r1, r6
 802ae08:	4638      	mov	r0, r7
 802ae0a:	eb04 0903 	add.w	r9, r4, r3
 802ae0e:	f000 fa57 	bl	802b2c0 <_sbrk_r>
 802ae12:	4581      	cmp	r9, r0
 802ae14:	d13f      	bne.n	802ae96 <_malloc_r+0xe6>
 802ae16:	6821      	ldr	r1, [r4, #0]
 802ae18:	1a6d      	subs	r5, r5, r1
 802ae1a:	4629      	mov	r1, r5
 802ae1c:	4638      	mov	r0, r7
 802ae1e:	f7ff ffa7 	bl	802ad70 <sbrk_aligned>
 802ae22:	3001      	adds	r0, #1
 802ae24:	d037      	beq.n	802ae96 <_malloc_r+0xe6>
 802ae26:	6823      	ldr	r3, [r4, #0]
 802ae28:	442b      	add	r3, r5
 802ae2a:	6023      	str	r3, [r4, #0]
 802ae2c:	f8d8 3000 	ldr.w	r3, [r8]
 802ae30:	2b00      	cmp	r3, #0
 802ae32:	d038      	beq.n	802aea6 <_malloc_r+0xf6>
 802ae34:	685a      	ldr	r2, [r3, #4]
 802ae36:	42a2      	cmp	r2, r4
 802ae38:	d12b      	bne.n	802ae92 <_malloc_r+0xe2>
 802ae3a:	2200      	movs	r2, #0
 802ae3c:	605a      	str	r2, [r3, #4]
 802ae3e:	e00f      	b.n	802ae60 <_malloc_r+0xb0>
 802ae40:	6822      	ldr	r2, [r4, #0]
 802ae42:	1b52      	subs	r2, r2, r5
 802ae44:	d41f      	bmi.n	802ae86 <_malloc_r+0xd6>
 802ae46:	2a0b      	cmp	r2, #11
 802ae48:	d917      	bls.n	802ae7a <_malloc_r+0xca>
 802ae4a:	1961      	adds	r1, r4, r5
 802ae4c:	42a3      	cmp	r3, r4
 802ae4e:	6025      	str	r5, [r4, #0]
 802ae50:	bf18      	it	ne
 802ae52:	6059      	strne	r1, [r3, #4]
 802ae54:	6863      	ldr	r3, [r4, #4]
 802ae56:	bf08      	it	eq
 802ae58:	f8c8 1000 	streq.w	r1, [r8]
 802ae5c:	5162      	str	r2, [r4, r5]
 802ae5e:	604b      	str	r3, [r1, #4]
 802ae60:	4638      	mov	r0, r7
 802ae62:	f104 060b 	add.w	r6, r4, #11
 802ae66:	f000 f829 	bl	802aebc <__malloc_unlock>
 802ae6a:	f026 0607 	bic.w	r6, r6, #7
 802ae6e:	1d23      	adds	r3, r4, #4
 802ae70:	1af2      	subs	r2, r6, r3
 802ae72:	d0ae      	beq.n	802add2 <_malloc_r+0x22>
 802ae74:	1b9b      	subs	r3, r3, r6
 802ae76:	50a3      	str	r3, [r4, r2]
 802ae78:	e7ab      	b.n	802add2 <_malloc_r+0x22>
 802ae7a:	42a3      	cmp	r3, r4
 802ae7c:	6862      	ldr	r2, [r4, #4]
 802ae7e:	d1dd      	bne.n	802ae3c <_malloc_r+0x8c>
 802ae80:	f8c8 2000 	str.w	r2, [r8]
 802ae84:	e7ec      	b.n	802ae60 <_malloc_r+0xb0>
 802ae86:	4623      	mov	r3, r4
 802ae88:	6864      	ldr	r4, [r4, #4]
 802ae8a:	e7ac      	b.n	802ade6 <_malloc_r+0x36>
 802ae8c:	4634      	mov	r4, r6
 802ae8e:	6876      	ldr	r6, [r6, #4]
 802ae90:	e7b4      	b.n	802adfc <_malloc_r+0x4c>
 802ae92:	4613      	mov	r3, r2
 802ae94:	e7cc      	b.n	802ae30 <_malloc_r+0x80>
 802ae96:	230c      	movs	r3, #12
 802ae98:	603b      	str	r3, [r7, #0]
 802ae9a:	4638      	mov	r0, r7
 802ae9c:	f000 f80e 	bl	802aebc <__malloc_unlock>
 802aea0:	e797      	b.n	802add2 <_malloc_r+0x22>
 802aea2:	6025      	str	r5, [r4, #0]
 802aea4:	e7dc      	b.n	802ae60 <_malloc_r+0xb0>
 802aea6:	605b      	str	r3, [r3, #4]
 802aea8:	deff      	udf	#255	; 0xff
 802aeaa:	bf00      	nop
 802aeac:	20013d98 	.word	0x20013d98

0802aeb0 <__malloc_lock>:
 802aeb0:	4801      	ldr	r0, [pc, #4]	; (802aeb8 <__malloc_lock+0x8>)
 802aeb2:	f000 ba52 	b.w	802b35a <__retarget_lock_acquire_recursive>
 802aeb6:	bf00      	nop
 802aeb8:	20013ee1 	.word	0x20013ee1

0802aebc <__malloc_unlock>:
 802aebc:	4801      	ldr	r0, [pc, #4]	; (802aec4 <__malloc_unlock+0x8>)
 802aebe:	f000 ba4d 	b.w	802b35c <__retarget_lock_release_recursive>
 802aec2:	bf00      	nop
 802aec4:	20013ee1 	.word	0x20013ee1

0802aec8 <__cxa_atexit>:
 802aec8:	b510      	push	{r4, lr}
 802aeca:	4c05      	ldr	r4, [pc, #20]	; (802aee0 <__cxa_atexit+0x18>)
 802aecc:	4613      	mov	r3, r2
 802aece:	b12c      	cbz	r4, 802aedc <__cxa_atexit+0x14>
 802aed0:	460a      	mov	r2, r1
 802aed2:	4601      	mov	r1, r0
 802aed4:	2002      	movs	r0, #2
 802aed6:	f000 fa51 	bl	802b37c <__register_exitproc>
 802aeda:	bd10      	pop	{r4, pc}
 802aedc:	4620      	mov	r0, r4
 802aede:	e7fc      	b.n	802aeda <__cxa_atexit+0x12>
 802aee0:	0802b37d 	.word	0x0802b37d

0802aee4 <std>:
 802aee4:	2300      	movs	r3, #0
 802aee6:	b510      	push	{r4, lr}
 802aee8:	4604      	mov	r4, r0
 802aeea:	e9c0 3300 	strd	r3, r3, [r0]
 802aeee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802aef2:	6083      	str	r3, [r0, #8]
 802aef4:	8181      	strh	r1, [r0, #12]
 802aef6:	6643      	str	r3, [r0, #100]	; 0x64
 802aef8:	81c2      	strh	r2, [r0, #14]
 802aefa:	6183      	str	r3, [r0, #24]
 802aefc:	4619      	mov	r1, r3
 802aefe:	2208      	movs	r2, #8
 802af00:	305c      	adds	r0, #92	; 0x5c
 802af02:	f000 f906 	bl	802b112 <memset>
 802af06:	4b0d      	ldr	r3, [pc, #52]	; (802af3c <std+0x58>)
 802af08:	6263      	str	r3, [r4, #36]	; 0x24
 802af0a:	4b0d      	ldr	r3, [pc, #52]	; (802af40 <std+0x5c>)
 802af0c:	62a3      	str	r3, [r4, #40]	; 0x28
 802af0e:	4b0d      	ldr	r3, [pc, #52]	; (802af44 <std+0x60>)
 802af10:	62e3      	str	r3, [r4, #44]	; 0x2c
 802af12:	4b0d      	ldr	r3, [pc, #52]	; (802af48 <std+0x64>)
 802af14:	6323      	str	r3, [r4, #48]	; 0x30
 802af16:	4b0d      	ldr	r3, [pc, #52]	; (802af4c <std+0x68>)
 802af18:	6224      	str	r4, [r4, #32]
 802af1a:	429c      	cmp	r4, r3
 802af1c:	d006      	beq.n	802af2c <std+0x48>
 802af1e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802af22:	4294      	cmp	r4, r2
 802af24:	d002      	beq.n	802af2c <std+0x48>
 802af26:	33d0      	adds	r3, #208	; 0xd0
 802af28:	429c      	cmp	r4, r3
 802af2a:	d105      	bne.n	802af38 <std+0x54>
 802af2c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802af30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af34:	f000 ba10 	b.w	802b358 <__retarget_lock_init_recursive>
 802af38:	bd10      	pop	{r4, pc}
 802af3a:	bf00      	nop
 802af3c:	0802b08d 	.word	0x0802b08d
 802af40:	0802b0af 	.word	0x0802b0af
 802af44:	0802b0e7 	.word	0x0802b0e7
 802af48:	0802b10b 	.word	0x0802b10b
 802af4c:	20013da0 	.word	0x20013da0

0802af50 <stdio_exit_handler>:
 802af50:	4a02      	ldr	r2, [pc, #8]	; (802af5c <stdio_exit_handler+0xc>)
 802af52:	4903      	ldr	r1, [pc, #12]	; (802af60 <stdio_exit_handler+0x10>)
 802af54:	4803      	ldr	r0, [pc, #12]	; (802af64 <stdio_exit_handler+0x14>)
 802af56:	f000 b87b 	b.w	802b050 <_fwalk_sglue>
 802af5a:	bf00      	nop
 802af5c:	20000108 	.word	0x20000108
 802af60:	0802bb85 	.word	0x0802bb85
 802af64:	20000114 	.word	0x20000114

0802af68 <cleanup_stdio>:
 802af68:	6841      	ldr	r1, [r0, #4]
 802af6a:	4b0c      	ldr	r3, [pc, #48]	; (802af9c <cleanup_stdio+0x34>)
 802af6c:	4299      	cmp	r1, r3
 802af6e:	b510      	push	{r4, lr}
 802af70:	4604      	mov	r4, r0
 802af72:	d001      	beq.n	802af78 <cleanup_stdio+0x10>
 802af74:	f000 fe06 	bl	802bb84 <_fflush_r>
 802af78:	68a1      	ldr	r1, [r4, #8]
 802af7a:	4b09      	ldr	r3, [pc, #36]	; (802afa0 <cleanup_stdio+0x38>)
 802af7c:	4299      	cmp	r1, r3
 802af7e:	d002      	beq.n	802af86 <cleanup_stdio+0x1e>
 802af80:	4620      	mov	r0, r4
 802af82:	f000 fdff 	bl	802bb84 <_fflush_r>
 802af86:	68e1      	ldr	r1, [r4, #12]
 802af88:	4b06      	ldr	r3, [pc, #24]	; (802afa4 <cleanup_stdio+0x3c>)
 802af8a:	4299      	cmp	r1, r3
 802af8c:	d004      	beq.n	802af98 <cleanup_stdio+0x30>
 802af8e:	4620      	mov	r0, r4
 802af90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af94:	f000 bdf6 	b.w	802bb84 <_fflush_r>
 802af98:	bd10      	pop	{r4, pc}
 802af9a:	bf00      	nop
 802af9c:	20013da0 	.word	0x20013da0
 802afa0:	20013e08 	.word	0x20013e08
 802afa4:	20013e70 	.word	0x20013e70

0802afa8 <global_stdio_init.part.0>:
 802afa8:	b510      	push	{r4, lr}
 802afaa:	4b0b      	ldr	r3, [pc, #44]	; (802afd8 <global_stdio_init.part.0+0x30>)
 802afac:	4c0b      	ldr	r4, [pc, #44]	; (802afdc <global_stdio_init.part.0+0x34>)
 802afae:	4a0c      	ldr	r2, [pc, #48]	; (802afe0 <global_stdio_init.part.0+0x38>)
 802afb0:	601a      	str	r2, [r3, #0]
 802afb2:	4620      	mov	r0, r4
 802afb4:	2200      	movs	r2, #0
 802afb6:	2104      	movs	r1, #4
 802afb8:	f7ff ff94 	bl	802aee4 <std>
 802afbc:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802afc0:	2201      	movs	r2, #1
 802afc2:	2109      	movs	r1, #9
 802afc4:	f7ff ff8e 	bl	802aee4 <std>
 802afc8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802afcc:	2202      	movs	r2, #2
 802afce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802afd2:	2112      	movs	r1, #18
 802afd4:	f7ff bf86 	b.w	802aee4 <std>
 802afd8:	20013ed8 	.word	0x20013ed8
 802afdc:	20013da0 	.word	0x20013da0
 802afe0:	0802af51 	.word	0x0802af51

0802afe4 <__sfp_lock_acquire>:
 802afe4:	4801      	ldr	r0, [pc, #4]	; (802afec <__sfp_lock_acquire+0x8>)
 802afe6:	f000 b9b8 	b.w	802b35a <__retarget_lock_acquire_recursive>
 802afea:	bf00      	nop
 802afec:	20013ee2 	.word	0x20013ee2

0802aff0 <__sfp_lock_release>:
 802aff0:	4801      	ldr	r0, [pc, #4]	; (802aff8 <__sfp_lock_release+0x8>)
 802aff2:	f000 b9b3 	b.w	802b35c <__retarget_lock_release_recursive>
 802aff6:	bf00      	nop
 802aff8:	20013ee2 	.word	0x20013ee2

0802affc <__sinit>:
 802affc:	b510      	push	{r4, lr}
 802affe:	4604      	mov	r4, r0
 802b000:	f7ff fff0 	bl	802afe4 <__sfp_lock_acquire>
 802b004:	6a23      	ldr	r3, [r4, #32]
 802b006:	b11b      	cbz	r3, 802b010 <__sinit+0x14>
 802b008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b00c:	f7ff bff0 	b.w	802aff0 <__sfp_lock_release>
 802b010:	4b04      	ldr	r3, [pc, #16]	; (802b024 <__sinit+0x28>)
 802b012:	6223      	str	r3, [r4, #32]
 802b014:	4b04      	ldr	r3, [pc, #16]	; (802b028 <__sinit+0x2c>)
 802b016:	681b      	ldr	r3, [r3, #0]
 802b018:	2b00      	cmp	r3, #0
 802b01a:	d1f5      	bne.n	802b008 <__sinit+0xc>
 802b01c:	f7ff ffc4 	bl	802afa8 <global_stdio_init.part.0>
 802b020:	e7f2      	b.n	802b008 <__sinit+0xc>
 802b022:	bf00      	nop
 802b024:	0802af69 	.word	0x0802af69
 802b028:	20013ed8 	.word	0x20013ed8

0802b02c <fiprintf>:
 802b02c:	b40e      	push	{r1, r2, r3}
 802b02e:	b503      	push	{r0, r1, lr}
 802b030:	4601      	mov	r1, r0
 802b032:	ab03      	add	r3, sp, #12
 802b034:	4805      	ldr	r0, [pc, #20]	; (802b04c <fiprintf+0x20>)
 802b036:	f853 2b04 	ldr.w	r2, [r3], #4
 802b03a:	6800      	ldr	r0, [r0, #0]
 802b03c:	9301      	str	r3, [sp, #4]
 802b03e:	f000 fa71 	bl	802b524 <_vfiprintf_r>
 802b042:	b002      	add	sp, #8
 802b044:	f85d eb04 	ldr.w	lr, [sp], #4
 802b048:	b003      	add	sp, #12
 802b04a:	4770      	bx	lr
 802b04c:	20000160 	.word	0x20000160

0802b050 <_fwalk_sglue>:
 802b050:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b054:	4607      	mov	r7, r0
 802b056:	4688      	mov	r8, r1
 802b058:	4614      	mov	r4, r2
 802b05a:	2600      	movs	r6, #0
 802b05c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b060:	f1b9 0901 	subs.w	r9, r9, #1
 802b064:	d505      	bpl.n	802b072 <_fwalk_sglue+0x22>
 802b066:	6824      	ldr	r4, [r4, #0]
 802b068:	2c00      	cmp	r4, #0
 802b06a:	d1f7      	bne.n	802b05c <_fwalk_sglue+0xc>
 802b06c:	4630      	mov	r0, r6
 802b06e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b072:	89ab      	ldrh	r3, [r5, #12]
 802b074:	2b01      	cmp	r3, #1
 802b076:	d907      	bls.n	802b088 <_fwalk_sglue+0x38>
 802b078:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b07c:	3301      	adds	r3, #1
 802b07e:	d003      	beq.n	802b088 <_fwalk_sglue+0x38>
 802b080:	4629      	mov	r1, r5
 802b082:	4638      	mov	r0, r7
 802b084:	47c0      	blx	r8
 802b086:	4306      	orrs	r6, r0
 802b088:	3568      	adds	r5, #104	; 0x68
 802b08a:	e7e9      	b.n	802b060 <_fwalk_sglue+0x10>

0802b08c <__sread>:
 802b08c:	b510      	push	{r4, lr}
 802b08e:	460c      	mov	r4, r1
 802b090:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b094:	f000 f8ee 	bl	802b274 <_read_r>
 802b098:	2800      	cmp	r0, #0
 802b09a:	bfab      	itete	ge
 802b09c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b09e:	89a3      	ldrhlt	r3, [r4, #12]
 802b0a0:	181b      	addge	r3, r3, r0
 802b0a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b0a6:	bfac      	ite	ge
 802b0a8:	6563      	strge	r3, [r4, #84]	; 0x54
 802b0aa:	81a3      	strhlt	r3, [r4, #12]
 802b0ac:	bd10      	pop	{r4, pc}

0802b0ae <__swrite>:
 802b0ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b0b2:	461f      	mov	r7, r3
 802b0b4:	898b      	ldrh	r3, [r1, #12]
 802b0b6:	05db      	lsls	r3, r3, #23
 802b0b8:	4605      	mov	r5, r0
 802b0ba:	460c      	mov	r4, r1
 802b0bc:	4616      	mov	r6, r2
 802b0be:	d505      	bpl.n	802b0cc <__swrite+0x1e>
 802b0c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0c4:	2302      	movs	r3, #2
 802b0c6:	2200      	movs	r2, #0
 802b0c8:	f000 f8c2 	bl	802b250 <_lseek_r>
 802b0cc:	89a3      	ldrh	r3, [r4, #12]
 802b0ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b0d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b0d6:	81a3      	strh	r3, [r4, #12]
 802b0d8:	4632      	mov	r2, r6
 802b0da:	463b      	mov	r3, r7
 802b0dc:	4628      	mov	r0, r5
 802b0de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b0e2:	f000 b8fd 	b.w	802b2e0 <_write_r>

0802b0e6 <__sseek>:
 802b0e6:	b510      	push	{r4, lr}
 802b0e8:	460c      	mov	r4, r1
 802b0ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0ee:	f000 f8af 	bl	802b250 <_lseek_r>
 802b0f2:	1c43      	adds	r3, r0, #1
 802b0f4:	89a3      	ldrh	r3, [r4, #12]
 802b0f6:	bf15      	itete	ne
 802b0f8:	6560      	strne	r0, [r4, #84]	; 0x54
 802b0fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b0fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b102:	81a3      	strheq	r3, [r4, #12]
 802b104:	bf18      	it	ne
 802b106:	81a3      	strhne	r3, [r4, #12]
 802b108:	bd10      	pop	{r4, pc}

0802b10a <__sclose>:
 802b10a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b10e:	f000 b839 	b.w	802b184 <_close_r>

0802b112 <memset>:
 802b112:	4402      	add	r2, r0
 802b114:	4603      	mov	r3, r0
 802b116:	4293      	cmp	r3, r2
 802b118:	d100      	bne.n	802b11c <memset+0xa>
 802b11a:	4770      	bx	lr
 802b11c:	f803 1b01 	strb.w	r1, [r3], #1
 802b120:	e7f9      	b.n	802b116 <memset+0x4>

0802b122 <_raise_r>:
 802b122:	291f      	cmp	r1, #31
 802b124:	b538      	push	{r3, r4, r5, lr}
 802b126:	4604      	mov	r4, r0
 802b128:	460d      	mov	r5, r1
 802b12a:	d904      	bls.n	802b136 <_raise_r+0x14>
 802b12c:	2316      	movs	r3, #22
 802b12e:	6003      	str	r3, [r0, #0]
 802b130:	f04f 30ff 	mov.w	r0, #4294967295
 802b134:	bd38      	pop	{r3, r4, r5, pc}
 802b136:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b138:	b112      	cbz	r2, 802b140 <_raise_r+0x1e>
 802b13a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b13e:	b94b      	cbnz	r3, 802b154 <_raise_r+0x32>
 802b140:	4620      	mov	r0, r4
 802b142:	f000 f8bb 	bl	802b2bc <_getpid_r>
 802b146:	462a      	mov	r2, r5
 802b148:	4601      	mov	r1, r0
 802b14a:	4620      	mov	r0, r4
 802b14c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b150:	f000 b8a2 	b.w	802b298 <_kill_r>
 802b154:	2b01      	cmp	r3, #1
 802b156:	d00a      	beq.n	802b16e <_raise_r+0x4c>
 802b158:	1c59      	adds	r1, r3, #1
 802b15a:	d103      	bne.n	802b164 <_raise_r+0x42>
 802b15c:	2316      	movs	r3, #22
 802b15e:	6003      	str	r3, [r0, #0]
 802b160:	2001      	movs	r0, #1
 802b162:	e7e7      	b.n	802b134 <_raise_r+0x12>
 802b164:	2400      	movs	r4, #0
 802b166:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b16a:	4628      	mov	r0, r5
 802b16c:	4798      	blx	r3
 802b16e:	2000      	movs	r0, #0
 802b170:	e7e0      	b.n	802b134 <_raise_r+0x12>
	...

0802b174 <raise>:
 802b174:	4b02      	ldr	r3, [pc, #8]	; (802b180 <raise+0xc>)
 802b176:	4601      	mov	r1, r0
 802b178:	6818      	ldr	r0, [r3, #0]
 802b17a:	f7ff bfd2 	b.w	802b122 <_raise_r>
 802b17e:	bf00      	nop
 802b180:	20000160 	.word	0x20000160

0802b184 <_close_r>:
 802b184:	b538      	push	{r3, r4, r5, lr}
 802b186:	4d06      	ldr	r5, [pc, #24]	; (802b1a0 <_close_r+0x1c>)
 802b188:	2300      	movs	r3, #0
 802b18a:	4604      	mov	r4, r0
 802b18c:	4608      	mov	r0, r1
 802b18e:	602b      	str	r3, [r5, #0]
 802b190:	f7d6 fb8a 	bl	80018a8 <_close>
 802b194:	1c43      	adds	r3, r0, #1
 802b196:	d102      	bne.n	802b19e <_close_r+0x1a>
 802b198:	682b      	ldr	r3, [r5, #0]
 802b19a:	b103      	cbz	r3, 802b19e <_close_r+0x1a>
 802b19c:	6023      	str	r3, [r4, #0]
 802b19e:	bd38      	pop	{r3, r4, r5, pc}
 802b1a0:	20013edc 	.word	0x20013edc

0802b1a4 <_reclaim_reent>:
 802b1a4:	4b29      	ldr	r3, [pc, #164]	; (802b24c <_reclaim_reent+0xa8>)
 802b1a6:	681b      	ldr	r3, [r3, #0]
 802b1a8:	4283      	cmp	r3, r0
 802b1aa:	b570      	push	{r4, r5, r6, lr}
 802b1ac:	4604      	mov	r4, r0
 802b1ae:	d04b      	beq.n	802b248 <_reclaim_reent+0xa4>
 802b1b0:	69c3      	ldr	r3, [r0, #28]
 802b1b2:	b143      	cbz	r3, 802b1c6 <_reclaim_reent+0x22>
 802b1b4:	68db      	ldr	r3, [r3, #12]
 802b1b6:	2b00      	cmp	r3, #0
 802b1b8:	d144      	bne.n	802b244 <_reclaim_reent+0xa0>
 802b1ba:	69e3      	ldr	r3, [r4, #28]
 802b1bc:	6819      	ldr	r1, [r3, #0]
 802b1be:	b111      	cbz	r1, 802b1c6 <_reclaim_reent+0x22>
 802b1c0:	4620      	mov	r0, r4
 802b1c2:	f000 f939 	bl	802b438 <_free_r>
 802b1c6:	6961      	ldr	r1, [r4, #20]
 802b1c8:	b111      	cbz	r1, 802b1d0 <_reclaim_reent+0x2c>
 802b1ca:	4620      	mov	r0, r4
 802b1cc:	f000 f934 	bl	802b438 <_free_r>
 802b1d0:	69e1      	ldr	r1, [r4, #28]
 802b1d2:	b111      	cbz	r1, 802b1da <_reclaim_reent+0x36>
 802b1d4:	4620      	mov	r0, r4
 802b1d6:	f000 f92f 	bl	802b438 <_free_r>
 802b1da:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b1dc:	b111      	cbz	r1, 802b1e4 <_reclaim_reent+0x40>
 802b1de:	4620      	mov	r0, r4
 802b1e0:	f000 f92a 	bl	802b438 <_free_r>
 802b1e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b1e6:	b111      	cbz	r1, 802b1ee <_reclaim_reent+0x4a>
 802b1e8:	4620      	mov	r0, r4
 802b1ea:	f000 f925 	bl	802b438 <_free_r>
 802b1ee:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b1f0:	b111      	cbz	r1, 802b1f8 <_reclaim_reent+0x54>
 802b1f2:	4620      	mov	r0, r4
 802b1f4:	f000 f920 	bl	802b438 <_free_r>
 802b1f8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b1fa:	b111      	cbz	r1, 802b202 <_reclaim_reent+0x5e>
 802b1fc:	4620      	mov	r0, r4
 802b1fe:	f000 f91b 	bl	802b438 <_free_r>
 802b202:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b204:	b111      	cbz	r1, 802b20c <_reclaim_reent+0x68>
 802b206:	4620      	mov	r0, r4
 802b208:	f000 f916 	bl	802b438 <_free_r>
 802b20c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b20e:	b111      	cbz	r1, 802b216 <_reclaim_reent+0x72>
 802b210:	4620      	mov	r0, r4
 802b212:	f000 f911 	bl	802b438 <_free_r>
 802b216:	6a23      	ldr	r3, [r4, #32]
 802b218:	b1b3      	cbz	r3, 802b248 <_reclaim_reent+0xa4>
 802b21a:	4620      	mov	r0, r4
 802b21c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b220:	4718      	bx	r3
 802b222:	5949      	ldr	r1, [r1, r5]
 802b224:	b941      	cbnz	r1, 802b238 <_reclaim_reent+0x94>
 802b226:	3504      	adds	r5, #4
 802b228:	69e3      	ldr	r3, [r4, #28]
 802b22a:	2d80      	cmp	r5, #128	; 0x80
 802b22c:	68d9      	ldr	r1, [r3, #12]
 802b22e:	d1f8      	bne.n	802b222 <_reclaim_reent+0x7e>
 802b230:	4620      	mov	r0, r4
 802b232:	f000 f901 	bl	802b438 <_free_r>
 802b236:	e7c0      	b.n	802b1ba <_reclaim_reent+0x16>
 802b238:	680e      	ldr	r6, [r1, #0]
 802b23a:	4620      	mov	r0, r4
 802b23c:	f000 f8fc 	bl	802b438 <_free_r>
 802b240:	4631      	mov	r1, r6
 802b242:	e7ef      	b.n	802b224 <_reclaim_reent+0x80>
 802b244:	2500      	movs	r5, #0
 802b246:	e7ef      	b.n	802b228 <_reclaim_reent+0x84>
 802b248:	bd70      	pop	{r4, r5, r6, pc}
 802b24a:	bf00      	nop
 802b24c:	20000160 	.word	0x20000160

0802b250 <_lseek_r>:
 802b250:	b538      	push	{r3, r4, r5, lr}
 802b252:	4d07      	ldr	r5, [pc, #28]	; (802b270 <_lseek_r+0x20>)
 802b254:	4604      	mov	r4, r0
 802b256:	4608      	mov	r0, r1
 802b258:	4611      	mov	r1, r2
 802b25a:	2200      	movs	r2, #0
 802b25c:	602a      	str	r2, [r5, #0]
 802b25e:	461a      	mov	r2, r3
 802b260:	f7d6 fb2e 	bl	80018c0 <_lseek>
 802b264:	1c43      	adds	r3, r0, #1
 802b266:	d102      	bne.n	802b26e <_lseek_r+0x1e>
 802b268:	682b      	ldr	r3, [r5, #0]
 802b26a:	b103      	cbz	r3, 802b26e <_lseek_r+0x1e>
 802b26c:	6023      	str	r3, [r4, #0]
 802b26e:	bd38      	pop	{r3, r4, r5, pc}
 802b270:	20013edc 	.word	0x20013edc

0802b274 <_read_r>:
 802b274:	b538      	push	{r3, r4, r5, lr}
 802b276:	4d07      	ldr	r5, [pc, #28]	; (802b294 <_read_r+0x20>)
 802b278:	4604      	mov	r4, r0
 802b27a:	4608      	mov	r0, r1
 802b27c:	4611      	mov	r1, r2
 802b27e:	2200      	movs	r2, #0
 802b280:	602a      	str	r2, [r5, #0]
 802b282:	461a      	mov	r2, r3
 802b284:	f7d6 faf4 	bl	8001870 <_read>
 802b288:	1c43      	adds	r3, r0, #1
 802b28a:	d102      	bne.n	802b292 <_read_r+0x1e>
 802b28c:	682b      	ldr	r3, [r5, #0]
 802b28e:	b103      	cbz	r3, 802b292 <_read_r+0x1e>
 802b290:	6023      	str	r3, [r4, #0]
 802b292:	bd38      	pop	{r3, r4, r5, pc}
 802b294:	20013edc 	.word	0x20013edc

0802b298 <_kill_r>:
 802b298:	b538      	push	{r3, r4, r5, lr}
 802b29a:	4d07      	ldr	r5, [pc, #28]	; (802b2b8 <_kill_r+0x20>)
 802b29c:	2300      	movs	r3, #0
 802b29e:	4604      	mov	r4, r0
 802b2a0:	4608      	mov	r0, r1
 802b2a2:	4611      	mov	r1, r2
 802b2a4:	602b      	str	r3, [r5, #0]
 802b2a6:	f7d6 fad5 	bl	8001854 <_kill>
 802b2aa:	1c43      	adds	r3, r0, #1
 802b2ac:	d102      	bne.n	802b2b4 <_kill_r+0x1c>
 802b2ae:	682b      	ldr	r3, [r5, #0]
 802b2b0:	b103      	cbz	r3, 802b2b4 <_kill_r+0x1c>
 802b2b2:	6023      	str	r3, [r4, #0]
 802b2b4:	bd38      	pop	{r3, r4, r5, pc}
 802b2b6:	bf00      	nop
 802b2b8:	20013edc 	.word	0x20013edc

0802b2bc <_getpid_r>:
 802b2bc:	f7d6 bac8 	b.w	8001850 <_getpid>

0802b2c0 <_sbrk_r>:
 802b2c0:	b538      	push	{r3, r4, r5, lr}
 802b2c2:	4d06      	ldr	r5, [pc, #24]	; (802b2dc <_sbrk_r+0x1c>)
 802b2c4:	2300      	movs	r3, #0
 802b2c6:	4604      	mov	r4, r0
 802b2c8:	4608      	mov	r0, r1
 802b2ca:	602b      	str	r3, [r5, #0]
 802b2cc:	f7d6 fafa 	bl	80018c4 <_sbrk>
 802b2d0:	1c43      	adds	r3, r0, #1
 802b2d2:	d102      	bne.n	802b2da <_sbrk_r+0x1a>
 802b2d4:	682b      	ldr	r3, [r5, #0]
 802b2d6:	b103      	cbz	r3, 802b2da <_sbrk_r+0x1a>
 802b2d8:	6023      	str	r3, [r4, #0]
 802b2da:	bd38      	pop	{r3, r4, r5, pc}
 802b2dc:	20013edc 	.word	0x20013edc

0802b2e0 <_write_r>:
 802b2e0:	b538      	push	{r3, r4, r5, lr}
 802b2e2:	4d07      	ldr	r5, [pc, #28]	; (802b300 <_write_r+0x20>)
 802b2e4:	4604      	mov	r4, r0
 802b2e6:	4608      	mov	r0, r1
 802b2e8:	4611      	mov	r1, r2
 802b2ea:	2200      	movs	r2, #0
 802b2ec:	602a      	str	r2, [r5, #0]
 802b2ee:	461a      	mov	r2, r3
 802b2f0:	f7d6 facc 	bl	800188c <_write>
 802b2f4:	1c43      	adds	r3, r0, #1
 802b2f6:	d102      	bne.n	802b2fe <_write_r+0x1e>
 802b2f8:	682b      	ldr	r3, [r5, #0]
 802b2fa:	b103      	cbz	r3, 802b2fe <_write_r+0x1e>
 802b2fc:	6023      	str	r3, [r4, #0]
 802b2fe:	bd38      	pop	{r3, r4, r5, pc}
 802b300:	20013edc 	.word	0x20013edc

0802b304 <__errno>:
 802b304:	4b01      	ldr	r3, [pc, #4]	; (802b30c <__errno+0x8>)
 802b306:	6818      	ldr	r0, [r3, #0]
 802b308:	4770      	bx	lr
 802b30a:	bf00      	nop
 802b30c:	20000160 	.word	0x20000160

0802b310 <__libc_init_array>:
 802b310:	b570      	push	{r4, r5, r6, lr}
 802b312:	4d0d      	ldr	r5, [pc, #52]	; (802b348 <__libc_init_array+0x38>)
 802b314:	4c0d      	ldr	r4, [pc, #52]	; (802b34c <__libc_init_array+0x3c>)
 802b316:	1b64      	subs	r4, r4, r5
 802b318:	10a4      	asrs	r4, r4, #2
 802b31a:	2600      	movs	r6, #0
 802b31c:	42a6      	cmp	r6, r4
 802b31e:	d109      	bne.n	802b334 <__libc_init_array+0x24>
 802b320:	4d0b      	ldr	r5, [pc, #44]	; (802b350 <__libc_init_array+0x40>)
 802b322:	4c0c      	ldr	r4, [pc, #48]	; (802b354 <__libc_init_array+0x44>)
 802b324:	f000 fd70 	bl	802be08 <_init>
 802b328:	1b64      	subs	r4, r4, r5
 802b32a:	10a4      	asrs	r4, r4, #2
 802b32c:	2600      	movs	r6, #0
 802b32e:	42a6      	cmp	r6, r4
 802b330:	d105      	bne.n	802b33e <__libc_init_array+0x2e>
 802b332:	bd70      	pop	{r4, r5, r6, pc}
 802b334:	f855 3b04 	ldr.w	r3, [r5], #4
 802b338:	4798      	blx	r3
 802b33a:	3601      	adds	r6, #1
 802b33c:	e7ee      	b.n	802b31c <__libc_init_array+0xc>
 802b33e:	f855 3b04 	ldr.w	r3, [r5], #4
 802b342:	4798      	blx	r3
 802b344:	3601      	adds	r6, #1
 802b346:	e7f2      	b.n	802b32e <__libc_init_array+0x1e>
 802b348:	08162250 	.word	0x08162250
 802b34c:	08162250 	.word	0x08162250
 802b350:	08162250 	.word	0x08162250
 802b354:	08162264 	.word	0x08162264

0802b358 <__retarget_lock_init_recursive>:
 802b358:	4770      	bx	lr

0802b35a <__retarget_lock_acquire_recursive>:
 802b35a:	4770      	bx	lr

0802b35c <__retarget_lock_release_recursive>:
 802b35c:	4770      	bx	lr

0802b35e <memcpy>:
 802b35e:	440a      	add	r2, r1
 802b360:	4291      	cmp	r1, r2
 802b362:	f100 33ff 	add.w	r3, r0, #4294967295
 802b366:	d100      	bne.n	802b36a <memcpy+0xc>
 802b368:	4770      	bx	lr
 802b36a:	b510      	push	{r4, lr}
 802b36c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b370:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b374:	4291      	cmp	r1, r2
 802b376:	d1f9      	bne.n	802b36c <memcpy+0xe>
 802b378:	bd10      	pop	{r4, pc}
	...

0802b37c <__register_exitproc>:
 802b37c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b380:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b434 <__register_exitproc+0xb8>
 802b384:	4606      	mov	r6, r0
 802b386:	f8d8 0000 	ldr.w	r0, [r8]
 802b38a:	461f      	mov	r7, r3
 802b38c:	460d      	mov	r5, r1
 802b38e:	4691      	mov	r9, r2
 802b390:	f7ff ffe3 	bl	802b35a <__retarget_lock_acquire_recursive>
 802b394:	4b23      	ldr	r3, [pc, #140]	; (802b424 <__register_exitproc+0xa8>)
 802b396:	681c      	ldr	r4, [r3, #0]
 802b398:	b934      	cbnz	r4, 802b3a8 <__register_exitproc+0x2c>
 802b39a:	4c23      	ldr	r4, [pc, #140]	; (802b428 <__register_exitproc+0xac>)
 802b39c:	601c      	str	r4, [r3, #0]
 802b39e:	4b23      	ldr	r3, [pc, #140]	; (802b42c <__register_exitproc+0xb0>)
 802b3a0:	b113      	cbz	r3, 802b3a8 <__register_exitproc+0x2c>
 802b3a2:	681b      	ldr	r3, [r3, #0]
 802b3a4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b3a8:	6863      	ldr	r3, [r4, #4]
 802b3aa:	2b1f      	cmp	r3, #31
 802b3ac:	dd07      	ble.n	802b3be <__register_exitproc+0x42>
 802b3ae:	f8d8 0000 	ldr.w	r0, [r8]
 802b3b2:	f7ff ffd3 	bl	802b35c <__retarget_lock_release_recursive>
 802b3b6:	f04f 30ff 	mov.w	r0, #4294967295
 802b3ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b3be:	b32e      	cbz	r6, 802b40c <__register_exitproc+0x90>
 802b3c0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b3c4:	b968      	cbnz	r0, 802b3e2 <__register_exitproc+0x66>
 802b3c6:	4b1a      	ldr	r3, [pc, #104]	; (802b430 <__register_exitproc+0xb4>)
 802b3c8:	2b00      	cmp	r3, #0
 802b3ca:	d0f0      	beq.n	802b3ae <__register_exitproc+0x32>
 802b3cc:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b3d0:	f7ff fcbe 	bl	802ad50 <malloc>
 802b3d4:	2800      	cmp	r0, #0
 802b3d6:	d0ea      	beq.n	802b3ae <__register_exitproc+0x32>
 802b3d8:	2300      	movs	r3, #0
 802b3da:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b3de:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b3e2:	6863      	ldr	r3, [r4, #4]
 802b3e4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b3e8:	2201      	movs	r2, #1
 802b3ea:	409a      	lsls	r2, r3
 802b3ec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b3f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b3f4:	4313      	orrs	r3, r2
 802b3f6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b3fa:	2e02      	cmp	r6, #2
 802b3fc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b400:	bf02      	ittt	eq
 802b402:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b406:	4313      	orreq	r3, r2
 802b408:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b40c:	6863      	ldr	r3, [r4, #4]
 802b40e:	f8d8 0000 	ldr.w	r0, [r8]
 802b412:	1c5a      	adds	r2, r3, #1
 802b414:	3302      	adds	r3, #2
 802b416:	6062      	str	r2, [r4, #4]
 802b418:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b41c:	f7ff ff9e 	bl	802b35c <__retarget_lock_release_recursive>
 802b420:	2000      	movs	r0, #0
 802b422:	e7ca      	b.n	802b3ba <__register_exitproc+0x3e>
 802b424:	20013f70 	.word	0x20013f70
 802b428:	20013ee4 	.word	0x20013ee4
 802b42c:	0804375c 	.word	0x0804375c
 802b430:	0802ad51 	.word	0x0802ad51
 802b434:	20000164 	.word	0x20000164

0802b438 <_free_r>:
 802b438:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b43a:	2900      	cmp	r1, #0
 802b43c:	d044      	beq.n	802b4c8 <_free_r+0x90>
 802b43e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b442:	9001      	str	r0, [sp, #4]
 802b444:	2b00      	cmp	r3, #0
 802b446:	f1a1 0404 	sub.w	r4, r1, #4
 802b44a:	bfb8      	it	lt
 802b44c:	18e4      	addlt	r4, r4, r3
 802b44e:	f7ff fd2f 	bl	802aeb0 <__malloc_lock>
 802b452:	4a1e      	ldr	r2, [pc, #120]	; (802b4cc <_free_r+0x94>)
 802b454:	9801      	ldr	r0, [sp, #4]
 802b456:	6813      	ldr	r3, [r2, #0]
 802b458:	b933      	cbnz	r3, 802b468 <_free_r+0x30>
 802b45a:	6063      	str	r3, [r4, #4]
 802b45c:	6014      	str	r4, [r2, #0]
 802b45e:	b003      	add	sp, #12
 802b460:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b464:	f7ff bd2a 	b.w	802aebc <__malloc_unlock>
 802b468:	42a3      	cmp	r3, r4
 802b46a:	d908      	bls.n	802b47e <_free_r+0x46>
 802b46c:	6825      	ldr	r5, [r4, #0]
 802b46e:	1961      	adds	r1, r4, r5
 802b470:	428b      	cmp	r3, r1
 802b472:	bf01      	itttt	eq
 802b474:	6819      	ldreq	r1, [r3, #0]
 802b476:	685b      	ldreq	r3, [r3, #4]
 802b478:	1949      	addeq	r1, r1, r5
 802b47a:	6021      	streq	r1, [r4, #0]
 802b47c:	e7ed      	b.n	802b45a <_free_r+0x22>
 802b47e:	461a      	mov	r2, r3
 802b480:	685b      	ldr	r3, [r3, #4]
 802b482:	b10b      	cbz	r3, 802b488 <_free_r+0x50>
 802b484:	42a3      	cmp	r3, r4
 802b486:	d9fa      	bls.n	802b47e <_free_r+0x46>
 802b488:	6811      	ldr	r1, [r2, #0]
 802b48a:	1855      	adds	r5, r2, r1
 802b48c:	42a5      	cmp	r5, r4
 802b48e:	d10b      	bne.n	802b4a8 <_free_r+0x70>
 802b490:	6824      	ldr	r4, [r4, #0]
 802b492:	4421      	add	r1, r4
 802b494:	1854      	adds	r4, r2, r1
 802b496:	42a3      	cmp	r3, r4
 802b498:	6011      	str	r1, [r2, #0]
 802b49a:	d1e0      	bne.n	802b45e <_free_r+0x26>
 802b49c:	681c      	ldr	r4, [r3, #0]
 802b49e:	685b      	ldr	r3, [r3, #4]
 802b4a0:	6053      	str	r3, [r2, #4]
 802b4a2:	440c      	add	r4, r1
 802b4a4:	6014      	str	r4, [r2, #0]
 802b4a6:	e7da      	b.n	802b45e <_free_r+0x26>
 802b4a8:	d902      	bls.n	802b4b0 <_free_r+0x78>
 802b4aa:	230c      	movs	r3, #12
 802b4ac:	6003      	str	r3, [r0, #0]
 802b4ae:	e7d6      	b.n	802b45e <_free_r+0x26>
 802b4b0:	6825      	ldr	r5, [r4, #0]
 802b4b2:	1961      	adds	r1, r4, r5
 802b4b4:	428b      	cmp	r3, r1
 802b4b6:	bf04      	itt	eq
 802b4b8:	6819      	ldreq	r1, [r3, #0]
 802b4ba:	685b      	ldreq	r3, [r3, #4]
 802b4bc:	6063      	str	r3, [r4, #4]
 802b4be:	bf04      	itt	eq
 802b4c0:	1949      	addeq	r1, r1, r5
 802b4c2:	6021      	streq	r1, [r4, #0]
 802b4c4:	6054      	str	r4, [r2, #4]
 802b4c6:	e7ca      	b.n	802b45e <_free_r+0x26>
 802b4c8:	b003      	add	sp, #12
 802b4ca:	bd30      	pop	{r4, r5, pc}
 802b4cc:	20013d98 	.word	0x20013d98

0802b4d0 <__sfputc_r>:
 802b4d0:	6893      	ldr	r3, [r2, #8]
 802b4d2:	3b01      	subs	r3, #1
 802b4d4:	2b00      	cmp	r3, #0
 802b4d6:	b410      	push	{r4}
 802b4d8:	6093      	str	r3, [r2, #8]
 802b4da:	da08      	bge.n	802b4ee <__sfputc_r+0x1e>
 802b4dc:	6994      	ldr	r4, [r2, #24]
 802b4de:	42a3      	cmp	r3, r4
 802b4e0:	db01      	blt.n	802b4e6 <__sfputc_r+0x16>
 802b4e2:	290a      	cmp	r1, #10
 802b4e4:	d103      	bne.n	802b4ee <__sfputc_r+0x1e>
 802b4e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4ea:	f000 bb73 	b.w	802bbd4 <__swbuf_r>
 802b4ee:	6813      	ldr	r3, [r2, #0]
 802b4f0:	1c58      	adds	r0, r3, #1
 802b4f2:	6010      	str	r0, [r2, #0]
 802b4f4:	7019      	strb	r1, [r3, #0]
 802b4f6:	4608      	mov	r0, r1
 802b4f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4fc:	4770      	bx	lr

0802b4fe <__sfputs_r>:
 802b4fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b500:	4606      	mov	r6, r0
 802b502:	460f      	mov	r7, r1
 802b504:	4614      	mov	r4, r2
 802b506:	18d5      	adds	r5, r2, r3
 802b508:	42ac      	cmp	r4, r5
 802b50a:	d101      	bne.n	802b510 <__sfputs_r+0x12>
 802b50c:	2000      	movs	r0, #0
 802b50e:	e007      	b.n	802b520 <__sfputs_r+0x22>
 802b510:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b514:	463a      	mov	r2, r7
 802b516:	4630      	mov	r0, r6
 802b518:	f7ff ffda 	bl	802b4d0 <__sfputc_r>
 802b51c:	1c43      	adds	r3, r0, #1
 802b51e:	d1f3      	bne.n	802b508 <__sfputs_r+0xa>
 802b520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b524 <_vfiprintf_r>:
 802b524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b528:	460d      	mov	r5, r1
 802b52a:	b09d      	sub	sp, #116	; 0x74
 802b52c:	4614      	mov	r4, r2
 802b52e:	4698      	mov	r8, r3
 802b530:	4606      	mov	r6, r0
 802b532:	b118      	cbz	r0, 802b53c <_vfiprintf_r+0x18>
 802b534:	6a03      	ldr	r3, [r0, #32]
 802b536:	b90b      	cbnz	r3, 802b53c <_vfiprintf_r+0x18>
 802b538:	f7ff fd60 	bl	802affc <__sinit>
 802b53c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b53e:	07d9      	lsls	r1, r3, #31
 802b540:	d405      	bmi.n	802b54e <_vfiprintf_r+0x2a>
 802b542:	89ab      	ldrh	r3, [r5, #12]
 802b544:	059a      	lsls	r2, r3, #22
 802b546:	d402      	bmi.n	802b54e <_vfiprintf_r+0x2a>
 802b548:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b54a:	f7ff ff06 	bl	802b35a <__retarget_lock_acquire_recursive>
 802b54e:	89ab      	ldrh	r3, [r5, #12]
 802b550:	071b      	lsls	r3, r3, #28
 802b552:	d501      	bpl.n	802b558 <_vfiprintf_r+0x34>
 802b554:	692b      	ldr	r3, [r5, #16]
 802b556:	b99b      	cbnz	r3, 802b580 <_vfiprintf_r+0x5c>
 802b558:	4629      	mov	r1, r5
 802b55a:	4630      	mov	r0, r6
 802b55c:	f000 fb78 	bl	802bc50 <__swsetup_r>
 802b560:	b170      	cbz	r0, 802b580 <_vfiprintf_r+0x5c>
 802b562:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b564:	07dc      	lsls	r4, r3, #31
 802b566:	d504      	bpl.n	802b572 <_vfiprintf_r+0x4e>
 802b568:	f04f 30ff 	mov.w	r0, #4294967295
 802b56c:	b01d      	add	sp, #116	; 0x74
 802b56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b572:	89ab      	ldrh	r3, [r5, #12]
 802b574:	0598      	lsls	r0, r3, #22
 802b576:	d4f7      	bmi.n	802b568 <_vfiprintf_r+0x44>
 802b578:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b57a:	f7ff feef 	bl	802b35c <__retarget_lock_release_recursive>
 802b57e:	e7f3      	b.n	802b568 <_vfiprintf_r+0x44>
 802b580:	2300      	movs	r3, #0
 802b582:	9309      	str	r3, [sp, #36]	; 0x24
 802b584:	2320      	movs	r3, #32
 802b586:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b58a:	f8cd 800c 	str.w	r8, [sp, #12]
 802b58e:	2330      	movs	r3, #48	; 0x30
 802b590:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b744 <_vfiprintf_r+0x220>
 802b594:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b598:	f04f 0901 	mov.w	r9, #1
 802b59c:	4623      	mov	r3, r4
 802b59e:	469a      	mov	sl, r3
 802b5a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b5a4:	b10a      	cbz	r2, 802b5aa <_vfiprintf_r+0x86>
 802b5a6:	2a25      	cmp	r2, #37	; 0x25
 802b5a8:	d1f9      	bne.n	802b59e <_vfiprintf_r+0x7a>
 802b5aa:	ebba 0b04 	subs.w	fp, sl, r4
 802b5ae:	d00b      	beq.n	802b5c8 <_vfiprintf_r+0xa4>
 802b5b0:	465b      	mov	r3, fp
 802b5b2:	4622      	mov	r2, r4
 802b5b4:	4629      	mov	r1, r5
 802b5b6:	4630      	mov	r0, r6
 802b5b8:	f7ff ffa1 	bl	802b4fe <__sfputs_r>
 802b5bc:	3001      	adds	r0, #1
 802b5be:	f000 80a9 	beq.w	802b714 <_vfiprintf_r+0x1f0>
 802b5c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b5c4:	445a      	add	r2, fp
 802b5c6:	9209      	str	r2, [sp, #36]	; 0x24
 802b5c8:	f89a 3000 	ldrb.w	r3, [sl]
 802b5cc:	2b00      	cmp	r3, #0
 802b5ce:	f000 80a1 	beq.w	802b714 <_vfiprintf_r+0x1f0>
 802b5d2:	2300      	movs	r3, #0
 802b5d4:	f04f 32ff 	mov.w	r2, #4294967295
 802b5d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b5dc:	f10a 0a01 	add.w	sl, sl, #1
 802b5e0:	9304      	str	r3, [sp, #16]
 802b5e2:	9307      	str	r3, [sp, #28]
 802b5e4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b5e8:	931a      	str	r3, [sp, #104]	; 0x68
 802b5ea:	4654      	mov	r4, sl
 802b5ec:	2205      	movs	r2, #5
 802b5ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b5f2:	4854      	ldr	r0, [pc, #336]	; (802b744 <_vfiprintf_r+0x220>)
 802b5f4:	f7d4 fe5c 	bl	80002b0 <memchr>
 802b5f8:	9a04      	ldr	r2, [sp, #16]
 802b5fa:	b9d8      	cbnz	r0, 802b634 <_vfiprintf_r+0x110>
 802b5fc:	06d1      	lsls	r1, r2, #27
 802b5fe:	bf44      	itt	mi
 802b600:	2320      	movmi	r3, #32
 802b602:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b606:	0713      	lsls	r3, r2, #28
 802b608:	bf44      	itt	mi
 802b60a:	232b      	movmi	r3, #43	; 0x2b
 802b60c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b610:	f89a 3000 	ldrb.w	r3, [sl]
 802b614:	2b2a      	cmp	r3, #42	; 0x2a
 802b616:	d015      	beq.n	802b644 <_vfiprintf_r+0x120>
 802b618:	9a07      	ldr	r2, [sp, #28]
 802b61a:	4654      	mov	r4, sl
 802b61c:	2000      	movs	r0, #0
 802b61e:	f04f 0c0a 	mov.w	ip, #10
 802b622:	4621      	mov	r1, r4
 802b624:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b628:	3b30      	subs	r3, #48	; 0x30
 802b62a:	2b09      	cmp	r3, #9
 802b62c:	d94d      	bls.n	802b6ca <_vfiprintf_r+0x1a6>
 802b62e:	b1b0      	cbz	r0, 802b65e <_vfiprintf_r+0x13a>
 802b630:	9207      	str	r2, [sp, #28]
 802b632:	e014      	b.n	802b65e <_vfiprintf_r+0x13a>
 802b634:	eba0 0308 	sub.w	r3, r0, r8
 802b638:	fa09 f303 	lsl.w	r3, r9, r3
 802b63c:	4313      	orrs	r3, r2
 802b63e:	9304      	str	r3, [sp, #16]
 802b640:	46a2      	mov	sl, r4
 802b642:	e7d2      	b.n	802b5ea <_vfiprintf_r+0xc6>
 802b644:	9b03      	ldr	r3, [sp, #12]
 802b646:	1d19      	adds	r1, r3, #4
 802b648:	681b      	ldr	r3, [r3, #0]
 802b64a:	9103      	str	r1, [sp, #12]
 802b64c:	2b00      	cmp	r3, #0
 802b64e:	bfbb      	ittet	lt
 802b650:	425b      	neglt	r3, r3
 802b652:	f042 0202 	orrlt.w	r2, r2, #2
 802b656:	9307      	strge	r3, [sp, #28]
 802b658:	9307      	strlt	r3, [sp, #28]
 802b65a:	bfb8      	it	lt
 802b65c:	9204      	strlt	r2, [sp, #16]
 802b65e:	7823      	ldrb	r3, [r4, #0]
 802b660:	2b2e      	cmp	r3, #46	; 0x2e
 802b662:	d10c      	bne.n	802b67e <_vfiprintf_r+0x15a>
 802b664:	7863      	ldrb	r3, [r4, #1]
 802b666:	2b2a      	cmp	r3, #42	; 0x2a
 802b668:	d134      	bne.n	802b6d4 <_vfiprintf_r+0x1b0>
 802b66a:	9b03      	ldr	r3, [sp, #12]
 802b66c:	1d1a      	adds	r2, r3, #4
 802b66e:	681b      	ldr	r3, [r3, #0]
 802b670:	9203      	str	r2, [sp, #12]
 802b672:	2b00      	cmp	r3, #0
 802b674:	bfb8      	it	lt
 802b676:	f04f 33ff 	movlt.w	r3, #4294967295
 802b67a:	3402      	adds	r4, #2
 802b67c:	9305      	str	r3, [sp, #20]
 802b67e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b754 <_vfiprintf_r+0x230>
 802b682:	7821      	ldrb	r1, [r4, #0]
 802b684:	2203      	movs	r2, #3
 802b686:	4650      	mov	r0, sl
 802b688:	f7d4 fe12 	bl	80002b0 <memchr>
 802b68c:	b138      	cbz	r0, 802b69e <_vfiprintf_r+0x17a>
 802b68e:	9b04      	ldr	r3, [sp, #16]
 802b690:	eba0 000a 	sub.w	r0, r0, sl
 802b694:	2240      	movs	r2, #64	; 0x40
 802b696:	4082      	lsls	r2, r0
 802b698:	4313      	orrs	r3, r2
 802b69a:	3401      	adds	r4, #1
 802b69c:	9304      	str	r3, [sp, #16]
 802b69e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b6a2:	4829      	ldr	r0, [pc, #164]	; (802b748 <_vfiprintf_r+0x224>)
 802b6a4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b6a8:	2206      	movs	r2, #6
 802b6aa:	f7d4 fe01 	bl	80002b0 <memchr>
 802b6ae:	2800      	cmp	r0, #0
 802b6b0:	d03f      	beq.n	802b732 <_vfiprintf_r+0x20e>
 802b6b2:	4b26      	ldr	r3, [pc, #152]	; (802b74c <_vfiprintf_r+0x228>)
 802b6b4:	bb1b      	cbnz	r3, 802b6fe <_vfiprintf_r+0x1da>
 802b6b6:	9b03      	ldr	r3, [sp, #12]
 802b6b8:	3307      	adds	r3, #7
 802b6ba:	f023 0307 	bic.w	r3, r3, #7
 802b6be:	3308      	adds	r3, #8
 802b6c0:	9303      	str	r3, [sp, #12]
 802b6c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b6c4:	443b      	add	r3, r7
 802b6c6:	9309      	str	r3, [sp, #36]	; 0x24
 802b6c8:	e768      	b.n	802b59c <_vfiprintf_r+0x78>
 802b6ca:	fb0c 3202 	mla	r2, ip, r2, r3
 802b6ce:	460c      	mov	r4, r1
 802b6d0:	2001      	movs	r0, #1
 802b6d2:	e7a6      	b.n	802b622 <_vfiprintf_r+0xfe>
 802b6d4:	2300      	movs	r3, #0
 802b6d6:	3401      	adds	r4, #1
 802b6d8:	9305      	str	r3, [sp, #20]
 802b6da:	4619      	mov	r1, r3
 802b6dc:	f04f 0c0a 	mov.w	ip, #10
 802b6e0:	4620      	mov	r0, r4
 802b6e2:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b6e6:	3a30      	subs	r2, #48	; 0x30
 802b6e8:	2a09      	cmp	r2, #9
 802b6ea:	d903      	bls.n	802b6f4 <_vfiprintf_r+0x1d0>
 802b6ec:	2b00      	cmp	r3, #0
 802b6ee:	d0c6      	beq.n	802b67e <_vfiprintf_r+0x15a>
 802b6f0:	9105      	str	r1, [sp, #20]
 802b6f2:	e7c4      	b.n	802b67e <_vfiprintf_r+0x15a>
 802b6f4:	fb0c 2101 	mla	r1, ip, r1, r2
 802b6f8:	4604      	mov	r4, r0
 802b6fa:	2301      	movs	r3, #1
 802b6fc:	e7f0      	b.n	802b6e0 <_vfiprintf_r+0x1bc>
 802b6fe:	ab03      	add	r3, sp, #12
 802b700:	9300      	str	r3, [sp, #0]
 802b702:	462a      	mov	r2, r5
 802b704:	4b12      	ldr	r3, [pc, #72]	; (802b750 <_vfiprintf_r+0x22c>)
 802b706:	a904      	add	r1, sp, #16
 802b708:	4630      	mov	r0, r6
 802b70a:	f3af 8000 	nop.w
 802b70e:	4607      	mov	r7, r0
 802b710:	1c78      	adds	r0, r7, #1
 802b712:	d1d6      	bne.n	802b6c2 <_vfiprintf_r+0x19e>
 802b714:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b716:	07d9      	lsls	r1, r3, #31
 802b718:	d405      	bmi.n	802b726 <_vfiprintf_r+0x202>
 802b71a:	89ab      	ldrh	r3, [r5, #12]
 802b71c:	059a      	lsls	r2, r3, #22
 802b71e:	d402      	bmi.n	802b726 <_vfiprintf_r+0x202>
 802b720:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b722:	f7ff fe1b 	bl	802b35c <__retarget_lock_release_recursive>
 802b726:	89ab      	ldrh	r3, [r5, #12]
 802b728:	065b      	lsls	r3, r3, #25
 802b72a:	f53f af1d 	bmi.w	802b568 <_vfiprintf_r+0x44>
 802b72e:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b730:	e71c      	b.n	802b56c <_vfiprintf_r+0x48>
 802b732:	ab03      	add	r3, sp, #12
 802b734:	9300      	str	r3, [sp, #0]
 802b736:	462a      	mov	r2, r5
 802b738:	4b05      	ldr	r3, [pc, #20]	; (802b750 <_vfiprintf_r+0x22c>)
 802b73a:	a904      	add	r1, sp, #16
 802b73c:	4630      	mov	r0, r6
 802b73e:	f000 f879 	bl	802b834 <_printf_i>
 802b742:	e7e4      	b.n	802b70e <_vfiprintf_r+0x1ea>
 802b744:	08043760 	.word	0x08043760
 802b748:	0804376a 	.word	0x0804376a
 802b74c:	00000000 	.word	0x00000000
 802b750:	0802b4ff 	.word	0x0802b4ff
 802b754:	08043766 	.word	0x08043766

0802b758 <_printf_common>:
 802b758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b75c:	4616      	mov	r6, r2
 802b75e:	4699      	mov	r9, r3
 802b760:	688a      	ldr	r2, [r1, #8]
 802b762:	690b      	ldr	r3, [r1, #16]
 802b764:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b768:	4293      	cmp	r3, r2
 802b76a:	bfb8      	it	lt
 802b76c:	4613      	movlt	r3, r2
 802b76e:	6033      	str	r3, [r6, #0]
 802b770:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b774:	4607      	mov	r7, r0
 802b776:	460c      	mov	r4, r1
 802b778:	b10a      	cbz	r2, 802b77e <_printf_common+0x26>
 802b77a:	3301      	adds	r3, #1
 802b77c:	6033      	str	r3, [r6, #0]
 802b77e:	6823      	ldr	r3, [r4, #0]
 802b780:	0699      	lsls	r1, r3, #26
 802b782:	bf42      	ittt	mi
 802b784:	6833      	ldrmi	r3, [r6, #0]
 802b786:	3302      	addmi	r3, #2
 802b788:	6033      	strmi	r3, [r6, #0]
 802b78a:	6825      	ldr	r5, [r4, #0]
 802b78c:	f015 0506 	ands.w	r5, r5, #6
 802b790:	d106      	bne.n	802b7a0 <_printf_common+0x48>
 802b792:	f104 0a19 	add.w	sl, r4, #25
 802b796:	68e3      	ldr	r3, [r4, #12]
 802b798:	6832      	ldr	r2, [r6, #0]
 802b79a:	1a9b      	subs	r3, r3, r2
 802b79c:	42ab      	cmp	r3, r5
 802b79e:	dc26      	bgt.n	802b7ee <_printf_common+0x96>
 802b7a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b7a4:	1e13      	subs	r3, r2, #0
 802b7a6:	6822      	ldr	r2, [r4, #0]
 802b7a8:	bf18      	it	ne
 802b7aa:	2301      	movne	r3, #1
 802b7ac:	0692      	lsls	r2, r2, #26
 802b7ae:	d42b      	bmi.n	802b808 <_printf_common+0xb0>
 802b7b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b7b4:	4649      	mov	r1, r9
 802b7b6:	4638      	mov	r0, r7
 802b7b8:	47c0      	blx	r8
 802b7ba:	3001      	adds	r0, #1
 802b7bc:	d01e      	beq.n	802b7fc <_printf_common+0xa4>
 802b7be:	6823      	ldr	r3, [r4, #0]
 802b7c0:	6922      	ldr	r2, [r4, #16]
 802b7c2:	f003 0306 	and.w	r3, r3, #6
 802b7c6:	2b04      	cmp	r3, #4
 802b7c8:	bf02      	ittt	eq
 802b7ca:	68e5      	ldreq	r5, [r4, #12]
 802b7cc:	6833      	ldreq	r3, [r6, #0]
 802b7ce:	1aed      	subeq	r5, r5, r3
 802b7d0:	68a3      	ldr	r3, [r4, #8]
 802b7d2:	bf0c      	ite	eq
 802b7d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b7d8:	2500      	movne	r5, #0
 802b7da:	4293      	cmp	r3, r2
 802b7dc:	bfc4      	itt	gt
 802b7de:	1a9b      	subgt	r3, r3, r2
 802b7e0:	18ed      	addgt	r5, r5, r3
 802b7e2:	2600      	movs	r6, #0
 802b7e4:	341a      	adds	r4, #26
 802b7e6:	42b5      	cmp	r5, r6
 802b7e8:	d11a      	bne.n	802b820 <_printf_common+0xc8>
 802b7ea:	2000      	movs	r0, #0
 802b7ec:	e008      	b.n	802b800 <_printf_common+0xa8>
 802b7ee:	2301      	movs	r3, #1
 802b7f0:	4652      	mov	r2, sl
 802b7f2:	4649      	mov	r1, r9
 802b7f4:	4638      	mov	r0, r7
 802b7f6:	47c0      	blx	r8
 802b7f8:	3001      	adds	r0, #1
 802b7fa:	d103      	bne.n	802b804 <_printf_common+0xac>
 802b7fc:	f04f 30ff 	mov.w	r0, #4294967295
 802b800:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b804:	3501      	adds	r5, #1
 802b806:	e7c6      	b.n	802b796 <_printf_common+0x3e>
 802b808:	18e1      	adds	r1, r4, r3
 802b80a:	1c5a      	adds	r2, r3, #1
 802b80c:	2030      	movs	r0, #48	; 0x30
 802b80e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b812:	4422      	add	r2, r4
 802b814:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b818:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b81c:	3302      	adds	r3, #2
 802b81e:	e7c7      	b.n	802b7b0 <_printf_common+0x58>
 802b820:	2301      	movs	r3, #1
 802b822:	4622      	mov	r2, r4
 802b824:	4649      	mov	r1, r9
 802b826:	4638      	mov	r0, r7
 802b828:	47c0      	blx	r8
 802b82a:	3001      	adds	r0, #1
 802b82c:	d0e6      	beq.n	802b7fc <_printf_common+0xa4>
 802b82e:	3601      	adds	r6, #1
 802b830:	e7d9      	b.n	802b7e6 <_printf_common+0x8e>
	...

0802b834 <_printf_i>:
 802b834:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b838:	7e0f      	ldrb	r7, [r1, #24]
 802b83a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b83c:	2f78      	cmp	r7, #120	; 0x78
 802b83e:	4691      	mov	r9, r2
 802b840:	4680      	mov	r8, r0
 802b842:	460c      	mov	r4, r1
 802b844:	469a      	mov	sl, r3
 802b846:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b84a:	d807      	bhi.n	802b85c <_printf_i+0x28>
 802b84c:	2f62      	cmp	r7, #98	; 0x62
 802b84e:	d80a      	bhi.n	802b866 <_printf_i+0x32>
 802b850:	2f00      	cmp	r7, #0
 802b852:	f000 80d4 	beq.w	802b9fe <_printf_i+0x1ca>
 802b856:	2f58      	cmp	r7, #88	; 0x58
 802b858:	f000 80c0 	beq.w	802b9dc <_printf_i+0x1a8>
 802b85c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b860:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b864:	e03a      	b.n	802b8dc <_printf_i+0xa8>
 802b866:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b86a:	2b15      	cmp	r3, #21
 802b86c:	d8f6      	bhi.n	802b85c <_printf_i+0x28>
 802b86e:	a101      	add	r1, pc, #4	; (adr r1, 802b874 <_printf_i+0x40>)
 802b870:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b874:	0802b8cd 	.word	0x0802b8cd
 802b878:	0802b8e1 	.word	0x0802b8e1
 802b87c:	0802b85d 	.word	0x0802b85d
 802b880:	0802b85d 	.word	0x0802b85d
 802b884:	0802b85d 	.word	0x0802b85d
 802b888:	0802b85d 	.word	0x0802b85d
 802b88c:	0802b8e1 	.word	0x0802b8e1
 802b890:	0802b85d 	.word	0x0802b85d
 802b894:	0802b85d 	.word	0x0802b85d
 802b898:	0802b85d 	.word	0x0802b85d
 802b89c:	0802b85d 	.word	0x0802b85d
 802b8a0:	0802b9e5 	.word	0x0802b9e5
 802b8a4:	0802b90d 	.word	0x0802b90d
 802b8a8:	0802b99f 	.word	0x0802b99f
 802b8ac:	0802b85d 	.word	0x0802b85d
 802b8b0:	0802b85d 	.word	0x0802b85d
 802b8b4:	0802ba07 	.word	0x0802ba07
 802b8b8:	0802b85d 	.word	0x0802b85d
 802b8bc:	0802b90d 	.word	0x0802b90d
 802b8c0:	0802b85d 	.word	0x0802b85d
 802b8c4:	0802b85d 	.word	0x0802b85d
 802b8c8:	0802b9a7 	.word	0x0802b9a7
 802b8cc:	682b      	ldr	r3, [r5, #0]
 802b8ce:	1d1a      	adds	r2, r3, #4
 802b8d0:	681b      	ldr	r3, [r3, #0]
 802b8d2:	602a      	str	r2, [r5, #0]
 802b8d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b8d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b8dc:	2301      	movs	r3, #1
 802b8de:	e09f      	b.n	802ba20 <_printf_i+0x1ec>
 802b8e0:	6820      	ldr	r0, [r4, #0]
 802b8e2:	682b      	ldr	r3, [r5, #0]
 802b8e4:	0607      	lsls	r7, r0, #24
 802b8e6:	f103 0104 	add.w	r1, r3, #4
 802b8ea:	6029      	str	r1, [r5, #0]
 802b8ec:	d501      	bpl.n	802b8f2 <_printf_i+0xbe>
 802b8ee:	681e      	ldr	r6, [r3, #0]
 802b8f0:	e003      	b.n	802b8fa <_printf_i+0xc6>
 802b8f2:	0646      	lsls	r6, r0, #25
 802b8f4:	d5fb      	bpl.n	802b8ee <_printf_i+0xba>
 802b8f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b8fa:	2e00      	cmp	r6, #0
 802b8fc:	da03      	bge.n	802b906 <_printf_i+0xd2>
 802b8fe:	232d      	movs	r3, #45	; 0x2d
 802b900:	4276      	negs	r6, r6
 802b902:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b906:	485a      	ldr	r0, [pc, #360]	; (802ba70 <_printf_i+0x23c>)
 802b908:	230a      	movs	r3, #10
 802b90a:	e012      	b.n	802b932 <_printf_i+0xfe>
 802b90c:	682b      	ldr	r3, [r5, #0]
 802b90e:	6820      	ldr	r0, [r4, #0]
 802b910:	1d19      	adds	r1, r3, #4
 802b912:	6029      	str	r1, [r5, #0]
 802b914:	0605      	lsls	r5, r0, #24
 802b916:	d501      	bpl.n	802b91c <_printf_i+0xe8>
 802b918:	681e      	ldr	r6, [r3, #0]
 802b91a:	e002      	b.n	802b922 <_printf_i+0xee>
 802b91c:	0641      	lsls	r1, r0, #25
 802b91e:	d5fb      	bpl.n	802b918 <_printf_i+0xe4>
 802b920:	881e      	ldrh	r6, [r3, #0]
 802b922:	4853      	ldr	r0, [pc, #332]	; (802ba70 <_printf_i+0x23c>)
 802b924:	2f6f      	cmp	r7, #111	; 0x6f
 802b926:	bf0c      	ite	eq
 802b928:	2308      	moveq	r3, #8
 802b92a:	230a      	movne	r3, #10
 802b92c:	2100      	movs	r1, #0
 802b92e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b932:	6865      	ldr	r5, [r4, #4]
 802b934:	60a5      	str	r5, [r4, #8]
 802b936:	2d00      	cmp	r5, #0
 802b938:	bfa2      	ittt	ge
 802b93a:	6821      	ldrge	r1, [r4, #0]
 802b93c:	f021 0104 	bicge.w	r1, r1, #4
 802b940:	6021      	strge	r1, [r4, #0]
 802b942:	b90e      	cbnz	r6, 802b948 <_printf_i+0x114>
 802b944:	2d00      	cmp	r5, #0
 802b946:	d04b      	beq.n	802b9e0 <_printf_i+0x1ac>
 802b948:	4615      	mov	r5, r2
 802b94a:	fbb6 f1f3 	udiv	r1, r6, r3
 802b94e:	fb03 6711 	mls	r7, r3, r1, r6
 802b952:	5dc7      	ldrb	r7, [r0, r7]
 802b954:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b958:	4637      	mov	r7, r6
 802b95a:	42bb      	cmp	r3, r7
 802b95c:	460e      	mov	r6, r1
 802b95e:	d9f4      	bls.n	802b94a <_printf_i+0x116>
 802b960:	2b08      	cmp	r3, #8
 802b962:	d10b      	bne.n	802b97c <_printf_i+0x148>
 802b964:	6823      	ldr	r3, [r4, #0]
 802b966:	07de      	lsls	r6, r3, #31
 802b968:	d508      	bpl.n	802b97c <_printf_i+0x148>
 802b96a:	6923      	ldr	r3, [r4, #16]
 802b96c:	6861      	ldr	r1, [r4, #4]
 802b96e:	4299      	cmp	r1, r3
 802b970:	bfde      	ittt	le
 802b972:	2330      	movle	r3, #48	; 0x30
 802b974:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b978:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b97c:	1b52      	subs	r2, r2, r5
 802b97e:	6122      	str	r2, [r4, #16]
 802b980:	f8cd a000 	str.w	sl, [sp]
 802b984:	464b      	mov	r3, r9
 802b986:	aa03      	add	r2, sp, #12
 802b988:	4621      	mov	r1, r4
 802b98a:	4640      	mov	r0, r8
 802b98c:	f7ff fee4 	bl	802b758 <_printf_common>
 802b990:	3001      	adds	r0, #1
 802b992:	d14a      	bne.n	802ba2a <_printf_i+0x1f6>
 802b994:	f04f 30ff 	mov.w	r0, #4294967295
 802b998:	b004      	add	sp, #16
 802b99a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b99e:	6823      	ldr	r3, [r4, #0]
 802b9a0:	f043 0320 	orr.w	r3, r3, #32
 802b9a4:	6023      	str	r3, [r4, #0]
 802b9a6:	4833      	ldr	r0, [pc, #204]	; (802ba74 <_printf_i+0x240>)
 802b9a8:	2778      	movs	r7, #120	; 0x78
 802b9aa:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b9ae:	6823      	ldr	r3, [r4, #0]
 802b9b0:	6829      	ldr	r1, [r5, #0]
 802b9b2:	061f      	lsls	r7, r3, #24
 802b9b4:	f851 6b04 	ldr.w	r6, [r1], #4
 802b9b8:	d402      	bmi.n	802b9c0 <_printf_i+0x18c>
 802b9ba:	065f      	lsls	r7, r3, #25
 802b9bc:	bf48      	it	mi
 802b9be:	b2b6      	uxthmi	r6, r6
 802b9c0:	07df      	lsls	r7, r3, #31
 802b9c2:	bf48      	it	mi
 802b9c4:	f043 0320 	orrmi.w	r3, r3, #32
 802b9c8:	6029      	str	r1, [r5, #0]
 802b9ca:	bf48      	it	mi
 802b9cc:	6023      	strmi	r3, [r4, #0]
 802b9ce:	b91e      	cbnz	r6, 802b9d8 <_printf_i+0x1a4>
 802b9d0:	6823      	ldr	r3, [r4, #0]
 802b9d2:	f023 0320 	bic.w	r3, r3, #32
 802b9d6:	6023      	str	r3, [r4, #0]
 802b9d8:	2310      	movs	r3, #16
 802b9da:	e7a7      	b.n	802b92c <_printf_i+0xf8>
 802b9dc:	4824      	ldr	r0, [pc, #144]	; (802ba70 <_printf_i+0x23c>)
 802b9de:	e7e4      	b.n	802b9aa <_printf_i+0x176>
 802b9e0:	4615      	mov	r5, r2
 802b9e2:	e7bd      	b.n	802b960 <_printf_i+0x12c>
 802b9e4:	682b      	ldr	r3, [r5, #0]
 802b9e6:	6826      	ldr	r6, [r4, #0]
 802b9e8:	6961      	ldr	r1, [r4, #20]
 802b9ea:	1d18      	adds	r0, r3, #4
 802b9ec:	6028      	str	r0, [r5, #0]
 802b9ee:	0635      	lsls	r5, r6, #24
 802b9f0:	681b      	ldr	r3, [r3, #0]
 802b9f2:	d501      	bpl.n	802b9f8 <_printf_i+0x1c4>
 802b9f4:	6019      	str	r1, [r3, #0]
 802b9f6:	e002      	b.n	802b9fe <_printf_i+0x1ca>
 802b9f8:	0670      	lsls	r0, r6, #25
 802b9fa:	d5fb      	bpl.n	802b9f4 <_printf_i+0x1c0>
 802b9fc:	8019      	strh	r1, [r3, #0]
 802b9fe:	2300      	movs	r3, #0
 802ba00:	6123      	str	r3, [r4, #16]
 802ba02:	4615      	mov	r5, r2
 802ba04:	e7bc      	b.n	802b980 <_printf_i+0x14c>
 802ba06:	682b      	ldr	r3, [r5, #0]
 802ba08:	1d1a      	adds	r2, r3, #4
 802ba0a:	602a      	str	r2, [r5, #0]
 802ba0c:	681d      	ldr	r5, [r3, #0]
 802ba0e:	6862      	ldr	r2, [r4, #4]
 802ba10:	2100      	movs	r1, #0
 802ba12:	4628      	mov	r0, r5
 802ba14:	f7d4 fc4c 	bl	80002b0 <memchr>
 802ba18:	b108      	cbz	r0, 802ba1e <_printf_i+0x1ea>
 802ba1a:	1b40      	subs	r0, r0, r5
 802ba1c:	6060      	str	r0, [r4, #4]
 802ba1e:	6863      	ldr	r3, [r4, #4]
 802ba20:	6123      	str	r3, [r4, #16]
 802ba22:	2300      	movs	r3, #0
 802ba24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ba28:	e7aa      	b.n	802b980 <_printf_i+0x14c>
 802ba2a:	6923      	ldr	r3, [r4, #16]
 802ba2c:	462a      	mov	r2, r5
 802ba2e:	4649      	mov	r1, r9
 802ba30:	4640      	mov	r0, r8
 802ba32:	47d0      	blx	sl
 802ba34:	3001      	adds	r0, #1
 802ba36:	d0ad      	beq.n	802b994 <_printf_i+0x160>
 802ba38:	6823      	ldr	r3, [r4, #0]
 802ba3a:	079b      	lsls	r3, r3, #30
 802ba3c:	d413      	bmi.n	802ba66 <_printf_i+0x232>
 802ba3e:	68e0      	ldr	r0, [r4, #12]
 802ba40:	9b03      	ldr	r3, [sp, #12]
 802ba42:	4298      	cmp	r0, r3
 802ba44:	bfb8      	it	lt
 802ba46:	4618      	movlt	r0, r3
 802ba48:	e7a6      	b.n	802b998 <_printf_i+0x164>
 802ba4a:	2301      	movs	r3, #1
 802ba4c:	4632      	mov	r2, r6
 802ba4e:	4649      	mov	r1, r9
 802ba50:	4640      	mov	r0, r8
 802ba52:	47d0      	blx	sl
 802ba54:	3001      	adds	r0, #1
 802ba56:	d09d      	beq.n	802b994 <_printf_i+0x160>
 802ba58:	3501      	adds	r5, #1
 802ba5a:	68e3      	ldr	r3, [r4, #12]
 802ba5c:	9903      	ldr	r1, [sp, #12]
 802ba5e:	1a5b      	subs	r3, r3, r1
 802ba60:	42ab      	cmp	r3, r5
 802ba62:	dcf2      	bgt.n	802ba4a <_printf_i+0x216>
 802ba64:	e7eb      	b.n	802ba3e <_printf_i+0x20a>
 802ba66:	2500      	movs	r5, #0
 802ba68:	f104 0619 	add.w	r6, r4, #25
 802ba6c:	e7f5      	b.n	802ba5a <_printf_i+0x226>
 802ba6e:	bf00      	nop
 802ba70:	08043771 	.word	0x08043771
 802ba74:	08043782 	.word	0x08043782

0802ba78 <__sflush_r>:
 802ba78:	898a      	ldrh	r2, [r1, #12]
 802ba7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ba7e:	4605      	mov	r5, r0
 802ba80:	0710      	lsls	r0, r2, #28
 802ba82:	460c      	mov	r4, r1
 802ba84:	d458      	bmi.n	802bb38 <__sflush_r+0xc0>
 802ba86:	684b      	ldr	r3, [r1, #4]
 802ba88:	2b00      	cmp	r3, #0
 802ba8a:	dc05      	bgt.n	802ba98 <__sflush_r+0x20>
 802ba8c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ba8e:	2b00      	cmp	r3, #0
 802ba90:	dc02      	bgt.n	802ba98 <__sflush_r+0x20>
 802ba92:	2000      	movs	r0, #0
 802ba94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba98:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ba9a:	2e00      	cmp	r6, #0
 802ba9c:	d0f9      	beq.n	802ba92 <__sflush_r+0x1a>
 802ba9e:	2300      	movs	r3, #0
 802baa0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802baa4:	682f      	ldr	r7, [r5, #0]
 802baa6:	6a21      	ldr	r1, [r4, #32]
 802baa8:	602b      	str	r3, [r5, #0]
 802baaa:	d032      	beq.n	802bb12 <__sflush_r+0x9a>
 802baac:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802baae:	89a3      	ldrh	r3, [r4, #12]
 802bab0:	075a      	lsls	r2, r3, #29
 802bab2:	d505      	bpl.n	802bac0 <__sflush_r+0x48>
 802bab4:	6863      	ldr	r3, [r4, #4]
 802bab6:	1ac0      	subs	r0, r0, r3
 802bab8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802baba:	b10b      	cbz	r3, 802bac0 <__sflush_r+0x48>
 802babc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802babe:	1ac0      	subs	r0, r0, r3
 802bac0:	2300      	movs	r3, #0
 802bac2:	4602      	mov	r2, r0
 802bac4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bac6:	6a21      	ldr	r1, [r4, #32]
 802bac8:	4628      	mov	r0, r5
 802baca:	47b0      	blx	r6
 802bacc:	1c43      	adds	r3, r0, #1
 802bace:	89a3      	ldrh	r3, [r4, #12]
 802bad0:	d106      	bne.n	802bae0 <__sflush_r+0x68>
 802bad2:	6829      	ldr	r1, [r5, #0]
 802bad4:	291d      	cmp	r1, #29
 802bad6:	d82b      	bhi.n	802bb30 <__sflush_r+0xb8>
 802bad8:	4a29      	ldr	r2, [pc, #164]	; (802bb80 <__sflush_r+0x108>)
 802bada:	410a      	asrs	r2, r1
 802badc:	07d6      	lsls	r6, r2, #31
 802bade:	d427      	bmi.n	802bb30 <__sflush_r+0xb8>
 802bae0:	2200      	movs	r2, #0
 802bae2:	6062      	str	r2, [r4, #4]
 802bae4:	04d9      	lsls	r1, r3, #19
 802bae6:	6922      	ldr	r2, [r4, #16]
 802bae8:	6022      	str	r2, [r4, #0]
 802baea:	d504      	bpl.n	802baf6 <__sflush_r+0x7e>
 802baec:	1c42      	adds	r2, r0, #1
 802baee:	d101      	bne.n	802baf4 <__sflush_r+0x7c>
 802baf0:	682b      	ldr	r3, [r5, #0]
 802baf2:	b903      	cbnz	r3, 802baf6 <__sflush_r+0x7e>
 802baf4:	6560      	str	r0, [r4, #84]	; 0x54
 802baf6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802baf8:	602f      	str	r7, [r5, #0]
 802bafa:	2900      	cmp	r1, #0
 802bafc:	d0c9      	beq.n	802ba92 <__sflush_r+0x1a>
 802bafe:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bb02:	4299      	cmp	r1, r3
 802bb04:	d002      	beq.n	802bb0c <__sflush_r+0x94>
 802bb06:	4628      	mov	r0, r5
 802bb08:	f7ff fc96 	bl	802b438 <_free_r>
 802bb0c:	2000      	movs	r0, #0
 802bb0e:	6360      	str	r0, [r4, #52]	; 0x34
 802bb10:	e7c0      	b.n	802ba94 <__sflush_r+0x1c>
 802bb12:	2301      	movs	r3, #1
 802bb14:	4628      	mov	r0, r5
 802bb16:	47b0      	blx	r6
 802bb18:	1c41      	adds	r1, r0, #1
 802bb1a:	d1c8      	bne.n	802baae <__sflush_r+0x36>
 802bb1c:	682b      	ldr	r3, [r5, #0]
 802bb1e:	2b00      	cmp	r3, #0
 802bb20:	d0c5      	beq.n	802baae <__sflush_r+0x36>
 802bb22:	2b1d      	cmp	r3, #29
 802bb24:	d001      	beq.n	802bb2a <__sflush_r+0xb2>
 802bb26:	2b16      	cmp	r3, #22
 802bb28:	d101      	bne.n	802bb2e <__sflush_r+0xb6>
 802bb2a:	602f      	str	r7, [r5, #0]
 802bb2c:	e7b1      	b.n	802ba92 <__sflush_r+0x1a>
 802bb2e:	89a3      	ldrh	r3, [r4, #12]
 802bb30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bb34:	81a3      	strh	r3, [r4, #12]
 802bb36:	e7ad      	b.n	802ba94 <__sflush_r+0x1c>
 802bb38:	690f      	ldr	r7, [r1, #16]
 802bb3a:	2f00      	cmp	r7, #0
 802bb3c:	d0a9      	beq.n	802ba92 <__sflush_r+0x1a>
 802bb3e:	0793      	lsls	r3, r2, #30
 802bb40:	680e      	ldr	r6, [r1, #0]
 802bb42:	bf08      	it	eq
 802bb44:	694b      	ldreq	r3, [r1, #20]
 802bb46:	600f      	str	r7, [r1, #0]
 802bb48:	bf18      	it	ne
 802bb4a:	2300      	movne	r3, #0
 802bb4c:	eba6 0807 	sub.w	r8, r6, r7
 802bb50:	608b      	str	r3, [r1, #8]
 802bb52:	f1b8 0f00 	cmp.w	r8, #0
 802bb56:	dd9c      	ble.n	802ba92 <__sflush_r+0x1a>
 802bb58:	6a21      	ldr	r1, [r4, #32]
 802bb5a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802bb5c:	4643      	mov	r3, r8
 802bb5e:	463a      	mov	r2, r7
 802bb60:	4628      	mov	r0, r5
 802bb62:	47b0      	blx	r6
 802bb64:	2800      	cmp	r0, #0
 802bb66:	dc06      	bgt.n	802bb76 <__sflush_r+0xfe>
 802bb68:	89a3      	ldrh	r3, [r4, #12]
 802bb6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bb6e:	81a3      	strh	r3, [r4, #12]
 802bb70:	f04f 30ff 	mov.w	r0, #4294967295
 802bb74:	e78e      	b.n	802ba94 <__sflush_r+0x1c>
 802bb76:	4407      	add	r7, r0
 802bb78:	eba8 0800 	sub.w	r8, r8, r0
 802bb7c:	e7e9      	b.n	802bb52 <__sflush_r+0xda>
 802bb7e:	bf00      	nop
 802bb80:	dfbffffe 	.word	0xdfbffffe

0802bb84 <_fflush_r>:
 802bb84:	b538      	push	{r3, r4, r5, lr}
 802bb86:	690b      	ldr	r3, [r1, #16]
 802bb88:	4605      	mov	r5, r0
 802bb8a:	460c      	mov	r4, r1
 802bb8c:	b913      	cbnz	r3, 802bb94 <_fflush_r+0x10>
 802bb8e:	2500      	movs	r5, #0
 802bb90:	4628      	mov	r0, r5
 802bb92:	bd38      	pop	{r3, r4, r5, pc}
 802bb94:	b118      	cbz	r0, 802bb9e <_fflush_r+0x1a>
 802bb96:	6a03      	ldr	r3, [r0, #32]
 802bb98:	b90b      	cbnz	r3, 802bb9e <_fflush_r+0x1a>
 802bb9a:	f7ff fa2f 	bl	802affc <__sinit>
 802bb9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bba2:	2b00      	cmp	r3, #0
 802bba4:	d0f3      	beq.n	802bb8e <_fflush_r+0xa>
 802bba6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802bba8:	07d0      	lsls	r0, r2, #31
 802bbaa:	d404      	bmi.n	802bbb6 <_fflush_r+0x32>
 802bbac:	0599      	lsls	r1, r3, #22
 802bbae:	d402      	bmi.n	802bbb6 <_fflush_r+0x32>
 802bbb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bbb2:	f7ff fbd2 	bl	802b35a <__retarget_lock_acquire_recursive>
 802bbb6:	4628      	mov	r0, r5
 802bbb8:	4621      	mov	r1, r4
 802bbba:	f7ff ff5d 	bl	802ba78 <__sflush_r>
 802bbbe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bbc0:	07da      	lsls	r2, r3, #31
 802bbc2:	4605      	mov	r5, r0
 802bbc4:	d4e4      	bmi.n	802bb90 <_fflush_r+0xc>
 802bbc6:	89a3      	ldrh	r3, [r4, #12]
 802bbc8:	059b      	lsls	r3, r3, #22
 802bbca:	d4e1      	bmi.n	802bb90 <_fflush_r+0xc>
 802bbcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bbce:	f7ff fbc5 	bl	802b35c <__retarget_lock_release_recursive>
 802bbd2:	e7dd      	b.n	802bb90 <_fflush_r+0xc>

0802bbd4 <__swbuf_r>:
 802bbd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bbd6:	460e      	mov	r6, r1
 802bbd8:	4614      	mov	r4, r2
 802bbda:	4605      	mov	r5, r0
 802bbdc:	b118      	cbz	r0, 802bbe6 <__swbuf_r+0x12>
 802bbde:	6a03      	ldr	r3, [r0, #32]
 802bbe0:	b90b      	cbnz	r3, 802bbe6 <__swbuf_r+0x12>
 802bbe2:	f7ff fa0b 	bl	802affc <__sinit>
 802bbe6:	69a3      	ldr	r3, [r4, #24]
 802bbe8:	60a3      	str	r3, [r4, #8]
 802bbea:	89a3      	ldrh	r3, [r4, #12]
 802bbec:	071a      	lsls	r2, r3, #28
 802bbee:	d525      	bpl.n	802bc3c <__swbuf_r+0x68>
 802bbf0:	6923      	ldr	r3, [r4, #16]
 802bbf2:	b31b      	cbz	r3, 802bc3c <__swbuf_r+0x68>
 802bbf4:	6823      	ldr	r3, [r4, #0]
 802bbf6:	6922      	ldr	r2, [r4, #16]
 802bbf8:	1a98      	subs	r0, r3, r2
 802bbfa:	6963      	ldr	r3, [r4, #20]
 802bbfc:	b2f6      	uxtb	r6, r6
 802bbfe:	4283      	cmp	r3, r0
 802bc00:	4637      	mov	r7, r6
 802bc02:	dc04      	bgt.n	802bc0e <__swbuf_r+0x3a>
 802bc04:	4621      	mov	r1, r4
 802bc06:	4628      	mov	r0, r5
 802bc08:	f7ff ffbc 	bl	802bb84 <_fflush_r>
 802bc0c:	b9e0      	cbnz	r0, 802bc48 <__swbuf_r+0x74>
 802bc0e:	68a3      	ldr	r3, [r4, #8]
 802bc10:	3b01      	subs	r3, #1
 802bc12:	60a3      	str	r3, [r4, #8]
 802bc14:	6823      	ldr	r3, [r4, #0]
 802bc16:	1c5a      	adds	r2, r3, #1
 802bc18:	6022      	str	r2, [r4, #0]
 802bc1a:	701e      	strb	r6, [r3, #0]
 802bc1c:	6962      	ldr	r2, [r4, #20]
 802bc1e:	1c43      	adds	r3, r0, #1
 802bc20:	429a      	cmp	r2, r3
 802bc22:	d004      	beq.n	802bc2e <__swbuf_r+0x5a>
 802bc24:	89a3      	ldrh	r3, [r4, #12]
 802bc26:	07db      	lsls	r3, r3, #31
 802bc28:	d506      	bpl.n	802bc38 <__swbuf_r+0x64>
 802bc2a:	2e0a      	cmp	r6, #10
 802bc2c:	d104      	bne.n	802bc38 <__swbuf_r+0x64>
 802bc2e:	4621      	mov	r1, r4
 802bc30:	4628      	mov	r0, r5
 802bc32:	f7ff ffa7 	bl	802bb84 <_fflush_r>
 802bc36:	b938      	cbnz	r0, 802bc48 <__swbuf_r+0x74>
 802bc38:	4638      	mov	r0, r7
 802bc3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bc3c:	4621      	mov	r1, r4
 802bc3e:	4628      	mov	r0, r5
 802bc40:	f000 f806 	bl	802bc50 <__swsetup_r>
 802bc44:	2800      	cmp	r0, #0
 802bc46:	d0d5      	beq.n	802bbf4 <__swbuf_r+0x20>
 802bc48:	f04f 37ff 	mov.w	r7, #4294967295
 802bc4c:	e7f4      	b.n	802bc38 <__swbuf_r+0x64>
	...

0802bc50 <__swsetup_r>:
 802bc50:	b538      	push	{r3, r4, r5, lr}
 802bc52:	4b2a      	ldr	r3, [pc, #168]	; (802bcfc <__swsetup_r+0xac>)
 802bc54:	4605      	mov	r5, r0
 802bc56:	6818      	ldr	r0, [r3, #0]
 802bc58:	460c      	mov	r4, r1
 802bc5a:	b118      	cbz	r0, 802bc64 <__swsetup_r+0x14>
 802bc5c:	6a03      	ldr	r3, [r0, #32]
 802bc5e:	b90b      	cbnz	r3, 802bc64 <__swsetup_r+0x14>
 802bc60:	f7ff f9cc 	bl	802affc <__sinit>
 802bc64:	89a3      	ldrh	r3, [r4, #12]
 802bc66:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bc6a:	0718      	lsls	r0, r3, #28
 802bc6c:	d422      	bmi.n	802bcb4 <__swsetup_r+0x64>
 802bc6e:	06d9      	lsls	r1, r3, #27
 802bc70:	d407      	bmi.n	802bc82 <__swsetup_r+0x32>
 802bc72:	2309      	movs	r3, #9
 802bc74:	602b      	str	r3, [r5, #0]
 802bc76:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802bc7a:	81a3      	strh	r3, [r4, #12]
 802bc7c:	f04f 30ff 	mov.w	r0, #4294967295
 802bc80:	e034      	b.n	802bcec <__swsetup_r+0x9c>
 802bc82:	0758      	lsls	r0, r3, #29
 802bc84:	d512      	bpl.n	802bcac <__swsetup_r+0x5c>
 802bc86:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bc88:	b141      	cbz	r1, 802bc9c <__swsetup_r+0x4c>
 802bc8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bc8e:	4299      	cmp	r1, r3
 802bc90:	d002      	beq.n	802bc98 <__swsetup_r+0x48>
 802bc92:	4628      	mov	r0, r5
 802bc94:	f7ff fbd0 	bl	802b438 <_free_r>
 802bc98:	2300      	movs	r3, #0
 802bc9a:	6363      	str	r3, [r4, #52]	; 0x34
 802bc9c:	89a3      	ldrh	r3, [r4, #12]
 802bc9e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802bca2:	81a3      	strh	r3, [r4, #12]
 802bca4:	2300      	movs	r3, #0
 802bca6:	6063      	str	r3, [r4, #4]
 802bca8:	6923      	ldr	r3, [r4, #16]
 802bcaa:	6023      	str	r3, [r4, #0]
 802bcac:	89a3      	ldrh	r3, [r4, #12]
 802bcae:	f043 0308 	orr.w	r3, r3, #8
 802bcb2:	81a3      	strh	r3, [r4, #12]
 802bcb4:	6923      	ldr	r3, [r4, #16]
 802bcb6:	b94b      	cbnz	r3, 802bccc <__swsetup_r+0x7c>
 802bcb8:	89a3      	ldrh	r3, [r4, #12]
 802bcba:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802bcbe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bcc2:	d003      	beq.n	802bccc <__swsetup_r+0x7c>
 802bcc4:	4621      	mov	r1, r4
 802bcc6:	4628      	mov	r0, r5
 802bcc8:	f000 f840 	bl	802bd4c <__smakebuf_r>
 802bccc:	89a0      	ldrh	r0, [r4, #12]
 802bcce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bcd2:	f010 0301 	ands.w	r3, r0, #1
 802bcd6:	d00a      	beq.n	802bcee <__swsetup_r+0x9e>
 802bcd8:	2300      	movs	r3, #0
 802bcda:	60a3      	str	r3, [r4, #8]
 802bcdc:	6963      	ldr	r3, [r4, #20]
 802bcde:	425b      	negs	r3, r3
 802bce0:	61a3      	str	r3, [r4, #24]
 802bce2:	6923      	ldr	r3, [r4, #16]
 802bce4:	b943      	cbnz	r3, 802bcf8 <__swsetup_r+0xa8>
 802bce6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802bcea:	d1c4      	bne.n	802bc76 <__swsetup_r+0x26>
 802bcec:	bd38      	pop	{r3, r4, r5, pc}
 802bcee:	0781      	lsls	r1, r0, #30
 802bcf0:	bf58      	it	pl
 802bcf2:	6963      	ldrpl	r3, [r4, #20]
 802bcf4:	60a3      	str	r3, [r4, #8]
 802bcf6:	e7f4      	b.n	802bce2 <__swsetup_r+0x92>
 802bcf8:	2000      	movs	r0, #0
 802bcfa:	e7f7      	b.n	802bcec <__swsetup_r+0x9c>
 802bcfc:	20000160 	.word	0x20000160

0802bd00 <__swhatbuf_r>:
 802bd00:	b570      	push	{r4, r5, r6, lr}
 802bd02:	460c      	mov	r4, r1
 802bd04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bd08:	2900      	cmp	r1, #0
 802bd0a:	b096      	sub	sp, #88	; 0x58
 802bd0c:	4615      	mov	r5, r2
 802bd0e:	461e      	mov	r6, r3
 802bd10:	da0d      	bge.n	802bd2e <__swhatbuf_r+0x2e>
 802bd12:	89a3      	ldrh	r3, [r4, #12]
 802bd14:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bd18:	f04f 0100 	mov.w	r1, #0
 802bd1c:	bf0c      	ite	eq
 802bd1e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bd22:	2340      	movne	r3, #64	; 0x40
 802bd24:	2000      	movs	r0, #0
 802bd26:	6031      	str	r1, [r6, #0]
 802bd28:	602b      	str	r3, [r5, #0]
 802bd2a:	b016      	add	sp, #88	; 0x58
 802bd2c:	bd70      	pop	{r4, r5, r6, pc}
 802bd2e:	466a      	mov	r2, sp
 802bd30:	f000 f848 	bl	802bdc4 <_fstat_r>
 802bd34:	2800      	cmp	r0, #0
 802bd36:	dbec      	blt.n	802bd12 <__swhatbuf_r+0x12>
 802bd38:	9901      	ldr	r1, [sp, #4]
 802bd3a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bd3e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bd42:	4259      	negs	r1, r3
 802bd44:	4159      	adcs	r1, r3
 802bd46:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bd4a:	e7eb      	b.n	802bd24 <__swhatbuf_r+0x24>

0802bd4c <__smakebuf_r>:
 802bd4c:	898b      	ldrh	r3, [r1, #12]
 802bd4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bd50:	079d      	lsls	r5, r3, #30
 802bd52:	4606      	mov	r6, r0
 802bd54:	460c      	mov	r4, r1
 802bd56:	d507      	bpl.n	802bd68 <__smakebuf_r+0x1c>
 802bd58:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bd5c:	6023      	str	r3, [r4, #0]
 802bd5e:	6123      	str	r3, [r4, #16]
 802bd60:	2301      	movs	r3, #1
 802bd62:	6163      	str	r3, [r4, #20]
 802bd64:	b002      	add	sp, #8
 802bd66:	bd70      	pop	{r4, r5, r6, pc}
 802bd68:	ab01      	add	r3, sp, #4
 802bd6a:	466a      	mov	r2, sp
 802bd6c:	f7ff ffc8 	bl	802bd00 <__swhatbuf_r>
 802bd70:	9900      	ldr	r1, [sp, #0]
 802bd72:	4605      	mov	r5, r0
 802bd74:	4630      	mov	r0, r6
 802bd76:	f7ff f81b 	bl	802adb0 <_malloc_r>
 802bd7a:	b948      	cbnz	r0, 802bd90 <__smakebuf_r+0x44>
 802bd7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bd80:	059a      	lsls	r2, r3, #22
 802bd82:	d4ef      	bmi.n	802bd64 <__smakebuf_r+0x18>
 802bd84:	f023 0303 	bic.w	r3, r3, #3
 802bd88:	f043 0302 	orr.w	r3, r3, #2
 802bd8c:	81a3      	strh	r3, [r4, #12]
 802bd8e:	e7e3      	b.n	802bd58 <__smakebuf_r+0xc>
 802bd90:	89a3      	ldrh	r3, [r4, #12]
 802bd92:	6020      	str	r0, [r4, #0]
 802bd94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bd98:	81a3      	strh	r3, [r4, #12]
 802bd9a:	9b00      	ldr	r3, [sp, #0]
 802bd9c:	6163      	str	r3, [r4, #20]
 802bd9e:	9b01      	ldr	r3, [sp, #4]
 802bda0:	6120      	str	r0, [r4, #16]
 802bda2:	b15b      	cbz	r3, 802bdbc <__smakebuf_r+0x70>
 802bda4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bda8:	4630      	mov	r0, r6
 802bdaa:	f000 f81d 	bl	802bde8 <_isatty_r>
 802bdae:	b128      	cbz	r0, 802bdbc <__smakebuf_r+0x70>
 802bdb0:	89a3      	ldrh	r3, [r4, #12]
 802bdb2:	f023 0303 	bic.w	r3, r3, #3
 802bdb6:	f043 0301 	orr.w	r3, r3, #1
 802bdba:	81a3      	strh	r3, [r4, #12]
 802bdbc:	89a3      	ldrh	r3, [r4, #12]
 802bdbe:	431d      	orrs	r5, r3
 802bdc0:	81a5      	strh	r5, [r4, #12]
 802bdc2:	e7cf      	b.n	802bd64 <__smakebuf_r+0x18>

0802bdc4 <_fstat_r>:
 802bdc4:	b538      	push	{r3, r4, r5, lr}
 802bdc6:	4d07      	ldr	r5, [pc, #28]	; (802bde4 <_fstat_r+0x20>)
 802bdc8:	2300      	movs	r3, #0
 802bdca:	4604      	mov	r4, r0
 802bdcc:	4608      	mov	r0, r1
 802bdce:	4611      	mov	r1, r2
 802bdd0:	602b      	str	r3, [r5, #0]
 802bdd2:	f7d5 fd6d 	bl	80018b0 <_fstat>
 802bdd6:	1c43      	adds	r3, r0, #1
 802bdd8:	d102      	bne.n	802bde0 <_fstat_r+0x1c>
 802bdda:	682b      	ldr	r3, [r5, #0]
 802bddc:	b103      	cbz	r3, 802bde0 <_fstat_r+0x1c>
 802bdde:	6023      	str	r3, [r4, #0]
 802bde0:	bd38      	pop	{r3, r4, r5, pc}
 802bde2:	bf00      	nop
 802bde4:	20013edc 	.word	0x20013edc

0802bde8 <_isatty_r>:
 802bde8:	b538      	push	{r3, r4, r5, lr}
 802bdea:	4d06      	ldr	r5, [pc, #24]	; (802be04 <_isatty_r+0x1c>)
 802bdec:	2300      	movs	r3, #0
 802bdee:	4604      	mov	r4, r0
 802bdf0:	4608      	mov	r0, r1
 802bdf2:	602b      	str	r3, [r5, #0]
 802bdf4:	f7d5 fd62 	bl	80018bc <_isatty>
 802bdf8:	1c43      	adds	r3, r0, #1
 802bdfa:	d102      	bne.n	802be02 <_isatty_r+0x1a>
 802bdfc:	682b      	ldr	r3, [r5, #0]
 802bdfe:	b103      	cbz	r3, 802be02 <_isatty_r+0x1a>
 802be00:	6023      	str	r3, [r4, #0]
 802be02:	bd38      	pop	{r3, r4, r5, pc}
 802be04:	20013edc 	.word	0x20013edc

0802be08 <_init>:
 802be08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802be0a:	bf00      	nop
 802be0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802be0e:	bc08      	pop	{r3}
 802be10:	469e      	mov	lr, r3
 802be12:	4770      	bx	lr

0802be14 <_fini>:
 802be14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802be16:	bf00      	nop
 802be18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802be1a:	bc08      	pop	{r3}
 802be1c:	469e      	mov	lr, r3
 802be1e:	4770      	bx	lr
